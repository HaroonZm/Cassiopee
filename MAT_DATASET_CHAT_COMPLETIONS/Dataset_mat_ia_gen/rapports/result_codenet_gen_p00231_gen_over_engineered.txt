================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:20:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Bridge:
    MAX_LOAD = 150

    def __init__(self):
        self._people = []
        self._events = []

    def add_person(self, person):
        self._people.append(person)

    def _collect_events(self):
        self._events.clear()
        for person in self._people:
            self._events.append(Event(person.start_time, Event.Type.ENTER, person.weight))
            self._events.append(Event(person.end_time, Event.Type.LEAVE, person.weight))
        self._events.sort()

    def is_safe(self):
        self._collect_events()
        current_weight = 0
        for event in self._events:
            if event.type == Event.Type.ENTER:
                current_weight += event.weight
                if current_weight > Bridge.MAX_LOAD:
                    return False
            elif event.type == Event.Type.LEAVE:
                current_weight -= event.weight
        return True


class Person:
    def __init__(self, weight, start_time, end_time):
        self.weight = weight
        self.start_time = start_time
        self.end_time = end_time


class Event:
    class Type:
        ENTER = 1
        LEAVE = 2

    def __init__(self, time, event_type, weight):
        self.time = time
        self.type = event_type
        self.weight = weight

    def __lt__(self, other):
        if self.time == other.time:
            # LEAVE events before ENTER events to avoid immediate overload at boundary
            return self.type < other.type
        return self.time < other.time


class InputParser:
    def __init__(self, input_source):
        self._input_source = input_source

    def __iter__(self):
        return self

    def __next__(self):
        line = self._input_source.readline()
        while line and line.strip() == '':
            line = self._input_source.readline()

        if not line:
            raise StopIteration

        n = int(line.strip())
        if n == 0:
            raise StopIteration

        bridge = Bridge()
        for _ in range(n):
            parts = []
            while len(parts) < 3:
                parts += self._input_source.readline().strip().split()
            weight, start, end = map(int, parts[:3])
            person = Person(weight, start, end)
            bridge.add_person(person)
        return bridge


def main():
    import sys
    parser = InputParser(sys.stdin)
    for bridge in parser:
        print("OK" if bridge.is_safe() else "NG")


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bridge' (ID: 28239)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3121010661125183
    2. '```' → logprob: -1.687101125717163
    3. '(' → logprob: -2.937101125717163
    4. '   ' → logprob: -3.937101125717163
    5. ':
' → logprob: -5.937100887298584
    6. '\' → logprob: -6.687100887298584
    7. '.' → logprob: -6.687100887298584
    8. ''' → logprob: -6.812100887298584
    9. '``' → logprob: -6.812100887298584
    10. '():' → logprob: -6.937100887298584

Token 4: ' MAX' (ID: 16960)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28813913464546204
    2. '    ' → logprob: -2.0381391048431396
    3. '_' → logprob: -3.7881391048431396
    4. '   ' → logprob: -3.7881391048431396
    5. '```' → logprob: -4.163139343261719
    6. ' def' → logprob: -4.663139343261719
    7. ' 
' → logprob: -4.788139343261719
    8. ' pass' → logprob: -5.038139343261719
    9. ''' → logprob: -5.538139343261719
    10. '\' → logprob: -5.538139343261719

Token 5: '_LOAD' (ID: 57755)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023624762892723083
    2. '_SIZE' → logprob: -4.898624897003174
    3. '_CAP' → logprob: -4.898624897003174
    4. ' _' → logprob: -5.648624897003174
    5. '_VALUE' → logprob: -6.523624897003174
    6. '_LENGTH' → logprob: -7.648624897003174
    7. '_COUNT' → logprob: -7.773624897003174
    8. '_NAME' → logprob: -8.523624420166016
    9. '_CHAR' → logprob: -8.898624420166016
    10. '_TOKEN' → logprob: -8.898624420166016

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0194886215031147
    2. '=' → logprob: -4.01948881149292
    3. '_' → logprob: -6.89448881149292
    4. ' ' → logprob: -9.144488334655762
    5. '   ' → logprob: -9.519488334655762
    6. ' _' → logprob: -10.019488334655762
    7. '_CAP' → logprob: -10.144488334655762
    8. '  ' → logprob: -11.144488334655762
    9. '_SPACE' → logprob: -11.644488334655762
    10. '_WEIGHT' → logprob: -11.769488334655762

Token 7: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020635318011045456
    2. '100' → logprob: -3.8956353664398193
    3. '500' → logprob: -10.270635604858398
    4. '10' → logprob: -10.770635604858398
    5. '200' → logprob: -11.395635604858398
    6. '   ' → logprob: -11.645635604858398
    7. ' None' → logprob: -12.145635604858398
    8. '999' → logprob: -12.895635604858398
    9. '900' → logprob: -13.270635604858398
    10. '300' → logprob: -13.270635604858398

Token 8: '150' (ID: 5215)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.005614119116216898
    2. ' ' → logprob: -5.755614280700684
    3. '10' → logprob: -6.130614280700684
    4. '500' → logprob: -8.755614280700684
    5. '   ' → logprob: -10.380614280700684
    6. '50' → logprob: -10.755614280700684
    7. '200' → logprob: -10.880614280700684
    8. '  ' → logprob: -11.380614280700684
    9. '999' → logprob: -11.880614280700684
    10. '5' → logprob: -12.880614280700684

Token 9: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4857405424118042
    2. '\' → logprob: -1.9857405424118042
    3. '\n' → logprob: -2.1107406616210938
    4. '    
' → logprob: -2.2357406616210938
    5. '.' → logprob: -2.6107406616210938
    6. '_' → logprob: -2.7357406616210938
    7. '   ' → logprob: -3.1107406616210938
    8. '  
' → logprob: -3.3607406616210938
    9. '```' → logprob: -3.3607406616210938
    10. '' → logprob: -3.4857406616210938

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6149266958236694
    2. '```' → logprob: -1.4899266958236694
    3. '   ' → logprob: -1.8649266958236694
    4. '.' → logprob: -3.489926815032959
    5. '
' → logprob: -3.739926815032959
    6. '    
' → logprob: -5.364926815032959
    7. '(' → logprob: -5.864926815032959
    8. ':
' → logprob: -5.989926815032959
    9. '\' → logprob: -6.239926815032959
    10. ''' → logprob: -6.239926815032959

Token 11: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25165310502052307
    2. '   ' → logprob: -1.8766530752182007
    3. ' def' → logprob: -2.7516531944274902
    4. ' ' → logprob: -5.75165319442749
    5. '```' → logprob: -6.62665319442749
    6. '_' → logprob: -7.75165319442749
    7. '    ' → logprob: -9.251652717590332
    8. '    
' → logprob: -9.251652717590332
    9. '`' → logprob: -9.751652717590332
    10. 'de' → logprob: -10.001652717590332

Token 12: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5003653168678284
    2. ' ' → logprob: -1.3753652572631836
    3. '__' → logprob: -3.2503652572631836
    4. ' def' → logprob: -3.2503652572631836
    5. ' is' → logprob: -3.7503652572631836
    6. ' calculate' → logprob: -4.000365257263184
    7. ' load' → logprob: -5.250365257263184
    8. ')' → logprob: -6.250365257263184
    9. ' ' → logprob: -6.375365257263184
    10. ' space' → logprob: -6.500365257263184

Token 13: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. ' init' → logprob: -14.750000953674316
    3. 'ini' → logprob: -15.500000953674316
    4. '_init' → logprob: -18.875
    5. '	init' → logprob: -19.0
    6. 'in' → logprob: -19.75
    7. 'int' → logprob: -20.375
    8. 'i' → logprob: -20.375
    9. 'inite' → logprob: -20.625
    10. 'inti' → logprob: -21.0

Token 14: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.09615772217512131
    2. '__' → logprob: -3.4711577892303467
    3. '(' → logprob: -3.5961577892303467
    4. '(self' → logprob: -3.8461577892303467
    5. '__(
' → logprob: -5.221157550811768
    6. '<|end|>' → logprob: -5.846157550811768
    7. '_' → logprob: -7.221157550811768
    8. ' (' → logprob: -7.596157550811768
    9. '_(' → logprob: -7.846157550811768
    10. 'self' → logprob: -7.846157550811768

Token 15: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009118211455643177
    2. ' self' → logprob: -7.000911712646484
    3. ')' → logprob: -15.125911712646484
    4. '       ' → logprob: -17.500911712646484
    5. '	self' → logprob: -17.500911712646484
    6. '(self' → logprob: -18.000911712646484
    7. '   ' → logprob: -18.125911712646484
    8. ' ' → logprob: -18.375911712646484
    9. ',self' → logprob: -18.375911712646484
    10. '0' → logprob: -19.750911712646484

Token 16: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00834080670028925
    2. 'self' → logprob: -5.008340835571289
    3. ')' → logprob: -7.133340835571289
    4. ' ,' → logprob: -7.883340835571289
    5. ',self' → logprob: -8.633340835571289
    6. '<|end|>' → logprob: -8.883340835571289
    7. '):' → logprob: -9.758340835571289
    8. ' self' → logprob: -11.008340835571289
    9. '<|end|>' → logprob: -11.008340835571289
    10. '_self' → logprob: -11.383340835571289

Token 17: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6294242143630981
    2. 'self' → logprob: -1.0044242143630981
    3. '       ' → logprob: -2.3794240951538086
    4. '   ' → logprob: -5.754424095153809
    5. '(self' → logprob: -6.504424095153809
    6. ',' → logprob: -6.754424095153809
    7. '    ' → logprob: -7.129424095153809
    8. '```' → logprob: -7.754424095153809
    9. '<|end|>' → logprob: -8.629424095153809
    10. ' ' → logprob: -8.629424095153809

Token 18: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.47874778509140015
    2. '       ' → logprob: -1.228747844696045
    3. ' self' → logprob: -2.478747844696045
    4. '   ' → logprob: -6.478747844696045
    5. 'pass' → logprob: -6.478747844696045
    6. ' pass' → logprob: -7.478747844696045
    7. ' ' → logprob: -9.228747367858887
    8. '```' → logprob: -9.603747367858887
    9. '(self' → logprob: -10.103747367858887
    10. ' super' → logprob: -11.228747367858887

Token 19: '._' (ID: 2697)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.5941993594169617
    2. '._' → logprob: -1.5941994190216064
    3. '.load' → logprob: -2.0941994190216064
    4. '.' → logprob: -3.5941994190216064
    5. '_load' → logprob: -3.5941994190216064
    6. '.weight' → logprob: -3.5941994190216064
    7. '.loads' → logprob: -4.969199180603027
    8. '.capacity' → logprob: -4.969199180603027
    9. 'current' → logprob: -5.469199180603027
    10. '.max' → logprob: -5.844199180603027

Token 20: 'people' (ID: 28963)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1439281702041626
    2. 'weight' → logprob: -1.1439281702041626
    3. 'current' → logprob: -1.3939281702041626
    4. 'load' → logprob: -2.518928050994873
    5. 'length' → logprob: -4.018928050994873
    6. 'cars' → logprob: -5.143928050994873
    7. 'vehicles' → logprob: -5.268928050994873
    8. 'capacity' → logprob: -6.393928050994873
    9. 'traffic' → logprob: -7.518928050994873
    10. 'weights' → logprob: -7.518928050994873

Token 21: ' =' (ID: 314)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.1231221929192543
    2. ' =' → logprob: -2.498122215270996
    3. '=' → logprob: -4.373122215270996
    4. '_load' → logprob: -4.998122215270996
    5. '_' → logprob: -5.248122215270996
    6. '_loaded' → logprob: -6.248122215270996
    7. '_count' → logprob: -6.248122215270996
    8. '=[]' → logprob: -7.248122215270996
    9. '<|end|>' → logprob: -7.373122215270996
    10. 'on' → logprob: -7.873122215270996

Token 22: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5937185883522034
    2. ' []' → logprob: -0.9687185883522034
    3. '0' → logprob: -3.2187185287475586
    4. ' ' → logprob: -3.5937185287475586
    5. ' set' → logprob: -8.093718528747559
    6. 'set' → logprob: -8.593718528747559
    7. '[]}' → logprob: -10.343718528747559
    8. '{}' → logprob: -10.468718528747559
    9. ' {}' → logprob: -10.468718528747559
    10. '[' → logprob: -10.843718528747559

Token 23: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39136117696762085
    2. '   ' → logprob: -1.6413612365722656
    3. '    
' → logprob: -3.1413612365722656
    4. ' 
' → logprob: -3.5163612365722656
    5. '  
' → logprob: -4.391361236572266
    6. 'def' → logprob: -4.766361236572266
    7. '<|end|>' → logprob: -4.766361236572266
    8. ' ' → logprob: -5.266361236572266
    9. '```' → logprob: -5.516361236572266
    10. '' → logprob: -5.516361236572266

Token 24: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7912686467170715
    2. '
' → logprob: -1.4162685871124268
    3. 'def' → logprob: -2.2912685871124268
    4. ' 
' → logprob: -2.4162685871124268
    5. '    
' → logprob: -2.7912685871124268
    6. '<|end|>' → logprob: -3.9162685871124268
    7. ' def' → logprob: -4.291268825531006
    8. '        
' → logprob: -5.416268825531006
    9. ' ' → logprob: -5.791268825531006
    10. '       ' → logprob: -6.041268825531006

Token 25: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.35058385133743286
    2. '.' → logprob: -1.225583791732788
    3. '.load' → logprob: -6.975584030151367
    4. '.max' → logprob: -8.350584030151367
    5. '.capacity' → logprob: -8.475584030151367
    6. '.is' → logprob: -8.975584030151367
    7. ' .' → logprob: -9.100584030151367
    8. '.current' → logprob: -9.600584030151367
    9. '.__' → logprob: -10.100584030151367
    10. '.MAX' → logprob: -10.225584030151367

Token 26: 'events' (ID: 25303)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.3723451793193817
    2. 'max' → logprob: -1.622345209121704
    3. 'load' → logprob: -3.122345209121704
    4. 'weights' → logprob: -3.497345209121704
    5. 'current' → logprob: -4.122344970703125
    6. 'total' → logprob: -4.997344970703125
    7. 'capacity' → logprob: -5.747344970703125
    8. 'length' → logprob: -6.122344970703125
    9. 'cars' → logprob: -6.497344970703125
    10. 'vehicles' → logprob: -6.747344970703125

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35151466727256775
    2. '=' → logprob: -1.2265146970748901
    3. '.' → logprob: -6.47651481628418
    4. ')' → logprob: -7.35151481628418
    5. '[' → logprob: -8.22651481628418
    6. '<|end|>' → logprob: -8.35151481628418
    7. ' ' → logprob: -9.60151481628418
    8. '   ' → logprob: -9.85151481628418
    9. '_' → logprob: -9.97651481628418
    10. ',' → logprob: -9.97651481628418

Token 28: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02332933433353901
    2. ' []' → logprob: -3.773329257965088
    3. '{}' → logprob: -9.898329734802246
    4. '[]
' → logprob: -11.023329734802246
    5. '[]}' → logprob: -12.023329734802246
    6. ' ' → logprob: -12.648329734802246
    7. '[' → logprob: -12.773329734802246
    8. '   ' → logprob: -13.523329734802246
    9. '[]>' → logprob: -13.898329734802246
    10. ' {}' → logprob: -13.898329734802246

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4801601767539978
    2. 'def' → logprob: -1.3551602363586426
    3. '    
' → logprob: -2.9801602363586426
    4. '
' → logprob: -3.3551602363586426
    5. ' def' → logprob: -3.9801602363586426
    6. ' 
' → logprob: -5.355160236358643
    7. '```' → logprob: -5.355160236358643
    8. '<|end|>' → logprob: -6.105160236358643
    9. '  
' → logprob: -6.480160236358643
    10. '	def' → logprob: -6.605160236358643

Token 30: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0059149316512048244
    2. '   ' → logprob: -5.25591516494751
    3. ' def' → logprob: -7.38091516494751
    4. 'd' → logprob: -9.880914688110352
    5. '    
' → logprob: -12.880914688110352
    6. 'de' → logprob: -13.380914688110352
    7. '	def' → logprob: -14.005914688110352
    8. ' 
' → logprob: -14.755914688110352
    9. '```' → logprob: -14.880914688110352
    10. '@' → logprob: -14.880914688110352

Token 31: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.00454226927831769
    2. ' can' → logprob: -6.754542350769043
    3. ' load' → logprob: -6.754542350769043
    4. ' is' → logprob: -6.879542350769043
    5. ' append' → logprob: -7.254542350769043
    6. ' get' → logprob: -8.879542350769043
    7. ' space' → logprob: -9.504542350769043
    8. 'add' → logprob: -9.504542350769043
    9. ' allow' → logprob: -10.129542350769043
    10. '_add' → logprob: -10.629542350769043

Token 32: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.04529813677072525
    2. '_' → logprob: -3.4202980995178223
    3. '_people' → logprob: -4.545298099517822
    4. '_p' → logprob: -8.17029857635498
    5. '_pass' → logprob: -8.42029857635498
    6. '_car' → logprob: -9.54529857635498
    7. '_bridge' → logprob: -9.54529857635498
    8. '_user' → logprob: -9.79529857635498
    9. '_load' → logprob: -9.92029857635498
    10. '_vehicle' → logprob: -10.29529857635498

Token 33: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08052927255630493
    2. '(self' → logprob: -2.58052921295166
    3. ' (' → logprob: -7.08052921295166
    4. '(s' → logprob: -8.33052921295166
    5. '   ' → logprob: -9.08052921295166
    6. ')' → logprob: -9.20552921295166
    7. 's' → logprob: -9.45552921295166
    8. '<|end|>' → logprob: -9.83052921295166
    9. '(
' → logprob: -9.95552921295166
    10. '_' → logprob: -10.45552921295166

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012622561771422625
    2. ' ,' → logprob: -6.751262187957764
    3. 'self' → logprob: -9.876262664794922
    4. '_person' → logprob: -11.126262664794922
    5. '):' → logprob: -12.376262664794922
    6. ',p' → logprob: -12.626262664794922
    7. ',self' → logprob: -12.876262664794922
    8. 's' → logprob: -12.876262664794922
    9. 'person' → logprob: -12.876262664794922
    10. ')' → logprob: -13.001262664794922

Token 35: ' person' (ID: 1647)
  Prédit: ' person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' person' → logprob: -0.007611720357090235
    2. 'person' → logprob: -5.0076117515563965
    3. ' name' → logprob: -7.2576117515563965
    4. 'name' → logprob: -8.632611274719238
    5. '	person' → logprob: -12.507611274719238
    6. ')' → logprob: -13.007611274719238
    7. 'self' → logprob: -13.632611274719238
    8. ' self' → logprob: -13.757611274719238
    9. ' Person' → logprob: -14.007611274719238
    10. '   ' → logprob: -14.257611274719238

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000329386442899704
    2. ')' → logprob: -8.37532901763916
    3. '):
' → logprob: -9.62532901763916
    4. ',' → logprob: -11.12532901763916
    5. ' ):' → logprob: -11.62532901763916
    6. ':' → logprob: -12.37532901763916
    7. '   ' → logprob: -12.75032901763916
    8. '):
' → logprob: -14.25032901763916
    9. '       ' → logprob: -14.75032901763916
    10. ' ' → logprob: -15.00032901763916

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22893595695495605
    2. ')' → logprob: -3.103935956954956
    3. '    ' → logprob: -3.478935956954956
    4. '<|end|>' → logprob: -3.478935956954956
    5. ' ' → logprob: -3.853935956954956
    6. '        ' → logprob: -4.353936195373535
    7. '(' → logprob: -4.353936195373535
    8. ':' → logprob: -4.603936195373535
    9. '):' → logprob: -4.603936195373535
    10. '\' → logprob: -5.228936195373535

Token 38: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.22797764837741852
    2. 'self' (adapté à ' self') → logprob: -2.102977752685547
    3. '       ' → logprob: -2.602977752685547
    4. ')' → logprob: -6.227977752685547
    5. '```' → logprob: -6.852977752685547
    6. ' 
' → logprob: -7.227977752685547
    7. ' )' → logprob: -7.602977752685547
    8. ' ' → logprob: -7.727977752685547
    9. '        
' → logprob: -7.727977752685547
    10. ' if' → logprob: -8.102977752685547

Token 39: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00030424181022681296
    2. '.' → logprob: -8.125304222106934
    3. ' .' → logprob: -12.250304222106934
    4. ')._' → logprob: -13.375304222106934
    5. ']._' → logprob: -14.375304222106934
    6. '.__' → logprob: -15.000304222106934
    7. '.add' → logprob: -15.125304222106934
    8. '."""' → logprob: -16.00030517578125
    9. '.<' → logprob: -16.87530517578125
    10. '.user' → logprob: -16.87530517578125

Token 40: 'people' (ID: 28963)
  Prédit: 'people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'people' → logprob: -0.00011248346709180623
    2. '_people' → logprob: -9.125112533569336
    3. 'persons' → logprob: -13.875112533569336
    4. '.people' → logprob: -13.875112533569336
    5. 'person' → logprob: -14.250112533569336
    6. 'p' → logprob: -14.875112533569336
    7. ' people' → logprob: -15.750112533569336
    8. 'events' → logprob: -15.875112533569336
    9. 'pe' → logprob: -16.625112533569336
    10. '_' → logprob: -16.625112533569336

Token 41: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.038065019994974136
    2. '.' → logprob: -3.288064956665039
    3. ' .' → logprob: -10.913064956665039
    4. '.add' → logprob: -12.913064956665039
    5. '.extend' → logprob: -13.663064956665039
    6. ').' → logprob: -14.538064956665039
    7. 'append' → logprob: -14.788064956665039
    8. '.setdefault' → logprob: -15.663064956665039
    9. '.push' → logprob: -15.788064956665039
    10. '.app' → logprob: -16.03806495666504

Token 42: '(person' (ID: 53617)
  Prédit: '(person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(person' → logprob: -0.47408363223075867
    2. '(' → logprob: -0.974083662033081
    3. '(Person' → logprob: -12.97408390045166
    4. '(
' → logprob: -14.09908390045166
    5. '(

' → logprob: -14.34908390045166
    6. ' (' → logprob: -14.97408390045166
    7. ' person' → logprob: -15.09908390045166
    8. '(p' → logprob: -15.09908390045166
    9. 'person' → logprob: -15.09908390045166
    10. '(patient' → logprob: -15.34908390045166

Token 43: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011534435179783031
    2. ')
' → logprob: -9.375115394592285
    3. ' )' → logprob: -10.500115394592285
    4. ')

' → logprob: -14.625115394592285
    5. '   ' → logprob: -15.125115394592285
    6. '<|end|>' → logprob: -15.125115394592285
    7. ')return' → logprob: -15.250115394592285
    8. '.' → logprob: -15.250115394592285
    9. ')\' → logprob: -16.12511444091797
    10. '#' → logprob: -16.12511444091797

Token 44: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16905122995376587
    2. '   ' → logprob: -2.044051170349121
    3. '```' → logprob: -4.169051170349121
    4. ' def' → logprob: -4.794051170349121
    5. '
' → logprob: -6.919051170349121
    6. '    
' → logprob: -7.294051170349121
    7. ' ' → logprob: -8.669051170349121
    8. ' 
' → logprob: -8.919051170349121
    9. '\' → logprob: -9.669051170349121
    10. '	def' → logprob: -10.044051170349121

Token 46: ' _' (ID: 1175)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.22686101496219635
    2. ' def' → logprob: -1.9768610000610352
    3. ' remove' → logprob: -3.226861000061035
    4. ' get' → logprob: -4.726861000061035
    5. 'def' → logprob: -5.351861000061035
    6. 'add' → logprob: -5.726861000061035
    7. ' load' → logprob: -5.976861000061035
    8. ' can' → logprob: -6.226861000061035
    9. ' is' → logprob: -7.101861000061035
    10. 'remove' → logprob: -7.726861000061035

Token 47: 'collect' (ID: 25670)
  Prédit: 'record'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'record' → logprob: -1.172156810760498
    2. 'can' → logprob: -1.297156810760498
    3. 'add' → logprob: -1.672156810760498
    4. 'notify' → logprob: -2.422156810760498
    5. 'log' → logprob: -3.672156810760498
    6. 'is' → logprob: -3.672156810760498
    7. 'check' → logprob: -3.922156810760498
    8. 'trigger' → logprob: -4.297156810760498
    9. '_record' → logprob: -5.422156810760498
    10. 'raise' → logprob: -5.422156810760498

Token 48: '_events' (ID: 46626)
  Prédit: '_load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_load' → logprob: -0.9485771059989929
    2. '_events' → logprob: -1.3235771656036377
    3. '_' → logprob: -1.4485771656036377
    4. '_people' → logprob: -2.9485771656036377
    5. '_event' → logprob: -3.3235771656036377
    6. '_bridge' → logprob: -5.823576927185059
    7. '_person' → logprob: -5.948576927185059
    8. '_p' → logprob: -6.198576927185059
    9. '_pass' → logprob: -6.323576927185059
    10. '_weights' → logprob: -6.948576927185059

Token 49: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.058898162096738815
    2. '(self' → logprob: -2.9338982105255127
    3. '<|end|>' → logprob: -6.558897972106934
    4. ' (' → logprob: -7.433897972106934
    5. '```' → logprob: -8.058897972106934
    6. '(
' → logprob: -8.058897972106934
    7. '("("' → logprob: -8.183897972106934
    8. '   ' → logprob: -8.308897972106934
    9. '()' → logprob: -8.558897972106934
    10. '_' → logprob: -8.683897972106934

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020621151197701693
    2. ')' → logprob: -6.6270623207092285
    3. ',' → logprob: -7.7520623207092285
    4. ' ):' → logprob: -9.25206184387207
    5. '):
' → logprob: -9.50206184387207
    6. 'self' → logprob: -9.50206184387207
    7. ':' → logprob: -10.75206184387207
    8. '():' → logprob: -11.00206184387207
    9. 'def' → logprob: -12.12706184387207
    10. '   ' → logprob: -12.87706184387207

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008820459479466081
    2. '   ' → logprob: -8.750882148742676
    3. ' for' → logprob: -8.875882148742676
    4. '<|end|>' → logprob: -8.875882148742676
    5. 'for' → logprob: -9.625882148742676
    6. '        
' → logprob: -10.125882148742676
    7. ':' → logprob: -10.250882148742676
    8. '    ' → logprob: -10.250882148742676
    9. 'return' → logprob: -10.375882148742676
    10. 'pass' → logprob: -10.625882148742676

Token 52: ' self' (ID: 1051)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -1.5169909000396729
    2. ' for' → logprob: -1.8919909000396729
    3. 'return' → logprob: -1.8919909000396729
    4. '       ' → logprob: -2.141990900039673
    5. 'for' → logprob: -2.141990900039673
    6. ' pass' → logprob: -2.766990900039673
    7. ' events' → logprob: -2.766990900039673
    8. ' return' → logprob: -3.016990900039673
    9. 'pass' → logprob: -3.141990900039673
    10. 'self' (adapté à ' self') → logprob: -4.391990661621094

Token 53: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.006186995189636946
    2. '.' → logprob: -5.1311869621276855
    3. ' .' → logprob: -8.381187438964844
    4. ')._' → logprob: -10.756187438964844
    5. ']._' → logprob: -12.631187438964844
    6. '.__' → logprob: -13.631187438964844
    7. '."""' → logprob: -14.381187438964844
    8. '.​' → logprob: -14.756187438964844
    9. '.

' → logprob: -15.131187438964844
    10. '."_' → logprob: -15.631187438964844

Token 54: 'events' (ID: 25303)
  Prédit: 'events'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -9.531813702778891e-05
    2. 'people' → logprob: -9.75009536743164
    3. '_events' → logprob: -10.37509536743164
    4. '_' → logprob: -13.25009536743164
    5. 'event' → logprob: -13.37509536743164
    6. '.events' → logprob: -14.00009536743164
    7. ' events' → logprob: -14.75009536743164
    8. 'collect' → logprob: -15.12509536743164
    9. '(events' → logprob: -15.50009536743164
    10. '_people' → logprob: -16.50009536743164

Token 55: '.clear' (ID: 13562)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.613872230052948
    2. '.append' → logprob: -1.1138722896575928
    3. '.' → logprob: -2.2388722896575928
    4. '.clear' → logprob: -3.7388722896575928
    5. ' .' → logprob: -10.988872528076172
    6. ' +=' → logprob: -11.113872528076172
    7. ' =' → logprob: -11.363872528076172
    8. '[:]' → logprob: -11.488872528076172
    9. '.=' → logprob: -11.738872528076172
    10. '.setdefault' → logprob: -11.738872528076172

Token 56: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.643152740551159e-05
    2. '()
' → logprob: -10.500036239624023
    3. '(' → logprob: -12.000036239624023
    4. '()

' → logprob: -13.750036239624023
    5. '()
' → logprob: -14.875036239624023
    6. ' ()' → logprob: -15.000036239624023
    7. '()`' → logprob: -15.125036239624023
    8. '()\' → logprob: -15.500036239624023
    9. ')' → logprob: -16.000036239624023
    10. '();' → logprob: -16.250036239624023

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005339893512427807
    2. '<|end|>' → logprob: -5.630340099334717
    3. ' for' → logprob: -7.005340099334717
    4. '
' → logprob: -7.630340099334717
    5. '   ' → logprob: -9.005339622497559
    6. 'for' → logprob: -10.255339622497559
    7. '<|end|>' → logprob: -10.255339622497559
    8. '```' → logprob: -10.880339622497559
    9. '()' → logprob: -11.005339622497559
    10. '        
' → logprob: -11.005339622497559

Token 58: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2023368626832962
    2. 'for' (adapté à ' for') → logprob: -1.7023369073867798
    3. '       ' → logprob: -8.077337265014648
    4. ' current' → logprob: -8.077337265014648
    5. 'current' → logprob: -9.327337265014648
    6. ' load' → logprob: -9.702337265014648
    7. ' total' → logprob: -10.077337265014648
    8. 'total' → logprob: -10.577337265014648
    9. '   ' → logprob: -10.952337265014648
    10. ' capacity' → logprob: -11.452337265014648

Token 59: ' person' (ID: 1647)
  Prédit: ' person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' person' → logprob: -0.015290563926100731
    2. ' p' → logprob: -4.2652907371521
    3. ' event' → logprob: -7.6402907371521
    4. 'person' → logprob: -8.265290260314941
    5. ' self' → logprob: -9.140290260314941
    6. ' i' → logprob: -9.640290260314941
    7. '   ' → logprob: -9.765290260314941
    8. ' _' → logprob: -9.890290260314941
    9. ' ' → logprob: -10.140290260314941
    10. 'p' → logprob: -11.015290260314941

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006756199873052537
    2. 'in' → logprob: -7.375675678253174
    3. 's' → logprob: -10.375675201416016
    4. ' ' → logprob: -12.125675201416016
    5. '<|end|>' → logprob: -13.000675201416016
    6. '_in' → logprob: -13.125675201416016
    7. '   ' → logprob: -13.500675201416016
    8. '_' → logprob: -14.063175201416016
    9. ',' → logprob: -14.188175201416016
    10. '	in' → logprob: -14.250675201416016

Token 61: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0040835049003362656
    2. 'self' → logprob: -5.504083633422852
    3. ' ' → logprob: -12.754083633422852
    4. '	self' → logprob: -14.129083633422852
    5. ' ' → logprob: -14.629083633422852
    6. '(self' → logprob: -15.504083633422852
    7. '_self' → logprob: -16.12908363342285
    8. '<|end|>' → logprob: -16.44158363342285
    9. ' the' → logprob: -16.50408363342285
    10. '   ' → logprob: -16.75408363342285

Token 62: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00021224225929472595
    2. '.' → logprob: -8.625212669372559
    3. ' .' → logprob: -10.750212669372559
    4. 's' → logprob: -12.625212669372559
    5. '   ' → logprob: -12.625212669372559
    6. '       ' → logprob: -13.750212669372559
    7. '_' → logprob: -14.625212669372559
    8. '.__' → logprob: -14.750212669372559
    9. 'self' → logprob: -14.875212669372559
    10. ' ' → logprob: -15.375212669372559

Token 63: 'people' (ID: 28963)
  Prédit: 'people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'people' → logprob: -1.5213274309644476e-05
    2. '_people' → logprob: -11.875015258789062
    3. 'persons' → logprob: -12.375015258789062
    4. 'person' → logprob: -13.750015258789062
    5. '.people' → logprob: -14.000015258789062
    6. ' people' → logprob: -14.500015258789062
    7. 'events' → logprob: -14.750015258789062
    8. 'players' → logprob: -15.125015258789062
    9. 'participants' → logprob: -16.125015258789062
    10. 'pe' → logprob: -16.250015258789062

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007426076103001833
    2. ':
' → logprob: -5.0074262619018555
    3. ' :' → logprob: -8.007426261901855
    4. '.' → logprob: -9.382426261901855
    5. '<|end|>' → logprob: -9.382426261901855
    6. ',' → logprob: -9.632426261901855
    7. '<|end|>' → logprob: -10.507426261901855
    8. '           ' → logprob: -10.507426261901855
    9. ' :
' → logprob: -10.757426261901855
    10. '):' → logprob: -11.132426261901855

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09756340086460114
    2. ':' → logprob: -2.5975635051727295
    3. ':
' → logprob: -4.72256326675415
    4. '            
' → logprob: -6.09756326675415
    5. ' if' → logprob: -6.84756326675415
    6. '   ' → logprob: -7.09756326675415
    7. '       ' → logprob: -7.22256326675415
    8. ' 
' → logprob: -7.59756326675415
    9. '<|end|>' → logprob: -7.59756326675415
    10. '    
' → logprob: -7.59756326675415

Token 66: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.374968022108078
    2. ' for' → logprob: -1.4999680519104004
    3. 'self' (adapté à ' self') → logprob: -2.9999680519104004
    4. '           ' → logprob: -3.7499680519104004
    5. 'for' → logprob: -4.8749680519104
    6. '               ' → logprob: -5.3749680519104
    7. ' if' → logprob: -5.8749680519104
    8. '   ' → logprob: -6.9999680519104
    9. 'if' → logprob: -8.999967575073242
    10. ' ' → logprob: -9.999967575073242

Token 67: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17610347270965576
    2. '._' → logprob: -1.9261034727096558
    3. '.get' → logprob: -5.051103591918945
    4. '.collect' → logprob: -6.676103591918945
    5. '.generate' → logprob: -6.676103591918945
    6. '.add' → logprob: -7.176103591918945
    7. ' .' → logprob: -7.301103591918945
    8. '.perform' → logprob: -7.301103591918945
    9. '.events' → logprob: -7.676103591918945
    10. '.append' → logprob: -7.801103591918945

Token 68: 'events' (ID: 25303)
  Prédit: 'events'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.012943034991621971
    2. 'collect' → logprob: -4.387943267822266
    3. 'append' → logprob: -9.012943267822266
    4. 'people' → logprob: -9.137943267822266
    5. '_collect' → logprob: -9.637943267822266
    6. '_events' → logprob: -9.887943267822266
    7. 'add' → logprob: -11.012943267822266
    8. 'person' → logprob: -11.137943267822266
    9. ' events' → logprob: -11.637943267822266
    10. '(events' → logprob: -11.762943267822266

Token 69: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.018658572807908058
    2. '.' → logprob: -4.018658638000488
    3. '.append' → logprob: -7.643658638000488
    4. ' .' → logprob: -10.643658638000488
    5. 'extend' → logprob: -13.018658638000488
    6. '.ext' → logprob: -13.643658638000488
    7. ' +=' → logprob: -13.643658638000488
    8. '   ' → logprob: -15.518658638000488
    9. '.update' → logprob: -15.518658638000488
    10. '+=' → logprob: -15.768658638000488

Token 70: '(Event' (ID: 53243)
  Prédit: '(person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(person' → logprob: -0.014289495535194874
    2. '(' → logprob: -4.264289379119873
    3. '(
' → logprob: -9.889289855957031
    4. '((' → logprob: -10.014289855957031
    5. 'person' → logprob: -11.264289855957031
    6. '(Person' → logprob: -12.139289855957031
    7. '(f' → logprob: -12.889289855957031
    8. '('' → logprob: -13.264289855957031
    9. ' (' → logprob: -13.389289855957031
    10. ' person' → logprob: -13.639289855957031

Token 71: '(person' (ID: 53617)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009912028908729553
    2. '(person' → logprob: -4.634912014007568
    3. '(
' → logprob: -9.009912490844727
    4. '(Person' → logprob: -11.509912490844727
    5. '(

' → logprob: -11.509912490844727
    6. ' (' → logprob: -11.884912490844727
    7. ')' → logprob: -13.634912490844727
    8. '('' → logprob: -14.134912490844727
    9. '((' → logprob: -14.509912490844727
    10. '.' → logprob: -14.634912490844727

Token 72: '.start' (ID: 10181)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5424852967262268
    2. '))' → logprob: -1.042485237121582
    3. ')' → logprob: -2.792485237121582
    4. ' ,' → logprob: -6.667485237121582
    5. '.' → logprob: -6.792485237121582
    6. ' ))' → logprob: -7.417485237121582
    7. '.timestamp' → logprob: -8.042485237121582
    8. '.time' → logprob: -8.042485237121582
    9. ' ' → logprob: -8.542485237121582
    10. '   ' → logprob: -8.917485237121582

Token 73: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.005117884837090969
    2. ',' → logprob: -6.005117893218994
    3. '))' → logprob: -7.005117893218994
    4. '_' → logprob: -8.005117416381836
    5. '_location' → logprob: -8.005117416381836
    6. ')' → logprob: -8.505117416381836
    7. '_position' → logprob: -8.755117416381836
    8. 'time' → logprob: -8.755117416381836
    9. '_delay' → logprob: -9.005117416381836
    10. '_speed' → logprob: -9.755117416381836

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013489711098372936
    2. '))' → logprob: -4.638489723205566
    3. ')' → logprob: -5.763489723205566
    4. ' ,' → logprob: -8.388489723205566
    5. '<|end|>' → logprob: -8.888489723205566
    6. ',
' → logprob: -9.263489723205566
    7. '<|end|>' → logprob: -10.513489723205566
    8. '   ' → logprob: -11.388489723205566
    9. '()))' → logprob: -11.513489723205566
    10. '(),' → logprob: -11.513489723205566

Token 75: ' Event' (ID: 6400)
  Prédit: ' person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' person' → logprob: -0.20163552463054657
    2. 'person' → logprob: -1.701635479927063
    3. ')' → logprob: -10.076635360717773
    4. '	person' → logprob: -10.201635360717773
    5. ' ' → logprob: -10.451635360717773
    6. '    ' → logprob: -10.451635360717773
    7. ' ' → logprob: -10.826635360717773
    8. '<|end|>' → logprob: -11.326635360717773
    9. '   ' → logprob: -11.701635360717773
    10. '.person' → logprob: -11.951635360717773

Token 76: '.Type' (ID: 19251)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0794258117675781
    2. '.P' → logprob: -1.8294258117675781
    3. '.TYPE' → logprob: -1.8294258117675781
    4. '.END' → logprob: -2.204425811767578
    5. '.START' → logprob: -2.204425811767578
    6. '.ACTION' → logprob: -3.454425811767578
    7. '.W' → logprob: -4.454425811767578
    8. '.M' → logprob: -4.579425811767578
    9. '.T' → logprob: -4.829425811767578
    10. '.TIME' → logprob: -4.954425811767578

Token 77: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1461775004863739
    2. '.START' → logprob: -3.0211775302886963
    3. '.B' → logprob: -3.2711775302886963
    4. '.W' → logprob: -3.6461775302886963
    5. '.C' → logprob: -4.396177291870117
    6. '.P' → logprob: -5.771177291870117
    7. '.S' → logprob: -6.271177291870117
    8. ' .' → logprob: -6.396177291870117
    9. '.ON' → logprob: -7.271177291870117
    10. '.A' → logprob: -7.521177291870117

Token 78: 'ENTER' (ID: 23127)
  Prédit: 'START'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'START' → logprob: -0.40457719564437866
    2. 'ENTER' → logprob: -1.9045772552490234
    3. 'ARR' → logprob: -2.0295772552490234
    4. 'start' → logprob: -3.7795772552490234
    5. 'W' → logprob: -4.654577255249023
    6. 'BEGIN' → logprob: -5.654577255249023
    7. 'Start' → logprob: -6.404577255249023
    8. 'arr' → logprob: -6.404577255249023
    9. 'JOIN' → logprob: -6.404577255249023
    10. 'enter' → logprob: -6.529577255249023

Token 79: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.32779332995414734
    2. ',' → logprob: -1.3277933597564697
    3. '))
' → logprob: -4.327793121337891
    4. ' ,' → logprob: -8.07779312133789
    5. ' ))' → logprob: -8.32779312133789
    6. ')' → logprob: -8.95279312133789
    7. '))

' → logprob: -9.20279312133789
    8. ' ' → logprob: -9.32779312133789
    9. ')))' → logprob: -9.57779312133789
    10. '   ' → logprob: -9.57779312133789

Token 80: ' person' (ID: 1647)
  Prédit: ' person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' person' → logprob: -0.020629707723855972
    2. 'person' → logprob: -3.895629644393921
    3. ')' → logprob: -10.6456298828125
    4. ' ' → logprob: -10.6456298828125
    5. ' self' → logprob: -11.5206298828125
    6. ' )' → logprob: -11.8956298828125
    7. ' ' → logprob: -12.6456298828125
    8. '	person' → logprob: -12.6456298828125
    9. '    ' → logprob: -12.8956298828125
    10. '   ' → logprob: -13.0206298828125

Token 81: '.weight' (ID: 49415)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.022372491657733917
    2. ' ))' → logprob: -4.522372722625732
    3. '))
' → logprob: -4.647372722625732
    4. ',' → logprob: -7.522372722625732
    5. '   ' → logprob: -8.772372245788574
    6. '       ' → logprob: -8.772372245788574
    7. ' ))
' → logprob: -8.772372245788574
    8. ')))' → logprob: -8.897372245788574
    9. '           ' → logprob: -8.897372245788574
    10. '()))' → logprob: -9.397372245788574

Token 82: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03838536515831947
    2. '))
' → logprob: -3.2883853912353516
    3. '           ' → logprob: -9.413385391235352
    4. ' ))' → logprob: -9.663385391235352
    5. '       ' → logprob: -9.788385391235352
    6. ')' → logprob: -9.788385391235352
    7. ',' → logprob: -10.913385391235352
    8. '))

' → logprob: -10.913385391235352
    9. ')))' → logprob: -11.288385391235352
    10. '()))' → logprob: -12.038385391235352

Token 83: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.062397170811891556
    2. '            
' → logprob: -4.187397003173828
    3. ' if' → logprob: -4.687397003173828
    4. '\n' → logprob: -4.937397003173828
    5. 'self' (adapté à ' self') → logprob: -5.062397003173828
    6. 'Event' → logprob: -5.312397003173828
    7. '               ' → logprob: -6.062397003173828
    8. '       ' → logprob: -6.062397003173828
    9. '
' → logprob: -6.187397003173828
    10. ' 
' → logprob: -6.812397003173828

Token 85: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.020688099786639214
    2. '.' → logprob: -3.895688056945801
    3. '<|end|>' → logprob: -9.7706880569458
    4. '_' → logprob: -10.2706880569458
    5. '<|end|>' → logprob: -11.0206880569458
    6. ' .' → logprob: -11.5206880569458
    7. '.append' → logprob: -12.3956880569458
    8. ')._' → logprob: -12.6456880569458
    9. ']._' → logprob: -12.6456880569458
    10. '.
' → logprob: -12.7706880569458

Token 86: 'events' (ID: 25303)
  Prédit: 'events'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.0002466774603817612
    2. '_events' → logprob: -9.12524700164795
    3. 'collect' → logprob: -10.25024700164795
    4. 'people' → logprob: -10.62524700164795
    5. 'append' → logprob: -10.87524700164795
    6. ' events' → logprob: -11.25024700164795
    7. 'event' → logprob: -11.87524700164795
    8. 'exit' → logprob: -11.87524700164795
    9. 'person' → logprob: -12.12524700164795
    10. 'add' → logprob: -12.12524700164795

Token 87: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.05521849915385246
    2. '.' → logprob: -2.930218458175659
    3. ' .' → logprob: -8.430218696594238
    4. '.extend' → logprob: -10.555218696594238
    5. '<|end|>' → logprob: -10.555218696594238
    6. '.setdefault' → logprob: -10.930218696594238
    7. '.app' → logprob: -11.055218696594238
    8. '.add' → logprob: -11.430218696594238
    9. '.Append' → logprob: -11.555218696594238
    10. ').' → logprob: -13.055218696594238

Token 88: '(Event' (ID: 53243)
  Prédit: '(Event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Event' → logprob: -0.023249788209795952
    2. '(' → logprob: -3.773249864578247
    3. '(E' → logprob: -13.023249626159668
    4. ' (' → logprob: -13.523249626159668
    5. '(EVENT' → logprob: -15.398249626159668
    6. '(event' → logprob: -15.773249626159668
    7. '(
' → logprob: -16.023250579833984
    8. '(events' → logprob: -16.648250579833984
    9. '((' → logprob: -16.898250579833984
    10. '(Editor' → logprob: -17.148250579833984

Token 89: '(person' (ID: 53617)
  Prédit: '(person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(person' → logprob: -0.0003806257154792547
    2. '(' → logprob: -7.875380516052246
    3. '(Person' → logprob: -15.250380516052246
    4. ' (' → logprob: -15.875380516052246
    5. '(player' → logprob: -17.000381469726562
    6. 'person' → logprob: -17.250381469726562
    7. '(p' → logprob: -17.500381469726562
    8. '(patient' → logprob: -17.625381469726562
    9. '	person' → logprob: -17.750381469726562
    10. '(
' → logprob: -18.500381469726562

Token 90: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.5312833189964294
    2. '.person' → logprob: -1.1562833786010742
    3. '.' → logprob: -2.781283378601074
    4. '.finish' → logprob: -3.906283378601074
    5. ' .' → logprob: -4.406283378601074
    6. '(person' → logprob: -6.906283378601074
    7. '.exit' → logprob: -7.281283378601074
    8. '.period' → logprob: -7.531283378601074
    9. '.complete' → logprob: -9.531283378601074
    10. '.p' → logprob: -9.531283378601074

Token 91: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00037478472222574055
    2. '_' → logprob: -8.000374794006348
    3. '_times' → logprob: -10.375374794006348
    4. '_tim' → logprob: -13.625374794006348
    5. ' _' → logprob: -13.750374794006348
    6. '_t' → logprob: -13.750374794006348
    7. ')_' → logprob: -14.000374794006348
    8. '_TIME' → logprob: -14.625374794006348
    9. '<|end|>' → logprob: -14.625374794006348
    10. '_timestamp' → logprob: -14.625374794006348

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001490716531407088
    2. ' ,' → logprob: -8.87514877319336
    3. ')' → logprob: -12.12514877319336
    4. '),' → logprob: -13.37514877319336
    5. '   ' → logprob: -14.50014877319336
    6. 's' → logprob: -15.12514877319336
    7. ' ' → logprob: -15.25014877319336
    8. '<|end|>' → logprob: -15.87514877319336
    9. '‌,' → logprob: -16.25014877319336
    10. '```' → logprob: -16.25014877319336

Token 93: ' Event' (ID: 6400)
  Prédit: ' Event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Event' → logprob: -0.20784081518650055
    2. 'Event' → logprob: -1.7078408002853394
    3. ' ' → logprob: -5.332840919494629
    4. ')' → logprob: -7.582840919494629
    5. '(Event' → logprob: -8.207840919494629
    6. '	Event' → logprob: -8.457840919494629
    7. '.Event' → logprob: -9.207840919494629
    8. '_Event' → logprob: -9.332840919494629
    9. '<|end|>' → logprob: -9.332840919494629
    10. ' ' → logprob: -9.707840919494629

Token 94: '.Type' (ID: 19251)
  Prédit: '.Type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Type' → logprob: -0.020624689757823944
    2. '.' → logprob: -3.8956246376037598
    3. 'Type' → logprob: -11.145625114440918
    4. '.Types' → logprob: -11.395625114440918
    5. ' .' → logprob: -11.520625114440918
    6. '(Type' → logprob: -12.020625114440918
    7. '.Value' → logprob: -12.145625114440918
    8. '<Type' → logprob: -12.395625114440918
    9. ' ' → logprob: -12.645625114440918
    10. '	Type' → logprob: -12.770625114440918

Token 95: '.LE' (ID: 25657)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1894463300704956
    2. '.EXIT' → logprob: -1.9394463300704956
    3. '.LE' → logprob: -3.564446449279785
    4. ' .' → logprob: -9.314446449279785
    5. '.EX' → logprob: -9.689446449279785
    6. '.Le' → logprob: -9.689446449279785
    7. '.END' → logprob: -10.189446449279785
    8. '_EXIT' → logprob: -10.564446449279785
    9. ' ' → logprob: -10.939446449279785
    10. ').' → logprob: -11.064446449279785

Token 96: 'AVE' (ID: 16357)
  Prédit: 'AVE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AVE' → logprob: -0.00034833617974072695
    2. 'AV' → logprob: -8.500348091125488
    3. 'A' → logprob: -8.875348091125488
    4. '
' → logprob: -12.750348091125488
    5. 'VE' → logprob: -14.375348091125488
    6. '_' → logprob: -15.000348091125488
    7. '_A' → logprob: -15.875348091125488
    8. '

' → logprob: -15.875348091125488
    9. '   ' → logprob: -16.375349044799805
    10. '\' → logprob: -16.375349044799805

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5240621566772461
    2. '))' → logprob: -0.8990621566772461
    3. ')' → logprob: -7.649062156677246
    4. ' ,' → logprob: -8.524062156677246
    5. ' ))' → logprob: -9.399062156677246
    6. '))
' → logprob: -9.524062156677246
    7. ')))' → logprob: -10.524062156677246
    8. ' ' → logprob: -11.274062156677246
    9. '),' → logprob: -11.774062156677246
    10. '   ' → logprob: -12.149062156677246

Token 98: ' person' (ID: 1647)
  Prédit: ' person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' person' → logprob: -0.5759536027908325
    2. 'person' → logprob: -0.8259536027908325
    3. '	person' → logprob: -11.825953483581543
    4. ' ' → logprob: -13.200953483581543
    5. '(person' → logprob: -13.325953483581543
    6. '.person' → logprob: -13.950953483581543
    7. '           ' → logprob: -14.950953483581543
    8. '   ' → logprob: -15.075953483581543
    9. ')' → logprob: -15.450953483581543
    10. 'Person' → logprob: -15.700953483581543

Token 99: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -0.00020270596724003553
    2. 'weight' → logprob: -9.250203132629395
    3. '.' → logprob: -10.000203132629395
    4. ' .' → logprob: -10.000203132629395
    5. ' weight' → logprob: -11.625203132629395
    6. '_weight' → logprob: -12.500203132629395
    7. ')' → logprob: -13.625203132629395
    8. '.Weight' → logprob: -14.625203132629395
    9. '.weights' → logprob: -15.375203132629395
    10. ',' → logprob: -15.375203132629395

Token 100: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02987533248960972
    2. '))' → logprob: -3.5298752784729004
    3. ')
' → logprob: -9.029875755310059
    4. '))
' → logprob: -13.029875755310059
    5. ')))' → logprob: -13.529875755310059
    6. ' )' → logprob: -13.904875755310059
    7. ')

' → logprob: -15.529875755310059
    8. ')}' → logprob: -16.404874801635742
    9. '       ' → logprob: -16.529874801635742
    10. ' ))' → logprob: -16.529874801635742

Token 101: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06658954173326492
    2. '<|end|>' → logprob: -2.816589593887329
    3. '.sort' → logprob: -6.56658935546875
    4. '
' → logprob: -7.56658935546875
    5. ' ' → logprob: -7.69158935546875
    6. ' sorted' → logprob: -7.94158935546875
    7. '	' → logprob: -8.44158935546875
    8. ' sort' → logprob: -8.44158935546875
    9. '<|end|>' → logprob: -8.44158935546875
    10. 's' → logprob: -8.69158935546875

Token 103: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.002214965643361211
    2. '.' → logprob: -6.1272149085998535
    3. '<|end|>' → logprob: -11.252215385437012
    4. '_' → logprob: -12.377215385437012
    5. '.sort' → logprob: -12.502215385437012
    6. ' .' → logprob: -13.377215385437012
    7. ')._' → logprob: -13.627215385437012
    8. 's' → logprob: -14.002215385437012
    9. '_sorted' → logprob: -14.127215385437012
    10. '<|end|>' → logprob: -14.252215385437012

Token 104: 'events' (ID: 25303)
  Prédit: 'events'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.0009112251573242247
    2. 'sort' → logprob: -7.500911235809326
    3. '_events' → logprob: -8.375910758972168
    4. 'collect' → logprob: -9.875910758972168
    5. 'people' → logprob: -10.125910758972168
    6. ' events' → logprob: -11.250910758972168
    7. '(events' → logprob: -12.375910758972168
    8. '_sort' → logprob: -12.625910758972168
    9. '.events' → logprob: -13.000910758972168
    10. 'sorted' → logprob: -13.000910758972168

Token 105: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0002116462419508025
    2. '.' → logprob: -9.000211715698242
    3. 'sort' → logprob: -9.375211715698242
    4. ' sort' → logprob: -13.500211715698242
    5. '.extend' → logprob: -13.750211715698242
    6. '	sort' → logprob: -15.000211715698242
    7. '<|end|>' → logprob: -15.125211715698242
    8. '.Sort' → logprob: -16.625211715698242
    9. '.reverse' → logprob: -16.750211715698242
    10. '_sort' → logprob: -17.250211715698242

Token 106: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2521129250526428
    2. '(key' → logprob: -1.502112865447998
    3. '(' → logprob: -9.002113342285156
    4. '(reverse' → logprob: -10.002113342285156
    5. '()
' → logprob: -11.877113342285156
    6. '(lambda' → logprob: -12.002113342285156
    7. 'key' → logprob: -13.752113342285156
    8. '(
' → logprob: -15.377113342285156
    9. ' ()' → logprob: -15.627113342285156
    10. '(Key' → logprob: -16.127113342285156

Token 107: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9199900031089783
    2. '   ' → logprob: -1.294990062713623
    3. '
' → logprob: -1.794990062713623
    4. '<|end|>' → logprob: -1.919990062713623
    5. ' def' → logprob: -5.169990062713623
    6. '```' → logprob: -6.169990062713623
    7. ')' → logprob: -6.544990062713623
    8. '<|end|>' → logprob: -6.794990062713623
    9. ':' → logprob: -6.919990062713623
    10. '    
' → logprob: -7.044990062713623

Token 108: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3969694674015045
    2. '
' → logprob: -1.5219694375991821
    3. '<|end|>' → logprob: -2.3969695568084717
    4. '   ' → logprob: -4.646969318389893
    5. ' def' → logprob: -5.521969318389893
    6. '<|end|>' → logprob: -6.771969318389893
    7. '

' → logprob: -7.396969318389893
    8. '    
' → logprob: -7.396969318389893
    9. ' ' → logprob: -7.396969318389893
    10. ' 
' → logprob: -7.396969318389893

Token 109: ' is' (ID: 382)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8385854363441467
    2. ' calculate' → logprob: -1.713585376739502
    3. ' max' → logprob: -1.963585376739502
    4. ' check' → logprob: -2.338585376739502
    5. ' is' → logprob: -2.838585376739502
    6. ' get' → logprob: -3.213585376739502
    7. ' total' → logprob: -4.088585376739502
    8. 'can' → logprob: -4.588585376739502
    9. ' load' → logprob: -4.963585376739502
    10. 'calculate' → logprob: -5.338585376739502

Token 110: '_safe' (ID: 87847)
  Prédit: '_safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_safe' → logprob: -0.5101092457771301
    2. '_over' → logprob: -1.1351091861724854
    3. '_cross' → logprob: -3.5101091861724854
    4. '_' → logprob: -3.8851091861724854
    5. '_load' → logprob: -4.5101094245910645
    6. '_possible' → logprob: -5.1351094245910645
    7. '_pass' → logprob: -5.3851094245910645
    8. '_loaded' → logprob: -6.1351094245910645
    9. '_s' → logprob: -6.5101094245910645
    10. '_valid' → logprob: -7.6351094245910645

Token 111: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0041238730773329735
    2. '(' → logprob: -5.504123687744141
    3. ' (' → logprob: -10.25412368774414
    4. '   ' → logprob: -11.75412368774414
    5. 'self' → logprob: -13.62912368774414
    6. '(s' → logprob: -15.12912368774414
    7. '(
' → logprob: -15.25412368774414
    8. ' self' → logprob: -15.37912368774414
    9. '       ' → logprob: -16.25412368774414
    10. ' ' → logprob: -16.25412368774414

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35075250267982483
    2. ',' → logprob: -1.4757524728775024
    3. 'self' → logprob: -3.100752592086792
    4. '):
' → logprob: -4.725752353668213
    5. ' ,' → logprob: -5.600752353668213
    6. ' ):' → logprob: -5.725752353668213
    7. ')' → logprob: -6.225752353668213
    8. '   ' → logprob: -6.350752353668213
    9. '(self' → logprob: -6.975752353668213
    10. ' self' → logprob: -8.350752830505371

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0053107235580682755
    2. 'self' → logprob: -5.630310535430908
    3. ' self' → logprob: -7.380310535430908
    4. '(self' → logprob: -7.755310535430908
    5. '
' → logprob: -8.005311012268066
    6. '   ' → logprob: -9.255311012268066
    7. '()' → logprob: -9.630311012268066
    8. '(' → logprob: -9.630311012268066
    9. '```' → logprob: -10.505311012268066
    10. '        
' → logprob: -10.755311012268066

Token 114: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.021970000118017197
    2. '       ' → logprob: -4.521969795227051
    3. 'current' → logprob: -5.396969795227051
    4. ' self' → logprob: -5.646969795227051
    5. 'load' → logprob: -6.146969795227051
    6. 'total' → logprob: -8.77196979522705
    7. '   ' → logprob: -9.02196979522705
    8. 'capacity' → logprob: -9.27196979522705
    9. 'def' → logprob: -9.39696979522705
    10. ' current' → logprob: -9.64696979522705

Token 115: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.02344043180346489
    2. '.' → logprob: -3.773440361022949
    3. ' .' → logprob: -8.77344036102295
    4. '.collect' → logprob: -11.27344036102295
    5. ' _' → logprob: -11.77344036102295
    6. '_' → logprob: -12.02344036102295
    7. '   ' → logprob: -12.39844036102295
    8. '.
' → logprob: -13.89844036102295
    9. '.__' → logprob: -13.89844036102295
    10. '.is' → logprob: -13.89844036102295

Token 116: 'collect' (ID: 25670)
  Prédit: 'collect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collect' → logprob: -0.004968797322362661
    2. 'events' → logprob: -5.629968643188477
    3. 'people' → logprob: -6.879968643188477
    4. '_collect' → logprob: -8.129968643188477
    5. 'safe' → logprob: -11.629968643188477
    6. ' collect' → logprob: -11.754968643188477
    7. 'load' → logprob: -11.754968643188477
    8. 'construct' → logprob: -12.254968643188477
    9. '_events' → logprob: -12.754968643188477
    10. '.collect' → logprob: -12.754968643188477

Token 117: '_events' (ID: 46626)
  Prédit: '_events'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_events' → logprob: -8.41866585687967e-06
    2. '_' → logprob: -11.750008583068848
    3. 'events' → logprob: -15.250008583068848
    4. '(_' → logprob: -17.00000762939453
    5. '_EVENTS' → logprob: -17.00000762939453
    6. '(events' → logprob: -17.25000762939453
    7. '()' → logprob: -18.12500762939453
    8. '_items' → logprob: -18.37500762939453
    9. 'Events' → logprob: -18.50000762939453
    10. '_ev' → logprob: -18.62500762939453

Token 118: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10506130754947662
    2. '
' → logprob: -3.1050612926483154
    3. '()' → logprob: -3.8550612926483154
    4. ':' → logprob: -4.6050615310668945
    5. '()
' → logprob: -4.6050615310668945
    6. '(' → logprob: -5.6050615310668945
    7. '<|end|>' → logprob: -5.6050615310668945
    8. '        
' → logprob: -6.3550615310668945
    9. ':
' → logprob: -7.2300615310668945
    10. '   ' → logprob: -7.2300615310668945

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13728459179401398
    2. ' current' → logprob: -3.137284517288208
    3. ' load' → logprob: -3.137284517288208
    4. 'current' → logprob: -4.137284755706787
    5. ' total' → logprob: -4.762284755706787
    6. '
' → logprob: -5.262284755706787
    7. 'total' → logprob: -6.012284755706787
    8. '   ' → logprob: -6.137284755706787
    9. 'load' → logprob: -6.387284755706787
    10. '        
' → logprob: -6.512284755706787

Token 120: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.12429071962833405
    2. 'load' → logprob: -2.499290704727173
    3. ' current' → logprob: -4.249290943145752
    4. 'total' → logprob: -4.499290943145752
    5. 'weight' → logprob: -5.124290943145752
    6. ' load' → logprob: -5.999290943145752
    7. '   ' → logprob: -7.874290943145752
    8. '       ' → logprob: -8.749290466308594
    9. ' total' → logprob: -8.874290466308594
    10. 'capacity' → logprob: -9.749290466308594

Token 121: '_weight' (ID: 34711)
  Prédit: '_load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_load' → logprob: -0.005456797778606415
    2. '_weight' → logprob: -5.255456924438477
    3. '_' → logprob: -9.005456924438477
    4. 'load' → logprob: -9.630456924438477
    5. '=' → logprob: -11.630456924438477
    6. ' =' → logprob: -12.005456924438477
    7. 'Load' → logprob: -12.005456924438477
    8. ' load' → logprob: -12.380456924438477
    9. '```' → logprob: -13.255456924438477
    10. '_loading' → logprob: -13.630456924438477

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013360745506361127
    2. '=' → logprob: -6.626336097717285
    3. ' ' → logprob: -11.626336097717285
    4. ' +=' → logprob: -14.251336097717285
    5. '<|end|>' → logprob: -14.501336097717285
    6. ')' → logprob: -17.50133514404297
    7. ' ==' → logprob: -17.50133514404297
    8. 's' → logprob: -17.62633514404297
    9. ' =)' → logprob: -17.75133514404297
    10. '  ' → logprob: -17.75133514404297

Token 123: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993721425533295
    2. ' ' → logprob: -2.694937229156494
    3. '   ' → logprob: -14.069936752319336
    4. ' ' → logprob: -15.944936752319336
    5. '  ' → logprob: -17.632436752319336
    6. '۰' → logprob: -17.882436752319336
    7. '```' → logprob: -18.319936752319336
    8. '	' → logprob: -18.819936752319336
    9. '       ' → logprob: -18.882436752319336
    10. '=' → logprob: -19.194936752319336

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.75001335144043
    4. '۰' → logprob: -20.37501335144043
    5. '000' → logprob: -21.87501335144043
    6. '```' → logprob: -22.00001335144043
    7. '<|end|>' → logprob: -22.25001335144043
    8. '00' → logprob: -22.25001335144043
    9. '  ' → logprob: -22.50001335144043
    10. ' ' → logprob: -22.87501335144043

Token 125: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10980872809886932
    2. '<|end|>' → logprob: -3.1098086833953857
    3. '       ' → logprob: -3.3598086833953857
    4. ' for' → logprob: -3.9848086833953857
    5. '   ' → logprob: -6.359808921813965
    6. 'for' → logprob: -6.484808921813965
    7. '<|end|>' → logprob: -6.734808921813965
    8. ' 
' → logprob: -7.859808921813965
    9. '\n' → logprob: -8.484808921813965
    10. '  
' → logprob: -8.609808921813965

Token 126: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011384491808712482
    2. '<|end|>' → logprob: -4.8863844871521
    3. '       ' → logprob: -6.0113844871521
    4. ' for' → logprob: -8.011384963989258
    5. ' 
' → logprob: -8.511384963989258
    6. '   ' → logprob: -8.886384963989258
    7. ':' → logprob: -8.886384963989258
    8. '<|end|>' → logprob: -9.636384963989258
    9. '  
' → logprob: -9.761384963989258
    10. ',' → logprob: -9.886384963989258

Token 127: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1757427304983139
    2. ' for' → logprob: -1.925742745399475
    3. '       ' → logprob: -4.1757426261901855
    4. '
' → logprob: -11.175743103027344
    5. '   ' → logprob: -11.300743103027344
    6. '	for' → logprob: -11.800743103027344
    7. '        
' → logprob: -15.425743103027344
    8. ' ' → logprob: -15.425743103027344
    9. '```' → logprob: -15.425743103027344
    10. '<|end|>' → logprob: -15.550743103027344

Token 128: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.005985439755022526
    2. 'event' → logprob: -5.130985260009766
    3. ' self' → logprob: -10.255985260009766
    4. '	event' → logprob: -11.755985260009766
    5. '_event' → logprob: -12.630985260009766
    6. '   ' → logprob: -13.130985260009766
    7. 'self' → logprob: -13.255985260009766
    8. ' e' → logprob: -13.505985260009766
    9. ' ' → logprob: -13.755985260009766
    10. ' evt' → logprob: -14.130985260009766

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015208146069198847
    2. 'in' → logprob: -6.50152063369751
    3. ' ' → logprob: -12.126521110534668
    4. '	in' → logprob: -12.126521110534668
    5. ':' → logprob: -13.251521110534668
    6. ',' → logprob: -13.251521110534668
    7. 's' → logprob: -14.501521110534668
    8. ' :' → logprob: -14.626521110534668
    9. '   ' → logprob: -14.751521110534668
    10. '  ' → logprob: -14.751521110534668

Token 130: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.029781728982925415
    2. 'self' → logprob: -3.5297818183898926
    3. '(self' → logprob: -11.654781341552734
    4. '	self' → logprob: -11.654781341552734
    5. ' ' → logprob: -12.654781341552734
    6. ' ' → logprob: -12.904781341552734
    7. '_self' → logprob: -13.154781341552734
    8. '
' → logprob: -13.779781341552734
    9. '[self' → logprob: -14.154781341552734
    10. '   ' → logprob: -14.279781341552734

Token 131: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.1160349458805285e-05
    2. '.' → logprob: -11.500011444091797
    3. ' .' → logprob: -14.750011444091797
    4. '   ' → logprob: -15.375011444091797
    5. ']._' → logprob: -16.250011444091797
    6. '_' → logprob: -17.375011444091797
    7. '       ' → logprob: -17.500011444091797
    8. '._
' → logprob: -17.500011444091797
    9. '."_' → logprob: -17.500011444091797
    10. '.__' → logprob: -17.625011444091797

Token 132: 'events' (ID: 25303)
  Prédit: 'events'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -5.073596548754722e-05
    2. '_events' → logprob: -10.12505054473877
    3. 'vents' → logprob: -12.12505054473877
    4. ' events' → logprob: -12.87505054473877
    5. '.events' → logprob: -13.87505054473877
    6. 'event' → logprob: -14.12505054473877
    7. '(events' → logprob: -14.75005054473877
    8. ' ' → logprob: -16.750051498413086
    9. '-events' → logprob: -16.875051498413086
    10. '```' → logprob: -16.875051498413086

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015718759968876839
    2. ':
' → logprob: -6.5015716552734375
    3. '<|end|>' → logprob: -9.876571655273438
    4. '<|end|>' → logprob: -12.001571655273438
    5. ',' → logprob: -13.001571655273438
    6. '):' → logprob: -13.001571655273438
    7. '       ' → logprob: -13.501571655273438
    8. ' :' → logprob: -13.626571655273438
    9. ':

' → logprob: -13.626571655273438
    10. '.' → logprob: -14.126571655273438

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15369844436645508
    2. '       ' → logprob: -2.528698444366455
    3. '<|end|>' → logprob: -3.528698444366455
    4. ':' → logprob: -3.903698444366455
    5. ' if' → logprob: -5.278698444366455
    6. ':
' → logprob: -6.528698444366455
    7. '<|end|>' → logprob: -6.653698444366455
    8. '   ' → logprob: -6.653698444366455
    9. '        ' → logprob: -7.028698444366455
    10. '
' → logprob: -7.778698444366455

Token 135: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08316415548324585
    2. 'if' (adapté à ' if') → logprob: -2.8331642150878906
    3. '
' → logprob: -4.833164215087891
    4. '       ' → logprob: -5.458164215087891
    5. ' 
' → logprob: -5.708164215087891
    6. ' ' → logprob: -5.958164215087891
    7. '           ' → logprob: -6.458164215087891
    8. '        ' → logprob: -7.958164215087891
    9. '```' → logprob: -8.08316421508789
    10. ' current' → logprob: -8.95816421508789

Token 136: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.00407923199236393
    2. 'event' → logprob: -5.504079341888428
    3. '(event' → logprob: -14.25407886505127
    4. '	event' → logprob: -15.87907886505127
    5. ' ' → logprob: -17.754079818725586
    6. 'Event' → logprob: -18.129079818725586
    7. ' ' → logprob: -18.254079818725586
    8. '[event' → logprob: -18.879079818725586
    9. '.event' → logprob: -19.504079818725586
    10. ' evento' → logprob: -19.504079818725586

Token 137: '.type' (ID: 9166)
  Prédit: '.type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.type' → logprob: -0.00027182576013728976
    2. '.Type' → logprob: -8.250271797180176
    3. '.event' → logprob: -12.375271797180176
    4. '.' → logprob: -12.625271797180176
    5. ' .' → logprob: -13.500271797180176
    6. '.token' → logprob: -13.875271797180176
    7. '.operator' → logprob: -15.250271797180176
    8. '.TYPE' → logprob: -15.750271797180176
    9. '.kind' → logprob: -16.000272750854492
    10. '.typ' → logprob: -16.625272750854492

Token 138: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005935670807957649
    2. '==' → logprob: -5.1309356689453125
    3. ' ' → logprob: -12.380935668945312
    4. ' is' → logprob: -13.005935668945312
    5. ' ' → logprob: -15.880935668945312
    6. ')' → logprob: -16.380935668945312
    7. ' ===' → logprob: -16.380935668945312
    8. ' ==
' → logprob: -16.380935668945312
    9. '=' → logprob: -16.755935668945312
    10. '<|end|>' → logprob: -17.005935668945312

Token 139: ' Event' (ID: 6400)
  Prédit: ' Event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Event' → logprob: -0.16023387014865875
    2. 'Event' → logprob: -1.9102338552474976
    3. '	Event' → logprob: -11.660233497619629
    4. '(Event' → logprob: -14.660233497619629
    5. ' ' → logprob: -14.910233497619629
    6. '_Event' → logprob: -16.285234451293945
    7. '.Event' → logprob: -16.410234451293945
    8. ' event' → logprob: -16.660234451293945
    9. '<Event' → logprob: -16.910234451293945
    10. '   ' → logprob: -18.035234451293945

Token 140: '.Type' (ID: 19251)
  Prédit: '.Type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Type' → logprob: -0.00021307668066583574
    2. '.' → logprob: -8.500212669372559
    3. 'Type' → logprob: -13.125212669372559
    4. ' .' → logprob: -13.125212669372559
    5. '.Types' → logprob: -13.625212669372559
    6. '(Type' → logprob: -13.625212669372559
    7. '.Value' → logprob: -14.625212669372559
    8. '.T' → logprob: -14.750212669372559
    9. '.TYPE' → logprob: -15.375212669372559
    10. '.Enter' → logprob: -15.375212669372559

Token 141: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.408677290892228e-05
    2. 'ENTER' → logprob: -9.7500638961792
    3. '.LE' → logprob: -13.2500638961792
    4. '.Enter' → logprob: -13.3750638961792
    5. '.EXIT' → logprob: -14.7500638961792
    6. ' .' → logprob: -14.7500638961792
    7. '.enter' → logprob: -15.1250638961792
    8. '['' → logprob: -15.8750638961792
    9. '.ADD' → logprob: -16.125064849853516
    10. '.EN' → logprob: -16.125064849853516

Token 142: 'ENTER' (ID: 23127)
  Prédit: 'ENTER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENTER' → logprob: -1.0206720617134124e-05
    2. 'ENT' → logprob: -11.62501049041748
    3. 'Enter' → logprob: -14.37501049041748
    4. 'LE' → logprob: -14.50001049041748
    5. '_ENTER' → logprob: -16.375009536743164
    6. ' ENTER' → logprob: -17.125009536743164
    7. 'enter' → logprob: -17.750009536743164
    8. 'ENTRY' → logprob: -19.000009536743164
    9. '   ' → logprob: -19.250009536743164
    10. '```' → logprob: -19.375009536743164

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08919408917427063
    2. ':
' → logprob: -2.4641940593719482
    3. '               ' → logprob: -9.214194297790527
    4. ' and' → logprob: -10.089194297790527
    5. '           ' → logprob: -10.339194297790527
    6. '<|end|>' → logprob: -10.589194297790527
    7. '):
' → logprob: -10.964194297790527
    8. ':

' → logprob: -12.214194297790527
    9. ' :' → logprob: -12.214194297790527
    10. '):' → logprob: -12.339194297790527

Token 144: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1619192510843277
    2. ' current' → logprob: -2.161919355392456
    3. 'current' → logprob: -3.411919355392456
    4. '           ' → logprob: -6.911919116973877
    5. '                
' → logprob: -9.536919593811035
    6. ':
' → logprob: -9.911919593811035
    7. '
' → logprob: -9.911919593811035
    8. '(current' → logprob: -10.161919593811035
    9. '[current' → logprob: -10.661919593811035
    10. '<|end|>' → logprob: -10.661919593811035

Token 145: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.16794921457767487
    2. 'current' (adapté à ' current') → logprob: -1.9179491996765137
    3. '               ' → logprob: -4.917949199676514
    4. '                   ' → logprob: -8.792949676513672
    5. '                ' → logprob: -9.042949676513672
    6. '
' → logprob: -10.917949676513672
    7. '           ' → logprob: -10.917949676513672
    8. ' 
' → logprob: -11.417949676513672
    9. ' ' → logprob: -11.417949676513672
    10. '_current' → logprob: -12.167949676513672

Token 146: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0001322639436693862
    2. '_' → logprob: -9.00013256072998
    3. '_weights' → logprob: -12.37513256072998
    4. 'weight' → logprob: -12.75013256072998
    5. '_load' → logprob: -14.75013256072998
    6. '+' → logprob: -15.00013256072998
    7. ' +=' → logprob: -15.25013256072998
    8. '+=' → logprob: -15.62513256072998
    9. ' _' → logprob: -15.75013256072998
    10. '_WEIGHT' → logprob: -16.125131607055664

Token 147: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.021852552890777588
    2. '+=' → logprob: -3.896852493286133
    3. '+' → logprob: -7.271852493286133
    4. ' +' → logprob: -7.396852493286133
    5. '            ' → logprob: -14.271852493286133
    6. ' ' → logprob: -15.646852493286133
    7. '                ' → logprob: -15.771852493286133
    8. ']+=' → logprob: -15.771852493286133
    9. '```' → logprob: -16.271852493286133
    10. '           ' → logprob: -16.271852493286133

Token 148: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.029751179739832878
    2. 'event' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.90475082397461
    4. '	event' → logprob: -15.15475082397461
    5. '(event' → logprob: -16.27975082397461
    6. ' ' → logprob: -17.02975082397461
    7. '_event' → logprob: -19.27975082397461
    8. ',event' → logprob: -19.40475082397461
    9. '.event' → logprob: -19.52975082397461
    10. ' 
' → logprob: -19.65475082397461

Token 149: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -0.0016380504239350557
    2. '.value' → logprob: -6.876637935638428
    3. '.amount' → logprob: -7.751637935638428
    4. '.' → logprob: -9.251638412475586
    5. ' .' → logprob: -11.001638412475586
    6. '.weights' → logprob: -11.001638412475586
    7. '.payload' → logprob: -11.126638412475586
    8. '.load' → logprob: -12.001638412475586
    9. '.quantity' → logprob: -12.501638412475586
    10. '.data' → logprob: -13.126638412475586

Token 150: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3936919569969177
    2. '
' → logprob: -1.5186920166015625
    3. '               ' → logprob: -2.2686920166015625
    4. ' if' → logprob: -6.6436920166015625
    5. 'if' → logprob: -7.5186920166015625
    6. '       ' → logprob: -8.518692016601562
    7. '<|end|>' → logprob: -8.518692016601562
    8. '            
' → logprob: -8.643692016601562
    9. '
' → logprob: -9.018692016601562
    10. ' 
' → logprob: -9.393692016601562

Token 151: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23487529158592224
    2. '
' → logprob: -2.109875202178955
    3. '               ' → logprob: -2.609875202178955
    4. '       ' → logprob: -5.359875202178955
    5. 'elif' → logprob: -5.984875202178955
    6. ' 
' → logprob: -6.484875202178955
    7. ' elif' → logprob: -6.734875202178955
    8. '<|end|>' → logprob: -6.859875202178955
    9. '            
' → logprob: -7.109875202178955
    10. ' else' → logprob: -7.359875202178955

Token 152: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007578701246529818
    2. ' if' → logprob: -5.5075788497924805
    3. '               ' → logprob: -5.7575788497924805
    4. '           ' → logprob: -8.00757884979248
    5. '```' → logprob: -14.13257884979248
    6. '       ' → logprob: -14.25757884979248
    7. '                   ' → logprob: -15.25757884979248
    8. '   ' → logprob: -15.50757884979248
    9. 'return' → logprob: -15.50757884979248
    10. '	if' → logprob: -15.63257884979248

Token 153: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.0019286326132714748
    2. 'current' → logprob: -6.251928806304932
    3. '(current' → logprob: -17.126928329467773
    4. '	current' → logprob: -18.126928329467773
    5. 'urrent' → logprob: -19.001928329467773
    6. ' ' → logprob: -19.251928329467773
    7. '$current' → logprob: -19.876928329467773
    8. '               ' → logprob: -20.501928329467773
    9. '_current' → logprob: -20.626928329467773
    10. 'Current' → logprob: -20.751928329467773

Token 154: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -8.017927029868588e-05
    2. 'weight' → logprob: -9.625080108642578
    3. '_' → logprob: -11.500080108642578
    4. '_WEIGHT' → logprob: -14.125080108642578
    5. '_w' → logprob: -14.250080108642578
    6. 'Weight' → logprob: -14.500080108642578
    7. '```' → logprob: -14.500080108642578
    8. ' weight' → logprob: -15.250080108642578
    9. '_weights' → logprob: -15.625080108642578
    10. '   ' → logprob: -15.625080108642578

Token 155: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20142541825771332
    2. '>' → logprob: -1.7014254331588745
    3. ' ' → logprob: -11.701425552368164
    4. ' ' → logprob: -13.576425552368164
    5. '()>' → logprob: -14.326425552368164
    6. ')' → logprob: -14.576425552368164
    7. '">' → logprob: -14.701425552368164
    8. '_' → logprob: -15.951425552368164
    9. ' >
' → logprob: -16.201425552368164
    10. '<|end|>' → logprob: -16.201425552368164

Token 156: ' Bridge' (ID: 28239)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.049554839730262756
    2. 'self' → logprob: -3.2995548248291016
    3. ' Bridge' → logprob: -4.549554824829102
    4. 'Bridge' → logprob: -7.049554824829102
    5. ' ' → logprob: -13.174554824829102
    6. '	self' → logprob: -13.299554824829102
    7. ' bridge' → logprob: -14.049554824829102
    8. '   ' → logprob: -14.174554824829102
    9. '(self' → logprob: -14.424554824829102
    10. ' ' → logprob: -14.674554824829102

Token 157: '.MAX' (ID: 25075)
  Prédit: '.MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MAX' → logprob: -0.00018494461255613714
    2. '.' → logprob: -8.750185012817383
    3. ' .' → logprob: -11.250185012817383
    4. 'MAX' → logprob: -11.750185012817383
    5. '   ' → logprob: -13.500185012817383
    6. '_MAX' → logprob: -13.750185012817383
    7. '._' → logprob: -13.875185012817383
    8. '.MIN' → logprob: -14.500185012817383
    9. '.NUM' → logprob: -15.375185012817383
    10. '.M' → logprob: -15.500185012817383

Token 158: '_LOAD' (ID: 57755)
  Prédit: '_LOAD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LOAD' → logprob: -1.1472419600977446e-06
    2. '_LO' → logprob: -14.500000953674316
    3. '_LOADING' → logprob: -15.750000953674316
    4. '_Load' → logprob: -16.250001907348633
    5. '_load' → logprob: -16.500001907348633
    6. 'LOAD' → logprob: -16.500001907348633
    7. '_' → logprob: -17.625001907348633
    8. ' _' → logprob: -17.750001907348633
    9. '_WEIGHT' → logprob: -18.000001907348633
    10. ')_' → logprob: -19.375001907348633

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5830399990081787
    2. ':
' → logprob: -0.8330399990081787
    3. ':return' → logprob: -4.958040237426758
    4. '):
' → logprob: -10.833040237426758
    5. ':
' → logprob: -11.833040237426758
    6. '           ' → logprob: -12.333040237426758
    7. '):' → logprob: -12.458040237426758
    8. ')' → logprob: -13.083040237426758
    9. ' :
' → logprob: -13.083040237426758
    10. '():
' → logprob: -13.083040237426758

Token 160: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05906369164586067
    2. '               ' → logprob: -3.684063673019409
    3. 'return' → logprob: -3.934063673019409
    4. ' return' → logprob: -4.559063911437988
    5. '
' → logprob: -6.434063911437988
    6. '           ' → logprob: -7.934063911437988
    7. '                       ' → logprob: -9.184063911437988
    8. ':return' → logprob: -9.434063911437988
    9. '   ' → logprob: -11.309063911437988
    10. '                    
' → logprob: -11.434063911437988

Token 161: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06277240067720413
    2. ' return' → logprob: -2.812772512435913
    3. '               ' → logprob: -7.937772274017334
    4. '                   ' → logprob: -8.437772750854492
    5. '
' → logprob: -8.562772750854492
    6. '	return' → logprob: -11.312772750854492
    7. ':return' → logprob: -11.687772750854492
    8. '   ' → logprob: -12.062772750854492
    9. '                       ' → logprob: -12.812772750854492
    10. '           ' → logprob: -12.812772750854492

Token 162: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.842555426876061e-06
    2. ' False' → logprob: -12.250004768371582
    3. 'True' → logprob: -21.2500057220459
    4. '(False' → logprob: -21.7500057220459
    5. 'false' → logprob: -24.5000057220459
    6. '_false' → logprob: -26.1250057220459
    7. 'F' → logprob: -26.2500057220459
    8. '=False' → logprob: -26.3750057220459
    9. '```' → logprob: -27.7500057220459
    10. '
' → logprob: -28.6250057220459

Token 163: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001824885024689138
    2. '
' → logprob: -6.501824855804443
    3. 'elif' → logprob: -8.751825332641602
    4. 'else' → logprob: -9.501825332641602
    5. '            
' → logprob: -10.126825332641602
    6. '       ' → logprob: -10.626825332641602
    7. 'return' → logprob: -12.376825332641602
    8. ' else' → logprob: -12.501825332641602
    9. '```' → logprob: -12.626825332641602
    10. '    
' → logprob: -12.876825332641602

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007329129730351269
    2. 'elif' → logprob: -7.375732898712158
    3. 'else' → logprob: -9.875733375549316
    4. '       ' → logprob: -10.875733375549316
    5. 'return' → logprob: -11.250733375549316
    6. '            
' → logprob: -11.500733375549316
    7. '```' → logprob: -12.375733375549316
    8. '
' → logprob: -12.500733375549316
    9. ' elif' → logprob: -13.375733375549316
    10. '               ' → logprob: -14.125733375549316

Token 165: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7896645069122314
    2. 'elif' (adapté à ' elif') → logprob: -1.0396645069122314
    3. '       ' → logprob: -2.1646645069122314
    4. ' else' → logprob: -3.2896645069122314
    5. ' elif' → logprob: -3.6646645069122314
    6. '           ' → logprob: -4.289664268493652
    7. '   ' → logprob: -7.039664268493652
    8. '
' → logprob: -9.664664268493652
    9. '```' → logprob: -9.789664268493652
    10. '	elif' → logprob: -10.664664268493652

Token 166: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.004079589620232582
    2. 'event' → logprob: -5.504079818725586
    3. ' ' → logprob: -14.004079818725586
    4. '(event' → logprob: -15.754079818725586
    5. '	event' → logprob: -16.004079818725586
    6. 'Event' → logprob: -16.129079818725586
    7. ' ' → logprob: -17.254079818725586
    8. '[event' → logprob: -18.754079818725586
    9. '.event' → logprob: -18.879079818725586
    10. '<|end|>' → logprob: -19.254079818725586

Token 167: '.type' (ID: 9166)
  Prédit: '.type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.type' → logprob: -8.327856630785391e-05
    2. '.' → logprob: -9.500082969665527
    3. 'type' → logprob: -12.375082969665527
    4. '==' → logprob: -13.250082969665527
    5. ' .' → logprob: -13.500082969665527
    6. ' ==' → logprob: -14.125082969665527
    7. ' type' → logprob: -15.375082969665527
    8. '[type' → logprob: -18.375083923339844
    9. '.Type' → logprob: -18.875083923339844
    10. '.code' → logprob: -18.875083923339844

Token 168: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006717505399137735
    2. '==' → logprob: -5.006717681884766
    3. ' ' → logprob: -13.506717681884766
    4. ' =' → logprob: -15.006717681884766
    5. '=' → logprob: -15.506717681884766
    6. ' ' → logprob: -16.006717681884766
    7. ')' → logprob: -17.506717681884766
    8. ' ==
' → logprob: -17.506717681884766
    9. ' ===' → logprob: -18.381717681884766
    10. '.' → logprob: -18.381717681884766

Token 169: ' Event' (ID: 6400)
  Prédit: ' Event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Event' → logprob: -0.38690826296806335
    2. 'Event' → logprob: -1.1369082927703857
    3. '	Event' → logprob: -10.386908531188965
    4. ' ' → logprob: -12.261908531188965
    5. '<Event' → logprob: -14.761908531188965
    6. '_Event' → logprob: -15.011908531188965
    7. ' event' → logprob: -15.136908531188965
    8. '.Event' → logprob: -15.261908531188965
    9. '(Event' → logprob: -15.511908531188965
    10. '  ' → logprob: -16.13690757751465

Token 170: '.Type' (ID: 19251)
  Prédit: '.Type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Type' → logprob: -0.0007470945129171014
    2. '.LE' → logprob: -7.375747203826904
    3. '.' → logprob: -9.625746726989746
    4. '.TYPE' → logprob: -10.750746726989746
    5. 'Type' → logprob: -10.875746726989746
    6. '.Le' → logprob: -11.625746726989746
    7. '==' → logprob: -13.375746726989746
    8. ' .' → logprob: -13.625746726989746
    9. '(Type' → logprob: -14.000746726989746
    10. 'LE' → logprob: -15.125746726989746

Token 171: '.LE' (ID: 25657)
  Prédit: '.LE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.LE' → logprob: -0.029790064319968224
    2. 'LE' → logprob: -3.529790163040161
    3. '_LE' → logprob: -10.529789924621582
    4. '.Le' → logprob: -11.529789924621582
    5. '.' → logprob: -13.904789924621582
    6. ' LE' → logprob: -14.154789924621582
    7. '.L' → logprob: -15.029789924621582
    8. '.leave' → logprob: -15.279789924621582
    9. ' .' → logprob: -15.529789924621582
    10. 'LEE' → logprob: -15.904789924621582

Token 172: 'AVE' (ID: 16357)
  Prédit: 'AVE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AVE' → logprob: -1.27099974633893e-05
    2. 'VE' → logprob: -12.000012397766113
    3. 'AV' → logprob: -12.375012397766113
    4. 'A' → logprob: -13.125012397766113
    5. 'Ave' → logprob: -16.37501335144043
    6. 'ave' → logprob: -16.87501335144043
    7. '   ' → logprob: -17.87501335144043
    8. 'AVED' → logprob: -18.12501335144043
    9. 'AVER' → logprob: -18.75001335144043
    10. 'ASE' → logprob: -18.75001335144043

Token 173: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2519857883453369
    2. ':' → logprob: -1.501985788345337
    3. '               ' → logprob: -10.626985549926758
    4. ' :
' → logprob: -11.001985549926758
    5. ':
' → logprob: -12.126985549926758
    6. '):
' → logprob: -12.376985549926758
    7. ':

' → logprob: -12.876985549926758
    8. ' :' → logprob: -13.626985549926758
    9. '           ' → logprob: -13.876985549926758
    10. ',' → logprob: -14.501985549926758

Token 174: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008476046845316887
    2. 'current' → logprob: -5.258476257324219
    3. ' current' → logprob: -5.758476257324219
    4. '           ' → logprob: -9.758476257324219
    5. '```' → logprob: -11.758476257324219
    6. '                   ' → logprob: -11.883476257324219
    7. ',current' → logprob: -13.508476257324219
    8. '	current' → logprob: -13.883476257324219
    9. '$current' → logprob: -14.133476257324219
    10. '              ' → logprob: -14.383476257324219

Token 175: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.10071522742509842
    2. 'current' (adapté à ' current') → logprob: -2.350715160369873
    3. '               ' → logprob: -7.600715160369873
    4. '           ' → logprob: -12.850715637207031
    5. '	current' → logprob: -13.100715637207031
    6. '                   ' → logprob: -13.850715637207031
    7. '.current' → logprob: -14.475715637207031
    8. ',current' → logprob: -14.725715637207031
    9. '_current' → logprob: -14.850715637207031
    10. 'Current' → logprob: -15.100715637207031

Token 176: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.00091217877343297
    2. 'weight' → logprob: -7.000912189483643
    3. 'Weight' → logprob: -15.000911712646484
    4. ' weight' → logprob: -15.375911712646484
    5. '-weight' → logprob: -17.625911712646484
    6. '_weights' → logprob: -17.750911712646484
    7. '_WEIGHT' → logprob: -17.750911712646484
    8. '.weight' → logprob: -18.125911712646484
    9. '_' → logprob: -18.250911712646484
    10. '
' → logprob: -18.875911712646484

Token 177: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.07920613884925842
    2. ' -=' → logprob: -2.5792062282562256
    3. '-' → logprob: -8.079206466674805
    4. '           ' → logprob: -12.954206466674805
    5. ' -' → logprob: -13.454206466674805
    6. '   ' → logprob: -14.454206466674805
    7. '               ' → logprob: -14.454206466674805
    8. '            ' → logprob: -14.829206466674805
    9. '+=' → logprob: -15.204206466674805
    10. '=' → logprob: -15.329206466674805

Token 178: ' event' (ID: 2104)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.3132626414299011
    2. ' event' → logprob: -1.313262701034546
    3. '	event' → logprob: -14.688262939453125
    4. '(event' → logprob: -14.938262939453125
    5. ' ' → logprob: -16.188262939453125
    6. '[event' → logprob: -16.688262939453125
    7. '.event' → logprob: -16.813262939453125
    8. ' ' → logprob: -18.313262939453125
    9. '_event' → logprob: -18.438262939453125
    10. 'Event' → logprob: -18.688262939453125

Token 179: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -3.8889261304575484e-06
    2. 'weight' → logprob: -12.625003814697266
    3. '.' → logprob: -15.000003814697266
    4. ' .' → logprob: -15.625003814697266
    5. '.token' → logprob: -17.625003814697266
    6. ' weight' → logprob: -17.875003814697266
    7. '.weights' → logprob: -18.125003814697266
    8. '.width' → logprob: -19.625003814697266
    9. '.Weight' → logprob: -20.125003814697266
    10. '_weight' → logprob: -20.250003814697266

Token 180: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015018885023891926
    2. '
' → logprob: -5.015018939971924
    3. 'return' → logprob: -5.390018939971924
    4. ' return' → logprob: -5.640018939971924
    5. '        
' → logprob: -9.890018463134766
    6. '<|end|>' → logprob: -10.140018463134766
    7. '   ' → logprob: -10.765018463134766
    8. '	return' → logprob: -11.265018463134766
    9. ')return' → logprob: -12.265018463134766
    10. ':return' → logprob: -12.640018463134766

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004618896055035293
    2. 'return' → logprob: -7.750462055206299
    3. ' return' → logprob: -11.12546157836914
    4. '
' → logprob: -11.37546157836914
    5. '   ' → logprob: -12.50046157836914
    6. '```' → logprob: -14.12546157836914
    7. '	return' → logprob: -15.62546157836914
    8. '        
' → logprob: -16.62546157836914
    9. '      ' → logprob: -16.62546157836914
    10. '           ' → logprob: -16.75046157836914

Token 182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12186472117900848
    2. '       ' → logprob: -2.6218647956848145
    3. '   ' → logprob: -3.3718647956848145
    4. ' return' → logprob: -4.8718647956848145
    5. '
' → logprob: -9.746864318847656
    6. '	return' → logprob: -11.121864318847656
    7. '```' → logprob: -13.371864318847656
    8. '        
' → logprob: -13.996864318847656
    9. ' ' → logprob: -13.996864318847656
    10. '           ' → logprob: -14.371864318847656

Token 183: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004078401252627373
    2. ' True' → logprob: -5.504078388214111
    3. '(True' → logprob: -19.004077911376953
    4. '=True' → logprob: -22.754077911376953
    5. 'False' → logprob: -23.004077911376953
    6. 'true' → logprob: -23.129077911376953
    7. '   ' → logprob: -23.254077911376953
    8. ' ' → logprob: -23.379077911376953
    9. '
' → logprob: -23.379077911376953
    10. 'Tr' → logprob: -23.629077911376953

Token 184: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.650518920039758e-06
    2. ' class' → logprob: -13.375003814697266
    3. '#' → logprob: -13.500003814697266
    4. '```' → logprob: -15.375003814697266
    5. '"class' → logprob: -16.125003814697266
    6. '@dat' → logprob: -16.250003814697266
    7. 'classmethod' → logprob: -16.500003814697266
    8. 'from' → logprob: -16.625003814697266
    9. '<class' → logprob: -17.250003814697266
    10. '@class' → logprob: -17.250003814697266

Token 186: ' Person' (ID: 8263)
  Prédit: ' Person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Person' → logprob: -0.009207349270582199
    2. ' Event' → logprob: -5.009207248687744
    3. 'Person' → logprob: -6.009207248687744
    4. 'Event' → logprob: -10.759207725524902
    5. ' ' → logprob: -12.384207725524902
    6. ' Bridge' → logprob: -13.259207725524902
    7. '_person' → logprob: -13.759207725524902
    8. ' person' → logprob: -14.134207725524902
    9. ' Vehicle' → logprob: -14.884207725524902
    10. ' ' → logprob: -14.884207725524902

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010428131790831685
    2. ':
' → logprob: -6.87604284286499
    3. '(' → logprob: -12.001042366027832
    4. ':

' → logprob: -13.626042366027832
    5. '<|end|>' → logprob: -14.001042366027832
    6. ' :' → logprob: -14.501042366027832
    7. '(object' → logprob: -14.501042366027832
    8. ':def' → logprob: -15.251042366027832
    9. '):' → logprob: -15.376042366027832
    10. '():' → logprob: -15.751042366027832

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0754987895488739
    2. '<|end|>' → logprob: -2.9504988193511963
    3. ':' → logprob: -4.950498580932617
    4. ':
' → logprob: -5.575498580932617
    5. ' def' → logprob: -5.950498580932617
    6. '    
' → logprob: -6.200498580932617
    7. 'def' → logprob: -6.575498580932617
    8. '(' → logprob: -7.075498580932617
    9. ' ' → logprob: -7.575498580932617
    10. '):
' → logprob: -7.950498580932617

Token 189: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.21068544685840607
    2. 'def' (adapté à ' def') → logprob: -1.7106854915618896
    3. '   ' → logprob: -4.7106852531433105
    4. '```' → logprob: -8.960685729980469
    5. 'class' → logprob: -9.960685729980469
    6. '__' → logprob: -10.960685729980469
    7. '	def' → logprob: -11.960685729980469
    8. ' __' → logprob: -11.960685729980469
    9. ' ' → logprob: -12.210685729980469
    10. ' class' → logprob: -12.460685729980469

Token 190: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.013262820430099964
    2. '__' → logprob: -4.388262748718262
    3. 'init' → logprob: -7.888262748718262
    4. ' def' → logprob: -8.888262748718262
    5. '_init' → logprob: -9.138262748718262
    6. ' init' → logprob: -9.638262748718262
    7. ' ' → logprob: -10.138262748718262
    8. 'def' → logprob: -10.888262748718262
    9. '```' → logprob: -12.388262748718262
    10. '.__' → logprob: -13.888262748718262

Token 191: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -15.5
    3. 'def' → logprob: -18.0
    4. '_init' → logprob: -19.125
    5. 'ini' → logprob: -19.25
    6. '(init' → logprob: -19.875
    7. 'inite' → logprob: -20.375
    8. '	init' → logprob: -20.75
    9. '   ' → logprob: -20.875
    10. '```' → logprob: -21.125

Token 192: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00010020548506872728
    2. '__' → logprob: -9.250100135803223
    3. '(self' → logprob: -12.750100135803223
    4. '__(
' → logprob: -14.000100135803223
    5. '_(' → logprob: -15.500100135803223
    6. '__((' → logprob: -16.12510108947754
    7. '__('' → logprob: -17.87510108947754
    8. '___' → logprob: -19.50010108947754
    9. '__("' → logprob: -19.75010108947754
    10. '(' → logprob: -19.75010108947754

Token 193: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001266613689949736
    2. ' self' → logprob: -9.000126838684082
    3. ',' → logprob: -13.000126838684082
    4. '   ' → logprob: -14.500126838684082
    5. '(self' → logprob: -15.250126838684082
    6. '       ' → logprob: -16.250125885009766
    7. '	self' → logprob: -17.000125885009766
    8. '
' → logprob: -17.500125885009766
    9. ',self' → logprob: -17.625125885009766
    10. ' ' → logprob: -18.875125885009766

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002742469310760498
    2. 'self' → logprob: -6.127742290496826
    3. ' ,' → logprob: -8.002742767333984
    4. '(self' → logprob: -8.627742767333984
    5. ',self' → logprob: -10.377742767333984
    6. '_,' → logprob: -11.877742767333984
    7. ' self' → logprob: -13.002742767333984
    8. '__,' → logprob: -13.252742767333984
    9. '   ' → logprob: -14.252742767333984
    10. ' (' → logprob: -15.002742767333984

Token 195: ' weight' (ID: 6049)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2588008940219879
    2. ' start' → logprob: -1.5088008642196655
    3. 'weight' → logprob: -5.133800983428955
    4. ' weight' → logprob: -7.883800983428955
    5. 'name' → logprob: -8.133800506591797
    6. 'self' → logprob: -9.008800506591797
    7. '   ' → logprob: -9.133800506591797
    8. ' ' → logprob: -10.758800506591797
    9. ' name' → logprob: -11.133800506591797
    10. ' self' → logprob: -12.133800506591797

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ' ,' → logprob: -12.250004768371582
    3. ',
' → logprob: -16.0000057220459
    4. ',start' → logprob: -16.5000057220459
    5. '‌,' → logprob: -16.8750057220459
    6. '   ' → logprob: -17.0000057220459
    7. 'self' → logprob: -17.1250057220459
    8. '=' → logprob: -17.7500057220459
    9. '       ' → logprob: -18.6250057220459
    10. '‍,' → logprob: -18.8750057220459

Token 197: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.16024991869926453
    2. 'start' → logprob: -1.910249948501587
    3. ' ' → logprob: -11.035249710083008
    4. ',start' → logprob: -13.660249710083008
    5. '    ' → logprob: -13.785249710083008
    6. '   ' → logprob: -13.785249710083008
    7. '  ' → logprob: -13.785249710083008
    8. ')' → logprob: -14.160249710083008
    9. ',' → logprob: -14.410249710083008
    10. '	start' → logprob: -14.535249710083008

Token 198: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.3915141355246305e-05
    2. '_' → logprob: -10.75002384185791
    3. ')_' → logprob: -14.25002384185791
    4. 'time' → logprob: -14.62502384185791
    5. ' _' → logprob: -15.62502384185791
    6. ',_' → logprob: -16.125024795532227
    7. ')' → logprob: -16.125024795532227
    8. '_t' → logprob: -16.625024795532227
    9. '_Time' → logprob: -16.625024795532227
    10. ',' → logprob: -16.625024795532227

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.273621405242011e-05
    2. ' ,' → logprob: -10.500032424926758
    3. '):' → logprob: -12.750032424926758
    4. ',
' → logprob: -14.500032424926758
    5. '<|end|>' → logprob: -14.875032424926758
    6. '‌,' → logprob: -15.000032424926758
    7. '=' → logprob: -15.250032424926758
    8. ',start' → logprob: -15.375032424926758
    9. '   ' → logprob: -15.375032424926758
    10. '):
' → logprob: -15.875032424926758

Token 200: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.2519303858280182
    2. 'end' → logprob: -1.5019303560256958
    3. ' ' → logprob: -14.751930236816406
    4. '	end' → logprob: -15.626930236816406
    5. ''end' → logprob: -15.626930236816406
    6. '   ' → logprob: -15.751930236816406
    7. '=end' → logprob: -16.501930236816406
    8. '(end' → logprob: -16.751930236816406
    9. ',end' → logprob: -16.876930236816406
    10. 'stop' → logprob: -16.876930236816406

Token 201: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.690834273584187e-05
    2. '_' → logprob: -10.25003719329834
    3. ')_' → logprob: -14.37503719329834
    4. '_line' → logprob: -15.50003719329834
    5. '_times' → logprob: -16.500036239624023
    6. ' _' → logprob: -16.500036239624023
    7. '_t' → logprob: -16.625036239624023
    8. '_Time' → logprob: -16.750036239624023
    9. ')' → logprob: -16.875036239624023
    10. 'time' → logprob: -16.875036239624023

Token 202: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029755467548966408
    2. '):
' → logprob: -3.5297553539276123
    3. ')' → logprob: -13.279755592346191
    4. '   ' → logprob: -13.529755592346191
    5. '):
' → logprob: -14.029755592346191
    6. ' ):' → logprob: -14.779755592346191
    7. ':' → logprob: -15.154755592346191
    8. ',' → logprob: -15.779755592346191
    9. '):

' → logprob: -16.529754638671875
    10. '       ' → logprob: -16.779754638671875

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041125001735053957
    2. 'self' → logprob: -8.125411033630371
    3. ' self' → logprob: -9.875411033630371
    4. '):
' → logprob: -10.250411033630371
    5. ',' → logprob: -11.500411033630371
    6. ')' → logprob: -12.375411033630371
    7. '):' → logprob: -12.500411033630371
    8. '<|end|>' → logprob: -13.000411033630371
    9. '
' → logprob: -13.125411033630371
    10. ':' → logprob: -13.250411033630371

Token 204: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3885733485221863
    2. ' self' → logprob: -1.138573408126831
    3. '       ' → logprob: -6.388573169708252
    4. '   ' → logprob: -10.88857364654541
    5. '	self' → logprob: -14.26357364654541
    6. 'weight' → logprob: -15.51357364654541
    7. '        ' → logprob: -15.88857364654541
    8. '    ' → logprob: -16.013572692871094
    9. ' ' → logprob: -16.138572692871094
    10. ' ' → logprob: -16.388572692871094

Token 205: '.weight' (ID: 49415)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5759932994842529
    2. '.weight' → logprob: -0.8259932994842529
    3. ' .' → logprob: -10.575993537902832
    4. 'weight' → logprob: -11.950993537902832
    5. '.weights' → logprob: -11.950993537902832
    6. '.we' → logprob: -13.325993537902832
    7. ' weight' → logprob: -13.325993537902832
    8. '._' → logprob: -13.450993537902832
    9. '.value' → logprob: -13.575993537902832
    10. '.user' → logprob: -13.700993537902832

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3719329535961151
    2. ',' → logprob: -1.3719329833984375
    3. ' =' → logprob: -2.8719329833984375
    4. ' ,' → logprob: -7.8719329833984375
    5. ',
' → logprob: -12.371932983398438
    6. '<|end|>' → logprob: -12.996932983398438
    7. '   ' → logprob: -13.871932983398438
    8. ' =
' → logprob: -13.871932983398438
    9. ')' → logprob: -14.121932983398438
    10. '=}' → logprob: -14.621932983398438

Token 207: ' weight' (ID: 6049)
  Prédit: ' weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.10020667314529419
    2. 'weight' → logprob: -2.3502066135406494
    3. 'weig' → logprob: -19.22520637512207
    4. '(weight' → logprob: -19.35020637512207
    5. ' weig' → logprob: -20.35020637512207
    6. ' gewicht' → logprob: -20.60020637512207
    7. ' ' → logprob: -21.10020637512207
    8. '    ' → logprob: -21.22520637512207
    9. '.weight' → logprob: -21.60020637512207
    10. ' ' → logprob: -22.10020637512207

Token 208: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005085629876703024
    2. 'self' → logprob: -5.505085468292236
    3. '
' → logprob: -7.630085468292236
    4. ' self' → logprob: -7.755085468292236
    5. ',' → logprob: -10.005085945129395
    6. '	' → logprob: -11.380085945129395
    7. '        
' → logprob: -11.505085945129395
    8. '<|end|>' → logprob: -11.630085945129395
    9. '   ' → logprob: -13.005085945129395
    10. ' ' → logprob: -13.130085945129395

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37868237495422363
    2. 'self' → logprob: -1.6286823749542236
    3. ' self' → logprob: -2.1286823749542236
    4. '
' → logprob: -10.128682136535645
    5. '	self' → logprob: -12.378682136535645
    6. '   ' → logprob: -12.753682136535645
    7. ',' → logprob: -13.128682136535645
    8. '        
' → logprob: -13.378682136535645
    9. ' ' → logprob: -13.753682136535645
    10. ' ' → logprob: -13.753682136535645

Token 210: ' self' (ID: 1051)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.3133101463317871
    2. 'start' → logprob: -1.313310146331787
    3. 'self' (adapté à ' self') → logprob: -10.813310623168945
    4. ' self' → logprob: -10.938310623168945
    5. ' end' → logprob: -11.938310623168945
    6. 'end' → logprob: -12.813310623168945
    7. '       ' → logprob: -13.688310623168945
    8. ' ' → logprob: -17.063310623168945
    9. '        ' → logprob: -17.688310623168945
    10. ' ' → logprob: -17.938310623168945

Token 211: '.start' (ID: 10181)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12765055894851685
    2. '.start' → logprob: -2.127650499343872
    3. ' .' → logprob: -7.377650737762451
    4. ',' → logprob: -10.127650260925293
    5. '._' → logprob: -11.002650260925293
    6. 'start' → logprob: -11.627650260925293
    7. ' start' → logprob: -11.877650260925293
    8. ' ' → logprob: -12.002650260925293
    9. '.end' → logprob: -12.002650260925293
    10. '.weight' → logprob: -12.252650260925293

Token 212: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -12.000006675720215
    3. '_times' → logprob: -15.000006675720215
    4. ' _' → logprob: -16.50000762939453
    5. '_date' → logprob: -17.25000762939453
    6. '_weight' → logprob: -17.50000762939453
    7. '_token' → logprob: -17.62500762939453
    8. '_code' → logprob: -17.62500762939453
    9. '_timestamp' → logprob: -17.75000762939453
    10. '_t' → logprob: -17.87500762939453

Token 213: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004214094020426273
    2. '=' → logprob: -5.754214286804199
    3. ' ,' → logprob: -7.129214286804199
    4. ',
' → logprob: -9.0042142868042
    5. ' =' → logprob: -9.2542142868042
    6. '<|end|>' → logprob: -11.8792142868042
    7. '       ' → logprob: -13.1292142868042
    8. ',

' → logprob: -13.5042142868042
    9. '   ' → logprob: -13.5042142868042
    10. '_' → logprob: -13.7542142868042

Token 214: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.2519463300704956
    2. 'start' → logprob: -1.5019463300704956
    3. ' end' → logprob: -11.626946449279785
    4. 'end' → logprob: -11.751946449279785
    5. ' ' → logprob: -15.126946449279785
    6. '(start' → logprob: -17.37694549560547
    7. '=start' → logprob: -17.75194549560547
    8. ' ' → logprob: -18.00194549560547
    9. '	start' → logprob: -18.00194549560547
    10. '[start' → logprob: -18.75194549560547

Token 215: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.125
    3. '_line' → logprob: -17.375
    4. '_token' → logprob: -17.625
    5. ' _' → logprob: -18.0
    6. 'time' → logprob: -18.375
    7. '_code' → logprob: -18.75
    8. '_t' → logprob: -19.0
    9. '_TIME' → logprob: -19.375
    10. '_times' → logprob: -19.625

Token 216: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023446721956133842
    2. 'self' → logprob: -3.773446798324585
    3. ' self' → logprob: -8.648447036743164
    4. '	' → logprob: -11.648447036743164
    5. '	self' → logprob: -12.398447036743164
    6. '   ' → logprob: -12.523447036743164
    7. ',' → logprob: -12.523447036743164
    8. '
' → logprob: -13.273447036743164
    9. '(self' → logprob: -13.398447036743164
    10. ',self' → logprob: -14.273447036743164

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014596513472497463
    2. 'self' → logprob: -4.264596462249756
    3. ' self' → logprob: -7.764596462249756
    4. '   ' → logprob: -12.764596939086914
    5. '	' → logprob: -12.889596939086914
    6. '	self' → logprob: -13.139596939086914
    7. '(self' → logprob: -15.264596939086914
    8. '           ' → logprob: -15.389596939086914
    9. '               ' → logprob: -15.764596939086914
    10. ' ' → logprob: -16.014596939086914

Token 218: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06244589760899544
    2. ' self' → logprob: -2.812445878982544
    3. '       ' → logprob: -7.812446117401123
    4. 'end' → logprob: -9.562445640563965
    5. ' end' → logprob: -12.937445640563965
    6. '        ' → logprob: -15.312445640563965
    7. '	self' → logprob: -15.562445640563965
    8. '   ' → logprob: -16.18744659423828
    9. '(self' → logprob: -16.56244659423828
    10. ' ' → logprob: -16.68744659423828

Token 219: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.19390375912189484
    2. '._' → logprob: -2.318903684616089
    3. '.' → logprob: -2.693903684616089
    4. ' .' → logprob: -4.693903923034668
    5. '_end' → logprob: -7.068903923034668
    6. 'end' → logprob: -8.818903923034668
    7. '_.' → logprob: -9.693903923034668
    8. '_' → logprob: -11.568903923034668
    9. '=end' → logprob: -11.693903923034668
    10. '.END' → logprob: -11.818903923034668

Token 220: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.125
    3. '_end' → logprob: -16.125
    4. 'time' → logprob: -17.125
    5. '_times' → logprob: -17.375
    6. '_line' → logprob: -18.125
    7. '_code' → logprob: -18.125
    8. '_tim' → logprob: -18.875
    9. '_TIME' → logprob: -19.25
    10. '   ' → logprob: -19.625

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008384080603718758
    2. ' =' → logprob: -5.1333842277526855
    3. '_time' → logprob: -6.8833842277526855
    4. ')' → logprob: -7.5083842277526855
    5. '=end' → logprob: -7.7583842277526855
    6. '<|end|>' → logprob: -8.883383750915527
    7. '_' → logprob: -9.133383750915527
    8. '   ' → logprob: -9.258383750915527
    9. '       ' → logprob: -10.508383750915527
    10. '_end' → logprob: -11.008383750915527

Token 222: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.38687145709991455
    2. 'end' → logprob: -1.1368714570999146
    3. '(end' → logprob: -15.761871337890625
    4. '=end' → logprob: -16.261871337890625
    5. ' ' → logprob: -16.386871337890625
    6. '	end' → logprob: -16.511871337890625
    7. '[end' → logprob: -17.386871337890625
    8. 'End' → logprob: -17.886871337890625
    9. '_end' → logprob: -18.136871337890625
    10. ''end' → logprob: -18.386871337890625

Token 223: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.320199877838604e-07
    2. 'time' → logprob: -14.75
    3. '_line' → logprob: -19.375
    4. '_TIME' → logprob: -19.625
    5. 'Time' → logprob: -20.125
    6. '_' → logprob: -20.125
    7. '_code' → logprob: -20.25
    8. '   ' → logprob: -20.75
    9. ' time' → logprob: -21.0
    10. ' _' → logprob: -21.0

Token 224: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00019710339256562293
    2. 'from' → logprob: -8.625197410583496
    3. 'import' → logprob: -11.375197410583496
    4. '
' → logprob: -12.750197410583496
    5. ' class' → logprob: -13.250197410583496
    6. '```' → logprob: -14.750197410583496
    7. '<class' → logprob: -15.125197410583496
    8. '@dat' → logprob: -15.625197410583496
    9. '    
' → logprob: -16.00019645690918
    10. '#' → logprob: -16.25019645690918

Token 225: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.318681188422488e-05
    2. 'from' → logprob: -11.25001335144043
    3. ' class' → logprob: -16.50001335144043
    4. 'import' → logprob: -16.87501335144043
    5. '@dat' → logprob: -19.87501335144043
    6. '<class' → logprob: -20.25001335144043
    7. 'enum' → logprob: -20.25001335144043
    8. '```' → logprob: -20.62501335144043
    9. '
' → logprob: -21.00001335144043
    10. 'classmethod' → logprob: -21.12501335144043

Token 226: ' Event' (ID: 6400)
  Prédit: ' Event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Event' → logprob: -0.03804149478673935
    2. 'Event' → logprob: -3.288041591644287
    3. '_Event' → logprob: -17.913042068481445
    4. '	Event' → logprob: -18.038042068481445
    5. '_event' → logprob: -18.538042068481445
    6. '<Event' → logprob: -18.913042068481445
    7. ' event' → logprob: -19.663042068481445
    8. '(Event' → logprob: -19.913042068481445
    9. '.Event' → logprob: -20.163042068481445
    10. 'event' → logprob: -20.788042068481445

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3869188129901886
    2. ':
' → logprob: -1.1369187831878662
    3. ':
' → logprob: -11.261919021606445
    4. '(Enum' → logprob: -11.261919021606445
    5. ':

' → logprob: -11.386919021606445
    6. '(Type' → logprob: -12.011919021606445
    7. '(' → logprob: -13.261919021606445
    8. ':def' → logprob: -13.761919021606445
    9. 'Type' → logprob: -14.386919021606445
    10. '(object' → logprob: -14.511919021606445

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5233891010284424
    2. 'class' → logprob: -1.2733891010284424
    3. 'from' → logprob: -2.2733891010284424
    4. 'import' → logprob: -4.523388862609863
    5. ' class' → logprob: -5.023388862609863
    6. ' from' → logprob: -5.273388862609863
    7. 'def' → logprob: -6.648388862609863
    8. ' def' → logprob: -8.523388862609863
    9. '```' → logprob: -9.148388862609863
    10. '    
' → logprob: -9.273388862609863

Token 229: ' class' (ID: 744)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.33467063307762146
    2. 'class' (adapté à ' class') → logprob: -1.4596706628799438
    3. ' from' → logprob: -3.9596705436706543
    4. 'import' → logprob: -4.459670543670654
    5. 'def' → logprob: -4.709670543670654
    6. ' class' → logprob: -4.959670543670654
    7. ' def' → logprob: -5.334670543670654
    8. '   ' → logprob: -7.584670543670654
    9. '```' → logprob: -9.584671020507812
    10. ' import' → logprob: -10.084671020507812

Token 230: ' Type' (ID: 7003)
  Prédit: 'Type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Type' → logprob: -0.07908410578966141
    2. 'Enum' → logprob: -2.5790841579437256
    3. 'enum' → logprob: -9.329084396362305
    4. 'class' → logprob: -9.829084396362305
    5. ' Enum' → logprob: -10.704084396362305
    6. 'Int' → logprob: -10.954084396362305
    7. ' Type' → logprob: -12.204084396362305
    8. '(Enum' → logprob: -13.079084396362305
    9. ' enum' → logprob: -13.204084396362305
    10. '   ' → logprob: -14.579084396362305

Token 231: ':
' (ID: 734)
  Prédit: '(Enum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Enum' → logprob: -0.1826528012752533
    2. ':' → logprob: -2.432652711868286
    3. ':
' → logprob: -2.557652711868286
    4. '(enum' → logprob: -6.557652950286865
    5. '(' → logprob: -8.932652473449707
    6. '.Enum' → logprob: -9.682652473449707
    7. '.' → logprob: -11.432652473449707
    8. '(Int' → logprob: -11.682652473449707
    9. 'Enum' → logprob: -11.932652473449707
    10. '   ' → logprob: -12.682652473449707

Token 232: '       ' (ID: 309)
  Prédit: 'ENTER'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENTER' → logprob: -0.7775967717170715
    2. ' ENTER' → logprob: -1.1525967121124268
    3. '       ' → logprob: -1.6525967121124268
    4. '   ' → logprob: -3.5275967121124268
    5. '_ENTER' → logprob: -6.527596950531006
    6. '(' → logprob: -7.527596950531006
    7. ' ' → logprob: -8.027596473693848
    8. '    ' → logprob: -8.277596473693848
    9. 'Enter' → logprob: -8.527596473693848
    10. ' Enter' → logprob: -8.652596473693848

Token 233: ' ENTER' (ID: 94153)
  Prédit: 'ENTER'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENTER' (adapté à ' ENTER') → logprob: -0.0007102862582542002
    2. ' ENTER' → logprob: -7.250710487365723
    3. 'ENT' → logprob: -15.625710487365723
    4. '   ' → logprob: -16.000709533691406
    5. '_ENTER' → logprob: -18.375709533691406
    6. ' ' → logprob: -19.750709533691406
    7. 'Enter' → logprob: -20.000709533691406
    8. '  ' → logprob: -20.875709533691406
    9. 'enter' → logprob: -21.125709533691406
    10. 'LE' → logprob: -21.125709533691406

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408533096313477
    2. '=' → logprob: -0.9740853309631348
    3. ',' → logprob: -12.474084854125977
    4. '   ' → logprob: -12.849084854125977
    5. '    ' → logprob: -13.599084854125977
    6. ' ' → logprob: -14.974084854125977
    7. '  ' → logprob: -15.599084854125977
    8. ' =
' → logprob: -17.099084854125977
    9. '=
' → logprob: -17.099084854125977
    10. ':' → logprob: -17.349084854125977

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18002954125404358
    2. '0' → logprob: -1.9300295114517212
    3. ' ' → logprob: -4.305029392242432
    4. ''' → logprob: -5.305029392242432
    5. '"' → logprob: -6.805029392242432
    6. ' '' → logprob: -10.55502986907959
    7. '   ' → logprob: -12.05502986907959
    8. ' "' → logprob: -13.18002986907959
    9. ''s' → logprob: -15.30502986907959
    10. ''E' → logprob: -15.30502986907959

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8716198205947876
    2. ''' → logprob: -1.1216198205947876
    3. '0' → logprob: -1.9966198205947876
    4. '"' → logprob: -2.121619701385498
    5. ''ent' → logprob: -8.746620178222656
    6. ' ' → logprob: -9.121620178222656
    7. ''int' → logprob: -10.746620178222656
    8. ' '' → logprob: -11.121620178222656
    9. ''en' → logprob: -11.871620178222656
    10. ''E' → logprob: -11.871620178222656

Token 237: '
' (ID: 198)
  Prédit: ' LE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' LE' → logprob: -0.6811456084251404
    2. 'LE' → logprob: -1.1811456680297852
    3. '       ' → logprob: -1.6811456680297852
    4. '   ' → logprob: -7.181145668029785
    5. '_LE' → logprob: -9.806145668029785
    6. ' ' → logprob: -10.806145668029785
    7. ',' → logprob: -11.306145668029785
    8. '        
' → logprob: -11.681145668029785
    9. '
' → logprob: -12.181145668029785
    10. '    ' → logprob: -13.181145668029785

Token 238: '       ' (ID: 309)
  Prédit: ' LE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' LE' → logprob: -0.10273361951112747
    2. 'LE' → logprob: -2.352733612060547
    3. '       ' → logprob: -6.102733612060547
    4. '   ' → logprob: -8.227733612060547
    5. ' ' → logprob: -11.477733612060547
    6. '_LE' → logprob: -12.102733612060547
    7. '    ' → logprob: -13.352733612060547
    8. '        ' → logprob: -14.102733612060547
    9. '  ' → logprob: -14.727733612060547
    10. '     ' → logprob: -15.102733612060547

Token 239: ' LE' (ID: 13573)
  Prédit: 'LE'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LE' (adapté à ' LE') → logprob: -6.988221684878226e-06
    2. ' LE' → logprob: -12.000006675720215
    3. '2' → logprob: -14.250006675720215
    4. '_LE' → logprob: -16.62500762939453
    5. 'LEE' → logprob: -19.25000762939453
    6. 'LEASE' → logprob: -20.25000762939453
    7. 'EXIT' → logprob: -20.25000762939453
    8. '   ' → logprob: -20.37500762939453
    9. 'LEV' → logprob: -20.75000762939453
    10. '6' → logprob: -21.00000762939453

Token 240: 'AVE' (ID: 16357)
  Prédit: 'AVE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AVE' → logprob: -3.7697225252486533e-06
    2. 'A' → logprob: -12.625003814697266
    3. 'AV' → logprob: -16.250003814697266
    4. '
' → logprob: -16.500003814697266
    5. '   ' → logprob: -16.750003814697266
    6. 'AVER' → logprob: -17.125003814697266
    7. 'VE' → logprob: -18.375003814697266
    8. 'AFE' → logprob: -18.500003814697266
    9. '  ' → logprob: -18.625003814697266
    10. 'ASE' → logprob: -18.750003814697266

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519313097000122
    2. '=' → logprob: -1.5019313097000122
    3. '   ' → logprob: -13.626931190490723
    4. ' ' → logprob: -14.001931190490723
    5. '  ' → logprob: -16.50193214416504
    6. '    ' → logprob: -16.87693214416504
    7. '<|end|>' → logprob: -17.37693214416504
    8. ',' → logprob: -17.50193214416504
    9. '       ' → logprob: -18.50193214416504
    10. '	' → logprob: -18.50193214416504

Token 242: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.055005840957164764
    2. ' ' → logprob: -2.9300057888031006
    3. '-' → logprob: -9.30500602722168
    4. '0' → logprob: -10.55500602722168
    5. ' -' → logprob: -12.30500602722168
    6. '   ' → logprob: -13.55500602722168
    7. '  ' → logprob: -14.68000602722168
    8. '=' → logprob: -16.55500602722168
    9. '    ' → logprob: -17.43000602722168
    10. '２' → logprob: -17.43000602722168

Token 243: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016063073417171836
    2. '-' → logprob: -9.125160217285156
    3. '0' → logprob: -9.875160217285156
    4. ' ' → logprob: -15.500160217285156
    5. '```' → logprob: -18.000160217285156
    6. '   ' → logprob: -18.625160217285156
    7. '' → logprob: -19.750160217285156
    8. '２' → logprob: -19.750160217285156
    9. ' -' → logprob: -20.000160217285156
    10. '۲' → logprob: -20.250160217285156

Token 244: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5028917193412781
    2. '
' → logprob: -1.2528917789459229
    3. '   ' → logprob: -2.877891778945923
    4. ' def' → logprob: -3.002891778945923
    5. '    
' → logprob: -6.002891540527344
    6. '

' → logprob: -7.752891540527344
    7. '	def' → logprob: -8.627891540527344
    8. ' 
' → logprob: -8.752891540527344
    9. '  
' → logprob: -8.877891540527344
    10. '
' → logprob: -9.377891540527344

Token 245: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006481591612100601
    2. '   ' → logprob: -5.631481647491455
    3. ' def' → logprob: -6.006481647491455
    4. '
' → logprob: -7.881481647491455
    5. '    
' → logprob: -10.506481170654297
    6. '__' → logprob: -12.506481170654297
    7. '	def' → logprob: -12.881481170654297
    8. '```' → logprob: -13.756481170654297
    9. '

' → logprob: -14.506481170654297
    10. '  
' → logprob: -14.631481170654297

Token 246: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.600714161526412e-05
    2. ' def' → logprob: -9.500076293945312
    3. '__' → logprob: -14.375076293945312
    4. '   ' → logprob: -14.875076293945312
    5. '_def' → logprob: -16.000076293945312
    6. '
' → logprob: -17.250076293945312
    7. '	def' → logprob: -18.250076293945312
    8. '    
' → logprob: -18.750076293945312
    9. 'import' → logprob: -20.500076293945312
    10. ':def' → logprob: -21.375076293945312

Token 247: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00012356207298580557
    2. '__' → logprob: -9.000123977661133
    3. ' def' → logprob: -16.625123977661133
    4. ' ' → logprob: -16.750123977661133
    5. '_init' → logprob: -17.125123977661133
    6. ' ' → logprob: -17.875123977661133
    7. ' init' → logprob: -19.125123977661133
    8. ' ___' → logprob: -19.250123977661133
    9. 'init' → logprob: -20.625123977661133
    10. ' _' → logprob: -20.875123977661133

Token 248: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'lt' → logprob: -15.5
    3. ' init' → logprob: -17.125
    4. '_init' → logprob: -17.875
    5. '__' → logprob: -20.875
    6. 'eq' → logprob: -21.0
    7. 'def' → logprob: -21.125
    8. 'int' → logprob: -21.75
    9. 'ini' → logprob: -21.875
    10. '	init' → logprob: -22.0

Token 249: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6932782530784607
    2. '__(' → logprob: -0.6932782530784607
    3. '(' → logprob: -9.443278312683105
    4. '_(' → logprob: -10.193278312683105
    5. ' (' → logprob: -11.693278312683105
    6. 'self' → logprob: -12.818278312683105
    7. '__(
' → logprob: -13.318278312683105
    8. '__' → logprob: -14.568278312683105
    9. '   ' → logprob: -14.693278312683105
    10. ' ' → logprob: -16.19327735900879

Token 250: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.5776860184123507e-06
    2. ' self' → logprob: -12.87500286102295
    3. '(self' → logprob: -18.625001907348633
    4. '
' → logprob: -19.000001907348633
    5. '       ' → logprob: -19.125001907348633
    6. '   ' → logprob: -19.375001907348633
    7. '	self' → logprob: -21.125001907348633
    8. 's' → logprob: -21.250001907348633
    9. ' ' → logprob: -21.500001907348633
    10. '0' → logprob: -22.000001907348633

Token 251: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5571186542510986
    2. ',' → logprob: -1.4321186542510986
    3. '(self' → logprob: -1.6821186542510986
    4. ' self' → logprob: -6.1821184158325195
    5. ',self' → logprob: -8.93211841583252
    6. ' (' → logprob: -9.43211841583252
    7. ' ,' → logprob: -9.80711841583252
    8. '__(' → logprob: -11.55711841583252
    9. '(' → logprob: -12.30711841583252
    10. '	self' → logprob: -12.80711841583252

Token 252: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.050575461238622665
    2. ' time' → logprob: -3.0505754947662354
    3. 'timestamp' → logprob: -6.300575256347656
    4. ' timestamp' → logprob: -8.925575256347656
    5. 'self' → logprob: -11.175575256347656
    6. '   ' → logprob: -13.175575256347656
    7. ' ' → logprob: -14.300575256347656
    8. ' self' → logprob: -14.925575256347656
    9. '_time' → logprob: -15.175575256347656
    10. '	time' → logprob: -15.300575256347656

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018077615823131055
    2. ' ,' → logprob: -8.625181198120117
    3. ',time' → logprob: -14.625181198120117
    4. ',event' → logprob: -15.250181198120117
    5. '‌,' → logprob: -15.875181198120117
    6. ',int' → logprob: -16.375181198120117
    7. ',
' → logprob: -16.875181198120117
    8. ',type' → logprob: -17.000181198120117
    9. 'self' → logprob: -17.625181198120117
    10. '   ' → logprob: -17.750181198120117

Token 254: ' event' (ID: 2104)
  Prédit: ' type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.26270592212677
    2. 'type' → logprob: -1.63770592212677
    3. ' event' → logprob: -3.6377058029174805
    4. 'event' → logprob: -4.7627058029174805
    5. '_type' → logprob: -6.8877058029174805
    6. 'etype' → logprob: -8.01270580291748
    7. ' typ' → logprob: -8.38770580291748
    8. ' _' → logprob: -9.76270580291748
    9. ' et' → logprob: -10.26270580291748
    10. '_event' → logprob: -10.38770580291748

Token 255: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -4.320199877838604e-07
    2. 'type' → logprob: -15.25
    3. '_' → logprob: -16.75
    4. 'Type' → logprob: -18.5
    5. ' _' → logprob: -20.125
    6. ' type' → logprob: -20.75
    7. '_TYPE' → logprob: -20.875
    8. 'ype' → logprob: -21.375
    9. '_typ' → logprob: -22.0
    10. '_Type' → logprob: -22.125

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ' ,' → logprob: -12.500003814697266
    3. ',event' → logprob: -14.750003814697266
    4. '):' → logprob: -17.000003814697266
    5. ')' → logprob: -17.000003814697266
    6. '‌,' → logprob: -17.375003814697266
    7. ',
' → logprob: -17.625003814697266
    8. '_,' → logprob: -18.250003814697266
    9. '):
' → logprob: -18.250003814697266
    10. ',user' → logprob: -18.875003814697266

Token 257: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.47407835721969604
    2. ' weight' → logprob: -0.974078357219696
    3. '   ' → logprob: -13.974078178405762
    4. ' ' → logprob: -14.974078178405762
    5. ' 
' → logprob: -16.974079132080078
    6. '  ' → logprob: -17.099079132080078
    7. '    ' → logprob: -17.349079132080078
    8. '
' → logprob: -17.599079132080078
    9. ' gewicht' → logprob: -18.349079132080078
    10. '.weight' → logprob: -18.474079132080078

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07889430224895477
    2. '):
' → logprob: -2.5788943767547607
    3. '):
' → logprob: -13.20389461517334
    4. ' ):' → logprob: -13.57889461517334
    5. ',' → logprob: -14.70389461517334
    6. '   ' → logprob: -15.07889461517334
    7. ':' → logprob: -15.57889461517334
    8. ')' → logprob: -15.57889461517334
    9. '):

' → logprob: -15.70389461517334
    10. ' ):
' → logprob: -16.703893661499023

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005136742722243071
    2. 'self' → logprob: -5.755136966705322
    3. ':' → logprob: -7.005136966705322
    4. ' self' → logprob: -7.630136966705322
    5. ':
' → logprob: -8.255136489868164
    6. '   ' → logprob: -9.005136489868164
    7. '):
' → logprob: -9.130136489868164
    8. ',' → logprob: -10.380136489868164
    9. '):' → logprob: -11.630136489868164
    10. '	self' → logprob: -12.130136489868164

Token 260: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015239100903272629
    2. ' self' → logprob: -6.501523971557617
    3. '       ' → logprob: -10.751523971557617
    4. '   ' → logprob: -16.501523971557617
    5. '	self' → logprob: -16.876523971557617
    6. 'time' → logprob: -17.126523971557617
    7. 'super' → logprob: -20.376523971557617
    8. ' time' → logprob: -21.126523971557617
    9. ' ' → logprob: -21.126523971557617
    10. '
' → logprob: -21.751523971557617

Token 261: '.time' (ID: 11486)
  Prédit: '.time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -0.16075240075588226
    2. '.' → logprob: -1.9107524156570435
    3. '._' → logprob: -7.785752296447754
    4. 'time' → logprob: -9.785752296447754
    5. '.timestamp' → logprob: -10.910752296447754
    6. ' time' → logprob: -11.160752296447754
    7. ' .' → logprob: -11.410752296447754
    8. '_time' → logprob: -12.535752296447754
    9. '.
' → logprob: -13.410752296447754
    10. '.type' → logprob: -13.535752296447754

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14822551608085632
    2. ' =' → logprob: -2.5232255458831787
    3. ',' → logprob: -2.8982255458831787
    4. '<|end|>' → logprob: -6.3982253074646
    5. ' ,' → logprob: -7.5232253074646
    6. ')' → logprob: -9.148225784301758
    7. '<|end|>' → logprob: -9.523225784301758
    8. '_' → logprob: -10.648225784301758
    9. ' ' → logprob: -11.648225784301758
    10. '.' → logprob: -12.773225784301758

Token 263: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.5759395360946655
    2. 'time' → logprob: -0.8259395360946655
    3. '	time' → logprob: -16.700939178466797
    4. '(time' → logprob: -18.825939178466797
    5. '"time' → logprob: -19.575939178466797
    6. '=time' → logprob: -19.950939178466797
    7. '    ' → logprob: -21.075939178466797
    8. '   ' → logprob: -21.450939178466797
    9. ' ' → logprob: -21.575939178466797
    10. '_time' → logprob: -21.700939178466797

Token 264: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0074329376220703
    2. '       ' → logprob: -1.0074329376220703
    3. '<|end|>' → logprob: -2.0074329376220703
    4. '
' → logprob: -2.6324329376220703
    5. ',
' → logprob: -3.1324329376220703
    6. '        
' → logprob: -4.88243293762207
    7. '  
' → logprob: -6.00743293762207
    8. '   ' → logprob: -6.13243293762207
    9. ' 
' → logprob: -6.38243293762207
    10. 'self' → logprob: -6.50743293762207

Token 265: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5230069160461426
    2. 'self' → logprob: -1.6480069160461426
    3. ' self' → logprob: -1.8980069160461426
    4. '       ' → logprob: -2.8980069160461426
    5. ' ,' → logprob: -5.398006916046143
    6. 'event' → logprob: -6.648006916046143
    7. ',event' → logprob: -6.773006916046143
    8. ' event' → logprob: -7.023006916046143
    9. ',
' → logprob: -7.523006916046143
    10. '   ' → logprob: -7.648006916046143

Token 266: ' self' (ID: 1051)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.39604106545448303
    2. 'self' (adapté à ' self') → logprob: -1.1460410356521606
    3. ' event' → logprob: -5.021040916442871
    4. ' self' → logprob: -6.021040916442871
    5. '       ' → logprob: -9.646040916442871
    6. 'type' → logprob: -11.271040916442871
    7. '   ' → logprob: -11.521040916442871
    8. '
' → logprob: -12.021040916442871
    9. '_event' → logprob: -13.396040916442871
    10. '	event' → logprob: -13.396040916442871

Token 267: '.type' (ID: 9166)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.04039177671074867
    2. ',' → logprob: -4.54039192199707
    3. '_' → logprob: -4.79039192199707
    4. 'event' → logprob: -4.91539192199707
    5. '_event' → logprob: -5.29039192199707
    6. 'type' → logprob: -5.54039192199707
    7. '_,' → logprob: -6.66539192199707
    8. ' _' → logprob: -7.04039192199707
    9. '_
' → logprob: -7.91539192199707
    10. '   ' → logprob: -8.04039192199707

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5765659809112549
    2. ' =' → logprob: -0.8265659809112549
    3. '<|end|>' → logprob: -7.826565742492676
    4. ',' → logprob: -8.701565742492676
    5. '_' → logprob: -10.451565742492676
    6. '<|end|>' → logprob: -11.326565742492676
    7. ')' → logprob: -11.826565742492676
    8. ' ' → logprob: -12.701565742492676
    9. ' ,' → logprob: -13.076565742492676
    10. ' ==' → logprob: -13.451565742492676

Token 269: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.5759394764900208
    2. 'event' → logprob: -0.8259394764900208
    3. '	event' → logprob: -16.450939178466797
    4. '(event' → logprob: -18.325939178466797
    5. ' ' → logprob: -19.450939178466797
    6. '_event' → logprob: -19.700939178466797
    7. '
' → logprob: -20.200939178466797
    8. '[event' → logprob: -20.450939178466797
    9. 'Event' → logprob: -21.075939178466797
    10. '```' → logprob: -21.200939178466797

Token 270: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -4.60414821645827e-06
    2. '._' → logprob: -13.250004768371582
    3. '_' → logprob: -13.375004768371582
    4. 'type' → logprob: -14.125004768371582
    5. ' _' → logprob: -16.000003814697266
    6. '_TYPE' → logprob: -16.000003814697266
    7. 'Type' → logprob: -16.750003814697266
    8. '_t' → logprob: -17.625003814697266
    9. '_time' → logprob: -18.250003814697266
    10. 'ype' → logprob: -18.625003814697266

Token 271: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00011784763046307489
    2. ' self' → logprob: -9.250118255615234
    3. '       ' → logprob: -10.750118255615234
    4. '   ' → logprob: -15.375118255615234
    5. 'weight' → logprob: -17.250118255615234
    6. '	self' → logprob: -17.375118255615234
    7. '
' → logprob: -18.375118255615234
    8. ' ' → logprob: -20.375118255615234
    9. '```' → logprob: -20.500118255615234
    10. '           ' → logprob: -21.125118255615234

Token 274: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -0.0004061242798343301
    2. 'weight' → logprob: -7.875406265258789
    3. '.' → logprob: -11.375406265258789
    4. ' weight' → logprob: -11.625406265258789
    5. ' .' → logprob: -12.375406265258789
    6. '_weight' → logprob: -13.875406265258789
    7. '.weights' → logprob: -15.500406265258789
    8. '._' → logprob: -16.50040626525879
    9. '.Weight' → logprob: -16.62540626525879
    10. 'Weight' → logprob: -16.75040626525879

Token 275: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.16022422909736633
    2. ' weight' → logprob: -1.910224199295044
    3. '(weight' → logprob: -18.03522491455078
    4. ' ' → logprob: -18.41022491455078
    5. 'weig' → logprob: -19.03522491455078
    6. 'weights' → logprob: -19.41022491455078
    7. '.weight' → logprob: -19.53522491455078
    8. ' ' → logprob: -19.78522491455078
    9. 'Weight' → logprob: -20.03522491455078
    10. '   ' → logprob: -20.03522491455078

Token 277: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5784937739372253
    2. '   ' → logprob: -1.2034938335418701
    3. 'def' → logprob: -2.07849383354187
    4. '<|end|>' → logprob: -5.078493595123291
    5. ' def' → logprob: -5.203493595123291
    6. '    
' → logprob: -6.578493595123291
    7. ' ' → logprob: -8.70349407196045
    8. '  
' → logprob: -8.70349407196045
    9. '<|end|>' → logprob: -8.70349407196045
    10. '

' → logprob: -8.82849407196045

Token 278: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001329287188127637
    2. '   ' → logprob: -6.75132942199707
    3. ' def' → logprob: -8.75132942199707
    4. '	def' → logprob: -14.62632942199707
    5. '<|end|>' → logprob: -15.87632942199707
    6. '    
' → logprob: -16.00132942199707
    7. ' ' → logprob: -16.37632942199707
    8. '  ' → logprob: -17.75132942199707
    9. '0' → logprob: -18.37632942199707
    10. '
' → logprob: -18.50132942199707

Token 279: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.3199920178740285e-05
    2. '   ' → logprob: -11.250022888183594
    3. ' def' → logprob: -11.500022888183594
    4. '	def' → logprob: -18.000022888183594
    5. '
' → logprob: -19.625022888183594
    6. '    
' → logprob: -19.750022888183594
    7. ' ' → logprob: -20.125022888183594
    8. '  ' → logprob: -21.625022888183594
    9. '       ' → logprob: -22.250022888183594
    10. ':def' → logprob: -22.250022888183594

Token 280: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4744037389755249
    2. '__' → logprob: -0.9744037389755249
    3. ' def' → logprob: -8.349403381347656
    4. 'def' → logprob: -9.599403381347656
    5. ' ' → logprob: -11.474403381347656
    6. '___' → logprob: -12.474403381347656
    7. 'lt' → logprob: -13.099403381347656
    8. '<' → logprob: -13.724403381347656
    9. '   ' → logprob: -13.724403381347656
    10. '  ' → logprob: -13.849403381347656

Token 281: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -1.9361264946837764e-07
    2. 'eq' → logprob: -16.5
    3. ' lt' → logprob: -19.5
    4. '_lt' → logprob: -21.375
    5. 'LT' → logprob: -24.25
    6. 'init' → logprob: -24.25
    7. 'gt' → logprob: -24.5
    8. 'cmp' → logprob: -26.75
    9. '.lt' → logprob: -27.0
    10. '<' → logprob: -27.375

Token 282: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -3.4121114822482923e-06
    2. '(self' → logprob: -13.000003814697266
    3. '_(' → logprob: -14.125003814697266
    4. '__' → logprob: -15.625003814697266
    5. '__(
' → logprob: -16.375003814697266
    6. '(' → logprob: -19.375003814697266
    7. '__((' → logprob: -19.375003814697266
    8. '__('' → logprob: -20.125003814697266
    9. 'self' → logprob: -20.250003814697266
    10. '>(' → logprob: -21.500003814697266

Token 283: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8624639324116288e-06
    2. ' self' → logprob: -13.250001907348633
    3. '
' → logprob: -19.000001907348633
    4. '0' → logprob: -21.000001907348633
    5. '(self' → logprob: -21.375001907348633
    6. '   ' → logprob: -22.000001907348633
    7. 's' → logprob: -22.125001907348633
    8. '1' → logprob: -22.250001907348633
    9. ' ' → logprob: -22.250001907348633
    10. ',' → logprob: -22.625001907348633

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007140501867979765
    2. 'self' → logprob: -5.007140636444092
    3. '<|end|>' → logprob: -9.382140159606934
    4. ' ,' → logprob: -9.632140159606934
    5. 'other' → logprob: -9.757140159606934
    6. '(self' → logprob: -9.757140159606934
    7. '__(' → logprob: -9.757140159606934
    8. ')(' → logprob: -10.632140159606934
    9. ')' → logprob: -10.882140159606934
    10. '__,' → logprob: -11.382140159606934

Token 285: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0015047440538182855
    2. ' other' → logprob: -6.501504898071289
    3. 'self' → logprob: -13.001504898071289
    4. 'Other' → logprob: -16.12650489807129
    5. '(other' → logprob: -18.62650489807129
    6. '_other' → logprob: -19.12650489807129
    7. '.other' → logprob: -19.75150489807129
    8. 'o' → logprob: -20.87650489807129
    9. 'oth' → logprob: -21.50150489807129
    10. '其他' → logprob: -21.87650489807129

Token 286: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4743611216545105
    2. '):
' → logprob: -0.9743611216545105
    3. ' ):' → logprob: -8.974361419677734
    4. ' ):
' → logprob: -9.724361419677734
    5. '):
' → logprob: -10.474361419677734
    6. ')' → logprob: -10.599361419677734
    7. 'self' → logprob: -10.724361419677734
    8. '):

' → logprob: -10.849361419677734
    9. ':' → logprob: -14.224361419677734
    10. '       ' → logprob: -14.724361419677734

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012666216120123863
    2. ' if' → logprob: -4.63766622543335
    3. 'if' → logprob: -6.13766622543335
    4. 'return' → logprob: -7.63766622543335
    5. ' return' → logprob: -8.262665748596191
    6. '   ' → logprob: -12.887665748596191
    7. '           ' → logprob: -13.262665748596191
    8. '
' → logprob: -15.387665748596191
    9. '```' → logprob: -15.387665748596191
    10. '0' → logprob: -15.512665748596191

Token 288: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0277871023863554
    2. 'return' → logprob: -3.777787208557129
    3. ' if' → logprob: -5.527787208557129
    4. '       ' → logprob: -7.527787208557129
    5. ' return' → logprob: -10.902787208557129
    6. '           ' → logprob: -17.027786254882812
    7. '   ' → logprob: -17.777786254882812
    8. '```' → logprob: -18.027786254882812
    9. '
' → logprob: -18.277786254882812
    10. '	if' → logprob: -18.652786254882812

Token 289: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889606058597565
    2. ' self' → logprob: -2.5788960456848145
    3. '(self' → logprob: -12.078896522521973
    4. '	self' → logprob: -15.203896522521973
    5. ' (' → logprob: -15.703896522521973
    6. ' ' → logprob: -16.578895568847656
    7. '[self' → logprob: -17.203895568847656
    8. '
' → logprob: -17.203895568847656
    9. '   ' → logprob: -17.453895568847656
    10. '=self' → logprob: -18.203895568847656

Token 290: '.time' (ID: 11486)
  Prédit: '.time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -0.00010700009443098679
    2. 'time' → logprob: -9.250106811523438
    3. '.' → logprob: -11.625106811523438
    4. '.type' → logprob: -13.375106811523438
    5. '"time' → logprob: -15.750106811523438
    6. ' time' → logprob: -16.250106811523438
    7. '.timestamp' → logprob: -17.375106811523438
    8. ' .' → logprob: -17.500106811523438
    9. '.token' → logprob: -17.625106811523438
    10. '.t' → logprob: -18.375106811523438

Token 291: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5849158763885498
    2. '!=' → logprob: -0.8349158763885498
    3. '==' → logprob: -5.209916114807129
    4. ' ==' → logprob: -5.709916114807129
    5. '<' → logprob: -9.209916114807129
    6. '[' → logprob: -11.209916114807129
    7. ' <' → logprob: -11.334916114807129
    8. '=' → logprob: -11.584916114807129
    9. '()!=' → logprob: -12.084916114807129
    10. '!=(' → logprob: -12.709916114807129

Token 292: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.029750484973192215
    2. ' other' → logprob: -3.5297505855560303
    3. '(other' → logprob: -18.65475082397461
    4. 'Other' → logprob: -18.90475082397461
    5. '.other' → logprob: -20.77975082397461
    6. 'self' → logprob: -21.52975082397461
    7. '_other' → logprob: -21.77975082397461
    8. '其他' → logprob: -21.90475082397461
    9. '
' → logprob: -24.27975082397461
    10. 'others' → logprob: -24.65475082397461

Token 293: '.time' (ID: 11486)
  Prédit: '.time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -3.583550642360933e-05
    2. 'time' → logprob: -10.500036239624023
    3. '.' → logprob: -11.750036239624023
    4. ' .' → logprob: -15.625036239624023
    5. ' time' → logprob: -15.875036239624023
    6. '.type' → logprob: -17.875036239624023
    7. '"time' → logprob: -18.375036239624023
    8. '	time' → logprob: -18.875036239624023
    9. 'Time' → logprob: -20.125036239624023
    10. '(time' → logprob: -20.625036239624023

Token 294: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4035019874572754
    2. ':' → logprob: -1.5285019874572754
    3. ' and' → logprob: -2.4035019874572754
    4. '           ' → logprob: -4.028501987457275
    5. 'and' → logprob: -5.153501987457275
    6. ':return' → logprob: -7.153501987457275
    7. '       ' → logprob: -8.403501510620117
    8. '   ' → logprob: -10.403501510620117
    9. 'return' → logprob: -10.778501510620117
    10. ',' → logprob: -10.778501510620117

Token 295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048652201890945435
    2. 'return' → logprob: -3.423652172088623
    3. ' return' → logprob: -4.298652172088623
    4. ' if' → logprob: -7.548652172088623
    5. ':
' → logprob: -7.798652172088623
    6. ' and' → logprob: -8.798652648925781
    7. 'if' → logprob: -9.548652648925781
    8. '
' → logprob: -10.173652648925781
    9. ':return' → logprob: -10.173652648925781
    10. '               ' → logprob: -10.673652648925781

Token 296: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009160450659692287
    2. ' return' → logprob: -5.00916051864624
    3. '           ' → logprob: -6.50916051864624
    4. 'if' → logprob: -7.50916051864624
    5. '               ' → logprob: -8.009160041809082
    6. ' if' → logprob: -9.634160041809082
    7. '
' → logprob: -12.134160041809082
    8. '   ' → logprob: -15.134160041809082
    9. '       ' → logprob: -15.259160041809082
    10. '                   ' → logprob: -15.509160041809082

Token 297: ' LE' (ID: 13573)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0011187844211235642
    2. 'if' → logprob: -7.2511186599731445
    3. ' return' → logprob: -8.001118659973145
    4. '           ' → logprob: -9.626118659973145
    5. ' if' → logprob: -12.501118659973145
    6. '#' → logprob: -13.126118659973145
    7. '               ' → logprob: -13.376118659973145
    8. '       ' → logprob: -15.126118659973145
    9. '```' → logprob: -16.12611961364746
    10. '   ' → logprob: -17.25111961364746

Token 298: 'AVE' (ID: 16357)
  Prédit: 'AVE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AVE' → logprob: -0.31667956709861755
    2. 'ave' → logprob: -2.0666794776916504
    3. 'turn' → logprob: -2.8166794776916504
    4. 'TURN' → logprob: -3.5666794776916504
    5. 'E' → logprob: -4.06667947769165
    6. 'eturn' → logprob: -4.44167947769165
    7. 'return' → logprob: -4.56667947769165
    8. ' if' → logprob: -5.06667947769165
    9. 'if' → logprob: -5.44167947769165
    10. '           ' → logprob: -6.81667947769165

Token 299: ' events' (ID: 6124)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4772559106349945
    2. ' return' → logprob: -0.9772559404373169
    3. ' if' → logprob: -6.727255821228027
    4. '           ' → logprob: -7.102255821228027
    5. '
' → logprob: -8.227255821228027
    6. 'if' → logprob: -9.102255821228027
    7. ' is' → logprob: -9.352255821228027
    8. '=' → logprob: -9.477255821228027
    9. ':return' → logprob: -9.477255821228027
    10. ',' → logprob: -9.602255821228027

Token 300: ' before' (ID: 2254)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9023965001106262
    2. 'return' → logprob: -1.1523964405059814
    3. ' should' → logprob: -1.9023964405059814
    4. '           ' → logprob: -2.6523964405059814
    5. 'should' → logprob: -4.2773966789245605
    6. '<' → logprob: -4.4023966789245605
    7. ' <' → logprob: -5.0273966789245605
    8. '               ' → logprob: -5.2773966789245605
    9. ',' → logprob: -5.6523966789245605
    10. ' are' → logprob: -5.7773966789245605

Token 301: ' ENTER' (ID: 94153)
  Prédit: 'Event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Event' → logprob: -0.12840832769870758
    2. 'return' → logprob: -3.253408432006836
    3. 'self' → logprob: -3.878408432006836
    4. 'ENTER' → logprob: -3.878408432006836
    5. ' Event' → logprob: -4.253408432006836
    6. '(Event' → logprob: -4.628408432006836
    7. 'Enter' → logprob: -5.003408432006836
    8. 'other' → logprob: -5.503408432006836
    9. ' ENTER' → logprob: -5.878408432006836
    10. ' return' → logprob: -7.003408432006836

Token 302: ' events' (ID: 6124)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21914029121398926
    2. 'return' → logprob: -2.2191402912139893
    3. ' return' → logprob: -2.9691402912139893
    4. '           ' → logprob: -3.9691402912139893
    5. 'if' → logprob: -4.59414005279541
    6. ':' → logprob: -6.34414005279541
    7. '       ' → logprob: -6.59414005279541
    8. ' and' → logprob: -6.59414005279541
    9. ':return' → logprob: -7.09414005279541
    10. '
' → logprob: -7.21914005279541

Token 303: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3376806676387787
    2. 'return' → logprob: -1.962680697441101
    3. ' return' → logprob: -2.3376805782318115
    4. ' if' → logprob: -3.8376805782318115
    5. '
' → logprob: -4.087680816650391
    6. '       ' → logprob: -4.712680816650391
    7. '               ' → logprob: -6.962680816650391
    8. ' and' → logprob: -7.712680816650391
    9. 'if' → logprob: -8.46268081665039
    10. ',' → logprob: -8.46268081665039

Token 304: ' avoid' (ID: 8397)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07192803919315338
    2. ' return' → logprob: -2.946928024291992
    3. 'prevent' → logprob: -4.946928024291992
    4. 'ensure' → logprob: -5.196928024291992
    5. ' prevent' → logprob: -6.696928024291992
    6. ' ensure' → logprob: -7.196928024291992
    7. 'avoid' → logprob: -7.321928024291992
    8. 'def' → logprob: -8.071928024291992
    9. ' avoid' → logprob: -8.446928024291992
    10. '           ' → logprob: -8.571928024291992

Token 305: ' immediate' (ID: 22158)
  Prédit: ' overload'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overload' → logprob: -1.1949199438095093
    2. 'over' → logprob: -1.4449199438095093
    3. ' over' → logprob: -2.444920063018799
    4. 'False' → logprob: -2.819920063018799
    5. ' people' → logprob: -3.194920063018799
    6. ' allowing' → logprob: -3.319920063018799
    7. ' overcrow' → logprob: -3.444920063018799
    8. 'allow' → logprob: -3.569920063018799
    9. ' exceeding' → logprob: -3.569920063018799
    10. ' increasing' → logprob: -3.944920063018799

Token 306: ' overload' (ID: 75974)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.6468169093132019
    2. ' over' → logprob: -2.0218169689178467
    3. ' overload' → logprob: -2.2718169689178467
    4. 'weight' → logprob: -2.3968169689178467
    5. ' weight' → logprob: -2.8968169689178467
    6. 'increase' → logprob: -3.7718169689178467
    7. '+' → logprob: -4.646816730499268
    8. ' increase' → logprob: -4.646816730499268
    9. ' overcrow' → logprob: -4.646816730499268
    10. '+=' → logprob: -5.146816730499268

Token 307: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8293696641921997
    2. ' return' → logprob: -1.3293696641921997
    3. ' if' → logprob: -2.20436954498291
    4. '           ' → logprob: -2.20436954498291
    5. 'return' → logprob: -2.57936954498291
    6. '               ' → logprob: -6.70436954498291
    7. '
' → logprob: -7.70436954498291
    8. 'if' → logprob: -8.20436954498291
    9. '   ' → logprob: -8.57936954498291
    10. ',' → logprob: -9.07936954498291

Token 308: ' boundary' (ID: 35021)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.03973231464624405
    2. ' the' → logprob: -3.6647322177886963
    3. 'same' → logprob: -5.164732456207275
    4. 'time' → logprob: -5.914732456207275
    5. 'a' → logprob: -6.539732456207275
    6. 'equal' → logprob: -7.039732456207275
    7. 'leave' → logprob: -7.539732456207275
    8. 'enter' → logprob: -8.039731979370117
    9. 'that' → logprob: -8.164731979370117
    10. 'departure' → logprob: -8.664731979370117

Token 309: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7783262729644775
    2. '           ' → logprob: -1.6533262729644775
    3. ' return' → logprob: -1.7783262729644775
    4. '       ' → logprob: -2.2783262729644775
    5. ' if' → logprob: -2.6533262729644775
    6. 'if' → logprob: -5.028326034545898
    7. '
' → logprob: -7.528326034545898
    8. '               ' → logprob: -7.903326034545898
    9. '   ' → logprob: -9.653326034545898
    10. ' ' → logprob: -10.403326034545898

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44155216217041016
    2. 'return' → logprob: -1.9415521621704102
    3. ' return' → logprob: -2.19155216217041
    4. '       ' → logprob: -2.31655216217041
    5. ' if' → logprob: -6.06655216217041
    6. 'if' → logprob: -7.69155216217041
    7. '               ' → logprob: -8.44155216217041
    8. '
' → logprob: -9.44155216217041
    9. '   ' → logprob: -10.06655216217041
    10. '	return' → logprob: -12.94155216217041

Token 311: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007745159324258566
    2. ' return' → logprob: -5.257745265960693
    3. '           ' → logprob: -6.007745265960693
    4. 'if' → logprob: -10.507744789123535
    5. '               ' → logprob: -11.132744789123535
    6. '       ' → logprob: -12.882744789123535
    7. '
' → logprob: -13.007744789123535
    8. ' if' → logprob: -13.632744789123535
    9. '   ' → logprob: -15.132744789123535
    10. '	return' → logprob: -16.38274574279785

Token 312: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.553032628493384e-05
    2. ' self' → logprob: -9.500075340270996
    3. '(self' → logprob: -14.500075340270996
    4. '
' → logprob: -17.875076293945312
    5. '           ' → logprob: -17.875076293945312
    6. '   ' → logprob: -18.875076293945312
    7. '	self' → logprob: -19.375076293945312
    8. '       ' → logprob: -20.125076293945312
    9. '               ' → logprob: -20.375076293945312
    10. '[self' → logprob: -21.250076293945312

Token 313: '.type' (ID: 9166)
  Prédit: '.type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.type' → logprob: -7.896309739408025e-07
    2. 'type' → logprob: -14.375000953674316
    3. '.' → logprob: -15.625000953674316
    4. ' .' → logprob: -19.5
    5. '.time' → logprob: -19.5
    6. '.typ' → logprob: -19.75
    7. '"type' → logprob: -19.75
    8. ':type' → logprob: -20.25
    9. '	type' → logprob: -20.75
    10. '.Type' → logprob: -20.875

Token 314: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6482071280479431
    2. ' ==' → logprob: -0.8982071280479431
    3. '==' → logprob: -2.773207187652588
    4. '<' → logprob: -5.023207187652588
    5. ' >' → logprob: -7.648207187652588
    6. ' ' → logprob: -9.14820671081543
    7. '>' → logprob: -9.89820671081543
    8. '=' → logprob: -10.77320671081543
    9. '.' → logprob: -12.89820671081543
    10. '   ' → logprob: -12.89820671081543

Token 315: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0028344690799713135
    2. ' other' → logprob: -5.877834320068359
    3. 'Event' → logprob: -10.50283432006836
    4. ' Event' → logprob: -14.12783432006836
    5. ' ' → logprob: -14.25283432006836
    6. '(other' → logprob: -15.75283432006836
    7. 'Other' → logprob: -16.37783432006836
    8. '=' → logprob: -16.50283432006836
    9. 'event' → logprob: -16.62783432006836
    10. '   ' → logprob: -16.62783432006836

Token 316: '.type' (ID: 9166)
  Prédit: '.type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.type' → logprob: -3.054500666621607e-06
    2. 'type' → logprob: -12.75000286102295
    3. '.' → logprob: -16.000003814697266
    4. '.other' → logprob: -18.750003814697266
    5. ' .' → logprob: -18.875003814697266
    6. '.TYPE' → logprob: -19.375003814697266
    7. '.time' → logprob: -20.250003814697266
    8. '_.' → logprob: -20.500003814697266
    9. ':type' → logprob: -20.875003814697266
    10. 'other' → logprob: -21.000003814697266

Token 317: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03197551891207695
    2. 'return' → logprob: -3.906975507736206
    3. '
' → logprob: -4.781975746154785
    4. ' return' → logprob: -5.906975746154785
    5. '<|end|>' → logprob: -9.781975746154785
    6. ' else' → logprob: -10.281975746154785
    7. ':return' → logprob: -10.281975746154785
    8. 'else' → logprob: -10.406975746154785
    9. '{return' → logprob: -11.156975746154785
    10. '   ' → logprob: -11.281975746154785

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013454318046569824
    2. 'return' → logprob: -4.763454437255859
    3. '
' → logprob: -5.638454437255859
    4. ' return' → logprob: -7.388454437255859
    5. '	' → logprob: -8.38845443725586
    6. '   ' → logprob: -8.63845443725586
    7. '        
' → logprob: -9.88845443725586
    8. ' else' → logprob: -9.88845443725586
    9. 'else' → logprob: -10.26345443725586
    10. '	return' → logprob: -10.88845443725586

Token 319: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04869262874126434
    2. '       ' → logprob: -3.2986927032470703
    3. ' return' → logprob: -4.54869270324707
    4. '	return' → logprob: -11.92369270324707
    5. 'else' → logprob: -13.29869270324707
    6. '
' → logprob: -13.42369270324707
    7. 'self' → logprob: -13.67369270324707
    8. '   ' → logprob: -14.29869270324707
    9. '{return' → logprob: -14.29869270324707
    10. '	' → logprob: -14.67369270324707

Token 320: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033546582562848926
    2. ' self' → logprob: -8.000335693359375
    3. '(self' → logprob: -20.750335693359375
    4. '
' → logprob: -21.625335693359375
    5. '	self' → logprob: -21.750335693359375
    6. 'Self' → logprob: -22.000335693359375
    7. '   ' → logprob: -23.000335693359375
    8. '[self' → logprob: -23.000335693359375
    9. ' ' → logprob: -23.625335693359375
    10. '       ' → logprob: -24.250335693359375

Token 321: '.time' (ID: 11486)
  Prédit: '.time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -3.054500666621607e-06
    2. 'time' → logprob: -12.75000286102295
    3. '.' → logprob: -16.500003814697266
    4. '"time' → logprob: -18.875003814697266
    5. '.timestamp' → logprob: -19.375003814697266
    6. '.tim' → logprob: -19.875003814697266
    7. '.type' → logprob: -20.000003814697266
    8. '	time' → logprob: -20.250003814697266
    9. ' time' → logprob: -21.000003814697266
    10. ' .' → logprob: -22.000003814697266

Token 322: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.029750604182481766
    2. '<' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.15475082397461
    4. '<|end|>' → logprob: -17.27975082397461
    5. '<class' → logprob: -17.52975082397461
    6. '[' → logprob: -18.02975082397461
    7. '<int' → logprob: -18.27975082397461
    8. '()<' → logprob: -18.40475082397461
    9. ' <
' → logprob: -18.52975082397461
    10. ' <",' → logprob: -18.90475082397461

Token 323: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.10020699352025986
    2. ' other' → logprob: -2.3502070903778076
    3. '(other' → logprob: -15.850207328796387
    4. '.other' → logprob: -16.22520637512207
    5. 'Other' → logprob: -16.35020637512207
    6. 'self' → logprob: -16.97520637512207
    7. '_other' → logprob: -18.35020637512207
    8. ' ' → logprob: -20.60020637512207
    9. '其他' → logprob: -20.85020637512207
    10. ' self' → logprob: -21.47520637512207

Token 324: '.time' (ID: 11486)
  Prédit: '.time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -0.0001963881659321487
    2. 'time' → logprob: -8.87519645690918
    3. '.' → logprob: -9.87519645690918
    4. ' .' → logprob: -13.25019645690918
    5. ' time' → logprob: -13.50019645690918
    6. '.token' → logprob: -13.87519645690918
    7. '	time' → logprob: -15.00019645690918
    8. '"time' → logprob: -15.62519645690918
    9. '_time' → logprob: -15.75019645690918
    10. '.type' → logprob: -16.62519645690918

Token 325: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: ' Input' (ID: 10090)
  Prédit: 'Test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Test' → logprob: -0.8385775089263916
    2. 'Bridge' → logprob: -0.9635775089263916
    3. ' Bridge' → logprob: -2.9635775089263916
    4. 'Solution' → logprob: -3.3385775089263916
    5. 'Person' → logprob: -3.4635775089263916
    6. ' Test' → logprob: -3.8385775089263916
    7. ' Solution' → logprob: -4.4635772705078125
    8. 'Traffic' → logprob: -4.9635772705078125
    9. 'Simulation' → logprob: -5.7135772705078125
    10. ' Person' → logprob: -5.9635772705078125

Token 328: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.2699501514434814
    2. ':' → logprob: -1.3949501514434814
    3. ':
' → logprob: -1.6449501514434814
    4. 'Reader' → logprob: -1.8949501514434814
    5. 'Parser' → logprob: -2.3949501514434814
    6. 'Data' → logprob: -4.144949913024902
    7. 'Processor' → logprob: -4.394949913024902
    8. 'Provider' → logprob: -6.644949913024902
    9. 'Generator' → logprob: -6.644949913024902
    10. '():' → logprob: -6.644949913024902

Token 329: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015228374395519495
    2. ':
' → logprob: -6.501523017883301
    3. ':def' → logprob: -11.2515230178833
    4. ' :' → logprob: -12.6265230178833
    5. '():' → logprob: -14.1265230178833
    6. 'def' → logprob: -14.1265230178833
    7. ':

' → logprob: -14.2515230178833
    8. '(object' → logprob: -14.3765230178833
    9. '):' → logprob: -14.8765230178833
    10. '(' → logprob: -14.8765230178833

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04239334166049957
    2. ' def' → logprob: -3.292393445968628
    3. '    ' → logprob: -6.417393207550049
    4. '    
' → logprob: -6.917393207550049
    5. '<|end|>' → logprob: -7.042393207550049
    6. '```' → logprob: -8.417393684387207
    7. 'def' → logprob: -8.542393684387207
    8. '
' → logprob: -9.417393684387207
    9. ' class' → logprob: -9.667393684387207
    10. ' indentation' → logprob: -9.667393684387207

Token 331: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5764064192771912
    2. 'def' (adapté à ' def') → logprob: -0.8264064192771912
    3. '   ' → logprob: -7.826406478881836
    4. '@' → logprob: -9.826406478881836
    5. ' @' → logprob: -11.326406478881836
    6. 'class' → logprob: -13.826406478881836
    7. '	def' → logprob: -15.076406478881836
    8. 'import' → logprob: -15.576406478881836
    9. '```' → logprob: -15.826406478881836
    10. ' class' → logprob: -17.826406478881836

Token 332: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0422343909740448
    2. ' __' → logprob: -3.542234420776367
    3. ' parse' → logprob: -4.417234420776367
    4. ' init' → logprob: -8.417234420776367
    5. 'def' → logprob: -9.792234420776367
    6. ' ' → logprob: -10.042234420776367
    7. ' static' → logprob: -12.542234420776367
    8. ' ' → logprob: -12.792234420776367
    9. ' _' → logprob: -12.917234420776367
    10. '__' → logprob: -13.667234420776367

Token 333: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'call' → logprob: -15.25
    3. 'new' → logprob: -17.25
    4. ' init' → logprob: -18.125
    5. 'next' → logprob: -19.0
    6. 'ini' → logprob: -19.125
    7. '_init' → logprob: -19.75
    8. 'inite' → logprob: -19.875
    9. 'int' → logprob: -20.0
    10. 'def' → logprob: -20.0

Token 334: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.2520465552806854
    2. '(self' → logprob: -1.5020465850830078
    3. '(' → logprob: -10.252046585083008
    4. '__' → logprob: -10.502046585083008
    5. '_(' → logprob: -10.627046585083008
    6. ' (' → logprob: -11.127046585083008
    7. '__(
' → logprob: -12.002046585083008
    8. 'self' → logprob: -12.377046585083008
    9. '```' → logprob: -13.252046585083008
    10. '__((' → logprob: -14.127046585083008

Token 335: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005667338264174759
    2. '):
' → logprob: -7.8755669593811035
    3. ')' → logprob: -8.875566482543945
    4. ' self' → logprob: -10.500566482543945
    5. '
' → logprob: -11.500566482543945
    6. '   ' → logprob: -12.000566482543945
    7. '):' → logprob: -13.875566482543945
    8. '):

' → logprob: -14.375566482543945
    9. '(self' → logprob: -14.625566482543945
    10. ')
' → logprob: -14.750566482543945

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19696781039237976
    2. '):' → logprob: -2.196967840194702
    3. '):
' → logprob: -2.696967840194702
    4. 'self' → logprob: -9.196968078613281
    5. ',input' → logprob: -10.196968078613281
    6. '   ' → logprob: -10.446968078613281
    7. '):
' → logprob: -11.321968078613281
    8. ')' → logprob: -11.696968078613281
    9. '):

' → logprob: -11.946968078613281
    10. ',
' → logprob: -12.196968078613281

Token 337: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1889362633228302
    2. 'lines' → logprob: -2.438936233520508
    3. ' input' → logprob: -3.188936233520508
    4. ' lines' → logprob: -3.438936233520508
    5. 'data' → logprob: -4.938936233520508
    6. 'bridge' → logprob: -6.313936233520508
    7. ')' → logprob: -6.938936233520508
    8. 'text' → logprob: -7.813936233520508
    9. 'file' → logprob: -8.313936233520508
    10. '):
' → logprob: -8.438936233520508

Token 338: '_source' (ID: 23344)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.6149492859840393
    2. '_str' → logprob: -1.4899492263793945
    3. '_data' → logprob: -1.7399492263793945
    4. '_text' → logprob: -3.3649492263793945
    5. '_lines' → logprob: -3.8649492263793945
    6. '_line' → logprob: -6.7399492263793945
    7. '_source' → logprob: -7.1149492263793945
    8. '):
' → logprob: -8.114949226379395
    9. '_stream' → logprob: -8.739949226379395
    10. '):' → logprob: -8.864949226379395

Token 339: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023224835749715567
    2. '):
' → logprob: -6.252322673797607
    3. ',' → logprob: -8.00232219696045
    4. ' ):' → logprob: -10.37732219696045
    5. ':' → logprob: -10.75232219696045
    6. ')' → logprob: -12.25232219696045
    7. '):
' → logprob: -14.37732219696045
    8. '   ' → logprob: -14.87732219696045
    9. '=None' → logprob: -15.87732219696045
    10. ' :' → logprob: -16.002323150634766

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001204519416205585
    2. 'self' → logprob: -8.126204490661621
    3. '   ' → logprob: -8.376204490661621
    4. ',' → logprob: -8.751204490661621
    5. ':' → logprob: -8.876204490661621
    6. 'input' → logprob: -9.251204490661621
    7. '<|end|>' → logprob: -9.376204490661621
    8. ' self' → logprob: -9.626204490661621
    9. '	   ' → logprob: -10.626204490661621
    10. ')' → logprob: -10.876204490661621

Token 341: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002215796150267124
    2. ' self' → logprob: -6.50221586227417
    3. '       ' → logprob: -7.25221586227417
    4. '	self' → logprob: -13.252215385437012
    5. '   ' → logprob: -13.377215385437012
    6. 'input' → logprob: -14.002215385437012
    7. 'import' → logprob: -15.377215385437012
    8. 'def' → logprob: -15.627215385437012
    9. '
' → logprob: -17.377216339111328
    10. '        ' → logprob: -17.877216339111328

Token 342: '._' (ID: 2697)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.049185849726200104
    2. '._' → logprob: -3.0491857528686523
    3. '.' → logprob: -7.549185752868652
    4. '.source' → logprob: -9.924185752868652
    5. 'input' → logprob: -11.299185752868652
    6. '_input' → logprob: -12.674185752868652
    7. '=input' → logprob: -13.299185752868652
    8. '.data' → logprob: -13.424185752868652
    9. ' .' → logprob: -13.674185752868652
    10. ' input' → logprob: -13.924185752868652

Token 343: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01485352497547865
    2. 'lines' → logprob: -4.264853477478027
    3. 'source' → logprob: -7.389853477478027
    4. 'data' → logprob: -11.139853477478027
    5. 'reader' → logprob: -11.264853477478027
    6. ' input' → logprob: -11.389853477478027
    7. 'buffer' → logprob: -11.764853477478027
    8. 'iterator' → logprob: -12.139853477478027
    9. 'line' → logprob: -12.514853477478027
    10. '_input' → logprob: -12.639853477478027

Token 344: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.005563974846154451
    2. '_lines' → logprob: -6.005564212799072
    3. ' =' → logprob: -6.130564212799072
    4. '=' → logprob: -7.380564212799072
    5. '   ' → logprob: -9.380563735961914
    6. '_data' → logprob: -9.755563735961914
    7. '_' → logprob: -10.005563735961914
    8. 'source' → logprob: -10.380563735961914
    9. '_stream' → logprob: -11.505563735961914
    10. '_tokens' → logprob: -11.505563735961914

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14284579455852509
    2. ' =' → logprob: -2.017845869064331
    3. '<|end|>' → logprob: -9.76784610748291
    4. '.readline' → logprob: -10.01784610748291
    5. 'import' → logprob: -10.26784610748291
    6. ' ' → logprob: -12.01784610748291
    7. '=input' → logprob: -12.39284610748291
    8. ')' → logprob: -12.51784610748291
    9. '.' → logprob: -12.51784610748291
    10. '.read' → logprob: -12.64284610748291

Token 346: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031777136027812958
    2. ' input' → logprob: -5.753177642822266
    3. '	input' → logprob: -18.378177642822266
    4. '<input' → logprob: -18.878177642822266
    5. '(input' → logprob: -19.878177642822266
    6. 'output' → logprob: -20.128177642822266
    7. 'iter' → logprob: -20.253177642822266
    8. 'Input' → logprob: -20.253177642822266
    9. '   ' → logprob: -20.378177642822266
    10. '[input' → logprob: -20.378177642822266

Token 347: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -4.6087021473795176e-05
    2. '_' → logprob: -10.875045776367188
    3. 'Source' → logprob: -12.000045776367188
    4. 'source' → logprob: -12.000045776367188
    5. '_s' → logprob: -12.125045776367188
    6. '_token' → logprob: -12.500045776367188
    7. '_string' → logprob: -14.000045776367188
    8. '._' → logprob: -14.250045776367188
    9. '_sources' → logprob: -14.250045776367188
    10. '_Source' → logprob: -14.625045776367188

Token 348: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12607020139694214
    2. '<|end|>' → logprob: -2.251070261001587
    3. '   ' → logprob: -4.876070022583008
    4. '    
' → logprob: -6.251070022583008
    5. '

' → logprob: -6.501070022583008
    6. 'def' → logprob: -7.001070022583008
    7. '<|end|>' → logprob: -7.251070022583008
    8. ' 
' → logprob: -8.501070022583008
    9. ' def' → logprob: -8.876070022583008
    10. '  
' → logprob: -9.626070022583008

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8549360036849976
    2. '<|end|>' → logprob: -1.2299360036849976
    3. 'def' → logprob: -1.6049360036849976
    4. '
' → logprob: -3.104936122894287
    5. '    
' → logprob: -3.729936122894287
    6. '<|end|>' → logprob: -5.229936122894287
    7. ' def' → logprob: -5.479936122894287
    8. '        
' → logprob: -6.979936122894287
    9. '       ' → logprob: -6.979936122894287
    10. '

' → logprob: -7.729936122894287

Token 350: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009126556105911732
    2. ' def' → logprob: -7.000912666320801
    3. '   ' → logprob: -13.8759126663208
    4. '	def' → logprob: -16.125911712646484
    5. 'import' → logprob: -17.625911712646484
    6. ':def' → logprob: -17.750911712646484
    7. '_def' → logprob: -18.500911712646484
    8. '
' → logprob: -18.625911712646484
    9. 'de' → logprob: -18.875911712646484
    10. '```' → logprob: -20.250911712646484

Token 351: ' __' (ID: 2516)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.011300211772322655
    2. 'read' → logprob: -5.261300086975098
    3. ' parse' → logprob: -5.261300086975098
    4. 'def' → logprob: -7.386300086975098
    5. '__' → logprob: -8.511300086975098
    6. ' read' → logprob: -10.761300086975098
    7. '_parse' → logprob: -11.761300086975098
    8. ' def' → logprob: -12.261300086975098
    9. ' __' → logprob: -12.511300086975098
    10. 'next' → logprob: -15.136300086975098

Token 352: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0003418991982471198
    2. 'next' → logprob: -8.00034236907959
    3. 'init' → logprob: -12.25034236907959
    4. 'enter' → logprob: -13.50034236907959
    5. 'call' → logprob: -15.50034236907959
    6. 'ait' → logprob: -18.000341415405273
    7. 'iterator' → logprob: -19.625341415405273
    8. ' iter' → logprob: -20.625341415405273
    9. 'getitem' → logprob: -21.125341415405273
    10. ' next' → logprob: -21.375341415405273

Token 353: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007766338996589184
    2. '__(' → logprob: -5.007766246795654
    3. '(' → logprob: -6.882766246795654
    4. '   ' → logprob: -12.132766723632812
    5. ' (' → logprob: -12.132766723632812
    6. 'self' → logprob: -12.132766723632812
    7. 'def' → logprob: -12.757766723632812
    8. '_(' → logprob: -13.132766723632812
    9. '
' → logprob: -14.382766723632812
    10. ')(' → logprob: -14.632766723632812

Token 354: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8624639324116288e-06
    2. ' self' → logprob: -14.125001907348633
    3. ')' → logprob: -14.625001907348633
    4. '):
' → logprob: -15.125001907348633
    5. '   ' → logprob: -15.500001907348633
    6. '       ' → logprob: -16.375001907348633
    7. '
' → logprob: -17.500001907348633
    8. '):' → logprob: -19.000001907348633
    9. '(self' → logprob: -19.625001907348633
    10. ')
' → logprob: -19.875001907348633

Token 355: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38691088557243347
    2. '):
' → logprob: -1.1369109153747559
    3. 'self' → logprob: -11.011910438537598
    4. ')' → logprob: -11.886910438537598
    5. '):
' → logprob: -11.886910438537598
    6. '   ' → logprob: -12.011910438537598
    7. '):

' → logprob: -13.761910438537598
    8. '       ' → logprob: -13.886910438537598
    9. ',' → logprob: -14.511910438537598
    10. ':' → logprob: -14.886910438537598

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6286106983898208e-05
    2. '   ' → logprob: -12.875016212463379
    3. '        
' → logprob: -13.125016212463379
    4. 'self' → logprob: -13.250016212463379
    5. 'yield' → logprob: -13.375016212463379
    6. '    ' → logprob: -13.625016212463379
    7. ' yield' → logprob: -13.625016212463379
    8. '           ' → logprob: -13.875016212463379
    9. ' self' → logprob: -14.000016212463379
    10. '      ' → logprob: -14.125016212463379

Token 357: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07332072407007217
    2. ' for' → logprob: -3.8233206272125244
    3. ' yield' → logprob: -4.0733208656311035
    4. ' return' → logprob: -4.4483208656311035
    5. 'yield' → logprob: -4.8233208656311035
    6. 'return' (adapté à ' return') → logprob: -4.9483208656311035
    7. 'for' → logprob: -6.0733208656311035
    8. '   ' → logprob: -7.3233208656311035
    9. ' self' → logprob: -7.6983208656311035
    10. 'self' → logprob: -7.6983208656311035

Token 358: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004081128165125847
    2. ' self' → logprob: -5.5040812492370605
    3. ' iter' → logprob: -13.504080772399902
    4. 'iter' → logprob: -14.004080772399902
    5. '   ' → logprob: -14.754080772399902
    6. '       ' → logprob: -16.50408172607422
    7. '(self' → logprob: -16.87908172607422
    8. '	self' → logprob: -17.75408172607422
    9. ' ' → logprob: -19.87908172607422
    10. '
' → logprob: -20.50408172607422

Token 359: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5896894931793213
    2. '
' → logprob: -0.8396894931793213
    3. 'def' → logprob: -4.839689254760742
    4. '    
' → logprob: -5.464689254760742
    5. '  
' → logprob: -7.464689254760742
    6. ' def' → logprob: -8.464689254760742
    7. ' ' → logprob: -8.589689254760742
    8. ' 
' → logprob: -8.839689254760742
    9. '	def' → logprob: -9.589689254760742
    10. '        
' → logprob: -9.839689254760742

Token 361: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.11232220381498337
    2. '   ' → logprob: -2.3623220920562744
    3. '
' → logprob: -4.8623223304748535
    4. ' def' → logprob: -5.4873223304748535
    5. '    
' → logprob: -9.112321853637695
    6. '	def' → logprob: -10.112321853637695
    7. ' ' → logprob: -11.612321853637695
    8. '  
' → logprob: -13.487321853637695
    9. ':def' → logprob: -13.487321853637695
    10. '```' → logprob: -13.612321853637695

Token 362: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.491498531133402e-06
    2. ' __' → logprob: -11.875009536743164
    3. '_next' → logprob: -13.375009536743164
    4. 'next' → logprob: -15.000009536743164
    5. '___' → logprob: -15.750009536743164
    6. '_' → logprob: -15.875009536743164
    7. 'def' → logprob: -16.250009536743164
    8. '.__' → logprob: -16.750009536743164
    9. 'read' → logprob: -17.250009536743164
    10. '
' → logprob: -17.250009536743164

Token 363: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -4.320199877838604e-07
    2. ' next' → logprob: -15.25
    3. 'iter' → logprob: -16.0
    4. '_next' → logprob: -20.75
    5. 'Next' → logprob: -22.75
    6. '(next' → logprob: -23.25
    7. '.next' → logprob: -23.375
    8. 'an' → logprob: -24.0
    9. 'it' → logprob: -24.75
    10. '-next' → logprob: -24.75

Token 364: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03599539026618004
    2. '(self' → logprob: -3.4109954833984375
    3. '(' → logprob: -6.4109954833984375
    4. '()(' → logprob: -7.7859954833984375
    5. '__' → logprob: -8.660995483398438
    6. '()' → logprob: -9.410995483398438
    7. '_(' → logprob: -11.160995483398438
    8. '__()
' → logprob: -12.285995483398438
    9. ')(' → logprob: -12.410995483398438
    10. '__(
' → logprob: -12.660995483398438

Token 365: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.5776860184123507e-06
    2. ')' → logprob: -13.25000286102295
    3. ' self' → logprob: -15.12500286102295
    4. '):
' → logprob: -15.37500286102295
    5. ')
' → logprob: -15.75000286102295
    6. '
' → logprob: -16.000001907348633
    7. '):' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '       ' → logprob: -19.500001907348633
    10. '(self' → logprob: -19.625001907348633

Token 366: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47422629594802856
    2. '):' → logprob: -0.9742262959480286
    3. 'self' → logprob: -9.349225997924805
    4. '):
' → logprob: -10.224225997924805
    5. ')' → logprob: -11.224225997924805
    6. '):

' → logprob: -12.224225997924805
    7. '(self' → logprob: -12.974225997924805
    8. '   ' → logprob: -13.099225997924805
    9. ',' → logprob: -13.849225997924805
    10. ' ):' → logprob: -13.974225997924805

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008401192026212811
    2. ' line' → logprob: -7.625840187072754
    3. 'line' → logprob: -8.125840187072754
    4. '   ' → logprob: -11.500840187072754
    5. '        
' → logprob: -11.750840187072754
    6. ' for' → logprob: -11.750840187072754
    7. '      ' → logprob: -12.375840187072754
    8. '           ' → logprob: -12.625840187072754
    9. ' lines' → logprob: -12.625840187072754
    10. 'data' → logprob: -13.125840187072754

Token 368: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.023316634818911552
    2. ' line' → logprob: -3.7733166217803955
    3. '       ' → logprob: -10.023316383361816
    4. '   ' → logprob: -11.523316383361816
    5. 'while' → logprob: -11.523316383361816
    6. ' while' → logprob: -13.398316383361816
    7. 'for' → logprob: -13.398316383361816
    8. 'try' → logprob: -13.523316383361816
    9. '	line' → logprob: -14.023316383361816
    10. '_line' → logprob: -15.273316383361816

Token 369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197104603052139
    2. '=' → logprob: -2.8119709491729736
    3. 's' → logprob: -13.311970710754395
    4. '()' → logprob: -14.561970710754395
    5. ' ' → logprob: -15.061970710754395
    6. '   ' → logprob: -15.186970710754395
    7. '=line' → logprob: -15.311970710754395
    8. 'line' → logprob: -16.43697166442871
    9. '_' → logprob: -16.43697166442871
    10. ' =
' → logprob: -16.56197166442871

Token 370: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12778033316135406
    2. ' self' → logprob: -2.3777804374694824
    3. 'next' → logprob: -4.127780437469482
    4. ' next' → logprob: -4.502780437469482
    5. '	self' → logprob: -16.50278091430664
    6. '
' → logprob: -17.00278091430664
    7. '(self' → logprob: -18.00278091430664
    8. ' ' → logprob: -18.00278091430664
    9. 'Next' → logprob: -18.00278091430664
    10. 'input' → logprob: -18.12778091430664

Token 371: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.2471589798224159e-05
    2. '.' → logprob: -11.500012397766113
    3. '_next' → logprob: -14.250012397766113
    4. '
' → logprob: -14.750012397766113
    5. '_' → logprob: -15.250012397766113
    6. ' .' → logprob: -15.250012397766113
    7. ' ' → logprob: -16.75001335144043
    8. '_line' → logprob: -16.75001335144043
    9. '._
' → logprob: -16.87501335144043
    10. ')._' → logprob: -16.87501335144043

Token 372: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.36574100604048e-06
    2. ' input' → logprob: -13.000004768371582
    3. '_input' → logprob: -14.125004768371582
    4. 'next' → logprob: -15.000004768371582
    5. '
' → logprob: -15.500004768371582
    6. 'source' → logprob: -15.750004768371582
    7. '.input' → logprob: -15.875004768371582
    8. 'output' → logprob: -16.125003814697266
    9. 'line' → logprob: -16.812503814697266
    10. '	input' → logprob: -16.937503814697266

Token 373: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.00011117222311440855
    2. 'source' → logprob: -9.12511157989502
    3. 'Source' → logprob: -13.37511157989502
    4. '_line' → logprob: -15.12511157989502
    5. '()
' → logprob: -16.875110626220703
    6. 's' → logprob: -17.250110626220703
    7. '()' → logprob: -17.250110626220703
    8. 'SOURCE' → logprob: -17.250110626220703
    9. '_SOURCE' → logprob: -17.250110626220703
    10. '
' → logprob: -17.375110626220703

Token 374: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.165027217415627e-05
    2. '.' → logprob: -10.750021934509277
    3. ' readline' → logprob: -16.25002098083496
    4. '.strip' → logprob: -17.00002098083496
    5. '.readlines' → logprob: -18.50002098083496
    6. '.__' → logprob: -18.50002098083496
    7. '().' → logprob: -18.87502098083496
    8. '.rstrip' → logprob: -19.50002098083496
    9. '.next' → logprob: -19.75002098083496
    10. '.fetchone' → logprob: -19.87502098083496

Token 375: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16371028125286102
    2. '()
' → logprob: -1.9137102365493774
    3. '().' → logprob: -5.663710117340088
    4. '()

' → logprob: -11.788710594177246
    5. '()
' → logprob: -13.038710594177246
    6. '()\' → logprob: -15.038710594177246
    7. '(' → logprob: -16.03870964050293
    8. ' ()' → logprob: -16.41370964050293
    9. '()`' → logprob: -16.91370964050293
    10. '().
' → logprob: -17.03870964050293

Token 376: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3288253843784332
    2. '       ' → logprob: -1.7038253545761108
    3. 'if' → logprob: -2.3288254737854004
    4. '
' → logprob: -8.203824996948242
    5. '<|end|>' → logprob: -8.328824996948242
    6. '​' → logprob: -10.328824996948242
    7. 'newline' → logprob: -10.453824996948242
    8. '#line' → logprob: -10.578824996948242
    9. '        
' → logprob: -10.578824996948242
    10. '\n' → logprob: -10.828824996948242

Token 377: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008623320609331131
    2. ' if' → logprob: -4.758623123168945
    3. '
' → logprob: -11.758623123168945
    4. '       ' → logprob: -14.883623123168945
    5. '        
' → logprob: -15.633623123168945
    6. 'while' (adapté à ' while') → logprob: -16.008623123168945
    7. ' 
' → logprob: -16.383623123168945
    8. 'line' → logprob: -16.883623123168945
    9. 'If' → logprob: -16.883623123168945
    10. '	if' → logprob: -17.008623123168945

Token 378: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.12694260478019714
    2. 'line' → logprob: -2.1269426345825195
    3. ' not' → logprob: -11.25194263458252
    4. 'not' → logprob: -14.12694263458252
    5. '	line' → logprob: -14.62694263458252
    6. '(line' → logprob: -15.62694263458252
    7. '#line' → logprob: -16.001941680908203
    8. '=line' → logprob: -17.001941680908203
    9. '[line' → logprob: -17.876941680908203
    10. ' ' → logprob: -18.251941680908203

Token 379: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05739687755703926
    2. ' ==' → logprob: -3.55739688873291
    3. ' is' → logprob: -4.18239688873291
    4. '.strip' → logprob: -5.30739688873291
    5. '==' → logprob: -5.68239688873291
    6. 'and' → logprob: -5.68239688873291
    7. 'strip' → logprob: -9.30739688873291
    8. '.' → logprob: -9.55739688873291
    9. ' ' → logprob: -11.30739688873291
    10. ' !=' → logprob: -11.55739688873291

Token 380: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01815778948366642
    2. ' line' → logprob: -4.018157958984375
    3. ' not' → logprob: -12.643157958984375
    4. 'not' → logprob: -12.768157958984375
    5. '(line' → logprob: -13.518157958984375
    6. 'len' → logprob: -15.643157958984375
    7. '#line' → logprob: -16.518157958984375
    8. '	line' → logprob: -17.143157958984375
    9. '=line' → logprob: -17.268157958984375
    10. '[line' → logprob: -17.643157958984375

Token 381: '.strip' (ID: 40613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1002296432852745
    2. '.strip' → logprob: -2.3502297401428223
    3. ' .' → logprob: -11.475229263305664
    4. 'strip' → logprob: -11.850229263305664
    5. '==' → logprob: -12.850229263305664
    6. '.startswith' → logprob: -14.100229263305664
    7. '.rstrip' → logprob: -14.600229263305664
    8. ' and' → logprob: -14.725229263305664
    9. '.endswith' → logprob: -14.975229263305664
    10. ' ==' → logprob: -15.100229263305664

Token 382: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06203288957476616
    2. '()==' → logprob: -2.81203293800354
    3. '==' → logprob: -9.812032699584961
    4. '():' → logprob: -11.937032699584961
    5. '()=="' → logprob: -13.312032699584961
    6. '():
' → logprob: -14.312032699584961
    7. '()<' → logprob: -14.562032699584961
    8. ' ==' → logprob: -14.562032699584961
    9. '```' → logprob: -15.937032699584961
    10. '()<<' → logprob: -16.31203269958496

Token 383: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011370114982128143
    2. ' ==' → logprob: -4.8863701820373535
    3. '()==' → logprob: -5.6363701820373535
    4. '()' → logprob: -8.761369705200195
    5. '==
' → logprob: -11.636369705200195
    6. ']==' → logprob: -12.386369705200195
    7. '=='' → logprob: -12.386369705200195
    8. ':' → logprob: -12.511369705200195
    9. ')==' → logprob: -12.511369705200195
    10. '===' → logprob: -12.761369705200195

Token 384: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.06678994745016098
    2. ''' → logprob: -2.8167898654937744
    3. '""' → logprob: -5.8167901039123535
    4. '"":' → logprob: -6.3167901039123535
    5. '"' → logprob: -10.816789627075195
    6. ' '':
' → logprob: -12.066789627075195
    7. '''
' → logprob: -14.191789627075195
    8. ' '' → logprob: -15.191789627075195
    9. ''',' → logprob: -15.566789627075195
    10. ''b' → logprob: -15.566789627075195

Token 385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002190829487517476
    2. '       ' → logprob: -6.377191066741943
    3. ' line' → logprob: -8.252190589904785
    4. '
' → logprob: -9.252190589904785
    5. '               ' → logprob: -10.377190589904785
    6. ':' → logprob: -11.002190589904785
    7. 'line' → logprob: -11.127190589904785
    8. ':
' → logprob: -11.377190589904785
    9. '<|end|>' → logprob: -11.377190589904785
    10. '            
' → logprob: -11.502190589904785

Token 386: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.014167269691824913
    2. ' line' → logprob: -4.264167308807373
    3. '           ' → logprob: -13.014166831970215
    4. '	line' → logprob: -13.764166831970215
    5. '#line' → logprob: -15.014166831970215
    6. '
' → logprob: -16.26416778564453
    7. '   ' → logprob: -17.26416778564453
    8. '_line' → logprob: -17.38916778564453
    9. '=line' → logprob: -18.13916778564453
    10. ' ' → logprob: -18.38916778564453

Token 387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03807706758379936
    2. ' =' → logprob: -3.2880771160125732
    3. '=line' → logprob: -10.288077354431152
    4. '=self' → logprob: -13.788077354431152
    5. '           ' → logprob: -14.663077354431152
    6. 'line' → logprob: -16.663076400756836
    7. '       ' → logprob: -17.288076400756836
    8. '   ' → logprob: -18.413076400756836
    9. 'self' → logprob: -18.538076400756836
    10. '=
' → logprob: -18.913076400756836

Token 388: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889033854007721
    2. ' self' → logprob: -2.578890323638916
    3. '	self' → logprob: -15.203890800476074
    4. 'line' → logprob: -16.953889846801758
    5. '   ' → logprob: -17.078889846801758
    6. '
' → logprob: -17.203889846801758
    7. '       ' → logprob: -17.328889846801758
    8. '(self' → logprob: -17.453889846801758
    9. '=self' → logprob: -17.703889846801758
    10. ' ' → logprob: -17.953889846801758

Token 389: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: 0.0
    2. '.' → logprob: -16.875
    3. '   ' → logprob: -19.625
    4. ' _' → logprob: -20.0
    5. ' .' → logprob: -20.5
    6. '_input' → logprob: -20.625
    7. '_next' → logprob: -20.75
    8. ' ' → logprob: -20.75
    9. '.\' → logprob: -20.875
    10. '->_' → logprob: -21.125

Token 390: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1472419600977446e-06
    2. ' input' → logprob: -14.625000953674316
    3. 'source' → logprob: -15.250000953674316
    4. '.input' → logprob: -15.500000953674316
    5. '_input' → logprob: -17.000001907348633
    6. '(input' → logprob: -17.125001907348633
    7. '	input' → logprob: -17.375001907348633
    8. '<input' → logprob: -18.375001907348633
    9. '=input' → logprob: -18.875001907348633
    10. 'output' → logprob: -19.250001907348633

Token 391: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.0052354102954268456
    2. 'source' → logprob: -5.255235195159912
    3. 'Source' → logprob: -14.38023567199707
    4. '_SOURCE' → logprob: -14.63023567199707
    5. '-source' → logprob: -15.38023567199707
    6. '.source' → logprob: -16.00523567199707
    7. 'line' → logprob: -16.75523567199707
    8. ' source' → logprob: -17.25523567199707
    9. '.readline' → logprob: -17.38023567199707
    10. 'ource' → logprob: -17.63023567199707

Token 392: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -14.875000953674316
    3. '.readlines' → logprob: -16.375
    4. ' readline' → logprob: -17.25
    5. '.read' → logprob: -19.75
    6. '
' → logprob: -20.125
    7. '   ' → logprob: -20.625
    8. '       ' → logprob: -20.75
    9. ' .' → logprob: -21.0
    10. '.
' → logprob: -21.75

Token 393: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2652120292186737
    2. '       ' → logprob: -1.640212059020996
    3. '()
' → logprob: -3.265212059020996
    4. '<|end|>' → logprob: -8.140212059020996
    5. '(' → logprob: -9.140212059020996
    6. '        
' → logprob: -9.265212059020996
    7. ',' → logprob: -9.890212059020996
    8. '
' → logprob: -9.890212059020996
    9. '(
' → logprob: -10.390212059020996
    10. '        ' → logprob: -10.515212059020996

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006808687467128038
    2. 'if' → logprob: -5.131808757781982
    3. ' if' → logprob: -7.256808757781982
    4. '   ' → logprob: -8.881808280944824
    5. '           ' → logprob: -11.506808280944824
    6. ' ' → logprob: -11.631808280944824
    7. '
' → logprob: -12.881808280944824
    8. '```' → logprob: -12.881808280944824
    9. '        
' → logprob: -13.131808280944824
    10. 'None' → logprob: -13.631808280944824

Token 395: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.030287716537714005
    2. ' if' → logprob: -3.530287742614746
    3. '       ' → logprob: -7.530287742614746
    4. 'If' → logprob: -15.405287742614746
    5. '   ' → logprob: -16.15528678894043
    6. ' ' → logprob: -16.40528678894043
    7. '
' → logprob: -18.03028678894043
    8. 'return' → logprob: -18.03028678894043
    9. '```' → logprob: -18.78028678894043
    10. '	if' → logprob: -18.90528678894043

Token 396: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12773291766643524
    2. 'not' → logprob: -2.127732992172241
    3. 'line' → logprob: -7.377732753753662
    4. ' line' → logprob: -8.62773323059082
    5. '	not' → logprob: -15.75273323059082
    6. '#line' → logprob: -16.50273323059082
    7. '!' → logprob: -17.37773323059082
    8. ' ' → logprob: -17.50273323059082
    9. '=line' → logprob: -17.50273323059082
    10. '   ' → logprob: -17.87773323059082

Token 397: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005234121344983578
    2. ' line' → logprob: -5.255234241485596
    3. '	line' → logprob: -15.380233764648438
    4. '#line' → logprob: -17.755233764648438
    5. '
' → logprob: -18.130233764648438
    6. '=line' → logprob: -19.005233764648438
    7. '(line' → logprob: -19.130233764648438
    8. '   ' → logprob: -19.255233764648438
    9. '[line' → logprob: -20.130233764648438
    10. ' ' → logprob: -20.380233764648438

Token 398: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17986494302749634
    2. ':' → logprob: -1.8048648834228516
    3. ':return' → logprob: -9.679864883422852
    4. '.strip' → logprob: -10.679864883422852
    5. '       ' → logprob: -11.179864883422852
    6. '           ' → logprob: -12.054864883422852
    7. ' :
' → logprob: -12.804864883422852
    8. '   ' → logprob: -13.054864883422852
    9. '.startswith' → logprob: -13.179864883422852
    10. '):
' → logprob: -13.304864883422852

Token 399: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015839007683098316
    2. ' raise' → logprob: -7.126584053039551
    3. 'raise' → logprob: -7.251584053039551
    4. '	raise' → logprob: -9.75158405303955
    5. '       ' → logprob: -12.62658405303955
    6. 'Raise' → logprob: -12.87658405303955
    7. '   ' → logprob: -13.87658405303955
    8. '		' → logprob: -13.87658405303955
    9. 'raises' → logprob: -14.37658405303955
    10. '
' → logprob: -14.37658405303955

Token 400: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.01534598134458065
    2. '           ' → logprob: -4.765346050262451
    3. ' raise' → logprob: -5.015346050262451
    4. '	raise' → logprob: -9.765345573425293
    5. 'Raise' → logprob: -11.515345573425293
    6. 'raises' → logprob: -13.515345573425293
    7. '_raise' → logprob: -14.140345573425293
    8. '```' → logprob: -14.140345573425293
    9. '   ' → logprob: -14.765345573425293
    10. '0' → logprob: -15.015345573425293

Token 401: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.005234121344983578
    2. ' Stop' → logprob: -5.255234241485596
    3. 'EOF' → logprob: -15.380233764648438
    4. '_Stop' → logprob: -16.130233764648438
    5. '_stop' → logprob: -17.880233764648438
    6. 'STOP' → logprob: -18.005233764648438
    7. '.Stop' → logprob: -18.255233764648438
    8. '   ' → logprob: -20.505233764648438
    9. ' ' → logprob: -20.630233764648438
    10. '```' → logprob: -21.380233764648438

Token 402: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -3.128163257315464e-07
    2. 'Iterator' → logprob: -15.75
    3. ' iteration' → logprob: -17.125
    4. 'iteration' → logprob: -17.5
    5. 'Async' → logprob: -19.75
    6. 'Stop' → logprob: -20.0
    7. 'Iter' → logprob: -20.375
    8. '_iteration' → logprob: -20.625
    9. 'Iterations' → logprob: -22.125
    10. '__' → logprob: -23.625

Token 403: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1089177206158638
    2. '
' → logprob: -2.358917713165283
    3. '        
' → logprob: -4.983917713165283
    4. ' 
' → logprob: -7.358917713165283
    5. '  
' → logprob: -7.608917713165283
    6. '    
' → logprob: -8.233918190002441
    7. '<|end|>' → logprob: -8.358918190002441
    8. '            
' → logprob: -10.858918190002441
    9. '   ' → logprob: -10.983918190002441
    10. ',' → logprob: -11.108918190002441

Token 404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14622311294078827
    2. 'parts' → logprob: -2.2712230682373047
    3. ' parts' → logprob: -3.5212230682373047
    4. 'data' → logprob: -6.396223068237305
    5. 'tokens' → logprob: -7.271223068237305
    6. 'values' → logprob: -8.521223068237305
    7. 'return' → logprob: -8.771223068237305
    8. 'person' → logprob: -8.896223068237305
    9. 'args' → logprob: -8.896223068237305
    10. 'params' → logprob: -9.146223068237305

Token 405: ' n' (ID: 297)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.14204786717891693
    2. ' parts' → logprob: -2.767047882080078
    3. 'weight' → logprob: -3.392047882080078
    4. 'return' → logprob: -4.142047882080078
    5. 'values' → logprob: -5.267047882080078
    6. '       ' → logprob: -5.517047882080078
    7. 'weights' → logprob: -5.517047882080078
    8. 'tokens' → logprob: -5.642047882080078
    9. 'data' → logprob: -7.017047882080078
    10. 'num' → logprob: -7.267047882080078

Token 406: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6027878522872925
    2. ',' → logprob: -1.1027878522872925
    3. '=' → logprob: -2.477787971496582
    4. '_tokens' → logprob: -4.852787971496582
    5. 'um' → logprob: -5.102787971496582
    6. 'ext' → logprob: -5.352787971496582
    7. '   ' → logprob: -5.602787971496582
    8. '=int' → logprob: -6.102787971496582
    9. 'ame' → logprob: -6.102787971496582
    10. '_values' → logprob: -6.352787971496582

Token 407: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001170225441455841
    2. ' int' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.876171112060547
    4. '(int' → logprob: -18.876171112060547
    5. '[int' → logprob: -20.376171112060547
    6. '=int' → logprob: -20.501171112060547
    7. '	int' → logprob: -20.751171112060547
    8. ':int' → logprob: -21.251171112060547
    9. '<int' → logprob: -21.751171112060547
    10. 'len' → logprob: -21.751171112060547

Token 408: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -6.034592388459714e-06
    2. 'line' → logprob: -12.250005722045898
    3. '(' → logprob: -14.000005722045898
    4. ' line' → logprob: -16.1250057220459
    5. '=line' → logprob: -16.5000057220459
    6. '[line' → logprob: -16.8750057220459
    7. '#line' → logprob: -17.3750057220459
    8. '(
' → logprob: -19.0000057220459
    9. '	line' → logprob: -19.1250057220459
    10. '(lines' → logprob: -19.8750057220459

Token 409: '.strip' (ID: 40613)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07417977601289749
    2. '.strip' → logprob: -3.0741798877716064
    3. ')' → logprob: -3.8241798877716064
    4. '().' → logprob: -6.324179649353027
    5. '())
' → logprob: -7.074179649353027
    6. '()' → logprob: -7.199179649353027
    7. 'strip' → logprob: -11.199179649353027
    8. '()
' → logprob: -11.949179649353027
    9. '.split' → logprob: -12.199179649353027
    10. ')
' → logprob: -12.324179649353027

Token 410: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006041019689291716
    2. '())
' → logprob: -5.256041049957275
    3. ')' → logprob: -7.256041049957275
    4. '()' → logprob: -9.256040573120117
    5. '()
' → logprob: -13.256040573120117
    6. ')
' → logprob: -13.506040573120117
    7. '())

' → logprob: -14.006040573120117
    8. '().' → logprob: -14.381040573120117
    9. '(' → logprob: -15.131040573120117
    10. ' ())' → logprob: -15.381040573120117

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3169022500514984
    2. 'people' → logprob: -1.5669022798538208
    3. 'person' → logprob: -3.1919021606445312
    4. 'persons' → logprob: -4.191902160644531
    5. 'self' → logprob: -6.566902160644531
    6. 'lines' → logprob: -6.816902160644531
    7. '	person' → logprob: -6.816902160644531
    8. 'if' → logprob: -7.066902160644531
    9. ' people' → logprob: -7.691902160644531
    10. '	' → logprob: -7.941902160644531

Token 412: ' if' (ID: 538)
  Prédit: 'people'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'people' → logprob: -0.1867348998785019
    2. 'if' (adapté à ' if') → logprob: -3.061734914779663
    3. 'self' → logprob: -3.061734914779663
    4. 'persons' → logprob: -3.436734914779663
    5. '       ' → logprob: -3.561734914779663
    6. 'for' → logprob: -4.936734676361084
    7. 'lines' → logprob: -6.311734676361084
    8. 'person' → logprob: -6.686734676361084
    9. 'bridge' → logprob: -6.811734676361084
    10. '_people' → logprob: -6.811734676361084

Token 413: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003809833142440766
    2. ' n' → logprob: -7.875380992889404
    3. '	n' → logprob: -14.875380516052246
    4. '   ' → logprob: -15.000380516052246
    5. 'not' → logprob: -16.125381469726562
    6. ' not' → logprob: -17.500381469726562
    7. '_n' → logprob: -17.625381469726562
    8. '       ' → logprob: -17.625381469726562
    9. 'n't' → logprob: -18.000381469726562
    10. '(n' → logprob: -18.625381469726562

Token 414: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18022137880325317
    2. '==' → logprob: -1.8052213191986084
    3. ' <=' → logprob: -7.9302215576171875
    4. '<=' → logprob: -9.180221557617188
    5. '=' → logprob: -12.305221557617188
    6. ' <' → logprob: -13.055221557617188
    7. ' ' → logprob: -13.305221557617188
    8. '===' → logprob: -13.930221557617188
    9. '>' → logprob: -14.055221557617188
    10. ' >' → logprob: -14.180221557617188

Token 415: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009170551202259958
    2. ' ' → logprob: -7.000916957855225
    3. '   ' → logprob: -12.500917434692383
    4. '  ' → logprob: -14.250917434692383
    5. '    ' → logprob: -15.125917434692383
    6. '       ' → logprob: -15.125917434692383
    7. '-' → logprob: -15.500917434692383
    8. '           ' → logprob: -16.125917434692383
    9. '     ' → logprob: -16.375917434692383
    10. ' -' → logprob: -16.500917434692383

Token 416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.015305552864447e-05
    2. ' ' → logprob: -9.750060081481934
    3. '-' → logprob: -13.750060081481934
    4. '```' → logprob: -15.000060081481934
    5. '   ' → logprob: -15.875060081481934
    6. ' -' → logprob: -16.25006103515625
    7. '  ' → logprob: -16.50006103515625
    8. '000' → logprob: -17.62506103515625
    9. '``' → logprob: -17.75006103515625
    10. '۰' → logprob: -17.87506103515625

Token 417: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.005541089456528425
    2. ':' → logprob: -5.2555413246154785
    3. '           ' → logprob: -8.13054084777832
    4. '       ' → logprob: -11.38054084777832
    5. ':return' → logprob: -14.63054084777832
    6. ':
' → logprob: -15.38054084777832
    7. '   ' → logprob: -15.50554084777832
    8. '):
' → logprob: -16.00554084777832
    9. '.' → logprob: -16.38054084777832
    10. ' :
' → logprob: -16.63054084777832

Token 418: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001064963056705892
    2. 'raise' → logprob: -7.501064777374268
    3. ' raise' → logprob: -7.751064777374268
    4. '	raise' → logprob: -9.876065254211426
    5. '       ' → logprob: -11.001065254211426
    6. '   ' → logprob: -11.876065254211426
    7. '		' → logprob: -12.876065254211426
    8. '               ' → logprob: -13.626065254211426
    9. ',' → logprob: -14.876065254211426
    10. ' ' → logprob: -15.001065254211426

Token 419: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.008051003329455853
    2. ' raise' → logprob: -5.508050918579102
    3. '           ' → logprob: -5.758050918579102
    4. '	raise' → logprob: -7.133050918579102
    5. '_raise' → logprob: -13.258050918579102
    6. '       ' → logprob: -13.508050918579102
    7. '```' → logprob: -13.633050918579102
    8. '               ' → logprob: -13.883050918579102
    9. 'raises' → logprob: -14.008050918579102
    10. 'Raise' → logprob: -14.133050918579102

Token 420: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.00033546582562848926
    2. ' Stop' → logprob: -8.000335693359375
    3. '_Stop' → logprob: -16.750335693359375
    4. '   ' → logprob: -18.125335693359375
    5. '.Stop' → logprob: -18.375335693359375
    6. ' ' → logprob: -18.500335693359375
    7. '_stop' → logprob: -18.875335693359375
    8. '  ' → logprob: -19.000335693359375
    9. 'STOP' → logprob: -19.375335693359375
    10. 'System' → logprob: -19.375335693359375

Token 421: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -4.0484450437361374e-05
    2. 'Iterator' → logprob: -10.375040054321289
    3. 'Stop' → logprob: -11.875040054321289
    4. 'Iter' → logprob: -13.000040054321289
    5. '_iteration' → logprob: -17.87504005432129
    6. 'Iterations' → logprob: -18.37504005432129
    7. 'Interaction' → logprob: -18.62504005432129
    8. 'Input' → logprob: -18.75004005432129
    9. 'Instruction' → logprob: -19.12504005432129
    10. 'iteration' → logprob: -19.12504005432129

Token 422: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06481508165597916
    2. '
' → logprob: -2.939815044403076
    3. '        
' → logprob: -4.814815044403076
    4. 'people' → logprob: -7.064815044403076
    5. 'persons' → logprob: -7.814815044403076
    6. 'person' → logprob: -8.689815521240234
    7. ' persons' → logprob: -8.814815521240234
    8. ' people' → logprob: -9.814815521240234
    9. '    
' → logprob: -10.314815521240234
    10. '            
' → logprob: -11.314815521240234

Token 423: '       ' (ID: 309)
  Prédit: 'people'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'people' → logprob: -0.14852222800254822
    2. '       ' → logprob: -2.148522138595581
    3. 'persons' → logprob: -3.898522138595581
    4. 'person' → logprob: -7.64852237701416
    5. ' people' → logprob: -8.02352237701416
    6. '```' → logprob: -9.52352237701416
    7. ' persons' → logprob: -9.64852237701416
    8. '_people' → logprob: -10.02352237701416
    9. 'lines' → logprob: -10.89852237701416
    10. '        
' → logprob: -11.39852237701416

Token 424: ' bridge' (ID: 23273)
  Prédit: 'people'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'people' → logprob: -0.08862696588039398
    2. 'persons' → logprob: -2.7136268615722656
    3. '       ' → logprob: -4.088626861572266
    4. 'bridge' (adapté à ' bridge') → logprob: -7.463626861572266
    5. 'person' → logprob: -7.963626861572266
    6. ' people' → logprob: -8.338626861572266
    7. ' persons' → logprob: -8.838626861572266
    8. 'result' → logprob: -8.963626861572266
    9. 'for' → logprob: -8.963626861572266
    10. 'self' → logprob: -10.338626861572266

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017123052384704351
    2. '=' → logprob: -6.376712322235107
    3. '   ' → logprob: -11.87671184539795
    4. ' ' → logprob: -13.87671184539795
    5. '  ' → logprob: -14.50171184539795
    6. ',' → logprob: -14.75171184539795
    7. '    ' → logprob: -14.87671184539795
    8. '_bridge' → logprob: -15.37671184539795
    9. '.clear' → logprob: -15.37671184539795
    10. ' =
' → logprob: -16.376712799072266

Token 426: ' Bridge' (ID: 28239)
  Prédit: 'Bridge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bridge' → logprob: -0.029750484973192215
    2. ' Bridge' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.52975082397461
    4. 'Br' → logprob: -17.65475082397461
    5. '_bridge' → logprob: -18.02975082397461
    6. 'BR' → logprob: -18.15475082397461
    7. 'bridge' → logprob: -18.15475082397461
    8. '       ' → logprob: -19.40475082397461
    9. ' ' → logprob: -19.52975082397461
    10. '	' → logprob: -19.52975082397461

Token 427: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007022014819085598
    2. '()
' → logprob: -5.382021903991699
    3. '()' → logprob: -7.257021903991699
    4. 'for' → logprob: -7.382021903991699
    5. ' for' → logprob: -7.757021903991699
    6. '
' → logprob: -8.0070219039917
    7. '        
' → logprob: -9.3820219039917
    8. 'person' → logprob: -9.6320219039917
    9. '<|end|>' → logprob: -10.1320219039917
    10. '(person' → logprob: -10.7570219039917

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06007887050509453
    2. 'for' → logprob: -3.4350788593292236
    3. ' for' → logprob: -3.6850788593292236
    4. '	for' → logprob: -7.435079097747803
    5. '   ' → logprob: -8.060078620910645
    6. '<|end|>' → logprob: -10.185078620910645
    7. '```' → logprob: -10.810078620910645
    8. '	' → logprob: -11.560078620910645
    9. '	   ' → logprob: -12.060078620910645
    10. '           ' → logprob: -12.935078620910645

Token 429: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004417655523866415
    2. '       ' → logprob: -5.504417419433594
    3. ' for' → logprob: -8.004417419433594
    4. '	for' → logprob: -12.254417419433594
    5. '   ' → logprob: -14.754417419433594
    6. '```' → logprob: -16.504417419433594
    7. '           ' → logprob: -18.754417419433594
    8. '	' → logprob: -18.879417419433594
    9. '        
' → logprob: -19.379417419433594
    10. '
' → logprob: -19.504417419433594

Token 430: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00030686063109897077
    2. ' _' → logprob: -8.250307083129883
    3. '_i' → logprob: -10.000307083129883
    4. '_in' → logprob: -15.875307083129883
    5. 'i' → logprob: -18.125307083129883
    6. '_index' → logprob: -18.375307083129883
    7. ' i' → logprob: -18.375307083129883
    8. '_j' → logprob: -18.875307083129883
    9. '_=' → logprob: -19.625307083129883
    10. '_
' → logprob: -19.875307083129883

Token 431: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -3.173704271830502e-06
    2. 'in' → logprob: -12.75000286102295
    3. 'i' → logprob: -15.62500286102295
    4. ' ' → logprob: -17.125003814697266
    5. ' _' → logprob: -18.625003814697266
    6. 'range' → logprob: -19.500003814697266
    7. ' i' → logprob: -19.875003814697266
    8. '  ' → logprob: -20.375003814697266
    9. '_' → logprob: -20.625003814697266
    10. 's' → logprob: -21.250003814697266

Token 432: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163747429847717
    2. ' range' → logprob: -4.264163970947266
    3. '_range' → logprob: -15.889163970947266
    4. '	range' → logprob: -16.889163970947266
    5. '(range' → logprob: -17.764163970947266
    6. '_' → logprob: -18.014163970947266
    7. '   ' → logprob: -18.139163970947266
    8. 'rang' → logprob: -18.264163970947266
    9. ' ' → logprob: -18.639163970947266
    10. '    ' → logprob: -19.139163970947266

Token 433: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.8624639324116288e-06
    2. 'n' → logprob: -13.500001907348633
    3. '(' → logprob: -14.625001907348633
    4. ' n' → logprob: -17.250001907348633
    5. ' (' → logprob: -18.375001907348633
    6. '_n' → logprob: -21.625001907348633
    7. '	n' → logprob: -21.875001907348633
    8. '   ' → logprob: -22.750001907348633
    9. '<n' → logprob: -22.875001907348633
    10. '(N' → logprob: -23.625001907348633

Token 434: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03067621961236
    2. '):' → logprob: -3.5306761264801025
    3. '       ' → logprob: -7.155676364898682
    4. '           ' → logprob: -10.155675888061523
    5. '):
' → logprob: -10.155675888061523
    6. '   ' → logprob: -10.530675888061523
    7. '():
' → logprob: -10.905675888061523
    8. ' ):
' → logprob: -11.655675888061523
    9. ':' → logprob: -12.405675888061523
    10. ':
' → logprob: -12.780675888061523

Token 435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00384722463786602
    2. ' line' → logprob: -5.628847122192383
    3. '<|end|>' → logprob: -9.628847122192383
    4. '            
' → logprob: -10.253847122192383
    5. '	       ' → logprob: -10.753847122192383
    6. '#line' → logprob: -11.003847122192383
    7. 'line' → logprob: -11.503847122192383
    8. '   ' → logprob: -11.503847122192383
    9. '```' → logprob: -11.628847122192383
    10. ',' → logprob: -11.878847122192383

Token 436: ' parts' (ID: 7881)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.027209309861063957
    2. '           ' → logprob: -4.527209281921387
    3. 'line' → logprob: -4.902209281921387
    4. ' parts' → logprob: -5.402209281921387
    5. ' person' → logprob: -6.152209281921387
    6. 'person' → logprob: -7.277209281921387
    7. ' data' → logprob: -8.027209281921387
    8. ' tokens' → logprob: -8.152209281921387
    9. 'data' → logprob: -8.402209281921387
    10. 'tokens' → logprob: -8.777209281921387

Token 437: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004635653458535671
    2. '=' → logprob: -5.379635810852051
    3. '=line' → logprob: -11.12963581085205
    4. 'line' → logprob: -15.12963581085205
    5. '_line' → logprob: -15.50463581085205
    6. '   ' → logprob: -16.004634857177734
    7. ' =
' → logprob: -16.504634857177734
    8. ' ' → logprob: -17.004634857177734
    9. '           ' → logprob: -17.504634857177734
    10. ' line' → logprob: -17.504634857177734

Token 438: ' []
' (ID: 8911)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0976727083325386
    2. 'line' → logprob: -2.472672700881958
    3. ' self' → logprob: -4.847672939300537
    4. ' line' → logprob: -7.222672939300537
    5. 'next' → logprob: -9.472672462463379
    6. '           ' → logprob: -10.347672462463379
    7. ' next' → logprob: -12.722672462463379
    8. 'list' → logprob: -13.097672462463379
    9. 'input' → logprob: -13.472672462463379
    10. '   ' → logprob: -13.972672462463379

Token 439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6169316172599792
    2. 'while' → logprob: -0.9919316172599792
    3. ' while' → logprob: -2.991931676864624
    4. 'line' → logprob: -3.741931676864624
    5. ' line' → logprob: -4.741931438446045
    6. 'for' → logprob: -6.241931438446045
    7. '(line' → logprob: -6.491931438446045
    8. ' for' → logprob: -6.741931438446045
    9. 'self' → logprob: -7.616931438446045
    10. '[line' → logprob: -8.366931915283203

Token 440: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.20504659414291382
    2. 'self' → logprob: -2.4550466537475586
    3. 'line' → logprob: -2.8300466537475586
    4. '           ' → logprob: -3.5800466537475586
    5. 'for' → logprob: -5.080046653747559
    6. ' while' → logprob: -5.455046653747559
    7. 'parts' → logprob: -7.330046653747559
    8. ' self' → logprob: -7.580046653747559
    9. ' line' → logprob: -8.080046653747559
    10. 'next' → logprob: -8.705046653747559

Token 441: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.17517459392547607
    2. 'not' → logprob: -1.925174593925476
    3. 'parts' → logprob: -4.675174713134766
    4. ' not' → logprob: -5.800174713134766
    5. ' len' → logprob: -6.050174713134766
    6. '(len' → logprob: -9.925174713134766
    7. 'True' → logprob: -10.050174713134766
    8. ' parts' → logprob: -11.300174713134766
    9. 'line' → logprob: -11.925174713134766
    10. '(not' → logprob: -12.175174713134766

Token 442: '(parts' (ID: 102573)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.4841006100177765
    2. '(parts' → logprob: -0.9841005802154541
    3. ' parts' → logprob: -4.609100818634033
    4. '(' → logprob: -11.359100341796875
    5. 'line' → logprob: -15.484100341796875
    6. '(
' → logprob: -15.609100341796875
    7. '_parts' → logprob: -15.859100341796875
    8. ' (' → logprob: -15.859100341796875
    9. '(part' → logprob: -15.984100341796875
    10. '(line' → logprob: -16.109100341796875

Token 443: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5797984600067139
    2. '<' → logprob: -0.8297984600067139
    3. '==' → logprob: -6.204798698425293
    4. ' ==' → logprob: -6.829798698425293
    5. '()<' → logprob: -8.454798698425293
    6. ')<' → logprob: -9.079798698425293
    7. '<p' → logprob: -9.329798698425293
    8. ')' → logprob: -9.329798698425293
    9. '<len' → logprob: -10.204798698425293
    10. '=' → logprob: -10.454798698425293

Token 444: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.023508328944444656
    2. ' <' → logprob: -3.773508310317993
    3. '<n' → logprob: -9.023508071899414
    4. '<len' → logprob: -10.023508071899414
    5. '<size' → logprob: -10.523508071899414
    6. '<p' → logprob: -11.023508071899414
    7. '<th' → logprob: -11.523508071899414
    8. '==' → logprob: -12.148508071899414
    9. '()<' → logprob: -12.398508071899414
    10. '<num' → logprob: -12.523508071899414

Token 445: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. '4' → logprob: -14.375000953674316
    4. '   ' → logprob: -18.875001907348633
    5. '３' → logprob: -20.625001907348633
    6. '5' → logprob: -21.062501907348633
    7. '```' → logprob: -21.125001907348633
    8. '۳' → logprob: -21.312501907348633
    9. 'three' → logprob: -21.312501907348633
    10. '2' → logprob: -21.500001907348633

Token 446: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.531315314830863e-06
    2. '4' → logprob: -12.625003814697266
    3. ' ' → logprob: -15.875003814697266
    4. '5' → logprob: -18.875003814697266
    5. '   ' → logprob: -19.437503814697266
    6. 'three' → logprob: -20.062503814697266
    7. '３' → logprob: -20.187503814697266
    8. '```' → logprob: -20.500003814697266
    9. '۳' → logprob: -20.937503814697266
    10. '6' → logprob: -21.437503814697266

Token 447: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3979454040527344
    2. ':' → logprob: -1.1479454040527344
    3. ' and' → logprob: -4.772945404052734
    4. ' or' → logprob: -7.272945404052734
    5. '           ' → logprob: -7.897945404052734
    6. 'and' → logprob: -8.022945404052734
    7. ' line' → logprob: -8.397945404052734
    8. '   ' → logprob: -8.397945404052734
    9. '(parts' → logprob: -8.772945404052734
    10. 'parts' → logprob: -9.022945404052734

Token 448: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011463687755167484
    2. ' and' → logprob: -5.136463642120361
    3. ' parts' → logprob: -6.011463642120361
    4. '<|end|>' → logprob: -6.761463642120361
    5. ' line' → logprob: -7.636463642120361
    6. ':
' → logprob: -8.38646411895752
    7. '           ' → logprob: -8.63646411895752
    8. ' or' → logprob: -8.76146411895752
    9. '(parts' → logprob: -8.76146411895752
    10. 'tokens' → logprob: -8.88646411895752

Token 449: ' parts' (ID: 7881)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.3712936639785767
    2. 'parts' (adapté à ' parts') → logprob: -1.3712936639785767
    3. '               ' → logprob: -1.8712936639785767
    4. 'line' → logprob: -1.8712936639785767
    5. ' parts' → logprob: -1.8712936639785767
    6. '           ' → logprob: -3.746293544769287
    7. '                   ' → logprob: -5.746293544769287
    8. 'next' → logprob: -6.871293544769287
    9. '(parts' → logprob: -6.871293544769287
    10. '   ' → logprob: -7.496293544769287

Token 450: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7443909049034119
    2. '.extend' → logprob: -0.9943909049034119
    3. '+=' → logprob: -1.8693909645080566
    4. '=' → logprob: -7.744390964508057
    5. ' =' → logprob: -8.244390487670898
    6. '+' → logprob: -9.494390487670898
    7. '.append' → logprob: -11.494390487670898
    8. '   ' → logprob: -12.119390487670898
    9. '.' → logprob: -12.119390487670898
    10. 'line' → logprob: -12.744390487670898

Token 451: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02332921512424946
    2. ' self' → logprob: -4.648329257965088
    3. 'line' → logprob: -4.773329257965088
    4. 'list' → logprob: -5.398329257965088
    5. '[self' → logprob: -8.39832878112793
    6. ' line' → logprob: -9.02332878112793
    7. ' list' → logprob: -9.52332878112793
    8. 'map' → logprob: -10.39832878112793
    9. '[line' → logprob: -10.89832878112793
    10. '[' → logprob: -10.89832878112793

Token 452: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.2313910871744156
    2. '.readline' → logprob: -1.8563910722732544
    3. 'line' → logprob: -4.231390953063965
    4. '_line' → logprob: -4.481390953063965
    5. '(line' → logprob: -5.106390953063965
    6. '.strip' → logprob: -5.481390953063965
    7. '(_' → logprob: -5.731390953063965
    8. '().' → logprob: -6.231390953063965
    9. '.read' → logprob: -6.606390953063965
    10. '[line' → logprob: -6.731390953063965

Token 453: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009337982162833214
    2. 'line' → logprob: -4.759337902069092
    3. '_input' → logprob: -8.13433837890625
    4. '.input' → logprob: -8.50933837890625
    5. ' input' → logprob: -9.25933837890625
    6. 'list' → logprob: -9.50933837890625
    7. '.readline' → logprob: -11.25933837890625
    8. '[line' → logprob: -11.38433837890625
    9. 'next' → logprob: -11.88433837890625
    10. '[input' → logprob: -12.13433837890625

Token 454: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.0024854077491909266
    2. 'source' → logprob: -6.002485275268555
    3. 'Source' → logprob: -12.377485275268555
    4. '.readline' → logprob: -12.752485275268555
    5. 'line' → logprob: -13.877485275268555
    6. '.source' → logprob: -14.877485275268555
    7. '().' → logprob: -15.127485275268555
    8. '_line' → logprob: -15.127485275268555
    9. '_SOURCE' → logprob: -15.502485275268555
    10. 'ource' → logprob: -15.502485275268555

Token 455: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.318681188422488e-05
    2. '.read' → logprob: -11.25001335144043
    3. '().' → logprob: -15.62501335144043
    4. '.' → logprob: -18.87501335144043
    5. ' readline' → logprob: -19.50001335144043
    6. 'read' → logprob: -19.75001335144043
    7. '.readlines' → logprob: -19.87501335144043
    8. '[line' → logprob: -21.25001335144043
    9. '.strip' → logprob: -22.25001335144043
    10. '```' → logprob: -22.25001335144043

Token 456: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.0
    3. ' ().' → logprob: -16.875
    4. '.strip' → logprob: -18.375
    5. '()
' → logprob: -21.5
    6. '.' → logprob: -22.125
    7. '('').' → logprob: -22.375
    8. '("").' → logprob: -22.5
    9. ' .' → logprob: -23.125
    10. '(' → logprob: -23.25

Token 457: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.011053244583308697
    2. 'split' → logprob: -4.511053085327148
    3. ' strip' → logprob: -12.261053085327148
    4. 'rstrip' → logprob: -14.886053085327148
    5. ' split' → logprob: -15.136053085327148
    6. '.strip' → logprob: -15.886053085327148
    7. '(strip' → logprob: -17.88605308532715
    8. '   ' → logprob: -20.26105308532715
    9. '(split' → logprob: -20.51105308532715
    10. '_strip' → logprob: -20.88605308532715

Token 458: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.250000953674316
    3. '.split' → logprob: -18.5
    4. ' ().' → logprob: -19.375
    5. 'split' → logprob: -20.875
    6. '()
' → logprob: -21.0
    7. '().'' → logprob: -21.625
    8. ' .' → logprob: -22.25
    9. '.' → logprob: -23.125
    10. '   ' → logprob: -23.75

Token 459: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.250000953674316
    3. '(split' → logprob: -19.0
    4. '.split' → logprob: -19.5
    5. 'spl' → logprob: -20.125
    6. '_split' → logprob: -22.25
    7. 'Split' → logprob: -24.125
    8. 'rstrip' → logprob: -25.375
    9. 'sp' → logprob: -25.625
    10. 'plit' → logprob: -25.875

Token 460: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008137972326949239
    2. '()
' → logprob: -7.125813961029053
    3. '(' → logprob: -12.375813484191895
    4. '('' → logprob: -12.625813484191895
    5. '()

' → logprob: -14.500813484191895
    6. '()]' → logprob: -15.000813484191895
    7. '()<' → logprob: -15.750813484191895
    8. '()>' → logprob: -15.750813484191895
    9. '())' → logprob: -16.37581443786621
    10. '();' → logprob: -16.37581443786621

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039378583431243896
    2. '       ' → logprob: -3.4143786430358887
    3. '
' → logprob: -6.164378643035889
    4. '            
' → logprob: -6.914378643035889
    5. '	       ' → logprob: -7.914378643035889
    6. '        
' → logprob: -7.914378643035889
    7. '		' → logprob: -8.28937816619873
    8. ' 
' → logprob: -8.41437816619873
    9. '               ' → logprob: -8.53937816619873
    10. '   ' → logprob: -8.53937816619873

Token 462: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' (adapté à ' weight') → logprob: -0.059367045760154724
    2. '       ' → logprob: -3.0593669414520264
    3. ' weight' → logprob: -5.0593671798706055
    4. 'person' → logprob: -5.9343671798706055
    5. '           ' → logprob: -6.4343671798706055
    6. ' person' → logprob: -10.184367179870605
    7. 'w' → logprob: -10.809367179870605
    8. '
' → logprob: -11.184367179870605
    9. '```' → logprob: -11.184367179870605
    10. '   ' → logprob: -11.684367179870605

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6067194938659668
    2. '=' → logprob: -1.4817194938659668
    3. ' =' → logprob: -1.4817194938659668
    4. '=int' → logprob: -8.606719970703125
    5. ' ,' → logprob: -8.856719970703125
    6. ',int' → logprob: -10.606719970703125
    7. 'int' → logprob: -11.856719970703125
    8. ')' → logprob: -13.481719970703125
    9. 's' → logprob: -13.731719970703125
    10. '<|end|>' → logprob: -13.981719970703125

Token 464: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.026370784267783165
    2. ' start' → logprob: -3.6513707637786865
    3. 'int' → logprob: -9.651371002197266
    4. '   ' → logprob: -13.026371002197266
    5. '  ' → logprob: -14.151371002197266
    6. ' ' → logprob: -14.276371002197266
    7. 's' → logprob: -14.401371002197266
    8. 'st' → logprob: -14.651371002197266
    9. ' int' → logprob: -14.651371002197266
    10. '       ' → logprob: -15.401371002197266

Token 465: ',' (ID: 11)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.248469718324486e-05
    2. ',' → logprob: -11.000022888183594
    3. 'time' → logprob: -12.500022888183594
    4. '_' → logprob: -14.000022888183594
    5. '_,' → logprob: -14.125022888183594
    6. ',_' → logprob: -15.125022888183594
    7. 'Time' → logprob: -16.000022888183594
    8. ',time' → logprob: -16.750022888183594
    9. ' time' → logprob: -17.125022888183594
    10. '   ' → logprob: -18.250022888183594

Token 466: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.004079112783074379
    2. ' end' → logprob: -5.504079341888428
    3. '=end' → logprob: -14.25407886505127
    4. '	end' → logprob: -17.754079818725586
    5. '(end' → logprob: -17.754079818725586
    6. ',end' → logprob: -18.004079818725586
    7. '_end' → logprob: -18.754079818725586
    8. '[end' → logprob: -18.879079818725586
    9. 'and' → logprob: -19.254079818725586
    10. 'finish' → logprob: -19.504079818725586

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575942873954773
    2. ' =' → logprob: -0.825942873954773
    3. ')' → logprob: -14.075942993164062
    4. ' ' → logprob: -14.200942993164062
    5. '=int' → logprob: -14.200942993164062
    6. '   ' → logprob: -14.325942993164062
    7. ',' → logprob: -15.575942993164062
    8. 'int' → logprob: -16.075942993164062
    9. '<|end|>' → logprob: -16.450942993164062
    10. '=
' → logprob: -16.575942993164062

Token 468: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.08692733198404312
    2. ' map' → logprob: -2.5869274139404297
    3. 'int' → logprob: -4.83692741394043
    4. ' int' → logprob: -9.58692741394043
    5. '(map' → logprob: -12.96192741394043
    6. '   ' → logprob: -13.58692741394043
    7. '[int' → logprob: -13.71192741394043
    8. ' ' → logprob: -15.83692741394043
    9. '  ' → logprob: -15.96192741394043
    10. '	map' → logprob: -16.46192741394043

Token 469: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07889022678136826
    2. 'int' → logprob: -2.578890323638916
    3. '[int' → logprob: -15.703889846801758
    4. '(float' → logprob: -15.953889846801758
    5. ' int' → logprob: -16.328889846801758
    6. '=int' → logprob: -16.453889846801758
    7. '   ' → logprob: -16.703889846801758
    8. '	int' → logprob: -17.828889846801758
    9. '<int' → logprob: -17.953889846801758
    10. ',int' → logprob: -18.078889846801758

Token 470: ',' (ID: 11)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0021086246706545353
    2. ',' → logprob: -6.752108573913574
    3. 'parts' → logprob: -7.127108573913574
    4. ')' → logprob: -9.502108573913574
    5. '(' → logprob: -10.127108573913574
    6. ' parts' → logprob: -11.377108573913574
    7. ' (' → logprob: -12.127108573913574
    8. ')(' → logprob: -13.502108573913574
    9. '
' → logprob: -13.752108573913574
    10. '   ' → logprob: -15.627108573913574

Token 471: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0007191036129370332
    2. ' parts' → logprob: -7.25071907043457
    3. '(parts' → logprob: -11.62571907043457
    4. '   ' → logprob: -16.25071907043457
    5. ' ' → logprob: -17.62571907043457
    6. '  ' → logprob: -18.12571907043457
    7. 'part' → logprob: -18.37571907043457
    8. '           ' → logprob: -18.50071907043457
    9. '_parts' → logprob: -18.62571907043457
    10. '.parts' → logprob: -18.62571907043457

Token 472: '[:' (ID: 7808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003273968119174242
    2. '[:' → logprob: -6.003273963928223
    3. ')
' → logprob: -7.503273963928223
    4. '[' → logprob: -8.378273963928223
    5. '(' → logprob: -11.628273963928223
    6. '[-' → logprob: -13.128273963928223
    7. '[:-' → logprob: -13.253273963928223
    8. ')

' → logprob: -13.628273963928223
    9. '(parts' → logprob: -14.253273963928223
    10. ' )' → logprob: -14.753273963928223

Token 473: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.500006675720215
    4. ')' → logprob: -16.8750057220459
    5. '３' → logprob: -18.1875057220459
    6. '           ' → logprob: -18.3125057220459
    7. '  ' → logprob: -18.4375057220459
    8. ']' → logprob: -18.6250057220459
    9. '۳' → logprob: -19.3125057220459
    10. '```' → logprob: -19.4375057220459

Token 474: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1017005518078804
    2. ')
' → logprob: -2.3517005443573
    3. '])' → logprob: -6.726700782775879
    4. '])
' → logprob: -8.976700782775879
    5. '       ' → logprob: -9.726700782775879
    6. ']' → logprob: -9.851700782775879
    7. ')
' → logprob: -10.476700782775879
    8. '           ' → logprob: -12.101700782775879
    9. ');' → logprob: -12.601700782775879
    10. '）' → logprob: -12.726700782775879

Token 475: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00040290577453561127
    2. '<|end|>' → logprob: -8.250402450561523
    3. '       ' → logprob: -10.000402450561523
    4. '            
' → logprob: -10.250402450561523
    5. ' parts' → logprob: -11.000402450561523
    6. '               ' → logprob: -11.625402450561523
    7. '   ' → logprob: -12.125402450561523
    8. ',' → logprob: -12.125402450561523
    9. '	       ' → logprob: -12.625402450561523
    10. '<|end|>' → logprob: -12.750402450561523

Token 476: ' person' (ID: 1647)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1178673580288887
    2. 'person' (adapté à ' person') → logprob: -2.2428674697875977
    3. ' person' → logprob: -5.617867469787598
    4. 'bridge' → logprob: -7.367867469787598
    5. 'parts' → logprob: -7.867867469787598
    6. ' bridge' → logprob: -9.242867469787598
    7. '       ' → logprob: -9.242867469787598
    8. ' parts' → logprob: -9.492867469787598
    9. 'p' → logprob: -10.367867469787598
    10. 'persons' → logprob: -10.492867469787598

Token 477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023301614448428154
    2. '=' → logprob: -3.773301601409912
    3. ')' → logprob: -10.89830207824707
    4. '   ' → logprob: -11.64830207824707
    5. '=
' → logprob: -11.89830207824707
    6. '       ' → logprob: -11.89830207824707
    7. ' =
' → logprob: -12.02330207824707
    8. '.' → logprob: -13.14830207824707
    9. '<|end|>' → logprob: -13.39830207824707
    10. '           ' → logprob: -14.52330207824707

Token 478: ' Person' (ID: 8263)
  Prédit: 'Person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Person' → logprob: -0.12692810595035553
    2. ' Person' → logprob: -2.1269280910491943
    3. '(Person' → logprob: -19.876928329467773
    4. ' person' → logprob: -20.001928329467773
    5. 'person' → logprob: -20.251928329467773
    6. '<Person' → logprob: -20.876928329467773
    7. '_person' → logprob: -21.251928329467773
    8. '.Person' → logprob: -21.501928329467773
    9. '   ' → logprob: -21.876928329467773
    10. 'Personal' → logprob: -21.876928329467773

Token 479: '(weight' (ID: 121456)
  Prédit: '(weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weight' → logprob: -0.0009131324477493763
    2. 'weight' → logprob: -7.000913143157959
    3. '(
' → logprob: -14.0009126663208
    4. '(' → logprob: -14.3759126663208
    5. ' weight' → logprob: -15.5009126663208
    6. '(weights' → logprob: -18.250913619995117
    7. '   ' → logprob: -19.500913619995117
    8. '       ' → logprob: -20.625913619995117
    9. '.weight' → logprob: -20.750913619995117
    10. '               ' → logprob: -21.000913619995117

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.110668618930504e-05
    2. ' ,' → logprob: -9.75006103515625
    3. ',start' → logprob: -13.25006103515625
    4. '           ' → logprob: -14.75006103515625
    5. 'weight' → logprob: -15.12506103515625
    6. ',
' → logprob: -15.62506103515625
    7. ')' → logprob: -16.50006103515625
    8. '=' → logprob: -17.37506103515625
    9. '          ' → logprob: -17.87506103515625
    10. '               ' → logprob: -18.00006103515625

Token 481: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0024756586644798517
    2. ' start' → logprob: -6.002475738525391
    3. '   ' → logprob: -21.37747573852539
    4. '           ' → logprob: -21.50247573852539
    5. '	start' → logprob: -21.62747573852539
    6. '[start' → logprob: -22.25247573852539
    7. 'end' → logprob: -22.50247573852539
    8. ' ' → logprob: -22.62747573852539
    9. '(start' → logprob: -23.00247573852539
    10. '       ' → logprob: -23.12747573852539

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002310719108209014
    2. ',end' → logprob: -6.127310752868652
    3. ' ,' → logprob: -9.002310752868652
    4. 'end' → logprob: -14.252310752868652
    5. ',start' → logprob: -14.252310752868652
    6. ',
' → logprob: -14.627310752868652
    7. '   ' → logprob: -14.877310752868652
    8. ',next' → logprob: -16.377309799194336
    9. ',int' → logprob: -16.752309799194336
    10. '  ' → logprob: -17.127309799194336

Token 483: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.07891733199357986
    2. ' end' → logprob: -2.5789172649383545
    3. 'parts' → logprob: -10.703917503356934
    4. ' parts' → logprob: -12.203917503356934
    5. '   ' → logprob: -17.953916549682617
    6. '(end' → logprob: -17.953916549682617
    7. ' ' → logprob: -18.078916549682617
    8. '	end' → logprob: -18.578916549682617
    9. '[end' → logprob: -18.578916549682617
    10. '=end' → logprob: -18.578916549682617

Token 484: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.313281387090683
    2. ')
' → logprob: -1.3132814168930054
    3. ')
' → logprob: -10.938281059265137
    4. '           ' → logprob: -14.063281059265137
    5. '       ' → logprob: -14.313281059265137
    6. ')

' → logprob: -14.688281059265137
    7. '),' → logprob: -17.438282012939453
    8. ' )
' → logprob: -17.813282012939453
    9. ' )' → logprob: -18.313282012939453
    10. '               ' → logprob: -18.438282012939453

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.4391956685576588e-05
    2. 'bridge' → logprob: -11.125024795532227
    3. '       ' → logprob: -12.250024795532227
    4. '
' → logprob: -13.500024795532227
    5. '               ' → logprob: -13.750024795532227
    6. ' bridge' → logprob: -14.125024795532227
    7. '   ' → logprob: -15.000024795532227
    8. '_bridge' → logprob: -15.000024795532227
    9. '          ' → logprob: -15.125024795532227
    10. '```' → logprob: -15.375024795532227

Token 486: ' bridge' (ID: 23273)
  Prédit: 'bridge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bridge' (adapté à ' bridge') → logprob: -0.00843278132379055
    2. '           ' → logprob: -5.258432865142822
    3. ' bridge' → logprob: -5.758432865142822
    4. '       ' → logprob: -10.383432388305664
    5. '_bridge' → logprob: -13.133432388305664
    6. '.bridge' → logprob: -13.383432388305664
    7. 'brid' → logprob: -13.883432388305664
    8. '
' → logprob: -14.508432388305664
    9. '   ' → logprob: -14.758432388305664
    10. '```' → logprob: -15.008432388305664

Token 487: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.451116051815916e-05
    2. '.' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.625024795532227
    4. '.append' → logprob: -17.500024795532227
    5. '._' → logprob: -18.125024795532227
    6. '.Add' → logprob: -18.125024795532227
    7. ' .' → logprob: -18.500024795532227
    8. 'add' → logprob: -18.625024795532227
    9. '```' → logprob: -18.625024795532227
    10. ')add' → logprob: -18.750024795532227

Token 488: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -7.636475493200123e-05
    2. 'person' → logprob: -9.500076293945312
    3. '(person' → logprob: -13.625076293945312
    4. '_' → logprob: -15.750076293945312
    5. '_people' → logprob: -16.625076293945312
    6. 'Person' → logprob: -17.875076293945312
    7. ' person' → logprob: -18.375076293945312
    8. '```' → logprob: -18.500076293945312
    9. '_PERSON' → logprob: -19.000076293945312
    10. '_p' → logprob: -19.250076293945312

Token 489: '(person' (ID: 53617)
  Prédit: '(person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(person' → logprob: -0.0010986573761329055
    2. '(' → logprob: -7.2510986328125
    3. 'person' → logprob: -7.8760986328125
    4. '(
' → logprob: -11.7510986328125
    5. '	person' → logprob: -15.1260986328125
    6. ' person' → logprob: -15.6260986328125
    7. ')' → logprob: -15.7510986328125
    8. '(part' → logprob: -16.0010986328125
    9. '(Person' → logprob: -16.0010986328125
    10. '```' → logprob: -16.7510986328125

Token 490: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017532356083393097
    2. '       ' → logprob: -4.6425323486328125
    3. ')
' → logprob: -4.8925323486328125
    4. '<|end|>' → logprob: -8.767532348632812
    5. '           ' → logprob: -10.017532348632812
    6. ')return' → logprob: -11.267532348632812
    7. '
' → logprob: -12.142532348632812
    8. '<|end|>' → logprob: -12.142532348632812
    9. '()' → logprob: -12.517532348632812
    10. '())' → logprob: -12.767532348632812

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009243228123523295
    2. 'return' → logprob: -7.750924110412598
    3. '           ' → logprob: -8.625924110412598
    4. '<|end|>' → logprob: -8.750924110412598
    5. ' return' → logprob: -9.625924110412598
    6. '
' → logprob: -9.625924110412598
    7. '   ' → logprob: -11.875924110412598
    8. '        
' → logprob: -12.375924110412598
    9. '<|end|>' → logprob: -12.375924110412598
    10. '```' → logprob: -13.500924110412598

Token 492: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11517342180013657
    2. 'return' (adapté à ' return') → logprob: -2.24017333984375
    3. ' return' → logprob: -6.11517333984375
    4. 'self' → logprob: -9.11517333984375
    5. '	return' → logprob: -11.49017333984375
    6. '   ' → logprob: -11.74017333984375
    7. '        
' → logprob: -12.74017333984375
    8. ' ' → logprob: -13.49017333984375
    9. ' self' → logprob: -13.49017333984375
    10. '           ' → logprob: -13.99017333984375

Token 493: ' bridge' (ID: 23273)
  Prédit: 'bridge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bridge' → logprob: -0.00043126524542458355
    2. ' bridge' → logprob: -7.750431060791016
    3. 'brid' → logprob: -14.875431060791016
    4. 'Bridge' → logprob: -16.625431060791016
    5. 'brace' → logprob: -17.000431060791016
    6. '.bridge' → logprob: -17.625431060791016
    7. '   ' → logprob: -17.750431060791016
    8. 'br' → logprob: -18.000431060791016
    9. '_bridge' → logprob: -18.875431060791016
    10. 'b' → logprob: -19.375431060791016

Token 494: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 495: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.1054253011243418e-05
    2. ' main' → logprob: -11.000020980834961
    3. 'run' → logprob: -13.250020980834961
    4. 'solve' → logprob: -13.250020980834961
    5. 'process' → logprob: -14.250020980834961
    6. '_main' → logprob: -17.50002098083496
    7. 'simulate' → logprob: -18.75002098083496
    8. '__' → logprob: -19.25002098083496
    9. '	main' → logprob: -19.62502098083496
    10. 'read' → logprob: -19.75002098083496

Token 497: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.6166903151315637e-05
    2. ' ():' → logprob: -11.500016212463379
    3. '():
' → logprob: -12.125016212463379
    4. '()' → logprob: -14.375016212463379
    5. '(' → logprob: -17.125015258789062
    6. '():
' → logprob: -18.375015258789062
    7. ':' → logprob: -18.500015258789062
    8. '():

' → logprob: -19.125015258789062
    9. '()>' → logprob: -20.000015258789062
    10. '(":' → logprob: -20.000015258789062

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19720518589019775
    2. 'input' → logprob: -2.697205066680908
    3. 'import' → logprob: -2.947205066680908
    4. ' input' → logprob: -3.322205066680908
    5. ' for' → logprob: -4.822205066680908
    6. ' parser' → logprob: -5.072205066680908
    7. ' import' → logprob: -5.572205066680908
    8. 'for' → logprob: -5.697205066680908
    9. 'parser' → logprob: -6.697205066680908
    10. '```' → logprob: -9.072205543518066

Token 499: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.00204272149130702
    2. ' import' → logprob: -6.252042770385742
    3. '   ' → logprob: -9.502042770385742
    4. 'for' → logprob: -10.877042770385742
    5. 'with' → logprob: -11.502042770385742
    6. 'from' → logprob: -12.252042770385742
    7. 'input' → logprob: -12.252042770385742
    8. ' for' → logprob: -15.127042770385742
    9. ' with' → logprob: -15.877042770385742
    10. 'parser' → logprob: -16.127042770385742

Token 500: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.935296834039036e-06
    2. ' sys' → logprob: -12.75000286102295
    3. '	sys' → logprob: -19.875003814697266
    4. '=sys' → logprob: -20.750003814697266
    5. 'io' → logprob: -22.000003814697266
    6. '(sys' → logprob: -22.125003814697266
    7. 'file' → logprob: -23.625003814697266
    8. '.sys' → logprob: -23.750003814697266
    9. 'stdin' → logprob: -24.000003814697266
    10. '_sys' → logprob: -25.125003814697266

Token 501: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010947953909635544
    2. 'for' → logprob: -5.135948181152344
    3. 'parser' → logprob: -6.135948181152344
    4. ' for' → logprob: -6.760948181152344
    5. ' parser' → logprob: -7.385948181152344
    6. 'input' → logprob: -7.510948181152344
    7. '    
' → logprob: -8.135948181152344
    8. '
' → logprob: -9.135948181152344
    9. '	parser' → logprob: -9.635948181152344
    10. ' input' → logprob: -10.635948181152344

Token 502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032643094658851624
    2. 'for' → logprob: -4.2826433181762695
    3. 'parser' → logprob: -4.5326433181762695
    4. 'input' → logprob: -5.4076433181762695
    5. ' for' → logprob: -6.1576433181762695
    6. ' parser' → logprob: -7.1576433181762695
    7. ' input' → logprob: -8.78264331817627
    8. '```' → logprob: -11.65764331817627
    9. 'iterator' → logprob: -12.53264331817627
    10. '	parser' → logprob: -12.65764331817627

Token 503: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.2345762699842453
    2. 'for' → logprob: -2.2345762252807617
    3. '   ' → logprob: -2.7345762252807617
    4. 'input' → logprob: -3.3595762252807617
    5. ' parser' → logprob: -6.234576225280762
    6. ' for' → logprob: -7.984576225280762
    7. ' input' → logprob: -10.609576225280762
    8. '	parser' → logprob: -10.734576225280762
    9. '    
' → logprob: -11.984576225280762
    10. 'reader' → logprob: -12.109576225280762

Token 504: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804171830415726
    2. '=' → logprob: -3.288041830062866
    3. ' =
' → logprob: -15.663042068481445
    4. ' ' → logprob: -16.788042068481445
    5. ' ' → logprob: -17.288042068481445
    6. '=
' → logprob: -17.288042068481445
    7. '＝' → logprob: -17.663042068481445
    8. '   ' → logprob: -18.413042068481445
    9. '<|end|>' → logprob: -18.413042068481445
    10. 's' → logprob: -18.538042068481445

Token 505: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.1472419600977446e-06
    2. ' Input' → logprob: -13.750000953674316
    3. 'input' → logprob: -23.000001907348633
    4. '	Input' → logprob: -23.000001907348633
    5. '<Input' → logprob: -24.625001907348633
    6. '   ' → logprob: -24.625001907348633
    7. '_input' → logprob: -25.000001907348633
    8. 'Iter' → logprob: -26.875001907348633
    9. '\Input' → logprob: -27.125001907348633
    10. '_Input' → logprob: -27.250001907348633

Token 506: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -2.696889623621246e-06
    2. 'parser' → logprob: -12.87500286102295
    3. '_parser' → logprob: -17.375001907348633
    4. '(Parser' → logprob: -18.875001907348633
    5. 'Iterator' → logprob: -19.000001907348633
    6. 'Processor' → logprob: -19.250001907348633
    7. '.Parser' → logprob: -20.125001907348633
    8. ' Parser' → logprob: -20.250001907348633
    9. ' parser' → logprob: -20.250001907348633
    10. 'Parse' → logprob: -20.250001907348633

Token 507: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -8.518582762917504e-05
    2. 'sys' → logprob: -10.12508487701416
    3. '(iter' → logprob: -10.25008487701416
    4. '(' → logprob: -11.75008487701416
    5. '(system' → logprob: -14.25008487701416
    6. '=sys' → logprob: -14.37508487701416
    7. '(System' → logprob: -15.62508487701416
    8. ' sys' → logprob: -16.000085830688477
    9. '(io' → logprob: -16.750085830688477
    10. '(input' → logprob: -16.750085830688477

Token 508: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.491498531133402e-06
    2. 'stdin' → logprob: -11.750009536743164
    3. '.' → logprob: -14.250009536743164
    4. '.stdout' → logprob: -14.250009536743164
    5. '.std' → logprob: -15.875009536743164
    6. '.argv' → logprob: -16.125009536743164
    7. ' stdin' → logprob: -17.125009536743164
    8. ' .' → logprob: -18.125009536743164
    9. '(stdin' → logprob: -18.250009536743164
    10. '.__' → logprob: -18.375009536743164

Token 509: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006724960170686245
    2. ')
' → logprob: -5.006724834442139
    3. ' )' → logprob: -11.756725311279297
    4. '   ' → logprob: -14.506725311279297
    5. ')

' → logprob: -14.631725311279297
    6. ' )
' → logprob: -15.256725311279297
    7. ')
' → logprob: -15.256725311279297
    8. '())' → logprob: -15.381725311279297
    9. '))' → logprob: -17.506725311279297
    10. '
' → logprob: -17.506725311279297

Token 510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05294400081038475
    2. ' for' → logprob: -3.5529439449310303
    3. 'for' → logprob: -3.8029439449310303
    4. '    
' → logprob: -7.802944183349609
    5. '
' → logprob: -8.55294418334961
    6. '```' → logprob: -11.67794418334961
    7. '<|end|>' → logprob: -12.67794418334961
    8. 'try' → logprob: -12.67794418334961
    9. ' 
' → logprob: -13.80294418334961
    10. '	for' → logprob: -13.92794418334961

Token 511: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00031389365904033184
    2. '   ' → logprob: -8.250313758850098
    3. ' for' → logprob: -9.875313758850098
    4. 'try' → logprob: -14.625313758850098
    5. 'while' → logprob: -14.875313758850098
    6. '
' → logprob: -15.500313758850098
    7. '    
' → logprob: -16.375314712524414
    8. 'import' → logprob: -16.375314712524414
    9. '	for' → logprob: -17.250314712524414
    10. '```' → logprob: -17.250314712524414

Token 512: ' bridge' (ID: 23273)
  Prédit: ' bridge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bridge' → logprob: -0.1602357029914856
    2. 'bridge' → logprob: -1.9102356433868408
    3. '   ' → logprob: -12.410235404968262
    4. 'brid' → logprob: -12.910235404968262
    5. 'br' → logprob: -13.160235404968262
    6. '_bridge' → logprob: -13.285235404968262
    7. '.bridge' → logprob: -14.535235404968262
    8. 'Bridge' → logprob: -14.910235404968262
    9. '桥' → logprob: -15.660235404968262
    10. 'b' → logprob: -16.410236358642578

Token 513: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008058178937062621
    2. 'in' → logprob: -7.125805854797363
    3. 's' → logprob: -14.250805854797363
    4. ' ' → logprob: -15.250805854797363
    5. 'import' → logprob: -16.000804901123047
    6. '.' → logprob: -16.500804901123047
    7. 'is' → logprob: -16.625804901123047
    8. '	in' → logprob: -17.250804901123047
    9. ' .' → logprob: -18.000804901123047
    10. '_in' → logprob: -18.000804901123047

Token 514: ' parser' (ID: 14216)
  Prédit: ' parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.07889220863580704
    2. 'parser' → logprob: -2.578892230987549
    3. '	parser' → logprob: -13.32889175415039
    4. '(parser' → logprob: -14.20389175415039
    5. 'Parser' → logprob: -17.20389175415039
    6. '   ' → logprob: -17.95389175415039
    7. '.parser' → logprob: -18.45389175415039
    8. '_parser' → logprob: -19.20389175415039
    9. '/parser' → logprob: -19.32889175415039
    10. ' ' → logprob: -20.20389175415039

Token 515: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5759995579719543
    2. ':' → logprob: -0.8259995579719543
    3. '       ' → logprob: -10.57599925994873
    4. '   ' → logprob: -11.45099925994873
    5. ':
' → logprob: -11.57599925994873
    6. '():
' → logprob: -11.82599925994873
    7. '):
' → logprob: -12.70099925994873
    8. ':

' → logprob: -12.95099925994873
    9. ' :
' → logprob: -14.70099925994873
    10. ',' → logprob: -15.32599925994873

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005418312503024936
    2. '   ' → logprob: -7.625541687011719
    3. ':
' → logprob: -10.375541687011719
    4. ':' → logprob: -11.625541687011719
    5. '        
' → logprob: -12.625541687011719
    6. '
' → logprob: -13.000541687011719
    7. '    
' → logprob: -13.375541687011719
    8. 'print' → logprob: -13.375541687011719
    9. ' print' → logprob: -13.500541687011719
    10. '<|end|>' → logprob: -14.375541687011719

Token 517: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.022016296163201332
    2. 'if' → logprob: -4.772016525268555
    3. '       ' → logprob: -5.022016525268555
    4. ' print' → logprob: -5.272016525268555
    5. ' if' → logprob: -7.147016525268555
    6. '   ' → logprob: -7.147016525268555
    7. 'result' → logprob: -11.522016525268555
    8. '    
' → logprob: -13.897016525268555
    9. '	print' → logprob: -13.897016525268555
    10. '           ' → logprob: -14.647016525268555

Token 518: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.002682064427062869
    2. '('' → logprob: -6.002682209014893
    3. '(' → logprob: -8.502681732177734
    4. '"' → logprob: -12.752681732177734
    5. '(
' → logprob: -15.502681732177734
    6. '(("' → logprob: -15.502681732177734
    7. '(int' → logprob: -15.877681732177734
    8. '   ' → logprob: -16.627681732177734
    9. '(True' → logprob: -17.377681732177734
    10. ' ("' → logprob: -17.752681732177734

Token 519: 'OK' (ID: 5175)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.6106640696525574
    2. '"' → logprob: -1.9856641292572021
    3. 'safe' → logprob: -2.110664129257202
    4. 'yes' → logprob: -2.985664129257202
    5. 'Safe' → logprob: -2.985664129257202
    6. 'SAFE' → logprob: -3.110664129257202
    7. 'Yes' → logprob: -3.485664129257202
    8. 'unsafe' → logprob: -4.110663890838623
    9. 'Y' → logprob: -6.735663890838623
    10. '1' → logprob: -7.110663890838623

Token 520: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -3.6550729419104755e-05
    2. '")' → logprob: -10.250036239624023
    3. '")
' → logprob: -14.750036239624023
    4. '""' → logprob: -15.750036239624023
    5. ')"' → logprob: -15.875036239624023
    6. ' "' → logprob: -16.500036239624023
    7. '()"' → logprob: -16.625036239624023
    8. '"""' → logprob: -16.750036239624023
    9. '```' → logprob: -17.375036239624023
    10. '")
' → logprob: -17.375036239624023

Token 521: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01870034635066986
    2. 'if' → logprob: -4.018700122833252
    3. '"' → logprob: -8.01870059967041
    4. ')' → logprob: -9.01870059967041
    5. '()' → logprob: -9.76870059967041
    6. '   ' → logprob: -10.64370059967041
    7. ' ' → logprob: -11.01870059967041
    8. '    ' → logprob: -14.64370059967041
    9. '  ' → logprob: -14.64370059967041
    10. '       ' → logprob: -15.26870059967041

Token 522: ' bridge' (ID: 23273)
  Prédit: 'bridge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bridge' → logprob: -0.06198651343584061
    2. ' bridge' → logprob: -2.8119864463806152
    3. '   ' → logprob: -11.436986923217773
    4. '.bridge' → logprob: -12.436986923217773
    5. 'brid' → logprob: -12.936986923217773
    6. '_bridge' → logprob: -14.311986923217773
    7. 'br' → logprob: -14.686986923217773
    8. '       ' → logprob: -15.811986923217773
    9. 'Bridge' → logprob: -16.061986923217773
    10. ' ' → logprob: -16.311986923217773

Token 523: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -3.214019307051785e-05
    2. '.' → logprob: -10.375032424926758
    3. ' .' → logprob: -15.000032424926758
    4. 'is' → logprob: -15.375032424926758
    5. '   ' → logprob: -16.000032424926758
    6. ').' → logprob: -16.250032424926758
    7. '.isnan' → logprob: -17.875032424926758
    8. '().' → logprob: -18.375032424926758
    9. '{}.' → logprob: -18.750032424926758
    10. '.safe' → logprob: -20.000032424926758

Token 524: '_safe' (ID: 87847)
  Prédit: '_safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_safe' → logprob: -3.531315314830863e-06
    2. 'safe' → logprob: -12.625003814697266
    3. ' safe' → logprob: -17.250003814697266
    4. '_' → logprob: -17.750003814697266
    5. '_SAFE' → logprob: -19.125003814697266
    6. '-safe' → logprob: -19.875003814697266
    7. '_secure' → logprob: -19.875003814697266
    8. '.safe' → logprob: -20.125003814697266
    9. 's' → logprob: -20.125003814697266
    10. '_s' → logprob: -20.250003814697266

Token 525: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: 0.0
    2. 'else' → logprob: -18.0
    3. '()
' → logprob: -19.125
    4. ' ()' → logprob: -19.75
    5. ' else' → logprob: -20.0
    6. '(' → logprob: -20.875
    7. '()`' → logprob: -21.125
    8. '   ' → logprob: -21.375
    9. '()==' → logprob: -22.25
    10. '（）' → logprob: -22.375

Token 526: ' else' (ID: 1203)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3965185880661011
    2. ' else' → logprob: -1.146518588066101
    3. 'else' → logprob: -4.646518707275391
    4. '   ' → logprob: -12.64651870727539
    5. ' ()' → logprob: -13.89651870727539
    6. ' ' → logprob: -14.14651870727539
    7. '()
' → logprob: -14.64651870727539
    8. '    ' → logprob: -14.77151870727539
    9. '        ' → logprob: -15.89651870727539
    10. '       ' → logprob: -16.14651870727539

Token 527: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01326246652752161
    2. '"D' → logprob: -5.3882622718811035
    3. '"S' → logprob: -6.1382622718811035
    4. '"H' → logprob: -6.3882622718811035
    5. '"T' → logprob: -6.7632622718811035
    6. '"K' → logprob: -7.0132622718811035
    7. ' "' → logprob: -7.5132622718811035
    8. '"N' → logprob: -7.6382622718811035
    9. '"W' → logprob: -7.7632622718811035
    10. '"B' → logprob: -8.013262748718262

Token 528: 'NG' (ID: 19236)
  Prédit: 'NG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NG' → logprob: -0.06191188469529152
    2. 'OVER' → logprob: -3.9369118213653564
    3. '"' → logprob: -4.0619120597839355
    4. 'NO' → logprob: -4.8119120597839355
    5. 'NOT' → logprob: -5.8119120597839355
    6. 'N' → logprob: -6.1869120597839355
    7. 'FAIL' → logprob: -6.3119120597839355
    8. '!' → logprob: -6.8119120597839355
    9. 'AL' → logprob: -7.1869120597839355
    10. 'D' → logprob: -7.3119120597839355

Token 529: '")


' (ID: 57903)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -2.2007883671903983e-05
    2. ')' → logprob: -11.125021934509277
    3. ')")' → logprob: -12.000021934509277
    4. '")
' → logprob: -13.750021934509277
    5. '}")' → logprob: -17.625022888183594
    6. '")}' → logprob: -18.375022888183594
    7. '"))' → logprob: -18.625022888183594
    8. '')' → logprob: -19.000022888183594
    9. '")

' → logprob: -19.375022888183594
    10. '");' → logprob: -19.500022888183594

Token 530: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.008129963040119e-06
    2. ' if' → logprob: -12.875003814697266
    3. '
' → logprob: -13.875003814697266
    4. '```' → logprob: -14.875003814697266
    5. '<|end|>' → logprob: -17.375003814697266
    6. 'main' → logprob: -17.750003814697266
    7. '#' → logprob: -18.250003814697266
    8. '\n' → logprob: -18.875003814697266
    9. 'print' → logprob: -19.250003814697266
    10. '\' → logprob: -20.125003814697266

Token 531: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20161008834838867
    2. ' __' → logprob: -1.7016100883483887
    3. 'name' → logprob: -8.701610565185547
    4. '_name' → logprob: -11.076610565185547
    5. '___' → logprob: -12.201610565185547
    6. ' ' → logprob: -12.576610565185547
    7. '_' → logprob: -12.701610565185547
    8. ' ' → logprob: -14.076610565185547
    9. ' "__' → logprob: -14.576610565185547
    10. 'True' → logprob: -14.826610565185547

Token 532: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03745775669813156
    2. '==' → logprob: -4.2874579429626465
    3. ' ==' → logprob: -4.2874579429626465
    4. 'name' → logprob: -4.7874579429626465
    5. '__.__' → logprob: -8.287457466125488
    6. ' __' → logprob: -8.912457466125488
    7. 'main' → logprob: -9.162457466125488
    8. '.__' → logprob: -9.287457466125488
    9. '```' → logprob: -9.287457466125488
    10. '=="' → logprob: -9.912457466125488

Token 533: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.4121114822482923e-06
    2. '==' → logprob: -12.875003814697266
    3. '__.__' → logprob: -14.250003814697266
    4. '__.' → logprob: -15.875003814697266
    5. 'name' → logprob: -16.750003814697266
    6. ' ==' → logprob: -16.875003814697266
    7. '___' → logprob: -17.375003814697266
    8. '____' → logprob: -17.625003814697266
    9. '__
' → logprob: -17.875003814697266
    10. '_' → logprob: -18.000003814697266

Token 534: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04057928919792175
    2. '==' → logprob: -3.290579319000244
    3. ' ==' → logprob: -6.040579319000244
    4. '=="' → logprob: -8.915578842163086
    5. '__.__' → logprob: -11.665578842163086
    6. '=='' → logprob: -12.415578842163086
    7. 'name' → logprob: -13.290578842163086
    8. 'main' → logprob: -13.790578842163086
    9. '===' → logprob: -14.165578842163086
    10. '_' → logprob: -14.415578842163086

Token 535: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06200869008898735
    2. ''' → logprob: -2.8120086193084717
    3. ' "__' → logprob: -10.56200885772705
    4. '__' → logprob: -11.18700885772705
    5. ' '__' → logprob: -14.31200885772705
    6. '   ' → logprob: -15.68700885772705
    7. '"name' → logprob: -15.68700885772705
    8. '"user' → logprob: -16.562007904052734
    9. '("__' → logprob: -16.687007904052734
    10. '"class' → logprob: -17.562007904052734

Token 536: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006791982799768448
    2. '__' → logprob: -5.006792068481445
    3. '"' → logprob: -9.631792068481445
    4. 'name' → logprob: -11.881792068481445
    5. ''' → logprob: -13.131792068481445
    6. '_main' → logprob: -14.506792068481445
    7. '__":
' → logprob: -14.756792068481445
    8. 'built' → logprob: -15.006792068481445
    9. 'm' → logprob: -15.631792068481445
    10. ' main' → logprob: -16.256792068481445

Token 537: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06225334852933884
    2. '__' → logprob: -2.81225323677063
    3. '__':
' → logprob: -8.18725299835205
    4. '__.' → logprob: -12.18725299835205
    5. '__.__' → logprob: -14.18725299835205
    6. '__["' → logprob: -14.18725299835205
    7. '__
' → logprob: -14.81225299835205
    8. '__
' → logprob: -15.43725299835205
    9. '```' → logprob: -15.68725299835205
    10. '___' → logprob: -16.562253952026367

Token 538: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5768280625343323
    2. '__' → logprob: -0.8268280625343323
    3. '   ' → logprob: -7.8268280029296875
    4. ' main' → logprob: -8.076828002929688
    5. '____' → logprob: -10.076828002929688
    6. '__":
' → logprob: -10.076828002929688
    7. ' __' → logprob: -10.826828002929688
    8. '_main' → logprob: -10.826828002929688
    9. '___' → logprob: -11.201828002929688
    10. '"' → logprob: -11.576828002929688

Token 539: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.339278580620885e-06
    2. ' main' → logprob: -13.000001907348633
    3. '	main' → logprob: -17.000001907348633
    4. '   ' → logprob: -18.625001907348633
    5. 'import' → logprob: -21.250001907348633
    6. '_main' → logprob: -22.375001907348633
    7. '(main' → logprob: -22.750001907348633
    8. '.main' → logprob: -23.250001907348633
    9. '
' → logprob: -24.250001907348633
    10. '    
' → logprob: -25.875001907348633

Token 540: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 538
Tokens correctement prédits (1ère position, stricte): 272
Tokens correctement prédits (1ère position, avec adaptation): 311
Tokens correctement prédits (top 10): 486
Précision stricte (1ère position): 50.56%
Précision adaptée (1ère position): 57.81%
Précision (top 10): 90.33%
================================================================================
