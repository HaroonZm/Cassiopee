================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:27:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

while True:
    n, k = map(int, input().split())
    if n == 0 and k == 0:
        break
    cards = [int(input()) for _ in range(k)]
    blank = cards.count(0)
    cards_set = set(x for x in cards if x != 0)
    arr = sorted(cards_set)
    max_len = 0
    left = 0
    for right in range(len(arr)):
        # nombre de nombres manquants entre arr[left] et arr[right]
        need = arr[right] - arr[left] + 1 - (right - left + 1)
        while need > blank:
            left += 1
            need = arr[right] - arr[left] + 1 - (right - left + 1)
        cur_len = (right - left + 1) + blank
        if cur_len > max_len:
            max_len = cur_len
    if max_len > n:
        max_len = n
    print(max_len)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048905275762081146
    2. '.' → logprob: -3.048905372619629
    3. ' (' → logprob: -9.298905372619629
    4. '(
' → logprob: -9.423905372619629
    5. ')' → logprob: -10.173905372619629
    6. '()' → logprob: -11.173905372619629
    7. '[' → logprob: -11.298905372619629
    8. ' ' → logprob: -11.423905372619629
    9. ''s' → logprob: -11.548905372619629
    10. '```' → logprob: -11.923905372619629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06210717186331749
    2. 'sys' → logprob: -2.8121070861816406
    3. ' input' → logprob: -9.31210708618164
    4. 'input' → logprob: -10.06210708618164
    5. '	sys' → logprob: -12.93710708618164
    6. '=sys' → logprob: -13.18710708618164
    7. ' ' → logprob: -13.68710708618164
    8. '(sys' → logprob: -13.93710708618164
    9. ' system' → logprob: -16.18710708618164
    10. ' lambda' → logprob: -16.68710708618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001290454383706674
    2. ' .' → logprob: -10.000128746032715
    3. '.readline' → logprob: -10.375128746032715
    4. '.stdin' → logprob: -11.000128746032715
    5. '.import' → logprob: -12.375128746032715
    6. '.setdefault' → logprob: -12.375128746032715
    7. '.
' → logprob: -12.625128746032715
    8. '[' → logprob: -12.750128746032715
    9. '.​' → logprob: -13.000128746032715
    10. '.get' → logprob: -13.125128746032715

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.019614169374108315
    2. '.read' → logprob: -4.519614219665527
    3. '.' → logprob: -4.769614219665527
    4. '.readlines' → logprob: -10.519614219665527
    5. 'read' → logprob: -11.519614219665527
    6. '.Read' → logprob: -12.519614219665527
    7. '.buffer' → logprob: -13.769614219665527
    8. '<|end|>' → logprob: -14.019614219665527
    9. ' .' → logprob: -14.269614219665527
    10. ' readline' → logprob: -14.644614219665527

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.056260839104652405
    2. '(' → logprob: -3.056260824203491
    3. '()
' → logprob: -5.68126106262207
    4. '(
' → logprob: -6.80626106262207
    5. '().' → logprob: -7.05626106262207
    6. '
' → logprob: -7.43126106262207
    7. '()\' → logprob: -7.43126106262207
    8. '\n' → logprob: -7.55626106262207
    9. '\' → logprob: -8.43126106262207
    10. '()

' → logprob: -9.05626106262207

Token 9: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18130090832710266
    2. '(' → logprob: -1.8063008785247803
    3. '().' → logprob: -6.806301116943359
    4. '()
' → logprob: -8.80630111694336
    5. '(
' → logprob: -10.05630111694336
    6. '()

' → logprob: -10.30630111694336
    7. ')' → logprob: -10.43130111694336
    8. '#' → logprob: -10.43130111694336
    9. 'def' → logprob: -10.68130111694336
    10. 'a' → logprob: -10.68130111694336

Token 10: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0014905771240592003
    2. ' True' → logprob: -6.876490592956543
    3. '  ' → logprob: -7.876490592956543
    4. ' (' → logprob: -10.126490592956543
    5. ' not' → logprob: -11.751490592956543
    6. ' )' → logprob: -11.876490592956543
    7. '(' → logprob: -12.501490592956543
    8. '    ' → logprob: -12.501490592956543
    9. ' i' → logprob: -13.501490592956543
    10. 'True' → logprob: -13.501490592956543

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015696183545514941
    2. '():' → logprob: -6.626569747924805
    3. ' :' → logprob: -8.626569747924805
    4. '(:' → logprob: -11.251569747924805
    5. ':**' → logprob: -11.376569747924805
    6. '   ' → logprob: -11.876569747924805
    7. ':
' → logprob: -12.251569747924805
    8. ':return' → logprob: -12.376569747924805
    9. '':'' → logprob: -12.876569747924805
    10. '):' → logprob: -12.876569747924805

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061212554574012756
    2. '    
' → logprob: -3.0612125396728516
    3. '    ' → logprob: -4.811212539672852
    4. '  
' → logprob: -6.686212539672852
    5. ' 
' → logprob: -7.561212539672852
    6. ':' → logprob: -7.811212539672852
    7. '     
' → logprob: -7.936212539672852
    8. '(' → logprob: -8.061212539672852
    9. '    
    
' → logprob: -8.061212539672852
    10. 'input' → logprob: -8.561212539672852

Token 13: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.24220894277095795
    2. 'line' → logprob: -1.8672089576721191
    3. 'data' → logprob: -3.867208957672119
    4. '   ' → logprob: -3.992208957672119
    5. ' data' → logprob: -5.117208957672119
    6. 'user' → logprob: -5.117208957672119
    7. ' user' → logprob: -5.242208957672119
    8. 'text' → logprob: -6.742208957672119
    9. ' inp' → logprob: -6.867208957672119
    10. 'try' → logprob: -8.367208480834961

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3190760314464569
    2. '=' → logprob: -1.3190760612487793
    3. ' ==' → logprob: -5.569076061248779
    4. ' ' → logprob: -6.569076061248779
    5. '==' → logprob: -8.569075584411621
    6. '=int' → logprob: -8.694075584411621
    7. ' :=' → logprob: -9.069075584411621
    8. '=input' → logprob: -10.319075584411621
    9. ':=' → logprob: -11.319075584411621
    10. ' =)' → logprob: -11.569075584411621

Token 15: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2722799479961395
    2. 'm' → logprob: -2.147279977798462
    3. ' m' → logprob: -2.647279977798462
    4. ' =' → logprob: -3.897279977798462
    5. 'input' → logprob: -4.397279739379883
    6. ' input' → logprob: -4.522279739379883
    7. '=input' → logprob: -6.397279739379883
    8. '=' → logprob: -6.647279739379883
    9. '  ' → logprob: -6.897279739379883
    10. ''' → logprob: -7.397279739379883

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994065642356873
    2. '=' → logprob: -2.6949405670166016
    3. ' ' → logprob: -13.194940567016602
    4. '=input' → logprob: -13.444940567016602
    5. ',' → logprob: -14.569940567016602
    6. ')' → logprob: -15.069940567016602
    7. '=line' → logprob: -16.1949405670166
    8. '=int' → logprob: -16.5699405670166
    9. '    ' → logprob: -17.3199405670166
    10. ' =
' → logprob: -17.6949405670166

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.08224786818027496
    2. 'map' → logprob: -2.5822479724884033
    3. ' input' → logprob: -5.957247734069824
    4. 'input' → logprob: -7.207247734069824
    5. ' ' → logprob: -11.457247734069824
    6. ' list' → logprob: -12.582247734069824
    7. '	map' → logprob: -12.832247734069824
    8. ' ' → logprob: -13.832247734069824
    9. '(map' → logprob: -13.832247734069824
    10. '[' → logprob: -13.832247734069824

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021336426958441734
    2. '(' → logprob: -4.021336555480957
    3. '(str' → logprob: -6.021336555480957
    4. '(input' → logprob: -7.271336555480957
    5. '(lambda' → logprob: -9.896336555480957
    6. '(list' → logprob: -12.396336555480957
    7. 'int' → logprob: -13.521336555480957
    8. ' (' → logprob: -13.771336555480957
    9. '(eval' → logprob: -14.146336555480957
    10. '(
' → logprob: -14.521336555480957

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8717479705810547
    2. ',input' → logprob: -1.3717479705810547
    3. ',' → logprob: -1.8717479705810547
    4. 'input' → logprob: -2.1217479705810547
    5. ')' → logprob: -2.9967479705810547
    6. '(' → logprob: -5.621747970581055
    7. ' input' → logprob: -7.621747970581055
    8. '=input' → logprob: -8.996747970581055
    9. '[input' → logprob: -10.121747970581055
    10. '<input' → logprob: -10.246747970581055

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38689175248146057
    2. ' input' → logprob: -1.1368917226791382
    3. ')' → logprob: -10.88689136505127
    4. '(input' → logprob: -14.13689136505127
    5. ' ' → logprob: -14.88689136505127
    6. ' )' → logprob: -15.26189136505127
    7. ',input' → logprob: -15.51189136505127
    8. '=input' → logprob: -15.88689136505127
    9. '	input' → logprob: -16.136892318725586
    10. 'sys' → logprob: -16.761892318725586

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0018176245503127575
    2. '()' → logprob: -6.62681770324707
    3. '())' → logprob: -7.62681770324707
    4. '(' → logprob: -13.75181770324707
    5. ')' → logprob: -13.87681770324707
    6. '()
' → logprob: -14.25181770324707
    7. ' ().' → logprob: -14.37681770324707
    8. '()))' → logprob: -14.50181770324707
    9. ' ())' → logprob: -15.75181770324707
    10. '('' → logprob: -16.37681770324707

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.7081385254859924
    2. 'strip' → logprob: -0.7081385254859924
    3. 'rstrip' → logprob: -4.208138465881348
    4. ')' → logprob: -13.583138465881348
    5. 'read' → logprob: -13.583138465881348
    6. '(split' → logprob: -14.083138465881348
    7. '```' → logprob: -14.333138465881348
    8. ' strip' → logprob: -14.583138465881348
    9. ' split' → logprob: -14.708138465881348
    10. 'rs' → logprob: -15.333138465881348

Token 23: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04041055217385292
    2. '())' → logprob: -3.2904105186462402
    3. '()' → logprob: -6.16541051864624
    4. '))' → logprob: -8.290410995483398
    5. ')
' → logprob: -12.290410995483398
    6. '())
' → logprob: -12.540410995483398
    7. '()))' → logprob: -12.915410995483398
    8. '(' → logprob: -13.665410995483398
    9. ')`' → logprob: -14.040410995483398
    10. '`)' → logprob: -14.665410995483398

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39454972743988037
    2. ' if' → logprob: -1.3945497274398804
    3. ' ' → logprob: -3.51954984664917
    4. '<|end|>' → logprob: -3.76954984664917
    5. ')' → logprob: -5.26954984664917
    6. '  ' → logprob: -5.51954984664917
    7. '\n' → logprob: -5.64454984664917
    8. ' 
' → logprob: -5.89454984664917
    9. 'if' → logprob: -6.14454984664917
    10. '    
' → logprob: -6.39454984664917

Token 25: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03481069579720497
    2. ' if' → logprob: -3.534810781478882
    3. ' ' → logprob: -6.284810543060303
    4. '  ' → logprob: -6.784810543060303
    5. '    ' → logprob: -7.159810543060303
    6. '\n' → logprob: -7.659810543060303
    7. 'if' (adapté à ' if') → logprob: -7.784810543060303
    8. '<|end|>' → logprob: -8.909811019897461
    9. '    
' → logprob: -9.284811019897461
    10. '   
' → logprob: -10.534811019897461

Token 26: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.032342828810214996
    2. ' not' → logprob: -3.5323429107666016
    3. 'n' → logprob: -6.032342910766602
    4. 'not' → logprob: -8.782342910766602
    5. ' ' → logprob: -10.282342910766602
    6. '	n' → logprob: -14.282342910766602
    7. ' ' → logprob: -15.407342910766602
    8. ' k' → logprob: -15.907342910766602
    9. ' (' → logprob: -16.5323429107666
    10. '(n' → logprob: -16.6573429107666

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005295188166201115
    2. '==' → logprob: -5.255295276641846
    3. ' <' → logprob: -10.505294799804688
    4. ' <=' → logprob: -10.630294799804688
    5. '=' → logprob: -12.755294799804688
    6. ' =' → logprob: -13.005294799804688
    7. ' ' → logprob: -13.130294799804688
    8. '<' → logprob: -13.880294799804688
    9. ')' → logprob: -14.630294799804688
    10. '0' → logprob: -15.005294799804688

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01252284087240696
    2. ' ' → logprob: -4.3875226974487305
    3. 'k' → logprob: -11.88752269744873
    4. ' k' → logprob: -13.82502269744873
    5. '```' → logprob: -14.20002269744873
    6. '   ' → logprob: -14.32502269744873
    7. '=' → logprob: -14.63752269744873
    8. '-' → logprob: -14.76252269744873
    9. '  ' → logprob: -14.76252269744873
    10. '_' → logprob: -14.82502269744873

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007146967691369355
    2. ' ' → logprob: -7.2507147789001465
    3. '-' → logprob: -13.688214302062988
    4. 'k' → logprob: -13.813214302062988
    5. '   ' → logprob: -14.875714302062988
    6. '```' → logprob: -15.000714302062988
    7. 'and' → logprob: -15.500714302062988
    8. '  ' → logprob: -15.563214302062988
    9. '=' → logprob: -15.813214302062988
    10. ''' → logprob: -15.875714302062988

Token 30: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.013922659680247307
    2. ':' → logprob: -4.763922691345215
    3. 'and' → logprob: -5.263922691345215
    4. ' or' → logprob: -9.638922691345215
    5. ' ' → logprob: -10.388922691345215
    6. ' a' → logprob: -11.763922691345215
    7. ' :' → logprob: -11.888922691345215
    8. ' an' → logprob: -12.888922691345215
    9. '	and' → logprob: -13.013922691345215
    10. '   ' → logprob: -13.638922691345215

Token 31: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2014336884021759
    2. 'k' → logprob: -1.7014336585998535
    3. ' ' → logprob: -11.201434135437012
    4. '	k' → logprob: -12.201434135437012
    5. '  ' → logprob: -13.701434135437012
    6. '   ' → logprob: -15.076434135437012
    7. ' ' → logprob: -15.826434135437012
    8. ' к' → logprob: -17.076433181762695
    9. '"k' → logprob: -17.076433181762695
    10. '_k' → logprob: -17.888933181762695

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016108855605125427
    2. '==' → logprob: -4.141108989715576
    3. ' ' → logprob: -10.641108512878418
    4. ' =' → logprob: -10.891108512878418
    5. '  ' → logprob: -11.766108512878418
    6. '=' → logprob: -11.766108512878418
    7. '<|end|>' → logprob: -12.016108512878418
    8. '0' → logprob: -12.266108512878418
    9. ')' → logprob: -13.516108512878418
    10. ' ' → logprob: -13.641108512878418

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054882392287254333
    2. ' ' → logprob: -2.929882287979126
    3. '  ' → logprob: -16.179882049560547
    4. '   ' → logprob: -17.304882049560547
    5. ' ' → logprob: -17.679882049560547
    6. '۰' → logprob: -17.804882049560547
    7. '<|end|>' → logprob: -19.179882049560547
    8. '```' → logprob: -19.242382049560547
    9. '	' → logprob: -19.929882049560547
    10. '０' → logprob: -19.992382049560547

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '  ' → logprob: -17.00048828125
    4. '   ' → logprob: -17.25048828125
    5. '۰' → logprob: -18.75048828125
    6. ' ' → logprob: -19.00048828125
    7. '    ' → logprob: -20.06298828125
    8. '```' → logprob: -20.06298828125
    9. '     ' → logprob: -20.12548828125
    10. '	' → logprob: -20.25048828125

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012199865886941552
    2. ':
' → logprob: -7.001219749450684
    3. ' :' → logprob: -8.751219749450684
    4. '   ' → logprob: -8.876219749450684
    5. '       ' → logprob: -12.501219749450684
    6. ':return' → logprob: -12.876219749450684
    7. ' :
' → logprob: -13.126219749450684
    8. '    ' → logprob: -14.501219749450684
    9. '):' → logprob: -14.751219749450684
    10. '	break' → logprob: -14.876219749450684

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001681367284618318
    2. '   ' → logprob: -6.501681327819824
    3. ' break' → logprob: -9.001681327819824
    4. '	break' → logprob: -11.251681327819824
    5. ':' → logprob: -11.501681327819824
    6. '	' → logprob: -12.001681327819824
    7. '\n' → logprob: -12.626681327819824
    8. '           ' → logprob: -12.751681327819824
    9. '     ' → logprob: -12.751681327819824
    10. '      ' → logprob: -12.751681327819824

Token 37: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.27297836542129517
    2. '       ' → logprob: -1.8979783058166504
    3. 'break' (adapté à ' break') → logprob: -2.8979783058166504
    4. '   ' → logprob: -3.3979783058166504
    5. '	break' → logprob: -7.77297830581665
    6. '```' → logprob: -11.772978782653809
    7. '           ' → logprob: -12.397978782653809
    8. '_break' → logprob: -12.772978782653809
    9. ' ' → logprob: -13.397978782653809
    10. '
' → logprob: -13.897978782653809

Token 38: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08546459674835205
    2. '    
' → logprob: -2.7104644775390625
    3. '\n' → logprob: -4.8354644775390625
    4. '<|end|>' → logprob: -5.8354644775390625
    5. '
' → logprob: -6.2104644775390625
    6. '```' → logprob: -7.5854644775390625
    7. '  
' → logprob: -8.335464477539062
    8. '\r' → logprob: -8.460464477539062
    9. '   
' → logprob: -8.585464477539062
    10. '    
    
' → logprob: -8.710464477539062

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01972627080976963
    2. '    
' → logprob: -4.019726276397705
    3. '    ' → logprob: -8.144725799560547
    4. '```' → logprob: -8.144725799560547
    5. 'print' → logprob: -9.144725799560547
    6. ' 
' → logprob: -9.519725799560547
    7. '   
' → logprob: -9.769725799560547
    8. '[' → logprob: -9.894725799560547
    9. '    
    
' → logprob: -9.894725799560547
    10. '<|end|>' → logprob: -9.894725799560547

Token 40: ' cards' (ID: 10541)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6937227845191956
    2. 'result' → logprob: -1.6937227249145508
    3. 'dp' → logprob: -2.068722724914551
    4. ' dp' → logprob: -3.068722724914551
    5. 'count' → logprob: -3.318722724914551
    6. ' result' → logprob: -3.568722724914551
    7. '    
' → logprob: -4.693722724914551
    8. 'results' → logprob: -5.318722724914551
    9. 'res' → logprob: -5.443722724914551
    10. 's' → logprob: -5.568722724914551

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012783447280526161
    2. '=' → logprob: -4.387783527374268
    3. '[' → logprob: -9.51278305053711
    4. '_count' → logprob: -10.13778305053711
    5. '_' → logprob: -10.26278305053711
    6. ' ' → logprob: -10.38778305053711
    7. ')' → logprob: -10.51278305053711
    8. '   ' → logprob: -11.01278305053711
    9. '_counts' → logprob: -11.88778305053711
    10. '[:]' → logprob: -12.26278305053711

Token 42: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2634598910808563
    2. 'list' → logprob: -1.7634599208831787
    3. ' [' → logprob: -3.6384599208831787
    4. '[list' → logprob: -4.1384596824646
    5. '[' → logprob: -5.1384596824646
    6. ' []' → logprob: -5.5134596824646
    7. '[]' → logprob: -5.6384596824646
    8. '[input' → logprob: -6.1384596824646
    9. ' sorted' → logprob: -7.0134596824646
    10. ' input' → logprob: -7.8884596824646

Token 43: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.46872416138648987
    2. 'list' → logprob: -1.9687241315841675
    3. '0' → logprob: -2.218724250793457
    4. 'i' → logprob: -2.468724250793457
    5. '*' → logprob: -4.343724250793457
    6. 'False' → logprob: -4.468724250793457
    7. 'input' → logprob: -4.843724250793457
    8. ']' → logprob: -5.718724250793457
    9. ' int' → logprob: -6.843724250793457
    10. ' i' → logprob: -6.968724250793457

Token 44: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09209543466567993
    2. '(' → logprob: -2.717095375061035
    3. '(x' → logprob: -4.592095375061035
    4. '(i' → logprob: -4.842095375061035
    5. '()' → logprob: -6.467095375061035
    6. '()]' → logprob: -6.842095375061035
    7. ']' → logprob: -6.842095375061035
    8. '(
' → logprob: -9.342095375061035
    9. 'input' → logprob: -10.342095375061035
    10. '(a' → logprob: -11.467095375061035

Token 45: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00026634239475242794
    2. '().' → logprob: -8.875266075134277
    3. '()' → logprob: -9.250266075134277
    4. '())
' → logprob: -11.625266075134277
    5. '()]' → logprob: -11.625266075134277
    6. ')' → logprob: -11.875266075134277
    7. '()),' → logprob: -13.250266075134277
    8. ' ())' → logprob: -13.375266075134277
    9. '()))' → logprob: -14.000266075134277
    10. '())

' → logprob: -14.750266075134277

Token 46: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020750217139720917
    2. ')' → logprob: -4.020750045776367
    3. 'for' → logprob: -6.645750045776367
    4. ' for' → logprob: -7.520750045776367
    5. '())' → logprob: -7.645750045776367
    6. '(' → logprob: -9.270750045776367
    7. '().' → logprob: -9.770750045776367
    8. ' ' → logprob: -9.895750045776367
    9. ' ()' → logprob: -10.395750045776367
    10. '()]' → logprob: -11.645750045776367

Token 47: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0448271669447422
    2. '_' → logprob: -3.4198272228240967
    3. 'range' → logprob: -5.044826984405518
    4. ' _' → logprob: -5.669826984405518
    5. ' ' → logprob: -6.919826984405518
    6. '	range' → logprob: -9.169827461242676
    7. '_range' → logprob: -9.669827461242676
    8. ' in' → logprob: -9.794827461242676
    9. '(range' → logprob: -11.919827461242676
    10. ' xrange' → logprob: -12.169827461242676

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8441669344902039
    2. ' range' → logprob: -0.9691669344902039
    3. 'range' → logprob: -1.7191669940948486
    4. 'in' → logprob: -5.0941667556762695
    5. ' ' → logprob: -5.7191667556762695
    6. '_' → logprob: -7.0941667556762695
    7. ' _' → logprob: -7.5941667556762695
    8. '  ' → logprob: -7.7191667556762695
    9. '	range' → logprob: -9.09416675567627
    10. '(range' → logprob: -9.59416675567627

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00035453110467642546
    2. ' range' → logprob: -8.000354766845703
    3. 'rang' → logprob: -12.250354766845703
    4. 'r' → logprob: -12.625354766845703
    5. '   ' → logprob: -13.125354766845703
    6. ' ' → logprob: -13.250354766845703
    7. ')' → logprob: -13.750354766845703
    8. '(range' → logprob: -13.750354766845703
    9. '	range' → logprob: -14.000354766845703
    10. 'ran' → logprob: -14.000354766845703

Token 50: '(k' (ID: 12125)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07910601794719696
    2. '(k' → logprob: -2.579106092453003
    3. '(' → logprob: -8.454106330871582
    4. 'n' → logprob: -13.454106330871582
    5. 'k' → logprob: -14.079106330871582
    6. ' (' → logprob: -14.329106330871582
    7. '(
' → logprob: -16.204105377197266
    8. '((' → logprob: -16.704105377197266
    9. ' k' → logprob: -16.829105377197266
    10. ' n' → logprob: -16.829105377197266

Token 51: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002842437708750367
    2. ')' → logprob: -6.502842426300049
    3. ']' → logprob: -6.627842426300049
    4. ')]
' → logprob: -11.752842903137207
    5. ')
' → logprob: -14.002842903137207
    6. '])]' → logprob: -14.127842903137207
    7. ')])' → logprob: -14.127842903137207
    8. ' )' → logprob: -14.252842903137207
    9. ']
' → logprob: -14.377842903137207
    10. '')]' → logprob: -14.502842903137207

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24891668558120728
    2. '   ' → logprob: -2.2489166259765625
    3. '<|end|>' → logprob: -2.3739166259765625
    4. '    
' → logprob: -4.6239166259765625
    5. '  
' → logprob: -5.8739166259765625
    6. ' 
' → logprob: -6.1239166259765625
    7. 'cards' → logprob: -6.6239166259765625
    8. '   
' → logprob: -6.8739166259765625
    9. ' cards' → logprob: -7.2489166259765625
    10. ' ' → logprob: -7.2489166259765625

Token 53: ' blank' (ID: 16953)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.5996828079223633
    2. '   ' → logprob: -1.5996828079223633
    3. 'count' → logprob: -3.0996828079223633
    4. 'seen' → logprob: -3.3496828079223633
    5. 'counts' → logprob: -3.3496828079223633
    6. ' cards' → logprob: -3.7246828079223633
    7. 'answer' → logprob: -4.224682807922363
    8. 'dp' → logprob: -4.849682807922363
    9. 'found' → logprob: -4.849682807922363
    10. 's' → logprob: -4.849682807922363

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7160735726356506
    2. '_cards' → logprob: -1.8410735130310059
    3. '_' → logprob: -1.9660735130310059
    4. ' =' → logprob: -2.466073513031006
    5. 's' → logprob: -3.341073513031006
    6. '_count' → logprob: -4.216073513031006
    7. '_line' → logprob: -4.341073513031006
    8. '_positions' → logprob: -4.841073513031006
    9. '_lines' → logprob: -5.091073513031006
    10. '_spaces' → logprob: -5.216073513031006

Token 55: ' cards' (ID: 10541)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9657029509544373
    2. ' n' → logprob: -1.465703010559082
    3. '[' → logprob: -2.340703010559082
    4. ' [' → logprob: -2.340703010559082
    5. '[n' → logprob: -2.465703010559082
    6. '[]' → logprob: -3.340703010559082
    7. '0' → logprob: -3.590703010559082
    8. ' ' → logprob: -4.090703010559082
    9. ' []' → logprob: -4.840703010559082
    10. ' cards' → logprob: -5.215703010559082

Token 56: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.10005190968513489
    2. '[:]' → logprob: -2.6000518798828125
    3. '.' → logprob: -4.6000518798828125
    4. '.copy' → logprob: -5.6000518798828125
    5. '.index' → logprob: -5.9750518798828125
    6. '[:' → logprob: -6.1000518798828125
    7. '+' → logprob: -6.9750518798828125
    8. '[' → logprob: -7.8500518798828125
    9. ' +' → logprob: -7.9750518798828125
    10. '[::-' → logprob: -8.350051879882812

Token 57: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.735893965815194e-05
    2. '(-' → logprob: -12.125017166137695
    3. '('' → logprob: -12.625017166137695
    4. ' (' → logprob: -12.625017166137695
    5. '(
' → logprob: -12.625017166137695
    6. '((' → logprob: -14.250017166137695
    7. '()' → logprob: -14.875017166137695
    8. '0' → logprob: -15.250017166137695
    9. '(

' → logprob: -15.375017166137695
    10. '(None' → logprob: -15.750017166137695

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00039647609810344875
    2. ' ' → logprob: -8.250396728515625
    3. '1' → logprob: -10.000396728515625
    4. '(' → logprob: -10.125396728515625
    5. ')' → logprob: -10.375396728515625
    6. '-' → logprob: -12.250396728515625
    7. 'n' → logprob: -13.250396728515625
    8. '  ' → logprob: -13.750396728515625
    9. '   ' → logprob: -14.000396728515625
    10. '5' → logprob: -14.000396728515625

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016685189912095666
    2. ')
' → logprob: -6.501668453216553
    3. ' )' → logprob: -8.751668930053711
    4. ')
' → logprob: -13.251668930053711
    5. ')

' → logprob: -13.751668930053711
    6. ' )
' → logprob: -13.876668930053711
    7. '))' → logprob: -13.876668930053711
    8. '   ' → logprob: -14.126668930053711
    9. ')>' → logprob: -14.501668930053711
    10. ')#' → logprob: -14.751668930053711

Token 60: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1865859180688858
    2. '<|end|>' → logprob: -1.9365859031677246
    3. '   ' → logprob: -4.061585903167725
    4. '    
' → logprob: -5.186585903167725
    5. '<|end|>' → logprob: -7.561585903167725
    6. ')' → logprob: -7.936585903167725
    7. '  
' → logprob: -8.061586380004883
    8. '#' → logprob: -8.186586380004883
    9. '   
' → logprob: -8.686586380004883
    10. '```' → logprob: -8.686586380004883

Token 61: ' cards' (ID: 10541)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9134461879730225
    2. 'cards' (adapté à ' cards') → logprob: -2.1634461879730225
    3. 'count' → logprob: -2.6634461879730225
    4. 'counts' → logprob: -2.6634461879730225
    5. 'print' → logprob: -3.2884461879730225
    6. 'used' → logprob: -3.9134461879730225
    7. 'freq' → logprob: -3.9134461879730225
    8. ' cards' → logprob: -4.288446426391602
    9. 's' → logprob: -4.288446426391602
    10. ' counts' → logprob: -4.413446426391602

Token 62: '_set' (ID: 5451)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.03993897885084152
    2. '.' → logprob: -3.2899389266967773
    3. '=' → logprob: -6.664938926696777
    4. '.remove' → logprob: -8.539938926696777
    5. '.count' → logprob: -8.789938926696777
    6. ' =' → logprob: -9.164938926696777
    7. '.reverse' → logprob: -9.789938926696777
    8. '[:]' → logprob: -10.289938926696777
    9. 'sort' → logprob: -10.914938926696777
    10. '.=' → logprob: -11.289938926696777

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018239730969071388
    2. '=' → logprob: -4.018239498138428
    3. '=set' → logprob: -10.268239974975586
    4. 's' → logprob: -11.143239974975586
    5. ' ' → logprob: -11.143239974975586
    6. '.' → logprob: -11.768239974975586
    7. ')' → logprob: -12.643239974975586
    8. ',' → logprob: -12.768239974975586
    9. '  ' → logprob: -13.018239974975586
    10. '()' → logprob: -13.018239974975586

Token 64: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.07892647385597229
    2. 'set' → logprob: -2.5789265632629395
    3. '{' → logprob: -11.453926086425781
    4. ' {' → logprob: -11.703926086425781
    5. '(set' → logprob: -12.203926086425781
    6. ' ' → logprob: -12.828926086425781
    7. '	set' → logprob: -12.953926086425781
    8. ' list' → logprob: -13.203926086425781
    9. '=set' → logprob: -13.828926086425781
    10. '   ' → logprob: -13.953926086425781

Token 65: '(x' (ID: 4061)
  Prédit: '(cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.0005012048059143126
    2. '()' → logprob: -8.25050163269043
    3. '(' → logprob: -8.37550163269043
    4. '(card' → logprob: -12.00050163269043
    5. '(c' → logprob: -13.12550163269043
    6. 'cards' → logprob: -14.62550163269043
    7. ' (' → logprob: -15.12550163269043
    8. ' cards' → logprob: -15.50050163269043
    9. '/cards' → logprob: -16.25050163269043
    10. ' ()' → logprob: -17.00050163269043

Token 66: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06987562775611877
    2. 'for' → logprob: -3.194875717163086
    3. '(cards' → logprob: -4.319875717163086
    4. 'cards' → logprob: -4.694875717163086
    5. ' cards' → logprob: -6.069875717163086
    6. ')' → logprob: -6.819875717163086
    7. ' ' → logprob: -7.819875717163086
    8. ' if' → logprob: -9.444875717163086
    9. '_cards' → logprob: -10.319875717163086
    10. '   ' → logprob: -10.319875717163086

Token 67: ' x' (ID: 1215)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.003271468449383974
    2. 'cards' → logprob: -5.753271579742432
    3. ' x' → logprob: -10.378271102905273
    4. ' in' → logprob: -10.628271102905273
    5. ' ' → logprob: -11.503271102905273
    6. 'x' → logprob: -11.628271102905273
    7. ' card' → logprob: -12.003271102905273
    8. '(cards' → logprob: -12.378271102905273
    9. '  ' → logprob: -13.128271102905273
    10. ' the' → logprob: -13.253271102905273

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03012174181640148
    2. 'in' → logprob: -3.5301218032836914
    3. ' ' → logprob: -8.030121803283691
    4. '  ' → logprob: -10.405121803283691
    5. '   ' → logprob: -11.780121803283691
    6. ' cards' → logprob: -13.655121803283691
    7. ' i' → logprob: -13.780121803283691
    8. ' ' → logprob: -13.780121803283691
    9. 'i' → logprob: -14.030121803283691
    10. 'x' → logprob: -14.280121803283691

Token 69: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.12715928256511688
    2. 'cards' → logprob: -2.127159357070923
    3. '(cards' → logprob: -8.752159118652344
    4. ' ' → logprob: -10.877159118652344
    5. ' range' → logprob: -11.002159118652344
    6. '.cards' → logprob: -11.377159118652344
    7. 'card' → logprob: -12.502159118652344
    8. 'range' → logprob: -12.814659118652344
    9. '_cards' → logprob: -13.252159118652344
    10. ' blank' → logprob: -13.314659118652344

Token 70: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0019329203059896827
    2. 'if' → logprob: -6.2519330978393555
    3. ' ' → logprob: -12.501933097839355
    4. ')' → logprob: -14.876933097839355
    5. ' )' → logprob: -15.751933097839355
    6. '	if' → logprob: -18.50193214416504
    7. ' in' → logprob: -18.50193214416504
    8. '   ' → logprob: -18.62693214416504
    9. '0' → logprob: -18.75193214416504
    10. ' ' → logprob: -19.00193214416504

Token 71: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05510331317782402
    2. 'x' → logprob: -2.930103302001953
    3. ' ' → logprob: -8.430103302001953
    4. '0' → logprob: -14.305103302001953
    5. ')' → logprob: -14.430103302001953
    6. ' not' → logprob: -14.930103302001953
    7. '	x' → logprob: -15.055103302001953
    8. ')x' → logprob: -15.055103302001953
    9. '(x' → logprob: -15.805103302001953
    10. '  ' → logprob: -15.930103302001953

Token 72: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.9747682809829712
    2. '>' → logprob: -1.3497682809829712
    3. '!=' → logprob: -1.3497682809829712
    4. ' >' → logprob: -2.4747681617736816
    5. ')' → logprob: -4.099768161773682
    6. ' ' → logprob: -6.349768161773682
    7. ' not' → logprob: -7.849768161773682
    8. ')>' → logprob: -7.974768161773682
    9. '0' → logprob: -8.22476863861084
    10. ' )' → logprob: -8.59976863861084

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894839882850647
    2. ' ' → logprob: -2.4639484882354736
    3. '  ' → logprob: -13.338948249816895
    4. 'blank' → logprob: -13.526448249816895
    5. '   ' → logprob: -13.713948249816895
    6. ')' → logprob: -13.901448249816895
    7. ' ' → logprob: -14.151448249816895
    8. '1' → logprob: -14.713948249816895
    9. ' blank' → logprob: -15.213948249816895
    10. '    ' → logprob: -15.276448249816895

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019373197574168444
    2. ' ' → logprob: -6.251937389373779
    3. 'blank' → logprob: -12.126936912536621
    4. ')' → logprob: -14.251936912536621
    5. '  ' → logprob: -14.876936912536621
    6. '   ' → logprob: -14.876936912536621
    7. ' blank' → logprob: -15.439436912536621
    8. '-' → logprob: -15.626936912536621
    9. '1' → logprob: -15.689436912536621
    10. '(blank' → logprob: -16.189437866210938

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016265720478259027
    2. ' )' → logprob: -8.875163078308105
    3. ')
' → logprob: -11.125163078308105
    4. ' and' → logprob: -12.000163078308105
    5. ')

' → logprob: -15.125163078308105
    6. '   ' → logprob: -15.250163078308105
    7. 'and' → logprob: -15.625163078308105
    8. '))' → logprob: -15.875163078308105
    9. '),' → logprob: -16.00016212463379
    10. ' if' → logprob: -16.12516212463379

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8346085548400879
    2. '   ' → logprob: -0.8346085548400879
    3. '<|end|>' → logprob: -2.459608554840088
    4. '    
' → logprob: -3.459608554840088
    5. ' ' → logprob: -5.584608554840088
    6. '  
' → logprob: -5.834608554840088
    7. '<|end|>' → logprob: -6.709608554840088
    8. ' if' → logprob: -6.709608554840088
    9. '   
' → logprob: -6.834608554840088
    10. ' 
' → logprob: -6.959608554840088

Token 77: ' arr' (ID: 1724)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5650827288627625
    2. '   ' → logprob: -0.9400827288627625
    3. '<|end|>' → logprob: -4.065082550048828
    4. '    
' → logprob: -4.315082550048828
    5. ' if' → logprob: -5.690082550048828
    6. 'if' → logprob: -6.315082550048828
    7. 'possible' → logprob: -6.940082550048828
    8. ' 
' → logprob: -7.690082550048828
    9. 'print' → logprob: -7.815082550048828
    10. '  
' → logprob: -8.065082550048828

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05102755129337311
    2. 'ay' → logprob: -3.426027536392212
    3. '=' → logprob: -5.051027774810791
    4. 'ays' → logprob: -5.551027774810791
    5. 'anged' → logprob: -5.551027774810791
    6. 'angement' → logprob: -6.551027774810791
    7. '=[]' → logprob: -7.051027774810791
    8. 'y' → logprob: -8.926027297973633
    9. 'angements' → logprob: -9.051027297973633
    10. '_len' → logprob: -10.051027297973633

Token 79: ' sorted' (ID: 20099)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5658594369888306
    2. '[]' → logprob: -1.9408594369888306
    3. ' []' → logprob: -2.065859317779541
    4. '[' → logprob: -2.440859317779541
    5. ' list' → logprob: -3.440859317779541
    6. ' sorted' → logprob: -4.440859317779541
    7. ' set' → logprob: -4.690859317779541
    8. 'list' → logprob: -5.065859317779541
    9. 'set' → logprob: -5.940859317779541
    10. '[len' → logprob: -5.940859317779541

Token 80: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.0031210333108901978
    2. '(list' → logprob: -6.0031208992004395
    3. '([' → logprob: -8.628121376037598
    4. 'cards' → logprob: -8.878121376037598
    5. '(set' → logprob: -9.128121376037598
    6. '(' → logprob: -9.253121376037598
    7. '((' → logprob: -9.878121376037598
    8. '(card' → logprob: -10.253121376037598
    9. 'list' → logprob: -11.003121376037598
    10. '({' → logprob: -12.128121376037598

Token 81: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.18953195214271545
    2. ')' → logprob: -1.814531922340393
    3. ' -' → logprob: -5.8145318031311035
    4. '   ' → logprob: -6.4395318031311035
    5. '_)' → logprob: -6.8145318031311035
    6. ',' → logprob: -7.0645318031311035
    7. ' )' → logprob: -7.5645318031311035
    8. ')
' → logprob: -7.9395318031311035
    9. ' ' → logprob: -7.9395318031311035
    10. '))' → logprob: -8.314532279968262

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003946367651224136
    2. ',' → logprob: -6.128946304321289
    3. ' )' → logprob: -6.878946304321289
    4. ')
' → logprob: -7.628946304321289
    5. '())' → logprob: -10.003946304321289
    6. '()' → logprob: -10.378946304321289
    7. '))' → logprob: -10.628946304321289
    8. ' ,' → logprob: -10.753946304321289
    9. ' +' → logprob: -10.878946304321289
    10. ')

' → logprob: -11.253946304321289

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08211489766836166
    2. ' for' → logprob: -3.9571149349212646
    3. '<|end|>' → logprob: -4.2071146965026855
    4. '    
' → logprob: -4.5821146965026855
    5. '
' → logprob: -4.8321146965026855
    6. 'for' → logprob: -5.0821146965026855
    7. ' if' → logprob: -5.3321146965026855
    8. 'if' → logprob: -5.9571146965026855
    9. '[' → logprob: -6.3321146965026855
    10. '    ' → logprob: -6.5821146965026855

Token 84: ' max' (ID: 2999)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3114559650421143
    2. 'if' → logprob: -1.4364559650421143
    3. ' for' → logprob: -1.8114559650421143
    4. 'for' → logprob: -2.6864559650421143
    5. '   ' → logprob: -2.8114559650421143
    6. 'possible' → logprob: -4.061455726623535
    7. 'result' → logprob: -4.186455726623535
    8. 'idx' → logprob: -4.186455726623535
    9. 'diff' → logprob: -4.311455726623535
    10. 'answer' → logprob: -4.436455726623535

Token 85: '_len' (ID: 13683)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.43963417410850525
    2. '_val' → logprob: -1.8146342039108276
    3. '_card' → logprob: -2.814634084701538
    4. '_' → logprob: -3.314634084701538
    5. '_len' → logprob: -3.939634084701538
    6. '_diff' → logprob: -4.564634323120117
    7. '_value' → logprob: -4.564634323120117
    8. 'num' → logprob: -4.814634323120117
    9. '_number' → logprob: -5.064634323120117
    10. '_count' → logprob: -5.189634323120117

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39024972915649414
    2. '=' → logprob: -1.1402497291564941
    3. '_' → logprob: -6.015249729156494
    4. '(' → logprob: -7.640249729156494
    5. ',' → logprob: -8.390249252319336
    6. ' ' → logprob: -8.890249252319336
    7. '_idx' → logprob: -10.265249252319336
    8. '_=' → logprob: -11.015249252319336
    9. 'x' → logprob: -12.765249252319336
    10. ' ' → logprob: -12.890249252319336

Token 87: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.579707145690918
    2. ' ' → logprob: -0.954707145690918
    3. '1' → logprob: -3.704707145690918
    4. 'len' → logprob: -4.079707145690918
    5. ' len' → logprob: -4.454707145690918
    6. ' max' → logprob: -7.204707145690918
    7. 'max' → logprob: -8.204707145690918
    8. '[' → logprob: -8.954707145690918
    9. ' k' → logprob: -9.329707145690918
    10. '[len' → logprob: -9.517207145690918

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10566575080156326
    2. 'len' → logprob: -2.980665683746338
    3. '1' → logprob: -3.105665683746338
    4. ' ' → logprob: -6.480665683746338
    5. 'k' → logprob: -6.730665683746338
    6. 'max' → logprob: -7.105665683746338
    7. 'arr' → logprob: -7.605665683746338
    8. 'blank' → logprob: -8.855666160583496
    9. 'n' → logprob: -8.980666160583496
    10. '-' → logprob: -9.480666160583496

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7287881374359131
    2. '   ' → logprob: -1.103788137435913
    3. '<|end|>' → logprob: -2.103788137435913
    4. ' for' → logprob: -3.728788137435913
    5. '    
' → logprob: -4.228788375854492
    6. ' 
' → logprob: -5.103788375854492
    7. 'for' → logprob: -5.853788375854492
    8. ' ' → logprob: -5.978788375854492
    9. ',' → logprob: -5.978788375854492
    10. '<|end|>' → logprob: -6.103788375854492

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24214297533035278
    2. ' for' → logprob: -2.367142915725708
    3. 'for' → logprob: -2.992142915725708
    4. 'i' → logprob: -3.867142915725708
    5. ' i' → logprob: -4.242143154144287
    6. 'start' → logprob: -4.867143154144287
    7. 'current' → logprob: -5.117143154144287
    8. 'arr' → logprob: -5.492143154144287
    9. ',' → logprob: -5.992143154144287
    10. ' current' → logprob: -6.117143154144287

Token 91: ' left' (ID: 3561)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11894018948078156
    2. 'start' → logprob: -2.6189401149749756
    3. 'current' → logprob: -4.618940353393555
    4. 'l' → logprob: -4.743940353393555
    5. 'i' → logprob: -4.993940353393555
    6. ' for' → logprob: -5.868940353393555
    7. '   ' → logprob: -6.118940353393555
    8. 'left' (adapté à ' left') → logprob: -6.493940353393555
    9. 'count' → logprob: -6.618940353393555
    10. 'if' → logprob: -6.618940353393555

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6036089658737183
    2. '=' → logprob: -0.8536089658737183
    3. ',' → logprob: -3.603609085083008
    4. ' ,' → logprob: -10.353609085083008
    5. ' ' → logprob: -11.228609085083008
    6. '_idx' → logprob: -12.228609085083008
    7. '<|end|>' → logprob: -12.353609085083008
    8. 'index' → logprob: -12.978609085083008
    9. 'idx' → logprob: -13.478609085083008
    10. ')' → logprob: -13.728609085083008

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04307660460472107
    2. ' ' → logprob: -3.168076515197754
    3. 'arr' → logprob: -9.918076515197754
    4. 'right' → logprob: -11.543076515197754
    5. ' right' → logprob: -12.293076515197754
    6. ' arr' → logprob: -12.793076515197754
    7. '1' → logprob: -13.043076515197754
    8. '   ' → logprob: -13.043076515197754
    9. '  ' → logprob: -13.168076515197754
    10. ' -' → logprob: -13.855576515197754

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001302374730585143
    2. 'arr' → logprob: -9.750130653381348
    3. ' ' → logprob: -10.000130653381348
    4. 'right' → logprob: -10.750130653381348
    5. '1' → logprob: -13.625130653381348
    6. '-' → logprob: -13.812630653381348
    7. '[' → logprob: -14.500130653381348
    8. 'len' → logprob: -15.437630653381348
    9. '  ' → logprob: -15.687630653381348
    10. '```' → logprob: -15.875130653381348

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33740776777267456
    2. '<|end|>' → logprob: -1.8374078273773193
    3. ' for' → logprob: -2.9624078273773193
    4. 'for' → logprob: -3.0874078273773193
    5. ' 
' → logprob: -4.83740758895874
    6. '   ' → logprob: -5.21240758895874
    7. ' ' → logprob: -5.58740758895874
    8. 'right' → logprob: -5.83740758895874
    9. ' right' → logprob: -6.08740758895874
    10. '<|end|>' → logprob: -6.21240758895874

Token 96: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1442287713289261
    2. 'right' → logprob: -2.51922869682312
    3. ' for' → logprob: -3.01922869682312
    4. '
' → logprob: -6.144228935241699
    5. '   ' → logprob: -6.519228935241699
    6. ' right' → logprob: -6.769228935241699
    7. '    
' → logprob: -10.1442289352417
    8. 'n' → logprob: -10.3942289352417
    9. '```' → logprob: -11.0192289352417
    10. ' 
' → logprob: -11.6442289352417

Token 97: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026751428842544556
    2. 'right' → logprob: -3.6517515182495117
    3. ' for' → logprob: -7.776751518249512
    4. '   ' → logprob: -11.276751518249512
    5. ' right' → logprob: -11.776751518249512
    6. 'n' → logprob: -12.401751518249512
    7. 'r' → logprob: -13.651751518249512
    8. 'Right' → logprob: -14.026751518249512
    9. 'and' → logprob: -14.276751518249512
    10. '```' → logprob: -14.276751518249512

Token 98: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5231928825378418
    2. ' right' → logprob: -0.8981928825378418
    3. ' ' → logprob: -10.648193359375
    4. '	right' → logprob: -11.398193359375
    5. ' in' → logprob: -11.773193359375
    6. 'in' → logprob: -11.773193359375
    7. '   ' → logprob: -12.273193359375
    8. 'i' → logprob: -12.523193359375
    9. '```' → logprob: -12.773193359375
    10. ' i' → logprob: -12.898193359375

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006787485908716917
    2. 'in' → logprob: -5.006787300109863
    3. ' ' → logprob: -9.631787300109863
    4. '	in' → logprob: -13.006787300109863
    5. ',' → logprob: -13.131787300109863
    6. '   ' → logprob: -14.256787300109863
    7. '```' → logprob: -15.131787300109863
    8. ' ,' → logprob: -15.381787300109863
    9. 'In' → logprob: -15.381787300109863
    10. '  ' → logprob: -15.506787300109863

Token 100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12697744369506836
    2. ' range' → logprob: -2.1269774436950684
    3. 'arr' → logprob: -10.001977920532227
    4. '   ' → logprob: -13.501977920532227
    5. ' arr' → logprob: -13.876977920532227
    6. ' ' → logprob: -14.126977920532227
    7. '	range' → logprob: -14.751977920532227
    8. '(range' → logprob: -15.126977920532227
    9. '  ' → logprob: -15.626977920532227
    10. '```' → logprob: -17.251977920532227

Token 101: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0008922827546484768
    2. '(left' → logprob: -7.375892162322998
    3. '(' → logprob: -8.250892639160156
    4. 'len' → logprob: -13.250892639160156
    5. ' len' → logprob: -13.750892639160156
    6. ' (' → logprob: -14.750892639160156
    7. '(n' → logprob: -14.875892639160156
    8. '(l' → logprob: -14.875892639160156
    9. '(k' → logprob: -15.250892639160156
    10. '   ' → logprob: -16.125892639160156

Token 102: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00010020548506872728
    2. 'arr' → logprob: -9.250100135803223
    3. '(' → logprob: -13.375100135803223
    4. '(cards' → logprob: -13.625100135803223
    5. ' arr' → logprob: -14.750100135803223
    6. ')' → logprob: -15.625100135803223
    7. ' (' → logprob: -15.750100135803223
    8. '	arr' → logprob: -16.00010108947754
    9. '[arr' → logprob: -16.25010108947754
    10. '<arr' → logprob: -16.62510108947754

Token 103: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021664166823029518
    2. '):
' → logprob: -4.396664142608643
    3. ')):' → logprob: -4.896664142608643
    4. ' ):' → logprob: -6.896664142608643
    5. ')):
' → logprob: -7.896664142608643
    6. ')' → logprob: -9.1466646194458
    7. '):
' → logprob: -10.1466646194458
    8. '   ' → logprob: -10.1466646194458
    9. ' ' → logprob: -10.2716646194458
    10. '))' → logprob: -11.3966646194458

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4449452757835388
    2. '   ' → logprob: -1.5699453353881836
    3. ':' → logprob: -2.0699453353881836
    4. '<|end|>' → logprob: -4.319945335388184
    5. '    ' → logprob: -5.319945335388184
    6. ' ' → logprob: -6.444945335388184
    7. '```' → logprob: -7.069945335388184
    8. ' :' → logprob: -7.319945335388184
    9. ',' → logprob: -7.319945335388184
    10. '        
' → logprob: -7.319945335388184

Token 105: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.032278299331665
    2. 'while' → logprob: -1.032278299331665
    3. ' while' → logprob: -1.407278299331665
    4. '   ' → logprob: -3.532278299331665
    5. '           ' → logprob: -5.282278060913086
    6. ' if' → logprob: -6.032278060913086
    7. '	while' → logprob: -6.282278060913086
    8. 'if' → logprob: -6.407278060913086
    9. '    ' → logprob: -7.157278060913086
    10. '
' → logprob: -7.532278060913086

Token 106: ' nombre' (ID: 9733)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22597089409828186
    2. ' while' → logprob: -1.6009708642959595
    3. '       ' → logprob: -8.475971221923828
    4. '   ' → logprob: -8.850971221923828
    5. 'While' → logprob: -9.475971221923828
    6. 'if' → logprob: -10.225971221923828
    7. '    ' → logprob: -10.975971221923828
    8. ' While' → logprob: -11.475971221923828
    9. '	while' → logprob: -11.475971221923828
    10. '#' → logprob: -11.600971221923828

Token 107: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.27238929271698
    2. '_con' → logprob: -1.89738929271698
    3. ' =' → logprob: -2.1473894119262695
    4. '_of' → logprob: -3.0223894119262695
    5. '_cards' → logprob: -3.0223894119262695
    6. '_diff' → logprob: -3.1473894119262695
    7. '_tokens' → logprob: -3.2723894119262695
    8. '=' → logprob: -3.3973894119262695
    9. '_missing' → logprob: -3.5223894119262695
    10. '_max' → logprob: -3.8973894119262695

Token 108: ' nombres' (ID: 76205)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.8614493608474731
    2. 'cards' → logprob: -1.6114493608474731
    3. 'elements' → logprob: -1.7364493608474731
    4. 'missing' → logprob: -2.8614492416381836
    5. 'zeros' → logprob: -2.9864492416381836
    6. '0' → logprob: -4.236449241638184
    7. 'numbers' → logprob: -5.236449241638184
    8. 'man' → logprob: -5.486449241638184
    9. 'd' → logprob: -5.486449241638184
    10. 'cart' → logprob: -5.611449241638184

Token 109: ' man' (ID: 873)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.7738843560218811
    2. ' cons' → logprob: -2.0238842964172363
    3. 'diff' → logprob: -2.5238842964172363
    4. 'dans' → logprob: -2.8988842964172363
    5. 'entre' → logprob: -3.0238842964172363
    6. ' entre' → logprob: -3.3988842964172363
    7. 'distinct' → logprob: -3.3988842964172363
    8. 'between' → logprob: -3.5238842964172363
    9. 'contin' → logprob: -3.8988842964172363
    10. 'cons' → logprob: -4.023884296417236

Token 110: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.009085088036954403
    2. 'qués' → logprob: -5.134085178375244
    3. 'quant' → logprob: -6.259085178375244
    4. 'q' → logprob: -7.759085178375244
    5. 'ques' → logprob: -8.134084701538086
    6. 'que' → logprob: -8.759084701538086
    7. 'quent' → logprob: -9.009084701538086
    8. 'nants' → logprob: -9.509084701538086
    9. 'quer' → logprob: -10.259084701538086
    10. 'quait' → logprob: -10.759084701538086

Token 111: 'ants' (ID: 2027)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.1937641203403473
    2. 's' → logprob: -2.6937642097473145
    3. 'ts' → logprob: -3.0687642097473145
    4. 'ants' → logprob: -3.3187642097473145
    5. 'es' → logprob: -4.1937642097473145
    6. 'ant' → logprob: -5.1937642097473145
    7. 't' → logprob: -5.6937642097473145
    8. 'ats' → logprob: -7.5687642097473145
    9. 'é' → logprob: -7.8187642097473145
    10. 'ents' → logprob: -8.943763732910156

Token 112: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10736055672168732
    2. '       ' → logprob: -2.857360601425171
    3. '=' → logprob: -3.232360601425171
    4. '        ' → logprob: -5.482360363006592
    5. 's' → logprob: -8.73236083984375
    6. ':' → logprob: -8.85736083984375
    7. ' between' → logprob: -9.23236083984375
    8. 'between' → logprob: -9.48236083984375
    9. ' +=' → logprob: -9.60736083984375
    10. ',' → logprob: -10.48236083984375

Token 113: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.007619995623826981
    2. ' arr' → logprob: -4.882619857788086
    3. '   ' → logprob: -11.507619857788086
    4. '	arr' → logprob: -12.882619857788086
    5. 'left' → logprob: -14.132619857788086
    6. 'right' → logprob: -15.757619857788086
    7. '(arr' → logprob: -16.507619857788086
    8. '       ' → logprob: -16.757619857788086
    9. '$arr' → logprob: -17.132619857788086
    10. '[arr' → logprob: -17.132619857788086

Token 114: '[left' (ID: 98859)
  Prédit: '[right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.02329835295677185
    2. '[left' → logprob: -3.7732982635498047
    3. 'right' → logprob: -10.273298263549805
    4. '[' → logprob: -11.898298263549805
    5. '   ' → logprob: -12.648298263549805
    6. ']' → logprob: -13.398298263549805
    7. 'left' → logprob: -13.648298263549805
    8. ',right' → logprob: -14.023298263549805
    9. ' [' → logprob: -14.398298263549805
    10. '```' → logprob: -14.398298263549805

Token 115: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5775536894798279
    2. '[right' → logprob: -0.8275536894798279
    3. '[left' → logprob: -7.827553749084473
    4. ']+' → logprob: -7.952553749084473
    5. 'right' → logprob: -8.077553749084473
    6. '],' → logprob: -8.577553749084473
    7. '[' → logprob: -9.202553749084473
    8. ' ]' → logprob: -9.202553749084473
    9. ' and' → logprob: -10.327553749084473
    10. 'and' → logprob: -10.702553749084473

Token 116: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3551236391067505
    2. 'and' → logprob: -1.2301236391067505
    3. '+' → logprob: -5.730123519897461
    4. ' ' → logprob: -6.980123519897461
    5. '   ' → logprob: -6.980123519897461
    6. ',' → logprob: -7.730123519897461
    7. '[' → logprob: -7.855123519897461
    8. ' +' → logprob: -8.105123519897461
    9. ' и' → logprob: -8.480123519897461
    10. ' et' → logprob: -9.605123519897461

Token 117: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1002923920750618
    2. ' arr' → logprob: -2.350292444229126
    3. '   ' → logprob: -10.100292205810547
    4. '       ' → logprob: -11.350292205810547
    5. '	arr' → logprob: -11.600292205810547
    6. ' ' → logprob: -11.725292205810547
    7. '    ' → logprob: -12.225292205810547
    8. '  ' → logprob: -13.350292205810547
    9. '           ' → logprob: -13.350292205810547
    10. '        ' → logprob: -13.850292205810547

Token 118: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -1.4974866644479334e-05
    2. 'right' → logprob: -11.500015258789062
    3. '[' → logprob: -13.375015258789062
    4. '   ' → logprob: -13.750015258789062
    5. ' ' → logprob: -14.750015258789062
    6. '[
' → logprob: -14.875015258789062
    7. '
' → logprob: -15.625015258789062
    8. ']' → logprob: -15.750015258789062
    9. ' [' → logprob: -15.750015258789062
    10. '[left' → logprob: -15.875015258789062

Token 119: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5255173444747925
    2. ')' → logprob: -1.5255173444747925
    3. '       ' → logprob: -2.400517463684082
    4. ' )' → logprob: -4.400517463684082
    5. '   ' → logprob: -4.400517463684082
    6. '        ' → logprob: -4.525517463684082
    7. ' ]' → logprob: -4.525517463684082
    8. ':' → logprob: -5.025517463684082
    9. ']+' → logprob: -5.025517463684082
    10. '+' → logprob: -5.150517463684082

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016257112845778465
    2. ' =' → logprob: -4.266257286071777
    3. '        ' → logprob: -7.016257286071777
    4. '=' → logprob: -8.266257286071777
    5. ' +' → logprob: -8.516257286071777
    6. '+' → logprob: -8.516257286071777
    7. ':' → logprob: -8.641257286071777
    8. ' missing' → logprob: -9.266257286071777
    9. ',' → logprob: -9.516257286071777
    10. 'missing' → logprob: -9.766257286071777

Token 121: ' need' (ID: 1309)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9525727033615112
    2. 'missing' → logprob: -1.0775727033615112
    3. ' missing' → logprob: -1.4525727033615112
    4. 'gap' → logprob: -4.827572822570801
    5. ' while' → logprob: -5.077572822570801
    6. ' gaps' → logprob: -5.202572822570801
    7. 'while' → logprob: -5.452572822570801
    8. '   ' → logprob: -5.577572822570801
    9. ' gap' → logprob: -5.702572822570801
    10. '        ' → logprob: -5.952572822570801

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895877003669739
    2. '=' → logprob: -2.463958740234375
    3. '_' → logprob: -12.338958740234375
    4. 's' → logprob: -12.588958740234375
    5. ' ' → logprob: -12.963958740234375
    6. 'd' → logprob: -13.088958740234375
    7. '  ' → logprob: -13.588958740234375
    8. 'ed' → logprob: -14.088958740234375
    9. '   ' → logprob: -14.338958740234375
    10. '_count' → logprob: -14.463958740234375

Token 123: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0038250144571065903
    2. ' arr' → logprob: -5.6288251876831055
    3. '(arr' → logprob: -8.503825187683105
    4. '   ' → logprob: -11.253825187683105
    5. '	arr' → logprob: -11.753825187683105
    6. '[arr' → logprob: -14.378825187683105
    7. ' (' → logprob: -15.128825187683105
    8. '(' → logprob: -16.25382423400879
    9. '       ' → logprob: -16.25382423400879
    10. '
' → logprob: -16.37882423400879

Token 124: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -7.896309739408025e-07
    2. 'right' → logprob: -14.375000953674316
    3. '[' → logprob: -16.625
    4. '
' → logprob: -18.0
    5. ':right' → logprob: -18.0
    6. '[left' → logprob: -18.0
    7. '\[' → logprob: -18.0
    8. '	right' → logprob: -18.5
    9. '[
' → logprob: -18.5
    10. '```' → logprob: -19.0

Token 125: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010103991371579468
    2. ']-' → logprob: -9.625101089477539
    3. '-' → logprob: -10.875101089477539
    4. '[' → logprob: -11.875101089477539
    5. ' ]' → logprob: -12.500101089477539
    6. ' -' → logprob: -12.500101089477539
    7. '   ' → logprob: -14.500101089477539
    8. '[]' → logprob: -15.500101089477539
    9. '']' → logprob: -16.25010108947754
    10. '```' → logprob: -16.25010108947754

Token 126: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740801155567169
    2. '-' → logprob: -0.9740800857543945
    3. '   ' → logprob: -13.849080085754395
    4. ' ' → logprob: -14.099080085754395
    5. '-arr' → logprob: -14.474080085754395
    6. '```' → logprob: -15.099080085754395
    7. '-
' → logprob: -15.474080085754395
    8. '  ' → logprob: -15.599080085754395
    9. ' ' → logprob: -16.72408103942871
    10. ',' → logprob: -17.34908103942871

Token 127: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0619952529668808
    2. ' arr' → logprob: -2.811995267868042
    3. '	arr' → logprob: -11.311995506286621
    4. '(arr' → logprob: -12.186995506286621
    5. '   ' → logprob: -12.436995506286621
    6. ' ' → logprob: -13.436995506286621
    7. '_arr' → logprob: -13.686995506286621
    8. '$arr' → logprob: -14.311995506286621
    9. '[arr' → logprob: -14.436995506286621
    10. '  ' → logprob: -14.436995506286621

Token 128: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -6.980854959692806e-05
    2. 'left' → logprob: -9.625069618225098
    3. '[right' → logprob: -13.125069618225098
    4. '[' → logprob: -13.500069618225098
    5. ' left' → logprob: -15.250069618225098
    6. '[arr' → logprob: -17.375070571899414
    7. ',left' → logprob: -17.875070571899414
    8. '	left' → logprob: -18.125070571899414
    9. 'arr' → logprob: -18.250070571899414
    10. ' [' → logprob: -18.250070571899414

Token 129: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012483633123338223
    2. '+' → logprob: -4.887483596801758
    3. ' -' → logprob: -6.262483596801758
    4. ')' → logprob: -6.637483596801758
    5. '-' → logprob: -7.262483596801758
    6. ' +' → logprob: -8.262483596801758
    7. ' ]' → logprob: -8.387483596801758
    8. '[right' → logprob: -8.387483596801758
    9. ']+' → logprob: -9.512483596801758
    10. '])' → logprob: -10.137483596801758

Token 130: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.243403822183609
    2. '+' → logprob: -2.243403911590576
    3. '-' → logprob: -2.368403911590576
    4. ' +' → logprob: -4.118403911590576
    5. '-right' → logprob: -10.618403434753418
    6. ' ' → logprob: -11.118403434753418
    7. '-(' → logprob: -12.993403434753418
    8. ' right' → logprob: -13.368403434753418
    9. ' ' → logprob: -13.618403434753418
    10. 'right' → logprob: -14.243403434753418

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009162207134068012
    2. ' ' → logprob: -7.000916004180908
    3. '   ' → logprob: -13.500916481018066
    4. ' -' → logprob: -13.500916481018066
    5. '-' → logprob: -14.125916481018066
    6. '```' → logprob: -14.250916481018066
    7. '           ' → logprob: -15.625916481018066
    8. '       ' → logprob: -16.75091552734375
    9. '  ' → logprob: -17.12591552734375
    10. '<|end|>' → logprob: -17.12591552734375

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012582694762386382
    2. ' ' → logprob: -9.000125885009766
    3. '-' → logprob: -13.875125885009766
    4. ' -' → logprob: -14.375125885009766
    5. '   ' → logprob: -14.625125885009766
    6. '```' → logprob: -15.250125885009766
    7. 'right' → logprob: -16.750125885009766
    8. '
' → logprob: -17.500125885009766
    9. '<|end|>' → logprob: -18.000125885009766
    10. 'len' → logprob: -18.000125885009766

Token 133: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03872958570718765
    2. '-' → logprob: -3.288729667663574
    3. '       ' → logprob: -7.538729667663574
    4. '   ' → logprob: -10.038729667663574
    5. '
' → logprob: -10.413729667663574
    6. '<|end|>' → logprob: -10.413729667663574
    7. ' ' → logprob: -10.663729667663574
    8. '        ' → logprob: -12.538729667663574
    9. '  ' → logprob: -12.788729667663574
    10. '    ' → logprob: -12.788729667663574

Token 134: ' (' (ID: 350)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.11767634004354477
    2. ' (' → logprob: -2.242676258087158
    3. '(len' → logprob: -5.367676258087158
    4. 'len' → logprob: -10.242676734924316
    5. '[right' → logprob: -10.242676734924316
    6. 'right' → logprob: -10.492676734924316
    7. '   ' → logprob: -10.492676734924316
    8. '(arr' → logprob: -11.367676734924316
    9. ' ' → logprob: -11.867676734924316
    10. '(' → logprob: -12.367676734924316

Token 135: 'right' (ID: 2460)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.13831482827663422
    2. ' (' → logprob: -2.638314723968506
    3. 'right' → logprob: -2.888314723968506
    4. ' right' → logprob: -7.013314723968506
    5. '[right' → logprob: -7.388314723968506
    6. '   ' → logprob: -8.763315200805664
    7. 'len' → logprob: -9.013315200805664
    8. '(len' → logprob: -9.388315200805664
    9. ' ' → logprob: -10.138315200805664
    10. '	right' → logprob: -11.138315200805664

Token 136: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7666072249412537
    2. ' +' → logprob: -1.0166072845458984
    3. ' -' → logprob: -1.8916072845458984
    4. '-' → logprob: -4.141607284545898
    5. '-left' → logprob: -5.641607284545898
    6. '<|end|>' → logprob: -6.391607284545898
    7. ' ' → logprob: -7.266607284545898
    8. ')' → logprob: -7.516607284545898
    9. '[left' → logprob: -8.891607284545898
    10. '   ' → logprob: -9.141607284545898

Token 137: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00523612555116415
    2. ' left' → logprob: -5.2552361488342285
    3. '[left' → logprob: -13.50523567199707
    4. ' ' → logprob: -14.75523567199707
    5. '	left' → logprob: -14.88023567199707
    6. '   ' → logprob: -15.88023567199707
    7. '(left' → logprob: -17.38023567199707
    8. '  ' → logprob: -17.50523567199707
    9. ':left' → logprob: -18.00523567199707
    10. '    ' → logprob: -18.38023567199707

Token 138: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931578516960144
    2. ' +' → logprob: -0.6931578516960144
    3. '   ' → logprob: -12.568158149719238
    4. ')' → logprob: -12.943158149719238
    5. ' ' → logprob: -13.318158149719238
    6. '1' → logprob: -13.443158149719238
    7. ' +
' → logprob: -14.943158149719238
    8. '```' → logprob: -14.943158149719238
    9. '+
' → logprob: -16.068157196044922
    10. '[' → logprob: -16.068157196044922

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011076712980866432
    2. ' ' → logprob: -4.511076927185059
    3. ')' → logprob: -10.636076927185059
    4. '   ' → logprob: -13.011076927185059
    5. '```' → logprob: -13.386076927185059
    6. 'len' → logprob: -15.386076927185059
    7. '  ' → logprob: -15.886076927185059
    8. ' )' → logprob: -16.136075973510742
    9. '0' → logprob: -16.636075973510742
    10. ' ' → logprob: -17.136075973510742

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00042745075188577175
    2. ' ' → logprob: -8.00042724609375
    3. ')' → logprob: -9.62542724609375
    4. 'len' → logprob: -11.87542724609375
    5. '```' → logprob: -11.87542724609375
    6. '0' → logprob: -12.75042724609375
    7. 'arr' → logprob: -12.87542724609375
    8. '   ' → logprob: -13.25042724609375
    9. 'cards' → logprob: -13.25042724609375
    10. 'tokens' → logprob: -14.50042724609375

Token 141: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025927266106009483
    2. ' )' → logprob: -4.5259270668029785
    3. ' +' → logprob: -4.7759270668029785
    4. '   ' → logprob: -5.9009270668029785
    5. ')
' → logprob: -6.2759270668029785
    6. ' -' → logprob: -7.2759270668029785
    7. '+' → logprob: -7.2759270668029785
    8. ' ' → logprob: -9.525927543640137
    9. ' )
' → logprob: -9.650927543640137
    10. '<|end|>' → logprob: -9.900927543640137

Token 142: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.01972496509552
    2. '       ' → logprob: -1.14472496509552
    3. '
' → logprob: -1.76972496509552
    4. ' if' → logprob: -2.8947248458862305
    5. ' while' → logprob: -3.1447248458862305
    6. '<|end|>' → logprob: -3.6447248458862305
    7. 'while' → logprob: -4.7697248458862305
    8. '        
' → logprob: -5.1447248458862305
    9. 'if' → logprob: -5.5197248458862305
    10. '    
' → logprob: -6.0197248458862305

Token 143: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2809481918811798
    2. ' while' → logprob: -1.5309481620788574
    3. '   ' → logprob: -3.6559481620788574
    4. 'if' → logprob: -6.780948162078857
    5. ' if' → logprob: -7.780948162078857
    6. '	while' → logprob: -7.905948162078857
    7. '
' → logprob: -8.280948638916016
    8. '<|end|>' → logprob: -8.655948638916016
    9. '       ' → logprob: -9.155948638916016
    10. '+' → logprob: -9.405948638916016

Token 144: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.07891886681318283
    2. ' need' → logprob: -2.578918933868408
    3. 'blank' → logprob: -11.20391845703125
    4. ' blank' → logprob: -11.82891845703125
    5. '(blank' → logprob: -12.57891845703125
    6. 'left' → logprob: -13.57891845703125
    7. '   ' → logprob: -13.70391845703125
    8. '(' → logprob: -13.70391845703125
    9. ' left' → logprob: -15.20391845703125
    10. ' ' → logprob: -15.70391845703125

Token 145: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06208106875419617
    2. '>' → logprob: -2.8120810985565186
    3. ' ' → logprob: -9.187081336975098
    4. ' ' → logprob: -12.437081336975098
    5. '   ' → logprob: -13.062081336975098
    6. '  ' → logprob: -14.187081336975098
    7. ' +' → logprob: -14.437081336975098
    8. ' >
' → logprob: -14.437081336975098
    9. ' >

' → logprob: -15.062081336975098
    10. '+' → logprob: -15.187081336975098

Token 146: ' blank' (ID: 16953)
  Prédit: 'blank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blank' → logprob: -0.012609012424945831
    2. ' blank' → logprob: -4.387609004974365
    3. '(blank' → logprob: -9.262609481811523
    4. '_blank' → logprob: -13.387609481811523
    5. '   ' → logprob: -13.512609481811523
    6. ' ' → logprob: -15.387609481811523
    7. '.blank' → logprob: -15.387609481811523
    8. 'bl' → logprob: -15.637609481811523
    9. '
' → logprob: -15.637609481811523
    10. 'blind' → logprob: -15.762609481811523

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16562744975090027
    2. ':
' → logprob: -2.1656274795532227
    3. ' and' → logprob: -3.4156274795532227
    4. '   ' → logprob: -5.665627479553223
    5. 'and' → logprob: -7.540627479553223
    6. '       ' → logprob: -7.665627479553223
    7. ' :' → logprob: -8.415627479553223
    8. ' :
' → logprob: -8.415627479553223
    9. ' or' → logprob: -9.290627479553223
    10. '):
' → logprob: -10.540627479553223

Token 148: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021137436851859093
    2. ' left' → logprob: -4.396137237548828
    3. '           ' → logprob: -5.021137237548828
    4. 'left' → logprob: -6.646137237548828
    5. '   ' → logprob: -7.896137237548828
    6. '```' → logprob: -9.146137237548828
    7. '        
' → logprob: -9.896137237548828
    8. '
' → logprob: -10.021137237548828
    9. '[left' → logprob: -10.021137237548828
    10. ',left' → logprob: -11.021137237548828

Token 149: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.010027104057371616
    2. '       ' → logprob: -5.510026931762695
    3. ' left' → logprob: -5.885026931762695
    4. '   ' → logprob: -5.885026931762695
    5. '           ' → logprob: -8.135026931762695
    6. '	left' → logprob: -9.635026931762695
    7. '[left' → logprob: -12.635026931762695
    8. ',left' → logprob: -13.010026931762695
    9. '
' → logprob: -13.135026931762695
    10. ' ' → logprob: -14.385026931762695

Token 150: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4741942286491394
    2. ' +=' → logprob: -0.9741942286491394
    3. ']+=' → logprob: -9.349194526672363
    4. '```' → logprob: -11.599194526672363
    5. '+' → logprob: -11.724194526672363
    6. ' ' → logprob: -12.349194526672363
    7. '   ' → logprob: -13.349194526672363
    8. '    ' → logprob: -13.724194526672363
    9. ' +' → logprob: -13.974194526672363
    10. '[' → logprob: -13.974194526672363

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -19.375
    5. '           ' → logprob: -21.625
    6. '       ' → logprob: -21.875
    7. '0' → logprob: -23.0
    8. '１' → logprob: -23.0
    9. '<|end|>' → logprob: -23.0
    10. '۱' → logprob: -23.375

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -18.0
    4. '   ' → logprob: -20.875
    5. '１' → logprob: -22.5
    6. '
' → logprob: -22.5
    7. '۱' → logprob: -22.875
    8. '``' → logprob: -22.875
    9. '0' → logprob: -23.125
    10. '१' → logprob: -23.3125

Token 153: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14977967739105225
    2. '       ' → logprob: -2.024779796600342
    3. '
' → logprob: -5.024779796600342
    4. '```' → logprob: -8.649779319763184
    5. '   ' → logprob: -9.524779319763184
    6. '        
' → logprob: -9.649779319763184
    7. 'need' → logprob: -9.774779319763184
    8. '               ' → logprob: -10.274779319763184
    9. '            
' → logprob: -10.524779319763184
    10. ',' → logprob: -11.149779319763184

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2641385793685913
    2. '       ' → logprob: -1.5141385793685913
    3. '
' → logprob: -4.514138698577881
    4. 'need' → logprob: -7.389138698577881
    5. '   ' → logprob: -8.264138221740723
    6. '```' → logprob: -9.264138221740723
    7. '        
' → logprob: -9.389138221740723
    8. '               ' → logprob: -10.389138221740723
    9. '            
' → logprob: -10.764138221740723
    10. ' need' → logprob: -11.389138221740723

Token 155: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' (adapté à ' need') → logprob: -0.0024550841189920902
    2. '       ' → logprob: -6.752455234527588
    3. '           ' → logprob: -6.877455234527588
    4. '   ' → logprob: -8.87745475769043
    5. ' need' → logprob: -9.50245475769043
    6. '
' → logprob: -10.75245475769043
    7. '#' → logprob: -11.62745475769043
    8. 'needs' → logprob: -13.12745475769043
    9. ' ' → logprob: -13.25245475769043
    10. '     ' → logprob: -13.62745475769043

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889077812433243
    2. '=' → logprob: -2.578890800476074
    3. ' -=' → logprob: -14.328890800476074
    4. '-=' → logprob: -15.453890800476074
    5. ' ' → logprob: -15.828890800476074
    6. '＝' → logprob: -18.828889846801758
    7. '```' → logprob: -19.078889846801758
    8. '-' → logprob: -19.203889846801758
    9. ' ' → logprob: -19.328889846801758
    10. ' +=' → logprob: -19.328889846801758

Token 157: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.31326353549957275
    2. ' arr' → logprob: -1.3132635354995728
    3. '(arr' → logprob: -14.188263893127441
    4. '	arr' → logprob: -14.313263893127441
    5. '   ' → logprob: -15.063263893127441
    6. ' ' → logprob: -16.438262939453125
    7. '[arr' → logprob: -16.688262939453125
    8. '$arr' → logprob: -17.813262939453125
    9. '<arr' → logprob: -17.813262939453125
    10. '           ' → logprob: -17.938262939453125

Token 158: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -2.8325677703833207e-05
    2. 'right' → logprob: -10.500028610229492
    3. '[left' → logprob: -15.250028610229492
    4. '[' → logprob: -15.375028610229492
    5. '```' → logprob: -16.125028610229492
    6. '[
' → logprob: -16.875028610229492
    7. ':right' → logprob: -17.000028610229492
    8. '	right' → logprob: -17.375028610229492
    9. ',right' → logprob: -17.750028610229492
    10. '
' → logprob: -18.000028610229492

Token 159: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005166939808987081
    2. '-' → logprob: -7.750516891479492
    3. ']-' → logprob: -9.500516891479492
    4. ' -' → logprob: -12.000516891479492
    5. ' ]' → logprob: -12.625516891479492
    6. '[' → logprob: -14.875516891479492
    7. '   ' → logprob: -15.000516891479492
    8. '']' → logprob: -15.125516891479492
    9. '"]' → logprob: -15.750516891479492
    10. '```' → logprob: -15.875516891479492

Token 160: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1269298940896988
    2. ' -' → logprob: -2.126929998397827
    3. ' ' → logprob: -14.001930236816406
    4. '```' → logprob: -14.751930236816406
    5. '-arr' → logprob: -16.251930236816406
    6. '   ' → logprob: -16.251930236816406
    7. '-
' → logprob: -16.501930236816406
    8. '-left' → logprob: -16.751930236816406
    9. ' ' → logprob: -17.001930236816406
    10. '[' → logprob: -17.126930236816406

Token 161: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0004311460361350328
    2. ' arr' → logprob: -7.750431060791016
    3. 'cards' → logprob: -15.125431060791016
    4. '	arr' → logprob: -17.000431060791016
    5. '(arr' → logprob: -17.000431060791016
    6. '[arr' → logprob: -17.500431060791016
    7. '   ' → logprob: -19.000431060791016
    8. '$arr' → logprob: -19.500431060791016
    9. '           ' → logprob: -19.750431060791016
    10. '_arr' → logprob: -20.125431060791016

Token 162: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -2.935296834039036e-06
    2. 'left' → logprob: -12.75000286102295
    3. '[' → logprob: -18.625003814697266
    4. '[right' → logprob: -18.875003814697266
    5. 'eft' → logprob: -19.875003814697266
    6. '```' → logprob: -20.625003814697266
    7. ' left' → logprob: -21.000003814697266
    8. ',left' → logprob: -21.250003814697266
    9. '(left' → logprob: -21.375003814697266
    10. '	left' → logprob: -21.375003814697266

Token 163: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.037765104323625565
    2. '+' → logprob: -3.6627650260925293
    3. ' +' → logprob: -4.912765026092529
    4. ']+' → logprob: -5.537765026092529
    5. ' ]' → logprob: -9.287765502929688
    6. ')' → logprob: -12.037765502929688
    7. ' ' → logprob: -12.662765502929688
    8. '```' → logprob: -12.662765502929688
    9. '   ' → logprob: -13.537765502929688
    10. '+]' → logprob: -13.662765502929688

Token 164: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048654019832611084
    2. ' +' → logprob: -3.048654079437256
    3. '1' → logprob: -9.673653602600098
    4. ' ' → logprob: -13.423653602600098
    5. '```' → logprob: -13.673653602600098
    6. '()+' → logprob: -15.548653602600098
    7. '[' → logprob: -15.798653602600098
    8. '   ' → logprob: -15.923653602600098
    9. '0' → logprob: -16.048654556274414
    10. ' ' → logprob: -16.423654556274414

Token 165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048408225178719
    2. ' ' → logprob: -4.511048316955566
    3. '```' → logprob: -14.761048316955566
    4. '   ' → logprob: -15.511048316955566
    5. '  ' → logprob: -17.386049270629883
    6. ' ' → logprob: -18.636049270629883
    7. '    ' → logprob: -19.823549270629883
    8. '           ' → logprob: -19.823549270629883
    9. '<|end|>' → logprob: -19.948549270629883
    10. '       ' → logprob: -20.011049270629883

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001093841710826382
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.500109672546387
    4. '```' → logprob: -16.50010871887207
    5. '  ' → logprob: -18.06260871887207
    6. '           ' → logprob: -18.43760871887207
    7. '...' → logprob: -18.93760871887207
    8. '۱' → logprob: -19.18760871887207
    9. '    ' → logprob: -19.56260871887207
    10. '       ' → logprob: -19.56260871887207

Token 167: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1009497418999672
    2. ' -' → logprob: -2.350949764251709
    3. '           ' → logprob: -7.350949764251709
    4. '-(' → logprob: -9.60094928741455
    5. '   ' → logprob: -10.85094928741455
    6. '          ' → logprob: -12.22594928741455
    7. '            ' → logprob: -13.10094928741455
    8. ' -(' → logprob: -13.22594928741455
    9. ' ' → logprob: -13.72594928741455
    10. '  ' → logprob: -14.22594928741455

Token 168: ' (' (ID: 350)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.0019532525911927223
    2. ' (' → logprob: -6.251953125
    3. '[right' → logprob: -10.751953125
    4. '   ' → logprob: -13.001953125
    5. 'right' → logprob: -14.376953125
    6. '(root' → logprob: -16.376953125
    7. '(' → logprob: -16.876953125
    8. ' ' → logprob: -17.001953125
    9. '(next' → logprob: -17.001953125
    10. '
' → logprob: -17.251953125

Token 169: 'right' (ID: 2460)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.005414111539721489
    2. 'right' → logprob: -5.255414009094238
    3. '[right' → logprob: -9.255414009094238
    4. ' (' → logprob: -9.630414009094238
    5. ' right' → logprob: -11.380414009094238
    6. '   ' → logprob: -12.255414009094238
    7. ':right' → logprob: -14.005414009094238
    8. ',right' → logprob: -14.130414009094238
    9. '	right' → logprob: -14.505414009094238
    10. '
' → logprob: -15.630414009094238

Token 170: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15869848430156708
    2. ' +' → logprob: -2.658698558807373
    3. '[left' → logprob: -3.658698558807373
    4. '[right' → logprob: -3.908698558807373
    5. '-' → logprob: -4.158698558807373
    6. ')' → logprob: -5.033698558807373
    7. ')+' → logprob: -5.783698558807373
    8. ']+' → logprob: -6.533698558807373
    9. ' -' → logprob: -6.658698558807373
    10. ']' → logprob: -6.908698558807373

Token 171: ' left' (ID: 3561)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7133641196996905e-05
    2. ' ' → logprob: -10.62502670288086
    3. '+' → logprob: -13.87502670288086
    4. '(' → logprob: -14.37502670288086
    5. ')' → logprob: -14.37502670288086
    6. 'left' → logprob: -15.25002670288086
    7. 'right' → logprob: -15.37502670288086
    8. '```' → logprob: -16.62502670288086
    9. '   ' → logprob: -16.87502670288086
    10. ' (' → logprob: -17.00002670288086

Token 172: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007621183525770903
    2. ' +' → logprob: -4.8826212882995605
    3. '1' → logprob: -11.257620811462402
    4. ' ' → logprob: -14.257620811462402
    5. ')' → logprob: -14.382620811462402
    6. '```' → logprob: -14.507620811462402
    7. '   ' → logprob: -15.507620811462402
    8. '+)' → logprob: -16.25762176513672
    9. '[' → logprob: -16.88262176513672
    10. ')+' → logprob: -17.63262176513672

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. ')' → logprob: -14.875041007995605
    4. '```' → logprob: -15.375041007995605
    5. '   ' → logprob: -16.50004005432129
    6. '  ' → logprob: -18.87504005432129
    7. '2' → logprob: -19.43754005432129
    8. '``' → logprob: -19.87504005432129
    9. ' )' → logprob: -20.00004005432129
    10. '+' → logprob: -20.06254005432129

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -14.875006675720215
    4. '```' → logprob: -15.000006675720215
    5. '   ' → logprob: -15.875006675720215
    6. '+' → logprob: -18.00000762939453
    7. '``' → logprob: -18.25000762939453
    8. '2' → logprob: -18.62500762939453
    9. '`' → logprob: -18.62500762939453
    10. '１' → logprob: -18.62500762939453

Token 175: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017278951418120414
    2. '<|end|>' → logprob: -9.00017261505127
    3. ')
' → logprob: -10.25017261505127
    4. '       ' → logprob: -12.25017261505127
    5. ' )' → logprob: -13.00017261505127
    6. ']' → logprob: -13.12517261505127
    7. '```' → logprob: -13.12517261505127
    8. '<|end|>' → logprob: -14.25017261505127
    9. '}' → logprob: -14.37517261505127
    10. '   ' → logprob: -15.12517261505127

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09481596946716309
    2. '   ' → logprob: -2.719815969467163
    3. '
' → logprob: -3.969815969467163
    4. 'max' → logprob: -5.219816207885742
    5. '```' → logprob: -8.469816207885742
    6. 'right' → logprob: -10.719816207885742
    7. ' max' → logprob: -11.219816207885742
    8. '        
' → logprob: -11.719816207885742
    9. '           ' → logprob: -12.094816207885742
    10. 'if' → logprob: -12.219816207885742

Token 177: ' cur' (ID: 4396)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0028300806879997253
    2. '   ' → logprob: -6.0028300285339355
    3. ' max' → logprob: -8.752830505371094
    4. '       ' → logprob: -8.752830505371094
    5. '
' → logprob: -10.752830505371094
    6. 'if' → logprob: -11.627830505371094
    7. '	max' → logprob: -13.002830505371094
    8. '```' → logprob: -13.377830505371094
    9. 'maxlength' → logprob: -13.752830505371094
    10. ',max' → logprob: -14.002830505371094

Token 178: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.333223139634356e-05
    2. '_max' → logprob: -10.375033378601074
    3. '_' → logprob: -14.125033378601074
    4. 'len' → logprob: -14.500033378601074
    5. '_length' → logprob: -14.875033378601074
    6. '_l' → logprob: -16.000032424926758
    7. 'max' → logprob: -16.000032424926758
    8. 'ent' → logprob: -16.750032424926758
    9. 'Len' → logprob: -16.750032424926758
    10. 'r' → logprob: -17.625032424926758

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22543078660964966
    2. '=' → logprob: -1.6004307270050049
    3. ' ' → logprob: -12.100430488586426
    4. '=max' → logprob: -12.100430488586426
    5. '  ' → logprob: -13.725430488586426
    6. '   ' → logprob: -13.725430488586426
    7. '	' → logprob: -13.725430488586426
    8. 'max' → logprob: -13.975430488586426
    9. ' ' → logprob: -14.725430488586426
    10. '>' → logprob: -15.225430488586426

Token 180: ' (' (ID: 350)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.23542249202728271
    2. 'right' → logprob: -1.6104224920272827
    3. '(right' → logprob: -4.985422611236572
    4. ' arr' → logprob: -6.735422611236572
    5. 'blank' → logprob: -7.110422611236572
    6. ' right' → logprob: -7.735422611236572
    7. '(arr' → logprob: -8.235422134399414
    8. '(blank' → logprob: -9.110422134399414
    9. ' (' → logprob: -9.235422134399414
    10. '   ' → logprob: -9.360422134399414

Token 181: 'right' (ID: 2460)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.11987875401973724
    2. 'right' → logprob: -2.2448787689208984
    3. ' arr' → logprob: -5.744878768920898
    4. 'blank' → logprob: -5.869878768920898
    5. '   ' → logprob: -8.119878768920898
    6. ' right' → logprob: -8.244878768920898
    7. ' blank' → logprob: -8.744878768920898
    8. 'cards' → logprob: -9.494878768920898
    9. '    ' → logprob: -9.619878768920898
    10. '
' → logprob: -9.994878768920898

Token 182: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10033801198005676
    2. '-' → logprob: -2.3503379821777344
    3. ')' → logprob: -8.975337982177734
    4. ' ' → logprob: -13.475337982177734
    5. '   ' → logprob: -13.600337982177734
    6. '-left' → logprob: -14.225337982177734
    7. ']' → logprob: -14.475337982177734
    8. '	' → logprob: -15.225337982177734
    9. ')-' → logprob: -15.225337982177734
    10. ',' → logprob: -15.850337982177734

Token 183: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0040793512016534805
    2. ' left' → logprob: -5.504079341888428
    3. '   ' → logprob: -15.004079818725586
    4. '	left' → logprob: -15.129079818725586
    5. '[left' → logprob: -15.504079818725586
    6. ' ' → logprob: -16.504079818725586
    7. '       ' → logprob: -17.629079818725586
    8. '    ' → logprob: -17.754079818725586
    9. '  ' → logprob: -18.129079818725586
    10. ',left' → logprob: -18.379079818725586

Token 184: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47481444478034973
    2. ' +' → logprob: -0.9748144149780273
    3. ')' → logprob: -7.224814414978027
    4. ')+' → logprob: -12.099814414978027
    5. '   ' → logprob: -13.599814414978027
    6. '+)' → logprob: -14.474814414978027
    7. ' )' → logprob: -14.599814414978027
    8. ' ' → logprob: -15.224814414978027
    9. '```' → logprob: -15.849814414978027
    10. ' +
' → logprob: -16.099815368652344

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023333763238042593
    2. ' ' → logprob: -8.37523365020752
    3. ')' → logprob: -13.37523365020752
    4. '   ' → logprob: -14.12523365020752
    5. '```' → logprob: -15.00023365020752
    6. '+' → logprob: -17.375232696533203
    7. '  ' → logprob: -17.687732696533203
    8. '       ' → logprob: -18.125232696533203
    9. ' ' → logprob: -18.250232696533203
    10. '`' → logprob: -18.312732696533203

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.625011444091797
    3. ')' → logprob: -13.500011444091797
    4. '```' → logprob: -15.500011444091797
    5. '   ' → logprob: -16.000011444091797
    6. 'length' → logprob: -16.375011444091797
    7. 'len' → logprob: -16.812511444091797
    8. 'blank' → logprob: -18.375011444091797
    9. '１' → logprob: -18.562511444091797
    10. '+' → logprob: -18.625011444091797

Token 187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06833682209253311
    2. '+' → logprob: -3.4433367252349854
    3. ' +' → logprob: -3.4433367252349854
    4. ')+' → logprob: -6.1933369636535645
    5. ' )' → logprob: -9.943336486816406
    6. '   ' → logprob: -10.443336486816406
    7. '+)' → logprob: -12.693336486816406
    8. '       ' → logprob: -13.193336486816406
    9. ' plus' → logprob: -13.318336486816406
    10. '
' → logprob: -13.318336486816406

Token 188: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022828221321106
    2. ' +' → logprob: -1.9102282524108887
    3. 'blank' → logprob: -14.160228729248047
    4. '   ' → logprob: -14.160228729248047
    5. ' plus' → logprob: -14.535228729248047
    6. '<|end|>' → logprob: -14.660228729248047
    7. '
' → logprob: -14.785228729248047
    8. '       ' → logprob: -15.535228729248047
    9. '+
' → logprob: -16.035228729248047
    10. ' ' → logprob: -16.160228729248047

Token 189: ' blank' (ID: 16953)
  Prédit: 'blank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blank' → logprob: -0.00978867057710886
    2. ' blank' → logprob: -4.634788513183594
    3. 'min' → logprob: -10.759788513183594
    4. '(blank' → logprob: -11.759788513183594
    5. ' min' → logprob: -13.509788513183594
    6. '   ' → logprob: -13.509788513183594
    7. '_blank' → logprob: -15.009788513183594
    8. 'Blank' → logprob: -16.259788513183594
    9. '.blank' → logprob: -16.259788513183594
    10. 'bl' → logprob: -16.384788513183594

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08057260513305664
    2. ' if' → logprob: -2.9555726051330566
    3. 'if' → logprob: -4.455572605133057
    4. '   ' → logprob: -4.955572605133057
    5. 'max' → logprob: -5.205572605133057
    6. '
' → logprob: -7.205572605133057
    7. '       ' → logprob: -9.205572128295898
    8. '<|end|>' → logprob: -9.205572128295898
    9. ' max' → logprob: -9.455572128295898
    10. '    
' → logprob: -9.830572128295898

Token 191: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0413916110992432
    2. 'max' → logprob: -1.0413916110992432
    3. ' if' → logprob: -1.6663916110992432
    4. 'if' → logprob: -2.291391611099243
    5. ' max' → logprob: -6.541391372680664
    6. '
' → logprob: -6.791391372680664
    7. '	max' → logprob: -7.666391372680664
    8. '	if' → logprob: -8.166391372680664
    9. '       ' → logprob: -8.541391372680664
    10. ',max' → logprob: -8.791391372680664

Token 192: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.519298255443573
    2. '
' → logprob: -1.2692983150482178
    3. ' if' → logprob: -2.5192983150482178
    4. 'max' → logprob: -3.1442983150482178
    5. '   ' → logprob: -8.144298553466797
    6. ' max' → logprob: -10.019298553466797
    7. '
' → logprob: -10.519298553466797
    8. '       ' → logprob: -11.019298553466797
    9. '    
' → logprob: -11.769298553466797
    10. '	if' → logprob: -11.769298553466797

Token 193: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.023308604955673218
    2. 'cur' → logprob: -3.773308515548706
    3. ' max' → logprob: -9.898308753967285
    4. '	cur' → logprob: -12.148308753967285
    5. 'max' → logprob: -12.898308753967285
    6. '(cur' → logprob: -13.148308753967285
    7. ' ' → logprob: -14.148308753967285
    8. ' ' → logprob: -14.273308753967285
    9. '[cur' → logprob: -14.773308753967285
    10. '```' → logprob: -14.898308753967285

Token 194: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: 0.0
    2. '_' → logprob: -17.25
    3. '_l' → logprob: -18.0
    4. '_LEN' → logprob: -19.25
    5. ' _' → logprob: -19.375
    6. '_max' → logprob: -19.625
    7. 'len' → logprob: -19.625
    8. '<len' → logprob: -20.5
    9. '_val' → logprob: -20.75
    10. '[len' → logprob: -21.125

Token 195: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.033668287098407745
    2. '>' → logprob: -3.408668279647827
    3. ' ' → logprob: -11.033668518066406
    4. '<|end|>' → logprob: -13.033668518066406
    5. ')' → logprob: -13.783668518066406
    6. ' ' → logprob: -13.908668518066406
    7. '=' → logprob: -15.283668518066406
    8. '">' → logprob: -15.283668518066406
    9. '  ' → logprob: -15.408668518066406
    10. '[' → logprob: -15.533668518066406

Token 196: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0011706985533237457
    2. ' max' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.501171112060547
    4. '	max' → logprob: -16.001171112060547
    5. '       ' → logprob: -16.751171112060547
    6. '
' → logprob: -17.251171112060547
    7. 'maxlength' → logprob: -17.251171112060547
    8. '           ' → logprob: -17.376171112060547
    9. 'n' → logprob: -18.376171112060547
    10. ' ' → logprob: -18.376171112060547

Token 197: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: 0.0
    2. ' _' → logprob: -18.375
    3. '_' → logprob: -18.75
    4. '_l' → logprob: -20.625
    5. '_LEN' → logprob: -20.875
    6. 'len' → logprob: -21.375
    7. '_max' → logprob: -21.5
    8. 'Len' → logprob: -22.0
    9. '_length' → logprob: -22.375
    10. '__' → logprob: -22.875

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3133071959018707
    2. ':
' → logprob: -1.3133071660995483
    3. '       ' → logprob: -11.18830680847168
    4. ':max' → logprob: -11.68830680847168
    5. '   ' → logprob: -11.81330680847168
    6. 'max' → logprob: -12.68830680847168
    7. '):
' → logprob: -12.93830680847168
    8. ':
' → logprob: -13.18830680847168
    9. '_max' → logprob: -13.56330680847168
    10. ' :
' → logprob: -13.56330680847168

Token 199: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032924458384513855
    2. ' max' → logprob: -3.6579244136810303
    3. 'max' → logprob: -5.532924652099609
    4. '           ' → logprob: -6.657924652099609
    5. '<|end|>' → logprob: -7.532924652099609
    6. '(max' → logprob: -8.53292465209961
    7. '   ' → logprob: -8.78292465209961
    8. '
' → logprob: -8.78292465209961
    9. '	max' → logprob: -8.90792465209961
    10. '```' → logprob: -10.15792465209961

Token 200: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.4762335419654846
    2. ' max' → logprob: -0.9762335419654846
    3. '           ' → logprob: -6.22623348236084
    4. '               ' → logprob: -9.97623348236084
    5. '       ' → logprob: -10.22623348236084
    6. '_max' → logprob: -10.22623348236084
    7. '
' → logprob: -10.35123348236084
    8. '	max' → logprob: -11.35123348236084
    9. '   ' → logprob: -12.22623348236084
    10. '(max' → logprob: -12.85123348236084

Token 201: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9361264946837764e-07
    2. '_length' → logprob: -16.375
    3. '_l' → logprob: -17.0
    4. '_' → logprob: -18.375
    5. 'len' → logprob: -18.5
    6. '_val' → logprob: -18.75
    7. ' _' → logprob: -18.875
    8. '_LEN' → logprob: -19.375
    9. 'Len' → logprob: -20.125
    10. '_le' → logprob: -20.375

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023032367229462
    2. '=' → logprob: -1.910230278968811
    3. ' ' → logprob: -12.66023063659668
    4. ',' → logprob: -14.91023063659668
    5. '           ' → logprob: -15.03523063659668
    6. '=max' → logprob: -15.03523063659668
    7. '            ' → logprob: -15.28523063659668
    8. '<|end|>' → logprob: -15.66023063659668
    9. '=len' → logprob: -15.91023063659668
    10. '```' → logprob: -15.91023063659668

Token 203: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00861468818038702
    2. ' cur' → logprob: -4.758614540100098
    3. '	cur' → logprob: -16.383615493774414
    4. '(cur' → logprob: -18.508615493774414
    5. '   ' → logprob: -19.008615493774414
    6. '_cur' → logprob: -19.383615493774414
    7. '[cur' → logprob: -19.633615493774414
    8. 'Cur' → logprob: -20.133615493774414
    9. '
' → logprob: -20.258615493774414
    10. ' ' → logprob: -20.383615493774414

Token 204: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.306760805164231e-05
    2. 'len' → logprob: -11.37501335144043
    3. 'en' → logprob: -14.12501335144043
    4. '_' → logprob: -15.50001335144043
    5. 'Len' → logprob: -15.50001335144043
    6. '_l' → logprob: -16.12501335144043
    7. '_LEN' → logprob: -16.25001335144043
    8. ' len' → logprob: -16.50001335144043
    9. '[len' → logprob: -17.12501335144043
    10. '=len' → logprob: -18.00001335144043

Token 205: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01833723485469818
    2. '   ' → logprob: -4.393337249755859
    3. 'max' → logprob: -6.143337249755859
    4. '```' → logprob: -6.518337249755859
    5. '<|end|>' → logprob: -6.643337249755859
    6. ' print' → logprob: -7.393337249755859
    7. '       ' → logprob: -9.26833724975586
    8. '
' → logprob: -9.76833724975586
    9. ')' → logprob: -10.89333724975586
    10. '    
' → logprob: -11.39333724975586

Token 207: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006502320524305105
    2. '   ' → logprob: -5.256502151489258
    3. ' print' → logprob: -7.756502151489258
    4. 'if' (adapté à ' if') → logprob: -7.881502151489258
    5. 'max' → logprob: -7.881502151489258
    6. '
' → logprob: -10.006502151489258
    7. '```' → logprob: -10.756502151489258
    8. ' if' → logprob: -11.506502151489258
    9. '    
' → logprob: -12.131502151489258
    10. ' max' → logprob: -14.131502151489258

Token 208: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.14281870424747467
    2. 'max' → logprob: -2.0178186893463135
    3. ' n' → logprob: -9.392818450927734
    4. ' blank' → logprob: -10.142818450927734
    5. 'n' → logprob: -11.767818450927734
    6. '(max' → logprob: -12.392818450927734
    7. ' k' → logprob: -13.017818450927734
    8. 'blank' → logprob: -13.267818450927734
    9. ' len' → logprob: -13.392818450927734
    10. ' ' → logprob: -13.642818450927734

Token 209: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.128163257315464e-07
    2. 'len' → logprob: -15.875
    3. '_' → logprob: -17.375
    4. '_max' → logprob: -17.375
    5. ' _' → logprob: -17.5
    6. '_LEN' → logprob: -17.625
    7. '_length' → logprob: -18.5
    8. '_val' → logprob: -18.625
    9. '<len' → logprob: -18.625
    10. '_l' → logprob: -19.125

Token 210: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03295814245939255
    2. '>' → logprob: -3.5329580307006836
    3. ' >=' → logprob: -5.782958030700684
    4. '>=' → logprob: -9.282958030700684
    5. ' ==' → logprob: -11.657958030700684
    6. ' >
' → logprob: -12.157958030700684
    7. ' ' → logprob: -12.532958030700684
    8. ' <' → logprob: -12.532958030700684
    9. ' <=' → logprob: -12.907958030700684
    10. '   ' → logprob: -13.282958030700684

Token 211: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00027945113833993673
    2. ' n' → logprob: -8.250279426574707
    3. 'k' → logprob: -11.000279426574707
    4. ' ' → logprob: -14.250279426574707
    5. '   ' → logprob: -14.750279426574707
    6. 'len' → logprob: -15.875279426574707
    7. '	n' → logprob: -15.875279426574707
    8. '0' → logprob: -17.375280380249023
    9. '100' → logprob: -17.625280380249023
    10. '  ' → logprob: -17.625280380249023

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16025499999523163
    2. ':
' → logprob: -1.910254955291748
    3. ':max' → logprob: -11.410255432128906
    4. '   ' → logprob: -12.035255432128906
    5. '):' → logprob: -12.410255432128906
    6. ' :' → logprob: -12.785255432128906
    7. ':
' → logprob: -13.160255432128906
    8. '):
' → logprob: -13.410255432128906
    9. ')' → logprob: -13.910255432128906
    10. 'max' → logprob: -14.410255432128906

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004043494816869497
    2. 'max' → logprob: -6.1290435791015625
    3. ' max' → logprob: -6.5040435791015625
    4. '   ' → logprob: -8.629043579101562
    5. '<|end|>' → logprob: -10.129043579101562
    6. '(max' → logprob: -10.379043579101562
    7. ',' → logprob: -10.879043579101562
    8. '	max' → logprob: -10.879043579101562
    9. ',max' → logprob: -11.629043579101562
    10. '
' → logprob: -11.629043579101562

Token 214: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.4029526114463806
    2. '   ' → logprob: -1.1529526710510254
    3. '       ' → logprob: -4.402952671051025
    4. ' max' → logprob: -5.652952671051025
    5. 'print' → logprob: -9.152952194213867
    6. '	max' → logprob: -9.527952194213867
    7. 'maxlength' → logprob: -11.777952194213867
    8. '(max' → logprob: -12.402952194213867
    9. '
' → logprob: -12.902952194213867
    10. ',max' → logprob: -13.152952194213867

Token 215: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: 0.0
    2. '_' → logprob: -18.375
    3. '_l' → logprob: -18.5
    4. '_LEN' → logprob: -19.25
    5. '_length' → logprob: -19.625
    6. 'Len' → logprob: -20.75
    7. 'len' → logprob: -21.0
    8. '_max' → logprob: -21.125
    9. ' _' → logprob: -21.625
    10. '_le' → logprob: -22.5

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052350712940096855
    2. ' =' → logprob: -5.255235195159912
    3. '=n' → logprob: -13.630234718322754
    4. '=
' → logprob: -16.75523567199707
    5. '=max' → logprob: -17.00523567199707
    6. '=

' → logprob: -17.88023567199707
    7. '＝' → logprob: -18.50523567199707
    8. '=int' → logprob: -18.75523567199707
    9. ' ' → logprob: -18.75523567199707
    10. '.=' → logprob: -18.88023567199707

Token 217: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.061975300312042236
    2. ' n' → logprob: -2.8119752407073975
    3. '	n' → logprob: -11.811975479125977
    4. '   ' → logprob: -15.311975479125977
    5. '_n' → logprob: -16.936975479125977
    6. ')n' → logprob: -17.186975479125977
    7. ' ' → logprob: -17.436975479125977
    8. '(n' → logprob: -17.936975479125977
    9. ',n' → logprob: -17.936975479125977
    10. '$n' → logprob: -18.311975479125977

Token 218: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05793553590774536
    2. '
' → logprob: -3.3079354763031006
    3. 'print' → logprob: -4.05793571472168
    4. '    
' → logprob: -6.05793571472168
    5. '  
' → logprob: -10.43293571472168
    6. '```' → logprob: -10.80793571472168
    7. ' print' → logprob: -11.68293571472168
    8. '
' → logprob: -12.05793571472168
    9. '        
' → logprob: -12.80793571472168
    10. '   
' → logprob: -12.93293571472168

Token 219: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2536599040031433
    2. '   ' → logprob: -1.503659963607788
    3. '
' → logprob: -6.753659725189209
    4. '```' → logprob: -8.003660202026367
    5. ' print' → logprob: -8.878660202026367
    6. '    
' → logprob: -9.628660202026367
    7. '	print' → logprob: -11.503660202026367
    8. '<|end|>' → logprob: -12.253660202026367
    9. '``' → logprob: -12.878660202026367
    10. '  
' → logprob: -13.128660202026367

Token 220: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008633003570139408
    2. '   ' → logprob: -4.758633136749268
    3. '
' → logprob: -11.88363265991211
    4. ' print' → logprob: -12.13363265991211
    5. '```' → logprob: -12.25863265991211
    6. '    
' → logprob: -13.63363265991211
    7. '	print' → logprob: -15.75863265991211
    8. '``' → logprob: -17.13363265991211
    9. '  
' → logprob: -17.50863265991211
    10. '#print' → logprob: -17.75863265991211

Token 221: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0002615742268972099
    2. '(' → logprob: -8.250261306762695
    3. ' (' → logprob: -16.125261306762695
    4. 'max' → logprob: -16.250261306762695
    5. '(f' → logprob: -17.500261306762695
    6. '()' → logprob: -19.000261306762695
    7. '(
' → logprob: -19.000261306762695
    8. '((' → logprob: -19.125261306762695
    9. ' max' → logprob: -19.250261306762695
    10. '(min' → logprob: -19.375261306762695

Token 222: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.320199877838604e-07
    2. '_l' → logprob: -16.0
    3. '_length' → logprob: -16.0
    4. 'len' → logprob: -16.25
    5. '_' → logprob: -17.625
    6. '_LEN' → logprob: -18.25
    7. '_val' → logprob: -18.875
    8. 'Len' → logprob: -19.25
    9. '_max' → logprob: -19.25
    10. ')_' → logprob: -19.625

Token 223: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.000001907348633
    3. ')
' → logprob: -14.750001907348633
    4. '))' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.125001907348633
    6. ')`' → logprob: -17.125001907348633
    7. ')}' → logprob: -17.750001907348633
    8. '`)' → logprob: -17.750001907348633
    9. '')' → logprob: -18.125001907348633
    10. '())' → logprob: -18.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 221
Tokens correctement prédits (1ère position, stricte): 96
Tokens correctement prédits (1ère position, avec adaptation): 104
Tokens correctement prédits (top 10): 197
Précision stricte (1ère position): 43.44%
Précision adaptée (1ère position): 47.06%
Précision (top 10): 89.14%
================================================================================
