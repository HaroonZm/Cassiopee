================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Optional, Dict, Set, Union
import sys

class PathSegment:
    """
    Represents a single segment of a pathname.
    It keeps a name and can represent special segments '.' or '..' as normal directory names.
    """
    __slots__ = ('name',)
    def __init__(self, name: str):
        self.name = name
    
    def __eq__(self, other) -> bool:
        if not isinstance(other, PathSegment):
            return False
        return self.name == other.name
    
    def __hash__(self) -> int:
        return hash(self.name)
    
    def is_current_dir(self) -> bool:
        return self.name == '.'
    
    def is_parent_dir(self) -> bool:
        return self.name == '..'

    def __repr__(self):
        return f"Segment({self.name})"

class Pathname:
    """
    Represents an absolute pathname composed of path segments.
    It supports normalization according to special rules in the problem.
    """
    __slots__ = ('raw_path', 'segments', 'has_trailing_slash')
    
    def __init__(self, raw_path: str):
        self.raw_path = raw_path
        self.has_trailing_slash = raw_path.endswith('/')
        self.segments = self._parse_segments(raw_path)

    def _parse_segments(self, path: str) -> List[PathSegment]:
        # absolute path starting with '/'
        # convert to segments, ignoring empty segments between '//' (not allowed per problem)
        segments_str = path.strip('/')
        if segments_str == '':
            return []
        parts = segments_str.split('/')
        return [PathSegment(part) for part in parts]

    def __repr__(self):
        return f"Pathname({self.raw_path})"

class DirectoryTreeNode:
    """
    Node in a tree representing directory file system structure.
    Stores child directories and files.
    """
    __slots__ = ('name', 'parent', 'directories', 'files')
    def __init__(self, name: str, parent: Optional['DirectoryTreeNode'] = None):
        self.name = name
        self.parent = parent
        self.directories: Dict[str, DirectoryTreeNode] = {}
        self.files: Set[str] = set()
    
    def add_directory(self, dirname: str) -> 'DirectoryTreeNode':
        if dirname not in self.directories:
            self.directories[dirname] = DirectoryTreeNode(dirname, self)
        return self.directories[dirname]
    
    def add_file(self, filename: str):
        self.files.add(filename)
    
    def has_directory(self, dirname: str) -> bool:
        return dirname in self.directories
    
    def has_file(self, filename: str) -> bool:
        return filename in self.files

    def get_directory(self, dirname: str) -> Optional['DirectoryTreeNode']:
        return self.directories.get(dirname)
    
    def get_parent(self) -> Optional['DirectoryTreeNode']:
        return self.parent

    def __repr__(self):
        return f"Dir({self.name}, dirs={list(self.directories.keys())}, files={list(self.files)})"

class FileSystemModel:
    """
    Models the file system from input paths.
    Supports lookup of directories and files.
    """
    def __init__(self):
        self.root = DirectoryTreeNode('/')
    
    def add_path(self, pathname: Pathname):
        # All input pages are guaranteed to have no '.' or '..' as path segments
        # and end with a file (last segment is a file under the directory path)
        curr = self.root
        # last segment is a file name
        if not pathname.segments:
            # path like '/'
            return
        for segment in pathname.segments[:-1]:
            curr = curr.add_directory(segment.name)
        last_seg = pathname.segments[-1]
        curr.add_file(last_seg.name)
    
    def directory_exists(self, path_segments: List[str]) -> bool:
        """
        Check if given path_segments (directory names) corresponds to an existing directory.
        """
        curr = self.root
        for seg in path_segments:
            if not curr.has_directory(seg):
                return False
            curr = curr.get_directory(seg)
        return True
    
    def file_exists(self, path_segments: List[str], filename: str) -> bool:
        """
        Check if given directory path + filename exists as a file.
        """
        curr = self.root
        for seg in path_segments:
            curr = curr.get_directory(seg)
            if curr is None:
                return False
        return curr.has_file(filename)

    def __repr__(self):
        return f"FileSystemModel(root={self.root})"

class PathNormalizer:
    """
    Normalizes paths according to problem's rules to canonical absolute paths.
    """
    INDEX_FILE = 'index.html'

    def __init__(self, fs: FileSystemModel):
        self.fs = fs

    def normalize(self, pathname: Pathname) -> Optional[str]:
        """
        Normalize a pathname string into canonical absolute path or None if path invalid.
        Steps:
        - Split into segments
        - Resolve '.' and '..' normally but with problem rules:
          '..' parent directory accesses must not escape root.
        - Handle optional last segment index.html:
          if last segment is omitted index.html (i.e. ends with slash after directory),
          we check if index.html file exists in that directory to map equivalence.
        - Remove last slash optionally.
        Return None if path does not refer to existing web page according to problem rules.
        Return canonical absolute path string otherwise.
        """
        # We work stepwise on segments:
        segments = pathname.segments[:]
        # Defensive copy, segments are list of PathSegment
        # Use list of strings for convenience
        segs = [s.name for s in segments]

        # Check for empty root-only pathname
        if not segs:
            # path points to root directory
            # root does not contain file index.html, cannot be a web page normally
            # but if input points to '/', it can be /index.html abbreviation
            # let's check if index.html exists in root files
            if self.fs.file_exists([], self.INDEX_FILE):
                # path '/' is equivalent to /index.html
                return '/'
            else:
                return None
        
        # Build stack for canonical directory path resolution, without file name yet
        stack: List[str] = []

        # Special handling for last segment related to file or directory
        last_seg = segs[-1]

        # According to problem:
        # segments '.' and '..' are always directory names
        # We must check if last segment is a file name or directory name.

        # If last segment is a file (except if last is index.html and possible omission)
        # Let's guess by verifying fs existence.

        # In normalization we cannot just guess if last segment is file or directory.
        # According to problem - last segment can be index.html file, or ordinary file, or directory.

        # So we try two hypotheses if needed:
        # Hyp1: last segment is file
        # Hyp2: last segment is directory
        # Then we check filesystem:
        # Because index.html omission rule:
        #   /dir/index.html equals /dir/ equals /dir

        # So let's first resolve path treating last segment as file:
        parent_dirs_h1 = segs[:-1]
        possible_file = last_seg

        # resolve parent_dirs_h1 with '.', '..' treated as directory names

        canonical_parent1 = self._resolve_dirs(parent_dirs_h1)
        if canonical_parent1 is None:
            # parent directory does not exist
            # fallback to hypothesis 2: last segment is a directory
            canonical_dir2 = self._resolve_dirs(segs)
            if canonical_dir2 is None:
                # invalid path, no page
                return None
            else:
                # check if index.html exists in this directory = directory path itself is a page if index.html present
                if self.fs.file_exists(canonical_dir2, self.INDEX_FILE):
                    # directory path with possibly slash removed is valid page
                    # normalize to directory path possibly without trailing '/'
                    base_path = '/' + '/'.join(canonical_dir2)
                    # multiple ending slash removal, minimize representation for directories with index.html
                    return base_path if base_path != '' else '/'
                else:
                    # directory is not a page by itself (no index.html)
                    # so no web page exists at this path
                    return None
        else:
            # Hyp1 parent directory exists
            # check if file exists
            if self.fs.file_exists(canonical_parent1, possible_file):
                # valid file path page
                file_path = '/' + '/'.join(canonical_parent1 + [possible_file])
                # Now apply index.html omission rule if possible_file == index.html
                if possible_file == self.INDEX_FILE:
                    # this is equal to directory path with or without trailing slash
                    base_path = '/' + '/'.join(canonical_parent1)
                    # base_path == root when no parent dirs
                    base_path = base_path if base_path != '' else '/'
                    # Depending on trailing slash or not, both are equivalent.
                    # Per problem trailing slash can be omitted.
                    # Normalize final as directory path without trailing slash
                    return base_path
                else:
                    # ordinary file path no special omission
                    return file_path
            else:
                # file not exist, try Hyp2 guess: last segment is directory
                canonical_dir2 = self._resolve_dirs(segs)
                if canonical_dir2 is None:
                    return None
                else:
                    # check if directory has index.html file for page
                    if self.fs.file_exists(canonical_dir2, self.INDEX_FILE):
                        base_path = '/' + '/'.join(canonical_dir2)
                        base_path = base_path if base_path != '' else '/'
                        return base_path
                    else:
                        return None

    def _resolve_dirs(self, dirs: List[str]) -> Optional[List[str]]:
        """
        Resolve directory path considering '.' and '..' as directory names.
        They are normal directory names, but .. means parent directory.
        If 'dirs' point outside root (.. from root), returns None.
        Also verify every directory exists in fs when advancing.
        Note: '.' is a directory name representing itself, so no special collapse.
        """
        stack: List[str] = []
        for d in dirs:
            if d == '..':
                if len(stack) == 0:
                    # .. from root => invalid path
                    return None
                stack.pop()
            else:
                # '.' is normal directory name and must exist
                stack.append(d)
        # verify existence in fs
        if self.fs.directory_exists(stack):
            return stack
        else:
            return None

class WebPageRegistry:
    """
    Manages all known web pages and allows matching normalized paths to pages.
    """
    def __init__(self):
        self.page_to_id: Dict[str, int] = {}
        self.id_to_page: List[str] = []
        self.next_id = 0
    
    def add_page(self, canonical_path: str) -> int:
        """
        Add a canonical path for a page to registry.
        Returns the page id.
        """
        if canonical_path not in self.page_to_id:
            self.page_to_id[canonical_path] = self.next_id
            self.id_to_page.append(canonical_path)
            self.next_id += 1
        return self.page_to_id[canonical_path]
    
    def get_id(self, canonical_path: str) -> Optional[int]:
        """
        Get page id if exists.
        """
        return self.page_to_id.get(canonical_path)

class PathfinderAgentSoftwareModule:
    """
    Main orchestrator class for problem solution.
    Parses input, manages filesystem model, normalization, and queries answers.
    """
    def __init__(self):
        self.fs = FileSystemModel()
        self.registry = WebPageRegistry()
        self.normalizer = PathNormalizer(self.fs)

    def add_web_pages(self, pages: List[str]):
        # add pages to filesystem and registry
        for raw_path in pages:
            path = Pathname(raw_path)
            self.fs.add_path(path)

        # After all pages added, register all canonical page paths
        # For each page in given original form:
        # canonicalize paths that have no '.' or '..' (given pages guaranteed no '.' or '..')
        # And register canonical ones.

        # We do canonicalization knowing that input pages have no . or ..,
        # so normalizer will not fail, but we must carefully use normalizer

        # We register pages by their canonical normalized path:
        for raw_path in pages:
            pn = Pathname(raw_path)
            can = self.normalizer.normalize(pn)
            if can is not None:  # always should be not None for input pages
                self.registry.add_page(can)

    def query(self, p1: str, p2: str) -> str:
        """
        Given two raw pathnames strings, determine relations ("yes", "no", "not found")
        """
        pn1 = Pathname(p1)
        pn2 = Pathname(p2)
        c1 = self.normalizer.normalize(pn1)
        c2 = self.normalizer.normalize(pn2)

        if c1 is None or c2 is None:
            return "not found"
        id1 = self.registry.get_id(c1)
        id2 = self.registry.get_id(c2)
        if id1 is None or id2 is None:
            return "not found"
        return "yes" if id1 == id2 else "no"

def main():
    input_lines = sys.stdin.read().splitlines()
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        line = input_lines[idx].strip()
        idx += 1
        if line == '0 0':
            break
        if not line:
            continue
        N, M = map(int, line.split())
        web_pages = []
        for _ in range(N):
            web_pages.append(input_lines[idx].strip())
            idx += 1
        queries_raw = []
        for _ in range(M*2):
            queries_raw.append(input_lines[idx].strip())
            idx += 1
        software = PathfinderAgentSoftwareModule()
        software.add_web_pages(web_pages)
        for q_i in range(M):
            p1 = queries_raw[2*q_i]
            p2 = queries_raw[2*q_i+1]
            ans = software.query(p1, p2)
            print(ans)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.07560335844755173
    2. ' Any' → logprob: -2.8256032466888428
    3. ' Optional' → logprob: -4.700603485107422
    4. 'Any' → logprob: -6.575603485107422
    5. 'List' → logprob: -6.700603485107422
    6. ' Union' → logprob: -6.950603485107422
    7. ' ' → logprob: -7.950603485107422
    8. ' Generator' → logprob: -8.200603485107422
    9. 'Optional' → logprob: -9.575603485107422
    10. ' Iterable' → logprob: -9.825603485107422

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7054171562194824
    2. ',' → logprob: -1.5804171562194824
    3. 'def' → logprob: -1.5804171562194824
    4. '[' → logprob: -3.8304171562194824
    5. '\' → logprob: -3.8304171562194824
    6. '\n' → logprob: -4.205417156219482
    7. ':' → logprob: -4.705417156219482
    8. 'import' → logprob: -4.705417156219482
    9. '
' → logprob: -5.330417156219482
    10. '

' → logprob: -6.080417156219482

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.44882699847221375
    2. 'Optional' → logprob: -1.0738270282745361
    3. ' Dict' → logprob: -4.823826789855957
    4. 'Dict' → logprob: -4.948826789855957
    5. 'Tuple' → logprob: -5.823826789855957
    6. ' Tuple' → logprob: -6.948826789855957
    7. ' Union' → logprob: -7.448826789855957
    8. 'Union' → logprob: -9.323826789855957
    9. 'Iterable' → logprob: -10.073826789855957
    10. 'Any' → logprob: -10.448826789855957

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18016932904720306
    2. '```' → logprob: -2.1801693439483643
    3. ',' → logprob: -4.305169105529785
    4. '`' → logprob: -5.055169105529785
    5. '\n' → logprob: -5.180169105529785
    6. '\' → logprob: -5.430169105529785
    7. 'import' → logprob: -5.430169105529785
    8. '[' → logprob: -5.805169105529785
    9. '<|end|>' → logprob: -6.305169105529785
    10. '
' → logprob: -6.305169105529785

Token 7: ' Optional' (ID: 19351)
  Prédit: ' Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.19282151758670807
    2. 'Dict' → logprob: -2.192821502685547
    3. ' Optional' → logprob: -3.692821502685547
    4. ' Union' → logprob: -3.817821502685547
    5. 'Optional' → logprob: -4.817821502685547
    6. 'Union' → logprob: -6.192821502685547
    7. ' Callable' → logprob: -6.192821502685547
    8. 'Iterable' → logprob: -6.942821502685547
    9. ' dict' → logprob: -7.317821502685547
    10. 'Set' → logprob: -7.442821502685547

Token 8: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5351266264915466
    2. '```' → logprob: -1.2851266860961914
    3. '[' → logprob: -3.2851266860961914
    4. '\n' → logprob: -3.4101266860961914
    5. ',' → logprob: -4.035126686096191
    6. '\' → logprob: -4.410126686096191
    7. 'import' → logprob: -4.910126686096191
    8. ':' → logprob: -5.035126686096191
    9. '

' → logprob: -5.160126686096191
    10. '
' → logprob: -5.660126686096191

Token 9: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.08352357149124146
    2. 'Union' → logprob: -2.9585235118865967
    3. ' Dict' → logprob: -4.083523750305176
    4. 'Set' → logprob: -5.708523750305176
    5. 'Any' → logprob: -6.083523750305176
    6. 'Iterable' → logprob: -6.333523750305176
    7. ' Union' → logprob: -6.458523750305176
    8. 'Callable' → logprob: -6.833523750305176
    9. 'dict' → logprob: -7.833523750305176
    10. 'Typed' → logprob: -8.083523750305176

Token 10: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.792393147945404
    2. 'def' → logprob: -1.1673932075500488
    3. 'import' → logprob: -2.417393207550049
    4. ',' → logprob: -2.667393207550049
    5. '<|end|>' → logprob: -3.667393207550049
    6. '[' → logprob: -3.792393207550049
    7. '`' → logprob: -4.792393207550049
    8. ':' → logprob: -5.542393207550049
    9. '(' → logprob: -5.917393207550049
    10. '``' → logprob: -6.292393207550049

Token 11: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.16427983343601227
    2. 'Any' → logprob: -2.6642799377441406
    3. ' Set' → logprob: -3.4142799377441406
    4. 'Union' → logprob: -4.039279937744141
    5. ' Union' → logprob: -4.039279937744141
    6. ' Any' → logprob: -5.414279937744141
    7. 'Iterable' → logprob: -5.664279937744141
    8. ' Callable' → logprob: -6.289279937744141
    9. 'set' → logprob: -6.539279937744141
    10. 'Callable' → logprob: -7.164279937744141

Token 12: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2131967544555664
    2. '```' → logprob: -1.5881967544555664
    3. ',' → logprob: -1.8381967544555664
    4. 'import' → logprob: -1.9631967544555664
    5. '[' → logprob: -2.7131967544555664
    6. ':' → logprob: -3.5881967544555664
    7. '<|end|>' → logprob: -3.5881967544555664
    8. 'a' → logprob: -3.5881967544555664
    9. '\n' → logprob: -4.963196754455566
    10. 'class' → logprob: -5.338196754455566

Token 13: ' Union' (ID: 14746)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.32184702157974243
    2. 'Union' → logprob: -1.5718469619750977
    3. 'Iterable' → logprob: -3.0718469619750977
    4. ' Union' → logprob: -5.196846961975098
    5. 'Callable' → logprob: -5.696846961975098
    6. 'Iterator' → logprob: -5.821846961975098
    7. 'Named' → logprob: -6.571846961975098
    8. 'Default' → logprob: -6.696846961975098
    9. ' Any' → logprob: -6.696846961975098
    10. 'Generator' → logprob: -6.821846961975098

Token 14: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6507329344749451
    2. 'import' → logprob: -1.5257329940795898
    3. '<|end|>' → logprob: -2.27573299407959
    4. '```' → logprob: -2.52573299407959
    5. 'a' → logprob: -3.90073299407959
    6. 'def' → logprob: -4.65073299407959
    7. '[' → logprob: -5.02573299407959
    8. '(' → logprob: -5.02573299407959
    9. '`' → logprob: -5.27573299407959
    10. '<|end|>' → logprob: -5.52573299407959

Token 15: 'import' (ID: 561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4042699337005615
    2. 'import' → logprob: -1.9042699337005615
    3. '```' → logprob: -3.0292699337005615
    4. '\n' → logprob: -3.6542699337005615
    5. 'a' → logprob: -3.7792699337005615
    6. '[' → logprob: -4.029270172119141
    7. 'def' → logprob: -4.029270172119141
    8. ':' → logprob: -4.279270172119141
    9. '.' → logprob: -4.779270172119141
    10. '`' → logprob: -5.154270172119141

Token 16: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03590282052755356
    2. ' sys' → logprob: -3.785902738571167
    3. ' typing' → logprob: -5.160902976989746
    4. ' re' → logprob: -5.910902976989746
    5. ' numpy' → logprob: -6.410902976989746
    6. ' pandas' → logprob: -7.035902976989746
    7. ' json' → logprob: -7.035902976989746
    8. 'os' → logprob: -8.410902976989746
    9. ' collections' → logprob: -8.910902976989746
    10. ' requests' → logprob: -9.285902976989746

Token 17: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 18: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028873704373836517
    2. 'import' → logprob: -4.403873920440674
    3. 'class' → logprob: -5.403873920440674
    4. '#' → logprob: -5.528873920440674
    5. '```' → logprob: -5.778873920440674
    6. '
' → logprob: -7.278873920440674
    7. '\n' → logprob: -7.278873920440674
    8. '\' → logprob: -7.403873920440674
    9. 'de' → logprob: -7.653873920440674
    10. 'd' → logprob: -7.778873920440674

Token 19: ' Path' (ID: 14027)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -0.41821369528770447
    2. ' ' → logprob: -1.6682137250900269
    3. ' Data' → logprob: -3.5432136058807373
    4. ' Parser' → logprob: -3.5432136058807373
    5. ' Space' → logprob: -3.6682136058807373
    6. ' System' → logprob: -3.9182136058807373
    7. ' User' → logprob: -5.168213844299316
    8. ' Vector' → logprob: -5.293213844299316
    9. ' Config' → logprob: -5.543213844299316
    10. ' Calculator' → logprob: -5.793213844299316

Token 20: 'Segment' (ID: 24880)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0622732937335968
    2. '(' → logprob: -2.8122732639312744
    3. ':
' → logprob: -9.312273025512695
    4. ' :' → logprob: -9.437273025512695
    5. '():' → logprob: -10.312273025512695
    6. '(:' → logprob: -10.437273025512695
    7. '(object' → logprob: -10.937273025512695
    8. '(
' → logprob: -11.062273025512695
    9. 'Segment' → logprob: -11.937273025512695
    10. '(":' → logprob: -12.062273025512695

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006744735408574343
    2. '(' → logprob: -5.006744861602783
    3. ' :' → logprob: -11.631744384765625
    4. '():' → logprob: -12.506744384765625
    5. '(object' → logprob: -13.006744384765625
    6. ':**' → logprob: -13.006744384765625
    7. ':
' → logprob: -13.131744384765625
    8. ',' → logprob: -13.506744384765625
    9. '):' → logprob: -13.631744384765625
    10. '.' → logprob: -13.631744384765625

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41881057620048523
    2. ':' → logprob: -1.1688106060028076
    3. '(' → logprob: -4.0438103675842285
    4. '<|end|>' → logprob: -5.2938103675842285
    5. '(object' → logprob: -6.0438103675842285
    6. '```' → logprob: -6.1688103675842285
    7. ' ' → logprob: -6.5438103675842285
    8. '    ' → logprob: -8.168810844421387
    9. ':
' → logprob: -8.168810844421387
    10. '<|end|>' → logprob: -8.168810844421387

Token 23: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7457365393638611
    2. ' def' → logprob: -0.8707365393638611
    3. 'def' → logprob: -2.995736598968506
    4. ' pass' → logprob: -3.120736598968506
    5. 'class' → logprob: -4.870736598968506
    6. 'pass' → logprob: -5.870736598968506
    7. '    ' → logprob: -6.620736598968506
    8. '```' → logprob: -8.745736122131348
    9. '(' → logprob: -8.870736122131348
    10. ' ' → logprob: -8.995736122131348

Token 24: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.11514738947153091
    2. ' """' → logprob: -4.115147590637207
    3. 'Class' → logprob: -4.240147590637207
    4. '```' → logprob: -4.740147590637207
    5. 'Rep' → logprob: -4.990147590637207
    6. 'Path' → logprob: -4.990147590637207
    7. 'Doc' → logprob: -5.240147590637207
    8. '*' → logprob: -5.740147590637207
    9. 'A' → logprob: -5.740147590637207
    10. 'class' → logprob: -5.865147590637207

Token 25: ' Represents' (ID: 84592)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5793038010597229
    2. 'Rep' → logprob: -1.0793037414550781
    3. ' Represents' → logprob: -3.204303741455078
    4. 'A' → logprob: -3.204303741455078
    5. ' A' → logprob: -5.829303741455078
    6. 'Path' → logprob: -6.204303741455078
    7. 'class' → logprob: -6.579303741455078
    8. 'Class' → logprob: -6.579303741455078
    9. ' """' → logprob: -6.704303741455078
    10. '"""
' → logprob: -6.704303741455078

Token 26: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0012597566237673163
    2. 'a' → logprob: -7.751259803771973
    3. ' part' → logprob: -8.001259803771973
    4. ' one' → logprob: -8.001259803771973
    5. ' the' → logprob: -9.376259803771973
    6. ' an' → logprob: -9.751259803771973
    7. '<|end|>' → logprob: -12.626259803771973
    8. ' each' → logprob: -12.876259803771973
    9. '<|end|>' → logprob: -13.001259803771973
    10. ' ' → logprob: -13.501259803771973

Token 27: ' single' (ID: 4590)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.04245160520076752
    2. ' path' → logprob: -4.16745138168335
    3. ' single' → logprob: -4.66745138168335
    4. 'segment' → logprob: -4.79245138168335
    5. ' part' → logprob: -5.04245138168335
    6. ' portion' → logprob: -6.66745138168335
    7. ' piece' → logprob: -8.667451858520508
    8. 'path' → logprob: -9.417451858520508
    9. 'single' → logprob: -9.542451858520508
    10. ' line' → logprob: -10.167451858520508

Token 28: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.08188756555318832
    2. ' path' → logprob: -3.2068874835968018
    3. 'segment' → logprob: -3.4568874835968018
    4. ' step' → logprob: -5.456887722015381
    5. ' part' → logprob: -6.831887722015381
    6. 'path' → logprob: -6.956887722015381
    7. '   ' → logprob: -9.206887245178223
    8. ' component' → logprob: -10.331887245178223
    9. ' point' → logprob: -10.456887245178223
    10. ' leg' → logprob: -10.956887245178223

Token 29: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0007532857125625014
    2. 'of' → logprob: -8.375753402709961
    3. ' in' → logprob: -8.750753402709961
    4. '<|end|>' → logprob: -8.750753402709961
    5. '   ' → logprob: -9.125753402709961
    6. '```' → logprob: -10.375753402709961
    7. '<|end|>' → logprob: -10.500753402709961
    8. 's' → logprob: -12.125753402709961
    9. ' ' → logprob: -12.375753402709961
    10. '.' → logprob: -12.500753402709961

Token 30: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.011694523505866528
    2. 'a' → logprob: -4.511694431304932
    3. ' the' → logprob: -7.386694431304932
    4. ' an' → logprob: -11.76169490814209
    5. 'the' → logprob: -11.88669490814209
    6. ' code' → logprob: -12.51169490814209
    7. ' ' → logprob: -12.63669490814209
    8. ' path' → logprob: -13.13669490814209
    9. 'path' → logprob: -13.38669490814209
    10. '```' → logprob: -14.63669490814209

Token 31: ' pathname' (ID: 86882)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.11368036270141602
    2. 'path' → logprob: -2.988680362701416
    3. ' file' → logprob: -3.238680362701416
    4. ' URL' → logprob: -5.113680362701416
    5. ' filesystem' → logprob: -5.113680362701416
    6. 'Path' → logprob: -6.988680362701416
    7. 'n' → logprob: -7.363680362701416
    8. 'a' → logprob: -7.363680362701416
    9. 'filesystem' → logprob: -7.488680362701416
    10. 's' → logprob: -7.613680362701416

Token 32: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3178102672100067
    2. '"""' → logprob: -1.442810297012329
    3. '."""' → logprob: -4.06781005859375
    4. '   ' → logprob: -4.56781005859375
    5. '```' → logprob: -6.31781005859375
    6. ',' → logprob: -6.31781005859375
    7. '.
' → logprob: -6.56781005859375
    8. ':' → logprob: -6.94281005859375
    9. ' that' → logprob: -7.44281005859375
    10. '`' → logprob: -7.69281005859375

Token 33: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.023570850491523743
    2. '   ' → logprob: -3.8985707759857178
    3. ' """' → logprob: -6.398571014404297
    4. '"""
' → logprob: -7.523571014404297
    5. '```' → logprob: -7.773571014404297
    6. '""' → logprob: -8.773571014404297
    7. '"' → logprob: -9.773571014404297
    8. ' """
' → logprob: -9.898571014404297
    9. '    ' → logprob: -10.398571014404297
    10. ')' → logprob: -10.398571014404297

Token 34: ' It' (ID: 1225)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.01917596347630024
    2. '   ' → logprob: -4.019176006317139
    3. '```' → logprob: -8.14417552947998
    4. '"""
' → logprob: -8.14417552947998
    5. ' """' → logprob: -8.39417552947998
    6. '""' → logprob: -9.01917552947998
    7. '"' → logprob: -10.51917552947998
    8. '    
' → logprob: -10.76917552947998
    9. '    ' → logprob: -10.89417552947998
    10. '\n' → logprob: -12.01917552947998

Token 35: ' keeps' (ID: 18295)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.3738797903060913
    2. ' has' → logprob: -1.3738797903060913
    3. ' can' → logprob: -1.7488797903060913
    4. 's' → logprob: -1.8738797903060913
    5. ' ' → logprob: -3.123879909515381
    6. ' represents' → logprob: -3.498879909515381
    7. ' may' → logprob: -3.623879909515381
    8. ' could' → logprob: -3.748879909515381
    9. ' contains' → logprob: -4.498879909515381
    10. ' consists' → logprob: -5.123879909515381

Token 36: ' a' (ID: 261)
  Prédit: ' track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' track' → logprob: -0.20497511327266693
    2. ' the' → logprob: -1.8299751281738281
    3. 'track' → logprob: -3.829975128173828
    4. 'the' → logprob: -6.704975128173828
    5. ' its' → logprob: -7.204975128173828
    6. ' a' → logprob: -7.454975128173828
    7. ' an' → logprob: -8.204975128173828
    8. ' information' → logprob: -8.204975128173828
    9. '_track' → logprob: -11.079975128173828
    10. 'name' → logprob: -11.204975128173828

Token 37: ' name' (ID: 1308)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8927171230316162
    2. 'name' → logprob: -1.7677171230316162
    3. ' reference' → logprob: -2.142717123031616
    4. ' name' → logprob: -2.642717123031616
    5. 'reference' → logprob: -3.017717123031616
    6. 's' → logprob: -3.642717123031616
    7. ' path' → logprob: -3.892717123031616
    8. 'path' → logprob: -4.017717361450195
    9. 'string' → logprob: -4.142717361450195
    10. ' string' → logprob: -4.392717361450195

Token 38: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3432234227657318
    2. ',' → logprob: -1.8432234525680542
    3. ':' → logprob: -2.5932233333587646
    4. '.' → logprob: -3.4682233333587646
    5. '_' → logprob: -4.718223571777344
    6. '<|end|>' → logprob: -5.218223571777344
    7. 'and' → logprob: -5.343223571777344
    8. '"""' → logprob: -6.593223571777344
    9. '```' → logprob: -6.843223571777344
    10. ':str' → logprob: -7.093223571777344

Token 39: ' can' (ID: 665)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.2213389277458191
    2. ' a' → logprob: -2.096338987350464
    3. 'a' → logprob: -3.846338987350464
    4. 'an' → logprob: -3.971338987350464
    5. ' optional' → logprob: -4.346338748931885
    6. ' its' → logprob: -4.471338748931885
    7. ' type' → logprob: -5.471338748931885
    8. ' possibly' → logprob: -6.096338748931885
    9. ' the' → logprob: -6.846338748931885
    10. ' optionally' → logprob: -7.096338748931885

Token 40: ' represent' (ID: 5188)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.776849627494812
    2. ' have' → logprob: -1.151849627494812
    3. ' represent' → logprob: -2.0268497467041016
    4. ' contain' → logprob: -3.1518497467041016
    5. ' optionally' → logprob: -4.401849746704102
    6. ' include' → logprob: -4.526849746704102
    7. ' also' → logprob: -5.276849746704102
    8. ' provide' → logprob: -5.526849746704102
    9. ' match' → logprob: -5.776849746704102
    10. ' either' → logprob: -5.901849746704102

Token 41: ' special' (ID: 3582)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3475147783756256
    2. ' either' → logprob: -2.3475148677825928
    3. ' an' → logprob: -2.5975148677825928
    4. ' whether' → logprob: -3.3475148677825928
    5. ' the' → logprob: -3.4725148677825928
    6. ' directories' → logprob: -4.097514629364014
    7. 'a' → logprob: -4.472514629364014
    8. ' different' → logprob: -4.972514629364014
    9. ' optional' → logprob: -5.222514629364014
    10. ' one' → logprob: -5.972514629364014

Token 42: ' segments' (ID: 33749)
  Prédit: ' characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -1.3551217317581177
    2. ' tokens' → logprob: -1.3551217317581177
    3. ' segments' → logprob: -1.3551217317581177
    4. ' cases' → logprob: -3.105121612548828
    5. ' parts' → logprob: -3.480121612548828
    6. ' path' → logprob: -3.855121612548828
    7. ' attributes' → logprob: -3.855121612548828
    8. ' types' → logprob: -4.230121612548828
    9. '/' → logprob: -4.480121612548828
    10. ' elements' → logprob: -4.730121612548828

Token 43: ' '.'' (ID: 64762)
  Prédit: ' like'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' like' → logprob: -0.3507913649082184
    2. ' such' → logprob: -1.350791335105896
    3. ',' → logprob: -3.4757914543151855
    4. '.' → logprob: -6.1007914543151855
    5. 'such' → logprob: -6.9757914543151855
    6. ' (' → logprob: -7.2257914543151855
    7. 'like' → logprob: -7.3507914543151855
    8. ':' → logprob: -7.3507914543151855
    9. ' as' → logprob: -8.350790977478027
    10. ' that' → logprob: -8.975790977478027

Token 44: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.33730366826057434
    2. ' and' → logprob: -2.087303638458252
    3. ',' → logprob: -2.462303638458252
    4. 'and' → logprob: -3.212303638458252
    5. 'or' → logprob: -3.337303638458252
    6. '<|end|>' → logprob: -7.337303638458252
    7. ' (' → logprob: -7.837303638458252
    8. ' ,' → logprob: -9.71230411529541
    9. '```' → logprob: -10.58730411529541
    10. '.' → logprob: -10.71230411529541

Token 45: ' '..' (ID: 107414)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.022426815703511238
    2. ' '..' → logprob: -4.022426605224609
    3. '..' → logprob: -5.522426605224609
    4. '"' → logprob: -9.64742660522461
    5. ' '/'' → logprob: -9.89742660522461
    6. ''/' → logprob: -10.64742660522461
    7. '''' → logprob: -11.02242660522461
    8. ''''' → logprob: -11.14742660522461
    9. ''s' → logprob: -11.27242660522461
    10. ''b' → logprob: -11.77242660522461

Token 46: ''' (ID: 6)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.04208284243941307
    2. '   ' → logprob: -3.9170827865600586
    3. ''' → logprob: -4.542082786560059
    4. '"' → logprob: -4.917082786560059
    5. '"""
' → logprob: -6.167082786560059
    6. ' """' → logprob: -8.042082786560059
    7. '```' → logprob: -8.167082786560059
    8. ''''' → logprob: -8.292082786560059
    9. '`' → logprob: -8.917082786560059
    10. '.' → logprob: -9.792082786560059

Token 47: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21113908290863037
    2. '.' → logprob: -1.7111390829086304
    3. '```' → logprob: -5.96113920211792
    4. '
' → logprob: -6.08613920211792
    5. ',' → logprob: -6.08613920211792
    6. '\n' → logprob: -7.08613920211792
    7. '    
' → logprob: -7.46113920211792
    8. '"""' → logprob: -8.586138725280762
    9. '"' → logprob: -8.961138725280762
    10. '.
' → logprob: -9.211138725280762

Token 48: ' normal' (ID: 6078)
  Prédit: ' special'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' special' → logprob: -0.5527803301811218
    2. ' strings' → logprob: -1.8027803897857666
    3. ' well' → logprob: -2.3027803897857666
    4. ' a' → logprob: -2.8027803897857666
    5. 'special' → logprob: -3.1777803897857666
    6. 'well' → logprob: -4.3027801513671875
    7. 'str' → logprob: -5.1777801513671875
    8. ' None' → logprob: -5.3027801513671875
    9. ' tokens' → logprob: -5.8027801513671875
    10. ' either' → logprob: -5.9277801513671875

Token 49: ' directory' (ID: 12552)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.06560368835926056
    2. 'segments' → logprob: -3.690603733062744
    3. ' names' → logprob: -4.190603733062744
    4. ' strings' → logprob: -4.815603733062744
    5. 'names' → logprob: -6.065603733062744
    6. ' path' → logprob: -6.565603733062744
    7. ' segment' → logprob: -6.565603733062744
    8. ' parts' → logprob: -6.690603733062744
    9. ' text' → logprob: -6.690603733062744
    10. ' ones' → logprob: -7.190603733062744

Token 50: ' names' (ID: 8747)
  Prédit: ' names'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' names' → logprob: -0.8528382778167725
    2. 'names' → logprob: -1.2278382778167725
    3. 'name' → logprob: -1.6028382778167725
    4. '_name' → logprob: -3.4778382778167725
    5. ' name' → logprob: -4.102838516235352
    6. ' segments' → logprob: -4.352838516235352
    7. ' or' → logprob: -5.227838516235352
    8. 'segments' → logprob: -5.977838516235352
    9. '_names' → logprob: -6.352838516235352
    10. ' parts' → logprob: -6.602838516235352

Token 51: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0016505412058904767
    2. ',' → logprob: -7.376650333404541
    3. '   ' → logprob: -7.376650333404541
    4. '.
' → logprob: -8.3766508102417
    5. '
' → logprob: -10.5016508102417
    6. '"""' → logprob: -10.5016508102417
    7. '."""' → logprob: -10.8766508102417
    8. '```' → logprob: -11.1266508102417
    9. 's' → logprob: -11.3766508102417
    10. ')' → logprob: -11.5016508102417

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08081793785095215
    2. '"""' → logprob: -2.580817937850952
    3. '```' → logprob: -6.955818176269531
    4. '
' → logprob: -7.830818176269531
    5. ' """' → logprob: -8.455818176269531
    6. '"' → logprob: -9.455818176269531
    7. '    
' → logprob: -9.455818176269531
    8. '"""
' → logprob: -9.830818176269531
    9. '""' → logprob: -9.955818176269531
    10. '`' → logprob: -10.580818176269531

Token 53: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.25951024889945984
    2. '   ' → logprob: -1.5095102787017822
    3. '"""
' (adapté à ' """
') → logprob: -5.259510040283203
    4. ' """' → logprob: -7.509510040283203
    5. '```' → logprob: -7.634510040283203
    6. '
' → logprob: -7.759510040283203
    7. ' """
' → logprob: -8.134510040283203
    8. '""' → logprob: -8.259510040283203
    9. '"' → logprob: -8.384510040283203
    10. '`' → logprob: -10.634510040283203

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048978716135025024
    2. 'def' → logprob: -3.173978805541992
    3. '    
' → logprob: -5.548978805541992
    4. ' def' → logprob: -6.298978805541992
    5. '
' → logprob: -9.548978805541992
    6. '    ' → logprob: -9.923978805541992
    7. ' 
' → logprob: -10.173978805541992
    8. '   
' → logprob: -10.298978805541992
    9. '```' → logprob: -11.048978805541992
    10. ' ' → logprob: -12.423978805541992

Token 55: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023691581562161446
    2. ' def' → logprob: -3.7736916542053223
    3. '   ' → logprob: -7.898691654205322
    4. '__' (adapté à ' __') → logprob: -9.648691177368164
    5. ' __' → logprob: -12.398691177368164
    6. 'name' → logprob: -12.773691177368164
    7. '_def' → logprob: -13.523691177368164
    8. '_name' → logprob: -14.523691177368164
    9. 'de' → logprob: -15.023691177368164
    10. ' _' → logprob: -15.148691177368164

Token 56: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.004654880613088608
    2. 'init' → logprob: -5.379654884338379
    3. 'slot' → logprob: -10.754654884338379
    4. 'hash' → logprob: -12.379654884338379
    5. 'eq' → logprob: -12.629654884338379
    6. '_slots' → logprob: -13.254654884338379
    7. ' slots' → logprob: -13.379654884338379
    8. 'name' → logprob: -14.629654884338379
    9. 'doc' → logprob: -14.879654884338379
    10. 'all' → logprob: -15.129654884338379

Token 57: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.2948405128554441e-05
    2. '=' → logprob: -11.75001335144043
    3. '___' → logprob: -12.87501335144043
    4. '__[' → logprob: -14.25001335144043
    5. '__('' → logprob: -14.37501335144043
    6. '=['' → logprob: -14.50001335144043
    7. '__["' → logprob: -15.37501335144043
    8. '____' → logprob: -15.62501335144043
    9. '__.__' → logprob: -16.00001335144043
    10. '__.' → logprob: -16.25001335144043

Token 58: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0034070396795868874
    2. '=' → logprob: -6.003407001495361
    3. ' =' → logprob: -7.003407001495361
    4. '=['' → logprob: -11.50340747833252
    5. '___' → logprob: -11.87840747833252
    6. '__[' → logprob: -13.62840747833252
    7. '__('' → logprob: -13.87840747833252
    8. '__["' → logprob: -14.00340747833252
    9. '=["' → logprob: -14.37840747833252
    10. '____' → logprob: -15.00340747833252

Token 59: ' ('' (ID: 9906)
  Prédit: '('_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('_' → logprob: -1.0511060953140259
    2. ''name' → logprob: -1.5511060953140259
    3. '['' → logprob: -1.9261060953140259
    4. '('' → logprob: -2.4261059761047363
    5. ' ('' → logprob: -2.5511059761047363
    6. '('__' → logprob: -3.9261059761047363
    7. ''' → logprob: -4.051105976104736
    8. '['_' → logprob: -4.176105976104736
    9. '["' → logprob: -4.301105976104736
    10. '"name' → logprob: -4.551105976104736

Token 60: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.018476268276572227
    2. '_name' → logprob: -4.018476486206055
    3. ' name' → logprob: -9.018476486206055
    4. '__' → logprob: -10.018476486206055
    5. '_segment' → logprob: -10.268476486206055
    6. 'segment' → logprob: -10.393476486206055
    7. '_' → logprob: -11.143476486206055
    8. '_n' → logprob: -11.268476486206055
    9. '_path' → logprob: -11.393476486206055
    10. 'value' → logprob: -11.643476486206055

Token 61: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.1269480586051941
    2. '')' → logprob: -2.126948118209839
    3. ''' → logprob: -11.376948356628418
    4. ')' → logprob: -12.626948356628418
    5. '','' → logprob: -12.876948356628418
    6. '')
' → logprob: -13.751948356628418
    7. '')

' → logprob: -14.376948356628418
    8. '',
' → logprob: -14.376948356628418
    9. '']' → logprob: -15.626948356628418
    10. ',' → logprob: -15.751948356628418

Token 62: ')
' (ID: 446)
  Prédit: ''is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''is' → logprob: -0.7112858891487122
    2. ' '' → logprob: -0.9612858891487122
    3. ''' → logprob: -3.0862858295440674
    4. ' is' → logprob: -3.4612858295440674
    5. ')' → logprob: -4.0862860679626465
    6. ''s' → logprob: -4.5862860679626465
    7. 'is' → logprob: -5.0862860679626465
    8. ''type' → logprob: -5.3362860679626465
    9. ' ' → logprob: -5.9612860679626465
    10. ' '_' → logprob: -6.0862860679626465

Token 63: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.062354497611522675
    2. 'def' → logprob: -3.687354564666748
    3. '    
' → logprob: -4.062354564666748
    4. '   ' → logprob: -4.187354564666748
    5. '

' → logprob: -7.187354564666748
    6. ' def' → logprob: -7.187354564666748
    7. '
' → logprob: -7.812354564666748
    8. ':' → logprob: -8.18735408782959
    9. '\n' → logprob: -8.81235408782959
    10. 'newline' → logprob: -8.81235408782959

Token 64: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.7437264919281006
    2. '
' → logprob: -0.9937264919281006
    3. '   ' → logprob: -2.6187264919281006
    4. '    
' → logprob: -2.8687264919281006
    5. ' def' → logprob: -3.7437264919281006
    6. ' 
' → logprob: -8.36872673034668
    7. '

' → logprob: -8.74372673034668
    8. '\n' → logprob: -8.74372673034668
    9. '
' → logprob: -8.99372673034668
    10. '  
' → logprob: -9.24372673034668

Token 65: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0017496729269623756
    2. ' ' → logprob: -6.501749515533447
    3. '__' → logprob: -9.251749992370605
    4. ' def' → logprob: -9.376749992370605
    5. ' init' → logprob: -10.126749992370605
    6. '  ' → logprob: -11.501749992370605
    7. ' _' → logprob: -12.126749992370605
    8. ' ' → logprob: -12.501749992370605
    9. '_' → logprob: -12.751749992370605
    10. ' ‌' → logprob: -13.376749992370605

Token 66: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.226628895296017e-06
    2. 'nit' → logprob: -12.625007629394531
    3. 'ini' → logprob: -13.125007629394531
    4. ' init' → logprob: -13.375007629394531
    5. 'in' → logprob: -16.12500762939453
    6. ' ' → logprob: -16.87500762939453
    7. '   ' → logprob: -16.87500762939453
    8. 'int' → logprob: -17.50000762939453
    9. '  ' → logprob: -17.62500762939453
    10. 'inite' → logprob: -17.87500762939453

Token 67: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.015649991109967232
    2. '__' → logprob: -4.640649795532227
    3. '__(
' → logprob: -5.640649795532227
    4. '(' → logprob: -6.640649795532227
    5. '(self' → logprob: -7.765649795532227
    6. '<|end|>' → logprob: -8.140649795532227
    7. '__((' → logprob: -9.015649795532227
    8. '__(*' → logprob: -9.640649795532227
    9. '__('' → logprob: -10.265649795532227
    10. '__("' → logprob: -10.890649795532227

Token 68: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009119403548538685
    2. ' self' → logprob: -7.000911712646484
    3. 'name' → logprob: -15.250911712646484
    4. '(self' → logprob: -16.625911712646484
    5. '
' → logprob: -17.000911712646484
    6. '   ' → logprob: -17.125911712646484
    7. '       ' → logprob: -17.625911712646484
    8. '	self' → logprob: -17.625911712646484
    9. ' ' → logprob: -17.875911712646484
    10. 's' → logprob: -19.125911712646484

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00352084101177752
    2. ' ,' → logprob: -5.753520965576172
    3. 'self' → logprob: -8.628520965576172
    4. ',name' → logprob: -9.878520965576172
    5. '<|end|>' → logprob: -10.253520965576172
    6. ')' → logprob: -10.378520965576172
    7. ' self' → logprob: -11.253520965576172
    8. '(self' → logprob: -11.628520965576172
    9. ',self' → logprob: -12.128520965576172
    10. 'name' → logprob: -12.253520965576172

Token 70: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.1002582237124443
    2. ' name' → logprob: -2.3502581119537354
    3. 'self' → logprob: -10.475257873535156
    4. '   ' → logprob: -10.850257873535156
    5. ' self' → logprob: -13.225257873535156
    6. '       ' → logprob: -14.100257873535156
    7. ' ' → logprob: -14.850257873535156
    8. '	name' → logprob: -14.975257873535156
    9. '    ' → logprob: -15.600257873535156
    10. '  ' → logprob: -16.600257873535156

Token 71: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010288136079907417
    2. '):' → logprob: -4.635288238525391
    3. ':str' → logprob: -7.760288238525391
    4. ')' → logprob: -9.51028823852539
    5. ' :' → logprob: -10.88528823852539
    6. ' ):' → logprob: -12.01028823852539
    7. '):
' → logprob: -12.13528823852539
    8. ':int' → logprob: -14.38528823852539
    9. ''):' → logprob: -16.26028823852539
    10. '   ' → logprob: -16.38528823852539

Token 72: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4740777611732483
    2. ' str' → logprob: -0.9740777611732483
    3. ' ' → logprob: -15.724078178405762
    4. ')' → logprob: -16.099077224731445
    5. ' Union' → logprob: -16.099077224731445
    6. '	str' → logprob: -16.099077224731445
    7. '[str' → logprob: -16.349077224731445
    8. ' Optional' → logprob: -16.474077224731445
    9. 'Union' → logprob: -16.849077224731445
    10. 'Optional' → logprob: -17.099077224731445

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38733822107315063
    2. ')' → logprob: -1.1373381614685059
    3. '):
' → logprob: -7.887338161468506
    4. ':' → logprob: -9.387338638305664
    5. ')->' → logprob: -12.762338638305664
    6. ' ):' → logprob: -12.762338638305664
    7. ' )' → logprob: -13.887338638305664
    8. '):
' → logprob: -14.512338638305664
    9. '   ' → logprob: -15.637338638305664
    10. '):

' → logprob: -16.387338638305664

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017934665083885193
    2. 'self' → logprob: -6.376793384552002
    3. ' self' → logprob: -9.37679386138916
    4. '   ' → logprob: -12.25179386138916
    5. ')' → logprob: -14.00179386138916
    6. ' ' → logprob: -15.37679386138916
    7. '      ' → logprob: -15.50179386138916
    8. '	' → logprob: -16.126792907714844
    9. '```' → logprob: -16.126792907714844
    10. '           ' → logprob: -16.251792907714844

Token 75: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5327135920524597
    2. 'self' (adapté à ' self') → logprob: -1.4077136516571045
    3. ' self' → logprob: -1.7827136516571045
    4. '   ' → logprob: -9.407713890075684
    5. '	self' → logprob: -11.532713890075684
    6. ' ' → logprob: -11.907713890075684
    7. '           ' → logprob: -13.407713890075684
    8. '_self' → logprob: -13.782713890075684
    9. ' ' → logprob: -13.907713890075684
    10. '        
' → logprob: -14.282713890075684

Token 76: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.06197451800107956
    2. '.' → logprob: -2.81197452545166
    3. ' .' → logprob: -12.43697452545166
    4. ' name' → logprob: -13.81197452545166
    5. 'name' → logprob: -14.56197452545166
    6. '.Name' → logprob: -15.18697452545166
    7. ').' → logprob: -15.68697452545166
    8. ')' → logprob: -15.81197452545166
    9. '.user' → logprob: -15.81197452545166
    10. '.n' → logprob: -15.93697452545166

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142942667007446
    2. '=' → logprob: -1.7014293670654297
    3. ' ' → logprob: -11.07642936706543
    4. ' =)' → logprob: -15.45142936706543
    5. ')' → logprob: -15.70142936706543
    6. '.' → logprob: -16.45142936706543
    7. ' =
' → logprob: -16.45142936706543
    8. '=name' → logprob: -17.07642936706543
    9. ':' → logprob: -17.45142936706543
    10. '.=' → logprob: -17.57642936706543

Token 78: ' name' (ID: 1308)
  Prédit: ' name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.07888989895582199
    2. 'name' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.953889846801758
    4. ' ' → logprob: -17.078889846801758
    5. '	name' → logprob: -17.203889846801758
    6. 'nam' → logprob: -19.578889846801758
    7. '(name' → logprob: -19.953889846801758
    8. ' nam' → logprob: -20.578889846801758
    9. ''name' → logprob: -20.578889846801758
    10. '    ' → logprob: -20.828889846801758

Token 79: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04985804110765457
    2. 'def' → logprob: -3.0498580932617188
    3. ' def' → logprob: -7.299858093261719
    4. '<|end|>' → logprob: -8.549858093261719
    5. ')' → logprob: -8.924858093261719
    6. ' ' → logprob: -9.424858093261719
    7. '    ' → logprob: -9.674858093261719
    8. '    
' → logprob: -9.924858093261719
    9. '  ' → logprob: -10.549858093261719
    10. '       ' → logprob: -10.924858093261719

Token 81: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00162662158254534
    2. ' def' → logprob: -6.501626491546631
    3. '@property' → logprob: -9.126626968383789
    4. '   ' → logprob: -11.251626968383789
    5. '@' → logprob: -13.251626968383789
    6. ' ' → logprob: -14.626626968383789
    7. '```' → logprob: -15.876626968383789
    8. '    ' → logprob: -17.00162696838379
    9. '    
' → logprob: -17.25162696838379
    10. '	def' → logprob: -17.62662696838379

Token 82: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005312496796250343
    2. '__' → logprob: -5.380312442779541
    3. ' is' → logprob: -8.3803129196167
    4. '_repr' → logprob: -8.7553129196167
    5. '.__' → logprob: -9.0053129196167
    6. ' def' → logprob: -9.8803129196167
    7. 'repr' → logprob: -10.8803129196167
    8. '_' → logprob: -11.0053129196167
    9. ' repr' → logprob: -11.0053129196167
    10. ' _' → logprob: -11.1303129196167

Token 83: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.018227552995085716
    2. 'repr' → logprob: -4.268227577209473
    3. 'str' → logprob: -5.518227577209473
    4. 'init' → logprob: -10.268227577209473
    5. 'hash' → logprob: -11.893227577209473
    6. ' eq' → logprob: -14.768227577209473
    7. '_eq' → logprob: -15.018227577209473
    8. 'lt' → logprob: -15.393227577209473
    9. 'len' → logprob: -16.268226623535156
    10. 'iter' → logprob: -16.268226623535156

Token 84: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005256053060293198
    2. '__(' → logprob: -5.255256175994873
    3. '__('' → logprob: -11.755255699157715
    4. '__(
' → logprob: -12.505255699157715
    5. '__((' → logprob: -12.505255699157715
    6. '___' → logprob: -13.130255699157715
    7. '__.__' → logprob: -13.255255699157715
    8. '__(*' → logprob: -13.380255699157715
    9. '__("' → logprob: -14.755255699157715
    10. '__*/' → logprob: -15.005255699157715

Token 85: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001450187264708802
    2. 'other' → logprob: -9.625144958496094
    3. ' self' → logprob: -10.125144958496094
    4. ')' → logprob: -10.250144958496094
    5. '<|end|>' → logprob: -13.375144958496094
    6. ',' → logprob: -14.375144958496094
    7. '
' → logprob: -14.625144958496094
    8. '(self' → logprob: -15.125144958496094
    9. ' ' → logprob: -15.500144958496094
    10. ' other' → logprob: -16.375144958496094

Token 86: ',' (ID: 11)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4132867455482483
    2. ',' → logprob: -1.5382866859436035
    3. '__,' → logprob: -2.1632866859436035
    4. '__(' → logprob: -5.1632866859436035
    5. ' ,' → logprob: -6.7882866859436035
    6. '__,
' → logprob: -7.6632866859436035
    7. ',__' → logprob: -8.288287162780762
    8. ')' → logprob: -8.413287162780762
    9. '__((' → logprob: -8.913287162780762
    10. 'self' → logprob: -9.163287162780762

Token 87: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.1269284337759018
    2. ' other' → logprob: -2.1269283294677734
    3. 'Other' → logprob: -15.876928329467773
    4. '(other' → logprob: -15.876928329467773
    5. ' o' → logprob: -16.626928329467773
    6. 'o' → logprob: -17.001928329467773
    7. ' oth' → logprob: -17.376928329467773
    8. '_other' → logprob: -18.251928329467773
    9. 'self' → logprob: -18.376928329467773
    10. '.other' → logprob: -18.751928329467773

Token 88: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9144233465194702
    2. ' ):' → logprob: -1.2894233465194702
    3. ' )' → logprob: -1.7894233465194702
    4. ')' → logprob: -1.9144233465194702
    5. ':' → logprob: -4.78942346572876
    6. ' :' → logprob: -7.28942346572876
    7. ',' → logprob: -8.664422988891602
    8. ' }:' → logprob: -10.289422988891602
    9. '):
' → logprob: -10.539422988891602
    10. ' ):
' → logprob: -10.789422988891602

Token 89: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01956893876194954
    2. ' :' → logprob: -4.644568920135498
    3. ' ->' → logprob: -5.269568920135498
    4. ')' → logprob: -5.644568920135498
    5. '):' → logprob: -7.519568920135498
    6. '->' → logprob: -8.144569396972656
    7. ')->' → logprob: -9.519569396972656
    8. ',' → logprob: -10.269569396972656
    9. '(self' → logprob: -10.644569396972656
    10. ' )' → logprob: -10.769569396972656

Token 90: ' bool' (ID: 3792)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04126907140016556
    2. '<|end|>' → logprob: -3.916269063949585
    3. ' bool' → logprob: -4.291269302368164
    4. ' True' → logprob: -5.791269302368164
    5. '  ' → logprob: -6.666269302368164
    6. ' None' → logprob: -6.666269302368164
    7. 'bool' → logprob: -8.291269302368164
    8. ' ' → logprob: -9.041269302368164
    9. ' ```' → logprob: -9.166269302368164
    10. 'space' → logprob: -9.541269302368164

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001155697274953127
    2. ' :' → logprob: -6.876155853271484
    3. '):' → logprob: -9.376155853271484
    4. ':
' → logprob: -10.501155853271484
    5. ':**' → logprob: -12.876155853271484
    6. ':return' → logprob: -13.126155853271484
    7. ',' → logprob: -13.376155853271484
    8. ' ):' → logprob: -13.751155853271484
    9. ':def' → logprob: -14.251155853271484
    10. ')' → logprob: -14.626155853271484

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07599719613790512
    2. ' if' → logprob: -3.0759971141815186
    3. ' isinstance' → logprob: -3.9509971141815186
    4. 'if' → logprob: -5.575997352600098
    5. 'return' → logprob: -6.950997352600098
    6. ' return' → logprob: -7.450997352600098
    7. 'self' → logprob: -7.575997352600098
    8. 'is' → logprob: -7.950997352600098
    9. ' self' → logprob: -8.075997352600098
    10. ':' → logprob: -8.075997352600098

Token 93: ' if' (ID: 538)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.04787386953830719
    2. 'return' → logprob: -3.7978739738464355
    3. 'self' → logprob: -3.9228739738464355
    4. ' isinstance' → logprob: -5.5478739738464355
    5. 'other' → logprob: -8.422873497009277
    6. 'if' (adapté à ' if') → logprob: -8.422873497009277
    7. ' return' → logprob: -9.672873497009277
    8. '       ' → logprob: -10.297873497009277
    9. ' self' → logprob: -10.422873497009277
    10. 'not' → logprob: -10.672873497009277

Token 94: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.023291366174817085
    2. 'not' → logprob: -4.02329158782959
    3. ' isinstance' → logprob: -5.27329158782959
    4. '	not' → logprob: -14.02329158782959
    5. 'is' → logprob: -14.89829158782959
    6. ' self' → logprob: -15.89829158782959
    7. ' ' → logprob: -16.273290634155273
    8. '   ' → logprob: -17.023290634155273
    9. 'self' → logprob: -17.148290634155273
    10. '    ' → logprob: -18.023290634155273

Token 95: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.001170460251159966
    2. 'is' → logprob: -6.751170635223389
    3. ' hasattr' → logprob: -15.37617015838623
    4. ' is' → logprob: -17.251171112060547
    5. '(is' → logprob: -18.501171112060547
    6. 'Is' → logprob: -19.626171112060547
    7. ' ' → logprob: -19.751171112060547
    8. '_is' → logprob: -20.876171112060547
    9. '
' → logprob: -20.876171112060547
    10. '<|end|>' → logprob: -21.001171112060547

Token 96: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0013377433642745018
    2. '(' → logprob: -6.62633752822876
    3. 'other' → logprob: -11.626338005065918
    4. ' other' → logprob: -13.751338005065918
    5. ' (' → logprob: -14.126338005065918
    6. '(o' → logprob: -14.376338005065918
    7. '<|end|>' → logprob: -15.751338005065918
    8. '(object' → logprob: -16.2513370513916
    9. '(
' → logprob: -16.3763370513916
    10. '.other' → logprob: -17.5013370513916

Token 97: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0016916078748181462
    2. 'other' → logprob: -7.001691818237305
    3. ',' → logprob: -7.251691818237305
    4. '(' → logprob: -10.126691818237305
    5. ' other' → logprob: -10.501691818237305
    6. ' (' → logprob: -13.126691818237305
    7. ' ,' → logprob: -14.126691818237305
    8. '(self' → logprob: -14.876691818237305
    9. 'Other' → logprob: -15.251691818237305
    10. '.other' → logprob: -16.876691818237305

Token 98: ' Path' (ID: 14027)
  Prédit: ' Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Path' → logprob: -0.07889033854007721
    2. 'Path' → logprob: -2.578890323638916
    3. '	Path' → logprob: -15.078890800476074
    4. 'self' → logprob: -15.453890800476074
    5. ' self' → logprob: -16.578889846801758
    6. '(Path' → logprob: -18.203889846801758
    7. ' ' → logprob: -18.203889846801758
    8. '_Path' → logprob: -19.328889846801758
    9. '@Path' → logprob: -19.453889846801758
    10. '<Path' → logprob: -19.703889846801758

Token 99: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.1472419600977446e-06
    2. 'Seg' → logprob: -13.875000953674316
    3. ' Segment' → logprob: -15.875000953674316
    4. '_segment' → logprob: -17.625001907348633
    5. 'segment' → logprob: -17.875001907348633
    6. 'Segments' → logprob: -18.750001907348633
    7. 'egment' → logprob: -21.000001907348633
    8. '_SEG' → logprob: -21.125001907348633
    9. ' segment' → logprob: -21.250001907348633
    10. 'Path' → logprob: -21.500001907348633

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005304550752043724
    2. '):
' → logprob: -5.255304336547852
    3. ')' → logprob: -9.755304336547852
    4. ' ):' → logprob: -11.880304336547852
    5. '):
' → logprob: -12.755304336547852
    6. '):

' → logprob: -13.255304336547852
    7. ':' → logprob: -13.755304336547852
    8. ' ' → logprob: -16.63030433654785
    9. '}:' → logprob: -17.50530433654785
    10. ' ):
' → logprob: -18.00530433654785

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018426289781928062
    2. 'return' → logprob: -5.018426418304443
    3. ':' → logprob: -5.268426418304443
    4. ' return' → logprob: -5.768426418304443
    5. ':return' → logprob: -5.768426418304443
    6. ':
' → logprob: -9.518425941467285
    7. ' or' → logprob: -10.018425941467285
    8. '               ' → logprob: -10.393425941467285
    9. '            ' → logprob: -10.518425941467285
    10. '<|end|>' → logprob: -11.768425941467285

Token 102: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.039756033569574356
    2. ' return' → logprob: -3.5397560596466064
    3. '           ' → logprob: -4.789755821228027
    4. '       ' → logprob: -6.539755821228027
    5. '   ' → logprob: -9.789755821228027
    6. '
' → logprob: -10.164755821228027
    7. '    ' → logprob: -10.789755821228027
    8. '        ' → logprob: -11.039755821228027
    9. ':return' → logprob: -11.039755821228027
    10. '```' → logprob: -11.414755821228027

Token 103: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0373995378613472
    2. 'Not' → logprob: -3.5373995304107666
    3. ' False' → logprob: -5.037399768829346
    4. ' Not' → logprob: -6.787399768829346
    5. '   ' → logprob: -14.287399291992188
    6. '(False' → logprob: -15.287399291992188
    7. '    ' → logprob: -15.662399291992188
    8. '_Not' → logprob: -15.912399291992188
    9. '  ' → logprob: -16.037399291992188
    10. '```' → logprob: -16.912399291992188

Token 104: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02868107706308365
    2. '
' → logprob: -4.15368127822876
    3. '        ' → logprob: -5.27868127822876
    4. '        
' → logprob: -6.40368127822876
    5. '    ' → logprob: -6.52868127822876
    6. '<|end|>' → logprob: -6.90368127822876
    7. ' 
' → logprob: -7.27868127822876
    8. '   ' → logprob: -7.77868127822876
    9. '\n' → logprob: -7.77868127822876
    10. ' ' → logprob: -8.278680801391602

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004798799753189087
    2. ' return' → logprob: -6.254798889160156
    3. 'return' → logprob: -7.004798889160156
    4. '   ' → logprob: -7.379798889160156
    5. '    ' → logprob: -7.754798889160156
    6. '        
' → logprob: -7.879798889160156
    7. '        ' → logprob: -8.004798889160156
    8. '      ' → logprob: -9.879798889160156
    9. '           ' → logprob: -10.629798889160156
    10. '
' → logprob: -10.754798889160156

Token 106: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.036665137857198715
    2. ' return' → logprob: -3.911665201187134
    3. '       ' → logprob: -4.161664962768555
    4. ':return' → logprob: -9.036664962768555
    5. '   ' → logprob: -9.161664962768555
    6. '
' → logprob: -9.161664962768555
    7. '	return' → logprob: -10.161664962768555
    8. '<|end|>' → logprob: -11.161664962768555
    9. ')return' → logprob: -11.786664962768555
    10. '{return' → logprob: -12.661664962768555

Token 107: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687145709991455
    2. ' self' → logprob: -1.1368714570999146
    3. ' ' → logprob: -15.886871337890625
    4. '(self' → logprob: -16.386871337890625
    5. ' ' → logprob: -16.761871337890625
    6. '	self' → logprob: -16.886871337890625
    7. '_self' → logprob: -17.886871337890625
    8. '$self' → logprob: -18.136871337890625
    9. 'Self' → logprob: -18.261871337890625
    10. '```' → logprob: -18.511871337890625

Token 108: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.0005367091507650912
    2. '.' → logprob: -7.625536918640137
    3. ' .' → logprob: -10.250536918640137
    4. '.value' → logprob: -11.750536918640137
    5. '.code' → logprob: -13.500536918640137
    6. ').' → logprob: -14.000536918640137
    7. '.user' → logprob: -14.125536918640137
    8. '.status' → logprob: -15.125536918640137
    9. '.type' → logprob: -15.625536918640137
    10. '.id' → logprob: -15.875536918640137

Token 109: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16022981703281403
    2. '==' → logprob: -1.9102298021316528
    3. '=' → logprob: -12.285229682922363
    4. ' =' → logprob: -15.160229682922363
    5. ' ' → logprob: -15.160229682922363
    6. '==
' → logprob: -15.660229682922363
    7. '===' → logprob: -16.03523063659668
    8. ')==' → logprob: -17.03523063659668
    9. ' ==
' → logprob: -17.03523063659668
    10. '()==' → logprob: -17.66023063659668

Token 110: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.16022463142871857
    2. 'other' → logprob: -1.9102246761322021
    3. '(other' → logprob: -15.285224914550781
    4. '.other' → logprob: -15.910224914550781
    5. ' ' → logprob: -17.53522491455078
    6. 'Other' → logprob: -17.66022491455078
    7. '_other' → logprob: -18.28522491455078
    8. ' other's' → logprob: -19.66022491455078
    9. ' oth' → logprob: -19.91022491455078
    10. ' ' → logprob: -21.16022491455078

Token 111: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.12693293392658234
    2. '.' → logprob: -2.1269328594207764
    3. '.
' → logprob: -13.626933097839355
    4. ' .' → logprob: -13.626933097839355
    5. 'name' → logprob: -14.376933097839355
    6. ').' → logprob: -14.751933097839355
    7. '.

' → logprob: -15.626933097839355
    8. '.n' → logprob: -15.751933097839355
    9. '.code' → logprob: -15.751933097839355
    10. '.user' → logprob: -16.00193214416504

Token 112: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07897891104221344
    2. '    
' → logprob: -2.703979015350342
    3. '<|end|>' → logprob: -6.078979015350342
    4. '
' → logprob: -6.203979015350342
    5. '    ' → logprob: -6.703979015350342
    6. ' 
' → logprob: -6.703979015350342
    7. ' ' → logprob: -7.328979015350342
    8. 'def' → logprob: -7.578979015350342
    9. '  ' → logprob: -7.953979015350342
    10. '  
' → logprob: -8.453978538513184

Token 114: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0445127372804563e-05
    2. ' def' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.50001049041748
    4. 'd' → logprob: -18.625009536743164
    5. ' ' → logprob: -19.750009536743164
    6. 'de' → logprob: -20.000009536743164
    7. '	def' → logprob: -20.375009536743164
    8. 'ndef' → logprob: -21.625009536743164
    9. '    
' → logprob: -21.750009536743164
    10. ':def' → logprob: -21.750009536743164

Token 115: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.575939953327179
    2. '__' → logprob: -0.825939953327179
    3. 'def' → logprob: -15.325940132141113
    4. '.__' → logprob: -15.575940132141113
    5. ' ' → logprob: -16.950939178466797
    6. ' ' → logprob: -17.575939178466797
    7. ' def' → logprob: -18.325939178466797
    8. '   ' → logprob: -18.450939178466797
    9. '/__' → logprob: -18.700939178466797
    10. 'hash' → logprob: -19.075939178466797

Token 116: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.02060016244649887
    2. 'lt' → logprob: -4.395600318908691
    3. 'repr' → logprob: -4.895600318908691
    4. 'str' → logprob: -7.895600318908691
    5. 'ne' → logprob: -8.770600318908691
    6. 'eq' → logprob: -10.770600318908691
    7. 'gt' → logprob: -11.770600318908691
    8. 'len' → logprob: -12.020600318908691
    9. ' hash' → logprob: -12.770600318908691
    10. '```' → logprob: -12.895600318908691

Token 117: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16220815479755402
    2. '(self' → logprob: -1.9122081995010376
    3. ' (' → logprob: -6.912208080291748
    4. '<|end|>' → logprob: -7.537208080291748
    5. '(
' → logprob: -8.287208557128906
    6. '__(' → logprob: -10.162208557128906
    7. ' ' → logprob: -10.162208557128906
    8. ')' → logprob: -10.287208557128906
    9. ')(' → logprob: -10.662208557128906
    10. '(

' → logprob: -11.662208557128906

Token 118: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001175343873910606
    2. ' self' → logprob: -6.751175403594971
    3. ')' → logprob: -12.376174926757812
    4. '(self' → logprob: -14.251174926757812
    5. ' ' → logprob: -15.251174926757812
    6. '   ' → logprob: -17.001174926757812
    7. '<|end|>' → logprob: -17.251174926757812
    8. '	self' → logprob: -17.876174926757812
    9. ' )' → logprob: -18.001174926757812
    10. '  ' → logprob: -18.626174926757812

Token 119: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6497403383255005
    2. ')' → logprob: -0.7747403383255005
    3. '):
' → logprob: -4.149740219116211
    4. ' )' → logprob: -8.149740219116211
    5. ' ):' → logprob: -8.274740219116211
    6. ',' → logprob: -8.274740219116211
    7. '.name' → logprob: -8.649740219116211
    8. '.' → logprob: -9.524740219116211
    9. '):

' → logprob: -10.649740219116211
    10. ').__' → logprob: -10.774740219116211

Token 120: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05027530714869499
    2. '(' → logprob: -3.3002753257751465
    3. ':' → logprob: -4.6752753257751465
    4. '(
' → logprob: -7.0502753257751465
    5. '       ' → logprob: -7.3002753257751465
    6. 'self' → logprob: -7.6752753257751465
    7. '   ' → logprob: -7.8002753257751465
    8. ':
' → logprob: -9.300274848937988
    9. ' ->' → logprob: -9.550274848937988
    10. '():' → logprob: -10.300274848937988

Token 121: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0485873706638813
    2. ' int' → logprob: -3.0485873222351074
    3. '[int' → logprob: -19.423587799072266
    4. '(int' → logprob: -19.548587799072266
    5. '	int' → logprob: -19.548587799072266
    6. ':int' → logprob: -19.548587799072266
    7. '   ' → logprob: -20.048587799072266
    8. ' ' → logprob: -20.423587799072266
    9. '<int' → logprob: -21.173587799072266
    10. 'hash' → logprob: -21.298587799072266

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009203928639180958
    2. ':
' → logprob: -7.000920295715332
    3. ':return' → logprob: -12.500920295715332
    4. '():' → logprob: -13.125920295715332
    5. ' :' → logprob: -13.625920295715332
    6. '):' → logprob: -14.125920295715332
    7. '   ' → logprob: -15.250920295715332
    8. ':

' → logprob: -15.250920295715332
    9. '       ' → logprob: -15.625920295715332
    10. '():
' → logprob: -16.00092124938965

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002111597452312708
    2. ' return' → logprob: -6.377111434936523
    3. 'return' → logprob: -7.877111434936523
    4. '   ' → logprob: -11.127111434936523
    5. ' hash' → logprob: -11.627111434936523
    6. '
' → logprob: -13.252111434936523
    7. 'hash' → logprob: -13.252111434936523
    8. '      ' → logprob: -13.752111434936523
    9. '        
' → logprob: -13.877111434936523
    10. '           ' → logprob: -15.127111434936523

Token 124: ' return' (ID: 622)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.20341402292251587
    2. 'return' (adapté à ' return') → logprob: -1.703413963317871
    3. ' hash' → logprob: -6.453413963317871
    4. ' return' → logprob: -8.203413963317871
    5. '       ' → logprob: -9.453413963317871
    6. '   ' → logprob: -9.578413963317871
    7. '
' → logprob: -13.453413963317871
    8. '           ' → logprob: -15.453413963317871
    9. '        
' → logprob: -15.703413963317871
    10. '```' → logprob: -16.453414916992188

Token 125: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.3868717551231384
    2. ' hash' → logprob: -1.1368718147277832
    3. '	hash' → logprob: -14.761871337890625
    4. '   ' → logprob: -16.261871337890625
    5. '(hash' → logprob: -16.261871337890625
    6. '_hash' → logprob: -17.136871337890625
    7. '.hash' → logprob: -17.386871337890625
    8. ' ' → logprob: -18.011871337890625
    9. 'Hash' → logprob: -18.011871337890625
    10. ' self' → logprob: -18.261871337890625

Token 126: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.50001049041748
    3. 'self' → logprob: -17.000009536743164
    4. ' (' → logprob: -17.375009536743164
    5. '((' → logprob: -17.875009536743164
    6. '(s' → logprob: -19.875009536743164
    7. '(
' → logprob: -20.250009536743164
    8. '(this' → logprob: -20.375009536743164
    9. ' self' → logprob: -20.750009536743164
    10. '(sel' → logprob: -21.500009536743164

Token 127: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -2.6537622034084052e-05
    2. ').' → logprob: -11.25002670288086
    3. ' .' → logprob: -12.12502670288086
    4. '.' → logprob: -12.50002670288086
    5. '.self' → logprob: -12.75002670288086
    6. 'self' → logprob: -14.87502670288086
    7. '(self' → logprob: -15.12502670288086
    8. '.code' → logprob: -15.37502670288086
    9. '.path' → logprob: -15.62502670288086
    10. ')' → logprob: -15.75002670288086

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. ' )' → logprob: -12.000009536743164
    3. ')
' → logprob: -13.000009536743164
    4. '   ' → logprob: -14.750009536743164
    5. '}' → logprob: -14.875009536743164
    6. '<|end|>' → logprob: -15.125009536743164
    7. ')return' → logprob: -16.625009536743164
    8. ' ' → logprob: -17.875009536743164
    9. ')

' → logprob: -17.875009536743164
    10. '))' → logprob: -18.375009536743164

Token 129: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7910510301589966
    2. '    
' → logprob: -1.5410510301589966
    3. '<|end|>' → logprob: -1.6660510301589966
    4. '   ' → logprob: -2.041050910949707
    5. '\n' → logprob: -5.541050910949707
    6. ' 
' → logprob: -5.916050910949707
    7. '  
' → logprob: -6.041050910949707
    8. '<|end|>' → logprob: -6.291050910949707
    9. '   
' → logprob: -7.416050910949707
    10. ' ' → logprob: -7.541050910949707

Token 130: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0790046826004982
    2. '   ' → logprob: -2.5790047645568848
    3. ' def' → logprob: -9.204004287719727
    4. '@property' → logprob: -12.204004287719727
    5. '    
' → logprob: -12.579004287719727
    6. '@' → logprob: -12.954004287719727
    7. ' ' → logprob: -13.704004287719727
    8. '	def' → logprob: -13.829004287719727
    9. '@dat' → logprob: -15.079004287719727
    10. '  ' → logprob: -15.329004287719727

Token 131: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000680861237924546
    2. '@property' → logprob: -7.375680923461914
    3. ' def' → logprob: -10.250680923461914
    4. '   ' → logprob: -11.000680923461914
    5. '    
' → logprob: -13.375680923461914
    6. '@' → logprob: -14.750680923461914
    7. '@dat' → logprob: -16.125680923461914
    8. 'property' → logprob: -16.250680923461914
    9. '
' → logprob: -16.625680923461914
    10. ' ' → logprob: -16.875680923461914

Token 132: ' is' (ID: 382)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0008082019630819559
    2. '__' → logprob: -7.625808238983154
    3. ' str' → logprob: -8.500807762145996
    4. ' ' → logprob: -10.125807762145996
    5. ' def' → logprob: -10.375807762145996
    6. ' ' → logprob: -11.125807762145996
    7. '_repr' → logprob: -11.375807762145996
    8. 'repr' → logprob: -12.125807762145996
    9. ' _' → logprob: -12.500807762145996
    10. '_str' → logprob: -12.750807762145996

Token 133: '_current' (ID: 23981)
  Prédit: '_dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dot' → logprob: -0.9483131170272827
    2. '_current' → logprob: -1.1983131170272827
    3. '_special' → logprob: -1.1983131170272827
    4. '_' → logprob: -5.198313236236572
    5. '_absolute' → logprob: -6.323313236236572
    6. '_normal' → logprob: -8.198312759399414
    7. '_root' → logprob: -8.323312759399414
    8. '_relative' → logprob: -8.323312759399414
    9. 'dot' → logprob: -8.573312759399414
    10. '_self' → logprob: -9.448312759399414

Token 134: '_dir' (ID: 9526)
  Prédit: '_directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_directory' → logprob: -0.7656435966491699
    2. '(' → logprob: -1.01564359664917
    3. '_dir' → logprob: -2.51564359664917
    4. '(self' → logprob: -3.14064359664917
    5. '()' → logprob: -3.26564359664917
    6. 'directory' → logprob: -4.89064359664917
    7. 'dir' → logprob: -6.89064359664917
    8. '_segment' → logprob: -7.26564359664917
    9. '('.')' → logprob: -8.265644073486328
    10. '_' → logprob: -8.890644073486328

Token 135: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3417254090309143
    2. '(self' → logprob: -1.3417253494262695
    3. '(' → logprob: -3.5917253494262695
    4. 'self' → logprob: -8.96672534942627
    5. '_segment' → logprob: -9.59172534942627
    6. ' ()' → logprob: -10.09172534942627
    7. '():' → logprob: -10.34172534942627
    8. '(
' → logprob: -10.71672534942627
    9. 'segment' → logprob: -10.71672534942627
    10. '('.')' → logprob: -10.71672534942627

Token 136: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2117706835269928
    2. ')' → logprob: -1.8367706537246704
    3. '()' → logprob: -4.086770534515381
    4. 'self' → logprob: -5.336770534515381
    5. '():' → logprob: -5.336770534515381
    6. '(self' → logprob: -6.336770534515381
    7. '):
' → logprob: -6.461770534515381
    8. '(' → logprob: -6.961770534515381
    9. ' ):' → logprob: -7.961770534515381
    10. '())' → logprob: -8.586771011352539

Token 137: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011586836539208889
    2. 'self' → logprob: -4.511586666107178
    3. ')' → logprob: -8.511587142944336
    4. '()' → logprob: -9.261587142944336
    5. '(' → logprob: -9.761587142944336
    6. ' self' → logprob: -9.761587142944336
    7. ':' → logprob: -10.011587142944336
    8. '->' → logprob: -10.261587142944336
    9. '():' → logprob: -11.011587142944336
    10. ' ->' → logprob: -11.136587142944336

Token 138: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.11287330836057663
    2. '()' → logprob: -2.6128733158111572
    3. ' bool' → logprob: -3.4878733158111572
    4. 'self' → logprob: -7.112873077392578
    5. '(bool' → logprob: -7.237873077392578
    6. ' ()' → logprob: -7.862873077392578
    7. 'str' → logprob: -7.987873077392578
    8. ' ' → logprob: -8.612873077392578
    9. ')' → logprob: -9.112873077392578
    10. '(' → logprob: -9.612873077392578

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12218917906284332
    2. '():' → logprob: -2.6221892833709717
    3. '(self' → logprob: -3.6221892833709717
    4. '(' → logprob: -4.997189044952393
    5. ':
' → logprob: -5.247189044952393
    6. 'self' → logprob: -6.622189044952393
    7. '       ' → logprob: -7.497189044952393
    8. '():
' → logprob: -7.622189044952393
    9. '()' → logprob: -8.12218952178955
    10. '(
' → logprob: -8.49718952178955

Token 140: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5046615600585938
    2. '       ' → logprob: -1.0046615600585938
    3. ' return' → logprob: -3.5046615600585938
    4. 'self' → logprob: -9.879661560058594
    5. '   ' → logprob: -11.504661560058594
    6. '	return' → logprob: -14.129661560058594
    7. ' self' → logprob: -14.379661560058594
    8. ':return' → logprob: -14.379661560058594
    9. 'Return' → logprob: -15.504661560058594
    10. '{return' → logprob: -15.629661560058594

Token 141: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011977284448221326
    2. ' return' → logprob: -6.751197814941406
    3. '       ' → logprob: -10.501197814941406
    4. '   ' → logprob: -17.626197814941406
    5. 'self' → logprob: -17.626197814941406
    6. '
' → logprob: -17.876197814941406
    7. '	return' → logprob: -18.251197814941406
    8. ':return' → logprob: -20.751197814941406
    9. '{return' → logprob: -21.376197814941406
    10. '```' → logprob: -21.751197814941406

Token 142: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07888978719711304
    2. ' self' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.453889846801758
    4. '(self' → logprob: -18.328889846801758
    5. '	self' → logprob: -18.953889846801758
    6. '  ' → logprob: -20.453889846801758
    7. '   ' → logprob: -20.703889846801758
    8. ' ' → logprob: -20.828889846801758
    9. 'Self' → logprob: -20.828889846801758
    10. '[self' → logprob: -21.328889846801758

Token 143: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.0007110013975761831
    2. '.' → logprob: -7.250710964202881
    3. ' .' → logprob: -14.625711441040039
    4. '.value' → logprob: -15.125711441040039
    5. '.code' → logprob: -16.12571144104004
    6. '.user' → logprob: -16.50071144104004
    7. 'name' → logprob: -16.75071144104004
    8. '.status' → logprob: -16.75071144104004
    9. '.n' → logprob: -17.25071144104004
    10. '.Name' → logprob: -17.37571144104004

Token 144: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2520453631877899
    2. ' ==' → logprob: -1.5020453929901123
    3. ''.' → logprob: -9.627045631408691
    4. '.' → logprob: -10.377045631408691
    5. '=' → logprob: -11.752045631408691
    6. '"."' → logprob: -12.502045631408691
    7. '=='' → logprob: -13.252045631408691
    8. '".' → logprob: -13.627045631408691
    9. '===' → logprob: -14.002045631408691
    10. ' ' → logprob: -14.127045631408691

Token 145: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.04984602332115173
    2. '"."' → logprob: -3.0498459339141846
    3. '".' → logprob: -7.299846172332764
    4. ' '.'' → logprob: -7.674846172332764
    5. ' "."' → logprob: -9.299845695495605
    6. '"' → logprob: -10.674845695495605
    7. '.' → logprob: -13.424845695495605
    8. ''' → logprob: -13.924845695495605
    9. '('.')' → logprob: -14.549845695495605
    10. '`.`' → logprob: -16.424846649169922

Token 146: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00010568885772954673
    2. ''
' → logprob: -9.875105857849121
    3. '"' → logprob: -10.125105857849121
    4. '"'' → logprob: -11.500105857849121
    5. ' '' → logprob: -13.875105857849121
    6. ''"' → logprob: -14.125105857849121
    7. ')'' → logprob: -14.250105857849121
    8. '')' → logprob: -14.625105857849121
    9. ''

' → logprob: -14.625105857849121
    10. ''''' → logprob: -15.000105857849121

Token 147: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.12691006064414978
    2. '   ' → logprob: -2.3769099712371826
    3. '<|end|>' → logprob: -4.251910209655762
    4. '
' → logprob: -4.501910209655762
    5. ' 
' → logprob: -7.876910209655762
    6. '        
' → logprob: -8.376910209655762
    7. '    
    
' → logprob: -9.126910209655762
    8. '<|end|>' → logprob: -9.751910209655762
    9. '  
' → logprob: -9.876910209655762
    10. '    ' → logprob: -10.126910209655762

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039919656701385975
    2. 'def' → logprob: -5.628992080688477
    3. '    
' → logprob: -8.378992080688477
    4. ' def' → logprob: -8.753992080688477
    5. '
' → logprob: -12.878992080688477
    6. '  ' → logprob: -14.503992080688477
    7. '    ' → logprob: -14.878992080688477
    8. ' ' → logprob: -15.503992080688477
    9. '	def' → logprob: -15.753992080688477
    10. '        
' → logprob: -15.878992080688477

Token 149: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00030721822986379266
    2. '   ' → logprob: -8.250307083129883
    3. ' def' → logprob: -10.000307083129883
    4. '    
' → logprob: -14.750307083129883
    5. ' ' → logprob: -16.375307083129883
    6. '	def' → logprob: -17.125307083129883
    7. '  ' → logprob: -17.250307083129883
    8. '
' → logprob: -19.125307083129883
    9. 'de' → logprob: -19.625307083129883
    10. '        
' → logprob: -19.625307083129883

Token 150: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.24555404484272003
    2. 'def' → logprob: -2.245553970336914
    3. ' is' → logprob: -2.370553970336914
    4. ' def' → logprob: -3.995553970336914
    5. '
' → logprob: -11.245553970336914
    6. '   ' → logprob: -12.245553970336914
    7. '.is' → logprob: -12.495553970336914
    8. ' ' → logprob: -12.620553970336914
    9. '_is' → logprob: -13.370553970336914
    10. 's' → logprob: -13.745553970336914

Token 151: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.00018280261429026723
    2. 'parent' → logprob: -9.50018310546875
    3. '_up' → logprob: -9.75018310546875
    4. '_' → logprob: -10.75018310546875
    5. '_special' → logprob: -11.00018310546875
    6. '_double' → logprob: -12.87518310546875
    7. '_previous' → logprob: -13.62518310546875
    8. '_p' → logprob: -13.75018310546875
    9. '_prev' → logprob: -14.00018310546875
    10. '_par' → logprob: -14.00018310546875

Token 152: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -2.4034345187828876e-05
    2. '_' → logprob: -11.25002384185791
    3. '_directory' → logprob: -12.62502384185791
    4. '_ref' → logprob: -13.25002384185791
    5. '_div' → logprob: -14.12502384185791
    6. '_segment' → logprob: -14.12502384185791
    7. '_d' → logprob: -14.37502384185791
    8. 'dir' → logprob: -14.50002384185791
    9. '_folder' → logprob: -15.00002384185791
    10. '_dot' → logprob: -15.12502384185791

Token 153: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011224505578866228
    2. '(' → logprob: -9.375112533569336
    3. '()' → logprob: -11.250112533569336
    4. 'self' → logprob: -11.375112533569336
    5. ' (' → logprob: -14.125112533569336
    6. '(s' → logprob: -14.500112533569336
    7. '(
' → logprob: -14.875112533569336
    8. ')' → logprob: -15.000112533569336
    9. 's' → logprob: -15.375112533569336
    10. '   ' → logprob: -15.375112533569336

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000492268183734268
    2. ' )' → logprob: -8.000492095947266
    3. '()' → logprob: -9.000492095947266
    4. '   ' → logprob: -11.250492095947266
    5. ' ' → logprob: -11.625492095947266
    6. '())' → logprob: -12.250492095947266
    7. '):
' → logprob: -13.750492095947266
    8. ')return' → logprob: -13.875492095947266
    9. ' ()' → logprob: -14.125492095947266
    10. '):' → logprob: -14.250492095947266

Token 155: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16078782081604004
    2. '(self' → logprob: -1.91078782081604
    3. '(' → logprob: -7.785787582397461
    4. ' ()' → logprob: -9.785787582397461
    5. ')' → logprob: -10.285787582397461
    6. 'self' → logprob: -11.410787582397461
    7. '()->' → logprob: -11.410787582397461
    8. '()==' → logprob: -11.785787582397461
    9. 'def' → logprob: -12.035787582397461
    10. '())' → logprob: -12.035787582397461

Token 156: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.43236494064331055
    2. ''' → logprob: -2.0573649406433105
    3. ' bool' → logprob: -2.1823649406433105
    4. ' '..' → logprob: -2.3073649406433105
    5. '..' → logprob: -5.5573649406433105
    6. 'True' → logprob: -6.4323649406433105
    7. ' ' → logprob: -6.5573649406433105
    8. '(bool' → logprob: -7.5573649406433105
    9. '  ' → logprob: -7.9323649406433105
    10. ' True' → logprob: -7.9323649406433105

Token 157: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.455545574426651
    2. '():' → logprob: -1.4555455446243286
    3. '(self' → logprob: -2.080545663833618
    4. '(' → logprob: -5.705545425415039
    5. ':' → logprob: -5.955545425415039
    6. '():
' → logprob: -6.705545425415039
    7. 'self' → logprob: -7.830545425415039
    8. ')' → logprob: -9.080545425415039
    9. ' self' → logprob: -10.705545425415039
    10. '(
' → logprob: -10.830545425415039

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9469698667526245
    2. 'return' → logprob: -1.1969698667526245
    3. ' return' → logprob: -1.1969698667526245
    4. ' self' → logprob: -5.446969985961914
    5. 'self' → logprob: -5.696969985961914
    6. '   ' → logprob: -9.196969985961914
    7. ' ' → logprob: -9.821969985961914
    8. '	return' → logprob: -11.321969985961914
    9. '(self' → logprob: -11.571969985961914
    10. ' ' → logprob: -11.571969985961914

Token 159: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0025369017384946346
    2. ' return' → logprob: -6.502536773681641
    3. 'self' → logprob: -7.002536773681641
    4. '       ' → logprob: -9.00253677368164
    5. ' self' → logprob: -14.12753677368164
    6. '   ' → logprob: -14.37753677368164
    7. '     ' → logprob: -17.75253677368164
    8. '	return' → logprob: -17.87753677368164
    9. '    ' → logprob: -18.00253677368164
    10. '      ' → logprob: -18.62753677368164

Token 160: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47625449299812317
    2. ' self' → logprob: -0.9762544631958008
    3. ' '..' → logprob: -6.476254463195801
    4. ''' → logprob: -7.476254463195801
    5. ' ' → logprob: -10.2262544631958
    6. '..' → logprob: -10.7262544631958
    7. '  ' → logprob: -12.3512544631958
    8. '	self' → logprob: -12.8512544631958
    9. '(self' → logprob: -13.2262544631958
    10. '   ' → logprob: -14.3512544631958

Token 161: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -9.484132169745862e-05
    2. 'name' → logprob: -9.750094413757324
    3. '.' → logprob: -10.875094413757324
    4. '..' → logprob: -11.375094413757324
    5. ' .' → logprob: -12.125094413757324
    6. '==' → logprob: -14.750094413757324
    7. ' name' → logprob: -16.25009536743164
    8. ' ==' → logprob: -16.50009536743164
    9. ''name' → logprob: -16.62509536743164
    10. '.parent' → logprob: -17.62509536743164

Token 162: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18028050661087036
    2. '==' → logprob: -1.8052804470062256
    3. '=='' → logprob: -7.680280685424805
    4. '..' → logprob: -10.430280685424805
    5. ''' → logprob: -11.055280685424805
    6. '=' → logprob: -11.055280685424805
    7. '=="' → logprob: -12.805280685424805
    8. ' ' → logprob: -12.930280685424805
    9. '==
' → logprob: -13.180280685424805
    10. '"' → logprob: -13.305280685424805

Token 163: ' '..' (ID: 107414)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005749551928602159
    2. ' '..' → logprob: -7.500575065612793
    3. '..' → logprob: -10.875575065612793
    4. '"' → logprob: -13.125575065612793
    5. '"..' → logprob: -14.250575065612793
    6. ''.' → logprob: -15.625575065612793
    7. ' ' → logprob: -16.750574111938477
    8. '('' → logprob: -16.875574111938477
    9. ' '' → logprob: -16.875574111938477
    10. '  ' → logprob: -17.875574111938477

Token 164: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.297462171758525e-05
    2. ''
' → logprob: -11.125033378601074
    3. '"' → logprob: -11.750033378601074
    4. '')' → logprob: -12.250033378601074
    5. '<|end|>' → logprob: -12.250033378601074
    6. ')' → logprob: -16.000032424926758
    7. ' '' → logprob: -16.000032424926758
    8. ''''' → logprob: -16.250032424926758
    9. ''"' → logprob: -16.625032424926758
    10. ''

' → logprob: -16.875032424926758

Token 165: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.40817299485206604
    2. '   ' → logprob: -1.1581729650497437
    3. '    
' → logprob: -4.783173084259033
    4. '<|end|>' → logprob: -5.283173084259033
    5. ' ' → logprob: -6.158173084259033
    6. ' def' → logprob: -6.533173084259033
    7. '    ' → logprob: -7.408173084259033
    8. '#' → logprob: -7.658173084259033
    9. '
' → logprob: -7.658173084259033
    10. '  ' → logprob: -7.783173084259033

Token 167: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1656724065542221
    2. ' def' → logprob: -2.7906723022460938
    3. '__' → logprob: -3.1656723022460938
    4. ' str' → logprob: -3.5406723022460938
    5. 'def' → logprob: -4.540672302246094
    6. 'str' → logprob: -5.415672302246094
    7. 'repr' → logprob: -5.540672302246094
    8. ' repr' → logprob: -7.915672302246094
    9. '_repr' → logprob: -8.040672302246094
    10. ' ' → logprob: -8.165672302246094

Token 168: 'repr' (ID: 67002)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.023245712742209435
    2. 'repr' → logprob: -3.7732458114624023
    3. 'lt' → logprob: -16.148244857788086
    4. ' str' → logprob: -17.773244857788086
    5. 're' → logprob: -18.648244857788086
    6. 'stri' → logprob: -18.898244857788086
    7. 'st' → logprob: -19.148244857788086
    8. 'rep' → logprob: -19.523244857788086
    9. '_str' → logprob: -19.648244857788086
    10. 's' → logprob: -19.773244857788086

Token 169: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0605650432407856
    2. '__' → logprob: -2.9355649948120117
    3. '__('' → logprob: -5.435564994812012
    4. '__(
' → logprob: -6.810564994812012
    5. '__("' → logprob: -9.060564994812012
    6. '(' → logprob: -10.185564994812012
    7. '__((' → logprob: -11.060564994812012
    8. '___' → logprob: -11.185564994812012
    9. '(self' → logprob: -12.060564994812012
    10. '_' → logprob: -12.310564994812012

Token 170: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007236333331093192
    2. ')' → logprob: -7.250723838806152
    3. ' self' → logprob: -11.250723838806152
    4. '(self' → logprob: -14.625723838806152
    5. '
' → logprob: -16.125722885131836
    6. '):
' → logprob: -16.500722885131836
    7. '	self' → logprob: -16.625722885131836
    8. '):' → logprob: -17.125722885131836
    9. '')' → logprob: -17.875722885131836
    10. ' ' → logprob: -18.000722885131836

Token 171: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.021001113578677177
    2. '__(' → logprob: -4.52100133895874
    3. '__)' → logprob: -5.64600133895874
    4. '__('' → logprob: -5.64600133895874
    5. '__:' → logprob: -6.39600133895874
    6. '__(
' → logprob: -8.021000862121582
    7. '__("' → logprob: -8.646000862121582
    8. 'self' → logprob: -8.771000862121582
    9. '__(*' → logprob: -9.521000862121582
    10. '__
' → logprob: -9.771000862121582

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09436589479446411
    2. 'return' → logprob: -2.4693658351898193
    3. ' return' → logprob: -5.344366073608398
    4. 'f' → logprob: -7.594366073608398
    5. ' f' → logprob: -8.969366073608398
    6. '   ' → logprob: -13.344366073608398
    7. '	return' → logprob: -13.969366073608398
    8. '{return' → logprob: -14.094366073608398
    9. ':return' → logprob: -14.469366073608398
    10. 'Return' → logprob: -14.594366073608398

Token 173: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5767378807067871
    2. 'f' → logprob: -0.8267378807067871
    3. ' return' → logprob: -7.826737880706787
    4. ' f' → logprob: -8.076738357543945
    5. '   ' → logprob: -9.951738357543945
    6. '       ' → logprob: -10.326738357543945
    7. 'Path' → logprob: -11.951738357543945
    8. '           ' → logprob: -14.201738357543945
    9. '
' → logprob: -15.326738357543945
    10. '<Path' → logprob: -15.451738357543945

Token 174: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.4740828275680542
    2. 'f' → logprob: -0.9740828275680542
    3. ' Path' → logprob: -12.599082946777344
    4. 'Path' → logprob: -13.099082946777344
    5. 'F' → logprob: -16.224082946777344
    6. ' ' → logprob: -16.349082946777344
    7. ''f' → logprob: -16.724082946777344
    8. '(f' → logprob: -17.224082946777344
    9. '<Path' → logprob: -17.474082946777344
    10. '	f' → logprob: -17.474082946777344

Token 175: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005402142181992531
    2. '(f' → logprob: -5.380402088165283
    3. ''' → logprob: -8.130402565002441
    4. '"' → logprob: -8.630402565002441
    5. 'Path' → logprob: -8.880402565002441
    6. ' f' → logprob: -9.630402565002441
    7. '<Path' → logprob: -9.755402565002441
    8. '(Path' → logprob: -11.130402565002441
    9. ''(' → logprob: -12.005402565002441
    10. '`' → logprob: -12.005402565002441

Token 176: 'Segment' (ID: 24880)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.00020330198458395898
    2. '<Path' → logprob: -8.625203132629395
    3. ' Path' → logprob: -11.375203132629395
    4. ''' → logprob: -12.125203132629395
    5. 'f' → logprob: -12.750203132629395
    6. '"' → logprob: -13.125203132629395
    7. '	Path' → logprob: -14.250203132629395
    8. '(Path' → logprob: -15.250203132629395
    9. '.Path' → logprob: -15.250203132629395
    10. '_Path' → logprob: -15.250203132629395

Token 177: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.6934749484062195
    2. '('{' → logprob: -0.6934749484062195
    3. '(' → logprob: -8.943474769592285
    4. '(name' → logprob: -9.068474769592285
    5. '('' → logprob: -9.568474769592285
    6. '("{' → logprob: -12.443474769592285
    7. '(self' → logprob: -12.943474769592285
    8. '{' → logprob: -13.568474769592285
    9. 'Segment' → logprob: -13.693474769592285
    10. ''{' → logprob: -14.193474769592285

Token 178: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20142309367656708
    2. 'repr' → logprob: -1.7014230489730835
    3. ' repr' → logprob: -11.576422691345215
    4. ' self' → logprob: -15.326422691345215
    5. '{' → logprob: -16.70142364501953
    6. '!' → logprob: -16.95142364501953
    7. 're' → logprob: -17.07642364501953
    8. ''' → logprob: -17.45142364501953
    9. 'rep' → logprob: -17.70142364501953
    10. '(self' → logprob: -17.82642364501953

Token 179: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -5.319370302458992e-06
    2. 'name' → logprob: -13.125005722045898
    3. '.' → logprob: -13.625005722045898
    4. 'repr' → logprob: -13.750005722045898
    5. ''.' → logprob: -15.250005722045898
    6. ' .' → logprob: -15.625005722045898
    7. '!' → logprob: -15.875005722045898
    8. '.re' → logprob: -16.0000057220459
    9. '{name' → logprob: -16.0000057220459
    10. ''name' → logprob: -17.1250057220459

Token 180: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.0026947935111820698
    2. '!' → logprob: -6.002694606781006
    3. ')"' → logprob: -8.877695083618164
    4. '}")' → logprob: -10.002695083618164
    5. '}"' → logprob: -11.002695083618164
    6. ''})' → logprob: -11.877695083618164
    7. ' })' → logprob: -13.002695083618164
    8. '!)' → logprob: -13.252695083618164
    9. '')"' → logprob: -13.502695083618164
    10. ')}' → logprob: -13.502695083618164

Token 181: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21705380082130432
    2. '")' → logprob: -2.4670538902282715
    3. '"' → logprob: -2.5920538902282715
    4. ')"' → logprob: -3.3420538902282715
    5. ')")' → logprob: -11.717053413391113
    6. '}' → logprob: -11.842053413391113
    7. '')' → logprob: -12.092053413391113
    8. ')">' → logprob: -12.217053413391113
    9. '"""' → logprob: -12.342053413391113
    10. '"}' → logprob: -12.967053413391113

Token 182: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8634604811668396
    2. '.' → logprob: -1.1134605407714844
    3. ':' → logprob: -2.3634605407714844
    4. '<|end|>' → logprob: -3.2384605407714844
    5. '\n' → logprob: -3.7384605407714844
    6. 'class' → logprob: -3.9884605407714844
    7. ')' → logprob: -4.238460540771484
    8. '   ' → logprob: -4.363460540771484
    9. '_' → logprob: -4.613460540771484
    10. '[' → logprob: -5.238460540771484

Token 183: ' Path' (ID: 14027)
  Prédit: ' Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Path' → logprob: -0.0026272619143128395
    2. 'Path' → logprob: -6.377627372741699
    3. ' Abstract' → logprob: -8.3776273727417
    4. ' Absolute' → logprob: -9.0026273727417
    5. ' pathlib' → logprob: -9.3776273727417
    6. ' Virtual' → logprob: -9.6276273727417
    7. ' Parsed' → logprob: -10.0026273727417
    8. ' Pat' → logprob: -10.3776273727417
    9. ' File' → logprob: -10.3776273727417
    10. ' Union' → logprob: -10.5026273727417

Token 184: 'name' (ID: 897)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.060939375311136246
    2. '(' → logprob: -3.060939311981201
    3. 'Segment' → logprob: -4.435939311981201
    4. '():' → logprob: -8.68593978881836
    5. ':
' → logprob: -9.31093978881836
    6. '):' → logprob: -10.06093978881836
    7. 'Segments' → logprob: -10.18593978881836
    8. '(object' → logprob: -11.06093978881836
    9. 'Part' → logprob: -11.43593978881836
    10. '(:' → logprob: -11.93593978881836

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002466774603817612
    2. ':
' → logprob: -9.00024700164795
    3. '(' → logprob: -9.25024700164795
    4. '():' → logprob: -11.75024700164795
    5. '):' → logprob: -12.37524700164795
    6. '(object' → logprob: -12.37524700164795
    7. ' :' → logprob: -12.87524700164795
    8. '<|end|>' → logprob: -13.37524700164795
    9. ':def' → logprob: -13.50024700164795
    10. ':**' → logprob: -14.25024700164795

Token 186: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6346357464790344
    2. '   ' → logprob: -0.7596357464790344
    3. ':
' → logprob: -6.884635925292969
    4. '(' → logprob: -7.259635925292969
    5. '    
' → logprob: -9.509635925292969
    6. '):' → logprob: -10.009635925292969
    7. '():' → logprob: -10.134635925292969
    8. '(object' → logprob: -10.384635925292969
    9. ' :' → logprob: -11.009635925292969
    10. 'def' → logprob: -11.259635925292969

Token 187: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08700195699930191
    2. ' def' → logprob: -3.0870020389556885
    3. 'def' → logprob: -3.3370020389556885
    4. '__' → logprob: -6.587001800537109
    5. ' __' → logprob: -7.587001800537109
    6. '    ' → logprob: -9.71200180053711
    7. 'class' → logprob: -10.33700180053711
    8. ' """
' → logprob: -10.33700180053711
    9. '    
' → logprob: -10.71200180053711
    10. ' ' → logprob: -10.83700180053711

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6538836359977722
    2. '"""
' → logprob: -1.153883695602417
    3. 'Rep' → logprob: -2.528883695602417
    4. '"""' → logprob: -3.778883695602417
    5. ' """
' → logprob: -4.153883457183838
    6. 'class' → logprob: -4.153883457183838
    7. 'def' → logprob: -4.653883457183838
    8. 'repr' → logprob: -5.153883457183838
    9. 'rep' → logprob: -5.278883457183838
    10. ' Represents' → logprob: -5.653883457183838

Token 189: ' Represents' (ID: 84592)
  Prédit: 'Rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rep' → logprob: -0.05070781707763672
    2. ' Represents' → logprob: -3.1757078170776367
    3. 'A' → logprob: -6.050707817077637
    4. '   ' → logprob: -6.425707817077637
    5. 'def' → logprob: -6.925707817077637
    6. 'class' → logprob: -7.050707817077637
    7. ' def' → logprob: -7.425707817077637
    8. ' A' → logprob: -7.925707817077637
    9. 'rep' → logprob: -8.050707817077637
    10. 'Represent' → logprob: -8.675707817077637

Token 190: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.02760528400540352
    2. ' an' → logprob: -3.9026052951812744
    3. 'a' → logprob: -5.027605056762695
    4. ' the' → logprob: -8.027605056762695
    5. '<|end|>' → logprob: -9.527605056762695
    6. ':' → logprob: -10.527605056762695
    7. 'an' → logprob: -11.152605056762695
    8. '<|end|>' → logprob: -11.527605056762695
    9. ' ' → logprob: -11.902605056762695
    10. ' object' → logprob: -12.652605056762695

Token 191: ' absolute' (ID: 17786)
  Prédit: ' absolute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' absolute' → logprob: -1.0443260669708252
    2. 'absolute' → logprob: -1.0443260669708252
    3. 'immutable' → logprob: -1.9193260669708252
    4. ' immutable' → logprob: -2.794326066970825
    5. 'abstract' → logprob: -3.044326066970825
    6. ' abstract' → logprob: -3.544326066970825
    7. ' path' → logprob: -5.544325828552246
    8. 'path' → logprob: -6.544325828552246
    9. ' ordered' → logprob: -6.794325828552246
    10. ' ' → logprob: -7.044325828552246

Token 192: ' pathname' (ID: 86882)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.07524806261062622
    2. 'path' → logprob: -2.8252480030059814
    3. ' pathname' → logprob: -5.2002482414245605
    4. 'pathname' → logprob: -5.5752482414245605
    5. ' or' → logprob: -5.8252482414245605
    6. ' pathlib' → logprob: -8.075247764587402
    7. ' and' → logprob: -8.950247764587402
    8. '<|end|>' → logprob: -9.200247764587402
    9. '_path' → logprob: -9.325247764587402
    10. 'Path' → logprob: -9.825247764587402

Token 193: ' composed' (ID: 34752)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10509027540683746
    2. '.' → logprob: -3.105090379714966
    3. ':
' → logprob: -3.480090379714966
    4. ',' → logprob: -4.605090141296387
    5. '(' → logprob: -4.855090141296387
    6. '   ' → logprob: -6.105090141296387
    7. ' (' → logprob: -7.730090141296387
    8. ')' → logprob: -7.855090141296387
    9. ' that' → logprob: -7.855090141296387
    10. '<|end|>' → logprob: -8.105090141296387

Token 194: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.00792671088129282
    2. 'of' → logprob: -5.132926940917969
    3. '   ' → logprob: -6.257926940917969
    4. ' only' → logprob: -10.507926940917969
    5. '    ' → logprob: -11.257926940917969
    6. ' ' → logprob: -11.382926940917969
    7. '  ' → logprob: -11.507926940917969
    8. ',' → logprob: -12.757926940917969
    9. '	of' → logprob: -12.757926940917969
    10. '_of' → logprob: -13.257926940917969

Token 195: ' path' (ID: 3104)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6157717108726501
    2. 'List' → logprob: -0.9907717108726501
    3. ' segments' → logprob: -2.990771770477295
    4. ' List' → logprob: -3.865771770477295
    5. ' a' → logprob: -4.615771770477295
    6. 'Path' → logprob: -5.490771770477295
    7. 'a' → logprob: -6.865771770477295
    8. 'Segments' → logprob: -7.740771770477295
    9. ' Path' → logprob: -7.865771770477295
    10. 'Tuple' → logprob: -7.990771770477295

Token 196: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.24562324583530426
    2. ' segments' → logprob: -1.620623230934143
    3. '_segments' → logprob: -3.9956233501434326
    4. 'Segments' → logprob: -6.6206231117248535
    5. '   ' → logprob: -8.995623588562012
    6. 's' → logprob: -10.120623588562012
    7. 'segment' → logprob: -10.620623588562012
    8. 'Segment' → logprob: -11.620623588562012
    9. 'se' → logprob: -11.620623588562012
    10. '_segment' → logprob: -11.745623588562012

Token 197: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5796681046485901
    2. '   ' → logprob: -1.3296680450439453
    3. ':' → logprob: -2.0796680450439453
    4. ':
' → logprob: -3.5796680450439453
    5. '.
' → logprob: -4.579668045043945
    6. ',' → logprob: -4.704668045043945
    7. ' and' → logprob: -7.204668045043945
    8. 'segments' → logprob: -7.454668045043945
    9. 'Segments' → logprob: -7.954668045043945
    10. ' segments' → logprob: -8.079668045043945

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003005631035193801
    2. '    
' → logprob: -6.253005504608154
    3. '
' → logprob: -7.253005504608154
    4. '\n' → logprob: -9.253005981445312
    5. '  
' → logprob: -10.128005981445312
    6. ' 
' → logprob: -10.503005981445312
    7. '    ' → logprob: -10.503005981445312
    8. ')' → logprob: -10.503005981445312
    9. '   
' → logprob: -10.878005981445312
    10. '```' → logprob: -10.878005981445312

Token 199: ' It' (ID: 1225)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04971354827284813
    2. '
' → logprob: -3.174713611602783
    3. '    
' → logprob: -5.174713611602783
    4. ' def' → logprob: -7.674713611602783
    5. 'def' → logprob: -8.049713134765625
    6. '```' → logprob: -9.799713134765625
    7. '  
' → logprob: -9.924713134765625
    8. ' 
' → logprob: -9.924713134765625
    9. 'class' → logprob: -10.299713134765625
    10. '   
' → logprob: -10.424713134765625

Token 200: ' supports' (ID: 17203)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6529749035835266
    2. ' __' → logprob: -2.152974843978882
    3. 'def' → logprob: -2.402974843978882
    4. ' is' → logprob: -2.527974843978882
    5. ' has' → logprob: -3.152974843978882
    6. '__' → logprob: -3.277974843978882
    7. ' can' → logprob: -3.902974843978882
    8. ' starts' → logprob: -4.027975082397461
    9. ' continues' → logprob: -4.402975082397461
    10. 's' → logprob: -4.402975082397461

Token 201: ' normalization' (ID: 115461)
  Prédit: ' initialization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initialization' → logprob: -1.0266318321228027
    2. ' normalization' → logprob: -1.9016318321228027
    3. ' operations' → logprob: -2.5266318321228027
    4. ' manipulation' → logprob: -2.6516318321228027
    5. ' construction' → logprob: -3.1516318321228027
    6. ' both' → logprob: -3.1516318321228027
    7. ' joining' → logprob: -3.2766318321228027
    8. ' basic' → logprob: -3.2766318321228027
    9. ' navigation' → logprob: -3.9016318321228027
    10. ' multiple' → logprob: -3.9016318321228027

Token 202: ' according' (ID: 7065)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2425926923751831
    2. ' and' → logprob: -1.742592692375183
    3. '   ' → logprob: -3.7425928115844727
    4. 'and' → logprob: -5.117592811584473
    5. ' of' → logprob: -5.742592811584473
    6. '.' → logprob: -5.742592811584473
    7. ' to' → logprob: -7.242592811584473
    8. ' (' → logprob: -7.242592811584473
    9. ',
' → logprob: -7.617592811584473
    10. ' ,' → logprob: -7.742592811584473

Token 203: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0028947514947503805
    2. ' to' → logprob: -5.877894878387451
    3. '<|end|>' → logprob: -9.627894401550293
    4. '_to' → logprob: -11.502894401550293
    5. '_' → logprob: -12.627894401550293
    6. ' ' → logprob: -12.752894401550293
    7. '```' → logprob: -13.502894401550293
    8. ')' → logprob: -13.752894401550293
    9. 'To' → logprob: -14.002894401550293
    10. 'the' → logprob: -14.502894401550293

Token 204: ' special' (ID: 3582)
  Prédit: 'POS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'POS' → logprob: -0.8719595670700073
    2. 'pos' → logprob: -1.3719595670700073
    3. ' POS' → logprob: -1.8719595670700073
    4. 'the' → logprob: -2.371959686279297
    5. 'Unix' → logprob: -3.746959686279297
    6. ' the' → logprob: -4.246959686279297
    7. 'UN' → logprob: -4.371959686279297
    8. 'Pos' → logprob: -4.871959686279297
    9. 'filesystem' → logprob: -5.246959686279297
    10. ' Unix' → logprob: -5.371959686279297

Token 205: ' rules' (ID: 9607)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.39465707540512085
    2. 'segments' → logprob: -1.3946571350097656
    3. ' tokens' → logprob: -3.1446571350097656
    4. '_segments' → logprob: -5.019657135009766
    5. 'tokens' → logprob: -5.144657135009766
    6. ' cases' → logprob: -5.269657135009766
    7. ' rules' → logprob: -5.269657135009766
    8. ' path' → logprob: -6.269657135009766
    9. ' segment' → logprob: -6.519657135009766
    10. ' characters' → logprob: -6.519657135009766

Token 206: ' in' (ID: 306)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5986725091934204
    2. ',' → logprob: -1.5986725091934204
    3. '   ' → logprob: -1.5986725091934204
    4. ' and' → logprob: -4.223672389984131
    5. ' for' → logprob: -4.223672389984131
    6. ' to' → logprob: -4.973672389984131
    7. ' that' → logprob: -5.723672389984131
    8. ' of' → logprob: -5.973672389984131
    9. ':' → logprob: -6.723672389984131
    10. ' with' → logprob: -7.973672389984131

Token 207: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3849573135375977
    2. ' POS' → logprob: -1.7599573135375977
    3. ' Unix' → logprob: -2.0099573135375977
    4. 'the' → logprob: -2.3849573135375977
    5. 'Unix' → logprob: -2.7599573135375977
    6. ' UNIX' → logprob: -2.7599573135375977
    7. ' its' → logprob: -3.2599573135375977
    8. 'POS' → logprob: -3.6349573135375977
    9. ' paths' → logprob: -3.7599573135375977
    10. 'UN' → logprob: -3.7599573135375977

Token 208: ' problem' (ID: 4792)
  Prédit: 'filesystem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filesystem' → logprob: -0.09741233289241791
    2. ' filesystem' → logprob: -3.222412347793579
    3. 'path' → logprob: -3.972412347793579
    4. 'pathname' → logprob: -4.847412109375
    5. 'file' → logprob: -5.722412109375
    6. ' file' → logprob: -5.847412109375
    7. ' pathname' → logprob: -6.347412109375
    8. 'Unix' → logprob: -6.347412109375
    9. 'UN' → logprob: -6.597412109375
    10. 'code' → logprob: -6.722412109375

Token 209: '.
' (ID: 558)
  Prédit: ' statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' statement' → logprob: -0.8607171773910522
    2. '.' → logprob: -1.2357171773910522
    3. ',' → logprob: -1.6107171773910522
    4. '   ' → logprob: -3.235717296600342
    5. ':' → logprob: -3.985717296600342
    6. ' statements' → logprob: -5.360717296600342
    7. ' description' → logprob: -5.360717296600342
    8. 'statement' → logprob: -5.360717296600342
    9. 'atic' → logprob: -5.860717296600342
    10. ' and' → logprob: -6.235717296600342

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012438016710802913
    2. '    
' → logprob: -7.251243591308594
    3. '
' → logprob: -7.626243591308594
    4. ')' → logprob: -10.501243591308594
    5. 'def' → logprob: -11.751243591308594
    6. 'class' → logprob: -12.251243591308594
    7. '```' → logprob: -13.751243591308594
    8. ' 
' → logprob: -14.626243591308594
    9. '#' → logprob: -14.626243591308594
    10. '   
' → logprob: -14.876243591308594

Token 211: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006987564731389284
    2. '
' → logprob: -5.256987571716309
    3. '    
' → logprob: -6.506987571716309
    4. 'def' → logprob: -8.506987571716309
    5. ' def' → logprob: -11.131987571716309
    6. '```' → logprob: -11.381987571716309
    7. 'class' → logprob: -12.131987571716309
    8. '   
' → logprob: -12.256987571716309
    9. ')' → logprob: -12.381987571716309
    10. '  
' → logprob: -12.506987571716309

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025800178991630673
    2. 'def' → logprob: -8.875258445739746
    3. '    
' → logprob: -9.500258445739746
    4. ' def' → logprob: -10.875258445739746
    5. '    ' → logprob: -11.250258445739746
    6. '
' → logprob: -11.750258445739746
    7. '__' → logprob: -13.875258445739746
    8. '  ' → logprob: -14.375258445739746
    9. ' ' → logprob: -14.625258445739746
    10. '   
' → logprob: -15.375258445739746

Token 213: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.694439172744751
    2. '__' (adapté à ' __') → logprob: -1.319439172744751
    3. ' def' → logprob: -1.569439172744751
    4. ' __' → logprob: -3.694439172744751
    5. '   ' → logprob: -8.194438934326172
    6. 'from' → logprob: -10.944438934326172
    7. 'slots' → logprob: -11.319438934326172
    8. 'class' → logprob: -11.694438934326172
    9. '_slots' → logprob: -12.444438934326172
    10. '___' → logprob: -12.944438934326172

Token 214: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -3.292907877039397e-06
    2. 'init' → logprob: -13.00000286102295
    3. 'slot' → logprob: -14.62500286102295
    4. '_slots' → logprob: -14.87500286102295
    5. ' slots' → logprob: -16.000003814697266
    6. 'sl' → logprob: -17.000003814697266
    7. '
' → logprob: -17.500003814697266
    8. '`' → logprob: -17.625003814697266
    9. 'Slots' → logprob: -18.750003814697266
    10. '

' → logprob: -18.875003814697266

Token 215: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.511406809295295e-06
    2. '__('' → logprob: -12.875006675720215
    3. '=' → logprob: -13.000006675720215
    4. '___' → logprob: -13.875006675720215
    5. '____' → logprob: -15.125006675720215
    6. ' =' → logprob: -15.500006675720215
    7. '__:' → logprob: -16.7500057220459
    8. '__
' → logprob: -17.1250057220459
    9. '__,' → logprob: -17.1250057220459
    10. '=('' → logprob: -17.7500057220459

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39866796135902405
    2. ' =' → logprob: -1.2736679315567017
    3. '__' → logprob: -3.023668050765991
    4. '=('' → logprob: -8.02366828918457
    5. '__('' → logprob: -11.89866828918457
    6. '=['' → logprob: -12.52366828918457
    7. '   ' → logprob: -12.64866828918457
    8. '('' → logprob: -12.64866828918457
    9. '_' → logprob: -13.02366828918457
    10. '___' → logprob: -13.27366828918457

Token 217: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.030429260805249214
    2. '('_' → logprob: -3.5304293632507324
    3. '('__' → logprob: -7.655429363250732
    4. ' ('' → logprob: -8.530428886413574
    5. ''s' → logprob: -12.655428886413574
    6. '['' → logprob: -13.405428886413574
    7. ''' → logprob: -14.155428886413574
    8. ''name' → logprob: -14.405428886413574
    9. '(' → logprob: -14.655428886413574
    10. ''_' → logprob: -15.030428886413574

Token 218: 'raw' (ID: 1618)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.031963739544153214
    2. '_segments' → logprob: -3.53196382522583
    3. 'is' → logprob: -7.15696382522583
    4. '_is' → logprob: -7.28196382522583
    5. '_root' → logprob: -8.781963348388672
    6. 'absolute' → logprob: -9.031963348388672
    7. 'root' → logprob: -9.156963348388672
    8. '_absolute' → logprob: -9.281963348388672
    9. '_' → logprob: -9.656963348388672
    10. ' segments' → logprob: -9.781963348388672

Token 219: '_path' (ID: 5558)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.3283681273460388
    2. '_path' → logprob: -1.8283681869506836
    3. '_parts' → logprob: -2.7033681869506836
    4. '')' → logprob: -3.3283681869506836
    5. '_name' → logprob: -5.078368186950684
    6. '',' → logprob: -5.078368186950684
    7. '','' → logprob: -6.453368186950684
    8. '_' → logprob: -7.453368186950684
    9. 'segments' → logprob: -7.703368186950684
    10. '_tokens' → logprob: -8.078368186950684

Token 220: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3084658682346344
    2. '')' → logprob: -1.433465838432312
    3. '_segments' → logprob: -3.9334659576416016
    4. ''' → logprob: -6.058465957641602
    5. '','' → logprob: -6.433465957641602
    6. 's' → logprob: -6.558465957641602
    7. '_parts' → logprob: -7.558465957641602
    8. 'segments' → logprob: -7.683465957641602
    9. '_str' → logprob: -8.933465957641602
    10. '_tokens' → logprob: -8.933465957641602

Token 221: ' '' (ID: 461)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.4126266539096832
    2. ' segments' → logprob: -1.1626266241073608
    3. '_segments' → logprob: -3.9126267433166504
    4. ''' → logprob: -6.03762674331665
    5. ' '' → logprob: -7.03762674331665
    6. ''s' → logprob: -7.16262674331665
    7. '   ' → logprob: -8.162626266479492
    8. ''_' → logprob: -8.162626266479492
    9. ' _' → logprob: -8.412626266479492
    10. '_se' → logprob: -9.537626266479492

Token 222: 'segments' (ID: 110314)
  Prédit: 'segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.01548578217625618
    2. '_segments' → logprob: -4.265485763549805
    3. 'normalized' → logprob: -7.390485763549805
    4. 'path' → logprob: -8.890485763549805
    5. '_path' → logprob: -9.390485763549805
    6. '_se' → logprob: -9.390485763549805
    7. ' segments' → logprob: -9.765485763549805
    8. 'se' → logprob: -9.765485763549805
    9. 'parts' → logprob: -10.265485763549805
    10. 'is' → logprob: -10.265485763549805

Token 223: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.2524930536746979
    2. '')' → logprob: -1.5024930238723755
    3. ',' → logprob: -7.627492904663086
    4. ''' → logprob: -10.627492904663086
    5. ')' → logprob: -10.752492904663086
    6. '','' → logprob: -11.127492904663086
    7. '')
' → logprob: -11.877492904663086
    8. '',
' → logprob: -13.127492904663086
    9. '')

' → logprob: -13.627492904663086
    10. '_list' → logprob: -14.127492904663086

Token 224: ' '' (ID: 461)
  Prédit: ''is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''is' → logprob: -0.39461636543273926
    2. ' '' → logprob: -1.5196163654327393
    3. ''' → logprob: -3.0196163654327393
    4. ' is' → logprob: -3.1446163654327393
    5. 'is' → logprob: -5.01961612701416
    6. '   ' → logprob: -6.26961612701416
    7. ''_' → logprob: -6.39461612701416
    8. '_is' → logprob: -6.89461612701416
    9. ''s' → logprob: -7.14461612701416
    10. ' ' → logprob: -7.64461612701416

Token 225: 'has' (ID: 5429)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.06463216990232468
    2. '_is' → logprob: -3.3146321773529053
    3. 'absolute' → logprob: -4.564631938934326
    4. 'normalized' → logprob: -4.939631938934326
    5. '_absolute' → logprob: -6.189631938934326
    6. ' is' → logprob: -6.814631938934326
    7. 'root' → logprob: -7.439631938934326
    8. '_root' → logprob: -7.689631938934326
    9. '_' → logprob: -7.814631938934326
    10. 'has' → logprob: -7.814631938934326

Token 226: '_tr' (ID: 7410)
  Prédit: '_le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.6655945777893066
    2. '_tr' → logprob: -1.1655945777893066
    3. '_root' → logprob: -1.7905945777893066
    4. '_sl' → logprob: -5.290594577789307
    5. '_drive' → logprob: -6.915594577789307
    6. '_final' → logprob: -7.915594577789307
    7. '_sep' → logprob: -8.290594100952148
    8. '_' → logprob: -8.540594100952148
    9. '_separator' → logprob: -9.165594100952148
    10. 'leading' → logprob: -9.290594100952148

Token 227: 'ailing' (ID: 24408)
  Prédit: 'ailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ailing' → logprob: -0.08126480877399445
    2. 'ail' → logprob: -2.5812647342681885
    3. 'a' → logprob: -6.206264972686768
    4. 'ai' → logprob: -9.08126449584961
    5. 'aling' → logprob: -10.20626449584961
    6. '
' → logprob: -10.45626449584961
    7. '```' → logprob: -10.45626449584961
    8. '_' → logprob: -10.83126449584961
    9. 'ailed' → logprob: -11.08126449584961
    10. 'iling' → logprob: -11.20626449584961

Token 228: '_sl' (ID: 26945)
  Prédit: '_sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sl' → logprob: -0.016385767608880997
    2. '_sep' → logprob: -4.266385555267334
    3. '_separator' → logprob: -6.266385555267334
    4. '_' → logprob: -8.141386032104492
    5. 'slash' → logprob: -11.016386032104492
    6. 'sep' → logprob: -12.641386032104492
    7. '_del' → logprob: -12.891386032104492
    8. '_space' → logprob: -13.516386032104492
    9. '_)' → logprob: -13.891386032104492
    10. '```' → logprob: -14.141386032104492

Token 229: 'ash' (ID: 1229)
  Prédit: 'ash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ash' → logprob: -1.843177233240567e-05
    2. 'lash' → logprob: -11.125018119812012
    3. 'a' → logprob: -13.500018119812012
    4. 'as' → logprob: -14.750018119812012
    5. '```' → logprob: -14.750018119812012
    6. '   ' → logprob: -15.375018119812012
    7. '`' → logprob: -16.250019073486328
    8. 'ah' → logprob: -16.250019073486328
    9. '_' → logprob: -16.375019073486328
    10. 'ach' → logprob: -16.625019073486328

Token 230: '')
' (ID: 2515)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3220037519931793
    2. '')' → logprob: -1.322003722190857
    3. ',' → logprob: -5.4470038414001465
    4. ')' → logprob: -5.4470038414001465
    5. ''' → logprob: -10.447003364562988
    6. '','' → logprob: -11.197003364562988
    7. ')',' → logprob: -11.322003364562988
    8. '',
' → logprob: -11.572003364562988
    9. '')
' → logprob: -11.822003364562988
    10. '_' → logprob: -12.072003364562988

Token 231: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2221754938364029
    2. '
' → logprob: -2.0971755981445312
    3. '    
' → logprob: -2.5971755981445312
    4. ',' → logprob: -7.097175598144531
    5. 'def' → logprob: -7.472175598144531
    6. '    ' → logprob: -9.722175598144531
    7. '   
' → logprob: -9.722175598144531
    8. ',
' → logprob: -9.847175598144531
    9. ' def' → logprob: -9.847175598144531
    10. '	
' → logprob: -9.847175598144531

Token 232: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33429309725761414
    2. '   ' → logprob: -1.8342931270599365
    3. ' def' → logprob: -2.0842931270599365
    4. '	def' → logprob: -11.334293365478516
    5. '    ' → logprob: -11.584293365478516
    6. '    
' → logprob: -12.084293365478516
    7. '
' → logprob: -12.209293365478516
    8. ' ' → logprob: -14.334293365478516
    9. 'indent' → logprob: -14.459293365478516
    10. ' 
' → logprob: -14.959293365478516

Token 233: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00033558503491804004
    2. ' def' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.000335693359375
    4. 'raw' → logprob: -20.375335693359375
    5. '
' → logprob: -20.875335693359375
    6. '@' → logprob: -20.875335693359375
    7. 'from' → logprob: -21.125335693359375
    8. 'de' → logprob: -21.250335693359375
    9. '	def' → logprob: -22.000335693359375
    10. 'class' → logprob: -22.375335693359375

Token 234: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.001343446783721447
    2. '__' → logprob: -6.626343250274658
    3. ' def' → logprob: -11.751343727111816
    4. ' ' → logprob: -11.876343727111816
    5. ' ' → logprob: -13.876343727111816
    6. ' _' → logprob: -14.626343727111816
    7. '_init' → logprob: -14.626343727111816
    8. 'def' → logprob: -14.876343727111816
    9. '_' → logprob: -15.501343727111816
    10. ' init' → logprob: -16.2513427734375

Token 235: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'slots' → logprob: -16.75
    3. ' init' → logprob: -17.875
    4. '_init' → logprob: -18.0
    5. '(init' → logprob: -21.25
    6. '	init' → logprob: -21.5
    7. '.init' → logprob: -21.625
    8. 'ini' → logprob: -23.0
    9. 'inite' → logprob: -23.0
    10. '__' → logprob: -23.0

Token 236: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0028019100427627563
    2. '__' → logprob: -6.002801895141602
    3. '__(
' → logprob: -8.252801895141602
    4. '(' → logprob: -10.252801895141602
    5. '__((' → logprob: -11.252801895141602
    6. '(self' → logprob: -12.127801895141602
    7. '_(' → logprob: -12.252801895141602
    8. '__('' → logprob: -12.502801895141602
    9. '__(*' → logprob: -13.627801895141602
    10. '_' → logprob: -13.877801895141602

Token 237: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033903829171322286
    2. ' self' → logprob: -8.00033950805664
    3. '
' → logprob: -12.87533950805664
    4. ')' → logprob: -14.50033950805664
    5. ' ' → logprob: -16.00033950805664
    6. ',' → logprob: -16.00033950805664
    7. '(self' → logprob: -16.87533950805664
    8. '   ' → logprob: -16.87533950805664
    9. 's' → logprob: -17.37533950805664
    10. '    
' → logprob: -17.37533950805664

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008516116067767143
    2. 'self' → logprob: -4.883516311645508
    3. ' ,' → logprob: -7.633516311645508
    4. '(self' → logprob: -8.133516311645508
    5. ' self' → logprob: -9.883516311645508
    6. ',self' → logprob: -10.258516311645508
    7. '__,' → logprob: -11.258516311645508
    8. ')' → logprob: -11.258516311645508
    9. '__' → logprob: -12.508516311645508
    10. '_self' → logprob: -12.758516311645508

Token 239: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.043676912784576416
    2. ' raw' → logprob: -3.1686768531799316
    3. 'self' → logprob: -7.793676853179932
    4. 'path' → logprob: -8.41867733001709
    5. '   ' → logprob: -11.41867733001709
    6. ' self' → logprob: -11.91867733001709
    7. ' path' → logprob: -12.04367733001709
    8. '       ' → logprob: -12.04367733001709
    9. '	raw' → logprob: -12.04367733001709
    10. '_raw' → logprob: -12.29367733001709

Token 240: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -3.5120287066092715e-05
    2. '_' → logprob: -10.375035285949707
    3. 'path' → logprob: -12.875035285949707
    4. 'Path' → logprob: -15.000035285949707
    5. '_name' → logprob: -15.875035285949707
    6. '_Path' → logprob: -15.875035285949707
    7. ')_' → logprob: -16.25003433227539
    8. ')' → logprob: -16.25003433227539
    9. '_PATH' → logprob: -16.37503433227539
    10. '_p' → logprob: -17.12503433227539

Token 241: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.1782583391759545e-05
    2. ':str' → logprob: -10.500031471252441
    3. '):' → logprob: -12.750031471252441
    4. ' :' → logprob: -13.625031471252441
    5. '):
' → logprob: -16.750032424926758
    6. ')' → logprob: -17.125032424926758
    7. '   ' → logprob: -18.250032424926758
    8. '_:' → logprob: -19.000032424926758
    9. '=' → logprob: -19.750032424926758
    10. ' ' → logprob: -20.875032424926758

Token 242: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.06196869537234306
    2. ' str' → logprob: -2.8119688034057617
    3. ')' → logprob: -14.811968803405762
    4. '   ' → logprob: -15.436968803405762
    5. ':str' → logprob: -16.186967849731445
    6. ' ' → logprob: -16.436967849731445
    7. '[str' → logprob: -16.686967849731445
    8. 'Optional' → logprob: -16.811967849731445
    9. '	str' → logprob: -17.061967849731445
    10. '(str' → logprob: -17.186967849731445

Token 243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004148441832512617
    2. ')' → logprob: -6.254148483276367
    3. '):
' → logprob: -6.254148483276367
    4. ',' → logprob: -8.254148483276367
    5. ':' → logprob: -10.504148483276367
    6. ' ):' → logprob: -12.629148483276367
    7. '):
' → logprob: -13.004148483276367
    8. '   ' → logprob: -13.754148483276367
    9. ')->' → logprob: -14.879148483276367
    10. '       ' → logprob: -15.879148483276367

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026966973673552275
    2. 'self' → logprob: -6.002696514129639
    3. ' self' → logprob: -8.502696990966797
    4. '   ' → logprob: -11.002696990966797
    5. '      ' → logprob: -14.877696990966797
    6. '	self' → logprob: -15.252696990966797
    7. '     ' → logprob: -16.002696990966797
    8. '    ' → logprob: -16.252696990966797
    9. '```' → logprob: -16.252696990966797
    10. '	' → logprob: -16.377696990966797

Token 245: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04249593988060951
    2. ' self' → logprob: -3.2924959659576416
    3. '       ' → logprob: -5.4174957275390625
    4. 'import' → logprob: -12.917495727539062
    5. 'super' → logprob: -13.542495727539062
    6. 'raw' → logprob: -14.292495727539062
    7. '   ' → logprob: -14.667495727539062
    8. 'if' → logprob: -14.792495727539062
    9. '	self' → logprob: -15.417495727539062
    10. ' ' → logprob: -15.542495727539062

Token 246: '.raw' (ID: 36636)
  Prédit: '.raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.raw' → logprob: -0.006007359828799963
    2. '.' → logprob: -5.131007194519043
    3. ' .' → logprob: -10.131007194519043
    4. 'raw' → logprob: -10.381007194519043
    5. ' =' → logprob: -13.006007194519043
    6. '_raw' → logprob: -13.756007194519043
    7. ' raw' → logprob: -13.756007194519043
    8. '=' → logprob: -14.256007194519043
    9. '.Raw' → logprob: -14.506007194519043
    10. '	raw' → logprob: -14.506007194519043

Token 247: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.250004768371582
    3. '_p' → logprob: -15.625004768371582
    4. '_pat' → logprob: -16.1250057220459
    5. 'path' → logprob: -17.0000057220459
    6. '_Path' → logprob: -17.2500057220459
    7. 'Path' → logprob: -17.8750057220459
    8. '_PATH' → logprob: -18.0000057220459
    9. ' _' → logprob: -18.2500057220459
    10. '_pa' → logprob: -18.6250057220459

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313279926776886
    2. ' =' → logprob: -1.3132798671722412
    3. ')' → logprob: -11.18828010559082
    4. ':' → logprob: -12.68828010559082
    5. ' ' → logprob: -14.68828010559082
    6. ' )' → logprob: -14.93828010559082
    7. ',' → logprob: -16.06328010559082
    8. '   ' → logprob: -16.06328010559082
    9. '=self' → logprob: -16.81328010559082
    10. ' =
' → logprob: -17.31328010559082

Token 249: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.20141451060771942
    2. ' raw' → logprob: -1.7014144659042358
    3. '	raw' → logprob: -14.201414108276367
    4. '(raw' → logprob: -14.701414108276367
    5. '_raw' → logprob: -16.451414108276367
    6. '.raw' → logprob: -16.826414108276367
    7. 'Raw' → logprob: -18.326414108276367
    8. ' ' → logprob: -18.701414108276367
    9. '/raw' → logprob: -19.451414108276367
    10. '   ' → logprob: -20.451414108276367

Token 250: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.4987974029500037e-05
    2. '_' → logprob: -10.750024795532227
    3. 'path' → logprob: -12.625024795532227
    4. 'Path' → logprob: -16.375024795532227
    5. '_PATH' → logprob: -16.625024795532227
    6. '_p' → logprob: -17.500024795532227
    7. ' _' → logprob: -17.500024795532227
    8. '_raw' → logprob: -17.750024795532227
    9. '_Path' → logprob: -17.750024795532227
    10. '_pat' → logprob: -18.375024795532227

Token 251: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042173630208708346
    2. '        
' → logprob: -8.375421524047852
    3. '
' → logprob: -9.000421524047852
    4. 'self' → logprob: -11.000421524047852
    5. ' if' → logprob: -11.125421524047852
    6. '#' → logprob: -12.000421524047852
    7. 'if' → logprob: -12.000421524047852
    8. ',' → logprob: -12.125421524047852
    9. '  
' → logprob: -12.625421524047852
    10. '        ' → logprob: -12.875421524047852

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011284325737506151
    2. 'self' → logprob: -7.251128196716309
    3. 'if' → logprob: -8.501128196716309
    4. ' if' → logprob: -8.876128196716309
    5. ' self' → logprob: -10.001128196716309
    6. '        
' → logprob: -11.126128196716309
    7. '   ' → logprob: -12.251128196716309
    8. 'segments' → logprob: -12.626128196716309
    9. '      ' → logprob: -13.126128196716309
    10. '           ' → logprob: -13.876128196716309

Token 253: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.042492520064115524
    2. 'if' → logprob: -3.292492628097534
    3. 'segments' → logprob: -5.667492389678955
    4. '#' → logprob: -7.167492389678955
    5. '       ' → logprob: -8.792492866516113
    6. 'parts' → logprob: -10.417492866516113
    7. 'raw' → logprob: -11.292492866516113
    8. ' self' → logprob: -11.792492866516113
    9. 'path' → logprob: -12.792492866516113
    10. 'seg' → logprob: -13.042492866516113

Token 254: '.has' (ID: 10752)
  Prédit: '.se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.0002783783129416406
    2. '.' → logprob: -8.25027847290039
    3. 'segments' → logprob: -12.25027847290039
    4. '.segment' → logprob: -12.87527847290039
    5. '.tokens' → logprob: -12.87527847290039
    6. '.raw' → logprob: -12.87527847290039
    7. ' .' → logprob: -13.50027847290039
    8. '.seg' → logprob: -13.62527847290039
    9. '._' → logprob: -14.62527847290039
    10. '_segments' → logprob: -14.87527847290039

Token 255: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.00014454191841650754
    2. '_' → logprob: -8.875144958496094
    3. 'tr' → logprob: -13.250144958496094
    4. '_s' → logprob: -14.375144958496094
    5. '_sl' → logprob: -14.625144958496094
    6. ''_' → logprob: -16.125144958496094
    7. '_raw' → logprob: -16.125144958496094
    8. '_t' → logprob: -16.125144958496094
    9. ' _' → logprob: -16.250144958496094
    10. '_follow' → logprob: -16.250144958496094

Token 256: 'ailing' (ID: 24408)
  Prédit: 'ailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ailing' → logprob: -0.00028541131177917123
    2. 'ail' → logprob: -8.375285148620605
    3. 'a' → logprob: -10.250285148620605
    4. 'iling' → logprob: -11.500285148620605
    5. '_' → logprob: -12.625285148620605
    6. 'aling' → logprob: -13.125285148620605
    7. 'ailed' → logprob: -13.875285148620605
    8. 'ai' → logprob: -14.500285148620605
    9. '_a' → logprob: -14.875285148620605
    10. '```' → logprob: -15.000285148620605

Token 257: '_sl' (ID: 26945)
  Prédit: '_sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sl' → logprob: -0.0003634713648352772
    2. '_' → logprob: -8.00036334991455
    3. 'slash' → logprob: -10.50036334991455
    4. 'underscore' → logprob: -16.000364303588867
    5. 'sl' → logprob: -16.500364303588867
    6. '_s' → logprob: -16.875364303588867
    7. '_
' → logprob: -17.000364303588867
    8. ' slash' → logprob: -17.000364303588867
    9. '_slug' → logprob: -17.125364303588867
    10. '/' → logprob: -17.875364303588867

Token 258: 'ash' (ID: 1229)
  Prédit: 'ash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ash' → logprob: -6.289473822107539e-05
    2. 'lash' → logprob: -9.750062942504883
    3. '```' → logprob: -13.750062942504883
    4. 'ah' → logprob: -14.000062942504883
    5. '   ' → logprob: -14.250062942504883
    6. 'a' → logprob: -14.500062942504883
    7. 'as' → logprob: -15.625062942504883
    8. '
' → logprob: -16.125062942504883
    9. '__' → logprob: -16.500062942504883
    10. 'ach' → logprob: -16.500062942504883

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519298195838928
    2. '=' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.001930236816406
    4. '_' → logprob: -16.001930236816406
    5. '   ' → logprob: -16.376930236816406
    6. ')' → logprob: -16.876930236816406
    7. ':' → logprob: -17.126930236816406
    8. '    ' → logprob: -17.376930236816406
    9. '=True' → logprob: -17.501930236816406
    10. ' ==' → logprob: -17.876930236816406

Token 260: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.014367871917784214
    2. ' raw' → logprob: -4.264368057250977
    3. 'len' → logprob: -8.764368057250977
    4. '(raw' → logprob: -10.014368057250977
    5. 'bool' → logprob: -13.389368057250977
    6. ' len' → logprob: -13.514368057250977
    7. 'False' → logprob: -15.139368057250977
    8. '	raw' → logprob: -15.889368057250977
    9. 'True' → logprob: -16.014368057250977
    10. ' bool' → logprob: -17.264368057250977

Token 261: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.00043925188947468996
    2. 'path' → logprob: -7.750439167022705
    3. 'slash' → logprob: -12.375439643859863
    4. '/' → logprob: -13.500439643859863
    5. 'raw' → logprob: -13.875439643859863
    6. '_' → logprob: -14.125439643859863
    7. 'Path' → logprob: -14.750439643859863
    8. '/path' → logprob: -15.375439643859863
    9. '"path' → logprob: -16.000438690185547
    10. '_PATH' → logprob: -16.375438690185547

Token 262: '.endswith' (ID: 100591)
  Prédit: '.endswith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.endswith' → logprob: -1.5570885807392187e-05
    2. '.' → logprob: -11.625015258789062
    3. '.rstrip' → logprob: -12.375015258789062
    4. '.ends' → logprob: -14.250015258789062
    5. ' .' → logprob: -14.375015258789062
    6. ' and' → logprob: -14.500015258789062
    7. 'ends' → logprob: -15.000015258789062
    8. '[-' → logprob: -15.250015258789062
    9. 'and' → logprob: -16.375015258789062
    10. '.strip' → logprob: -18.125015258789062

Token 263: '('/')
' (ID: 103358)
  Prédit: '('/')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('/')' → logprob: -0.001051507773809135
    2. '(' → logprob: -7.501051425933838
    3. '("/")' → logprob: -7.876051425933838
    4. '('/' → logprob: -9.251051902770996
    5. '('/')
' → logprob: -10.751051902770996
    6. '('' → logprob: -14.626051902770996
    7. '(('' → logprob: -15.001051902770996
    8. ''' → logprob: -16.00105094909668
    9. '('/',' → logprob: -16.12605094909668
    10. '/' → logprob: -16.75105094909668

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04403971880674362
    2. 'self' → logprob: -3.169039726257324
    3. ' self' → logprob: -6.919039726257324
    4. '   ' → logprob: -10.544039726257324
    5. 'segments' → logprob: -11.419039726257324
    6. 'tokens' → logprob: -13.294039726257324
    7. '	self' → logprob: -13.419039726257324
    8. 'if' → logprob: -13.544039726257324
    9. '	' → logprob: -13.794039726257324
    10. ' if' → logprob: -14.044039726257324

Token 265: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17215734720230103
    2. 'segments' → logprob: -2.1721572875976562
    3. '       ' → logprob: -3.7971572875976562
    4. 'parts' → logprob: -4.422157287597656
    5. 'path' → logprob: -5.172157287597656
    6. 'if' → logprob: -5.922157287597656
    7. ' self' → logprob: -7.422157287597656
    8. 'raw' → logprob: -8.172157287597656
    9. '#' → logprob: -8.797157287597656
    10. 'seg' → logprob: -8.922157287597656

Token 266: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -1.8550976164988242e-05
    2. '._' → logprob: -11.250018119812012
    3. 'segments' → logprob: -13.000018119812012
    4. ' .' → logprob: -13.500018119812012
    5. 'se' → logprob: -14.250018119812012
    6. '.' → logprob: -14.625018119812012
    7. '.raw' → logprob: -15.375018119812012
    8. '.segment' → logprob: -15.500018119812012
    9. '.seg' → logprob: -15.500018119812012
    10. '.parts' → logprob: -17.125019073486328

Token 267: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -0.00021438424300868064
    2. 'g' → logprob: -8.750214576721191
    3. 'segments' → logprob: -10.375214576721191
    4. 'gements' → logprob: -11.000214576721191
    5. 'ments' → logprob: -12.000214576721191
    6. 'gment' → logprob: -14.375214576721191
    7. '   ' → logprob: -15.000214576721191
    8. 'gm' → logprob: -15.250214576721191
    9. '_segments' → logprob: -15.750214576721191
    10. '       ' → logprob: -15.750214576721191

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012521306052803993
    2. '=' → logprob: -4.387521266937256
    3. '=[]' → logprob: -11.762521743774414
    4. ':' → logprob: -13.012521743774414
    5. ' =[' → logprob: -14.137521743774414
    6. ' ' → logprob: -14.637521743774414
    7. ')' → logprob: -16.012521743774414
    8. ',' → logprob: -16.262521743774414
    9. '=[' → logprob: -16.512521743774414
    10. '=[]
' → logprob: -16.887521743774414

Token 269: ' self' (ID: 1051)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.28869128227233887
    2. '[]' → logprob: -1.9136912822723389
    3. '[' → logprob: -2.538691282272339
    4. 'self' → logprob: -4.038691520690918
    5. '[]
' → logprob: -5.538691520690918
    6. '[
' → logprob: -6.288691520690918
    7. '[]

' → logprob: -8.163691520690918
    8. '[list' → logprob: -9.163691520690918
    9. ' []' → logprob: -9.413691520690918
    10. 'list' → logprob: -9.663691520690918

Token 270: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.012573461048305035
    2. '.parse' → logprob: -4.3875732421875
    3. '.raw' → logprob: -10.8875732421875
    4. '.split' → logprob: -11.5125732421875
    5. '.token' → logprob: -12.0125732421875
    6. '.normalize' → logprob: -12.1375732421875
    7. 'parse' → logprob: -12.3875732421875
    8. '.' → logprob: -12.6375732421875
    9. '_parse' → logprob: -12.6375732421875
    10. '.segment' → logprob: -12.8875732421875

Token 271: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.038881298154592514
    2. 'split' → logprob: -3.413881301879883
    3. 'token' → logprob: -5.538881301879883
    4. 'normalize' → logprob: -7.413881301879883
    5. 'segment' → logprob: -8.288881301879883
    6. 'initialize' → logprob: -9.413881301879883
    7. 'init' → logprob: -9.663881301879883
    8. 'build' → logprob: -9.913881301879883
    9. 'extract' → logprob: -10.288881301879883
    10. 'segments' → logprob: -10.413881301879883

Token 272: '_segments' (ID: 142925)
  Prédit: '(raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.4631693959236145
    2. '_path' → logprob: -1.5881693363189697
    3. '(' → logprob: -2.3381693363189697
    4. '_segments' → logprob: -2.7131693363189697
    5. 'segments' → logprob: -6.963169574737549
    6. 'path' → logprob: -6.963169574737549
    7. '_raw' → logprob: -7.338169574737549
    8. 'raw' → logprob: -7.588169574737549
    9. 'Segments' → logprob: -9.08816909790039
    10. '(path' → logprob: -9.58816909790039

Token 273: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.03804975748062134
    2. '(' → logprob: -3.2880496978759766
    3. '(
' → logprob: -12.163049697875977
    4. '()' → logprob: -14.163049697875977
    5. ' (' → logprob: -14.288049697875977
    6. '('' → logprob: -15.038049697875977
    7. '((' → logprob: -15.288049697875977
    8. '(

' → logprob: -15.413049697875977
    9. '(self' → logprob: -16.413049697875977
    10. '(`' → logprob: -16.538049697875977

Token 274: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -3.03521392197581e-05
    2. 'path' → logprob: -10.500030517578125
    3. '_' → logprob: -13.500030517578125
    4. 'Path' → logprob: -15.000030517578125
    5. 'raw' → logprob: -15.250030517578125
    6. '_segments' → logprob: -15.750030517578125
    7. ')' → logprob: -15.875030517578125
    8. '_raw' → logprob: -16.000030517578125
    9. 'self' → logprob: -16.375030517578125
    10. '_PATH' → logprob: -17.000030517578125

Token 275: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ' )' → logprob: -12.125012397766113
    3. '   ' → logprob: -12.375012397766113
    4. ')
' → logprob: -13.625012397766113
    5. '       ' → logprob: -13.875012397766113
    6. ')`' → logprob: -16.375011444091797
    7. ')

' → logprob: -16.500011444091797
    8. '))' → logprob: -16.625011444091797
    9. ' ' → logprob: -16.875011444091797
    10. '[' → logprob: -17.500011444091797

Token 276: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17353838682174683
    2. '   ' → logprob: -2.2985384464263916
    3. 'def' → logprob: -3.4235384464263916
    4. '    
' → logprob: -3.7985384464263916
    5. '  
' → logprob: -7.1735382080078125
    6. ' 
' → logprob: -7.1735382080078125
    7. ' def' → logprob: -7.5485382080078125
    8. '<|end|>' → logprob: -7.9235382080078125
    9. '```' → logprob: -8.423538208007812
    10. '   
' → logprob: -8.673538208007812

Token 277: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01821116730570793
    2. ' def' → logprob: -4.643211364746094
    3. '   ' → logprob: -5.143211364746094
    4. '
' → logprob: -6.018211364746094
    5. '    
' → logprob: -9.268211364746094
    6. ' 
' → logprob: -10.268211364746094
    7. '_' → logprob: -12.268211364746094
    8. ')' → logprob: -12.893211364746094
    9. '  
' → logprob: -13.018211364746094
    10. '	def' → logprob: -13.018211364746094

Token 278: ' _' (ID: 1175)
  Prédit: '_parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -4.286852345103398e-05
    2. ' _' → logprob: -10.125042915344238
    3. '_' → logprob: -14.625042915344238
    4. 'def' → logprob: -14.750042915344238
    5. '_raw' → logprob: -15.000042915344238
    6. '_segments' → logprob: -15.000042915344238
    7. '_get' → logprob: -15.125042915344238
    8. ' def' → logprob: -16.125041961669922
    9. '_validate' → logprob: -16.250041961669922
    10. '_define' → logprob: -16.250041961669922

Token 279: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.6240566083070007e-06
    2. '_parse' → logprob: -13.500001907348633
    3. ' parse' → logprob: -16.500001907348633
    4. '(parse' → logprob: -17.000001907348633
    5. '.parse' → logprob: -18.000001907348633
    6. '```' → logprob: -18.750001907348633
    7. '	parse' → logprob: -18.875001907348633
    8. '
' → logprob: -19.000001907348633
    9. '=parse' → logprob: -19.750001907348633
    10. 'parser' → logprob: -20.250001907348633

Token 280: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -2.1054253011243418e-05
    2. '_' → logprob: -10.875020980834961
    3. 'segments' → logprob: -13.750020980834961
    4. '_seg' → logprob: -14.125020980834961
    5. '_segment' → logprob: -15.625020980834961
    6. '_s' → logprob: -16.87502098083496
    7. '_tokens' → logprob: -17.00002098083496
    8. '_parts' → logprob: -18.25002098083496
    9. 'Segments' → logprob: -18.37502098083496
    10. '_path' → logprob: -19.00002098083496

Token 281: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010428131790831685
    2. '(' → logprob: -6.87604284286499
    3. ' (' → logprob: -11.626042366027832
    4. '(
' → logprob: -14.501042366027832
    5. 'self' → logprob: -14.751042366027832
    6. '(s' → logprob: -16.25104331970215
    7. '(Self' → logprob: -16.87604331970215
    8. ' ' → logprob: -17.87604331970215
    9. '(sel' → logprob: -18.00104331970215
    10. ' self' → logprob: -18.50104331970215

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1965961456298828
    2. 'self' → logprob: -1.8215961456298828
    3. '(self' → logprob: -4.571596145629883
    4. ')' → logprob: -5.446596145629883
    5. '):' → logprob: -6.446596145629883
    6. ' self' → logprob: -9.321596145629883
    7. ',self' → logprob: -9.446596145629883
    8. 'raw' → logprob: -9.946596145629883
    9. '(raw' → logprob: -10.196596145629883
    10. '(' → logprob: -10.321596145629883

Token 283: ' path' (ID: 3104)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005398457404226065
    2. 'raw' → logprob: -5.505398273468018
    3. ' self' → logprob: -7.005398273468018
    4. 'path' → logprob: -8.255398750305176
    5. ' raw' → logprob: -9.130398750305176
    6. ')' → logprob: -10.130398750305176
    7. ' path' → logprob: -13.255398750305176
    8. 's' → logprob: -13.755398750305176
    9. '_raw' → logprob: -14.255398750305176
    10. '   ' → logprob: -15.380398750305176

Token 284: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002505028620362282
    2. ':str' → logprob: -6.002504825592041
    3. '):' → logprob: -10.7525053024292
    4. ' :' → logprob: -12.6275053024292
    5. ')' → logprob: -13.5025053024292
    6. 'str' → logprob: -13.5025053024292
    7. '):
' → logprob: -14.3775053024292
    8. '_:' → logprob: -14.5025053024292
    9. '_str' → logprob: -14.6275053024292
    10. '   ' → logprob: -15.8775053024292

Token 285: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0004929834394715726
    2. ' str' → logprob: -8.250493049621582
    3. ')' → logprob: -8.375493049621582
    4. '[str' → logprob: -14.375493049621582
    5. '   ' → logprob: -15.625493049621582
    6. ' ' → logprob: -16.500492095947266
    7. 'Str' → logprob: -16.625492095947266
    8. '	str' → logprob: -16.625492095947266
    9. ':str' → logprob: -16.750492095947266
    10. '
' → logprob: -16.750492095947266

Token 286: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -12.500003814697266
    3. ')->' → logprob: -16.250003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '):
' → logprob: -18.125003814697266
    6. '):' → logprob: -18.625003814697266
    7. ',)' → logprob: -18.875003814697266
    8. '')' → logprob: -19.125003814697266
    9. '`)' → logprob: -19.375003814697266
    10. '       ' → logprob: -19.625003814697266

Token 287: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4682373106479645
    2. '->' → logprob: -1.718237280845642
    3. ')' → logprob: -1.843237280845642
    4. ' ->' → logprob: -3.3432374000549316
    5. ')->' → logprob: -7.468237400054932
    6. ':
' → logprob: -8.593236923217773
    7. '   ' → logprob: -9.593236923217773
    8. '       ' → logprob: -10.968236923217773
    9. '>' → logprob: -11.718236923217773
    10. ']' → logprob: -11.968236923217773

Token 288: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -9.007317567011341e-05
    2. ' List' → logprob: -9.750089645385742
    3. 'list' → logprob: -10.500089645385742
    4. '[List' → logprob: -12.375089645385742
    5. ' list' → logprob: -18.625089645385742
    6. '[' → logprob: -18.625089645385742
    7. '[]' → logprob: -18.875089645385742
    8. '   ' → logprob: -19.000089645385742
    9. '_list' → logprob: -19.375089645385742
    10. '	List' → logprob: -19.625089645385742

Token 289: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '[
' → logprob: -14.125001907348633
    3. '[str' → logprob: -14.375001907348633
    4. '<Path' → logprob: -15.875001907348633
    5. 'Path' → logprob: -17.000001907348633
    6. ' [' → logprob: -18.000001907348633
    7. '[path' → logprob: -18.375001907348633
    8. '[[' → logprob: -19.500001907348633
    9. ']' → logprob: -19.750001907348633
    10. '(Path' → logprob: -20.000001907348633

Token 290: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -5.512236498361744e-07
    2. 'str' → logprob: -14.625000953674316
    3. ' Path' → logprob: -16.875
    4. 'Segment' → logprob: -17.75
    5. '	Path' → logprob: -18.125
    6. 'path' → logprob: -18.5
    7. '<Path' → logprob: -19.25
    8. '[' → logprob: -19.625
    9. 'Str' → logprob: -19.75
    10. '@Path' → logprob: -19.75

Token 291: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: 0.0
    2. 'Segments' → logprob: -17.5
    3. ' Segment' → logprob: -18.125
    4. '_segment' → logprob: -18.25
    5. 'Token' → logprob: -18.375
    6. 'segment' → logprob: -18.625
    7. 'egment' → logprob: -18.875
    8. '[' → logprob: -19.25
    9. '_SEG' → logprob: -20.75
    10. 'Seg' → logprob: -20.75

Token 292: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2527707517147064
    2. ']:
' → logprob: -1.5027707815170288
    3. ']:
' → logprob: -7.502770900726318
    4. ']' → logprob: -9.12777042388916
    5. '):
' → logprob: -9.62777042388916
    6. '):' → logprob: -9.75277042388916
    7. ':' → logprob: -10.62777042388916
    8. '']:
' → logprob: -11.37777042388916
    9. ']:

' → logprob: -12.25277042388916
    10. '']:' → logprob: -12.37777042388916

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06325089931488037
    2. 'segments' → logprob: -2.81325101852417
    3. ' segments' → logprob: -6.93825101852417
    4. 'tokens' → logprob: -8.188250541687012
    5. '   ' → logprob: -11.313250541687012
    6. ' tokens' → logprob: -11.938250541687012
    7. 'result' → logprob: -12.938250541687012
    8. 'parts' → logprob: -13.563250541687012
    9. 'path' → logprob: -13.563250541687012
    10. '[]' → logprob: -13.688250541687012

Token 294: ' #' (ID: 1069)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.11695569008588791
    2. 'parts' → logprob: -2.4919557571411133
    3. ' segments' → logprob: -4.366955757141113
    4. ' parts' → logprob: -4.866955757141113
    5. 'raw' → logprob: -5.866955757141113
    6. '       ' → logprob: -5.866955757141113
    7. 'tokens' → logprob: -7.616955757141113
    8. ' raw' → logprob: -7.866955757141113
    9. 'return' → logprob: -8.491955757141113
    10. 'result' → logprob: -8.616955757141113

Token 295: ' absolute' (ID: 17786)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.47952136397361755
    2. 'segments' → logprob: -1.35452139377594
    3. 'if' → logprob: -2.8545212745666504
    4. ' parts' → logprob: -3.1045212745666504
    5. 'raw' → logprob: -4.72952127456665
    6. ' if' → logprob: -5.10452127456665
    7. ' segments' → logprob: -5.85452127456665
    8. 'split' → logprob: -7.47952127456665
    9. 'components' → logprob: -7.47952127456665
    10. ' raw' → logprob: -7.97952127456665

Token 296: ' path' (ID: 3104)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.5723012685775757
    2. '_segments' → logprob: -1.3223012685775757
    3. ' segments' → logprob: -2.6973013877868652
    4. '_path' → logprob: -3.0723013877868652
    5. ' if' → logprob: -3.6973013877868652
    6. 'if' → logprob: -4.572301387786865
    7. 'path' → logprob: -5.072301387786865
    8. 'tokens' → logprob: -5.697301387786865
    9. ' path' → logprob: -6.197301387786865
    10. '       ' → logprob: -6.197301387786865

Token 297: ' starting' (ID: 8601)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1998627185821533
    2. '       ' → logprob: -1.4498627185821533
    3. 'segments' → logprob: -1.4498627185821533
    4. ' if' → logprob: -2.5748627185821533
    5. '[' → logprob: -2.6998627185821533
    6. ' segments' → logprob: -3.5748627185821533
    7. '=' → logprob: -4.324862480163574
    8. ':' → logprob: -4.324862480163574
    9. 'tokens' → logprob: -4.449862480163574
    10. 'if' → logprob: -5.074862480163574

Token 298: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.03236464783549309
    2. 'from' → logprob: -4.407364845275879
    3. '/' → logprob: -4.532364845275879
    4. ' with' → logprob: -5.157364845275879
    5. 'if' → logprob: -6.282364845275879
    6. '   ' → logprob: -8.032364845275879
    7. '       ' → logprob: -8.532364845275879
    8. ' ' → logprob: -8.907364845275879
    9. '1' → logprob: -9.032364845275879
    10. '[' → logprob: -9.532364845275879

Token 299: ' '/'
' (ID: 176928)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5412110090255737
    2. ''' → logprob: -0.9162110090255737
    3. ''/' → logprob: -4.291211128234863
    4. '"/' → logprob: -6.166211128234863
    5. '('/')' → logprob: -6.416211128234863
    6. ' '/'' → logprob: -8.416211128234863
    7. '/'' → logprob: -8.416211128234863
    8. '['' → logprob: -11.291211128234863
    9. '[' → logprob: -11.541211128234863
    10. '('/' → logprob: -12.541211128234863

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023842107504606247
    2. 'segments' → logprob: -3.8988420963287354
    3. ' if' → logprob: -6.7738423347473145
    4. 'if' → logprob: -7.1488423347473145
    5. ' segments' → logprob: -7.7738423347473145
    6. 'parts' → logprob: -8.148841857910156
    7. 'tokens' → logprob: -8.273841857910156
    8. 'return' → logprob: -8.398841857910156
    9. ' parts' → logprob: -9.023841857910156
    10. ' tokens' → logprob: -11.398841857910156

Token 301: ' #' (ID: 1069)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.27133432030677795
    2. 'parts' → logprob: -1.8963342905044556
    3. 'if' → logprob: -2.896334409713745
    4. '       ' → logprob: -4.146334171295166
    5. 'return' → logprob: -4.521334171295166
    6. 'raw' → logprob: -6.021334171295166
    7. 'tokens' → logprob: -6.396334171295166
    8. 'components' → logprob: -7.771334171295166
    9. ' segments' → logprob: -8.146334648132324
    10. ' parts' → logprob: -8.521334648132324

Token 302: ' convert' (ID: 8452)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.2902141511440277
    2. 'segments' → logprob: -1.66521418094635
    3. 'if' → logprob: -3.0402140617370605
    4. 'raw' → logprob: -4.5402140617370605
    5. ' parts' → logprob: -7.0402140617370605
    6. 'components' → logprob: -7.1652140617370605
    7. 'return' → logprob: -7.4152140617370605
    8. 'split' → logprob: -7.7902140617370605
    9. 'seg' → logprob: -8.290214538574219
    10. '#' → logprob: -8.415214538574219

Token 303: ' to' (ID: 316)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.6942263841629028
    2. 'segments' → logprob: -1.5692263841629028
    3. ' path' → logprob: -1.9442263841629028
    4. 'parts' → logprob: -2.6942262649536133
    5. ' segments' → logprob: -3.4442262649536133
    6. '[path' → logprob: -3.9442262649536133
    7. ' parts' → logprob: -4.069226264953613
    8. '[' → logprob: -5.444226264953613
    9. ' [' → logprob: -6.069226264953613
    10. 'segment' → logprob: -6.944226264953613

Token 304: ' segments' (ID: 33749)
  Prédit: '[path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[path' → logprob: -0.6729846596717834
    2. 'segments' → logprob: -1.4229846000671387
    3. '[' → logprob: -1.5479846000671387
    4. 'path' → logprob: -4.047984600067139
    5. ' [' → logprob: -5.172984600067139
    6. '[]' → logprob: -5.547984600067139
    7. ' segments' → logprob: -5.922984600067139
    8. '[
' → logprob: -6.422984600067139
    9. 'list' → logprob: -6.547984600067139
    10. '[self' → logprob: -6.922984600067139

Token 305: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27785933017730713
    2. 'segments' → logprob: -1.9028593301773071
    3. '[' → logprob: -2.7778592109680176
    4. 'tokens' → logprob: -4.277859210968018
    5. 'return' → logprob: -4.902859210968018
    6. ' segments' → logprob: -6.152859210968018
    7. 'path' → logprob: -6.277859210968018
    8. ' =' → logprob: -6.402859210968018
    9. ' if' → logprob: -6.902859210968018
    10. '[path' → logprob: -7.777859210968018

Token 306: ' ignoring' (ID: 68244)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.32239872217178345
    2. 'parts' → logprob: -2.5723986625671387
    3. ' segments' → logprob: -2.6973986625671387
    4. ' parts' → logprob: -3.1973986625671387
    5. '[path' → logprob: -3.3223986625671387
    6. '[' → logprob: -3.3223986625671387
    7. ' [' → logprob: -5.322398662567139
    8. '       ' → logprob: -5.447398662567139
    9. 'return' → logprob: -5.947398662567139
    10. 'split' → logprob: -7.072398662567139

Token 307: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.11020450294017792
    2. ' empty' → logprob: -2.4852044582366943
    3. '''' → logprob: -3.9852044582366943
    4. 'leading' → logprob: -6.610204696655273
    5. ' leading' → logprob: -6.985204696655273
    6. ' ''' → logprob: -10.110204696655273
    7. '""' → logprob: -10.860204696655273
    8. ''' → logprob: -10.985204696655273
    9. 'con' → logprob: -11.110204696655273
    10. '_empty' → logprob: -11.360204696655273

Token 308: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.6704709529876709
    2. 'segments' → logprob: -1.920470952987671
    3. ' strings' → logprob: -2.170470952987671
    4. 'strings' → logprob: -2.170470952987671
    5. ' parts' → logprob: -2.545470952987671
    6. 'parts' → logprob: -4.29547119140625
    7. '''' → logprob: -4.42047119140625
    8. 'tokens' → logprob: -5.29547119140625
    9. 'string' → logprob: -6.67047119140625
    10. ' tokens' → logprob: -6.79547119140625

Token 309: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13071690499782562
    2. ' =' → logprob: -2.2557168006896973
    3. 'segments' → logprob: -5.505716800689697
    4. '        
' → logprob: -6.005716800689697
    5. '[' → logprob: -6.380716800689697
    6. '=' → logprob: -6.380716800689697
    7. '   ' → logprob: -6.630716800689697
    8. '[]' → logprob: -7.005716800689697
    9. 'return' → logprob: -7.005716800689697
    10. ',' → logprob: -7.380716800689697

Token 310: ' '' (ID: 461)
  Prédit: 'slashes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'slashes' → logprob: -0.014558205381035805
    2. '/' → logprob: -4.3895583152771
    3. ''' → logprob: -6.8895583152771
    4. '/'' → logprob: -7.5145583152771
    5. ' sl' → logprob: -8.264557838439941
    6. ''/' → logprob: -9.014557838439941
    7. 'sl' → logprob: -10.514557838439941
    8. ' '/'' → logprob: -10.514557838439941
    9. 'slash' → logprob: -11.139557838439941
    10. 'spl' → logprob: -11.389557838439941

Token 311: '//'' (ID: 132290)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.61665940284729
    2. '/'' → logprob: -1.49165940284729
    3. 'slashes' → logprob: -1.49165940284729
    4. '//' → logprob: -5.866659164428711
    5. '//'' → logprob: -5.866659164428711
    6. ''' → logprob: -5.991659164428711
    7. '///' → logprob: -6.991659164428711
    8. '////' → logprob: -8.116659164428711
    9. ''/' → logprob: -8.616659164428711
    10. '/')' → logprob: -8.616659164428711

Token 312: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0145501010119915
    2. ' =' → logprob: -5.76455020904541
    3. 'segments' → logprob: -5.76455020904541
    4. ',' → logprob: -6.51455020904541
    5. 's' → logprob: -6.63955020904541
    6. '   ' → logprob: -7.26455020904541
    7. 'tokens' → logprob: -7.26455020904541
    8. '=' → logprob: -7.26455020904541
    9. ' segments' → logprob: -7.51455020904541
    10. ')' → logprob: -7.76455020904541

Token 313: 'not' (ID: 2878)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30899885296821594
    2. 'path' → logprob: -2.3089988231658936
    3. 'segments' → logprob: -2.6839988231658936
    4. 'tokens' → logprob: -3.8089988231658936
    5. '')' → logprob: -3.8089988231658936
    6. ')
' → logprob: -4.308999061584473
    7. '       ' → logprob: -4.683999061584473
    8. ' path' → logprob: -5.058999061584473
    9. 'slashes' → logprob: -5.683999061584473
    10. '   ' → logprob: -5.808999061584473

Token 314: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.9150285124778748
    2. 'consider' → logprob: -1.7900285720825195
    3. ')' → logprob: -2.1650285720825195
    4. 'count' → logprob: -2.6650285720825195
    5. 'split' → logprob: -3.5400285720825195
    6. 'added' → logprob: -3.6650285720825195
    7. ' considered' → logprob: -3.7900285720825195
    8. 'path' → logprob: -4.1650285720825195
    9. ' allowed' → logprob: -4.1650285720825195
    10. 'including' → logprob: -4.6650285720825195

Token 315: ' per' (ID: 777)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21585284173488617
    2. '')' → logprob: -1.9658528566360474
    3. ' or' → logprob: -3.715852737426758
    4. ' but' → logprob: -4.715852737426758
    5. ',' → logprob: -4.840852737426758
    6. ')
' → logprob: -5.465852737426758
    7. ' and' → logprob: -6.465852737426758
    8. 'segments' → logprob: -6.465852737426758
    9. '),' → logprob: -6.965852737426758
    10. '')
' → logprob: -6.965852737426758

Token 316: ' problem' (ID: 4792)
  Prédit: ' spec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spec' → logprob: -0.8992127180099487
    2. 'POS' → logprob: -1.2742127180099487
    3. 'spec' → logprob: -2.0242128372192383
    4. 'pos' → logprob: -2.6492128372192383
    5. 'the' → logprob: -3.5242128372192383
    6. ' POS' → logprob: -4.149212837219238
    7. ' the' → logprob: -4.274212837219238
    8. 'UN' → logprob: -4.399212837219238
    9. ' pos' → logprob: -4.649212837219238
    10. 'Unix' → logprob: -4.774212837219238

Token 317: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.054778456687927246
    2. ' but' → logprob: -4.304778575897217
    3. '       ' → logprob: -4.554778575897217
    4. '')' → logprob: -4.804778575897217
    5. ',' → logprob: -5.179778575897217
    6. ')
' → logprob: -5.179778575897217
    7. '   ' → logprob: -5.929778575897217
    8. '),' → logprob: -6.054778575897217
    9. ' segments' → logprob: -7.054778575897217
    10. ' )' → logprob: -7.304778575897217

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06165502965450287
    2. 'segments' → logprob: -3.436655044555664
    3. ' segments' → logprob: -4.186655044555664
    4. ' parts' → logprob: -5.061655044555664
    5. ' tokens' → logprob: -6.436655044555664
    6. ' if' → logprob: -6.686655044555664
    7. ' return' → logprob: -6.686655044555664
    8. 'return' → logprob: -7.061655044555664
    9. 'tokens' → logprob: -7.436655044555664
    10. 'parts' → logprob: -7.936655044555664

Token 319: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' (adapté à ' segments') → logprob: -0.45512261986732483
    2. 'parts' → logprob: -2.080122709274292
    3. ' parts' → logprob: -2.330122709274292
    4. 'return' → logprob: -2.705122709274292
    5. ' segments' → logprob: -3.330122709274292
    6. '       ' → logprob: -3.580122709274292
    7. ' return' → logprob: -4.580122470855713
    8. 'tokens' → logprob: -7.080122470855713
    9. 'result' → logprob: -8.080122947692871
    10. ' tokens' → logprob: -8.205122947692871

Token 320: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409185767173767
    2. '=' → logprob: -0.9740918874740601
    3. '=[]' → logprob: -11.349091529846191
    4. ':' → logprob: -12.974091529846191
    5. '=[]
' → logprob: -15.724091529846191
    6. ' ' → logprob: -15.974091529846191
    7. ')' → logprob: -16.099092483520508
    8. ' =[' → logprob: -16.099092483520508
    9. 's' → logprob: -16.349092483520508
    10. ']' → logprob: -16.849092483520508

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048601001501083374
    2. '=' → logprob: -3.048600912094116
    3. 's' → logprob: -11.423601150512695
    4. '=[]' → logprob: -13.048601150512695
    5. ':' → logprob: -15.673601150512695
    6. '=[]
' → logprob: -16.423601150512695
    7. ' ' → logprob: -16.423601150512695
    8. '[]' → logprob: -17.048601150512695
    9. ')' → logprob: -17.298601150512695
    10. '=s' → logprob: -17.673601150512695

Token 322: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.15628144145011902
    2. ' path' → logprob: -2.0312814712524414
    3. '[path' → logprob: -4.531281471252441
    4. '[' → logprob: -6.406281471252441
    5. ' [' → logprob: -6.906281471252441
    6. '   ' → logprob: -10.906281471252441
    7. '[
' → logprob: -10.906281471252441
    8. '(path' → logprob: -11.031281471252441
    9. '[]' → logprob: -11.406281471252441
    10. '	path' → logprob: -11.531281471252441

Token 323: '.strip' (ID: 40613)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03249216824769974
    2. '.strip' → logprob: -4.032492160797119
    3. '.split' → logprob: -4.282492160797119
    4. '.l' → logprob: -7.782492160797119
    5. '.' → logprob: -11.907492637634277
    6. '.rstrip' → logprob: -12.532492637634277
    7. 'split' → logprob: -13.282492637634277
    8. ' .' → logprob: -13.782492637634277
    9. '   ' → logprob: -14.032492637634277
    10. '[len' → logprob: -15.032492637634277

Token 324: '('/')
' (ID: 103358)
  Prédit: '('/')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('/')' → logprob: -0.009076936170458794
    2. '('/' → logprob: -4.759077072143555
    3. '("/")' → logprob: -8.259077072143555
    4. '('/')
' → logprob: -9.134077072143555
    5. '().' → logprob: -10.134077072143555
    6. '()' → logprob: -10.759077072143555
    7. '(' → logprob: -10.884077072143555
    8. '('' → logprob: -11.634077072143555
    9. ' '/'' → logprob: -12.759077072143555
    10. '('/',' → logprob: -13.509077072143555

Token 325: '       ' (ID: 309)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.017721399664878845
    2. '().' → logprob: -4.767721176147461
    3. ').' → logprob: -5.017721176147461
    4. '       ' → logprob: -6.142721176147461
    5. '.' → logprob: -9.142721176147461
    6. 'split' → logprob: -9.142721176147461
    7. ' .' → logprob: -10.392721176147461
    8. '].' → logprob: -10.892721176147461
    9. 'segments' → logprob: -11.142721176147461
    10. '').' → logprob: -12.142721176147461

Token 326: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03292342275381088
    2. 'segments' → logprob: -3.657923460006714
    3. 'parts' → logprob: -5.907923221588135
    4. 'return' → logprob: -6.532923221588135
    5. ' if' → logprob: -6.782923221588135
    6. '       ' → logprob: -7.157923221588135
    7. 'split' → logprob: -8.282923698425293
    8. 'raw' → logprob: -9.532923698425293
    9. '[' → logprob: -9.782923698425293
    10. 'segment' → logprob: -9.907923698425293

Token 327: ' segments' (ID: 33749)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.816663920879364
    2. 'not' → logprob: -0.941663920879364
    3. 'segments' → logprob: -2.066663980484009
    4. ' segments' → logprob: -3.191663980484009
    5. 'path' → logprob: -8.69166374206543
    6. ' path' → logprob: -9.31666374206543
    7. 'len' → logprob: -10.06666374206543
    8. ' len' → logprob: -10.19166374206543
    9. '!' → logprob: -10.94166374206543
    10. 'paths' → logprob: -11.69166374206543

Token 328: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.19991841912269592
    2. '==' → logprob: -1.9499183893203735
    3. ' ==' → logprob: -3.324918508529663
    4. '=' → logprob: -6.949918270111084
    5. ':' → logprob: -7.199918270111084
    6. ' ' → logprob: -8.324918746948242
    7. '_' → logprob: -8.574918746948242
    8. '_segments' → logprob: -8.699918746948242
    9. '   ' → logprob: -9.199918746948242
    10. 'str' → logprob: -9.324918746948242

Token 329: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08961408585309982
    2. '==' → logprob: -2.464614152908325
    3. ':' → logprob: -7.464613914489746
    4. '=' → logprob: -10.464613914489746
    5. ' is' → logprob: -11.089613914489746
    6. ')' → logprob: -11.339613914489746
    7. ' =' → logprob: -11.464613914489746
    8. '.split' → logprob: -11.714613914489746
    9. '=='' → logprob: -12.339613914489746
    10. ' !=' → logprob: -12.714613914489746

Token 330: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.12898479402065277
    2. ''' → logprob: -2.1289846897125244
    3. '""' → logprob: -6.5039849281311035
    4. '"":' → logprob: -7.7539849281311035
    5. '"' → logprob: -9.128984451293945
    6. ' '' → logprob: -11.378984451293945
    7. ' '':
' → logprob: -12.378984451293945
    8. ' ''' → logprob: -13.503984451293945
    9. '''
' → logprob: -13.878984451293945
    10. '':' → logprob: -14.378984451293945

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002168698003515601
    2. 'return' → logprob: -6.252168655395508
    3. ' return' → logprob: -8.627168655395508
    4. '       ' → logprob: -9.877168655395508
    5. '[]' → logprob: -12.877168655395508
    6. ':return' → logprob: -13.752168655395508
    7. ':' → logprob: -14.002168655395508
    8. '   ' → logprob: -14.127168655395508
    9. ',' → logprob: -14.127168655395508
    10. '	       ' → logprob: -14.252168655395508

Token 332: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005112105864100158
    2. ' return' → logprob: -8.625511169433594
    3. '[]
' → logprob: -8.625511169433594
    4. '[]' → logprob: -9.000511169433594
    5. '           ' → logprob: -10.500511169433594
    6. '       ' → logprob: -14.125511169433594
    7. '   ' → logprob: -15.875511169433594
    8. ' []
' → logprob: -16.125511169433594
    9. '	return' → logprob: -17.125511169433594
    10. '               ' → logprob: -17.125511169433594

Token 333: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.2246291337069124e-05
    2. '[]
' → logprob: -10.750021934509277
    3. '[' → logprob: -14.750021934509277
    4. '[]

' → logprob: -15.250021934509277
    5. '[])' → logprob: -16.125022888183594
    6. '[]}' → logprob: -16.625022888183594
    7. '[]"' → logprob: -17.000022888183594
    8. ' []' → logprob: -18.125022888183594
    9. '[]>' → logprob: -18.625022888183594
    10. '[],' → logprob: -19.750022888183594

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018965097842738032
    2. '        
' → logprob: -6.501896381378174
    3. '
' → logprob: -8.251896858215332
    4. '    
' → logprob: -10.626896858215332
    5. 'segments' → logprob: -10.751896858215332
    6. 'tokens' → logprob: -10.876896858215332
    7. '[' → logprob: -11.876896858215332
    8. '[]' → logprob: -11.876896858215332
    9. ')' → logprob: -12.001896858215332
    10. 'return' → logprob: -12.376896858215332

Token 335: ' parts' (ID: 7881)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5335791110992432
    2. 'segments' → logprob: -1.2835791110992432
    3. '       ' → logprob: -2.033579111099243
    4. 'parts' (adapté à ' parts') → logprob: -5.533578872680664
    5. 'tokens' → logprob: -6.783578872680664
    6. ' return' → logprob: -8.658578872680664
    7. ' segments' → logprob: -8.783578872680664
    8. 'segment' → logprob: -9.908578872680664
    9. '[' → logprob: -10.158578872680664
    10. 'seg' → logprob: -10.408578872680664

Token 336: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022443771362305
    2. ' =' → logprob: -1.910224437713623
    3. ')' → logprob: -16.91022491455078
    4. '[' → logprob: -17.16022491455078
    5. ':' → logprob: -17.91022491455078
    6. '=[]' → logprob: -18.16022491455078
    7. '＝' → logprob: -18.28522491455078
    8. ' ' → logprob: -18.41022491455078
    9. '.' → logprob: -18.53522491455078
    10. '   ' → logprob: -18.53522491455078

Token 337: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.008619658648967743
    2. ' segments' → logprob: -4.758619785308838
    3. '[' → logprob: -12.63361930847168
    4. 'path' → logprob: -13.50861930847168
    5. ' [' → logprob: -14.75861930847168
    6. ' path' → logprob: -17.25861930847168
    7. '[path' → logprob: -17.75861930847168
    8. 'segment' → logprob: -18.63361930847168
    9. 'Segments' → logprob: -18.88361930847168
    10. '   ' → logprob: -19.50861930847168

Token 338: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0003565575461834669
    2. 'str' → logprob: -8.125356674194336
    3. ')' → logprob: -11.625356674194336
    4. 'split' → logprob: -11.750356674194336
    5. '[' → logprob: -12.125356674194336
    6. 'segments' → logprob: -12.125356674194336
    7. '[-' → logprob: -12.500356674194336
    8. 's' → logprob: -12.625356674194336
    9. 'Str' → logprob: -12.750356674194336
    10. '_)' → logprob: -13.000356674194336

Token 339: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -1.7954958821064793e-05
    2. '.' → logprob: -11.000018119812012
    3. ' .' → logprob: -13.750018119812012
    4. 'split' → logprob: -15.875018119812012
    5. '.strip' → logprob: -18.125017166137695
    6. '.Split' → logprob: -18.625017166137695
    7. '.replace' → logprob: -19.000017166137695
    8. 'spl' → logprob: -20.875017166137695
    9. ' split' → logprob: -21.250017166137695
    10. '.lower' → logprob: -21.875017166137695

Token 340: '('/')
' (ID: 103358)
  Prédit: '('/')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('/')' → logprob: -0.0007152927573770285
    2. '('/' → logprob: -8.000715255737305
    3. '/' → logprob: -8.375715255737305
    4. '('/')
' → logprob: -9.125715255737305
    5. '(' → logprob: -10.500715255737305
    6. '/'' → logprob: -11.875715255737305
    7. '("/")' → logprob: -13.000715255737305
    8. ''' → logprob: -13.500715255737305
    9. ''/' → logprob: -14.000715255737305
    10. '('' → logprob: -14.375715255737305

Token 341: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5018664598464966
    2. '       ' → logprob: -1.2518664598464966
    3. 'segments' → logprob: -2.501866340637207
    4. '
' → logprob: -4.001866340637207
    5. '[' → logprob: -5.251866340637207
    6. ' return' → logprob: -6.376866340637207
    7. ' segments' → logprob: -7.501866340637207
    8. '        
' → logprob: -8.001866340637207
    9. '[
' → logprob: -8.501866340637207
    10. '[]
' → logprob: -9.501866340637207

Token 342: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00037597675691358745
    2. 'segments' → logprob: -8.500375747680664
    3. '       ' → logprob: -8.750375747680664
    4. ' return' → logprob: -11.250375747680664
    5. 'result' → logprob: -14.000375747680664
    6. '[' → logprob: -16.375375747680664
    7. '   ' → logprob: -17.875375747680664
    8. ' segments' → logprob: -18.250375747680664
    9. '        
' → logprob: -18.625375747680664
    10. '	return' → logprob: -18.750375747680664

Token 343: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005264613428153098
    2. ' [' → logprob: -8.250526428222656
    3. '[List' → logprob: -8.250526428222656
    4. '[self' → logprob: -13.375526428222656
    5. '[list' → logprob: -13.625526428222656
    6. '   ' → logprob: -14.250526428222656
    7. '[Index' → logprob: -15.000526428222656
    8. '[path' → logprob: -15.625526428222656
    9. '[len' → logprob: -17.000526428222656
    10. '       ' → logprob: -17.125526428222656

Token 344: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -1.9361264946837764e-07
    2. ' Path' → logprob: -16.25
    3. '	Path' → logprob: -21.25
    4. '   ' → logprob: -24.5
    5. '(Path' → logprob: -24.75
    6. '<Path' → logprob: -25.5
    7. '@Path' → logprob: -26.25
    8. 'path' → logprob: -27.75
    9. '_Path' → logprob: -27.75
    10. '       ' → logprob: -27.875

Token 345: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -9.088346359931165e-07
    2. 'segment' → logprob: -15.000000953674316
    3. 'Segments' → logprob: -15.750000953674316
    4. ' Segment' → logprob: -16.25
    5. '_segment' → logprob: -16.875
    6. 'Part' → logprob: -17.125
    7. 'Seg' → logprob: -17.25
    8. 'Path' → logprob: -17.5
    9. 'segments' → logprob: -17.625
    10. '[' → logprob: -17.625

Token 346: '(part' (ID: 51033)
  Prédit: '(part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.004520907998085022
    2. 'part' → logprob: -6.004520893096924
    3. '(p' → logprob: -6.254520893096924
    4. '(name' → logprob: -9.254521369934082
    5. '(parts' → logprob: -11.379521369934082
    6. '(' → logprob: -12.004521369934082
    7. 'p' → logprob: -12.254521369934082
    8. '(s' → logprob: -14.129521369934082
    9. '(segment' → logprob: -14.379521369934082
    10. ' part' → logprob: -14.504521369934082

Token 347: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ' )' → logprob: -12.625005722045898
    3. ')]' → logprob: -12.875005722045898
    4. 'for' → logprob: -16.7500057220459
    5. ')
' → logprob: -17.2500057220459
    6. '))' → logprob: -17.8750057220459
    7. ')])' → logprob: -17.8750057220459
    8. '   ' → logprob: -18.3750057220459
    9. '       ' → logprob: -18.5000057220459
    10. ' for' → logprob: -18.7500057220459

Token 348: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030045632272958755
    2. 'for' → logprob: -3.530045747756958
    3. ')' → logprob: -8.155045509338379
    4. '       ' → logprob: -12.780045509338379
    5. ' )' → logprob: -13.155045509338379
    6. '        ' → logprob: -13.905045509338379
    7. '           ' → logprob: -14.405045509338379
    8. '	for' → logprob: -14.530045509338379
    9. ' ' → logprob: -14.655045509338379
    10. ']' → logprob: -15.530045509338379

Token 349: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.16027328372001648
    2. ' part' → logprob: -1.9102733135223389
    3. '	part' → logprob: -10.035273551940918
    4. '(part' → logprob: -12.535273551940918
    5. '_part' → logprob: -14.285273551940918
    6. 'Part' → logprob: -14.535273551940918
    7. '.part' → logprob: -15.410273551940918
    8. ' ' → logprob: -15.785273551940918
    9. ' ' → logprob: -17.2852725982666
    10. '   ' → logprob: -17.5352725982666

Token 350: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0052392068319022655
    2. 'in' → logprob: -5.255239009857178
    3. ' ' → logprob: -12.255239486694336
    4. '  ' → logprob: -14.755239486694336
    5. '_in' → logprob: -16.505239486694336
    6. '	in' → logprob: -16.505239486694336
    7. 'part' → logprob: -16.880239486694336
    8. '   ' → logprob: -16.880239486694336
    9. ' ' → logprob: -17.755239486694336
    10. ' i' → logprob: -18.005239486694336

Token 351: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.001332382787950337
    2. ' parts' → logprob: -6.6263322830200195
    3. '(parts' → logprob: -12.25133228302002
    4. 'part' → logprob: -13.50133228302002
    5. '   ' → logprob: -16.501333236694336
    6. ' ' → logprob: -16.751333236694336
    7. 'segments' → logprob: -17.001333236694336
    8. '.parts' → logprob: -17.001333236694336
    9. '[' → logprob: -17.251333236694336
    10. '
' → logprob: -17.251333236694336

Token 352: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014022637624293566
    2. ' ]' → logprob: -6.626402378082275
    3. '       ' → logprob: -10.626401901245117
    4. ']
' → logprob: -10.626401901245117
    5. '<|end|>' → logprob: -11.001401901245117
    6. '   ' → logprob: -12.001401901245117
    7. ')' → logprob: -13.501401901245117
    8. '<|end|>' → logprob: -14.001401901245117
    9. ')]' → logprob: -14.376401901245117
    10. '
' → logprob: -14.876401901245117

Token 353: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00220687803812325
    2. '   ' → logprob: -6.502206802368164
    3. ' def' → logprob: -7.752206802368164
    4. '    
' → logprob: -8.252206802368164
    5. '        
' → logprob: -12.627206802368164
    6. '
' → logprob: -12.627206802368164
    7. '  
' → logprob: -13.252206802368164
    8. ' 
' → logprob: -13.502206802368164
    9. '<|end|>' → logprob: -13.627206802368164
    10. '   
' → logprob: -14.502206802368164

Token 355: ' __' (ID: 2516)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.6750323176383972
    2. ' normalize' → logprob: -1.425032377243042
    3. ' __' → logprob: -2.050032377243042
    4. '__' → logprob: -2.425032377243042
    5. ' normalized' → logprob: -4.300032138824463
    6. '_normal' → logprob: -4.675032138824463
    7. 'normalized' → logprob: -5.425032138824463
    8. 'is' → logprob: -5.925032138824463
    9. ' _' → logprob: -6.925032138824463
    10. ' is' → logprob: -7.300032138824463

Token 356: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.007028877269476652
    2. 'repr' → logprob: -5.257029056549072
    3. 'init' → logprob: -6.882029056549072
    4. 'iter' → logprob: -7.882029056549072
    5. 'len' → logprob: -8.132028579711914
    6. 'str' → logprob: -9.632028579711914
    7. 'lt' → logprob: -11.132028579711914
    8. 'hash' → logprob: -11.132028579711914
    9. 'bool' → logprob: -14.132028579711914
    10. '_eq' → logprob: -16.257028579711914

Token 357: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00025192240718752146
    2. '__(
' → logprob: -9.000251770019531
    3. '(self' → logprob: -9.125251770019531
    4. '__' → logprob: -10.875251770019531
    5. '__('' → logprob: -15.375251770019531
    6. '_(' → logprob: -15.875251770019531
    7. '__((' → logprob: -16.25025177001953
    8. '(' → logprob: -16.37525177001953
    9. 'self' → logprob: -16.62525177001953
    10. '__("' → logprob: -16.87525177001953

Token 358: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1994775377388578e-05
    2. ')' → logprob: -11.375012397766113
    3. ' self' → logprob: -14.750012397766113
    4. '
' → logprob: -17.500011444091797
    5. '(self' → logprob: -18.000011444091797
    6. '):
' → logprob: -19.125011444091797
    7. 'Self' → logprob: -19.125011444091797
    8. ')
' → logprob: -19.375011444091797
    9. 's' → logprob: -19.500011444091797
    10. ' ' → logprob: -20.250011444091797

Token 359: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8473744988441467
    2. '):
' → logprob: -1.097374439239502
    3. 'self' → logprob: -1.722374439239502
    4. ')' → logprob: -2.972374439239502
    5. '(self' → logprob: -5.847374439239502
    6. '__' → logprob: -5.972374439239502
    7. ' self' → logprob: -6.972374439239502
    8. '   ' → logprob: -7.597374439239502
    9. ')__' → logprob: -8.22237491607666
    10. ').__' → logprob: -8.72237491607666

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08267335593700409
    2. ' f' → logprob: -3.2076733112335205
    3. 'f' → logprob: -3.3326733112335205
    4. 'self' → logprob: -5.8326735496521
    5. 'return' → logprob: -8.957673072814941
    6. ' self' → logprob: -9.457673072814941
    7. '   ' → logprob: -10.582673072814941
    8. '           ' → logprob: -11.082673072814941
    9. ' return' → logprob: -11.207673072814941
    10. '(f' → logprob: -13.082673072814941

Token 361: ' return' (ID: 622)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.33376345038414
    2. 'f' → logprob: -1.5837634801864624
    3. '       ' → logprob: -2.958763360977173
    4. 'return' (adapté à ' return') → logprob: -4.208763599395752
    5. ' return' → logprob: -4.458763599395752
    6. '"' → logprob: -8.958763122558594
    7. '   ' → logprob: -9.958763122558594
    8. ''' → logprob: -11.583763122558594
    9. 'F' → logprob: -11.708763122558594
    10. ' ' → logprob: -11.708763122558594

Token 362: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.839121826691553e-05
    2. ' f' → logprob: -9.500078201293945
    3. '"' → logprob: -12.625078201293945
    4. ''f' → logprob: -15.875078201293945
    5. '(f' → logprob: -17.250078201293945
    6. '   ' → logprob: -17.375078201293945
    7. ''' → logprob: -17.875078201293945
    8. '	f' → logprob: -18.875078201293945
    9. 'repr' → logprob: -19.250078201293945
    10. 'F' → logprob: -19.500078201293945

Token 363: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0331784226000309
    2. 'Path' → logprob: -3.5331783294677734
    3. '(f' → logprob: -6.658178329467773
    4. '"' → logprob: -6.908178329467773
    5. '(Path' → logprob: -7.408178329467773
    6. ' f' → logprob: -8.408178329467773
    7. '<Path' → logprob: -8.658178329467773
    8. ' Path' → logprob: -9.908178329467773
    9. 'repr' → logprob: -10.533178329467773
    10. '_Path' → logprob: -11.158178329467773

Token 364: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.0004331725067459047
    2. '<Path' → logprob: -8.500432968139648
    3. '{' → logprob: -8.875432968139648
    4. 'f' → logprob: -9.625432968139648
    5. ''{' → logprob: -11.875432968139648
    6. ''' → logprob: -12.125432968139648
    7. '<' → logprob: -12.500432968139648
    8. '<{' → logprob: -13.750432968139648
    9. 'pathname' → logprob: -14.000432968139648
    10. ' Path' → logprob: -14.000432968139648

Token 365: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -3.619311974034645e-05
    2. 'Segment' → logprob: -10.250036239624023
    3. '(name' → logprob: -14.500036239624023
    4. '(' → logprob: -16.750036239624023
    5. 'string' → logprob: -16.875036239624023
    6. '{' → logprob: -17.250036239624023
    7. 'nam' → logprob: -17.375036239624023
    8. 'segment' → logprob: -17.875036239624023
    9. 'n' → logprob: -18.000036239624023
    10. '{name' → logprob: -18.375036239624023

Token 366: '({' (ID: 3972)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.36096689105033875
    2. '({' → logprob: -1.6109669208526611
    3. '(' → logprob: -2.610966920852661
    4. '("' → logprob: -4.360966682434082
    5. '('' → logprob: -4.485966682434082
    6. '([' → logprob: -6.110966682434082
    7. '(self' → logprob: -6.485966682434082
    8. '(raw' → logprob: -6.985966682434082
    9. '((' → logprob: -8.235966682434082
    10. '("("' → logprob: -8.235966682434082

Token 367: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4541725814342499
    2. ''/' → logprob: -1.0791726112365723
    3. ''' → logprob: -4.704172611236572
    4. 'repr' → logprob: -4.829172611236572
    5. '''.' → logprob: -5.454172611236572
    6. '',' → logprob: -6.704172611236572
    7. '[self' → logprob: -7.454172611236572
    8. '','.' → logprob: -7.579172611236572
    9. ''s' → logprob: -7.704172611236572
    10. ''.' → logprob: -7.829172611236572

Token 368: '.raw' (ID: 36636)
  Prédit: '.raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.raw' → logprob: -4.5491004129871726e-05
    2. '.' → logprob: -10.375045776367188
    3. '.se' → logprob: -11.875045776367188
    4. '.re' → logprob: -12.375045776367188
    5. 'raw' → logprob: -13.375045776367188
    6. ''.' → logprob: -14.500045776367188
    7. '}.' → logprob: -15.375045776367188
    8. '.rep' → logprob: -15.500045776367188
    9. ' .' → logprob: -16.000045776367188
    10. ').' → logprob: -16.250045776367188

Token 369: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -6.153795766294934e-06
    2. '_' → logprob: -12.375005722045898
    3. 'path' → logprob: -13.625005722045898
    4. 'Path' → logprob: -15.375005722045898
    5. ''_' → logprob: -16.1250057220459
    6. '_Path' → logprob: -17.0000057220459
    7. '"path' → logprob: -17.1250057220459
    8. '_PATH' → logprob: -17.5000057220459
    9. '"_' → logprob: -17.5000057220459
    10. ')_' → logprob: -17.6250057220459

Token 370: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.04323623329401016
    2. ')' → logprob: -3.293236255645752
    3. ')")' → logprob: -5.418236255645752
    4. '})' → logprob: -7.793236255645752
    5. ')">' → logprob: -9.043235778808594
    6. '}")' → logprob: -9.168235778808594
    7. ')`' → logprob: -10.543235778808594
    8. '')"' → logprob: -10.793235778808594
    9. '")' → logprob: -11.168235778808594
    10. '}"' → logprob: -11.418235778808594

Token 371: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8512976169586182
    2. 'def' → logprob: -0.9762976169586182
    3. '   ' → logprob: -1.7262976169586182
    4. '    
' → logprob: -4.226297378540039
    5. ' def' → logprob: -5.851297378540039
    6. '<|end|>' → logprob: -8.351297378540039
    7. ' 
' → logprob: -8.851297378540039
    8. '@property' → logprob: -8.851297378540039
    9. '

' → logprob: -8.851297378540039
    10. '  
' → logprob: -9.976297378540039

Token 373: ' Directory' (ID: 32740)
  Prédit: 'Normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Normalized' → logprob: -0.7192174196243286
    2. 'Path' → logprob: -0.9692174196243286
    3. 'Absolute' → logprob: -2.719217300415039
    4. 'Resolved' → logprob: -4.219217300415039
    5. ' Path' → logprob: -4.594217300415039
    6. 'File' → logprob: -4.969217300415039
    7. ' Normal' → logprob: -5.219217300415039
    8. 'Normal' → logprob: -5.344217300415039
    9. 'Canonical' → logprob: -5.344217300415039
    10. 'Relative' → logprob: -5.719217300415039

Token 374: 'Tree' (ID: 8062)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.142660990357399
    2. ':
' → logprob: -2.1426610946655273
    3. 'Node' → logprob: -5.392661094665527
    4. 'Path' → logprob: -5.517661094665527
    5. 'Tree' → logprob: -5.767661094665527
    6. '(' → logprob: -6.767661094665527
    7. 'Entry' → logprob: -7.017661094665527
    8. '(Path' → logprob: -7.767661094665527
    9. 'Lister' → logprob: -8.392661094665527
    10. '(Tree' → logprob: -8.892661094665527

Token 375: 'Node' (ID: 2701)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009328982559964061
    2. ':
' → logprob: -7.000932693481445
    3. '(object' → logprob: -12.125932693481445
    4. '(' → logprob: -12.500932693481445
    5. '():' → logprob: -12.875932693481445
    6. '<|end|>' → logprob: -13.000932693481445
    7. '):' → logprob: -13.250932693481445
    8. ':

' → logprob: -13.750932693481445
    9. ':def' → logprob: -14.250932693481445
    10. '>:' → logprob: -14.375932693481445

Token 376: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003625008510425687
    2. ':
' → logprob: -5.62862491607666
    3. '<|end|>' → logprob: -12.00362491607666
    4. '):' → logprob: -12.25362491607666
    5. '(object' → logprob: -12.50362491607666
    6. '(' → logprob: -12.62862491607666
    7. ':

' → logprob: -13.37862491607666
    8. ' :' → logprob: -13.50362491607666
    9. '   ' → logprob: -14.00362491607666
    10. '():' → logprob: -14.62862491607666

Token 377: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41237351298332214
    2. ':
' → logprob: -1.1623735427856445
    3. '   ' → logprob: -3.7873735427856445
    4. '<|end|>' → logprob: -6.2873735427856445
    5. '):
' → logprob: -8.162373542785645
    6. 'def' → logprob: -8.787373542785645
    7. '  ' → logprob: -10.412373542785645
    8. '(object' → logprob: -10.537373542785645
    9. '```' → logprob: -10.787373542785645
    10. '):' → logprob: -10.787373542785645

Token 378: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29736512899398804
    2. '__' → logprob: -1.9223651885986328
    3. 'class' → logprob: -3.172365188598633
    4. ':
' → logprob: -3.672365188598633
    5. ' __' → logprob: -3.922365188598633
    6. 'def' → logprob: -4.922365188598633
    7. '
' → logprob: -5.172365188598633
    8. '<|end|>' → logprob: -5.672365188598633
    9. ' ' → logprob: -6.422365188598633
    10. '):
' → logprob: -7.047365188598633

Token 379: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9383713006973267
    2. '__' → logprob: -1.0633713006973267
    3. '   ' → logprob: -1.5633713006973267
    4. 'def' → logprob: -4.063371181488037
    5. 'object' → logprob: -4.063371181488037
    6. '
' → logprob: -4.563371181488037
    7. '):
' → logprob: -6.313371181488037
    8. '...' → logprob: -6.813371181488037
    9. '```' → logprob: -7.063371181488037
    10. '    
' → logprob: -7.188371181488037

Token 380: ' Node' (ID: 10882)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.23442909121513367
    2. 'def' → logprob: -2.359429121017456
    3. '__' → logprob: -2.609429121017456
    4. '   ' → logprob: -3.359429121017456
    5. ' def' → logprob: -5.609428882598877
    6. 'from' → logprob: -7.234428882598877
    7. ' __' → logprob: -7.859428882598877
    8. '<|end|>' → logprob: -8.359429359436035
    9. ' class' → logprob: -8.484429359436035
    10. ' ' → logprob: -8.859429359436035

Token 381: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0251331329345703
    2. 'a' → logprob: -1.2751331329345703
    3. ' the' → logprob: -1.6501331329345703
    4. 'the' → logprob: -1.7751331329345703
    5. 'directory' → logprob: -8.27513313293457
    6. 'Directory' → logprob: -10.52513313293457
    7. ' an' → logprob: -10.77513313293457
    8. 'an' → logprob: -11.52513313293457
    9. ' directory' → logprob: -11.65013313293457
    10. '#' → logprob: -11.65013313293457

Token 383: ' tree' (ID: 8165)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.5204662084579468
    2. 'filesystem' → logprob: -1.2704662084579468
    3. 'file' → logprob: -2.5204663276672363
    4. ' directory' → logprob: -4.270466327667236
    5. ' file' → logprob: -4.645466327667236
    6. 'tree' → logprob: -4.895466327667236
    7. 'tr' → logprob: -5.020466327667236
    8. ' filesystem' → logprob: -5.270466327667236
    9. 'path' → logprob: -8.020465850830078
    10. 'n' → logprob: -8.145465850830078

Token 384: ' representing' (ID: 25389)
  Prédit: ' structure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' structure' → logprob: -0.6935953497886658
    2. ' representing' → logprob: -1.1935954093933105
    3. '<|end|>' → logprob: -2.3185954093933105
    4. ' of' → logprob: -3.1935954093933105
    5. ' that' → logprob: -4.1935954093933105
    6. '.' → logprob: -4.4435954093933105
    7. 'structure' → logprob: -4.8185954093933105
    8. '
' → logprob: -5.0685954093933105
    9. 'class' → logprob: -5.4435954093933105
    10. ',' → logprob: -5.6935954093933105

Token 385: ' directory' (ID: 12552)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.642188310623169
    2. ' a' → logprob: -0.767188310623169
    3. 'directory' → logprob: -5.64218807220459
    4. ' the' → logprob: -6.14218807220459
    5. 'the' → logprob: -6.26718807220459
    6. ' directory' → logprob: -7.26718807220459
    7. ' directories' → logprob: -7.39218807220459
    8. 'directories' → logprob: -7.76718807220459
    9. 'filesystem' → logprob: -9.64218807220459
    10. 'each' → logprob: -10.51718807220459

Token 386: ' file' (ID: 1974)
  Prédit: ' structure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' structure' → logprob: -0.029831020161509514
    2. 'structure' → logprob: -4.7798309326171875
    3. '<|end|>' → logprob: -5.0298309326171875
    4. ' or' → logprob: -5.2798309326171875
    5. ' contents' → logprob: -5.9048309326171875
    6. 'name' → logprob: -6.1548309326171875
    7. ' and' → logprob: -6.7798309326171875
    8. ' entries' → logprob: -7.0298309326171875
    9. ' name' → logprob: -7.4048309326171875
    10. 'children' → logprob: -7.9048309326171875

Token 387: ' system' (ID: 2420)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10263917595148087
    2. 'system' → logprob: -2.6026391983032227
    3. ' system' → logprob: -3.8526391983032227
    4. ' or' → logprob: -6.727639198303223
    5. ' and' → logprob: -7.852639198303223
    6. 'paths' → logprob: -8.602639198303223
    7. ' structure' → logprob: -9.227639198303223
    8. ' entries' → logprob: -9.727639198303223
    9. 'structure' → logprob: -9.727639198303223
    10. 'systems' → logprob: -10.227639198303223

Token 388: ' structure' (ID: 8866)
  Prédit: ' structure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' structure' → logprob: -0.03267943114042282
    2. 'structure' → logprob: -4.282679557800293
    3. '.' → logprob: -4.782679557800293
    4. ' with' → logprob: -6.282679557800293
    5. ',' → logprob: -6.657679557800293
    6. ' entries' → logprob: -6.782679557800293
    7. '   ' → logprob: -6.782679557800293
    8. ' and' → logprob: -6.907679557800293
    9. ' or' → logprob: -7.657679557800293
    10. 'entries' → logprob: -7.782679557800293

Token 389: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38424158096313477
    2. ':
' → logprob: -1.2592415809631348
    3. '   ' → logprob: -3.8842415809631348
    4. '.' → logprob: -5.009241580963135
    5. ',' → logprob: -5.884241580963135
    6. '):
' → logprob: -6.134241580963135
    7. '):' → logprob: -6.509241580963135
    8. '<|end|>' → logprob: -7.009241580963135
    9. ')' → logprob: -8.884241104125977
    10. '.
' → logprob: -9.009241104125977

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005637573776766658
    2. 'class' → logprob: -7.875563621520996
    3. '
' → logprob: -9.500563621520996
    4. '    
' → logprob: -9.750563621520996
    5. '<|end|>' → logprob: -10.500563621520996
    6. '```' → logprob: -11.875563621520996
    7. '  ' → logprob: -12.375563621520996
    8. ' class' → logprob: -12.875563621520996
    9. '    ' → logprob: -12.875563621520996
    10. ' ' → logprob: -12.875563621520996

Token 391: ' Stores' (ID: 60337)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009418047033250332
    2. 'class' → logprob: -4.75941801071167
    3. ' class' → logprob: -7.63441801071167
    4. '
' → logprob: -8.884418487548828
    5. ' ' → logprob: -9.384418487548828
    6. '  ' → logprob: -11.009418487548828
    7. '    
' → logprob: -11.259418487548828
    8. '<|end|>' → logprob: -11.509418487548828
    9. 'Each' → logprob: -11.509418487548828
    10. '```' → logprob: -11.634418487548828

Token 392: ' child' (ID: 2320)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.4812185764312744
    2. 'name' → logprob: -1.3562185764312744
    3. ' its' → logprob: -3.1062185764312744
    4. 'segment' → logprob: -3.9812185764312744
    5. ' a' → logprob: -4.106218338012695
    6. ' the' → logprob: -4.231218338012695
    7. 'a' → logprob: -5.231218338012695
    8. ' segment' → logprob: -5.231218338012695
    9. ' children' → logprob: -5.356218338012695
    10. 'directory' → logprob: -5.481218338012695

Token 393: ' directories' (ID: 58917)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ren' → logprob: -0.0025068165268749
    2. '_nodes' → logprob: -6.127506732940674
    3. 's' → logprob: -9.002507209777832
    4. 'rens' → logprob: -10.002507209777832
    5. 'reen' → logprob: -10.627507209777832
    6. 'r' → logprob: -10.877507209777832
    7. 're' → logprob: -11.377507209777832
    8. 'nodes' → logprob: -11.377507209777832
    9. ' ren' → logprob: -11.502507209777832
    10. '_name' → logprob: -11.627507209777832

Token 394: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6724876165390015
    2. ' and' → logprob: -0.7974876165390015
    3. ':' → logprob: -4.297487735748291
    4. 'and' → logprob: -4.922487735748291
    5. '.' → logprob: -5.172487735748291
    6. '<|end|>' → logprob: -5.297487735748291
    7. 'directories' → logprob: -5.922487735748291
    8. ' as' → logprob: -6.547487735748291
    9. ',
' → logprob: -7.422487735748291
    10. ' directories' → logprob: -7.422487735748291

Token 395: ' files' (ID: 6291)
  Prédit: 'files'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'files' → logprob: -0.004713376518338919
    2. ' files' → logprob: -5.629713535308838
    3. 'file' → logprob: -7.004713535308838
    4. 'fil' → logprob: -9.62971305847168
    5. 'their' → logprob: -10.37971305847168
    6. 'Path' → logprob: -10.62971305847168
    7. 'parent' → logprob: -11.25471305847168
    8. 'File' → logprob: -11.25471305847168
    9. 'paths' → logprob: -11.37971305847168
    10. ' their' → logprob: -12.25471305847168

Token 396: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20304685831069946
    2. '.' → logprob: -2.3280467987060547
    3. ' and' → logprob: -3.5780467987060547
    4. ' as' → logprob: -3.9530467987060547
    5. '   ' → logprob: -4.328046798706055
    6. ':' → logprob: -4.328046798706055
    7. 'and' → logprob: -5.328046798706055
    8. ' directories' → logprob: -6.328046798706055
    9. 'directories' → logprob: -6.453046798706055
    10. ',
' → logprob: -6.578046798706055

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.387458365177736e-05
    2. 'class' → logprob: -10.250083923339844
    3. '
' → logprob: -10.375083923339844
    4. '    
' → logprob: -11.375083923339844
    5. '__' → logprob: -13.125083923339844
    6. '```' → logprob: -13.750083923339844
    7. '<|end|>' → logprob: -14.125083923339844
    8. ')' → logprob: -14.625083923339844
    9. '{
' → logprob: -15.250083923339844
    10. ',' → logprob: -15.500083923339844

Token 398: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009705807082355022
    2. 'class' → logprob: -4.884706020355225
    3. '
' → logprob: -6.759706020355225
    4. '__' → logprob: -7.259706020355225
    5. '    
' → logprob: -9.259705543518066
    6. '```' → logprob: -10.134705543518066
    7. ' class' → logprob: -10.634705543518066
    8. 'slots' → logprob: -11.134705543518066
    9. 'children' → logprob: -11.759705543518066
    10. ' ' → logprob: -12.009705543518066

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002685871673747897
    2. 'class' → logprob: -6.252686023712158
    3. '__' → logprob: -7.252686023712158
    4. ' __' → logprob: -10.627685546875
    5. ' class' → logprob: -11.752685546875
    6. '```' → logprob: -11.877685546875
    7. '
' → logprob: -13.127685546875
    8. '    
' → logprob: -13.127685546875
    9. '    ' → logprob: -13.627685546875
    10. 'def' → logprob: -13.877685546875

Token 400: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.0017488420708104968
    2. ' __' → logprob: -6.376749038696289
    3. 'def' → logprob: -10.126749038696289
    4. '   ' → logprob: -12.251749038696289
    5. ' def' → logprob: -13.501749038696289
    6. '___' → logprob: -15.751749038696289
    7. '.__' → logprob: -16.25174903869629
    8. 'slots' → logprob: -16.25174903869629
    9. 'name' → logprob: -16.75174903869629
    10. 'class' → logprob: -17.75174903869629

Token 401: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -4.320199877838604e-07
    2. 'slot' → logprob: -16.0
    3. ' slots' → logprob: -16.125
    4. '_slots' → logprob: -16.375
    5. 'sl' → logprob: -19.625
    6. '`' → logprob: -19.75
    7. '
' → logprob: -19.75
    8. 'tabs' → logprob: -19.875
    9. 'Slots' → logprob: -19.875
    10. 'init' → logprob: -20.375

Token 402: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000285530521068722
    2. '=' → logprob: -8.250285148620605
    3. ' =' → logprob: -11.750285148620605
    4. '__('' → logprob: -11.750285148620605
    5. '=('' → logprob: -12.500285148620605
    6. '___' → logprob: -12.625285148620605
    7. '____' → logprob: -14.500285148620605
    8. '__:' → logprob: -15.125285148620605
    9. '__,' → logprob: -15.375285148620605
    10. '_' → logprob: -15.750285148620605

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20336343348026276
    2. ' =' → logprob: -1.7033634185791016
    3. '=('' → logprob: -6.328363418579102
    4. '('' → logprob: -8.953363418579102
    5. ' ('' → logprob: -11.328363418579102
    6. '__' → logprob: -11.453363418579102
    7. '=['' → logprob: -13.078363418579102
    8. ':' → logprob: -13.328363418579102
    9. '('__' → logprob: -13.453363418579102
    10. '   ' → logprob: -13.453363418579102

Token 404: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.036524842376821e-05
    2. ' ('' → logprob: -10.250040054321289
    3. '('_' → logprob: -12.750040054321289
    4. '('__' → logprob: -13.750040054321289
    5. ''' → logprob: -14.500040054321289
    6. '['' → logprob: -15.500040054321289
    7. ''name' → logprob: -16.00004005432129
    8. 'children' → logprob: -17.12504005432129
    9. '("' → logprob: -18.12504005432129
    10. '(('' → logprob: -18.50004005432129

Token 405: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.017422253265976906
    2. 'children' → logprob: -4.142422199249268
    3. 'parent' → logprob: -6.767422199249268
    4. 'segment' → logprob: -9.642422676086426
    5. 'child' → logprob: -9.892422676086426
    6. '_name' → logprob: -10.267422676086426
    7. 'is' → logprob: -10.517422676086426
    8. 'dirname' → logprob: -10.767422676086426
    9. ' name' → logprob: -12.142422676086426
    10. 'node' → logprob: -12.267422676086426

Token 406: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0005081149865873158
    2. ',' → logprob: -7.6255083084106445
    3. '','' → logprob: -11.000508308410645
    4. ''' → logprob: -13.125508308410645
    5. ','' → logprob: -14.875508308410645
    6. '')' → logprob: -15.000508308410645
    7. '",' → logprob: -15.375508308410645
    8. ' ',' → logprob: -15.625508308410645
    9. '',
' → logprob: -16.250507354736328
    10. ' ,' → logprob: -16.750507354736328

Token 407: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4470217525959015
    2. 'children' → logprob: -1.072021722793579
    3. ''is' → logprob: -4.822021961212158
    4. ' children' → logprob: -5.447021961212158
    5. 'parent' → logprob: -5.947021961212158
    6. 'is' → logprob: -6.697021961212158
    7. ' '' → logprob: -6.947021961212158
    8. ''s' → logprob: -7.697021961212158
    9. 'child' → logprob: -8.947021484375
    10. ' parent' → logprob: -9.197021484375

Token 408: 'parent' (ID: 4903)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.04209141433238983
    2. 'parent' → logprob: -3.2920913696289062
    3. 'is' → logprob: -5.542091369628906
    4. 'child' → logprob: -9.417091369628906
    5. '_children' → logprob: -10.917091369628906
    6. '_parent' → logprob: -11.917091369628906
    7. 'files' → logprob: -12.417091369628906
    8. ' children' → logprob: -12.792091369628906
    9. 'parents' → logprob: -13.292091369628906
    10. '_is' → logprob: -13.417091369628906

Token 409: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00018363336857873946
    2. ',' → logprob: -8.625184059143066
    3. '','' → logprob: -13.125184059143066
    4. ''' → logprob: -14.000184059143066
    5. '',
' → logprob: -14.750184059143066
    6. '",' → logprob: -14.875184059143066
    7. '')' → logprob: -15.375184059143066
    8. ','' → logprob: -15.875184059143066
    9. '`,' → logprob: -16.62518310546875
    10. ' ',' → logprob: -16.62518310546875

Token 410: ' '' (ID: 461)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.3500393331050873
    2. ''' → logprob: -1.7250393629074097
    3. ' children' → logprob: -2.47503924369812
    4. ' '' → logprob: -4.350039482116699
    5. ''is' → logprob: -4.725039482116699
    6. ''s' → logprob: -4.850039482116699
    7. 'is' → logprob: -6.475039482116699
    8. ' is' → logprob: -7.225039482116699
    9. 'child' → logprob: -8.2250394821167
    10. ''ex' → logprob: -9.1000394821167

Token 411: 'directories' (ID: 195590)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.0018546271603554487
    2. 'is' → logprob: -6.376854419708252
    3. 'child' → logprob: -10.00185489654541
    4. 'files' → logprob: -10.37685489654541
    5. ' children' → logprob: -10.62685489654541
    6. '_children' → logprob: -11.12685489654541
    7. 'segments' → logprob: -11.62685489654541
    8. 'entries' → logprob: -12.50185489654541
    9. '	children' → logprob: -12.87685489654541
    10. 'parent' → logprob: -13.00185489654541

Token 412: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -8.125210297293961e-05
    2. '','' → logprob: -10.500081062316895
    3. '')' → logprob: -10.500081062316895
    4. ',' → logprob: -10.750081062316895
    5. ''' → logprob: -12.625081062316895
    6. '<|end|>' → logprob: -14.625081062316895
    7. '",' → logprob: -15.000081062316895
    8. '',
' → logprob: -15.250081062316895
    9. ' ',' → logprob: -16.50008201599121
    10. ','' → logprob: -16.62508201599121

Token 413: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02697783336043358
    2. ' '' → logprob: -3.651977777481079
    3. 'files' → logprob: -8.0269775390625
    4. ' files' → logprob: -8.6519775390625
    5. ''s' → logprob: -9.5269775390625
    6. '   ' → logprob: -9.9019775390625
    7. '_files' → logprob: -11.5269775390625
    8. ' ' → logprob: -12.2769775390625
    9. ''t' → logprob: -12.5269775390625
    10. ''f' → logprob: -12.5269775390625

Token 414: 'files' (ID: 14596)
  Prédit: 'files'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'files' → logprob: -0.0003733542689587921
    2. ' files' → logprob: -8.625372886657715
    3. 'file' → logprob: -9.875372886657715
    4. 'is' → logprob: -10.125372886657715
    5. '_files' → logprob: -10.250372886657715
    6. 'fil' → logprob: -11.375372886657715
    7. 'entries' → logprob: -11.625372886657715
    8. 'has' → logprob: -12.000372886657715
    9. 'directories' → logprob: -12.125372886657715
    10. 'children' → logprob: -12.250372886657715

Token 415: '')
' (ID: 2515)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.13222572207450867
    2. '')' → logprob: -2.132225751876831
    3. ',' → logprob: -5.257225513458252
    4. ')' → logprob: -10.63222599029541
    5. '','' → logprob: -11.00722599029541
    6. '')
' → logprob: -11.25722599029541
    7. ','' → logprob: -11.75722599029541
    8. '')

' → logprob: -12.13222599029541
    9. ''' → logprob: -12.25722599029541
    10. '',
' → logprob: -14.00722599029541

Token 416: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20558017492294312
    2. '   ' → logprob: -1.705580234527588
    3. '    
' → logprob: -6.455580234527588
    4. ',
' → logprob: -6.830580234527588
    5. '
' → logprob: -7.330580234527588
    6. '('' → logprob: -7.830580234527588
    7. ' =' → logprob: -9.70557975769043
    8. 'def' → logprob: -9.95557975769043
    9. ','' → logprob: -10.08057975769043
    10. ' ,' → logprob: -10.08057975769043

Token 417: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7782092094421387
    2. '    
' → logprob: -0.7782092094421387
    3. '
' → logprob: -2.7782092094421387
    4. ',' → logprob: -4.653209209442139
    5. ' 
' → logprob: -5.028209209442139
    6. ',
' → logprob: -7.278209209442139
    7. '   
' → logprob: -7.528209209442139
    8. ' =' → logprob: -8.028209686279297
    9. '  
' → logprob: -8.028209686279297
    10. '     
' → logprob: -8.153209686279297

Token 418: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04300958290696144
    2. '__' → logprob: -3.1680095195770264
    3. 'def' → logprob: -12.543009757995605
    4. ' def' → logprob: -12.918009757995605
    5. 'name' → logprob: -13.668009757995605
    6. ' ' → logprob: -13.918009757995605
    7. ' define' → logprob: -14.918009757995605
    8. ' init' → logprob: -15.043009757995605
    9. ' ' → logprob: -15.293009757995605
    10. '  ' → logprob: -15.543009757995605

Token 419: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.002554734703153372
    2. 'slots' → logprob: -6.002554893493652
    3. '_init' → logprob: -9.627554893493652
    4. '__' → logprob: -11.877554893493652
    5. '_slots' → logprob: -12.127554893493652
    6. 'slot' → logprob: -14.752554893493652
    7. ' init' → logprob: -15.377554893493652
    8. 'set' → logprob: -17.127553939819336
    9. 'sl' → logprob: -17.502553939819336
    10. '(init' → logprob: -17.627553939819336

Token 420: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00048286578385159373
    2. '__' → logprob: -8.125482559204102
    3. '(self' → logprob: -8.750482559204102
    4. '__(
' → logprob: -10.625482559204102
    5. '_(' → logprob: -13.375482559204102
    6. '(' → logprob: -13.500482559204102
    7. '__('' → logprob: -14.875482559204102
    8. '__((' → logprob: -15.250482559204102
    9. ' (' → logprob: -15.750482559204102
    10. 'self' → logprob: -15.875482559204102

Token 421: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.68022444692906e-05
    2. ' self' → logprob: -10.000046730041504
    3. 'name' → logprob: -14.375046730041504
    4. '(self' → logprob: -14.875046730041504
    5. ',' → logprob: -15.000046730041504
    6. '       ' → logprob: -16.87504768371582
    7. ',self' → logprob: -18.00004768371582
    8. '	self' → logprob: -18.62504768371582
    9. '   ' → logprob: -18.87504768371582
    10. '
' → logprob: -19.62504768371582

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035918003413826227
    2. '(self' → logprob: -8.500359535217285
    3. '__(' → logprob: -9.625359535217285
    4. 'self' → logprob: -9.875359535217285
    5. ' (' → logprob: -11.000359535217285
    6. '__,' → logprob: -11.375359535217285
    7. ' ,' → logprob: -12.375359535217285
    8. '_,' → logprob: -13.125359535217285
    9. ',self' → logprob: -13.125359535217285
    10. '(' → logprob: -14.125359535217285

Token 423: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -7.493430894101039e-05
    2. ' name' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.37507438659668
    4. 'parent' → logprob: -18.87507438659668
    5. 'self' → logprob: -19.37507438659668
    6. '	name' → logprob: -19.62507438659668
    7. ''name' → logprob: -19.62507438659668
    8. '       ' → logprob: -20.50007438659668
    9. '    
' → logprob: -20.75007438659668
    10. '
' → logprob: -21.12507438659668

Token 424: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005044948309659958
    2. ',' → logprob: -6.005044937133789
    3. '):' → logprob: -6.005044937133789
    4. ' :' → logprob: -9.755044937133789
    5. ':str' → logprob: -11.130044937133789
    6. '=' → logprob: -11.380044937133789
    7. ')' → logprob: -11.630044937133789
    8. '=None' → logprob: -12.880044937133789
    9. '):
' → logprob: -13.130044937133789
    10. ' ):' → logprob: -13.505044937133789

Token 425: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00022773505770601332
    2. ' str' → logprob: -8.500227928161621
    3. 'Optional' → logprob: -11.000227928161621
    4. ')' → logprob: -12.750227928161621
    5. 'name' → logprob: -13.125227928161621
    6. 'None' → logprob: -13.625227928161621
    7. ' Optional' → logprob: -14.125227928161621
    8. '[str' → logprob: -15.375227928161621
    9. ':str' → logprob: -15.500227928161621
    10. '   ' → logprob: -16.500226974487305

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ',parent' → logprob: -14.12501049041748
    4. '):' → logprob: -15.00001049041748
    5. '):
' → logprob: -15.50001049041748
    6. '   ' → logprob: -16.750009536743164
    7. '=None' → logprob: -17.625009536743164
    8. ',
' → logprob: -17.875009536743164
    9. '=' → logprob: -18.250009536743164
    10. ',None' → logprob: -18.500009536743164

Token 427: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.10020720958709717
    2. ' parent' → logprob: -2.3502073287963867
    3. '	parent' → logprob: -15.100207328796387
    4. '   ' → logprob: -15.475207328796387
    5. '(parent' → logprob: -17.22520637512207
    6. '.parent' → logprob: -18.10020637512207
    7. '_parent' → logprob: -18.22520637512207
    8. ',parent' → logprob: -18.60020637512207
    9. ' ' → logprob: -19.85020637512207
    10. '       ' → logprob: -19.97520637512207

Token 428: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16996578872203827
    2. '=None' → logprob: -2.1699657440185547
    3. '=' → logprob: -3.1699657440185547
    4. ' =' → logprob: -9.794965744018555
    5. '):' → logprob: -9.794965744018555
    6. ')' → logprob: -12.544965744018555
    7. '):
' → logprob: -12.919965744018555
    8. ':=' → logprob: -14.044965744018555
    9. ' :' → logprob: -14.419965744018555
    10. ',' → logprob: -14.794965744018555

Token 429: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -8.041768160182983e-05
    2. ' Optional' → logprob: -9.500080108642578
    3. ''' → logprob: -12.500080108642578
    4. '	Optional' → logprob: -14.625080108642578
    5. '(Optional' → logprob: -14.625080108642578
    6. 'optional' → logprob: -15.000080108642578
    7. 'None' → logprob: -15.625080108642578
    8. ')' → logprob: -15.625080108642578
    9. '=None' → logprob: -16.500080108642578
    10. '_optional' → logprob: -16.625080108642578

Token 430: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0036254855804145336
    2. '[' → logprob: -5.753625392913818
    3. ')' → logprob: -8.878625869750977
    4. '='' → logprob: -9.253625869750977
    5. '=' → logprob: -9.503625869750977
    6. ''' → logprob: -9.628625869750977
    7. '[
' → logprob: -10.753625869750977
    8. '["' → logprob: -11.003625869750977
    9. '[['' → logprob: -11.503625869750977
    10. '=None' → logprob: -11.628625869750977

Token 431: 'Directory' (ID: 13704)
  Prédit: 'Directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Directory' → logprob: -2.935296834039036e-06
    2. ' Directory' → logprob: -12.75000286102295
    3. 'directory' → logprob: -17.125003814697266
    4. '_directory' → logprob: -18.750003814697266
    5. '.Directory' → logprob: -19.625003814697266
    6. '_DIRECTORY' → logprob: -20.875003814697266
    7. 'Director' → logprob: -21.125003814697266
    8. 'Directories' → logprob: -21.625003814697266
    9. 'irectory' → logprob: -21.750003814697266
    10. ' directory' → logprob: -22.375003814697266

Token 432: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -9.849109119386412e-06
    2. 'Directory' → logprob: -11.750009536743164
    3. '<Tree' → logprob: -13.625009536743164
    4. '[' → logprob: -15.750009536743164
    5. '	Tree' → logprob: -16.125009536743164
    6. ''])' → logprob: -16.625009536743164
    7. ')' → logprob: -16.750009536743164
    8. ' Tree' → logprob: -17.000009536743164
    9. '')' → logprob: -17.125009536743164
    10. '['' → logprob: -17.125009536743164

Token 433: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -3.128163257315464e-07
    2. 'Tree' → logprob: -15.375
    3. 'node' → logprob: -16.75
    4. ' Node' → logprob: -19.125
    5. 'N' → logprob: -19.5
    6. '_node' → logprob: -19.75
    7. '_Node' → logprob: -19.875
    8. '<Node' → logprob: -20.0
    9. '	Node' → logprob: -20.125
    10. '[' → logprob: -20.125

Token 434: '']' (ID: 1089)
  Prédit: '']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']=' → logprob: -0.5308316349983215
    2. '']' → logprob: -1.0308315753936768
    3. '']):
' → logprob: -3.0308315753936768
    4. ''=' → logprob: -5.155831813812256
    5. ']=' → logprob: -7.530831813812256
    6. ''' → logprob: -7.905831813812256
    7. ''])' → logprob: -9.280831336975098
    8. '=None' → logprob: -9.780831336975098
    9. ']' → logprob: -10.655831336975098
    10. ')=' → logprob: -11.030831336975098

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03909294679760933
    2. '=None' → logprob: -3.664093017578125
    3. '):
' → logprob: -4.789093017578125
    4. '):' → logprob: -6.164093017578125
    5. ' =' → logprob: -6.789093017578125
    6. ')' → logprob: -6.914093017578125
    7. ')=' → logprob: -8.789093017578125
    8. ''=' → logprob: -11.414093017578125
    9. '):

' → logprob: -13.164093017578125
    10. ']=' → logprob: -14.289093017578125

Token 436: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06196768581867218
    2. ' None' → logprob: -2.811967611312866
    3. '=None' → logprob: -17.186967849731445
    4. '(None' → logprob: -18.561967849731445
    5. '_None' → logprob: -18.936967849731445
    6. ',None' → logprob: -19.561967849731445
    7. '   ' → logprob: -20.686967849731445
    8. ')' → logprob: -22.186967849731445
    9. '.None' → logprob: -22.936967849731445
    10. '0' → logprob: -23.561967849731445

Token 437: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023497728630900383
    2. '):' → logprob: -3.7734978199005127
    3. ',' → logprob: -8.523497581481934
    4. '):
' → logprob: -10.148497581481934
    5. ''):
' → logprob: -11.898497581481934
    6. '   ' → logprob: -12.398497581481934
    7. ' ):
' → logprob: -13.648497581481934
    8. ')' → logprob: -13.898497581481934
    9. '       ' → logprob: -14.648497581481934
    10. '):

' → logprob: -14.773497581481934

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03111685998737812
    2. 'self' → logprob: -3.5311169624328613
    3. ' self' → logprob: -6.656116962432861
    4. '	self' → logprob: -10.406116485595703
    5. '   ' → logprob: -10.656116485595703
    6. '	' → logprob: -10.781116485595703
    7. '```' → logprob: -14.031116485595703
    8. 'super' → logprob: -14.406116485595703
    9. '	   ' → logprob: -14.531116485595703
    10. '(self' → logprob: -14.531116485595703

Token 439: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.134509021649137e-05
    2. ' self' → logprob: -9.75006103515625
    3. '       ' → logprob: -12.75006103515625
    4. '	self' → logprob: -17.00006103515625
    5. '   ' → logprob: -19.25006103515625
    6. 'super' → logprob: -20.75006103515625
    7. '(self' → logprob: -21.75006103515625
    8. ' ' → logprob: -23.37506103515625
    9. '           ' → logprob: -23.50006103515625
    10. '	' → logprob: -23.62506103515625

Token 440: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.00044616201194003224
    2. '.' → logprob: -7.750446319580078
    3. ' .' → logprob: -11.750446319580078
    4. 'name' → logprob: -12.000446319580078
    5. '.parent' → logprob: -13.500446319580078
    6. '.
' → logprob: -17.750446319580078
    7. ' name' → logprob: -18.125446319580078
    8. ' =' → logprob: -18.125446319580078
    9. '.n' → logprob: -18.125446319580078
    10. '=name' → logprob: -18.750446319580078

Token 441: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697839736938477
    2. '=' → logprob: -2.1269783973693848
    3. ':' → logprob: -10.376977920532227
    4. '=name' → logprob: -11.501977920532227
    5. ',' → logprob: -12.126977920532227
    6. ' ' → logprob: -13.501977920532227
    7. ')' → logprob: -14.001977920532227
    8. '       ' → logprob: -15.126977920532227
    9. '        ' → logprob: -15.126977920532227
    10. '=self' → logprob: -15.251977920532227

Token 442: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.002740089315921068
    2. ' name' → logprob: -6.002739906311035
    3. 'parent' → logprob: -8.252739906311035
    4. ' parent' → logprob: -12.502739906311035
    5. 'None' → logprob: -15.877739906311035
    6. '	name' → logprob: -18.62774085998535
    7. ' None' → logprob: -19.12774085998535
    8. ''name' → logprob: -19.25274085998535
    9. '(name' → logprob: -19.62774085998535
    10. ' ' → logprob: -19.62774085998535

Token 443: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15036100149154663
    2. ',' → logprob: -2.0253610610961914
    3. ',
' → logprob: -5.525361061096191
    4. 'self' → logprob: -6.650361061096191
    5. '
' → logprob: -6.775361061096191
    6. '<|end|>' → logprob: -7.650361061096191
    7. ',parent' → logprob: -8.275361061096191
    8. 'parent' → logprob: -8.525361061096191
    9. '	' → logprob: -8.775361061096191
    10. '        
' → logprob: -10.150361061096191

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.634847104549408
    2. 'self' → logprob: -0.884847104549408
    3. ' self' → logprob: -3.8848471641540527
    4. '
' → logprob: -4.134847164154053
    5. '	self' → logprob: -4.384847164154053
    6. '        
' → logprob: -5.759847164154053
    7. '\t' → logprob: -6.634847164154053
    8. '	' → logprob: -6.759847164154053
    9. '		
' → logprob: -7.259847164154053
    10. '<|end|>' → logprob: -8.134846687316895

Token 445: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -3.547789674485102e-05
    2. ' self' → logprob: -10.500035285949707
    3. '       ' → logprob: -11.750035285949707
    4. '   ' → logprob: -18.750036239624023
    5. 'parent' → logprob: -19.375036239624023
    6. '	self' → logprob: -20.875036239624023
    7. '
' → logprob: -21.250036239624023
    8. '           ' → logprob: -22.000036239624023
    9. '(self' → logprob: -22.250036239624023
    10. 'super' → logprob: -23.375036239624023

Token 446: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.005692353937774897
    2. '.' → logprob: -5.755692481994629
    3. 'parent' → logprob: -6.005692481994629
    4. '_parent' → logprob: -10.630692481994629
    5. '[parent' → logprob: -12.005692481994629
    6. '	parent' → logprob: -12.630692481994629
    7. '._' → logprob: -12.630692481994629
    8. ' parent' → logprob: -12.630692481994629
    9. '.Parent' → logprob: -12.755692481994629
    10. ',parent' → logprob: -13.755692481994629

Token 447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602339744567871
    2. ' =' → logprob: -1.910233974456787
    3. ',' → logprob: -12.410234451293945
    4. ' ' → logprob: -12.785234451293945
    5. ')' → logprob: -13.285234451293945
    6. '   ' → logprob: -15.035234451293945
    7. '=None' → logprob: -15.035234451293945
    8. '	' → logprob: -16.160234451293945
    9. 'if' → logprob: -16.785234451293945
    10. '    ' → logprob: -16.785234451293945

Token 448: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.011047814972698689
    2. ' parent' → logprob: -4.511047840118408
    3. 'None' → logprob: -18.88604736328125
    4. '(parent' → logprob: -19.01104736328125
    5. '	parent' → logprob: -19.63604736328125
    6. '.parent' → logprob: -21.38604736328125
    7. '[parent' → logprob: -21.63604736328125
    8. 'Parent' → logprob: -22.26104736328125
    9. ' None' → logprob: -22.38604736328125
    10. 'paren' → logprob: -22.51104736328125

Token 449: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040099851321429014
    2. 'self' → logprob: -7.875401020050049
    3. '
' → logprob: -11.37540054321289
    4. ',' → logprob: -12.62540054321289
    5. '        
' → logprob: -13.25040054321289
    6. '	' → logprob: -13.37540054321289
    7. ',
' → logprob: -13.87540054321289
    8. ' self' → logprob: -14.25040054321289
    9. '   ' → logprob: -15.00040054321289
    10. '<|end|>' → logprob: -15.37540054321289

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2539485692977905
    2. 'self' → logprob: -1.5039485692977905
    3. ' self' → logprob: -6.62894868850708
    4. '   ' → logprob: -7.75394868850708
    5. '
' → logprob: -8.503948211669922
    6. '	self' → logprob: -10.003948211669922
    7. '        
' → logprob: -11.378948211669922
    8. '	' → logprob: -13.003948211669922
    9. '     ' → logprob: -14.128948211669922
    10. ',' → logprob: -14.128948211669922

Token 451: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003709701995830983
    2. '       ' → logprob: -8.000370979309082
    3. ' self' → logprob: -10.250370979309082
    4. '	self' → logprob: -16.750370025634766
    5. '
' → logprob: -17.250370025634766
    6. '   ' → logprob: -18.000370025634766
    7. '(self' → logprob: -19.250370025634766
    8. '        
' → logprob: -20.250370025634766
    9. '```' → logprob: -21.250370025634766
    10. '{
' → logprob: -21.375370025634766

Token 452: '.direct' (ID: 80570)
  Prédit: '.direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direct' → logprob: -0.0034037132281810045
    2. 'directories' → logprob: -5.753403663635254
    3. '.directory' → logprob: -9.003403663635254
    4. '.' → logprob: -9.503403663635254
    5. '.d' → logprob: -11.753403663635254
    6. ' .' → logprob: -11.753403663635254
    7. 'Directories' → logprob: -12.628403663635254
    8. '.Direct' → logprob: -12.753403663635254
    9. '.documents' → logprob: -13.503403663635254
    10. '.files' → logprob: -13.628403663635254

Token 453: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -2.5776860184123507e-06
    2. 'ORIES' → logprob: -13.25000286102295
    3. 'ory' → logprob: -14.25000286102295
    4. 'or' → logprob: -16.750001907348633
    5. 'ries' → logprob: -18.250001907348633
    6. 'ori' → logprob: -18.750001907348633
    7. '_' → logprob: -18.875001907348633
    8. 'ores' → logprob: -19.250001907348633
    9. 'orie' → logprob: -19.625001907348633
    10. 'ort' → logprob: -19.625001907348633

Token 454: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012559447437524796
    2. ' =' → logprob: -4.512559413909912
    3. ':' → logprob: -6.512559413909912
    4. '={}' → logprob: -10.63755989074707
    5. '={' → logprob: -13.76255989074707
    6. '{}' → logprob: -14.51255989074707
    7. '={}
' → logprob: -16.26255989074707
    8. '=dict' → logprob: -16.88755989074707
    9. '{' → logprob: -16.88755989074707
    10. ':{}' → logprob: -17.38755989074707

Token 455: ' Dict' (ID: 55179)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.2464904487133026
    2. 'Dict' → logprob: -1.996490478515625
    3. 'dict' → logprob: -2.496490478515625
    4. '{' → logprob: -8.246490478515625
    5. ' dict' → logprob: -12.246490478515625
    6. ' {}' → logprob: -12.246490478515625
    7. '={}' → logprob: -12.871490478515625
    8. ' Dict' → logprob: -13.621490478515625
    9. '_dict' → logprob: -14.746490478515625
    10. '{}

' → logprob: -15.246490478515625

Token 456: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: 0.0
    2. '[' → logprob: -16.875
    3. 'str' → logprob: -18.5
    4. 'Str' → logprob: -20.75
    5. '[
' → logprob: -21.0
    6. '(str' → logprob: -21.125
    7. '[int' → logprob: -21.375
    8. '   ' → logprob: -21.625
    9. ' [' → logprob: -22.625
    10. ' =' → logprob: -22.75

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -13.500001907348633
    3. ',
' → logprob: -16.125001907348633
    4. '[' → logprob: -17.250001907348633
    5. ','' → logprob: -17.500001907348633
    6. '<|end|>' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '['' → logprob: -18.875001907348633
    9. '',' → logprob: -19.125001907348633
    10. ']' → logprob: -19.125001907348633

Token 458: ' Directory' (ID: 32740)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.576416552066803
    2. 'Directory' → logprob: -0.826416552066803
    3. ''D' → logprob: -8.201416969299316
    4. ''s' → logprob: -9.951416969299316
    5. '"' → logprob: -10.201416969299316
    6. ' '' → logprob: -10.201416969299316
    7. ' Directory' → logprob: -11.076416969299316
    8. ''d' → logprob: -11.576416969299316
    9. ''in' → logprob: -12.201416969299316
    10. ''m' → logprob: -12.326416969299316

Token 459: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.9361264946837764e-07
    2. 'tree' → logprob: -15.75
    3. '<Tree' → logprob: -18.25
    4. 'Directory' → logprob: -18.25
    5. '_tree' → logprob: -18.25
    6. '[' → logprob: -18.75
    7. 'ree' → logprob: -18.75
    8. '	Tree' → logprob: -18.75
    9. ' Tree' → logprob: -19.875
    10. '_TREE' → logprob: -19.875

Token 460: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -1.8624639324116288e-06
    2. 'Tree' → logprob: -14.000001907348633
    3. 'node' → logprob: -14.750001907348633
    4. 'e' → logprob: -16.125001907348633
    5. 'ode' → logprob: -16.125001907348633
    6. ']' → logprob: -16.375001907348633
    7. 'ree' → logprob: -17.000001907348633
    8. ' Node' → logprob: -17.125001907348633
    9. '```' → logprob: -17.250001907348633
    10. '	Node' → logprob: -17.375001907348633

Token 461: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.040457421680912e-05
    2. '']' → logprob: -10.000070571899414
    3. ']=' → logprob: -10.625070571899414
    4. '"]' → logprob: -15.500070571899414
    5. ' ]' → logprob: -15.750070571899414
    6. '`]' → logprob: -16.625070571899414
    7. ']={' → logprob: -16.625070571899414
    8. '[' → logprob: -17.125070571899414
    9. '()]' → logprob: -17.500070571899414
    10. ']
' → logprob: -17.500070571899414

Token 462: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. ']' → logprob: -17.503177642822266
    4. ')' → logprob: -18.378177642822266
    5. '={}' → logprob: -18.503177642822266
    6. ']=' → logprob: -19.878177642822266
    7. '=[]' → logprob: -19.878177642822266
    8. '   ' → logprob: -20.128177642822266
    9. ' ' → logprob: -20.253177642822266
    10. '<|end|>' → logprob: -20.503177642822266

Token 463: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.1517960956552997e-05
    2. 'dict' → logprob: -11.500011444091797
    3. '{}
' → logprob: -13.750011444091797
    4. '{}

' → logprob: -16.250011444091797
    5. '{' → logprob: -16.625011444091797
    6. ' {}' → logprob: -18.875011444091797
    7. '{})' → logprob: -19.625011444091797
    8. ' dict' → logprob: -20.250011444091797
    9. '{},' → logprob: -20.375011444091797
    10. '{}\' → logprob: -20.875011444091797

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6935564279556274
    2. 'self' → logprob: -0.6935564279556274
    3. ' self' → logprob: -7.943556308746338
    4. '	self' → logprob: -10.193556785583496
    5. '   ' → logprob: -11.068556785583496
    6. '	' → logprob: -14.443556785583496
    7. '(self' → logprob: -15.443556785583496
    8. ' ' → logprob: -15.568556785583496
    9. '```' → logprob: -16.06855583190918
    10. ',self' → logprob: -16.44355583190918

Token 465: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.093505099765025e-05
    2. ' self' → logprob: -11.250020980834961
    3. '       ' → logprob: -11.750020980834961
    4. '   ' → logprob: -18.75002098083496
    5. '	self' → logprob: -19.12502098083496
    6. '
' → logprob: -21.87502098083496
    7. 'files' → logprob: -22.12502098083496
    8. '           ' → logprob: -22.12502098083496
    9. '```' → logprob: -22.12502098083496
    10. '        
' → logprob: -22.87502098083496

Token 466: '.files' (ID: 39697)
  Prédit: '.files'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.files' → logprob: -4.7994282795116305e-05
    2. ' .' → logprob: -10.37504768371582
    3. 'files' → logprob: -11.87504768371582
    4. '.' → logprob: -12.00004768371582
    5. '	files' → logprob: -12.75004768371582
    6. '.users' → logprob: -15.75004768371582
    7. '_files' → logprob: -15.87504768371582
    8. '.Files' → logprob: -16.87504768371582
    9. '.documents' → logprob: -17.25004768371582
    10. '.contents' → logprob: -17.37504768371582

Token 467: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.3557529857498594e-05
    2. ' =' → logprob: -11.12502384185791
    3. '=' → logprob: -11.87502384185791
    4. ' :' → logprob: -13.25002384185791
    5. ':Set' → logprob: -16.875022888183594
    6. ':set' → logprob: -18.500022888183594
    7. ':{}' → logprob: -18.625022888183594
    8. '[' → logprob: -18.750022888183594
    9. '   ' → logprob: -19.250022888183594
    10. ')' → logprob: -19.875022888183594

Token 468: ' Set' (ID: 3957)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2555331289768219
    2. 'Set' → logprob: -1.5055330991744995
    3. 'Dict' → logprob: -5.880533218383789
    4. '{}' → logprob: -7.755533218383789
    5. 'dict' → logprob: -8.130533218383789
    6. ' set' → logprob: -9.630533218383789
    7. ' Set' → logprob: -12.005533218383789
    8. '{' → logprob: -13.005533218383789
    9. '_set' → logprob: -13.630533218383789
    10. 'None' → logprob: -14.005533218383789

Token 469: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.0280383548888494e-06
    2. '(str' → logprob: -14.000000953674316
    3. '[' → logprob: -16.125001907348633
    4. 'str' → logprob: -16.750001907348633
    5. '[
' → logprob: -19.250001907348633
    6. '	str' → logprob: -19.625001907348633
    7. '.str' → logprob: -20.250001907348633
    8. '=str' → logprob: -20.500001907348633
    9. '[int' → logprob: -20.875001907348633
    10. ']' → logprob: -21.000001907348633

Token 470: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002330693881958723
    2. ')' → logprob: -7.002330780029297
    3. ']=' → logprob: -7.002330780029297
    4. '()]' → logprob: -8.252330780029297
    5. '()' → logprob: -9.127330780029297
    6. '']' → logprob: -9.877330780029297
    7. ']()' → logprob: -10.127330780029297
    8. '>' → logprob: -11.377330780029297
    9. '=' → logprob: -11.377330780029297
    10. ' ]' → logprob: -12.127330780029297

Token 471: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052386182360351086
    2. ' =' → logprob: -5.2552385330200195
    3. '=set' → logprob: -12.25523853302002
    4. 'set' → logprob: -17.630239486694336
    5. ' ' → logprob: -18.130239486694336
    6. ')' → logprob: -18.755239486694336
    7. '   ' → logprob: -20.255239486694336
    8. ' set' → logprob: -20.630239486694336
    9. '<|end|>' → logprob: -20.880239486694336
    10. '=
' → logprob: -21.755239486694336

Token 472: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -8.061054359131958e-06
    2. ' set' → logprob: -11.750007629394531
    3. '{}' → logprob: -16.50000762939453
    4. '=set' → logprob: -16.75000762939453
    5. '(set' → logprob: -17.00000762939453
    6. '()' → logprob: -18.00000762939453
    7. '	set' → logprob: -18.87500762939453
    8. ')set' → logprob: -20.75000762939453
    9. '{' → logprob: -21.50000762939453
    10. '   ' → logprob: -22.00000762939453

Token 473: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.8931350708007812
    2. '
' → logprob: -1.0181350708007812
    3. '   ' → logprob: -1.5181350708007812
    4. 'def' → logprob: -4.893135070800781
    5. '        
' → logprob: -6.143135070800781
    6. '  
' → logprob: -9.143135070800781
    7. '<|end|>' → logprob: -9.143135070800781
    8. ' 
' → logprob: -9.268135070800781
    9. '   
' → logprob: -9.393135070800781
    10. '

' → logprob: -10.268135070800781

Token 475: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025852893013507128
    2. '   ' → logprob: -6.002585411071777
    3. ' def' → logprob: -9.127585411071777
    4. '    
' → logprob: -14.752585411071777
    5. '
' → logprob: -14.877585411071777
    6. '	def' → logprob: -16.75258445739746
    7. ' ' → logprob: -16.87758445739746
    8. '@property' → logprob: -17.25258445739746
    9. '        
' → logprob: -17.25258445739746
    10. '       ' → logprob: -18.37758445739746

Token 476: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.4498052223643754e-05
    2. '   ' → logprob: -11.250014305114746
    3. ' def' → logprob: -13.500014305114746
    4. '@property' → logprob: -16.875015258789062
    5. '    
' → logprob: -18.500015258789062
    6. '@' → logprob: -19.375015258789062
    7. '	def' → logprob: -19.625015258789062
    8. '        
' → logprob: -22.500015258789062
    9. 'Def' → logprob: -23.250015258789062
    10. '```' → logprob: -23.375015258789062

Token 477: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.04232432320713997
    2. ' add' → logprob: -3.2923243045806885
    3. '_add' → logprob: -5.667324542999268
    4. 'def' → logprob: -7.667324542999268
    5. 'get' → logprob: -8.91732406616211
    6. 'has' → logprob: -9.29232406616211
    7. '__' → logprob: -10.04232406616211
    8. ' has' → logprob: -10.91732406616211
    9. '_has' → logprob: -11.29232406616211
    10. 'find' → logprob: -11.91732406616211

Token 478: '_directory' (ID: 35850)
  Prédit: '_directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_directory' → logprob: -0.00901952013373375
    2. '_' → logprob: -4.884019374847412
    3. '_child' → logprob: -7.259019374847412
    4. '_file' → logprob: -7.384019374847412
    5. '_dir' → logprob: -10.25901985168457
    6. '_folder' → logprob: -10.50901985168457
    7. 'directory' → logprob: -12.00901985168457
    8. '(' → logprob: -12.50901985168457
    9. '_direct' → logprob: -12.63401985168457
    10. '_d' → logprob: -13.13401985168457

Token 479: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007127894787117839
    2. '(' → logprob: -7.375712871551514
    3. '(name' → logprob: -9.625712394714355
    4. ' (' → logprob: -11.125712394714355
    5. '(
' → logprob: -12.625712394714355
    6. 'self' → logprob: -13.625712394714355
    7. ')(' → logprob: -15.875712394714355
    8. ' self' → logprob: -16.125713348388672
    9. '   ' → logprob: -16.375713348388672
    10. '<|end|>' → logprob: -16.500713348388672

Token 480: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030032208189368248
    2. '(' → logprob: -3.780032157897949
    3. ')(' → logprob: -5.655032157897949
    4. ')' → logprob: -6.780032157897949
    5. '(name' → logprob: -7.280032157897949
    6. '(
' → logprob: -7.405032157897949
    7. ',' → logprob: -8.65503215789795
    8. 'self' → logprob: -8.65503215789795
    9. ' (' → logprob: -9.03003215789795
    10. '_name' → logprob: -9.28003215789795

Token 481: ' dirname' (ID: 77891)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.05873136594891548
    2. ' name' → logprob: -3.0587313175201416
    3. 'dirname' → logprob: -5.183731555938721
    4. 'dir' → logprob: -5.933731555938721
    5. ' dirname' → logprob: -6.683731555938721
    6. ' dir' → logprob: -7.558731555938721
    7. 'directory' → logprob: -9.808731079101562
    8. 'child' → logprob: -12.308731079101562
    9. ' directory' → logprob: -12.933731079101562
    10. ' child' → logprob: -13.683731079101562

Token 482: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14575399458408356
    2. ':' → logprob: -2.770754098892212
    3. '):' → logprob: -3.395754098892212
    4. ')' → logprob: -4.270753860473633
    5. '(self' → logprob: -4.770753860473633
    6. '):
' → logprob: -5.270753860473633
    7. '_name' → logprob: -5.770753860473633
    8. 'name' → logprob: -6.020753860473633
    9. 'self' → logprob: -6.270753860473633
    10. '',' → logprob: -7.020753860473633

Token 483: ' str' (ID: 989)
  Prédit: 'dirname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dirname' → logprob: -0.024242566898465157
    2. ' dirname' → logprob: -3.899242639541626
    3. 'name' → logprob: -5.649242401123047
    4. 'dir' → logprob: -9.149242401123047
    5. 'str' → logprob: -10.524242401123047
    6. ' name' → logprob: -10.774242401123047
    7. ')' → logprob: -11.524242401123047
    8. '(dirname' → logprob: -12.149242401123047
    9. ' dir' → logprob: -13.399242401123047
    10. '.dirname' → logprob: -13.649242401123047

Token 484: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024100838229060173
    2. '):' → logprob: -4.0241007804870605
    3. '):
' → logprob: -5.1491007804870605
    4. ')->' → logprob: -9.649101257324219
    5. ' )' → logprob: -9.774101257324219
    6. '):
' → logprob: -13.149101257324219
    7. ' ):' → logprob: -13.524101257324219
    8. ':' → logprob: -13.774101257324219
    9. '):

' → logprob: -13.899101257324219
    10. ' ):
' → logprob: -14.399101257324219

Token 485: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004741145297884941
    2. ':
' → logprob: -5.629741191864014
    3. '):' → logprob: -7.504741191864014
    4. '       ' → logprob: -8.504740715026855
    5. ' ->' → logprob: -8.754740715026855
    6. '   ' → logprob: -9.504740715026855
    7. ')' → logprob: -10.129740715026855
    8. '):
' → logprob: -10.129740715026855
    9. '->' → logprob: -10.254740715026855
    10. '():' → logprob: -11.129740715026855

Token 486: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18148338794708252
    2. 'Directory' → logprob: -1.9314833879470825
    3. 'None' → logprob: -4.431483268737793
    4. ' '' → logprob: -4.931483268737793
    5. ' Directory' → logprob: -6.931483268737793
    6. ''s' → logprob: -8.431483268737793
    7. ''D' → logprob: -8.556483268737793
    8. '"' → logprob: -8.931483268737793
    9. 'Optional' → logprob: -8.931483268737793
    10. ' None' → logprob: -9.681483268737793

Token 487: 'Directory' (ID: 13704)
  Prédit: 'Directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Directory' → logprob: -1.3856492842023727e-06
    2. ' Directory' → logprob: -13.875000953674316
    3. 'directory' → logprob: -15.750000953674316
    4. '_directory' → logprob: -15.750000953674316
    5. 'Directories' → logprob: -17.500001907348633
    6. '.Directory' → logprob: -17.500001907348633
    7. 'Director' → logprob: -17.875001907348633
    8. '_DIRECTORY' → logprob: -18.125001907348633
    9. 'Dictionary' → logprob: -18.250001907348633
    10. 'irectory' → logprob: -18.500001907348633

Token 488: 'Tree' (ID: 8062)
  Prédit: 'Directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Directory' → logprob: -0.04605383053421974
    2. 'Tree' → logprob: -3.171053886413574
    3. 'irectory' → logprob: -5.796053886413574
    4. 'directory' → logprob: -12.546053886413574
    5. '_directory' → logprob: -12.796053886413574
    6. 'Directories' → logprob: -14.046053886413574
    7. 'ree' → logprob: -14.046053886413574
    8. 'tree' → logprob: -14.171053886413574
    9. ' Directory' → logprob: -14.546053886413574
    10. '_DIRECTORY' → logprob: -14.546053886413574

Token 489: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -5.657694418914616e-05
    2. 'Tree' → logprob: -9.875056266784668
    3. 'node' → logprob: -12.250056266784668
    4. 'Directory' → logprob: -17.000057220458984
    5. 'NODE' → logprob: -17.000057220458984
    6. '_node' → logprob: -17.375057220458984
    7. '	Node' → logprob: -17.500057220458984
    8. 'ree' → logprob: -18.000057220458984
    9. 'Name' → logprob: -18.125057220458984
    10. 'N' → logprob: -18.125057220458984

Token 490: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.38369786739349365
    2. '):
' → logprob: -2.008697986602783
    3. '':
' → logprob: -2.258697986602783
    4. '):' → logprob: -2.758697986602783
    5. ''):
' → logprob: -5.008697986602783
    6. ':' → logprob: -5.758697986602783
    7. ':
' → logprob: -5.883697986602783
    8. ''):' → logprob: -6.258697986602783
    9. ''' → logprob: -6.758697986602783
    10. ')' → logprob: -8.133697509765625

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02193302847445011
    2. '
' → logprob: -3.896933078765869
    3. ' 
' → logprob: -7.521933078765869
    4. '        
' → logprob: -8.396932601928711
    5. '    
' → logprob: -9.396932601928711
    6. 'self' → logprob: -9.396932601928711
    7. ':
' → logprob: -9.521932601928711
    8. '#' → logprob: -10.021932601928711
    9. 'n' → logprob: -10.146932601928711
    10. '  
' → logprob: -10.146932601928711

Token 492: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6589788794517517
    2. ' if' → logprob: -0.9089788794517517
    3. '       ' → logprob: -2.5339789390563965
    4. 'dir' → logprob: -8.283978462219238
    5. 'node' → logprob: -10.408978462219238
    6. ' dir' → logprob: -11.033978462219238
    7. 'self' → logprob: -11.158978462219238
    8. 'd' → logprob: -11.658978462219238
    9. 'dirname' → logprob: -12.033978462219238
    10. '
' → logprob: -12.283978462219238

Token 493: ' dirname' (ID: 77891)
  Prédit: ' dirname'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dirname' → logprob: -0.07889209687709808
    2. 'dirname' → logprob: -2.5788919925689697
    3. '(dirname' → logprob: -13.07889175415039
    4. '.dirname' → logprob: -15.20389175415039
    5. ' not' → logprob: -18.20389175415039
    6. '
' → logprob: -19.32889175415039
    7. ' ' → logprob: -19.70389175415039
    8. 'd' → logprob: -20.07889175415039
    9. '	dir' → logprob: -20.07889175415039
    10. 'not' → logprob: -20.70389175415039

Token 494: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07029607146978378
    2. 'not' → logprob: -2.695296049118042
    3. ' in' → logprob: -8.195296287536621
    4. 'in' → logprob: -9.570296287536621
    5. ')' → logprob: -11.820296287536621
    6. ' ' → logprob: -13.195296287536621
    7. '	not' → logprob: -13.320296287536621
    8. '   ' → logprob: -13.820296287536621
    9. ']' → logprob: -14.945296287536621
    10. ' )' → logprob: -15.320296287536621

Token 495: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22336585819721222
    2. 'self' → logprob: -1.7233659029006958
    3. 'in' → logprob: -3.8483657836914062
    4. ' self' → logprob: -8.223365783691406
    5. '       ' → logprob: -10.223365783691406
    6. '   ' → logprob: -10.223365783691406
    7. ' not' → logprob: -11.723365783691406
    8. '```' → logprob: -11.723365783691406
    9. 'not' → logprob: -12.098365783691406
    10. '(self' → logprob: -12.223365783691406

Token 496: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.611323624383658e-05
    2. ' self' → logprob: -9.625065803527832
    3. '[self' → logprob: -18.37506675720215
    4. '(self' → logprob: -18.50006675720215
    5. '	self' → logprob: -19.25006675720215
    6. 'this' → logprob: -19.25006675720215
    7. '   ' → logprob: -19.37506675720215
    8. '=self' → logprob: -20.00006675720215
    9. '```' → logprob: -20.62506675720215
    10. '
' → logprob: -20.62506675720215

Token 497: '.direct' (ID: 80570)
  Prédit: '.direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direct' → logprob: -5.574251918005757e-05
    2. 'directories' → logprob: -9.875055313110352
    3. '.d' → logprob: -13.375055313110352
    4. '.directory' → logprob: -13.875055313110352
    5. 'irect' → logprob: -14.250055313110352
    6. '_direct' → logprob: -15.375055313110352
    7. '.' → logprob: -15.625055313110352
    8. '.files' → logprob: -15.750055313110352
    9. 'self' → logprob: -15.750055313110352
    10. '.Direct' → logprob: -16.50005531311035

Token 498: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.000556843588128686
    2. 'ory' → logprob: -7.500556945800781
    3. 'ries' → logprob: -13.875556945800781
    4. '       ' → logprob: -14.375556945800781
    5. 'ores' → logprob: -14.500556945800781
    6. 'directories' → logprob: -14.500556945800781
    7. '   ' → logprob: -14.750556945800781
    8. 'ORIES' → logprob: -14.750556945800781
    9. 'or' → logprob: -14.875556945800781
    10. 'orie' → logprob: -17.37555694580078

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5762435793876648
    2. ':
' → logprob: -0.8262435793876648
    3. '       ' → logprob: -8.82624340057373
    4. '           ' → logprob: -9.57624340057373
    5. '   ' → logprob: -10.07624340057373
    6. ':
' → logprob: -11.20124340057373
    7. '):
' → logprob: -11.45124340057373
    8. ',' → logprob: -12.20124340057373
    9. ':

' → logprob: -13.07624340057373
    10. '.keys' → logprob: -13.20124340057373

Token 500: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4360453486442566
    2. '           ' → logprob: -1.1860454082489014
    3. '       ' → logprob: -3.6860454082489014
    4. ':' → logprob: -3.8110454082489014
    5. '):
' → logprob: -8.06104564666748
    6. 'self' → logprob: -8.56104564666748
    7. ',' → logprob: -9.06104564666748
    8. ' or' → logprob: -9.68604564666748
    9. ' self' → logprob: -10.68604564666748
    10. '               ' → logprob: -11.68604564666748

Token 501: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.018233176320791245
    2. ' self' → logprob: -4.018233299255371
    3. 'new' → logprob: -9.893233299255371
    4. '           ' → logprob: -11.268233299255371
    5. 'node' → logprob: -11.893233299255371
    6. '       ' → logprob: -12.018233299255371
    7. ' new' → logprob: -12.018233299255371
    8. 'dir' → logprob: -15.018233299255371
    9. 'child' → logprob: -15.143233299255371
    10. ' node' → logprob: -15.643233299255371

Token 502: '.direct' (ID: 80570)
  Prédit: '.direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direct' → logprob: -2.117345684382599e-05
    2. 'directories' → logprob: -11.250020980834961
    3. ' .' → logprob: -12.625020980834961
    4. 'direct' → logprob: -13.375020980834961
    5. '.directory' → logprob: -13.375020980834961
    6. '].' → logprob: -14.375020980834961
    7. '}.' → logprob: -15.000020980834961
    8. '.' → logprob: -15.125020980834961
    9. 'irect' → logprob: -16.00002098083496
    10. ').' → logprob: -16.00002098083496

Token 503: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -6.706686690449715e-05
    2. 'ory' → logprob: -9.625066757202148
    3. 'ORIES' → logprob: -14.250066757202148
    4. 'ries' → logprob: -15.625066757202148
    5. 'directories' → logprob: -17.50006675720215
    6. 'orie' → logprob: -18.50006675720215
    7. 'aries' → logprob: -18.50006675720215
    8. 'oires' → logprob: -18.87506675720215
    9. 'uries' → logprob: -19.00006675720215
    10. '   ' → logprob: -19.25006675720215

Token 504: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. 'dirname' → logprob: -13.125001907348633
    3. ' [' → logprob: -17.500001907348633
    4. '][' → logprob: -17.625001907348633
    5. '[
' → logprob: -17.625001907348633
    6. '
' → logprob: -18.625001907348633
    7. '[root' → logprob: -18.625001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '[parent' → logprob: -19.250001907348633
    10. '[self' → logprob: -19.250001907348633

Token 505: 'dirname' (ID: 28300)
  Prédit: 'dirname'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirname' → logprob: -4.127333340875339e-06
    2. 'Directory' → logprob: -12.500003814697266
    3. ' dirname' → logprob: -15.125003814697266
    4. 'dir' → logprob: -17.250003814697266
    5. '(dirname' → logprob: -17.875003814697266
    6. 'Dir' → logprob: -20.375003814697266
    7. '{' → logprob: -20.625003814697266
    8. 'Path' → logprob: -20.875003814697266
    9. '.dirname' → logprob: -20.875003814697266
    10. '[' → logprob: -21.000003814697266

Token 506: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2113979209971149e-05
    2. ']=' → logprob: -12.000012397766113
    3. '']' → logprob: -12.625012397766113
    4. ' ]' → logprob: -12.875012397766113
    5. '"]' → logprob: -17.250011444091797
    6. ')' → logprob: -17.250011444091797
    7. '   ' → logprob: -17.625011444091797
    8. '=' → logprob: -18.250011444091797
    9. ''' → logprob: -18.625011444091797
    10. '[' → logprob: -19.375011444091797

Token 507: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016274824738502502
    2. ' =' → logprob: -4.516274929046631
    3. ']' → logprob: -5.266274929046631
    4. ']=' → logprob: -9.891274452209473
    5. ')' → logprob: -16.89127540588379
    6. '[' → logprob: -17.76627540588379
    7. '   ' → logprob: -17.89127540588379
    8. ' ]' → logprob: -18.89127540588379
    9. '=create' → logprob: -18.89127540588379
    10. '=
' → logprob: -19.01627540588379

Token 508: ' Directory' (ID: 32740)
  Prédit: 'Directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Directory' → logprob: -0.0024756586644798517
    2. ' Directory' → logprob: -6.002475738525391
    3. 'self' → logprob: -19.12747573852539
    4. '.Directory' → logprob: -21.12747573852539
    5. 'directory' → logprob: -21.37747573852539
    6. '_directory' → logprob: -21.37747573852539
    7. '   ' → logprob: -21.87747573852539
    8. '       ' → logprob: -23.37747573852539
    9. 'Directories' → logprob: -23.87747573852539
    10. 'Director' → logprob: -24.00247573852539

Token 509: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: 0.0
    2. 'tree' → logprob: -18.5
    3. 'Node' → logprob: -18.875
    4. '_tree' → logprob: -20.125
    5. '<Tree' → logprob: -20.5
    6. '_TREE' → logprob: -21.125
    7. '	Tree' → logprob: -21.25
    8. 'Trie' → logprob: -21.375
    9. '[' → logprob: -21.625
    10. 'The' → logprob: -22.375

Token 510: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: 0.0
    2. 'node' → logprob: -18.5
    3. 'ode' → logprob: -20.375
    4. '_node' → logprob: -21.0
    5. ' Node' → logprob: -21.625
    6. 'NODE' → logprob: -21.625
    7. '	Node' → logprob: -22.375
    8. '_NODE' → logprob: -22.75
    9. 'Nodes' → logprob: -23.375
    10. '_Node' → logprob: -23.625

Token 511: '(dirname' (ID: 103890)
  Prédit: '(dirname'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dirname' → logprob: -0.0001628956088097766
    2. '(dir' → logprob: -8.750163078308105
    3. 'dirname' → logprob: -12.500163078308105
    4. '(dim' → logprob: -15.125163078308105
    5. '(' → logprob: -15.750163078308105
    6. '(di' → logprob: -16.12516212463379
    7. '(dom' → logprob: -16.62516212463379
    8. ' dirname' → logprob: -17.25016212463379
    9. '.dirname' → logprob: -18.25016212463379
    10. '(name' → logprob: -18.37516212463379

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008469101157970726
    2. 'self' → logprob: -7.125846862792969
    3. ',self' → logprob: -10.125846862792969
    4. ' ,' → logprob: -13.500846862792969
    5. ',
' → logprob: -14.125846862792969
    6. '           ' → logprob: -15.625846862792969
    7. ',parent' → logprob: -16.62584686279297
    8. ' self' → logprob: -17.00084686279297
    9. '(self' → logprob: -17.50084686279297
    10. '       ' → logprob: -18.25084686279297

Token 513: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000580792548134923
    2. ' self' → logprob: -7.500580787658691
    3. 'parent' → logprob: -10.500580787658691
    4. ' parent' → logprob: -16.000581741333008
    5. '           ' → logprob: -16.875581741333008
    6. '   ' → logprob: -17.000581741333008
    7. '	self' → logprob: -17.500581741333008
    8. '       ' → logprob: -17.750581741333008
    9. '(self' → logprob: -18.625581741333008
    10. '
' → logprob: -18.625581741333008

Token 514: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -13.875000953674316
    3. ' )' → logprob: -15.000000953674316
    4. '),' → logprob: -18.250001907348633
    5. ')return' → logprob: -19.125001907348633
    6. ')`' → logprob: -19.250001907348633
    7. ');' → logprob: -19.500001907348633
    8. ')}' → logprob: -19.500001907348633
    9. '<|end|>' → logprob: -19.500001907348633
    10. '))' → logprob: -19.625001907348633

Token 515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01046805176883936
    2. 'return' → logprob: -4.635468006134033
    3. '
' → logprob: -7.385468006134033
    4. ' return' → logprob: -9.385468482971191
    5. '        
' → logprob: -13.135468482971191
    6. ':return' → logprob: -13.635468482971191
    7. '           ' → logprob: -14.010468482971191
    8. '   ' → logprob: -14.260468482971191
    9. ',' → logprob: -14.885468482971191
    10. '
' → logprob: -14.885468482971191

Token 516: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16070570051670074
    2. '       ' → logprob: -1.9107056856155396
    3. ' return' → logprob: -7.66070556640625
    4. '   ' → logprob: -12.03570556640625
    5. '
' → logprob: -13.16070556640625
    6. '	return' → logprob: -13.78570556640625
    7. '        
' → logprob: -14.66070556640625
    8. ')return' → logprob: -14.78570556640625
    9. '           ' → logprob: -14.91070556640625
    10. ':return' → logprob: -15.41070556640625

Token 517: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001584850688232109
    2. ' self' → logprob: -8.750158309936523
    3. '(self' → logprob: -19.625158309936523
    4. '	self' → logprob: -19.625158309936523
    5. '[self' → logprob: -20.875158309936523
    6. '       ' → logprob: -21.625158309936523
    7. '   ' → logprob: -22.375158309936523
    8. 'Self' → logprob: -23.125158309936523
    9. '$self' → logprob: -24.000158309936523
    10. 's' → logprob: -24.250158309936523

Token 518: '.direct' (ID: 80570)
  Prédit: '.direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direct' → logprob: -8.77627644513268e-06
    2. '.directory' → logprob: -12.000008583068848
    3. 'directories' → logprob: -13.875008583068848
    4. '.d' → logprob: -14.250008583068848
    5. 'DIRECT' → logprob: -15.125008583068848
    6. '.' → logprob: -15.625008583068848
    7. ' .' → logprob: -15.875008583068848
    8. 'direct' → logprob: -16.250009536743164
    9. '.dir' → logprob: -17.000009536743164
    10. 'irect' → logprob: -17.000009536743164

Token 519: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.00015419373812619597
    2. 'ory' → logprob: -8.875154495239258
    3. 'or' → logprob: -11.750154495239258
    4. 'ries' → logprob: -12.375154495239258
    5. 'directories' → logprob: -13.375154495239258
    6. 'ORIES' → logprob: -15.000154495239258
    7. 'uries' → logprob: -16.625154495239258
    8. 'orie' → logprob: -17.125154495239258
    9. '_' → logprob: -17.500154495239258
    10. 'eries' → logprob: -18.125154495239258

Token 520: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5107177862082608e-05
    2. 'dirname' → logprob: -10.625024795532227
    3. '```' → logprob: -15.625024795532227
    4. '.dirname' → logprob: -16.125024795532227
    5. '(dirname' → logprob: -16.500024795532227
    6. '][' → logprob: -16.750024795532227
    7. ']' → logprob: -16.875024795532227
    8. '[name' → logprob: -17.625024795532227
    9. ')[' → logprob: -17.625024795532227
    10. '.get' → logprob: -17.625024795532227

Token 521: 'dirname' (ID: 28300)
  Prédit: 'dirname'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirname' → logprob: 0.0
    2. ' dirname' → logprob: -18.25
    3. '(dirname' → logprob: -18.625
    4. '[' → logprob: -19.875
    5. '.dirname' → logprob: -20.5
    6. 'dir' → logprob: -21.25
    7. 'basename' → logprob: -21.25
    8. 'typename' → logprob: -21.875
    9. 'mkdir' → logprob: -22.0
    10. '   ' → logprob: -22.25

Token 522: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014311701990664005
    2. '<|end|>' → logprob: -4.264311790466309
    3. '<|end|>' → logprob: -9.889311790466309
    4. ']' → logprob: -9.889311790466309
    5. '}' → logprob: -11.139311790466309
    6. '[' → logprob: -11.889311790466309
    7. ')
' → logprob: -12.014311790466309
    8. '   ' → logprob: -12.139311790466309
    9. '')' → logprob: -12.514311790466309
    10. '       ' → logprob: -12.889311790466309

Token 523: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.1646365225315094
    2. '   ' → logprob: -1.914636492729187
    3. '```' → logprob: -6.414636611938477
    4. '
' → logprob: -6.914636611938477
    5. '<|end|>' → logprob: -7.289636611938477
    6. '        
' → logprob: -7.414636611938477
    7. 'def' → logprob: -8.664636611938477
    8. '  
' → logprob: -9.164636611938477
    9. '   
' → logprob: -9.289636611938477
    10. ' 
' → logprob: -10.039636611938477

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012925727292895317
    2. 'def' → logprob: -4.387925624847412
    3. '    
' → logprob: -8.26292610168457
    4. ' def' → logprob: -9.13792610168457
    5. '
' → logprob: -10.63792610168457
    6. '```' → logprob: -11.13792610168457
    7. '  ' → logprob: -12.63792610168457
    8. '    ' → logprob: -13.26292610168457
    9. ' ' → logprob: -13.26292610168457
    10. '	def' → logprob: -13.51292610168457

Token 525: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.9623810658231378e-05
    2. '   ' → logprob: -11.125020027160645
    3. ' def' → logprob: -12.250020027160645
    4. '    
' → logprob: -18.750019073486328
    5. '	def' → logprob: -19.125019073486328
    6. '```' → logprob: -19.125019073486328
    7. '
' → logprob: -19.750019073486328
    8. '  ' → logprob: -21.125019073486328
    9. ' ' → logprob: -21.250019073486328
    10. '<|end|>' → logprob: -21.375019073486328

Token 526: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.00028088156250305474
    2. 'remove' → logprob: -9.00028133392334
    3. ' add' → logprob: -9.37528133392334
    4. 'has' → logprob: -9.62528133392334
    5. 'get' → logprob: -12.62528133392334
    6. '_add' → logprob: -13.25028133392334
    7. '__' → logprob: -14.62528133392334
    8. 'def' → logprob: -14.87528133392334
    9. 'find' → logprob: -15.50028133392334
    10. 'file' → logprob: -15.75028133392334

Token 527: '_file' (ID: 5933)
  Prédit: '_file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -0.0001382241171086207
    2. '_' → logprob: -9.625138282775879
    3. '_directory' → logprob: -9.875138282775879
    4. 'file' → logprob: -11.125138282775879
    5. '_filename' → logprob: -12.375138282775879
    6. '_filepath' → logprob: -14.750138282775879
    7. ' file' → logprob: -15.250138282775879
    8. '_files' → logprob: -15.500138282775879
    9. '_f' → logprob: -15.750138282775879
    10. '(file' → logprob: -16.250137329101562

Token 528: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0634828507900238
    2. '(filename' → logprob: -2.8134827613830566
    3. '(file' → logprob: -6.688482761383057
    4. '(name' → logprob: -8.813483238220215
    5. '(' → logprob: -9.688483238220215
    6. '(fname' → logprob: -10.313483238220215
    7. ' (' → logprob: -11.313483238220215
    8. '(dirname' → logprob: -12.438483238220215
    9. '(filepath' → logprob: -12.688483238220215
    10. ',' → logprob: -13.438483238220215

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9628788828849792
    2. '(' → logprob: -1.337878942489624
    3. '(filename' → logprob: -1.337878942489624
    4. '(file' → logprob: -2.712878942489624
    5. ' (' → logprob: -4.587878704071045
    6. '(dirname' → logprob: -5.087878704071045
    7. ')' → logprob: -5.587878704071045
    8. '(name' → logprob: -5.962878704071045
    9. '(self' → logprob: -6.837878704071045
    10. '(fname' → logprob: -6.962878704071045

Token 530: ' filename' (ID: 8246)
  Prédit: 'filename'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filename' → logprob: -0.014170682057738304
    2. ' filename' → logprob: -4.2641706466674805
    3. 'fname' → logprob: -12.26417064666748
    4. 'file' → logprob: -13.76417064666748
    5. 'filepath' → logprob: -14.38917064666748
    6. 'name' → logprob: -14.63917064666748
    7. 'dirname' → logprob: -16.014171600341797
    8. 'basename' → logprob: -16.514171600341797
    9. '
' → logprob: -17.389171600341797
    10. '(filename' → logprob: -17.389171600341797

Token 531: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1253853142261505
    2. ')' → logprob: -2.625385284423828
    3. ',' → logprob: -3.500385284423828
    4. ')(' → logprob: -4.750385284423828
    5. '(' → logprob: -6.000385284423828
    6. 'self' → logprob: -6.250385284423828
    7. ' (' → logprob: -6.625385284423828
    8. ':' → logprob: -8.250385284423828
    9. '   ' → logprob: -8.625385284423828
    10. '       ' → logprob: -9.250385284423828

Token 532: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4110719859600067
    2. ' str' → logprob: -1.536072015762329
    3. 'filename' → logprob: -2.286072015762329
    4. ' filename' → logprob: -3.911072015762329
    5. ')' → logprob: -9.16107177734375
    6. ':str' → logprob: -11.91107177734375
    7. ' ' → logprob: -12.03607177734375
    8. '(str' → logprob: -12.78607177734375
    9. '(filename' → logprob: -12.78607177734375
    10. '[str' → logprob: -12.78607177734375

Token 533: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10560698062181473
    2. ')' → logprob: -2.355607032775879
    3. '):' → logprob: -5.230607032775879
    4. '):
' → logprob: -11.105607032775879
    5. ' ):
' → logprob: -11.105607032775879
    6. ' )' → logprob: -12.730607032775879
    7. '   ' → logprob: -14.355607032775879
    8. '):

' → logprob: -14.480607032775879
    9. ')add' → logprob: -14.855607032775879
    10. '       ' → logprob: -15.105607032775879

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011179500725120306
    2. 'self' → logprob: -7.501118183135986
    3. ' self' → logprob: -7.501118183135986
    4. '        
' → logprob: -13.001117706298828
    5. '
' → logprob: -13.251117706298828
    6. ',' → logprob: -13.376117706298828
    7. '<|end|>' → logprob: -13.626117706298828
    8. '   ' → logprob: -14.001117706298828
    9. '	self' → logprob: -14.251117706298828
    10. '```' → logprob: -14.251117706298828

Token 535: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012057077838107944
    2. '       ' → logprob: -6.751205921173096
    3. ' self' → logprob: -10.251205444335938
    4. '   ' → logprob: -16.876205444335938
    5. '	self' → logprob: -18.751205444335938
    6. '
' → logprob: -20.126205444335938
    7. '           ' → logprob: -20.376205444335938
    8. '(self' → logprob: -20.501205444335938
    9. '               ' → logprob: -22.251205444335938
    10. '        
' → logprob: -22.501205444335938

Token 536: '.files' (ID: 39697)
  Prédit: '.files'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.files' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -13.87500286102295
    3. ' .' → logprob: -14.75000286102295
    4. '	files' → logprob: -14.75000286102295
    5. ').' → logprob: -15.25000286102295
    6. '.users' → logprob: -15.37500286102295
    7. 'files' → logprob: -15.50000286102295
    8. '.posts' → logprob: -16.875003814697266
    9. '.samples' → logprob: -17.000003814697266
    10. '.user' → logprob: -17.125003814697266

Token 537: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0007104054093360901
    2. '.' → logprob: -7.250710487365723
    3. ' .' → logprob: -15.000710487365723
    4. 'add' → logprob: -16.500709533691406
    5. '.append' → logprob: -16.875709533691406
    6. '   ' → logprob: -17.750709533691406
    7. '.Add' → logprob: -18.375709533691406
    8. '.update' → logprob: -18.875709533691406
    9. '.
' → logprob: -19.875709533691406
    10. '.insert' → logprob: -20.000709533691406

Token 538: '(filename' (ID: 24971)
  Prédit: '(filename'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(filename' → logprob: -2.935296834039036e-06
    2. 'filename' → logprob: -12.75000286102295
    3. '(' → logprob: -18.250003814697266
    4. ' filename' → logprob: -19.125003814697266
    5. '(file' → logprob: -21.250003814697266
    6. '(username' → logprob: -21.625003814697266
    7. '(filepath' → logprob: -22.125003814697266
    8. '	filename' → logprob: -22.125003814697266
    9. '(f' → logprob: -23.000003814697266
    10. '(fname' → logprob: -23.375003814697266

Token 539: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.951771421066951e-05
    2. ')
' → logprob: -10.875029563903809
    3. '<|end|>' → logprob: -11.875029563903809
    4. '       ' → logprob: -13.500029563903809
    5. ' )' → logprob: -13.750029563903809
    6. '   ' → logprob: -14.375029563903809
    7. '')' → logprob: -15.500029563903809
    8. '<|end|>' → logprob: -16.625028610229492
    9. '()' → logprob: -16.750028610229492
    10. ')return' → logprob: -16.875028610229492

Token 540: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.478524774312973
    2. '    
' → logprob: -0.9785248041152954
    3. '
' → logprob: -5.603524684906006
    4. 'def' → logprob: -7.853524684906006
    5. '        
' → logprob: -8.228525161743164
    6. '<|end|>' → logprob: -9.853525161743164
    7. '  
' → logprob: -11.353525161743164
    8. '```' → logprob: -11.478525161743164
    9. ' 
' → logprob: -11.853525161743164
    10. '   
' → logprob: -12.103525161743164

Token 541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16064459085464478
    2. 'def' → logprob: -1.91064453125
    3. '<|end|>' → logprob: -8.66064453125
    4. ' def' → logprob: -8.91064453125
    5. '    
' → logprob: -9.78564453125
    6. '<|end|>' → logprob: -11.16064453125
    7. '    ' → logprob: -11.28564453125
    8. '```' → logprob: -11.91064453125
    9. 'class' → logprob: -11.91064453125
    10. '  ' → logprob: -12.16064453125

Token 542: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.416665640543215e-05
    2. '   ' → logprob: -10.62503433227539
    3. ' def' → logprob: -11.62503433227539
    4. '#' → logprob: -15.50003433227539
    5. '```' → logprob: -15.75003433227539
    6. '    
' → logprob: -16.25003433227539
    7. 'class' → logprob: -16.25003433227539
    8. '	def' → logprob: -16.37503433227539
    9. '<|end|>' → logprob: -16.75003433227539
    10. '`' → logprob: -18.37503433227539

Token 543: ' has' (ID: 853)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.929588258266449
    2. 'remove' → logprob: -0.929588258266449
    3. 'list' → logprob: -2.3045883178710938
    4. 'has' → logprob: -2.5545883178710938
    5. '__' → logprob: -4.054588317871094
    6. ' get' → logprob: -5.429588317871094
    7. ' remove' → logprob: -5.804588317871094
    8. 'find' → logprob: -6.054588317871094
    9. ' __' → logprob: -6.429588317871094
    10. ' has' → logprob: -6.679588317871094

Token 544: '_directory' (ID: 35850)
  Prédit: '_directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_directory' → logprob: -0.3876591622829437
    2. '_file' → logprob: -1.1376591920852661
    3. '_' → logprob: -7.387659072875977
    4. '_child' → logprob: -9.637659072875977
    5. '_direct' → logprob: -10.012659072875977
    6. '_filename' → logprob: -11.012659072875977
    7. '_dir' → logprob: -11.262659072875977
    8. 'directory' → logprob: -11.512659072875977
    9. '_key' → logprob: -12.387659072875977
    10. '_sub' → logprob: -12.762659072875977

Token 545: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04483651742339134
    2. '(dirname' → logprob: -3.6698365211486816
    3. '('' → logprob: -4.794836521148682
    4. '(self' → logprob: -4.919836521148682
    5. '(directory' → logprob: -7.169836521148682
    6. '(name' → logprob: -7.419836521148682
    7. ')' → logprob: -8.669836044311523
    8. '(`' → logprob: -8.669836044311523
    9. '<|end|>' → logprob: -8.919836044311523
    10. '(dir' → logprob: -9.294836044311523

Token 546: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8817810416221619
    2. '(self' → logprob: -1.6317811012268066
    3. '(dirname' → logprob: -1.7567811012268066
    4. ')(' → logprob: -2.0067811012268066
    5. ')' → logprob: -3.3817811012268066
    6. '(directory' → logprob: -3.8817811012268066
    7. ',' → logprob: -5.006781101226807
    8. '(dir' → logprob: -5.131781101226807
    9. '(name' → logprob: -5.256781101226807
    10. '<|end|>' → logprob: -6.506781101226807

Token 547: ' dirname' (ID: 77891)
  Prédit: 'dirname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirname' → logprob: -0.06348754465579987
    2. ' dirname' → logprob: -2.8134875297546387
    3. 'name' → logprob: -6.813487529754639
    4. 'dir' → logprob: -8.313488006591797
    5. ' name' → logprob: -8.813488006591797
    6. ' dir' → logprob: -11.438488006591797
    7. 'directory' → logprob: -11.563488006591797
    8. ' directory' → logprob: -13.063488006591797
    9. '(dirname' → logprob: -13.063488006591797
    10. '.dirname' → logprob: -14.688488006591797

Token 548: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005754818674176931
    2. ',' → logprob: -6.1307549476623535
    3. '):' → logprob: -6.6307549476623535
    4. ':' → logprob: -7.3807549476623535
    5. '')' → logprob: -7.6307549476623535
    6. '(dirname' → logprob: -7.7557549476623535
    7. '):
' → logprob: -8.005754470825195
    8. 'dirname' → logprob: -8.630754470825195
    9. '(' → logprob: -9.880754470825195
    10. ' )' → logprob: -10.880754470825195

Token 549: ' str' (ID: 989)
  Prédit: 'dirname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirname' → logprob: -1.0036102533340454
    2. ' dirname' → logprob: -1.0036102533340454
    3. ' str' → logprob: -1.8786102533340454
    4. ')' → logprob: -2.503610134124756
    5. 'str' → logprob: -3.503610134124756
    6. ''' → logprob: -6.503610134124756
    7. '(dirname' → logprob: -8.628610610961914
    8. 'dir' → logprob: -9.003610610961914
    9. '')' → logprob: -9.253610610961914
    10. ' )' → logprob: -9.378610610961914

Token 550: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019710339256562293
    2. '):' → logprob: -8.750197410583496
    3. '):
' → logprob: -10.250197410583496
    4. '')' → logprob: -13.125197410583496
    5. ' )' → logprob: -13.875197410583496
    6. ')->' → logprob: -16.25019645690918
    7. ':' → logprob: -16.37519645690918
    8. '):
' → logprob: -17.00019645690918
    9. '")' → logprob: -17.12519645690918
    10. '   ' → logprob: -17.62519645690918

Token 551: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1979837268590927
    2. ')' → logprob: -1.947983741760254
    3. 'self' → logprob: -3.322983741760254
    4. 'def' → logprob: -8.197983741760254
    5. ' self' → logprob: -8.322983741760254
    6. '->' → logprob: -8.697983741760254
    7. '   ' → logprob: -9.197983741760254
    8. '(' → logprob: -9.572983741760254
    9. ' ->' → logprob: -9.572983741760254
    10. 'return' → logprob: -10.322983741760254

Token 552: ' bool' (ID: 3792)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5255904793739319
    2. ' str' → logprob: -1.525590419769287
    3. 'bool' → logprob: -1.900590419769287
    4. ' bool' → logprob: -3.775590419769287
    5. 'dirname' → logprob: -4.900590419769287
    6. 'True' → logprob: -5.275590419769287
    7. ' dirname' → logprob: -6.650590419769287
    8. ''' → logprob: -6.900590419769287
    9. ' True' → logprob: -6.900590419769287
    10. '(str' → logprob: -8.025590896606445

Token 553: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3006531000137329
    2. '       ' → logprob: -1.425653100013733
    3. ')' → logprob: -4.800652980804443
    4. '   ' → logprob: -5.175652980804443
    5. 'self' → logprob: -6.425652980804443
    6. '):
' → logprob: -6.800652980804443
    7. ':' → logprob: -6.800652980804443
    8. ':
' → logprob: -6.925652980804443
    9. '(' → logprob: -8.050653457641602
    10. '->' → logprob: -9.300653457641602

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013572161085903645
    2. ' return' → logprob: -4.3885722160339355
    3. 'return' → logprob: -7.0135722160339355
    4. '   ' → logprob: -10.263571739196777
    5. '	' → logprob: -10.638571739196777
    6. ' 
' → logprob: -11.138571739196777
    7. ')' → logprob: -11.263571739196777
    8. '        
' → logprob: -11.263571739196777
    9. '<|end|>' → logprob: -11.763571739196777
    10. ':' → logprob: -11.763571739196777

Token 555: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.028371166437864304
    2. ' return' → logprob: -3.7783710956573486
    3. '       ' → logprob: -5.278371334075928
    4. 'dirname' → logprob: -11.77837085723877
    5. '   ' → logprob: -12.77837085723877
    6. '
' → logprob: -14.15337085723877
    7. '        
' → logprob: -15.77837085723877
    8. '	return' → logprob: -16.278371810913086
    9. '    ' → logprob: -16.403371810913086
    10. '     ' → logprob: -16.528371810913086

Token 556: ' dirname' (ID: 77891)
  Prédit: 'dirname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirname' → logprob: -0.0002614550176076591
    2. ' dirname' → logprob: -8.250261306762695
    3. '(dirname' → logprob: -16.250261306762695
    4. 'dir' → logprob: -18.250261306762695
    5. '.dirname' → logprob: -19.125261306762695
    6. '   ' → logprob: -20.250261306762695
    7. 'typename' → logprob: -21.000261306762695
    8. 'fname' → logprob: -21.750261306762695
    9. 'dbname' → logprob: -21.875261306762695
    10. ' ' → logprob: -22.125261306762695

Token 557: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3484620153903961
    2. ' in' → logprob: -1.2234619855880737
    3. ' ' → logprob: -11.848462104797363
    4. 'In' → logprob: -13.598462104797363
    5. '	in' → logprob: -13.848462104797363
    6. '[in' → logprob: -13.848462104797363
    7. ')' → logprob: -14.473462104797363
    8. '[' → logprob: -14.598462104797363
    9. 'space' → logprob: -14.598462104797363
    10. '   ' → logprob: -14.848462104797363

Token 558: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.842555426876061e-06
    2. ' self' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.2500057220459
    4. '       ' → logprob: -18.0000057220459
    5. '(self' → logprob: -20.1250057220459
    6. '
' → logprob: -20.7500057220459
    7. '[self' → logprob: -20.8750057220459
    8. '	self' → logprob: -21.3750057220459
    9. ' ' → logprob: -21.6250057220459
    10. '```' → logprob: -21.6250057220459

Token 559: '.direct' (ID: 80570)
  Prédit: '.direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direct' → logprob: -1.8908587662735954e-05
    2. 'directories' → logprob: -11.000019073486328
    3. '.directory' → logprob: -13.125019073486328
    4. 'direct' → logprob: -17.500019073486328
    5. ' .' → logprob: -17.750019073486328
    6. 'DIRECT' → logprob: -17.875019073486328
    7. '.Direct' → logprob: -18.250019073486328
    8. '.d' → logprob: -18.375019073486328
    9. '_direct' → logprob: -18.375019073486328
    10. '_DIRECT' → logprob: -18.625019073486328

Token 560: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -2.546478935983032e-05
    2. 'ory' → logprob: -11.250025749206543
    3. 't' → logprob: -12.000025749206543
    4. 'ORIES' → logprob: -12.375025749206543
    5. 'ries' → logprob: -14.000025749206543
    6. 'directories' → logprob: -14.875025749206543
    7. '
' → logprob: -15.625025749206543
    8. 'ot' → logprob: -16.250024795532227
    9. '   ' → logprob: -16.250024795532227
    10. '_' → logprob: -16.625024795532227

Token 561: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.02571176551282406
    2. '   ' → logprob: -4.275711536407471
    3. '<|end|>' → logprob: -4.525711536407471
    4. '  
' → logprob: -8.400712013244629
    5. '   
' → logprob: -9.025712013244629
    6. '
' → logprob: -9.025712013244629
    7. '        
' → logprob: -9.650712013244629
    8. ' 
' → logprob: -10.150712013244629
    9. '```' → logprob: -10.400712013244629
    10. '<|end|>' → logprob: -11.400712013244629

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005839926656335592
    2. 'def' → logprob: -5.880839824676514
    3. '    
' → logprob: -6.130839824676514
    4. '
' → logprob: -7.630839824676514
    5. '```' → logprob: -8.005840301513672
    6. '        
' → logprob: -11.630840301513672
    7. ' def' → logprob: -11.880840301513672
    8. '  
' → logprob: -12.130840301513672
    9. '<|end|>' → logprob: -12.630840301513672
    10. '  ' → logprob: -12.880840301513672

Token 563: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015093892579898238
    2. '   ' → logprob: -6.501509189605713
    3. ' def' → logprob: -12.001509666442871
    4. '
' → logprob: -14.251509666442871
    5. '    
' → logprob: -16.251508712768555
    6. '```' → logprob: -16.251508712768555
    7. '	def' → logprob: -16.876508712768555
    8. ' ' → logprob: -19.251508712768555
    9. '  ' → logprob: -19.626508712768555
    10. '       ' → logprob: -20.001508712768555

Token 564: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.0018048917409032583
    2. ' has' → logprob: -6.376804828643799
    3. 'def' → logprob: -9.251805305480957
    4. '_has' → logprob: -13.501805305480957
    5. '.has' → logprob: -13.751805305480957
    6. 'have' → logprob: -14.126805305480957
    7. 'get' → logprob: -14.251805305480957
    8. '	has' → logprob: -14.501805305480957
    9. '   ' → logprob: -14.626805305480957
    10. '__' → logprob: -14.751805305480957

Token 565: '_file' (ID: 5933)
  Prédit: '_file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -0.000284696085145697
    2. '_directory' → logprob: -8.250285148620605
    3. 'file' → logprob: -10.875285148620605
    4. '_' → logprob: -13.000285148620605
    5. ' file' → logprob: -14.000285148620605
    6. '_filename' → logprob: -14.375285148620605
    7. 'directory' → logprob: -15.375285148620605
    8. 'File' → logprob: -15.625285148620605
    9. '_filepath' → logprob: -16.00028419494629
    10. '_path' → logprob: -16.12528419494629

Token 566: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.15167148411273956
    2. '(' → logprob: -2.0266714096069336
    3. '(filename' → logprob: -4.776671409606934
    4. '(file' → logprob: -8.276671409606934
    5. ' (' → logprob: -9.026671409606934
    6. '<|end|>' → logprob: -10.151671409606934
    7. '(f' → logprob: -10.526671409606934
    8. '(
' → logprob: -10.526671409606934
    9. 'self' → logprob: -10.901671409606934
    10. '(files' → logprob: -11.526671409606934

Token 567: ',' (ID: 11)
  Prédit: '(filename'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(filename' → logprob: -0.09053733944892883
    2. ')' → logprob: -2.7155373096466064
    3. '(' → logprob: -4.0905375480651855
    4. ',' → logprob: -6.5905375480651855
    5. ')(' → logprob: -7.2155375480651855
    6. '(file' → logprob: -7.4655375480651855
    7. '<|end|>' → logprob: -7.8405375480651855
    8. 'filename' → logprob: -8.340537071228027
    9. ' filename' → logprob: -9.465537071228027
    10. '),' → logprob: -9.465537071228027

Token 568: ' filename' (ID: 8246)
  Prédit: 'filename'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filename' → logprob: -0.011048762127757072
    2. ' filename' → logprob: -4.511048793792725
    3. 'file' → logprob: -14.386048316955566
    4. 'filepath' → logprob: -16.511049270629883
    5. '	filename' → logprob: -16.761049270629883
    6. 'dirname' → logprob: -16.761049270629883
    7. '(filename' → logprob: -16.886049270629883
    8. '   ' → logprob: -17.511049270629883
    9. 'fname' → logprob: -17.511049270629883
    10. 'self' → logprob: -17.886049270629883

Token 569: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010610329918563366
    2. 'self' → logprob: -7.251060962677002
    3. '(self' → logprob: -8.12606143951416
    4. ' )' → logprob: -11.00106143951416
    5. ',' → logprob: -11.00106143951416
    6. '):
' → logprob: -11.62606143951416
    7. '   ' → logprob: -11.75106143951416
    8. ' self' → logprob: -13.50106143951416
    9. '       ' → logprob: -13.62606143951416
    10. '):' → logprob: -14.25106143951416

Token 570: ' str' (ID: 989)
  Prédit: 'filename'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filename' → logprob: -1.3021880388259888
    2. ')' → logprob: -1.4271880388259888
    3. ' str' → logprob: -1.4271880388259888
    4. ' filename' → logprob: -1.6771880388259888
    5. 'str' → logprob: -2.802187919616699
    6. ' )' → logprob: -8.6771879196167
    7. '(filename' → logprob: -9.4271879196167
    8. 'file' → logprob: -10.1771879196167
    9. ' def' → logprob: -10.1771879196167
    10. ' ' → logprob: -10.4271879196167

Token 571: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ' )' → logprob: -12.375011444091797
    3. '   ' → logprob: -12.750011444091797
    4. 'self' → logprob: -13.000011444091797
    5. '):
' → logprob: -14.000011444091797
    6. '       ' → logprob: -15.000011444091797
    7. '')' → logprob: -15.625011444091797
    8. '):' → logprob: -16.125011444091797
    9. ' ' → logprob: -17.125011444091797
    10. ',' → logprob: -17.375011444091797

Token 572: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013846398796886206
    2. ')' → logprob: -6.876384735107422
    3. 'self' → logprob: -8.126384735107422
    4. '       ' → logprob: -10.376384735107422
    5. ' self' → logprob: -11.876384735107422
    6. '->' → logprob: -11.876384735107422
    7. '   ' → logprob: -11.876384735107422
    8. ' ->' → logprob: -13.626384735107422
    9. '(' → logprob: -14.001384735107422
    10. 'return' → logprob: -14.251384735107422

Token 573: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.015365819446742535
    2. 'filename' → logprob: -4.2653656005859375
    3. ' bool' → logprob: -6.7653656005859375
    4. ' filename' → logprob: -10.390365600585938
    5. '(filename' → logprob: -11.640365600585938
    6. 'return' → logprob: -12.640365600585938
    7. 'str' → logprob: -13.640365600585938
    8. '   ' → logprob: -13.640365600585938
    9. '<bool' → logprob: -13.640365600585938
    10. 'True' → logprob: -14.640365600585938

Token 574: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.027915790677070618
    2. '       ' → logprob: -3.7779157161712646
    3. 'self' → logprob: -6.652915954589844
    4. '(' → logprob: -6.777915954589844
    5. ')' → logprob: -7.152915954589844
    6. '   ' → logprob: -7.527915954589844
    7. '->' → logprob: -8.402915954589844
    8. 'return' → logprob: -8.652915954589844
    9. ':' → logprob: -8.652915954589844
    10. '()' → logprob: -8.777915954589844

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00710155488923192
    2. 'return' → logprob: -5.382101535797119
    3. ' return' → logprob: -6.007101535797119
    4. '
' → logprob: -11.757102012634277
    5. '   ' → logprob: -12.757102012634277
    6. ':return' → logprob: -13.632102012634277
    7. '      ' → logprob: -14.007102012634277
    8. '{return' → logprob: -14.132102012634277
    9. 'filename' → logprob: -14.507102012634277
    10. ' ' → logprob: -14.757102012634277

Token 576: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015115276910364628
    2. ' return' → logprob: -6.501511573791504
    3. 'filename' → logprob: -12.626511573791504
    4. '   ' → logprob: -12.751511573791504
    5. '       ' → logprob: -13.376511573791504
    6. '
' → logprob: -13.626511573791504
    7. '{return' → logprob: -16.626510620117188
    8. ' filename' → logprob: -16.876510620117188
    9. '	return' → logprob: -16.876510620117188
    10. '```' → logprob: -17.376510620117188

Token 577: ' filename' (ID: 8246)
  Prédit: 'filename'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filename' → logprob: -0.0619683600962162
    2. ' filename' → logprob: -2.8119683265686035
    3. '(filename' → logprob: -14.686968803405762
    4. '	filename' → logprob: -15.311968803405762
    5. 'self' → logprob: -18.936967849731445
    6. '   ' → logprob: -20.311967849731445
    7. '.filename' → logprob: -21.561967849731445
    8. 'username' → logprob: -22.061967849731445
    9. '_filename' → logprob: -22.186967849731445
    10. 'fil' → logprob: -22.436967849731445

Token 578: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47656551003456116
    2. ' in' → logprob: -0.9765654802322388
    3. '.' → logprob: -7.101565361022949
    4. '<|end|>' → logprob: -7.101565361022949
    5. 'contains' → logprob: -8.60156536102295
    6. ')' → logprob: -8.60156536102295
    7. 'import' → logprob: -9.22656536102295
    8. ' ' → logprob: -9.35156536102295
    9. ' contains' → logprob: -9.85156536102295
    10. '   ' → logprob: -10.22656536102295

Token 579: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000553151941858232
    2. ' self' → logprob: -7.500553131103516
    3. '       ' → logprob: -16.250553131103516
    4. '   ' → logprob: -17.625553131103516
    5. '(self' → logprob: -17.750553131103516
    6. '[self' → logprob: -18.375553131103516
    7. '
' → logprob: -18.625553131103516
    8. '	self' → logprob: -18.750553131103516
    9. '```' → logprob: -19.500553131103516
    10. ' ' → logprob: -19.875553131103516

Token 580: '.files' (ID: 39697)
  Prédit: '.files'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.files' → logprob: -0.01320153009146452
    2. 'files' → logprob: -4.763201713562012
    3. 'self' → logprob: -5.388201713562012
    4. '	files' → logprob: -13.388201713562012
    5. '.self' → logprob: -13.888201713562012
    6. ' files' → logprob: -14.013201713562012
    7. '   ' → logprob: -14.138201713562012
    8. '(files' → logprob: -14.763201713562012
    9. ' self' → logprob: -14.888201713562012
    10. ' .' → logprob: -14.888201713562012

Token 581: '

' (ID: 279)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.3197331726551056
    2. '   ' → logprob: -1.3197331428527832
    3. '
' → logprob: -5.069733142852783
    4. '        
' → logprob: -9.444733619689941
    5. '<|end|>' → logprob: -9.944733619689941
    6. '  
' → logprob: -11.069733619689941
    7. '   
' → logprob: -11.944733619689941
    8. 'def' → logprob: -12.069733619689941
    9. '```' → logprob: -12.694733619689941
    10. '    
    
' → logprob: -13.069733619689941

Token 582: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007237526006065309
    2. '    
' → logprob: -7.875723838806152
    3. 'def' → logprob: -8.250723838806152
    4. 'class' → logprob: -10.125723838806152
    5. '
' → logprob: -10.375723838806152
    6. '    ' → logprob: -12.625723838806152
    7. '```' → logprob: -13.250723838806152
    8. '        
' → logprob: -13.750723838806152
    9. '  ' → logprob: -13.875723838806152
    10. '#' → logprob: -14.500723838806152

Token 583: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41167715191841125
    2. '
' → logprob: -1.9116771221160889
    3. 'def' (adapté à ' def') → logprob: -2.161677122116089
    4. '    
' → logprob: -2.661677122116089
    5. '<|end|>' → logprob: -6.161677360534668
    6. '    ' → logprob: -6.786677360534668
    7. '        
' → logprob: -7.786677360534668
    8. ' def' → logprob: -7.911677360534668
    9. '  ' → logprob: -9.286677360534668
    10. '

' → logprob: -9.536677360534668

Token 584: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.29021593928337097
    2. ' get' → logprob: -1.6652159690856934
    3. 'is' → logprob: -3.7902159690856934
    4. '__' → logprob: -4.040215969085693
    5. ' __' → logprob: -4.790215969085693
    6. 'def' → logprob: -5.665215969085693
    7. 'path' → logprob: -5.790215969085693
    8. ' is' → logprob: -5.790215969085693
    9. 'list' → logprob: -6.665215969085693
    10. '_get' → logprob: -7.040215969085693

Token 585: '_directory' (ID: 35850)
  Prédit: '_directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_directory' → logprob: -0.016855666413903236
    2. '_child' → logprob: -4.141855716705322
    3. 'directory' → logprob: -7.891855716705322
    4. '_children' → logprob: -9.266855239868164
    5. '_parent' → logprob: -9.516855239868164
    6. 'child' → logprob: -9.891855239868164
    7. '_direct' → logprob: -10.016855239868164
    8. '_' → logprob: -10.141855239868164
    9. '<|end|>' → logprob: -10.141855239868164
    10. '(directory' → logprob: -10.641855239868164

Token 586: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016006793593987823
    2. '(' → logprob: -6.501600742340088
    3. '(dirname' → logprob: -10.12660026550293
    4. 'self' → logprob: -10.87660026550293
    5. '(
' → logprob: -11.25160026550293
    6. '<|end|>' → logprob: -11.37660026550293
    7. '(name' → logprob: -12.00160026550293
    8. ' (' → logprob: -14.00160026550293
    9. '_name' → logprob: -14.12660026550293
    10. ')' → logprob: -14.50160026550293

Token 587: ',' (ID: 11)
  Prédit: '(dirname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dirname' → logprob: -0.3674742877483368
    2. '(' → logprob: -2.492474317550659
    3. ')' → logprob: -2.992474317550659
    4. ')(' → logprob: -3.117474317550659
    5. '(self' → logprob: -3.242474317550659
    6. ',' → logprob: -3.242474317550659
    7. '(directory' → logprob: -3.992474317550659
    8. '<|end|>' → logprob: -4.86747407913208
    9. '(name' → logprob: -4.99247407913208
    10. '(dir' → logprob: -4.99247407913208

Token 588: ' dirname' (ID: 77891)
  Prédit: 'dirname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirname' → logprob: -0.0019289902411401272
    2. ' dirname' → logprob: -6.251928806304932
    3. '(dirname' → logprob: -15.12692928314209
    4. 'dir' → logprob: -16.126928329467773
    5. '.dirname' → logprob: -18.001928329467773
    6. 'self' → logprob: -18.251928329467773
    7. ')' → logprob: -18.501928329467773
    8. 'name' → logprob: -19.876928329467773
    9. 'fname' → logprob: -20.251928329467773
    10. 'dbname' → logprob: -20.876928329467773

Token 589: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03073112666606903
    2. '')' → logprob: -3.530731201171875
    3. '):' → logprob: -8.530731201171875
    4. '<|end|>' → logprob: -8.530731201171875
    5. '):
' → logprob: -9.155731201171875
    6. ',' → logprob: -9.155731201171875
    7. '   ' → logprob: -10.030731201171875
    8. 'self' → logprob: -10.030731201171875
    9. '(self' → logprob: -10.405731201171875
    10. '',' → logprob: -10.405731201171875

Token 590: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.45340776443481445
    2. ')' → logprob: -1.8284077644348145
    3. 'Optional' → logprob: -2.4534077644348145
    4. ''' → logprob: -2.8284077644348145
    5. ' str' → logprob: -3.7034077644348145
    6. '<|end|>' → logprob: -4.2034077644348145
    7. ' Optional' → logprob: -5.2034077644348145
    8. ' '' → logprob: -5.4534077644348145
    9. ''s' → logprob: -6.0784077644348145
    10. '')' → logprob: -6.2034077644348145

Token 591: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035526775754988194
    2. '):' → logprob: -6.1285529136657715
    3. '):
' → logprob: -6.6285529136657715
    4. '')' → logprob: -10.128552436828613
    5. ' )' → logprob: -13.128552436828613
    6. '):
' → logprob: -13.753552436828613
    7. '")' → logprob: -15.003552436828613
    8. ')->' → logprob: -15.128552436828613
    9. ''):
' → logprob: -15.503552436828613
    10. ''):' → logprob: -15.503552436828613

Token 592: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.5598412156105042
    2. ' ->' → logprob: -1.3098411560058594
    3. ')' → logprob: -2.0598411560058594
    4. '       ' → logprob: -3.5598411560058594
    5. ':' → logprob: -6.559841156005859
    6. ')->' → logprob: -7.309841156005859
    7. '   ' → logprob: -7.434841156005859
    8. '):
' → logprob: -9.18484115600586
    9. ':
' → logprob: -9.43484115600586
    10. '()->' → logprob: -11.30984115600586

Token 593: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.2415488064289093
    2. ''' → logprob: -2.241548776626587
    3. ' Optional' → logprob: -2.241548776626587
    4. ' '' → logprob: -6.241549015045166
    5. ''s' → logprob: -10.741548538208008
    6. '(Optional' → logprob: -11.741548538208008
    7. 'self' → logprob: -11.866548538208008
    8. ''D' → logprob: -12.241548538208008
    9. 'optional' → logprob: -13.241548538208008
    10. ''S' → logprob: -13.491548538208008

Token 594: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.000432695698691532
    2. '[' → logprob: -7.75043249130249
    3. '[str' → logprob: -13.750432968139648
    4. '[['' → logprob: -14.750432968139648
    5. '[
' → logprob: -15.500432968139648
    6. '[`' → logprob: -15.875432968139648
    7. '["' → logprob: -16.50043296813965
    8. ' ['' → logprob: -17.12543296813965
    9. ''' → logprob: -17.87543296813965
    10. '('' → logprob: -18.00043296813965

Token 595: 'Directory' (ID: 13704)
  Prédit: 'Directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Directory' → logprob: -6.704273118884885e-07
    2. 'self' → logprob: -15.375000953674316
    3. ' Directory' → logprob: -16.125
    4. 'Directories' → logprob: -16.5
    5. 'directory' → logprob: -16.5
    6. 'Director' → logprob: -17.5
    7. 'Dictionary' → logprob: -18.5
    8. '`' → logprob: -18.625
    9. 'irectory' → logprob: -18.875
    10. '.Directory' → logprob: -18.875

Token 596: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.0009118211455643177
    2. 'Node' → logprob: -7.000911712646484
    3. '']' → logprob: -16.500911712646484
    4. 'Directory' → logprob: -16.875911712646484
    5. '']:
' → logprob: -17.250911712646484
    6. 'node' → logprob: -17.750911712646484
    7. ' Tree' → logprob: -17.875911712646484
    8. '	Tree' → logprob: -18.375911712646484
    9. '<Tree' → logprob: -18.500911712646484
    10. '
' → logprob: -18.625911712646484

Token 597: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -1.9361264946837764e-07
    2. 'node' → logprob: -16.0
    3. '']' → logprob: -17.75
    4. 'None' → logprob: -18.375
    5. '	Node' → logprob: -19.25
    6. '_node' → logprob: -19.5
    7. ']' → logprob: -19.625
    8. ' Node' → logprob: -19.625
    9. 'Tree' → logprob: -19.625
    10. '```' → logprob: -19.75

Token 598: '']:
' (ID: 44766)
  Prédit: '']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:' → logprob: -0.06890847533941269
    2. '']:
' → logprob: -2.943908452987671
    3. '']' → logprob: -4.44390869140625
    4. ']:' → logprob: -6.19390869140625
    5. '"]:' → logprob: -9.69390869140625
    6. ']' → logprob: -10.44390869140625
    7. ']:
' → logprob: -10.69390869140625
    8. ''):' → logprob: -11.31890869140625
    9. '):' → logprob: -12.44390869140625
    10. '':' → logprob: -13.06890869140625

Token 599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015467056073248386
    2. ' return' → logprob: -9.250154495239258
    3. 'return' → logprob: -9.875154495239258
    4. '        
' → logprob: -12.875154495239258
    5. '
' → logprob: -13.625154495239258
    6. ' 
' → logprob: -13.750154495239258
    7. '   ' → logprob: -13.875154495239258
    8. '      ' → logprob: -14.875154495239258
    9. '    
' → logprob: -15.875154495239258
    10. ',' → logprob: -16.125154495239258

Token 600: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033008165191859007
    2. '       ' → logprob: -5.753300666809082
    3. ' return' → logprob: -9.003300666809082
    4. 'if' → logprob: -16.3783016204834
    5. '   ' → logprob: -17.6283016204834
    6. '
' → logprob: -18.6283016204834
    7. '        
' → logprob: -19.1283016204834
    8. 'self' → logprob: -19.6283016204834
    9. '	return' → logprob: -19.7533016204834
    10. '```' → logprob: -20.0033016204834

Token 601: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020389800192788243
    2. ' self' → logprob: -8.500204086303711
    3. 'None' → logprob: -15.000204086303711
    4. '(self' → logprob: -18.50020408630371
    5. '	self' → logprob: -19.62520408630371
    6. '
' → logprob: -20.12520408630371
    7. '   ' → logprob: -20.87520408630371
    8. '[self' → logprob: -20.87520408630371
    9. ' None' → logprob: -21.50020408630371
    10. '```' → logprob: -22.12520408630371

Token 602: '.direct' (ID: 80570)
  Prédit: '.direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direct' → logprob: -1.2664456789934775e-06
    2. '.directory' → logprob: -13.875000953674316
    3. ' .' → logprob: -16.375001907348633
    4. 'directories' → logprob: -16.750001907348633
    5. '.' → logprob: -18.000001907348633
    6. 'DIRECT' → logprob: -18.375001907348633
    7. '.Direct' → logprob: -18.625001907348633
    8. '.dom' → logprob: -19.375001907348633
    9. 'direct' → logprob: -19.750001907348633
    10. '_DIRECT' → logprob: -20.000001907348633

Token 603: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -2.7848862373502925e-05
    2. 'ries' → logprob: -10.625027656555176
    3. 'ory' → logprob: -13.000027656555176
    4. 'ORIES' → logprob: -14.000027656555176
    5. 'or' → logprob: -15.625027656555176
    6. 't' → logprob: -16.000028610229492
    7. 'directories' → logprob: -17.250028610229492
    8. 'r' → logprob: -18.000028610229492
    9. 'aries' → logprob: -18.125028610229492
    10. '_' → logprob: -18.250028610229492

Token 604: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -9.968312951968983e-06
    2. '[' → logprob: -11.750009536743164
    3. 'get' → logprob: -13.250009536743164
    4. '.setdefault' → logprob: -16.125009536743164
    5. '.' → logprob: -16.375009536743164
    6. 'dirname' → logprob: -17.625009536743164
    7. ' .' → logprob: -18.375009536743164
    8. '#get' → logprob: -19.500009536743164
    9. '.dirname' → logprob: -19.750009536743164
    10. '   ' → logprob: -20.500009536743164

Token 605: '(dirname' (ID: 103890)
  Prédit: '(dirname'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dirname' → logprob: -1.676292231422849e-05
    2. '(dir' → logprob: -11.125017166137695
    3. 'dirname' → logprob: -13.250017166137695
    4. '(' → logprob: -15.875017166137695
    5. '(directory' → logprob: -17.125017166137695
    6. '(d' → logprob: -17.375017166137695
    7. '.dirname' → logprob: -17.375017166137695
    8. ' dirname' → logprob: -18.000017166137695
    9. '(dim' → logprob: -18.875017166137695
    10. '(di' → logprob: -19.875017166137695

Token 606: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029820729047060013
    2. ',' → logprob: -3.529820680618286
    3. '<|end|>' → logprob: -10.279820442199707
    4. ',None' → logprob: -10.779820442199707
    5. '')' → logprob: -12.654820442199707
    6. '<|end|>' → logprob: -12.654820442199707
    7. ')
' → logprob: -13.529820442199707
    8. ' ,' → logprob: -13.654820442199707
    9. '   ' → logprob: -14.029820442199707
    10. '(dirname' → logprob: -14.404820442199707

Token 607: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08066464960575104
    2. '
' → logprob: -2.95566463470459
    3. '    
' → logprob: -3.70566463470459
    4. 'def' → logprob: -8.20566463470459
    5. '```' → logprob: -8.20566463470459
    6. '        
' → logprob: -9.33066463470459
    7. '

' → logprob: -9.70566463470459
    8. 'class' → logprob: -10.08066463470459
    9. '<|end|>' → logprob: -10.45566463470459
    10. '  
' → logprob: -10.45566463470459

Token 608: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033783551305532455
    2. 'def' → logprob: -3.408783435821533
    3. 'class' → logprob: -9.283783912658691
    4. 'from' → logprob: -10.658783912658691
    5. '    
' → logprob: -11.908783912658691
    6. '```' → logprob: -12.408783912658691
    7. '<|end|>' → logprob: -12.408783912658691
    8. '<|end|>' → logprob: -13.408783912658691
    9. '
' → logprob: -13.533783912658691
    10. 'import' → logprob: -13.908783912658691

Token 609: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.935296834039036e-06
    2. ' def' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.50000286102295
    4. '```' → logprob: -16.625003814697266
    5. '    
' → logprob: -17.625003814697266
    6. '@property' → logprob: -17.750003814697266
    7. 'class' → logprob: -18.000003814697266
    8. '#' → logprob: -19.500003814697266
    9. '@' → logprob: -19.500003814697266
    10. 'de' → logprob: -20.125003814697266

Token 610: ' get' (ID: 717)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.8402236104011536
    2. 'list' → logprob: -1.2152235507965088
    3. 'get' → logprob: -1.5902235507965088
    4. '__' → logprob: -3.215223550796509
    5. 'is' → logprob: -4.090223789215088
    6. 'path' → logprob: -5.715223789215088
    7. '_list' → logprob: -6.465223789215088
    8. 'find' → logprob: -6.840223789215088
    9. 'parent' → logprob: -6.965223789215088
    10. 'def' → logprob: -7.090223789215088

Token 611: '_parent' (ID: 39570)
  Prédit: '_directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_directory' → logprob: -0.5781019330024719
    2. '_file' → logprob: -0.8281019330024719
    3. '_parent' → logprob: -7.328102111816406
    4. '_files' → logprob: -7.953102111816406
    5. 'directory' → logprob: -8.078102111816406
    6. '_filename' → logprob: -8.703102111816406
    7. 'file' → logprob: -8.703102111816406
    8. '_child' → logprob: -9.078102111816406
    9. '_path' → logprob: -9.703102111816406
    10. '_filepath' → logprob: -9.953102111816406

Token 612: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017565040616318583
    2. '<|end|>' → logprob: -9.250175476074219
    3. '(' → logprob: -10.375175476074219
    4. '()
' → logprob: -10.750175476074219
    5. '(self' → logprob: -12.250175476074219
    6. ')' → logprob: -12.250175476074219
    7. '())' → logprob: -12.375175476074219
    8. '(None' → logprob: -12.500175476074219
    9. ' ()' → logprob: -14.000175476074219
    10. '();' → logprob: -14.000175476074219

Token 613: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22851261496543884
    2. ')' → logprob: -1.6035126447677612
    3. '())' → logprob: -5.853512763977051
    4. '<|end|>' → logprob: -9.47851276397705
    5. '(' → logprob: -9.85351276397705
    6. '')' → logprob: -10.60351276397705
    7. '()
' → logprob: -11.10351276397705
    8. ' ())' → logprob: -11.60351276397705
    9. '(None' → logprob: -11.72851276397705
    10. ' )' → logprob: -12.35351276397705

Token 614: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04478248581290245
    2. '<|end|>' → logprob: -3.1697824001312256
    3. ')' → logprob: -6.669782638549805
    4. 'def' → logprob: -9.169782638549805
    5. '(' → logprob: -9.419782638549805
    6. '())' → logprob: -9.794782638549805
    7. ' ' → logprob: -9.794782638549805
    8. '<|end|>' → logprob: -10.044782638549805
    9. '()
' → logprob: -10.419782638549805
    10. '(self' → logprob: -10.919782638549805

Token 615: ' Optional' (ID: 19351)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0027204682119190693
    2. 'Optional' → logprob: -6.252720355987549
    3. ' self' → logprob: -7.252720355987549
    4. 'None' → logprob: -9.752720832824707
    5. ' Optional' → logprob: -10.627720832824707
    6. ''' → logprob: -14.752720832824707
    7. ' None' → logprob: -15.627720832824707
    8. ''s' → logprob: -16.00271987915039
    9. '(self' → logprob: -16.75271987915039
    10. '(Optional' → logprob: -16.87771987915039

Token 616: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.006375463679432869
    2. '[' → logprob: -5.131375312805176
    3. '[self' → logprob: -8.381375312805176
    4. '('' → logprob: -9.006375312805176
    5. '[
' → logprob: -10.131375312805176
    6. '<|end|>' → logprob: -10.631375312805176
    7. 'self' → logprob: -12.381375312805176
    8. ''' → logprob: -12.506375312805176
    9. '[`' → logprob: -12.631375312805176
    10. '[...]' → logprob: -13.131375312805176

Token 617: 'Directory' (ID: 13704)
  Prédit: 'Directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Directory' → logprob: -2.1008713702030946e-06
    2. 'directory' → logprob: -13.500001907348633
    3. ' Directory' → logprob: -14.500001907348633
    4. '_directory' → logprob: -16.375001907348633
    5. 'self' → logprob: -17.250001907348633
    6. '.Directory' → logprob: -17.375001907348633
    7. ''' → logprob: -18.000001907348633
    8. 'Directories' → logprob: -18.125001907348633
    9. '_DIRECTORY' → logprob: -18.375001907348633
    10. 'Director' → logprob: -18.500001907348633

Token 618: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -4.990154047845863e-05
    2. 'Node' → logprob: -10.750049591064453
    3. '['' → logprob: -11.000049591064453
    4. 'Directory' → logprob: -11.625049591064453
    5. '[' → logprob: -14.375049591064453
    6. 'tree' → logprob: -14.500049591064453
    7. '<Tree' → logprob: -15.000049591064453
    8. ' Tree' → logprob: -15.375049591064453
    9. 'directory' → logprob: -15.625049591064453
    10. 'node' → logprob: -15.750049591064453

Token 619: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -6.704273118884885e-07
    2. 'node' → logprob: -14.750000953674316
    3. '']' → logprob: -16.875
    4. 'None' → logprob: -17.375
    5. 'Tree' → logprob: -17.625
    6. 'NODE' → logprob: -18.25
    7. '_node' → logprob: -18.5
    8. '_NODE' → logprob: -18.625
    9. 'N' → logprob: -18.625
    10. '	Node' → logprob: -18.75

Token 620: '']:
' (ID: 44766)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7019719481468201
    2. '):' → logprob: -1.2019720077514648
    3. '()' → logprob: -1.7019720077514648
    4. ''):' → logprob: -4.201972007751465
    5. ')' → logprob: -6.201972007751465
    6. '):
' → logprob: -6.701972007751465
    7. '']:' → logprob: -6.826972007751465
    8. '():
' → logprob: -7.201972007751465
    9. ':' → logprob: -7.326972007751465
    10. ''):
' → logprob: -8.951972007751465

Token 621: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5917062759399414
    2. 'return' → logprob: -0.8417062759399414
    3. ' return' → logprob: -4.216706275939941
    4. '
' → logprob: -7.091706275939941
    5. '   ' → logprob: -10.341706275939941
    6. '	return' → logprob: -11.341706275939941
    7. '	' → logprob: -12.341706275939941
    8. '        
' → logprob: -12.466706275939941
    9. '{return' → logprob: -13.091706275939941
    10. '```' → logprob: -13.466706275939941

Token 622: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.652451464906335e-05
    2. ' return' → logprob: -11.500016212463379
    3. '       ' → logprob: -12.000016212463379
    4. 'self' → logprob: -16.625017166137695
    5. '
' → logprob: -17.000017166137695
    6. '   ' → logprob: -17.125017166137695
    7. '        
' → logprob: -19.250017166137695
    8. '	return' → logprob: -19.875017166137695
    9. '```' → logprob: -21.000017166137695
    10. '{return' → logprob: -21.250017166137695

Token 623: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.676292231422849e-05
    2. ' self' → logprob: -11.000017166137695
    3. '       ' → logprob: -19.375017166137695
    4. '	self' → logprob: -21.875017166137695
    5. '   ' → logprob: -22.625017166137695
    6. '(self' → logprob: -23.250017166137695
    7. 'None' → logprob: -25.000017166137695
    8. '
' → logprob: -25.125017166137695
    9. '[self' → logprob: -25.250017166137695
    10. ' ' → logprob: -25.750017166137695

Token 624: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.6240566083070007e-06
    2. 'parent' → logprob: -13.500001907348633
    3. '.' → logprob: -16.625001907348633
    4. '	parent' → logprob: -19.000001907348633
    5. ' parent' → logprob: -19.500001907348633
    6. ' .' → logprob: -20.500001907348633
    7. '[parent' → logprob: -21.000001907348633
    8. '.Parent' → logprob: -21.125001907348633
    9. '_parent' → logprob: -21.750001907348633
    10. '(parent' → logprob: -21.750001907348633

Token 625: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6277596950531006
    2. '    
' → logprob: -0.8777596950531006
    3. '
' → logprob: -3.0027596950531006
    4. '<|end|>' → logprob: -8.25275993347168
    5. '  
' → logprob: -8.75275993347168
    6. '   
' → logprob: -8.87775993347168
    7. '        
' → logprob: -8.87775993347168
    8. 'def' → logprob: -9.37775993347168
    9. '```' → logprob: -11.00275993347168
    10. ' 
' → logprob: -11.50275993347168

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013509237207472324
    2. 'class' → logprob: -5.263509273529053
    3. 'def' → logprob: -5.513509273529053
    4. '    
' → logprob: -5.888509273529053
    5. '
' → logprob: -6.638509273529053
    6. '    ' → logprob: -10.513508796691895
    7. '```' → logprob: -10.513508796691895
    8. '

' → logprob: -11.388508796691895
    9. '        
' → logprob: -11.513508796691895
    10. ' def' → logprob: -11.638508796691895

Token 627: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24279694259166718
    2. 'def' (adapté à ' def') → logprob: -1.7427968978881836
    3. '    
' → logprob: -3.2427968978881836
    4. ' def' → logprob: -7.492796897888184
    5. '
' → logprob: -7.742796897888184
    6. '        
' → logprob: -8.992796897888184
    7. '    ' → logprob: -9.242796897888184
    8. 'class' → logprob: -9.742796897888184
    9. '  
' → logprob: -9.992796897888184
    10. ' 
' → logprob: -10.492796897888184

Token 628: ' __' (ID: 2516)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.9388449192047119
    2. '__' → logprob: -1.188844919204712
    3. 'list' → logprob: -1.813844919204712
    4. 'is' → logprob: -2.563844919204712
    5. 'path' → logprob: -3.438844919204712
    6. ' __' → logprob: -4.188844680786133
    7. ' get' → logprob: -5.563844680786133
    8. ' list' → logprob: -5.688844680786133
    9. 'def' → logprob: -5.688844680786133
    10. 'remove' → logprob: -6.063844680786133

Token 629: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -4.320199877838604e-07
    2. 'str' → logprob: -15.25
    3. 'eq' → logprob: -16.0
    4. 'hash' → logprob: -17.875
    5. 'rep' → logprob: -19.375
    6. 'lt' → logprob: -19.75
    7. 'len' → logprob: -20.5
    8. ' repr' → logprob: -20.5
    9. '_repr' → logprob: -20.75
    10. 'bool' → logprob: -22.125

Token 630: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20143389701843262
    2. '(self' → logprob: -1.7014338970184326
    3. '__(
' → logprob: -11.201434135437012
    4. '__' → logprob: -12.701434135437012
    5. '(' → logprob: -13.326434135437012
    6. 'self' → logprob: -14.201434135437012
    7. '```' → logprob: -14.451434135437012
    8. '   ' → logprob: -15.201434135437012
    9. '       ' → logprob: -15.701434135437012
    10. '__('' → logprob: -15.951434135437012

Token 631: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018206601962447166
    2. 'f' → logprob: -4.018206596374512
    3. ')' → logprob: -10.268206596374512
    4. '       ' → logprob: -11.393206596374512
    5. ' self' → logprob: -12.018206596374512
    6. '   ' → logprob: -13.143206596374512
    7. '(self' → logprob: -13.393206596374512
    8. '           ' → logprob: -14.768206596374512
    9. ' f' → logprob: -14.893206596374512
    10. 'Self' → logprob: -16.018207550048828

Token 632: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011458378285169601
    2. '__' → logprob: -5.511458396911621
    3. '(self' → logprob: -5.511458396911621
    4. 'self' → logprob: -5.886458396911621
    5. '__(
' → logprob: -7.761458396911621
    6. '__('' → logprob: -10.386458396911621
    7. '__)' → logprob: -10.886458396911621
    8. ')(' → logprob: -11.011458396911621
    9. '__((' → logprob: -11.386458396911621
    10. '__("' → logprob: -11.761458396911621

Token 633: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22388926148414612
    2. 'self' → logprob: -2.2238893508911133
    3. 'f' → logprob: -2.8488893508911133
    4. '   ' → logprob: -4.348889350891113
    5. ' f' → logprob: -4.848889350891113
    6. '(self' → logprob: -5.098889350891113
    7. ' self' → logprob: -5.598889350891113
    8. 'def' → logprob: -5.723889350891113
    9. 'return' → logprob: -8.473889350891113
    10. '(f' → logprob: -8.723889350891113

Token 634: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010767534375190735
    2. 'f' → logprob: -4.760767459869385
    3. ' return' → logprob: -6.260767459869385
    4. '       ' → logprob: -8.510767936706543
    5. ' f' → logprob: -10.260767936706543
    6. '   ' → logprob: -12.385767936706543
    7. '           ' → logprob: -15.385767936706543
    8. '	return' → logprob: -16.510766983032227
    9. '
' → logprob: -17.635766983032227
    10. '```' → logprob: -18.010766983032227

Token 635: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00317783304490149
    2. ' f' → logprob: -5.753177642822266
    3. 'repr' → logprob: -16.003177642822266
    4. '	f' → logprob: -18.378177642822266
    5. '(f' → logprob: -18.753177642822266
    6. ' repr' → logprob: -20.378177642822266
    7. '   ' → logprob: -20.628177642822266
    8. ' ' → logprob: -21.128177642822266
    9. '
' → logprob: -21.503177642822266
    10. '"' → logprob: -21.503177642822266

Token 636: '"' (ID: 1)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23250961303710938
    2. '(f' → logprob: -2.2325096130371094
    3. 'f' → logprob: -2.3575096130371094
    4. 'Directory' → logprob: -5.482509613037109
    5. '"' → logprob: -7.357509613037109
    6. ' f' → logprob: -8.35750961303711
    7. '<' → logprob: -8.48250961303711
    8. 'Dir' → logprob: -9.35750961303711
    9. '"(' → logprob: -10.10750961303711
    10. '(<' → logprob: -10.60750961303711

Token 637: 'Dir' (ID: 8295)
  Prédit: 'Directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Directory' → logprob: -0.005361109972000122
    2. 'f' → logprob: -5.255361080169678
    3. '"' → logprob: -9.130361557006836
    4. ''D' → logprob: -12.255361557006836
    5. 'directory' → logprob: -12.380361557006836
    6. 'Dir' → logprob: -12.755361557006836
    7. ' Directory' → logprob: -13.130361557006836
    8. ''' → logprob: -14.130361557006836
    9. '.Directory' → logprob: -14.255361557006836
    10. '_directory' → logprob: -14.505361557006836

Token 638: '({' (ID: 3972)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.001572471926920116
    2. 'ection' → logprob: -7.001572608947754
    3. 'Node' → logprob: -8.126572608947754
    4. 'ective' → logprob: -8.876572608947754
    5. 'ector' → logprob: -9.501572608947754
    6. 'Tree' → logprob: -10.251572608947754
    7. 'ecture' → logprob: -10.376572608947754
    8. '(' → logprob: -10.876572608947754
    9. 'ectomy' → logprob: -11.501572608947754
    10. '('' → logprob: -11.876572608947754

Token 639: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.8590300139039755e-05
    2. 'repr' → logprob: -10.250048637390137
    3. '{' → logprob: -11.375048637390137
    4. ''{' → logprob: -14.000048637390137
    5. ' self' → logprob: -14.125048637390137
    6. ''' → logprob: -16.50004768371582
    7. '(self' → logprob: -17.87504768371582
    8. ''s' → logprob: -18.87504768371582
    9. '	self' → logprob: -19.00004768371582
    10. '$self' → logprob: -19.25004768371582

Token 640: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.555528998374939
    2. 'self' → logprob: -1.430528998374939
    3. 'name' → logprob: -1.680528998374939
    4. ''name' → logprob: -8.05552864074707
    5. 'repr' → logprob: -9.30552864074707
    6. ' self' → logprob: -9.68052864074707
    7. '.' → logprob: -10.05552864074707
    8. '{name' → logprob: -10.05552864074707
    9. ' name' → logprob: -10.55552864074707
    10. 'elf' → logprob: -10.55552864074707

Token 641: '},' (ID: 4180)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012023169983876869
    2. ')"' → logprob: -9.500120162963867
    3. ')")' → logprob: -10.625120162963867
    4. '")' → logprob: -11.625120162963867
    5. ')">' → logprob: -11.625120162963867
    6. ')`' → logprob: -13.750120162963867
    7. '')' → logprob: -14.000120162963867
    8. ')'' → logprob: -14.625120162963867
    9. ',' → logprob: -15.625120162963867
    10. '})' → logprob: -15.875120162963867

Token 642: ' dirs' (ID: 99999)
  Prédit: 'dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -0.34935158491134644
    2. ' dirs' → logprob: -1.2243516445159912
    3. ' directories' → logprob: -8.34935188293457
    4. '{' → logprob: -8.59935188293457
    5. 'directories' → logprob: -8.84935188293457
    6. 'children' → logprob: -9.09935188293457
    7. '_dirs' → logprob: -10.09935188293457
    8. ' children' → logprob: -10.22435188293457
    9. 'parent' → logprob: -10.34935188293457
    10. 'Dirs' → logprob: -10.59935188293457

Token 643: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.4299648106098175
    2. '=' → logprob: -1.1799647808074951
    3. '=list' → logprob: -4.179965019226074
    4. '={'' → logprob: -4.679965019226074
    5. '=self' → logprob: -5.054965019226074
    6. '=dict' → logprob: -5.429965019226074
    7. '={},' → logprob: -6.179965019226074
    8. '={}' → logprob: -6.179965019226074
    9. '={"' → logprob: -6.804965019226074
    10. '=set' → logprob: -8.054965019226074

Token 644: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07892856746912003
    2. 'len' → logprob: -2.5789284706115723
    3. 'set' → logprob: -10.57892894744873
    4. 'self' → logprob: -11.82892894744873
    5. '{' → logprob: -12.20392894744873
    6. ' list' → logprob: -14.45392894744873
    7. '[len' → logprob: -15.45392894744873
    8. '[list' → logprob: -15.82892894744873
    9. 'repr' → logprob: -15.95392894744873
    10. 'sorted' → logprob: -16.578927993774414

Token 645: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.991464786347933e-05
    2. 'self' → logprob: -9.750060081481934
    3. '(' → logprob: -13.750060081481934
    4. '(sorted' → logprob: -14.500060081481934
    5. 'sorted' → logprob: -17.750059127807617
    6. '(
' → logprob: -17.750059127807617
    7. '[self' → logprob: -18.000059127807617
    8. ')' → logprob: -20.250059127807617
    9. ' self' → logprob: -20.375059127807617
    10. '(list' → logprob: -20.625059127807617

Token 646: '.direct' (ID: 80570)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003606104583013803
    2. 'self' → logprob: -8.000360488891602
    3. '(' → logprob: -11.000360488891602
    4. ')' → logprob: -12.000360488891602
    5. '(
' → logprob: -15.000360488891602
    6. 'directories' → logprob: -15.125360488891602
    7. '```' → logprob: -15.125360488891602
    8. '[self' → logprob: -15.500360488891602
    9. ',' → logprob: -15.750360488891602
    10. ',self' → logprob: -16.0003604888916

Token 647: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -4.251091377227567e-05
    2. 'ORIES' → logprob: -10.375042915344238
    3. 'ory' → logprob: -12.625042915344238
    4. 'or' → logprob: -13.125042915344238
    5. '(self' → logprob: -13.500042915344238
    6. 'itories' → logprob: -14.250042915344238
    7. 'self' → logprob: -14.375042915344238
    8. ')' → logprob: -14.750042915344238
    9. '[self' → logprob: -14.750042915344238
    10. 'orie' → logprob: -14.875042915344238

Token 648: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.01492386870086193
    2. '.values' → logprob: -4.264924049377441
    3. ')' → logprob: -7.264924049377441
    4. ')}' → logprob: -10.764924049377441
    5. ')},' → logprob: -10.764924049377441
    6. '.' → logprob: -11.139924049377441
    7. ')}}' → logprob: -13.514924049377441
    8. 'keys' → logprob: -13.514924049377441
    9. '.key' → logprob: -15.514924049377441
    10. ' .' → logprob: -15.639924049377441

Token 649: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0008584582828916609
    2. ')' → logprob: -7.500858306884766
    3. '()' → logprob: -8.375858306884766
    4. '()),' → logprob: -10.125858306884766
    5. ')},' → logprob: -10.875858306884766
    6. '()},' → logprob: -11.375858306884766
    7. ')}' → logprob: -13.250858306884766
    8. '(),' → logprob: -14.375858306884766
    9. '()))' → logprob: -14.375858306884766
    10. '})' → logprob: -15.000858306884766

Token 650: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003213960910215974
    2. ')' → logprob: -5.753213882446289
    3. ' ,' → logprob: -10.753213882446289
    4. ',
' → logprob: -12.753213882446289
    5. ')">' → logprob: -13.003213882446289
    6. '}' → logprob: -13.253213882446289
    7. ')}' → logprob: -13.503213882446289
    8. '")' → logprob: -13.878213882446289
    9. '<|end|>' → logprob: -14.003213882446289
    10. '   ' → logprob: -14.378213882446289

Token 651: ' files' (ID: 6291)
  Prédit: ' files'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' files' → logprob: -0.10020849853754044
    2. 'files' → logprob: -2.3502085208892822
    3. 'f' → logprob: -14.475208282470703
    4. '	files' → logprob: -14.725208282470703
    5. 'fil' → logprob: -15.225208282470703
    6. 'file' → logprob: -15.975208282470703
    7. '(files' → logprob: -16.225208282470703
    8. '_files' → logprob: -16.600208282470703
    9. 'fs' → logprob: -16.725208282470703
    10. ' f' → logprob: -16.725208282470703

Token 652: '={' (ID: 1693)
  Prédit: '=list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=list' → logprob: -0.00018625585653353482
    2. '=' → logprob: -8.8751859664917
    3. '={' → logprob: -10.7501859664917
    4. '=set' → logprob: -11.6251859664917
    5. '(list' → logprob: -11.8751859664917
    6. 'list' → logprob: -13.1251859664917
    7. '=f' → logprob: -13.3751859664917
    8. '={'' → logprob: -13.7501859664917
    9. '=}' → logprob: -14.1251859664917
    10. '=len' → logprob: -14.2501859664917

Token 653: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.896309739408025e-07
    2. ' list' → logprob: -14.250000953674316
    3. '[list' → logprob: -16.25
    4. 'sorted' → logprob: -18.875
    5. '(list' → logprob: -19.375
    6. '=list' → logprob: -19.625
    7. 'self' → logprob: -20.625
    8. '	list' → logprob: -21.375
    9. ',list' → logprob: -23.0
    10. '[' → logprob: -23.125

Token 654: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9361264946837764e-07
    2. 'self' → logprob: -16.75
    3. '(' → logprob: -18.25
    4. '(sorted' → logprob: -19.0
    5. '(
' → logprob: -20.625
    6. '```' → logprob: -21.75
    7. '(this' → logprob: -22.375
    8. '(set' → logprob: -22.875
    9. '[self' → logprob: -23.0
    10. '({' → logprob: -23.375

Token 655: '.files' (ID: 39697)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20151254534721375
    2. '(self' → logprob: -1.7015125751495361
    3. 'files' → logprob: -9.701512336730957
    4. '.files' → logprob: -11.076512336730957
    5. '[self' → logprob: -11.951512336730957
    6. ' self' → logprob: -12.951512336730957
    7. '```' → logprob: -13.076512336730957
    8. ')}' → logprob: -13.201512336730957
    9. '
' → logprob: -13.201512336730957
    10. '	self' → logprob: -13.326512336730957

Token 656: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006708591827191412
    2. '})' → logprob: -7.375670909881592
    3. ')}' → logprob: -10.625670433044434
    4. '())' → logprob: -11.375670433044434
    5. '()' → logprob: -11.875670433044434
    6. '))' → logprob: -14.375670433044434
    7. '}))' → logprob: -14.625670433044434
    8. ' )' → logprob: -15.750670433044434
    9. ')])' → logprob: -15.875670433044434
    10. ')}}' → logprob: -16.00067138671875

Token 657: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.030234983190894127
    2. ')' → logprob: -3.5302350521087646
    3. '))' → logprob: -8.655235290527344
    4. ')"' → logprob: -8.780235290527344
    5. ')}' → logprob: -9.155235290527344
    6. ')")' → logprob: -10.780235290527344
    7. '])' → logprob: -11.655235290527344
    8. '()' → logprob: -12.155235290527344
    9. ' })' → logprob: -12.405235290527344
    10. '}")' → logprob: -12.655235290527344

Token 658: '"

' (ID: 2678)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5634729266166687
    2. '   ' → logprob: -0.9384729266166687
    3. '    
' → logprob: -3.4384729862213135
    4. 'class' → logprob: -5.188472747802734
    5. '

' → logprob: -6.938472747802734
    6. 'def' → logprob: -7.813472747802734
    7. '    ' → logprob: -8.813472747802734
    8. '
    
' → logprob: -9.438472747802734
    9. '\n' → logprob: -9.813472747802734
    10. '        
' → logprob: -9.938472747802734

Token 659: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.37656205892562866
    2. '   ' → logprob: -1.6265621185302734
    3. 'def' → logprob: -2.2515621185302734
    4. '    
' → logprob: -4.876562118530273
    5. '
' → logprob: -5.876562118530273
    6. ' def' → logprob: -7.376562118530273
    7. '    ' → logprob: -8.251562118530273
    8. ' class' → logprob: -8.626562118530273
    9. ' 
' → logprob: -9.501562118530273
    10. '\n' → logprob: -9.751562118530273

Token 660: ' File' (ID: 5262)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.6197971701622009
    2. 'File' → logprob: -0.9947971701622009
    3. 'Filesystem' → logprob: -3.1197972297668457
    4. 'Virtual' → logprob: -3.8697972297668457
    5. 'Directory' → logprob: -4.369797229766846
    6. ' File' → logprob: -5.619797229766846
    7. ' Path' → logprob: -5.744797229766846
    8. 'Absolute' → logprob: -6.494797229766846
    9. 'Normalized' → logprob: -6.619797229766846
    10. 'Resolved' → logprob: -7.494797229766846

Token 661: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.18201178312301636
    2. 'Path' → logprob: -1.8070118427276611
    3. 'path' → logprob: -7.182011604309082
    4. 'Name' → logprob: -7.307011604309082
    5. 'Entry' → logprob: -8.182011604309082
    6. 'Node' → logprob: -8.557011604309082
    7. 'system' → logprob: -8.932011604309082
    8. ':' → logprob: -10.057011604309082
    9. 'Tree' → logprob: -10.307011604309082
    10. ':
' → logprob: -10.432011604309082

Token 662: 'Model' (ID: 2239)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025466508232057095
    2. ':
' → logprob: -6.002546787261963
    3. '(' → logprob: -9.752546310424805
    4. '):' → logprob: -12.127546310424805
    5. '(object' → logprob: -13.127546310424805
    6. '(Tree' → logprob: -13.877546310424805
    7. '```' → logprob: -14.377546310424805
    8. ':

' → logprob: -14.502546310424805
    9. ':System' → logprob: -15.002546310424805
    10. ':def' → logprob: -15.127546310424805

Token 663: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018209880217909813
    2. ':
' → logprob: -4.018209934234619
    3. '(' → logprob: -10.143209457397461
    4. '(File' → logprob: -12.018209457397461
    5. '):' → logprob: -12.393209457397461
    6. ':def' → logprob: -13.018209457397461
    7. '   ' → logprob: -13.268209457397461
    8. '(
' → logprob: -13.768209457397461
    9. '(Path' → logprob: -14.018209457397461
    10. '):
' → logprob: -14.143209457397461

Token 664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018804390856530517
    2. ':' → logprob: -9.500187873840332
    3. ':
' → logprob: -9.875187873840332
    4. '    
' → logprob: -11.125187873840332
    5. 'def' → logprob: -11.250187873840332
    6. '(' → logprob: -12.125187873840332
    7. '	def' → logprob: -12.125187873840332
    8. ' def' → logprob: -12.625187873840332
    9. '
' → logprob: -12.750187873840332
    10. '<|end|>' → logprob: -12.875187873840332

Token 665: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.637786231702194e-05
    2. ' def' → logprob: -10.000086784362793
    3. 'def' → logprob: -10.750086784362793
    4. '
' → logprob: -11.500086784362793
    5. '    
' → logprob: -12.375086784362793
    6. 'class' → logprob: -13.125086784362793
    7. '__' → logprob: -14.000086784362793
    8. '	def' → logprob: -14.000086784362793
    9. ':
' → logprob: -14.750086784362793
    10. ' __' → logprob: -15.375086784362793

Token 666: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4389984607696533
    2. '__' → logprob: -1.5639984607696533
    3. '   ' → logprob: -2.1889984607696533
    4. 'slots' → logprob: -3.5639984607696533
    5. '_slots' → logprob: -5.563998222351074
    6. '"""
' → logprob: -7.688998222351074
    7. 'def' → logprob: -7.938998222351074
    8. '  ' → logprob: -8.938998222351074
    9. 'object' → logprob: -8.938998222351074
    10. '
' → logprob: -9.188998222351074

Token 667: ' Models' (ID: 50258)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5017319321632385
    2. 'def' → logprob: -1.7517318725585938
    3. '   ' → logprob: -2.1267318725585938
    4. ' def' → logprob: -2.5017318725585938
    5. '__' → logprob: -4.501731872558594
    6. '"""
' → logprob: -5.876731872558594
    7. ' """
' → logprob: -5.876731872558594
    8. ' class' → logprob: -6.626731872558594
    9. '
' → logprob: -7.001731872558594
    10. ' __' → logprob: -8.001731872558594

Token 668: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.16192127764225006
    2. 'a' → logprob: -1.9119212627410889
    3. ' the' → logprob: -6.786921501159668
    4. ' an' → logprob: -8.161921501159668
    5. 'the' → logprob: -8.286921501159668
    6. 'an' → logprob: -10.536921501159668
    7. 'A' → logprob: -13.911921501159668
    8. 'filesystem' → logprob: -14.536921501159668
    9. 'import' → logprob: -15.536921501159668
    10. 'file' → logprob: -15.661921501159668

Token 669: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.5507009029388428
    2. 'filesystem' → logprob: -1.1757009029388428
    3. ' file' → logprob: -2.3007009029388428
    4. 'ent' → logprob: -5.175701141357422
    5. ' entire' → logprob: -6.050701141357422
    6. ' filesystem' → logprob: -6.300701141357422
    7. 'directory' → logprob: -6.550701141357422
    8. 'whole' → logprob: -6.925701141357422
    9. 'root' → logprob: -7.925701141357422
    10. 'in' → logprob: -8.300701141357422

Token 670: ' system' (ID: 2420)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'system' → logprob: -0.07891622185707092
    2. ' system' → logprob: -2.578916311264038
    3. 'ystem' → logprob: -11.078916549682617
    4. 'System' → logprob: -11.953916549682617
    5. '-system' → logprob: -13.078916549682617
    6. '_system' → logprob: -13.203916549682617
    7. 'path' → logprob: -15.578916549682617
    8. '   ' → logprob: -15.953916549682617
    9. 'ssystem' → logprob: -16.578916549682617
    10. 'SYSTEM' → logprob: -16.703916549682617

Token 671: ' from' (ID: 591)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7525129914283752
    2. ':
' → logprob: -1.3775129318237305
    3. '   ' → logprob: -2.5025129318237305
    4. ' class' → logprob: -3.2525129318237305
    5. ' structure' → logprob: -3.2525129318237305
    6. ' as' → logprob: -3.3775129318237305
    7. '
' → logprob: -3.8775129318237305
    8. 'root' → logprob: -4.8775129318237305
    9. '"""
' → logprob: -4.8775129318237305
    10. ' for' → logprob: -5.1275129318237305

Token 672: ' input' (ID: 3422)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1870089769363403
    2. 'a' → logprob: -1.3120089769363403
    3. 'root' → logprob: -1.8120089769363403
    4. 'scratch' → logprob: -2.937008857727051
    5. ' the' → logprob: -3.062008857727051
    6. 'an' → logprob: -3.312008857727051
    7. ' a' → logprob: -3.687008857727051
    8. ' given' → logprob: -3.812008857727051
    9. 'given' → logprob: -4.187008857727051
    10. ' an' → logprob: -4.187008857727051

Token 673: ' paths' (ID: 23373)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.9715341925621033
    2. 'data' → logprob: -1.971534252166748
    3. ' data' → logprob: -2.346534252166748
    4. '.' → logprob: -2.846534252166748
    5. 'paths' → logprob: -2.846534252166748
    6. ' paths' → logprob: -3.221534252166748
    7. '"""
' → logprob: -3.346534252166748
    8. '.
' → logprob: -3.846534252166748
    9. ' structure' → logprob: -3.846534252166748
    10. 'lines' → logprob: -3.846534252166748

Token 674: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09116076678037643
    2. ':
' → logprob: -3.591160774230957
    3. '
' → logprob: -3.966160774230957
    4. ':' → logprob: -4.216160774230957
    5. '.' → logprob: -4.466160774230957
    6. '.
' → logprob: -5.091160774230957
    7. ' and' → logprob: -5.591160774230957
    8. ',' → logprob: -5.716160774230957
    9. ' with' → logprob: -8.216160774230957
    10. 'and' → logprob: -8.466160774230957

Token 675: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001106755924411118
    2. 'class' → logprob: -7.1261067390441895
    3. '
' → logprob: -8.251107215881348
    4. '    
' → logprob: -10.876107215881348
    5. '```' → logprob: -11.751107215881348
    6. ' class' → logprob: -12.376107215881348
    7. 'def' → logprob: -12.501107215881348
    8. ' ' → logprob: -13.251107215881348
    9. ' def' → logprob: -13.626107215881348
    10. '    ' → logprob: -13.751107215881348

Token 676: ' Supports' (ID: 108569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04169302433729172
    2. ' def' → logprob: -3.5416929721832275
    3. '
' → logprob: -4.541693210601807
    4. 'def' → logprob: -7.041693210601807
    5. '    
' → logprob: -8.416692733764648
    6. '	def' → logprob: -9.791692733764648
    7. 'class' → logprob: -10.166692733764648
    8. ' ' → logprob: -12.166692733764648
    9. '    ' → logprob: -12.541692733764648
    10. ' class' → logprob: -12.666692733764648

Token 677: ' lookup' (ID: 37342)
  Prédit: 'adding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adding' → logprob: -0.6569808721542358
    2. ' adding' → logprob: -1.7819808721542358
    3. 'building' → logprob: -2.2819809913635254
    4. 'path' → logprob: -2.6569809913635254
    5. ' building' → logprob: -2.7819809913635254
    6. 'normal' → logprob: -3.4069809913635254
    7. ' normalization' → logprob: -4.156980991363525
    8. 'paths' → logprob: -5.656980991363525
    9. 'checking' → logprob: -5.656980991363525
    10. 'addition' → logprob: -5.656980991363525

Token 678: ' of' (ID: 328)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8441514372825623
    2. ',' → logprob: -1.094151496887207
    3. 'and' → logprob: -2.219151496887207
    4. '.' → logprob: -2.844151496887207
    5. '(' → logprob: -3.469151496887207
    6. '(
' → logprob: -4.469151496887207
    7. ' of' → logprob: -5.219151496887207
    8. ' for' → logprob: -5.719151496887207
    9. '<|end|>' → logprob: -5.844151496887207
    10. ',
' → logprob: -5.969151496887207

Token 679: ' directories' (ID: 58917)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -1.0187562704086304
    2. ' paths' → logprob: -1.1437562704086304
    3. ' normalized' → logprob: -2.64375638961792
    4. ' normalization' → logprob: -2.76875638961792
    5. 'normalized' → logprob: -2.76875638961792
    6. 'path' → logprob: -2.89375638961792
    7. ' files' → logprob: -4.14375638961792
    8. ' path' → logprob: -4.39375638961792
    9. 'normal' → logprob: -5.14375638961792
    10. ' normal' → logprob: -5.14375638961792

Token 680: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5291637182235718
    2. ' and' → logprob: -1.0291637182235718
    3. ',' → logprob: -3.4041638374328613
    4. '   ' → logprob: -3.9041638374328613
    5. '.' → logprob: -9.404163360595703
    6. '<|end|>' → logprob: -10.529163360595703
    7. ',
' → logprob: -10.779163360595703
    8. '
' → logprob: -11.029163360595703
    9. 'import' → logprob: -11.529163360595703
    10. 'def' → logprob: -11.654163360595703

Token 681: ' files' (ID: 6291)
  Prédit: 'files'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'files' → logprob: -0.06451907753944397
    2. ' files' → logprob: -2.814519166946411
    3. 'file' → logprob: -6.439518928527832
    4. 'paths' → logprob: -7.314518928527832
    5. 'path' → logprob: -9.564518928527832
    6. ' file' → logprob: -10.314518928527832
    7. 'normal' → logprob: -10.314518928527832
    8. 'fil' → logprob: -10.689518928527832
    9. 'resolution' → logprob: -10.814518928527832
    10. 'exists' → logprob: -11.439518928527832

Token 682: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47946929931640625
    2. ',' → logprob: -1.2294692993164062
    3. '.' → logprob: -3.1044692993164062
    4. ' and' → logprob: -3.3544692993164062
    5. 'and' → logprob: -5.229469299316406
    6. ',
' → logprob: -6.229469299316406
    7. '.
' → logprob: -7.729469299316406
    8. '    
' → logprob: -8.104469299316406
    9. ' with' → logprob: -8.729469299316406
    10. '
' → logprob: -8.854469299316406

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024393859785050154
    2. '
' → logprob: -6.252439498901367
    3. '    
' → logprob: -7.627439498901367
    4. '```' → logprob: -11.377439498901367
    5. 'class' → logprob: -12.002439498901367
    6. '<|end|>' → logprob: -13.752439498901367
    7. '        
' → logprob: -14.252439498901367
    8. 'def' → logprob: -14.377439498901367
    9. ')' → logprob: -14.377439498901367
    10. ':' → logprob: -15.002439498901367

Token 684: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01311928778886795
    2. '
' → logprob: -5.138119220733643
    3. 'class' → logprob: -5.388119220733643
    4. 'def' → logprob: -6.763119220733643
    5. '    
' → logprob: -7.013119220733643
    6. '"""
' (adapté à ' """
') → logprob: -8.3881196975708
    7. ' def' → logprob: -8.8881196975708
    8. '```' → logprob: -9.3881196975708
    9. ' class' → logprob: -11.0131196975708
    10. ')' → logprob: -11.0131196975708

Token 685: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019829542725346982
    2. 'def' → logprob: -9.500198364257812
    3. '    
' → logprob: -9.750198364257812
    4. '
' → logprob: -10.500198364257812
    5. '	def' → logprob: -11.250198364257812
    6. 'class' → logprob: -11.500198364257812
    7. '__' → logprob: -12.375198364257812
    8. ' def' → logprob: -12.375198364257812
    9. '```' → logprob: -12.875198364257812
    10. '  ' → logprob: -14.375198364257812

Token 686: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8759644031524658
    2. '   ' → logprob: -1.2509644031524658
    3. 'def' (adapté à ' def') → logprob: -1.5009644031524658
    4. '__' → logprob: -2.875964403152466
    5. ' __' → logprob: -4.500964164733887
    6. 'class' → logprob: -5.000964164733887
    7. '```' → logprob: -9.125964164733887
    8. '
' → logprob: -10.000964164733887
    9. '	def' → logprob: -11.500964164733887
    10. ' class' → logprob: -11.500964164733887

Token 687: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.039007652550935745
    2. 'init' → logprob: -3.5390076637268066
    3. ' __' → logprob: -5.039007663726807
    4. '_init' → logprob: -5.914007663726807
    5. ' init' → logprob: -11.289007186889648
    6. '___' → logprob: -11.289007186889648
    7. '**' → logprob: -13.289007186889648
    8. '_' → logprob: -13.539007186889648
    9. '```' → logprob: -13.914007186889648
    10. '
' → logprob: -14.039007186889648

Token 688: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.20142242312431335
    2. 'slots' → logprob: -1.7014224529266357
    3. 'slot' → logprob: -12.451422691345215
    4. 'sl' → logprob: -13.076422691345215
    5. '_slots' → logprob: -13.701422691345215
    6. '_init' → logprob: -14.576422691345215
    7. '__' → logprob: -15.576422691345215
    8. 'tokens' → logprob: -15.701422691345215
    9. ' slots' → logprob: -16.0764217376709
    10. ' init' → logprob: -16.3264217376709

Token 689: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0004475924652069807
    2. '__' → logprob: -7.750447750091553
    3. '__(
' → logprob: -11.000447273254395
    4. '__((' → logprob: -15.875447273254395
    5. '_(' → logprob: -17.50044822692871
    6. '__('' → logprob: -17.50044822692871
    7. '__("' → logprob: -18.00044822692871
    8. '(self' → logprob: -18.12544822692871
    9. '___' → logprob: -19.12544822692871
    10. '_' → logprob: -19.37544822692871

Token 690: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.896309739408025e-07
    2. '):
' → logprob: -14.625000953674316
    3. ' self' → logprob: -15.750000953674316
    4. ')' → logprob: -16.125
    5. '(self' → logprob: -17.5
    6. '
' → logprob: -17.5
    7. ')(' → logprob: -18.5
    8. '	self' → logprob: -19.5
    9. '```' → logprob: -19.625
    10. 'root' → logprob: -20.25

Token 691: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.37399375438690186
    2. '):
' → logprob: -1.2489937543869019
    3. '(self' → logprob: -3.9989938735961914
    4. ',' → logprob: -5.498993873596191
    5. '):' → logprob: -6.623993873596191
    6. '__(' → logprob: -6.873993873596191
    7. ')' → logprob: -9.373993873596191
    8. ' (' → logprob: -9.623993873596191
    9. ' self' → logprob: -9.623993873596191
    10. ')(' → logprob: -9.748993873596191

Token 692: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018530222587287426
    2. '       ' → logprob: -9.250185012817383
    3. ' self' → logprob: -9.500185012817383
    4. '   ' → logprob: -11.250185012817383
    5. 'root' → logprob: -13.875185012817383
    6. '
' → logprob: -15.750185012817383
    7. '(self' → logprob: -15.875185012817383
    8. '```' → logprob: -17.250185012817383
    9. '):
' → logprob: -17.625185012817383
    10. '	self' → logprob: -17.875185012817383

Token 693: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.9040898880339228e-05
    2. '       ' → logprob: -10.500028610229492
    3. ' self' → logprob: -13.500028610229492
    4. 'root' → logprob: -16.750028610229492
    5. '   ' → logprob: -19.750028610229492
    6. '	self' → logprob: -19.875028610229492
    7. '(self' → logprob: -20.000028610229492
    8. '[self' → logprob: -23.375028610229492
    9. '#' → logprob: -23.875028610229492
    10. '        
' → logprob: -24.375028610229492

Token 694: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0007480407948605716
    2. 'root' → logprob: -7.250748157501221
    3. '_root' → logprob: -11.250747680664062
    4. '._' → logprob: -11.250747680664062
    5. ' root' → logprob: -13.375747680664062
    6. '	root' → logprob: -13.375747680664062
    7. '.ro' → logprob: -13.500747680664062
    8. '.' → logprob: -13.500747680664062
    9. '   ' → logprob: -13.750747680664062
    10. 'Root' → logprob: -13.750747680664062

Token 695: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519303858280182
    2. '=' → logprob: -1.5019303560256958
    3. ':' → logprob: -13.626930236816406
    4. '   ' → logprob: -17.001930236816406
    5. ' ' → logprob: -17.126930236816406
    6. '	' → logprob: -19.001930236816406
    7. '  ' → logprob: -20.001930236816406
    8. '    ' → logprob: -20.876930236816406
    9. '=None' → logprob: -20.876930236816406
    10. '       ' → logprob: -21.001930236816406

Token 696: ' Directory' (ID: 32740)
  Prédit: 'Directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Directory' → logprob: -7.493430894101039e-05
    2. ' Directory' → logprob: -9.500075340270996
    3. '   ' → logprob: -20.12507438659668
    4. '.Directory' → logprob: -22.00007438659668
    5. '_directory' → logprob: -22.37507438659668
    6. 'directory' → logprob: -22.87507438659668
    7. 'Director' → logprob: -23.12507438659668
    8. '       ' → logprob: -23.12507438659668
    9. 'Directories' → logprob: -23.25007438659668
    10. 'File' → logprob: -24.37507438659668

Token 697: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.9361264946837764e-07
    2. '	Tree' → logprob: -17.375
    3. 'Directory' → logprob: -17.875
    4. '   ' → logprob: -17.875
    5. '<Tree' → logprob: -18.125
    6. '_tree' → logprob: -18.125
    7. 'tree' → logprob: -18.5
    8. '_TREE' → logprob: -18.625
    9. '(Tree' → logprob: -18.625
    10. 'Trie' → logprob: -18.75

Token 698: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -4.320199877838604e-07
    2. 'node' → logprob: -14.875
    3. '   ' → logprob: -17.625
    4. '_node' → logprob: -18.625
    5. 'Tree' → logprob: -19.0
    6. 'ode' → logprob: -19.5
    7. ' Node' → logprob: -19.5
    8. 'N' → logprob: -19.5
    9. 'None' → logprob: -19.875
    10. '_Node' → logprob: -19.875

Token 699: '('/')
' (ID: 103358)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1615457534790039
    2. '('/')' → logprob: -2.036545753479004
    3. '("")' → logprob: -4.411545753479004
    4. '("/")' → logprob: -5.911545753479004
    5. '('',' → logprob: -6.286545753479004
    6. '''' → logprob: -7.161545753479004
    7. '('/',' → logprob: -7.411545753479004
    8. '(' → logprob: -7.911545753479004
    9. '('/' → logprob: -9.536545753479004
    10. '("/",' → logprob: -10.161545753479004

Token 700: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.384311705827713
    2. '
' → logprob: -1.8843116760253906
    3. '<|end|>' → logprob: -2.3843116760253906
    4. '    
' → logprob: -2.6343116760253906
    5. '<|end|>' → logprob: -6.759311676025391
    6. 'def' → logprob: -6.884311676025391
    7. '        
' → logprob: -7.759311676025391
    8. '       ' → logprob: -8.13431167602539
    9. '```' → logprob: -9.25931167602539
    10. '

' → logprob: -9.75931167602539

Token 701: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5773451328277588
    2. 'def' → logprob: -0.8273451328277588
    3. ' def' → logprob: -6.57734489440918
    4. '	def' → logprob: -12.20234489440918
    5. '
' → logprob: -12.32734489440918
    6. '       ' → logprob: -14.07734489440918
    7. '    
' → logprob: -14.07734489440918
    8. 'import' → logprob: -14.45234489440918
    9. '```' → logprob: -14.45234489440918
    10. '  ' → logprob: -14.82734489440918

Token 702: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0206720617134124e-05
    2. ' def' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.750009536743164
    4. 'de' → logprob: -19.625009536743164
    5. 'd' → logprob: -21.000009536743164
    6. '	def' → logprob: -21.125009536743164
    7. '
' → logprob: -21.750009536743164
    8. 'import' → logprob: -22.250009536743164
    9. ' ' → logprob: -22.500009536743164
    10. 'class' → logprob: -22.750009536743164

Token 703: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.1962430328130722
    2. 'build' → logprob: -1.8212430477142334
    3. ' add' → logprob: -4.696242809295654
    4. ' build' → logprob: -5.321242809295654
    5. '_add' → logprob: -6.446242809295654
    6. '_build' → logprob: -8.321243286132812
    7. 'insert' → logprob: -8.821243286132812
    8. '_' → logprob: -9.446243286132812
    9. 'load' → logprob: -9.446243286132812
    10. 'parse' → logprob: -9.571243286132812

Token 704: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.017264433205127716
    2. '_directory' → logprob: -4.142264366149902
    3. '_file' → logprob: -6.892264366149902
    4. 'path' → logprob: -8.767264366149902
    5. '_' → logprob: -11.142264366149902
    6. 'directory' → logprob: -11.892264366149902
    7. '_paths' → logprob: -12.017264366149902
    8. '_entry' → logprob: -12.267264366149902
    9. '(' → logprob: -12.267264366149902
    10. '_filepath' → logprob: -12.767264366149902

Token 705: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.824579784530215e-05
    2. '(' → logprob: -10.0000581741333
    3. 'self' → logprob: -12.0000581741333
    4. '(
' → logprob: -12.7500581741333
    5. '(s' → logprob: -13.6250581741333
    6. '   ' → logprob: -13.7500581741333
    7. ' (' → logprob: -14.5000581741333
    8. '       ' → logprob: -15.2500581741333
    9. 'def' → logprob: -15.2500581741333
    10. 's' → logprob: -15.8750581741333

Token 706: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010749688372015953
    2. 'self' → logprob: -7.12607479095459
    3. '(self' → logprob: -8.50107479095459
    4. ' ,' → logprob: -10.37607479095459
    5. 'path' → logprob: -11.87607479095459
    6. ')(' → logprob: -12.12607479095459
    7. ',self' → logprob: -12.50107479095459
    8. '_path' → logprob: -12.62607479095459
    9. ',path' → logprob: -12.75107479095459
    10. ')' → logprob: -12.87607479095459

Token 707: ' pathname' (ID: 86882)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.12727539241313934
    2. ' path' → logprob: -2.2522754669189453
    3. ' raw' → logprob: -5.252275466918945
    4. 'raw' → logprob: -5.377275466918945
    5. 'self' → logprob: -5.627275466918945
    6. ' self' → logprob: -7.252275466918945
    7. '   ' → logprob: -9.502275466918945
    8. '       ' → logprob: -10.502275466918945
    9. ' ' → logprob: -11.377275466918945
    10. 'full' → logprob: -11.502275466918945

Token 708: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035916371271014214
    2. '):' → logprob: -5.753591537475586
    3. ' :' → logprob: -8.878591537475586
    4. '_path' → logprob: -9.378591537475586
    5. ')' → logprob: -9.628591537475586
    6. '):
' → logprob: -10.128591537475586
    7. ',' → logprob: -10.253591537475586
    8. 'path' → logprob: -11.378591537475586
    9. ':path' → logprob: -11.378591537475586
    10. '   ' → logprob: -11.878591537475586

Token 709: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.348641961812973
    2. 'str' → logprob: -1.4736419916152954
    3. ' Path' → logprob: -3.098641872406006
    4. ' str' → logprob: -4.348641872406006
    5. ')' → logprob: -5.473641872406006
    6. 'raw' → logprob: -6.723641872406006
    7. 'Raw' → logprob: -7.723641872406006
    8. 'path' → logprob: -8.473642349243164
    9. ' raw' → logprob: -8.723642349243164
    10. '):
' → logprob: -8.973642349243164

Token 710: 'name' (ID: 897)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.07895137369632721
    2. 'name' → logprob: -2.578951358795166
    3. ')' → logprob: -10.203951835632324
    4. ' Segment' → logprob: -11.203951835632324
    5. 'segment' → logprob: -12.078951835632324
    6. 'Segments' → logprob: -13.328951835632324
    7. '_segment' → logprob: -13.578951835632324
    8. 'Seg' → logprob: -14.578951835632324
    9. 'nam' → logprob: -14.953951835632324
    10. ')
' → logprob: -15.453951835632324

Token 711: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39902132749557495
    2. ')' → logprob: -1.3990213871002197
    3. '):
' → logprob: -3.0240213871002197
    4. ',' → logprob: -3.3990213871002197
    5. '):
' → logprob: -9.64902114868164
    6. ' ):' → logprob: -10.39902114868164
    7. '   ' → logprob: -10.77402114868164
    8. ' )' → logprob: -10.89902114868164
    9. '       ' → logprob: -11.39902114868164
    10. ':' → logprob: -11.64902114868164

Token 712: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025693757459521294
    2. 'segments' → logprob: -4.400693893432617
    3. 'current' → logprob: -5.150693893432617
    4. ' current' → logprob: -5.275693893432617
    5. ' segments' → logprob: -7.275693893432617
    6. ' if' → logprob: -7.650693893432617
    7. ' parts' → logprob: -7.775693893432617
    8. 'parts' → logprob: -9.025693893432617
    9. 'if' → logprob: -9.150693893432617
    10. 'curr' → logprob: -9.775693893432617

Token 713: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06284069269895554
    2. 'node' → logprob: -2.812840700149536
    3. 'curr' → logprob: -7.312840461730957
    4. 'cur' → logprob: -8.562840461730957
    5. '       ' → logprob: -11.812840461730957
    6. ' current' → logprob: -12.062840461730957
    7. '   ' → logprob: -13.937840461730957
    8. 'cwd' → logprob: -15.187840461730957
    9. ' node' → logprob: -15.437840461730957
    10. ' curr' → logprob: -16.562841415405273

Token 714: ' All' (ID: 2545)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.08555029332637787
    2. 'node' → logprob: -2.585550308227539
    3. 'curr' → logprob: -5.335550308227539
    4. 'cur' → logprob: -6.335550308227539
    5. '       ' → logprob: -10.335550308227539
    6. '   ' → logprob: -12.085550308227539
    7. ' current' → logprob: -12.210550308227539
    8. 'cwd' → logprob: -12.960550308227539
    9. 'components' → logprob: -14.210550308227539
    10. 'cursor' → logprob: -14.335550308227539

Token 715: ' input' (ID: 3422)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.30160757899284363
    2. 'current' → logprob: -1.551607608795166
    3. 'curr' → logprob: -4.176607608795166
    4. ' segments' → logprob: -4.426607608795166
    5. 'cur' → logprob: -4.676607608795166
    6. ' current' → logprob: -5.051607608795166
    7. 'node' → logprob: -6.926607608795166
    8. ' curr' → logprob: -7.176607608795166
    9. 'components' → logprob: -7.301607608795166
    10. 'parts' → logprob: -7.301607608795166

Token 716: ' pages' (ID: 8537)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.4425521492958069
    2. ' segments' → logprob: -1.192552089691162
    3. ' parts' → logprob: -3.942552089691162
    4. 'path' → logprob: -3.942552089691162
    5. ' path' → logprob: -4.942552089691162
    6. '       ' → logprob: -5.817552089691162
    7. 'parts' → logprob: -6.442552089691162
    8. ' tokens' → logprob: -6.942552089691162
    9. 'tokens' → logprob: -7.067552089691162
    10. 'paths' → logprob: -8.19255256652832

Token 717: ' are' (ID: 553)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.732458233833313
    2. ' =' → logprob: -1.107458233833313
    3. '_path' → logprob: -3.2324581146240234
    4. '=' → logprob: -3.2324581146240234
    5. ' segments' → logprob: -3.2324581146240234
    6. '_segments' → logprob: -4.107458114624023
    7. 'path' → logprob: -4.232458114624023
    8. '       ' → logprob: -4.357458114624023
    9. 'def' → logprob: -5.357458114624023
    10. ':' → logprob: -5.732458114624023

Token 718: ' guaranteed' (ID: 21862)
  Prédit: 'absolute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'absolute' → logprob: -0.1702975332736969
    2. ' absolute' → logprob: -2.545297622680664
    3. ' assumed' → logprob: -3.920297622680664
    4. 'ass' → logprob: -4.045297622680664
    5. 'paths' → logprob: -4.920297622680664
    6. 'directories' → logprob: -5.295297622680664
    7. 'path' → logprob: -5.920297622680664
    8. 'segments' → logprob: -5.920297622680664
    9. 'either' → logprob: -6.045297622680664
    10. 'added' → logprob: -6.170297622680664

Token 719: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1811477541923523
    2. 'to' → logprob: -1.806147813796997
    3. ' not' → logprob: -7.556147575378418
    4. 'not' → logprob: -7.806147575378418
    5. 'path' → logprob: -9.431147575378418
    6. 'segments' → logprob: -9.431147575378418
    7. ' that' → logprob: -9.556147575378418
    8. '       ' → logprob: -10.181147575378418
    9. 'that' → logprob: -10.306147575378418
    10. ' absolute' → logprob: -10.556147575378418

Token 720: ' have' (ID: 679)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.26877275109291077
    2. 'be' → logprob: -1.6437727212905884
    3. ' be' → logprob: -3.518772840499878
    4. ' start' → logprob: -5.268772602081299
    5. 'have' → logprob: -5.518772602081299
    6. 'begin' → logprob: -6.393772602081299
    7. 'represent' → logprob: -7.393772602081299
    8. 'end' → logprob: -7.768772602081299
    9. 'not' → logprob: -8.643773078918457
    10. ' have' → logprob: -8.643773078918457

Token 721: ' no' (ID: 860)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.9629822373390198
    2. 'at' → logprob: -1.212982177734375
    3. 'absolute' → logprob: -2.087982177734375
    4. 'pathname' → logprob: -2.837982177734375
    5. 'path' → logprob: -3.212982177734375
    6. 'an' → logprob: -3.337982177734375
    7. 'a' → logprob: -4.212982177734375
    8. ' at' → logprob: -4.587982177734375
    9. 'leading' → logprob: -4.712982177734375
    10. 'all' → logprob: -4.837982177734375

Token 722: ' '.'' (ID: 64762)
  Prédit: ' leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leading' → logprob: -1.0355725288391113
    2. 'empty' → logprob: -1.6605725288391113
    3. 'leading' → logprob: -2.2855725288391113
    4. '.' → logprob: -2.2855725288391113
    5. 'tr' → logprob: -3.0355725288391113
    6. '..' → logprob: -3.1605725288391113
    7. ' empty' → logprob: -3.4105725288391113
    8. 'double' → logprob: -3.7855725288391113
    9. 'segments' → logprob: -4.035572528839111
    10. 'parent' → logprob: -4.535572528839111

Token 723: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7193021774291992
    2. ' or' → logprob: -0.7193021774291992
    3. ' and' → logprob: -4.219302177429199
    4. '   ' → logprob: -4.969302177429199
    5. ',' → logprob: -7.594302177429199
    6. ' ' → logprob: -7.844302177429199
    7. '
' → logprob: -7.844302177429199
    8. '    ' → logprob: -8.0943021774292
    9. ' if' → logprob: -8.2193021774292
    10. '        ' → logprob: -8.4693021774292

Token 724: ' '..' (ID: 107414)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011135661974549294
    2. '..' → logprob: -4.511135578155518
    3. ' '..' → logprob: -10.011136054992676
    4. '   ' → logprob: -11.261136054992676
    5. '"' → logprob: -12.011136054992676
    6. ''/' → logprob: -12.261136054992676
    7. ' ' → logprob: -12.511136054992676
    8. '('' → logprob: -12.761136054992676
    9. '`' → logprob: -13.011136054992676
    10. '..
' → logprob: -13.136136054992676

Token 725: ''' (ID: 6)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.7540081143379211
    2. '       ' → logprob: -1.6290080547332764
    3. 'segments' → logprob: -2.1290080547332764
    4. ''' → logprob: -2.7540080547332764
    5. ' in' → logprob: -3.5040080547332764
    6. ' and' → logprob: -3.8790080547332764
    7. '
' → logprob: -4.1290082931518555
    8. '')' → logprob: -4.2540082931518555
    9. ' or' → logprob: -4.5040082931518555
    10. '   ' → logprob: -4.7540082931518555

Token 726: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026761749759316444
    2. ' current' → logprob: -4.026761531829834
    3. 'current' → logprob: -5.151761531829834
    4. '
' → logprob: -6.776761531829834
    5. ' node' → logprob: -8.026762008666992
    6. 'node' → logprob: -8.151762008666992
    7. '        
' → logprob: -8.651762008666992
    8. '   ' → logprob: -8.776762008666992
    9. ',' → logprob: -8.901762008666992
    10. 'segments' → logprob: -8.901762008666992

Token 727: ' path' (ID: 3104)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.03717730939388275
    2. ' segments' → logprob: -4.287177085876465
    3. 'segment' → logprob: -4.662177085876465
    4. 'path' → logprob: -4.662177085876465
    5. 'Path' → logprob: -6.787177085876465
    6. 'a' → logprob: -7.412177085876465
    7. ' Path' → logprob: -7.662177085876465
    8. 'names' → logprob: -8.037177085876465
    9. 'se' → logprob: -8.162177085876465
    10. ' path' → logprob: -8.662177085876465

Token 728: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.4273831248283386
    2. '_segment' → logprob: -2.1773831844329834
    3. 'segment' → logprob: -2.3023831844329834
    4. '       ' → logprob: -2.5523831844329834
    5. '_segments' → logprob: -3.3023831844329834
    6. ' segments' → logprob: -4.802382946014404
    7. '           ' → logprob: -6.302382946014404
    8. ' segment' → logprob: -6.427382946014404
    9. 'seg' → logprob: -6.677382946014404
    10. 's' → logprob: -6.927382946014404

Token 729: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006395130883902311
    2. 'current' → logprob: -5.75639533996582
    3. 'node' → logprob: -6.38139533996582
    4. ' current' → logprob: -7.50639533996582
    5. ',' → logprob: -8.00639533996582
    6. '        
' → logprob: -8.63139533996582
    7. ' node' → logprob: -8.75639533996582
    8. '
' → logprob: -9.13139533996582
    9. '   ' → logprob: -10.38139533996582
    10. 'dir' → logprob: -10.63139533996582

Token 730: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11440649628639221
    2. 'current' → logprob: -2.3644065856933594
    3. 'node' → logprob: -4.614406585693359
    4. ' current' → logprob: -5.614406585693359
    5. ' node' → logprob: -8.36440658569336
    6. 'curr' → logprob: -9.23940658569336
    7. 'cur' → logprob: -9.61440658569336
    8. ',' → logprob: -10.23940658569336
    9. '   ' → logprob: -10.23940658569336
    10. ',current' → logprob: -10.98940658569336

Token 731: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.39491644501686096
    2. 'node' → logprob: -1.1449164152145386
    3. 'curr' → logprob: -5.144916534423828
    4. 'cur' → logprob: -6.144916534423828
    5. '       ' → logprob: -10.894916534423828
    6. '   ' → logprob: -11.394916534423828
    7. 'cwd' → logprob: -12.394916534423828
    8. ' current' → logprob: -12.644916534423828
    9. 'cursor' → logprob: -14.269916534423828
    10. ' node' → logprob: -14.394916534423828

Token 732: ' and' (ID: 326)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3960396349430084
    2. 'node' → logprob: -1.146039605140686
    3. 'curr' → logprob: -5.1460394859313965
    4. 'cur' → logprob: -5.8960394859313965
    5. '       ' → logprob: -7.6460394859313965
    6. ' current' → logprob: -10.271039962768555
    7. '   ' → logprob: -10.646039962768555
    8. ' node' → logprob: -11.771039962768555
    9. ' curr' → logprob: -13.021039962768555
    10. 'cwd' → logprob: -13.146039962768555

Token 733: ' end' (ID: 1268)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2039315700531006
    2. 'self' → logprob: -2.0789315700531006
    3. ' are' → logprob: -2.4539315700531006
    4. 'path' → logprob: -2.7039315700531006
    5. 'the' → logprob: -2.7039315700531006
    6. ' all' → logprob: -3.2039315700531006
    7. ' self' → logprob: -3.7039315700531006
    8. ' not' → logprob: -3.7039315700531006
    9. 'all' → logprob: -3.8289315700531006
    10. 'not' → logprob: -3.8289315700531006

Token 734: ' with' (ID: 483)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.582439661026001
    2. 'with' → logprob: -0.832439661026001
    3. ' with' → logprob: -5.457439422607422
    4. '   ' → logprob: -7.207439422607422
    5. '/' → logprob: -8.207439422607422
    6. '_with' → logprob: -8.582439422607422
    7. '_' → logprob: -8.707439422607422
    8. '.' → logprob: -9.082439422607422
    9. '('/')' → logprob: -9.082439422607422
    10. '=' → logprob: -9.207439422607422

Token 735: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.650667667388916
    2. ''' → logprob: -1.650667667388916
    3. '/' → logprob: -2.525667667388916
    4. ' '/'' → logprob: -3.025667667388916
    5. ' a' → logprob: -3.275667667388916
    6. ''/' → logprob: -3.650667667388916
    7. 'no' → logprob: -3.775667667388916
    8. 'either' → logprob: -3.900667667388916
    9. '('/')' → logprob: -4.275667667388916
    10. ' either' → logprob: -4.775667667388916

Token 736: ' file' (ID: 1974)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.24908015131950378
    2. 'file' → logprob: -2.999080181121826
    3. 'filename' → logprob: -2.999080181121826
    4. 'slash' → logprob: -3.249080181121826
    5. ' '/'' → logprob: -4.249080181121826
    6. ''' → logprob: -4.749080181121826
    7. ' file' → logprob: -4.874080181121826
    8. ''/' → logprob: -4.874080181121826
    9. ' filename' → logprob: -4.874080181121826
    10. ' /' → logprob: -5.124080181121826

Token 737: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005645882338285446
    2. 'current' → logprob: -5.755645751953125
    3. '
' → logprob: -6.630645751953125
    4. ' current' → logprob: -7.880645751953125
    5. 'node' → logprob: -8.505645751953125
    6. '   ' → logprob: -9.005645751953125
    7. 'segments' → logprob: -9.005645751953125
    8. 'path' → logprob: -9.505645751953125
    9. '        
' → logprob: -9.755645751953125
    10. ',' → logprob: -10.755645751953125

Token 738: 'last' (ID: 6684)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.728420615196228
    2. ')' → logprob: -1.353420615196228
    3. '')' → logprob: -2.6034207344055176
    4. ')
' → logprob: -2.6034207344055176
    5. ' not' → logprob: -3.4784207344055176
    6. ' if' → logprob: -4.103420734405518
    7. 'not' → logprob: -4.728420734405518
    8. 'filename' → logprob: -4.728420734405518
    9. '       ' → logprob: -4.978420734405518
    10. 'if' → logprob: -5.228420734405518

Token 739: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.6327067017555237
    2. 'segment' → logprob: -1.007706642150879
    3. '_segment' → logprob: -2.632706642150879
    4. 'Segment' → logprob: -4.382706642150879
    5. ')' → logprob: -4.882706642150879
    6. 'name' → logprob: -6.132706642150879
    7. 'token' → logprob: -6.507706642150879
    8. '_path' → logprob: -7.007706642150879
    9. ' token' → logprob: -7.257706642150879
    10. '_name' → logprob: -7.507706642150879

Token 740: ' is' (ID: 382)
  Prédit: '.name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -1.1292855739593506
    2. ' is' → logprob: -1.2542855739593506
    3. ').' → logprob: -2.0042855739593506
    4. ')' → logprob: -2.0042855739593506
    5. ' or' → logprob: -3.2542855739593506
    6. ' if' → logprob: -4.00428581237793
    7. 'name' → logprob: -4.12928581237793
    8. ')
' → logprob: -5.25428581237793
    9. '.' → logprob: -5.25428581237793
    10. '),' → logprob: -5.75428581237793

Token 741: ' a' (ID: 261)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5768742561340332
    2. 'a' → logprob: -1.5768742561340332
    3. ' not' → logprob: -1.5768742561340332
    4. ' a' → logprob: -3.826874256134033
    5. 'filename' → logprob: -6.826874256134033
    6. ' assumed' → logprob: -6.951874256134033
    7. 'file' → logprob: -7.326874256134033
    8. ' filename' → logprob: -9.201873779296875
    9. 'non' → logprob: -9.326873779296875
    10. 'ass' → logprob: -9.576873779296875

Token 742: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.21293753385543823
    2. ' file' → logprob: -1.837937593460083
    3. 'filename' → logprob: -3.712937593460083
    4. 'name' → logprob: -5.837937355041504
    5. ' filename' → logprob: -6.087937355041504
    6. 'segment' → logprob: -6.837937355041504
    7. ' segment' → logprob: -7.962937355041504
    8. 'Path' → logprob: -8.337937355041504
    9. ')' → logprob: -8.462937355041504
    10. 'normal' → logprob: -8.587937355041504

Token 743: ' under' (ID: 1641)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31012803316116333
    2. ' or' → logprob: -1.9351279735565186
    3. ')
' → logprob: -2.8101279735565186
    4. 'name' → logprob: -3.4351279735565186
    5. '')' → logprob: -4.185128211975098
    6. 'or' → logprob: -5.935128211975098
    7. ').' → logprob: -5.935128211975098
    8. 'segment' → logprob: -6.060128211975098
    9. ' name' → logprob: -6.310128211975098
    10. ' segment' → logprob: -7.060128211975098

Token 744: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3537673354148865
    2. 'the' → logprob: -2.1037673950195312
    3. ' a' → logprob: -2.6037673950195312
    4. 'some' → logprob: -2.9787673950195312
    5. ' the' → logprob: -3.9787673950195312
    6. ' its' → logprob: -4.728767395019531
    7. ' some' → logprob: -5.103767395019531
    8. 'directories' → logprob: -5.478767395019531
    9. 'directory' → logprob: -5.853767395019531
    10. 'parent' → logprob: -5.978767395019531

Token 745: ' directory' (ID: 12552)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.7024956345558167
    2. 'directories' → logprob: -1.3274955749511719
    3. 'directory' → logprob: -1.5774955749511719
    4. 'root' → logprob: -4.952495574951172
    5. 'last' → logprob: -5.077495574951172
    6. 'current' → logprob: -5.202495574951172
    7. ' directories' → logprob: -5.327495574951172
    8. ' directory' → logprob: -5.577495574951172
    9. ' parent' → logprob: -6.077495574951172
    10. 'final' → logprob: -6.702495574951172

Token 746: ' path' (ID: 3104)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14101257920265198
    2. ')
' → logprob: -2.266012668609619
    3. 'name' → logprob: -4.891012668609619
    4. 'path' → logprob: -5.016012668609619
    5. '')' → logprob: -5.141012668609619
    6. '):
' → logprob: -6.891012668609619
    7. 'segment' → logprob: -7.016012668609619
    8. ',' → logprob: -7.391012668609619
    9. 'parent' → logprob: -7.641012668609619
    10. ').' → logprob: -7.641012668609619

Token 747: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31978175044059753
    2. '):
' → logprob: -2.19478178024292
    3. ')' → logprob: -2.44478178024292
    4. '[:-' → logprob: -3.06978178024292
    5. '):' → logprob: -5.06978178024292
    6. 'segments' → logprob: -5.19478178024292
    7. '       ' → logprob: -5.69478178024292
    8. '   ' → logprob: -6.06978178024292
    9. 'name' → logprob: -6.44478178024292
    10. ' )
' → logprob: -6.69478178024292

Token 748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01063957717269659
    2. 'current' → logprob: -4.760639667510986
    3. ' current' → logprob: -6.760639667510986
    4. 'node' → logprob: -7.260639667510986
    5. 'curr' → logprob: -10.010639190673828
    6. ' node' → logprob: -10.135639190673828
    7. '   ' → logprob: -10.635639190673828
    8. 'cur' → logprob: -10.885639190673828
    9. 'dir' → logprob: -11.260639190673828
    10. 'cwd' → logprob: -11.885639190673828

Token 749: ' curr' (ID: 10495)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3314397633075714
    2. 'node' → logprob: -1.331439733505249
    3. '       ' → logprob: -4.831439971923828
    4. 'curr' (adapté à ' curr') → logprob: -5.081439971923828
    5. 'cur' → logprob: -5.581439971923828
    6. 'dir' → logprob: -10.081439971923828
    7. 'def' → logprob: -11.956439971923828
    8. 'cwd' → logprob: -12.081439971923828
    9. ' current' → logprob: -12.706439971923828
    10. '   ' → logprob: -13.706439971923828

Token 750: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12072865664958954
    2. 'ent' → logprob: -2.3707287311553955
    3. '_node' → logprob: -3.9957287311553955
    4. '_dir' → logprob: -6.495728492736816
    5. '=' → logprob: -8.495728492736816
    6. 'dir' → logprob: -9.120728492736816
    7. 'node' → logprob: -9.995728492736816
    8. '=node' → logprob: -11.245728492736816
    9. '   ' → logprob: -11.620728492736816
    10. '       ' → logprob: -12.120728492736816

Token 751: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008056987426243722
    2. ' self' → logprob: -7.125805854797363
    3. '(self' → logprob: -14.375805854797363
    4. '[self' → logprob: -15.500805854797363
    5. '       ' → logprob: -15.750805854797363
    6. '=self' → logprob: -16.500804901123047
    7. '
' → logprob: -16.500804901123047
    8. '	self' → logprob: -17.250804901123047
    9. 'root' → logprob: -17.750804901123047
    10. '   ' → logprob: -18.625804901123047

Token 752: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.020565249025821686
    2. 'root' → logprob: -3.8955652713775635
    3. '.' → logprob: -11.145565032958984
    4. 'self' → logprob: -12.645565032958984
    5. ' root' → logprob: -12.895565032958984
    6. '
' → logprob: -14.270565032958984
    7. '=root' → logprob: -14.395565032958984
    8. '_root' → logprob: -15.020565032958984
    9. '.
' → logprob: -15.270565032958984
    10. '._' → logprob: -15.395565032958984

Token 753: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010862115770578384
    2. 'for' → logprob: -4.885862350463867
    3. '       ' → logprob: -6.010862350463867
    4. '        
' → logprob: -8.635862350463867
    5. '<|end|>' → logprob: -8.760862350463867
    6. '
' → logprob: -8.885862350463867
    7. ' for' → logprob: -9.135862350463867
    8. '    
' → logprob: -9.135862350463867
    9. '   ' → logprob: -10.385862350463867
    10. '<|end|>' → logprob: -10.510862350463867

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042240794748067856
    2. 'for' → logprob: -3.417240858078003
    3. ' for' → logprob: -4.792240619659424
    4. '
' → logprob: -8.917241096496582
    5. ',' → logprob: -9.917241096496582
    6. '   ' → logprob: -10.667241096496582
    7. 'tokens' → logprob: -10.917241096496582
    8. 'token' → logprob: -11.792241096496582
    9. 'segments' → logprob: -12.292241096496582
    10. '#' → logprob: -12.667241096496582

Token 755: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032889400608837605
    2. ' for' → logprob: -5.753288745880127
    3. '       ' → logprob: -9.253289222717285
    4. 'segments' → logprob: -11.128289222717285
    5. 'tokens' → logprob: -15.753289222717285
    6. '   ' → logprob: -16.12828826904297
    7. '	for' → logprob: -16.25328826904297
    8. '        
' → logprob: -16.75328826904297
    9. '
' → logprob: -16.87828826904297
    10. 'parts' → logprob: -16.87828826904297

Token 756: ' last' (ID: 2174)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007677015382796526
    2. ' for' → logprob: -5.00767707824707
    3. '       ' → logprob: -7.38267707824707
    4. 'segments' → logprob: -8.00767707824707
    5. 'parts' → logprob: -12.63267707824707
    6. ' segments' → logprob: -13.50767707824707
    7. 'i' → logprob: -15.38267707824707
    8. '#' → logprob: -15.38267707824707
    9. 'path' → logprob: -15.88267707824707
    10. 'prev' → logprob: -15.88267707824707

Token 757: ' segment' (ID: 14806)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.3684433698654175
    2. '_path' → logprob: -2.493443489074707
    3. 'segment' → logprob: -2.493443489074707
    4. ' =' → logprob: -2.868443489074707
    5. ' segment' → logprob: -3.743443489074707
    6. '_token' → logprob: -4.243443489074707
    7. '_segments' → logprob: -4.618443489074707
    8. ' for' → logprob: -5.368443489074707
    9. 'Segment' → logprob: -5.368443489074707
    10. 'for' → logprob: -5.618443489074707

Token 758: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04830457270145416
    2. 'for' → logprob: -4.423304557800293
    3. ' for' → logprob: -4.423304557800293
    4. '_idx' → logprob: -5.048304557800293
    5. '_index' → logprob: -5.298304557800293
    6. '=' → logprob: -6.173304557800293
    7. ' is' → logprob: -6.298304557800293
    8. ':' → logprob: -6.548304557800293
    9. 'name' → logprob: -6.673304557800293
    10. '_name' → logprob: -6.673304557800293

Token 759: ' a' (ID: 261)
  Prédit: 'pathname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pathname' → logprob: -0.11014352738857269
    2. ' pathname' → logprob: -2.7351434230804443
    3. 'a' → logprob: -3.6101434230804443
    4. 'filename' → logprob: -4.735143661499023
    5. ' a' → logprob: -6.485143661499023
    6. 'the' → logprob: -7.235143661499023
    7. ' filename' → logprob: -7.860143661499023
    8. 'filepath' → logprob: -8.485143661499023
    9. '.pathname' → logprob: -8.485143661499023
    10. ' the' → logprob: -8.610143661499023

Token 760: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.09976118803024292
    2. 'filename' → logprob: -2.9747612476348877
    3. ' file' → logprob: -3.4747612476348877
    4. 'pathname' → logprob: -4.974761009216309
    5. ' filename' → logprob: -6.474761009216309
    6. 'File' → logprob: -6.724761009216309
    7. 'Path' → logprob: -6.724761009216309
    8. 'path' → logprob: -7.599761009216309
    9. ' pathname' → logprob: -7.599761009216309
    10. 'filepath' → logprob: -7.599761009216309

Token 761: ' name' (ID: 1308)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5358964204788208
    2. ' for' → logprob: -1.4108964204788208
    3. 'for' → logprob: -1.7858964204788208
    4. ',' → logprob: -6.160896301269531
    5. '
' → logprob: -7.535896301269531
    6. ':' → logprob: -8.535896301269531
    7. '        
' → logprob: -9.535896301269531
    8. ';' → logprob: -10.160896301269531
    9. ' =' → logprob: -10.160896301269531
    10. '   ' → logprob: -10.160896301269531

Token 762: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33571216464042664
    2. 'for' → logprob: -1.835712194442749
    3. ' for' → logprob: -2.085712194442749
    4. '
' → logprob: -6.71071195602417
    5. 'segments' → logprob: -9.210712432861328
    6. ',' → logprob: -10.335712432861328
    7. '   ' → logprob: -11.085712432861328
    8. ':' → logprob: -11.085712432861328
    9. '        
' → logprob: -11.210712432861328
    10. 'tokens' → logprob: -11.585712432861328

Token 763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42041414976119995
    2. 'for' → logprob: -1.2954142093658447
    3. ' for' → logprob: -2.6704142093658447
    4. '
' → logprob: -9.295413970947266
    5. '   ' → logprob: -9.670413970947266
    6. ',' → logprob: -10.920413970947266
    7. 'segments' → logprob: -11.170413970947266
    8. '	for' → logprob: -11.545413970947266
    9. '```' → logprob: -12.295413970947266
    10. '        
' → logprob: -12.420413970947266

Token 764: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003364158037584275
    2. ' for' → logprob: -8.250336647033691
    3. '       ' → logprob: -9.500336647033691
    4. 'segments' → logprob: -15.375336647033691
    5. '   ' → logprob: -18.000335693359375
    6. '	for' → logprob: -18.625335693359375
    7. '
' → logprob: -18.875335693359375
    8. 'file' → logprob: -19.625335693359375
    9. 'n' → logprob: -19.875335693359375
    10. '        
' → logprob: -20.125335693359375

Token 765: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.049331553280353546
    2. 'not' → logprob: -3.2993316650390625
    3. ' not' → logprob: -4.9243316650390625
    4. ' len' → logprob: -5.5493316650390625
    5. 'pathname' → logprob: -10.174331665039062
    6. '   ' → logprob: -10.799331665039062
    7. '(len' → logprob: -13.049331665039062
    8. 'path' → logprob: -13.174331665039062
    9. '	len' → logprob: -13.424331665039062
    10. ' ' → logprob: -13.424331665039062

Token 766: ' pathname' (ID: 86882)
  Prédit: 'pathname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pathname' → logprob: -0.0002261854097014293
    2. ' pathname' → logprob: -8.500226020812988
    3. 'len' → logprob: -11.125226020812988
    4. 'path' → logprob: -12.125226020812988
    5. 'curr' → logprob: -13.875226020812988
    6. 'is' → logprob: -14.375226020812988
    7. 'self' → logprob: -14.625226020812988
    8. '.pathname' → logprob: -15.000226020812988
    9. '
' → logprob: -16.625226974487305
    10. '   ' → logprob: -17.250226974487305

Token 767: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.0008216609712690115
    2. '.has' → logprob: -7.250821590423584
    3. '.raw' → logprob: -9.250822067260742
    4. 'segments' → logprob: -11.875822067260742
    5. '.' → logprob: -12.250822067260742
    6. '.s' → logprob: -14.500822067260742
    7. 'raw' → logprob: -15.125822067260742
    8. '.seg' → logprob: -15.125822067260742
    9. '.is' → logprob: -15.375822067260742
    10. 'has' → logprob: -15.375822067260742

Token 768: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -0.00013464801304508
    2. 'g' → logprob: -9.000134468078613
    3. 'gements' → logprob: -12.375134468078613
    4. 'ments' → logprob: -12.625134468078613
    5. 'segments' → logprob: -13.250134468078613
    6. 'nts' → logprob: -13.625134468078613
    7. '```' → logprob: -15.625134468078613
    8. 'gs' → logprob: -16.25013542175293
    9. 'quences' → logprob: -16.37513542175293
    10. 'gment' → logprob: -16.37513542175293

Token 769: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01043420284986496
    2. ':
' → logprob: -4.635434150695801
    3. ':return' → logprob: -7.760434150695801
    4. ' or' → logprob: -9.3854341506958
    5. '       ' → logprob: -10.6354341506958
    6. 'or' → logprob: -10.7604341506958
    7. '[' → logprob: -10.7604341506958
    8. '):' → logprob: -10.8854341506958
    9. '<|end|>' → logprob: -11.1354341506958
    10. '[-' → logprob: -11.3854341506958

Token 770: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00709398090839386
    2. ':
' → logprob: -6.007093906402588
    3. '       ' → logprob: -6.257093906402588
    4. ':' → logprob: -7.007093906402588
    5. 'return' → logprob: -7.007093906402588
    6. ' return' → logprob: -7.257093906402588
    7. ':return' → logprob: -8.882094383239746
    8. '   ' → logprob: -11.507094383239746
    9. '	   ' → logprob: -12.257094383239746
    10. '	       ' → logprob: -12.257094383239746

Token 771: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029818879440426826
    2. '           ' → logprob: -3.7798187732696533
    3. ' return' → logprob: -5.029819011688232
    4. '
' → logprob: -11.779818534851074
    5. '   ' → logprob: -13.404818534851074
    6. '       ' → logprob: -13.529818534851074
    7. '               ' → logprob: -14.779818534851074
    8. '	return' → logprob: -15.404818534851074
    9. '{return' → logprob: -15.779818534851074
    10. '#' (adapté à ' #') → logprob: -16.15481948852539

Token 772: ' path' (ID: 3104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00037371189682744443
    2. ' return' → logprob: -8.000373840332031
    3. '           ' → logprob: -10.500373840332031
    4. '#' → logprob: -11.500373840332031
    5. '       ' → logprob: -14.500373840332031
    6. 'raise' → logprob: -16.50037384033203
    7. 'pass' → logprob: -18.25037384033203
    8. '   ' → logprob: -18.25037384033203
    9. ' #' → logprob: -18.75037384033203
    10. '
' → logprob: -19.12537384033203

Token 773: ' like' (ID: 1299)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9319202899932861
    2. '=' → logprob: -1.9319202899932861
    3. '       ' → logprob: -2.181920289993286
    4. ':' → logprob: -2.431920289993286
    5. ':
' → logprob: -2.681920289993286
    6. '==' → logprob: -3.056920289993286
    7. ' ==' → logprob: -3.306920289993286
    8. ' is' → logprob: -3.681920289993286
    9. '           ' → logprob: -3.806920289993286
    10. 'return' → logprob: -3.931920289993286

Token 774: ' '/'
' (ID: 176928)
  Prédit: '"/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"/' → logprob: -0.8765212297439575
    2. 'self' → logprob: -1.5015212297439575
    3. '/' → logprob: -1.7515212297439575
    4. ''' → logprob: -2.251521110534668
    5. ''/' → logprob: -3.376521110534668
    6. 'raw' → logprob: -4.876521110534668
    7. 'pathname' → logprob: -5.001521110534668
    8. '/path' → logprob: -5.251521110534668
    9. '/self' → logprob: -5.251521110534668
    10. 'Path' → logprob: -5.501521110534668

Token 775: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027315248735249043
    2. 'return' → logprob: -6.1277313232421875
    3. ' return' → logprob: -8.127731323242188
    4. '
' → logprob: -8.627731323242188
    5. '       ' → logprob: -9.752731323242188
    6. '   ' → logprob: -12.752731323242188
    7. '		' → logprob: -12.877731323242188
    8. '               ' → logprob: -12.877731323242188
    9. ',' → logprob: -13.002731323242188
    10. ':return' → logprob: -13.752731323242188

Token 776: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00035274302354082465
    2. '           ' → logprob: -8.50035285949707
    3. ' return' → logprob: -9.00035285949707
    4. '       ' → logprob: -10.62535285949707
    5. '#' → logprob: -14.50035285949707
    6. 'self' → logprob: -15.00035285949707
    7. '   ' → logprob: -15.00035285949707
    8. 'curr' → logprob: -15.37535285949707
    9. 'pass' → logprob: -16.00035285949707
    10. '
' → logprob: -18.00035285949707

Token 777: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017446018755435944
    2. '
' → logprob: -4.142446041107178
    3. '        
' → logprob: -6.767446041107178
    4. ' for' → logprob: -9.14244556427002
    5. '    
' → logprob: -9.64244556427002
    6. 'for' → logprob: -10.01744556427002
    7. '   ' → logprob: -10.89244556427002
    8. '
' → logprob: -12.51744556427002
    9. '  
' → logprob: -12.51744556427002
    10. '       
' → logprob: -13.01744556427002

Token 778: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003227740991860628
    2. '        
' → logprob: -6.253227710723877
    3. '
' → logprob: -6.753227710723877
    4. ' for' → logprob: -9.753228187561035
    5. '    
' → logprob: -9.878228187561035
    6. '```' → logprob: -11.628228187561035
    7. '   ' → logprob: -12.628228187561035
    8. 'for' → logprob: -13.378228187561035
    9. '        
' → logprob: -13.753228187561035
    10. '  
' → logprob: -14.003228187561035

Token 779: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007112921681255102
    2. '       ' → logprob: -5.007112979888916
    3. ' for' → logprob: -7.882112979888916
    4. '```' → logprob: -10.882112503051758
    5. '
' → logprob: -14.882112503051758
    6. '	for' → logprob: -15.007112503051758
    7. '        
' → logprob: -15.632112503051758
    8. '``' → logprob: -15.882112503051758
    9. 'prev' → logprob: -16.257112503051758
    10. 'i' → logprob: -16.882112503051758

Token 780: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.7025747299194336
    2. 'seg' → logprob: -0.8275747299194336
    3. 'i' → logprob: -2.7025747299194336
    4. 'idx' → logprob: -8.327574729919434
    5. ' i' → logprob: -9.202574729919434
    6. ' segment' → logprob: -9.327574729919434
    7. ' seg' → logprob: -9.577574729919434
    8. 'index' → logprob: -10.577574729919434
    9. '   ' → logprob: -11.577574729919434
    10. 'part' → logprob: -12.077574729919434

Token 781: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17976683378219604
    2. 'in' → logprob: -1.8047668933868408
    3. '_in' → logprob: -11.554766654968262
    4. 'i' → logprob: -13.054766654968262
    5. 'index' → logprob: -13.304766654968262
    6. ' ' → logprob: -13.304766654968262
    7. ',' → logprob: -13.554766654968262
    8. '	in' → logprob: -14.179766654968262
    9. 'import' → logprob: -14.429766654968262
    10. '_index' → logprob: -14.554766654968262

Token 782: ' pathname' (ID: 86882)
  Prédit: 'pathname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pathname' → logprob: -9.484132169745862e-05
    2. ' pathname' → logprob: -9.375094413757324
    3. 'path' → logprob: -11.625094413757324
    4. '   ' → logprob: -14.375094413757324
    5. '[path' → logprob: -15.375094413757324
    6. '.pathname' → logprob: -15.625094413757324
    7. '
' → logprob: -17.37509536743164
    8. '       ' → logprob: -18.37509536743164
    9. ' ' → logprob: -18.37509536743164
    10. '[:-' → logprob: -18.87509536743164

Token 783: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -2.696889623621246e-06
    2. ' .' → logprob: -14.25000286102295
    3. 'segments' → logprob: -14.25000286102295
    4. '[:-' → logprob: -14.87500286102295
    5. '.' → logprob: -15.50000286102295
    6. '   ' → logprob: -15.87500286102295
    7. 'se' → logprob: -16.125001907348633
    8. '.seg' → logprob: -16.250001907348633
    9. '.pathname' → logprob: -16.375001907348633
    10. '[' → logprob: -16.625001907348633

Token 784: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -0.007310457527637482
    2. 'nts' → logprob: -5.507310390472412
    3. 'ments' → logprob: -5.882310390472412
    4. 'segments' → logprob: -8.25731086730957
    5. 'g' → logprob: -9.13231086730957
    6. 'ts' → logprob: -10.50731086730957
    7. 'gements' → logprob: -11.63231086730957
    8. 'ents' → logprob: -11.63231086730957
    9. '```' → logprob: -11.75731086730957
    10. '   ' → logprob: -12.75731086730957

Token 785: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -2.069664333248511e-05
    2. ':' → logprob: -11.375020980834961
    3. 'except' → logprob: -13.000020980834961
    4. '[:' → logprob: -13.125020980834961
    5. '       ' → logprob: -13.500020980834961
    6. ' except' → logprob: -13.750020980834961
    7. '[' → logprob: -13.875020980834961
    8. ':
' → logprob: -14.250020980834961
    9. '_except' → logprob: -15.500020980834961
    10. ' [' → logprob: -15.750020980834961

Token 786: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '-' → logprob: -17.0
    4. '   ' → logprob: -18.375
    5. ']' → logprob: -20.125
    6. '
' → logprob: -20.125
    7. '```' → logprob: -20.125
    8. '...' → logprob: -20.375
    9. '#' → logprob: -20.5
    10. ')' → logprob: -21.0

Token 787: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.03194585070014
    2. ']:' → logprob: -3.5319459438323975
    3. '):
' → logprob: -7.031945705413818
    4. ':
' → logprob: -7.531945705413818
    5. '       ' → logprob: -8.031946182250977
    6. ':' → logprob: -8.281946182250977
    7. ']:
' → logprob: -9.156946182250977
    8. '   ' → logprob: -10.781946182250977
    9. ']' → logprob: -10.906946182250977
    10. ' ]' → logprob: -11.281946182250977

Token 788: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2651623487472534
    2. '       ' → logprob: -2.265162467956543
    3. ':
' → logprob: -2.515162467956543
    4. 'curr' → logprob: -3.515162467956543
    5. ':' → logprob: -4.140162467956543
    6. '):
' → logprob: -6.890162467956543
    7. ' curr' → logprob: -7.390162467956543
    8. '
' → logprob: -8.390162467956543
    9. '[curr' → logprob: -8.515162467956543
    10. '               ' → logprob: -8.640162467956543

Token 789: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.005693776533007622
    2. '           ' → logprob: -5.2556939125061035
    3. ' curr' → logprob: -7.7556939125061035
    4. 'if' → logprob: -10.880693435668945
    5. '               ' → logprob: -12.380693435668945
    6. '   ' → logprob: -12.630693435668945
    7. 'cur' → logprob: -13.505693435668945
    8. '	curr' → logprob: -13.630693435668945
    9. '       ' → logprob: -14.005693435668945
    10. 'current' → logprob: -14.880693435668945

Token 790: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013259568950161338
    2. ' =' → logprob: -6.626326084136963
    3. '           ' → logprob: -19.126325607299805
    4. '=current' → logprob: -20.001325607299805
    5. '   ' → logprob: -20.501325607299805
    6. '=

' → logprob: -20.501325607299805
    7. '       ' → logprob: -20.501325607299805
    8. '＝' → logprob: -20.876325607299805
    9. '.=' → logprob: -21.126325607299805
    10. 'curr' → logprob: -21.126325607299805

Token 791: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0004907185211777687
    2. ' curr' → logprob: -7.625490665435791
    3. 'cur' → logprob: -13.00049114227295
    4. '	curr' → logprob: -15.12549114227295
    5. '[curr' → logprob: -16.750490188598633
    6. '(curr' → logprob: -16.875490188598633
    7. '   ' → logprob: -17.250490188598633
    8. '.curr' → logprob: -17.375490188598633
    9. ' ' → logprob: -19.125490188598633
    10. 'current' → logprob: -19.625490188598633

Token 792: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00019567293929867446
    2. '.get' → logprob: -8.625195503234863
    3. '.direct' → logprob: -12.125195503234863
    4. '.children' → logprob: -12.500195503234863
    5. ' .' → logprob: -12.875195503234863
    6. '.' → logprob: -12.875195503234863
    7. '.has' → logprob: -13.625195503234863
    8. 'add' → logprob: -15.875195503234863
    9. '   ' → logprob: -16.12519645690918
    10. ').' → logprob: -16.12519645690918

Token 793: '_directory' (ID: 35850)
  Prédit: '_directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_directory' → logprob: -8.061054359131958e-06
    2. 'directory' → logprob: -11.750007629394531
    3. '_segment' → logprob: -16.37500762939453
    4. '_direct' → logprob: -17.37500762939453
    5. '(directory' → logprob: -17.87500762939453
    6. '_' → logprob: -18.00000762939453
    7. 'Directory' → logprob: -18.12500762939453
    8. 'irectory' → logprob: -19.87500762939453
    9. '_DIRECTORY' → logprob: -20.00000762939453
    10. ' directory' → logprob: -20.62500762939453

Token 794: '(segment' (ID: 144369)
  Prédit: '(segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(segment' → logprob: -6.034592388459714e-06
    2. 'segment' → logprob: -12.125005722045898
    3. '(' → logprob: -14.750005722045898
    4. '(seg' → logprob: -16.1250057220459
    5. '(sequence' → logprob: -18.0000057220459
    6. '(
' → logprob: -18.0000057220459
    7. ' (' → logprob: -19.2500057220459
    8. '(section' → logprob: -19.3750057220459
    9. '   ' → logprob: -20.5000057220459
    10. '(f' → logprob: -20.5000057220459

Token 795: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -1.688212614681106e-05
    2. 'name' → logprob: -11.250017166137695
    3. ')' → logprob: -13.125017166137695
    4. '.' → logprob: -13.625017166137695
    5. '(name' → logprob: -15.250017166137695
    6. ').' → logprob: -16.250017166137695
    7. ' .' → logprob: -16.375017166137695
    8. ')
' → logprob: -17.250017166137695
    9. ' name' → logprob: -18.125017166137695
    10. '   ' → logprob: -18.250017166137695

Token 796: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ')
' → logprob: -12.125007629394531
    3. '       ' → logprob: -14.000007629394531
    4. ' )' → logprob: -14.250007629394531
    5. '   ' → logprob: -15.125007629394531
    6. ')`' → logprob: -16.50000762939453
    7. ')return' → logprob: -17.00000762939453
    8. ')

' → logprob: -17.87500762939453
    9. '))' → logprob: -18.12500762939453
    10. ')#' → logprob: -18.37500762939453

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15258099138736725
    2. 'curr' → logprob: -2.027580976486206
    3. 'file' → logprob: -4.902581214904785
    4. 'last' → logprob: -7.527581214904785
    5. ' curr' → logprob: -7.652581214904785
    6. '
' → logprob: -8.152581214904785
    7. 'filename' → logprob: -8.152581214904785
    8. '#' → logprob: -8.777581214904785
    9. '```' → logprob: -9.027581214904785
    10. 'if' → logprob: -9.402581214904785

Token 798: ' last' (ID: 2174)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0010569837177172303
    2. 'filename' → logprob: -7.251057147979736
    3. 'file' → logprob: -8.626056671142578
    4. '       ' → logprob: -9.001056671142578
    5. 'last' (adapté à ' last') → logprob: -10.626056671142578
    6. 'if' → logprob: -11.501056671142578
    7. ' curr' → logprob: -12.501056671142578
    8. 'fname' → logprob: -12.751056671142578
    9. '   ' → logprob: -13.876056671142578
    10. '#' → logprob: -13.876056671142578

Token 799: '_seg' (ID: 78972)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.014956872910261154
    2. '_seg' → logprob: -4.514956951141357
    3. ' =' → logprob: -6.639956951141357
    4. 'segment' → logprob: -6.639956951141357
    5. 'seg' → logprob: -7.139956951141357
    6. '_name' → logprob: -8.2649564743042
    7. '=' → logprob: -9.3899564743042
    8. 'Segment' → logprob: -9.6399564743042
    9. '_filename' → logprob: -10.7649564743042
    10. '_file' → logprob: -10.8899564743042

Token 800: ' =' (ID: 314)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.6038867235183716
    2. ' =' → logprob: -0.8538867235183716
    3. '=' → logprob: -3.603886604309082
    4. '   ' → logprob: -9.353886604309082
    5. 'm' → logprob: -9.478886604309082
    6. 'name' → logprob: -9.478886604309082
    7. '  ' → logprob: -10.853886604309082
    8. '_name' → logprob: -10.978886604309082
    9. 'ments' → logprob: -10.978886604309082
    10. ' ' → logprob: -11.853886604309082

Token 801: ' pathname' (ID: 86882)
  Prédit: 'pathname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pathname' → logprob: -0.0011730826226994395
    2. ' pathname' → logprob: -6.75117301940918
    3. 'path' → logprob: -13.00117301940918
    4. '   ' → logprob: -14.75117301940918
    5. '.pathname' → logprob: -15.25117301940918
    6. '       ' → logprob: -18.37617301940918
    7. ' ' → logprob: -18.75117301940918
    8. 'Path' → logprob: -18.87617301940918
    9. 'filename' → logprob: -19.12617301940918
    10. '  ' → logprob: -19.62617301940918

Token 802: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -4.36574100604048e-06
    2. 'segments' → logprob: -12.875004768371582
    3. '.' → logprob: -13.750004768371582
    4. '.seg' → logprob: -15.250004768371582
    5. ' .' → logprob: -15.500004768371582
    6. '.segment' → logprob: -15.750004768371582
    7. '	se' → logprob: -17.625003814697266
    8. '.s' → logprob: -17.750003814697266
    9. 'Segments' → logprob: -18.375003814697266
    10. 'se' → logprob: -18.375003814697266

Token 803: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -0.0037854660768061876
    2. 'ments' → logprob: -5.628785610198975
    3. 'g' → logprob: -9.253785133361816
    4. 'segments' → logprob: -9.628785133361816
    5. 'nts' → logprob: -11.378785133361816
    6. 'gements' → logprob: -11.753785133361816
    7. 'gment' → logprob: -13.128785133361816
    8. '```' → logprob: -14.503785133361816
    9. '[' → logprob: -15.128785133361816
    10. 'ents' → logprob: -15.253785133361816

Token 804: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. '-' → logprob: -17.125
    4. '   ' → logprob: -17.25
    5. '[
' → logprob: -17.375
    6. '[:-' → logprob: -18.0
    7. '```' → logprob: -19.375
    8. '
' → logprob: -19.375
    9. '       ' → logprob: -19.625
    10. '[len' → logprob: -19.875

Token 805: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007740125292912126
    2. ']' → logprob: -8.625774383544922
    3. '].' → logprob: -9.125774383544922
    4. ')' → logprob: -9.500774383544922
    5. '-' → logprob: -9.500774383544922
    6. ').' → logprob: -9.750774383544922
    7. '_' → logprob: -10.000774383544922
    8. 'last' → logprob: -10.000774383544922
    9. ')]' → logprob: -11.000774383544922
    10. 'name' → logprob: -11.250774383544922

Token 806: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5525052547454834
    2. ')
' → logprob: -1.8025052547454834
    3. '       ' → logprob: -1.9275052547454834
    4. ')' → logprob: -3.1775052547454834
    5. ').' → logprob: -3.3025052547454834
    6. '.name' → logprob: -4.3025054931640625
    7. ']
' → logprob: -4.8025054931640625
    8. '].' → logprob: -5.3025054931640625
    9. ']' → logprob: -5.4275054931640625
    10. 'name' → logprob: -6.0525054931640625

Token 807: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25369590520858765
    2. 'curr' → logprob: -1.6286959648132324
    3. '       ' → logprob: -3.6286959648132324
    4. 'filename' → logprob: -7.128695964813232
    5. 'name' → logprob: -8.628695487976074
    6. '#' → logprob: -9.378695487976074
    7. ' if' → logprob: -9.378695487976074
    8. 'segment' → logprob: -10.128695487976074
    9. 'file' → logprob: -10.628695487976074
    10. ' curr' → logprob: -11.003695487976074

Token 808: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.18180008232593536
    2. 'if' → logprob: -1.806800127029419
    3. 'filename' → logprob: -6.93179988861084
    4. '#' → logprob: -7.05679988861084
    5. 'file' → logprob: -9.55679988861084
    6. 'name' → logprob: -9.93179988861084
    7. 'fname' → logprob: -10.05679988861084
    8. ' curr' → logprob: -11.43179988861084
    9. 'last' → logprob: -11.93179988861084
    10. '   ' → logprob: -12.18179988861084

Token 809: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00011224505578866228
    2. '.' → logprob: -9.875112533569336
    3. '.files' → logprob: -9.875112533569336
    4. ').' → logprob: -12.625112533569336
    5. '.has' → logprob: -12.875112533569336
    6. '.ad' → logprob: -13.625112533569336
    7. '}.' → logprob: -15.250112533569336
    8. 'add' → logprob: -15.375112533569336
    9. '].' → logprob: -15.500112533569336
    10. 'files' → logprob: -15.500112533569336

Token 810: '_file' (ID: 5933)
  Prédit: '_file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. '_filename' → logprob: -18.0
    4. 'file' → logprob: -19.625
    5. '_directory' → logprob: -21.375
    6. 'File' → logprob: -21.625
    7. '_files' → logprob: -21.75
    8. '_FILE' → logprob: -22.0
    9. '_fil' → logprob: -22.125
    10. '_File' → logprob: -22.25

Token 811: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -5.080963092041202e-06
    2. 'last' → logprob: -12.250004768371582
    3. '(' → logprob: -15.125004768371582
    4. '[last' → logprob: -18.3750057220459
    5. '(
' → logprob: -20.1250057220459
    6. ' last' → logprob: -20.2500057220459
    7. ',last' → logprob: -20.7500057220459
    8. '	last' → logprob: -21.8750057220459
    9. '((' → logprob: -22.0000057220459
    10. '(next' → logprob: -22.5000057220459

Token 812: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -4.36574100604048e-06
    2. 'seg' → logprob: -13.375004768371582
    3. '.seg' → logprob: -14.125004768371582
    4. 'name' → logprob: -14.500004768371582
    5. '.name' → logprob: -14.750004768371582
    6. '_seq' → logprob: -14.875004768371582
    7. '_sep' → logprob: -14.875004768371582
    8. '_segment' → logprob: -15.875004768371582
    9. 'Seg' → logprob: -15.875004768371582
    10. '._' → logprob: -17.250003814697266

Token 813: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.625000953674316
    3. 'name' → logprob: -15.625000953674316
    4. ').' → logprob: -15.875000953674316
    5. ' .' → logprob: -16.375
    6. ')' → logprob: -16.625
    7. '(name' → logprob: -20.25
    8. '.n' → logprob: -20.25
    9. ')
' → logprob: -20.875
    10. ' name' → logprob: -21.0

Token 814: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -12.375005722045898
    3. ' )' → logprob: -14.000005722045898
    4. '())' → logprob: -15.500005722045898
    5. '       ' → logprob: -15.625005722045898
    6. '   ' → logprob: -16.2500057220459
    7. '<|end|>' → logprob: -16.7500057220459
    8. ')return' → logprob: -17.2500057220459
    9. '()' → logprob: -18.2500057220459
    10. '')' → logprob: -18.6250057220459

Token 815: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 816: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00480259582400322
    2. 'def' → logprob: -5.379802703857422
    3. '    
' → logprob: -9.754802703857422
    4. 'class' → logprob: -10.129802703857422
    5. '<|end|>' → logprob: -10.504802703857422
    6. '
' → logprob: -10.754802703857422
    7. '```' → logprob: -11.504802703857422
    8. ' def' → logprob: -11.879802703857422
    9. 'import' → logprob: -12.004802703857422
    10. 'from' → logprob: -12.504802703857422

Token 817: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0017186157638207078
    2. '   ' → logprob: -6.376718521118164
    3. ' def' → logprob: -11.126718521118164
    4. 'class' → logprob: -14.251718521118164
    5. '
' → logprob: -14.751718521118164
    6. '    
' → logprob: -15.501718521118164
    7. '#' → logprob: -15.876718521118164
    8. 'from' → logprob: -16.001718521118164
    9. 'import' → logprob: -16.376718521118164
    10. '```' → logprob: -16.876718521118164

Token 818: ' directory' (ID: 12552)
  Prédit: 'lookup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lookup' → logprob: -0.9314792156219482
    2. 'resolve' → logprob: -1.6814792156219482
    3. 'find' → logprob: -2.5564792156219482
    4. ' find' → logprob: -2.6814792156219482
    5. 'exists' → logprob: -2.9314792156219482
    6. 'path' → logprob: -2.9314792156219482
    7. ' path' → logprob: -3.3064792156219482
    8. ' lookup' → logprob: -3.4314792156219482
    9. ' resolve' → logprob: -3.5564792156219482
    10. 'def' → logprob: -3.6814792156219482

Token 819: '_exists' (ID: 23519)
  Prédit: '_exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exists' → logprob: -0.06037326902151108
    2. '_lookup' → logprob: -3.935373306274414
    3. 's' → logprob: -4.310373306274414
    4. '_contents' → logprob: -4.560373306274414
    5. '_listing' → logprob: -5.560373306274414
    6. '_contains' → logprob: -5.685373306274414
    7. '(self' → logprob: -6.435373306274414
    8. '_at' → logprob: -6.810373306274414
    9. 'exists' → logprob: -7.060373306274414
    10. '_path' → logprob: -7.435373306274414

Token 820: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004975094925612211
    2. '(' → logprob: -7.625497341156006
    3. ' (' → logprob: -12.250497817993164
    4. '(
' → logprob: -13.000497817993164
    5. 'self' → logprob: -13.500497817993164
    6. '   ' → logprob: -14.625497817993164
    7. ' ' → logprob: -15.250497817993164
    8. '(s' → logprob: -15.750497817993164
    9. ')' → logprob: -16.500497817993164
    10. '(sel' → logprob: -17.250497817993164

Token 821: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018004190176725388
    2. '(' → logprob: -4.518004417419434
    3. 'self' → logprob: -5.643004417419434
    4. ')' → logprob: -5.893004417419434
    5. ' (' → logprob: -8.393004417419434
    6. '(
' → logprob: -8.768004417419434
    7. ')(' → logprob: -9.768004417419434
    8. ',' → logprob: -9.893004417419434
    9. 'def' → logprob: -10.143004417419434
    10. '   ' → logprob: -10.518004417419434

Token 822: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.3213118612766266
    2. 'dirname' → logprob: -1.6963118314743042
    3. 'self' → logprob: -3.0713119506835938
    4. 'dir' → logprob: -3.3213119506835938
    5. ' path' → logprob: -5.321311950683594
    6. ' dirname' → logprob: -6.196311950683594
    7. 'directory' → logprob: -7.071311950683594
    8. 'pathname' → logprob: -7.946311950683594
    9. ' self' → logprob: -8.196311950683594
    10. '   ' → logprob: -8.696311950683594

Token 823: '_segments' (ID: 142925)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8570588231086731
    2. '):' → logprob: -0.9820588231086731
    3. '):
' → logprob: -2.6070587635040283
    4. ')' → logprob: -3.2320587635040283
    5. '_segments' → logprob: -3.4820587635040283
    6. 'self' → logprob: -3.8570587635040283
    7. ',' → logprob: -4.357059001922607
    8. '   ' → logprob: -5.107059001922607
    9. '(self' → logprob: -5.232059001922607
    10. '_path' → logprob: -6.357059001922607

Token 824: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30122315883636475
    2. '(self' → logprob: -2.4262232780456543
    3. ',' → logprob: -2.5512232780456543
    4. ':' → logprob: -3.0512232780456543
    5. 'self' → logprob: -3.5512232780456543
    6. '   ' → logprob: -5.301223278045654
    7. '):
' → logprob: -5.426223278045654
    8. '       ' → logprob: -5.801223278045654
    9. '):' → logprob: -5.801223278045654
    10. '[self' → logprob: -7.051223278045654

Token 825: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -3.702754474943504e-05
    2. ' List' → logprob: -10.25003719329834
    3. '[List' → logprob: -14.12503719329834
    4. 'Tuple' → logprob: -15.00003719329834
    5. ')' → logprob: -15.25003719329834
    6. '   ' → logprob: -15.37503719329834
    7. 'list' → logprob: -16.625036239624023
    8. 'self' → logprob: -17.000036239624023
    9. '       ' → logprob: -17.125036239624023
    10. '	List' → logprob: -19.000036239624023

Token 826: '[str' (ID: 33439)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023882099776528776
    2. '[str' → logprob: -8.375238418579102
    3. ')' → logprob: -12.375238418579102
    4. '[Index' → logprob: -13.375238418579102
    5. '[path' → logprob: -14.250238418579102
    6. 'Path' → logprob: -14.500238418579102
    7. '<Path' → logprob: -14.750238418579102
    8. '[int' → logprob: -15.125238418579102
    9. '[
' → logprob: -15.625238418579102
    10. '):
' → logprob: -15.875238418579102

Token 827: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000433291686931625
    2. '])' → logprob: -7.875433444976807
    3. '   ' → logprob: -10.750432968139648
    4. '):
' → logprob: -11.125432968139648
    5. ' )' → logprob: -11.500432968139648
    6. '')' → logprob: -12.875432968139648
    7. '`)' → logprob: -13.250432968139648
    8. '       ' → logprob: -14.250432968139648
    9. '):' → logprob: -14.625432968139648
    10. '))' → logprob: -15.125432968139648

Token 828: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2156011164188385
    2. '(self' → logprob: -2.4656012058258057
    3. '->' → logprob: -3.0906012058258057
    4. 'self' → logprob: -3.5906012058258057
    5. '       ' → logprob: -3.9656012058258057
    6. ' ->' → logprob: -4.715600967407227
    7. '   ' → logprob: -4.965600967407227
    8. ')->' → logprob: -7.465600967407227
    9. ':' → logprob: -8.715600967407227
    10. 'def' → logprob: -9.590600967407227

Token 829: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -3.5597102396423e-05
    2. ' bool' → logprob: -10.250035285949707
    3. 'True' → logprob: -16.500036239624023
    4. 'False' → logprob: -16.750036239624023
    5. '(bool' → logprob: -18.125036239624023
    6. '   ' → logprob: -18.250036239624023
    7. 'Bool' → logprob: -18.250036239624023
    8. '	bool' → logprob: -18.625036239624023
    9. '<bool' → logprob: -19.125036239624023
    10. '
' → logprob: -19.250036239624023

Token 830: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04471215233206749
    2. ':
' → logprob: -3.9197120666503906
    3. '       ' → logprob: -4.044712066650391
    4. '   ' → logprob: -5.669712066650391
    5. '):' → logprob: -6.419712066650391
    6. ')' → logprob: -7.544712066650391
    7. '):
' → logprob: -8.16971206665039
    8. '[' → logprob: -8.54471206665039
    9. ',' → logprob: -8.91971206665039
    10. ':return' → logprob: -10.91971206665039

Token 831: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010098267812281847
    2. '   ' → logprob: -7.376009941101074
    3. '    ' → logprob: -8.876009941101074
    4. '[' → logprob: -9.126009941101074
    5. ' if' → logprob: -10.501009941101074
    6. ' return' → logprob: -11.376009941101074
    7. '	' → logprob: -11.376009941101074
    8. '        
' → logprob: -11.626009941101074
    9. '      ' → logprob: -12.001009941101074
    10. ' ' → logprob: -12.126009941101074

Token 832: ' """
' (ID: 7037)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.018337000161409378
    2. '       ' → logprob: -4.018336772918701
    3. ' curr' → logprob: -9.14333724975586
    4. 'if' → logprob: -9.51833724975586
    5. 'current' → logprob: -12.39333724975586
    6. 'cur' → logprob: -14.01833724975586
    7. '	curr' → logprob: -14.51833724975586
    8. '```' → logprob: -14.89333724975586
    9. 'node' → logprob: -15.01833724975586
    10. '_curr' → logprob: -16.26833724975586

Token 833: '       ' (ID: 309)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.20238232612609863
    2. '       ' → logprob: -1.7023823261260986
    3. ' curr' → logprob: -7.0773820877075195
    4. 'current' → logprob: -9.57738208770752
    5. 'if' → logprob: -10.07738208770752
    6. 'cur' → logprob: -12.32738208770752
    7. 'self' → logprob: -12.57738208770752
    8. 'node' → logprob: -13.57738208770752
    9. 'prev' → logprob: -13.95238208770752
    10. '   ' → logprob: -14.32738208770752

Token 834: ' Check' (ID: 6208)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.005049571394920349
    2. '       ' → logprob: -5.505049705505371
    3. ' curr' → logprob: -7.005049705505371
    4. 'current' → logprob: -10.505049705505371
    5. '
' → logprob: -11.255049705505371
    6. 'if' → logprob: -11.505049705505371
    7. 'node' → logprob: -11.880049705505371
    8. 'cur' → logprob: -12.505049705505371
    9. '   ' → logprob: -14.255049705505371
    10. '```' → logprob: -14.755049705505371

Token 835: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6991414427757263
    2. ' if' → logprob: -1.199141502380371
    3. '       ' → logprob: -2.324141502380371
    4. 'self' → logprob: -2.949141502380371
    5. 'curr' → logprob: -3.324141502380371
    6. 'current' → logprob: -5.324141502380371
    7. 'def' → logprob: -5.699141502380371
    8. 'len' → logprob: -6.074141502380371
    9. ' curr' → logprob: -6.699141502380371
    10. ' self' → logprob: -6.824141502380371

Token 836: ' given' (ID: 4335)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5693004131317139
    2. 'not' → logprob: -1.5693004131317139
    3. 'curr' → logprob: -1.8193004131317139
    4. 'path' → logprob: -2.069300413131714
    5. 'len' → logprob: -2.694300413131714
    6. 'the' → logprob: -2.694300413131714
    7. 'current' → logprob: -2.944300413131714
    8. 'directory' → logprob: -3.069300413131714
    9. ' not' → logprob: -3.444300413131714
    10. '
' → logprob: -5.694300651550293

Token 837: ' path' (ID: 3104)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.6140750050544739
    2. 'path' → logprob: -1.614074945449829
    3. 'directory' → logprob: -1.989074945449829
    4. 'segments' → logprob: -2.739074945449829
    5. ' path' → logprob: -3.489074945449829
    6. ' curr' → logprob: -4.614075183868408
    7. ' directory' → logprob: -4.989075183868408
    8. 'directories' → logprob: -5.989075183868408
    9. 'current' → logprob: -6.114075183868408
    10. ' segments' → logprob: -6.239075183868408

Token 838: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.05744639411568642
    2. 'segments' → logprob: -2.9324464797973633
    3. '_tokens' → logprob: -6.682446479797363
    4. 'exists' → logprob: -7.307446479797363
    5. ' exists' → logprob: -8.807446479797363
    6. '       ' → logprob: -8.932446479797363
    7. ' segments' → logprob: -9.307446479797363
    8. '_exists' → logprob: -9.557446479797363
    9. '   ' → logprob: -9.932446479797363
    10. 'tokens' → logprob: -10.307446479797363

Token 839: ' (' (ID: 350)
  Prédit: ' exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exists' → logprob: -1.5732769966125488
    2. 'exists' → logprob: -1.9482769966125488
    3. ':' → logprob: -2.323276996612549
    4. ' exist' → logprob: -2.323276996612549
    5. 'exist' → logprob: -2.573276996612549
    6. ' is' → logprob: -2.823276996612549
    7. ' represents' → logprob: -3.198276996612549
    8. ' can' → logprob: -3.448276996612549
    9. '       ' → logprob: -3.573276996612549
    10. 'rep' → logprob: -3.573276996612549

Token 840: 'directory' (ID: 53686)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.6442760229110718
    2. ')' → logprob: -0.8942760229110718
    3. ' List' → logprob: -3.1442761421203613
    4. 'segments' → logprob: -4.894276142120361
    5. '[str' → logprob: -5.269276142120361
    6. '[List' → logprob: -5.769276142120361
    7. 'from' → logprob: -6.394276142120361
    8. '[' → logprob: -7.144276142120361
    9. '):
' → logprob: -7.394276142120361
    10. 'str' → logprob: -7.519276142120361

Token 841: ' names' (ID: 8747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.516623318195343
    2. 'names' → logprob: -1.7666232585906982
    3. 'segments' → logprob: -2.5166232585906982
    4. 'exists' → logprob: -3.2666232585906982
    5. ' segments' → logprob: -3.6416232585906982
    6. '):
' → logprob: -4.016623497009277
    7. 'list' → logprob: -4.516623497009277
    8. 'name' → logprob: -4.641623497009277
    9. ' exists' → logprob: -4.766623497009277
    10. ' list' → logprob: -5.016623497009277

Token 842: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.431207682704553e-05
    2. '):
' → logprob: -10.750054359436035
    3. ' )' → logprob: -11.000054359436035
    4. ')is' → logprob: -12.250054359436035
    5. '   ' → logprob: -12.875054359436035
    6. '       ' → logprob: -13.000054359436035
    7. '),' → logprob: -13.250054359436035
    8. '[])' → logprob: -13.750054359436035
    9. '):' → logprob: -14.000054359436035
    10. ',' → logprob: -14.125054359436035

Token 843: ' corresponds' (ID: 66938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5927563905715942
    2. ' is' → logprob: -1.5927563905715942
    3. ' exists' → logprob: -1.8427563905715942
    4. 'curr' → logprob: -2.2177562713623047
    5. 'exists' → logprob: -2.8427562713623047
    6. ' exist' → logprob: -2.8427562713623047
    7. '   ' → logprob: -3.3427562713623047
    8. ' can' → logprob: -3.4677562713623047
    9. '       ' → logprob: -3.4677562713623047
    10. 'is' → logprob: -3.7177562713623047

Token 844: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.18091410398483276
    2. 'to' → logprob: -1.9309141635894775
    3. '       ' → logprob: -3.9309141635894775
    4. '           ' → logprob: -8.180913925170898
    5. 'in' → logprob: -8.430913925170898
    6. '   ' → logprob: -9.180913925170898
    7. ' in' → logprob: -9.305913925170898
    8. '               ' → logprob: -10.305913925170898
    9. ',' → logprob: -10.430913925170898
    10. ')' → logprob: -11.305913925170898

Token 845: ' an' (ID: 448)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1168266236782074
    2. 'an' → logprob: -2.3668265342712402
    3. 'existing' → logprob: -4.36682653427124
    4. ' a' → logprob: -5.86682653427124
    5. ' an' → logprob: -7.36682653427124
    6. 'True' → logprob: -9.241827011108398
    7. 'directory' → logprob: -9.241827011108398
    8. 'some' → logprob: -10.241827011108398
    9. 'existent' → logprob: -10.491827011108398
    10. ' existing' → logprob: -10.741827011108398

Token 846: ' existing' (ID: 9595)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'existing' → logprob: -0.16059991717338562
    2. ' existing' → logprob: -1.910599946975708
    3. 'absolute' → logprob: -8.910599708557129
    4. 'existent' → logprob: -9.160599708557129
    5. 'actual' → logprob: -9.910599708557129
    6. ' existent' → logprob: -10.160599708557129
    7. ' absolute' → logprob: -11.410599708557129
    8. '
' → logprob: -11.535599708557129
    9. '   ' → logprob: -12.410599708557129
    10. 'exists' → logprob: -12.660599708557129

Token 847: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.12911954522132874
    2. ' directory' → logprob: -2.129119634628296
    3. 'node' → logprob: -6.504119396209717
    4. ' node' → logprob: -8.004119873046875
    5. 'dir' → logprob: -9.004119873046875
    6. 'location' → logprob: -9.254119873046875
    7. 'path' → logprob: -9.629119873046875
    8. ' location' → logprob: -10.879119873046875
    9. 'Directory' → logprob: -11.379119873046875
    10. '
' → logprob: -11.379119873046875

Token 848: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19584578275680542
    2. ' in' → logprob: -2.32084584236145
    3. '   ' → logprob: -3.07084584236145
    4. ':' → logprob: -4.570845603942871
    5. ':
' → logprob: -4.820845603942871
    6. '.' → logprob: -5.570845603942871
    7. ' node' → logprob: -5.945845603942871
    8. 'in' → logprob: -6.070845603942871
    9. '.
' → logprob: -6.195845603942871
    10. 'node' → logprob: -6.945845603942871

Token 849: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017469348385930061
    2. '\n' → logprob: -7.126747131347656
    3. '   ' → logprob: -8.501747131347656
    4. '        
' → logprob: -8.501747131347656
    5. ' 
' → logprob: -8.876747131347656
    6. '```' → logprob: -9.126747131347656
    7. '
' → logprob: -9.626747131347656
    8. 'n' → logprob: -10.376747131347656
    9. '    
' → logprob: -10.751747131347656
    10. ')' → logprob: -10.751747131347656

Token 850: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014666540082544088
    2. '
' → logprob: -7.626466751098633
    3. '\n' → logprob: -7.876466751098633
    4. '   ' → logprob: -8.876466751098633
    5. '        
' → logprob: -9.376466751098633
    6. '```' → logprob: -9.376466751098633
    7. ')' → logprob: -9.501466751098633
    8. ' 
' → logprob: -9.626466751098633
    9. '\' → logprob: -10.501466751098633
    10. '    
' → logprob: -10.876466751098633

Token 851: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002883452922105789
    2. '   ' → logprob: -6.127883434295654
    3. 'curr' → logprob: -7.877883434295654
    4. '```' → logprob: -8.752883911132812
    5. ' curr' → logprob: -9.252883911132812
    6. '	' → logprob: -11.252883911132812
    7. '
' → logprob: -11.877883911132812
    8. '[' → logprob: -12.377883911132812
    9. '``' → logprob: -12.377883911132812
    10. '	   ' → logprob: -12.502883911132812

Token 852: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.00020938136731274426
    2. '       ' → logprob: -8.50020980834961
    3. ' curr' → logprob: -12.25020980834961
    4. 'current' → logprob: -14.50020980834961
    5. 'cur' → logprob: -15.25020980834961
    6. 'node' → logprob: -15.25020980834961
    7. 'def' → logprob: -16.00020980834961
    8. '   ' → logprob: -17.25020980834961
    9. '	curr' → logprob: -19.37520980834961
    10. '```' → logprob: -19.37520980834961

Token 853: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761492252349854
    2. '=' → logprob: -0.8261492252349854
    3. '       ' → logprob: -9.951148986816406
    4. '=None' → logprob: -10.326148986816406
    5. ' is' → logprob: -10.451148986816406
    6. '<|end|>' → logprob: -10.576148986816406
    7. '        ' → logprob: -11.576148986816406
    8. '=
' → logprob: -11.701148986816406
    9. '=self' → logprob: -11.826148986816406
    10. ')' → logprob: -11.951148986816406

Token 854: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033581978641450405
    2. ' self' → logprob: -8.000335693359375
    3. '       ' → logprob: -15.750335693359375
    4. '
' → logprob: -15.875335693359375
    5. '(self' → logprob: -17.250335693359375
    6. '[self' → logprob: -17.250335693359375
    7. '=self' → logprob: -18.250335693359375
    8. 'root' → logprob: -19.125335693359375
    9. '	self' → logprob: -19.250335693359375
    10. '   ' → logprob: -19.625335693359375

Token 855: '.root' (ID: 25375)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00863336119800806
    2. 'root' → logprob: -4.758633136749268
    3. ' self' → logprob: -11.383633613586426
    4. '
' → logprob: -12.633633613586426
    5. '.root' → logprob: -12.883633613586426
    6. '_root' → logprob: -14.508633613586426
    7. ' root' → logprob: -14.633633613586426
    8. '[self' → logprob: -15.258633613586426
    9. '(self' → logprob: -16.50863265991211
    10. '=self' → logprob: -16.63363265991211

Token 856: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09041702002286911
    2. '
' → logprob: -2.59041690826416
    3. 'for' → logprob: -5.09041690826416
    4. ' for' → logprob: -5.34041690826416
    5. '        
' → logprob: -8.34041690826416
    6. '   ' → logprob: -9.21541690826416
    7. '<|end|>' → logprob: -10.21541690826416
    8. '    
' → logprob: -10.59041690826416
    9. '  
' → logprob: -10.96541690826416
    10. '
' → logprob: -10.96541690826416

Token 857: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013630121946334839
    2. ' for' → logprob: -4.513629913330078
    3. 'for' → logprob: -6.013629913330078
    4. '   ' → logprob: -9.263629913330078
    5. '
' → logprob: -11.638629913330078
    6. '        
' → logprob: -11.763629913330078
    7. '	for' → logprob: -11.763629913330078
    8. '```' → logprob: -12.763629913330078
    9. '#' → logprob: -13.263629913330078
    10. '           ' → logprob: -13.513629913330078

Token 858: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40272441506385803
    2. 'for' (adapté à ' for') → logprob: -1.1527243852615356
    3. ' for' → logprob: -4.152724266052246
    4. '   ' → logprob: -12.402724266052246
    5. '	for' → logprob: -13.027724266052246
    6. '
' → logprob: -15.527724266052246
    7. '	' → logprob: -15.902724266052246
    8. '        
' → logprob: -16.277725219726562
    9. '           ' → logprob: -16.902725219726562
    10. ' ' → logprob: -17.527725219726562

Token 859: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.21331338584423065
    2. 'segment' → logprob: -1.713313341140747
    3. 'dirname' → logprob: -4.463313579559326
    4. 'dir' → logprob: -8.588313102722168
    5. 'name' → logprob: -9.213313102722168
    6. ' seg' → logprob: -11.338313102722168
    7. ' segment' → logprob: -12.338313102722168
    8. ' dirname' → logprob: -13.338313102722168
    9. 'part' → logprob: -14.838313102722168
    10. 'd' → logprob: -14.963313102722168

Token 860: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026834644377231598
    2. 'in' → logprob: -3.651834726333618
    3. '_name' → logprob: -8.151834487915039
    4. 'name' → logprob: -8.651834487915039
    5. ' ' → logprob: -10.776834487915039
    6. '_' → logprob: -11.276834487915039
    7. '   ' → logprob: -11.901834487915039
    8. 'seg' → logprob: -12.276834487915039
    9. '_in' → logprob: -12.401834487915039
    10. '_seg' → logprob: -12.901834487915039

Token 861: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.00038229089113883674
    2. ' path' → logprob: -7.875382423400879
    3. '   ' → logprob: -13.125382423400879
    4. '       ' → logprob: -16.375381469726562
    5. ' ' → logprob: -17.125381469726562
    6. '           ' → logprob: -17.750381469726562
    7. '	path' → logprob: -17.875381469726562
    8. '[path' → logprob: -17.875381469726562
    9. '(path' → logprob: -18.125381469726562
    10. '[' → logprob: -18.750381469726562

Token 862: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0021064826287329197
    2. 'segments' → logprob: -6.377106666564941
    3. '.se' → logprob: -8.502106666564941
    4. '_se' → logprob: -10.002106666564941
    5. '._' → logprob: -10.252106666564941
    6. 'Segments' → logprob: -10.752106666564941
    7. 'se' → logprob: -11.002106666564941
    8. 's' → logprob: -11.002106666564941
    9. '   ' → logprob: -11.752106666564941
    10. '```' → logprob: -11.877106666564941

Token 863: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2557755708694458
    2. ':' → logprob: -1.5057755708694458
    3. '       ' → logprob: -6.255775451660156
    4. '           ' → logprob: -6.505775451660156
    5. '):
' → logprob: -8.130775451660156
    6. '.' → logprob: -10.630775451660156
    7. ':
' → logprob: -10.880775451660156
    8. ' if' → logprob: -11.005775451660156
    9. ',' → logprob: -11.130775451660156
    10. ' in' → logprob: -12.005775451660156

Token 864: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002181987656513229
    2. '       ' → logprob: -9.250218391418457
    3. ':' → logprob: -10.625218391418457
    4. ' if' → logprob: -10.625218391418457
    5. 'if' → logprob: -10.750218391418457
    6. '<|end|>' → logprob: -10.875218391418457
    7. ',' → logprob: -11.875218391418457
    8. '	       ' → logprob: -12.750218391418457
    9. '<|end|>' → logprob: -12.750218391418457
    10. ':
' → logprob: -12.750218391418457

Token 865: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4293789267539978
    2. '           ' → logprob: -1.1793789863586426
    3. ' if' → logprob: -3.1793789863586426
    4. '               ' → logprob: -13.679378509521484
    5. 'If' → logprob: -14.179378509521484
    6. '       ' → logprob: -14.429378509521484
    7. 'curr' → logprob: -14.429378509521484
    8. '	       ' → logprob: -14.679378509521484
    9. '```' → logprob: -14.804378509521484
    10. '	if' → logprob: -14.929378509521484

Token 866: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4328547418117523
    2. 'not' → logprob: -1.1828547716140747
    3. 'seg' → logprob: -3.307854652404785
    4. ' seg' → logprob: -4.807854652404785
    5. ' curr' → logprob: -9.432854652404785
    6. 'curr' → logprob: -9.807854652404785
    7. '(seg' → logprob: -11.057854652404785
    8. '	not' → logprob: -11.432854652404785
    9. '   ' → logprob: -12.057854652404785
    10. '           ' → logprob: -12.807854652404785

Token 867: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0004062434600200504
    2. ' curr' → logprob: -7.875406265258789
    3. 'self' → logprob: -11.250406265258789
    4. '(curr' → logprob: -12.125406265258789
    5. 'seg' → logprob: -12.250406265258789
    6. '	curr' → logprob: -13.500406265258789
    7. '[curr' → logprob: -14.125406265258789
    8. '   ' → logprob: -16.00040626525879
    9. 'cur' → logprob: -16.25040626525879
    10. '.curr' → logprob: -16.25040626525879

Token 868: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -9.13388703338569e-06
    2. 'has' → logprob: -12.375009536743164
    3. '.direct' → logprob: -12.625009536743164
    4. '.have' → logprob: -14.500009536743164
    5. '.' → logprob: -14.625009536743164
    6. ' or' → logprob: -15.375009536743164
    7. '.get' → logprob: -15.875009536743164
    8. '_has' → logprob: -16.125009536743164
    9. '   ' → logprob: -17.375009536743164
    10. '.__' → logprob: -17.750009536743164

Token 869: '_directory' (ID: 35850)
  Prédit: '_directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_directory' → logprob: -0.0003364158037584275
    2. 'directory' → logprob: -8.000336647033691
    3. '_direct' → logprob: -14.750336647033691
    4. 'Directory' → logprob: -15.125336647033691
    5. '(directory' → logprob: -16.000335693359375
    6. 'irectory' → logprob: -18.000335693359375
    7. 'a' → logprob: -18.250335693359375
    8. '_DIRECTORY' → logprob: -18.375335693359375
    9. '_dictionary' → logprob: -18.500335693359375
    10. '_' → logprob: -18.625335693359375

Token 870: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -4.584861744660884e-05
    2. '(' → logprob: -10.000045776367188
    3. '(sess' → logprob: -16.000045776367188
    4. '(segment' → logprob: -16.125045776367188
    5. ' (' → logprob: -16.375045776367188
    6. '(s' → logprob: -16.750045776367188
    7. '(sel' → logprob: -17.250045776367188
    8. 'seg' → logprob: -18.000045776367188
    9. '(sig' → logprob: -18.625045776367188
    10. '('' → logprob: -19.000045776367188

Token 871: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008634896948933601
    2. '):' → logprob: -4.7586350440979
    3. '):
' → logprob: -11.633634567260742
    4. '           ' → logprob: -12.633634567260742
    5. ':
' → logprob: -12.883634567260742
    6. '       ' → logprob: -13.508634567260742
    7. ':' → logprob: -14.008634567260742
    8. ')' → logprob: -14.008634567260742
    9. ' ):
' → logprob: -14.008634567260742
    10. ''):
' → logprob: -14.508634567260742

Token 872: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008365504327230155
    2. ':
' → logprob: -7.500836372375488
    3. 'return' → logprob: -9.125836372375488
    4. ' return' → logprob: -9.250836372375488
    5. ':' → logprob: -9.875836372375488
    6. '           ' → logprob: -11.000836372375488
    7. ':return' → logprob: -12.000836372375488
    8. '):
' → logprob: -13.625836372375488
    9. '```' → logprob: -14.125836372375488
    10. '              ' → logprob: -14.125836372375488

Token 873: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39284759759902954
    2. ' return' → logprob: -1.1428475379943848
    3. '               ' → logprob: -5.142847537994385
    4. '                   ' → logprob: -9.392848014831543
    5. '           ' → logprob: -10.517848014831543
    6. '
' → logprob: -12.142848014831543
    7. ' 
' → logprob: -14.142848014831543
    8. '	return' → logprob: -14.892848014831543
    9. '                       ' → logprob: -15.267848014831543
    10. '   ' → logprob: -15.392848014831543

Token 874: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.5491004129871726e-05
    2. ' False' → logprob: -10.000045776367188
    3. '   ' → logprob: -21.500045776367188
    4. '(False' → logprob: -21.750045776367188
    5. 'false' → logprob: -22.625045776367188
    6. '=False' → logprob: -23.000045776367188
    7. 'True' → logprob: -23.250045776367188
    8. '_false' → logprob: -25.625045776367188
    9. '       ' → logprob: -26.125045776367188
    10. '    ' → logprob: -26.375045776367188

Token 875: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007191036129370332
    2. '
' → logprob: -7.50071907043457
    3. '            
' → logprob: -8.87571907043457
    4. '    
' → logprob: -11.50071907043457
    5. '               ' → logprob: -12.75071907043457
    6. ',' → logprob: -13.12571907043457
    7. '       ' → logprob: -13.12571907043457
    8. '.' → logprob: -13.37571907043457
    9. ',
' → logprob: -13.75071907043457
    10. '\n' → logprob: -13.75071907043457

Token 876: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.774276774493046e-05
    2. '
' → logprob: -10.375038146972656
    3. '               ' → logprob: -12.750038146972656
    4. '       ' → logprob: -13.375038146972656
    5. 'curr' → logprob: -14.000038146972656
    6. '            
' → logprob: -14.750038146972656
    7. 'return' → logprob: -15.000038146972656
    8. '          ' → logprob: -16.375038146972656
    9. '                   ' → logprob: -16.625038146972656
    10. 'current' → logprob: -16.875038146972656

Token 877: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.08034338057041168
    2. '       ' → logprob: -3.08034348487854
    3. '           ' → logprob: -3.58034348487854
    4. ' curr' → logprob: -5.705343246459961
    5. '
' → logprob: -11.080343246459961
    6. 'current' → logprob: -11.205343246459961
    7. 'cur' → logprob: -11.830343246459961
    8. '   ' → logprob: -11.830343246459961
    9. '[curr' → logprob: -11.955343246459961
    10. '	curr' → logprob: -12.080343246459961

Token 878: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017021986423060298
    2. ' =' → logprob: -6.376702308654785
    3. '=current' → logprob: -17.87670135498047
    4. '=re' → logprob: -19.25170135498047
    5. '=get' → logprob: -19.25170135498047
    6. '=

' → logprob: -20.00170135498047
    7. '=
' → logprob: -20.12670135498047
    8. '＝' → logprob: -20.12670135498047
    9. '.=' → logprob: -20.12670135498047
    10. 'curr' → logprob: -20.25170135498047

Token 879: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0031808018684387207
    2. ' curr' → logprob: -5.753180980682373
    3. 'cur' → logprob: -12.753180503845215
    4. 'current' → logprob: -16.12818145751953
    5. '[curr' → logprob: -17.37818145751953
    6. '	curr' → logprob: -17.75318145751953
    7. '(curr' → logprob: -17.87818145751953
    8. '.curr' → logprob: -18.50318145751953
    9. 'c' → logprob: -18.62818145751953
    10. '_curr' → logprob: -20.25318145751953

Token 880: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -6.704273118884885e-07
    2. 'get' → logprob: -15.000000953674316
    3. '.direct' → logprob: -15.250000953674316
    4. '.has' → logprob: -17.0
    5. '
' → logprob: -18.5
    6. '.' → logprob: -18.625
    7. '   ' → logprob: -18.75
    8. 'direct' → logprob: -18.875
    9. ' .' → logprob: -19.5
    10. 's' → logprob: -20.0

Token 881: '_directory' (ID: 35850)
  Prédit: '_directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_directory' → logprob: -0.00021366903092712164
    2. 'directory' → logprob: -8.750213623046875
    3. '(seg' → logprob: -9.875213623046875
    4. 'seg' → logprob: -13.375213623046875
    5. 'Directory' → logprob: -13.375213623046875
    6. '   ' → logprob: -16.375213623046875
    7. '           ' → logprob: -16.500213623046875
    8. '_segment' → logprob: -16.500213623046875
    9. '_DIRECTORY' → logprob: -16.625213623046875
    10. 'irectory' → logprob: -16.875213623046875

Token 882: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.000000953674316
    3. 'seg' → logprob: -16.5
    4. '(se' → logprob: -16.875
    5. '(segment' → logprob: -17.375
    6. '(sess' → logprob: -17.625
    7. '(sig' → logprob: -17.875
    8. '(sel' → logprob: -18.125
    9. '(sec' → logprob: -20.125
    10. '(s' → logprob: -20.5

Token 883: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.629921436891891e-05
    2. ')
' → logprob: -11.00002670288086
    3. ' )' → logprob: -12.62502670288086
    4. '           ' → logprob: -13.00002670288086
    5. '       ' → logprob: -13.12502670288086
    6. ')return' → logprob: -14.12502670288086
    7. '   ' → logprob: -15.25002670288086
    8. '[' → logprob: -15.37502670288086
    9. ').' → logprob: -16.12502670288086
    10. ')`' → logprob: -16.12502670288086

Token 884: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006844549905508757
    2. 'return' → logprob: -5.756844520568848
    3. '        
' → logprob: -5.881844520568848
    4. '
' → logprob: -8.131844520568848
    5. '    
' → logprob: -8.631844520568848
    6. ' return' → logprob: -8.881844520568848
    7. '<|end|>' → logprob: -9.131844520568848
    8. '  
' → logprob: -9.381844520568848
    9. '            
' → logprob: -11.631844520568848
    10. ',' → logprob: -12.006844520568848

Token 885: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47620460391044617
    2. '       ' → logprob: -0.9762046337127686
    3. ' return' → logprob: -6.2262043952941895
    4. '   ' → logprob: -8.976204872131348
    5. '	return' → logprob: -11.101204872131348
    6. '
' → logprob: -13.351204872131348
    7. ')return' → logprob: -13.976204872131348
    8. ':return' → logprob: -13.976204872131348
    9. '	' → logprob: -14.101204872131348
    10. '{return' → logprob: -14.351204872131348

Token 886: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007099286303855479
    2. ' True' → logprob: -7.2507100105285645
    3. '   ' → logprob: -19.250709533691406
    4. '(True' → logprob: -21.000709533691406
    5. 'true' → logprob: -21.125709533691406
    6. 'curr' → logprob: -21.375709533691406
    7. 'False' → logprob: -22.125709533691406
    8. '=True' → logprob: -22.375709533691406
    9. '       ' → logprob: -23.375709533691406
    10. '
' → logprob: -23.625709533691406

Token 887: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.0537833645939827
    2. '   ' → logprob: -3.428783416748047
    3. '<|end|>' → logprob: -4.053783416748047
    4. '
' → logprob: -6.553783416748047
    5. '  
' → logprob: -7.553783416748047
    6. '        
' → logprob: -8.303783416748047
    7. '<|end|>' → logprob: -9.053783416748047
    8. '   
' → logprob: -9.428783416748047
    9. '
    
' → logprob: -10.053783416748047
    10. '    
    
' → logprob: -10.303783416748047

Token 888: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006743439007550478
    2. '   ' → logprob: -5.006743431091309
    3. ' def' → logprob: -10.631743431091309
    4. 'class' → logprob: -13.756743431091309
    5. '@' → logprob: -14.131743431091309
    6. '```' → logprob: -14.381743431091309
    7. '#' → logprob: -14.881743431091309
    8. '	def' → logprob: -15.256743431091309
    9. '<|end|>' → logprob: -15.381743431091309
    10. '
' → logprob: -15.381743431091309

Token 889: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -15.5
    3. '   ' → logprob: -16.625
    4. '
' → logprob: -18.25
    5. '    
' → logprob: -20.125
    6. '```' → logprob: -21.75
    7. 'class' → logprob: -22.0
    8. '#' → logprob: -22.625
    9. '	def' → logprob: -23.75
    10. ' ' → logprob: -23.75

Token 890: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.015644708648324013
    2. ' file' → logprob: -4.265644550323486
    3. 'get' → logprob: -7.640644550323486
    4. 'find' → logprob: -7.640644550323486
    5. 'has' → logprob: -8.140645027160645
    6. '_file' → logprob: -9.890645027160645
    7. 'lookup' → logprob: -10.015645027160645
    8. 'resolve' → logprob: -10.140645027160645
    9. ' find' → logprob: -10.640645027160645
    10. ' has' → logprob: -10.890645027160645

Token 891: '_exists' (ID: 23519)
  Prédit: '_exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exists' → logprob: -5.0020742492051795e-05
    2. 's' → logprob: -10.625049591064453
    3. 'exists' → logprob: -11.000049591064453
    4. 'Exists' → logprob: -12.875049591064453
    5. '_exist' → logprob: -13.125049591064453
    6. '_EXISTS' → logprob: -13.875049591064453
    7. '_in' → logprob: -14.250049591064453
    8. '_has' → logprob: -14.500049591064453
    9. 'def' → logprob: -15.125049591064453
    10. '_contains' → logprob: -15.375049591064453

Token 892: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.625004768371582
    3. 'self' → logprob: -14.125004768371582
    4. ' (' → logprob: -14.875004768371582
    5. '(
' → logprob: -15.500004768371582
    6. '   ' → logprob: -17.000003814697266
    7. '(s' → logprob: -17.500003814697266
    8. '
' → logprob: -17.875003814697266
    9. 'def' → logprob: -18.375003814697266
    10. ' ' → logprob: -18.375003814697266

Token 893: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006041454034857452
    2. 'self' → logprob: -8.125603675842285
    3. ')' → logprob: -9.125603675842285
    4. '(' → logprob: -9.750603675842285
    5. ')(' → logprob: -10.375603675842285
    6. '(
' → logprob: -10.375603675842285
    7. ',' → logprob: -10.375603675842285
    8. ' (' → logprob: -11.375603675842285
    9. '   ' → logprob: -12.000603675842285
    10. '<|end|>' → logprob: -12.250603675842285

Token 894: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.10445596277713776
    2. 'self' → logprob: -2.6044559478759766
    3. ' path' → logprob: -3.7294559478759766
    4. ' self' → logprob: -6.854455947875977
    5. '       ' → logprob: -9.854455947875977
    6. '   ' → logprob: -10.229455947875977
    7. 'filepath' → logprob: -10.604455947875977
    8. 'file' → logprob: -10.979455947875977
    9. 'pathname' → logprob: -11.604455947875977
    10. 'filename' → logprob: -11.979455947875977

Token 895: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.01526778656989336
    2. '_exists' → logprob: -4.265267848968506
    3. 'self' → logprob: -8.390267372131348
    4. 'exists' → logprob: -8.890267372131348
    5. '(self' → logprob: -9.015267372131348
    6. ')' → logprob: -9.265267372131348
    7. ')_' → logprob: -9.390267372131348
    8. '_' → logprob: -9.515267372131348
    9. 'Segments' → logprob: -9.640267372131348
    10. 'segments' → logprob: -9.890267372131348

Token 896: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06493473798036575
    2. '       ' → logprob: -2.939934730529785
    3. 'self' → logprob: -5.689934730529785
    4. '(self' → logprob: -5.814934730529785
    5. '   ' → logprob: -6.314934730529785
    6. ',' → logprob: -7.439934730529785
    7. ')' → logprob: -7.689934730529785
    8. ' self' → logprob: -8.439934730529785
    9. '           ' → logprob: -8.814934730529785
    10. '[self' → logprob: -8.814934730529785

Token 897: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00407923199236393
    2. ' List' → logprob: -5.504079341888428
    3. ')' → logprob: -14.87907886505127
    4. '[List' → logprob: -15.25407886505127
    5. '   ' → logprob: -16.129079818725586
    6. 'Set' → logprob: -17.254079818725586
    7. 'list' → logprob: -17.379079818725586
    8. '       ' → logprob: -17.754079818725586
    9. ' list' → logprob: -18.754079818725586
    10. ' ' → logprob: -18.879079818725586

Token 898: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.7697225252486533e-06
    2. 'str' → logprob: -12.625003814697266
    3. '(str' → logprob: -15.750003814697266
    4. '[' → logprob: -16.125003814697266
    5. '   ' → logprob: -17.250003814697266
    6. 'Str' → logprob: -17.625003814697266
    7. '[String' → logprob: -17.750003814697266
    8. ')' → logprob: -17.750003814697266
    9. '       ' → logprob: -18.000003814697266
    10. '=str' → logprob: -18.125003814697266

Token 899: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6342498660087585
    2. ')' → logprob: -0.7592498660087585
    3. '[str' → logprob: -7.009249687194824
    4. '])' → logprob: -8.134249687194824
    5. '   ' → logprob: -8.634249687194824
    6. ' )' → logprob: -9.134249687194824
    7. ' ,' → logprob: -9.134249687194824
    8. ']' → logprob: -10.759249687194824
    9. '       ' → logprob: -11.384249687194824
    10. '[' → logprob: -12.009249687194824

Token 900: ' filename' (ID: 8246)
  Prédit: 'filename'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filename' → logprob: -0.008638561703264713
    2. ' filename' → logprob: -5.008638381958008
    3. 'file' → logprob: -6.258638381958008
    4. ' file' → logprob: -12.008638381958008
    5. 'filepath' → logprob: -14.258638381958008
    6. 'basename' → logprob: -15.633638381958008
    7. '   ' → logprob: -15.883638381958008
    8. '	filename' → logprob: -15.883638381958008
    9. 'fname' → logprob: -16.508638381958008
    10. ' ' → logprob: -17.008638381958008

Token 901: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00040540905320085585
    2. ')' → logprob: -8.000405311584473
    3. '   ' → logprob: -9.875405311584473
    4. ':str' → logprob: -11.250405311584473
    5. '       ' → logprob: -13.625405311584473
    6. 'str' → logprob: -14.000405311584473
    7. '[str' → logprob: -14.375405311584473
    8. '  ' → logprob: -14.750405311584473
    9. 'filename' → logprob: -15.000405311584473
    10. '```' → logprob: -15.125405311584473

Token 902: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03810024634003639
    2. ' str' → logprob: -3.288100242614746
    3. ')' → logprob: -10.538100242614746
    4. '   ' → logprob: -11.288100242614746
    5. '[str' → logprob: -11.413100242614746
    6. 'Str' → logprob: -12.788100242614746
    7. 'Optional' → logprob: -13.038100242614746
    8. 's' → logprob: -14.038100242614746
    9. '    ' → logprob: -14.538100242614746
    10. '(str' → logprob: -15.038100242614746

Token 903: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ' )' → logprob: -12.500005722045898
    3. '   ' → logprob: -13.250005722045898
    4. '):
' → logprob: -17.5000057220459
    5. '       ' → logprob: -17.6250057220459
    6. '')' → logprob: -18.1250057220459
    7. '`)' → logprob: -18.1250057220459
    8. ')->' → logprob: -18.7500057220459
    9. '")' → logprob: -19.1250057220459
    10. ' ' → logprob: -19.6250057220459

Token 904: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.32704949378967285
    2. ')' → logprob: -1.5770494937896729
    3. '->' → logprob: -2.702049493789673
    4. '   ' → logprob: -5.577049255371094
    5. '       ' → logprob: -6.577049255371094
    6. ':' → logprob: -9.827049255371094
    7. ')->' → logprob: -10.077049255371094
    8. ' ' → logprob: -11.702049255371094
    9. '    ' → logprob: -12.327049255371094
    10. '  ' → logprob: -12.702049255371094

Token 905: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00020354038861114532
    2. ' bool' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.50020408630371
    4. 'Bool' → logprob: -18.12520408630371
    5. '	bool' → logprob: -18.62520408630371
    6. 'True' → logprob: -18.62520408630371
    7. '<bool' → logprob: -18.62520408630371
    8. ' ' → logprob: -19.25020408630371
    9. '```' → logprob: -20.50020408630371
    10. '  ' → logprob: -20.62520408630371

Token 906: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20896562933921814
    2. ':
' → logprob: -1.9589656591415405
    3. ':' → logprob: -3.708965539932251
    4. '(self' → logprob: -4.33396577835083
    5. ')' → logprob: -5.20896577835083
    6. '   ' → logprob: -5.83396577835083
    7. '):
' → logprob: -6.95896577835083
    8. 'self' → logprob: -8.458965301513672
    9. '[' → logprob: -9.583965301513672
    10. '           ' → logprob: -9.708965301513672

Token 907: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.304016228066757e-05
    2. '[' → logprob: -10.375082969665527
    3. '<|end|>' → logprob: -10.750082969665527
    4. '   ' → logprob: -11.250082969665527
    5. '        
' → logprob: -13.000082969665527
    6. '{' → logprob: -13.125082969665527
    7. ' ' → logprob: -13.625082969665527
    8. ')' → logprob: -13.875082969665527
    9. ' {' → logprob: -14.125082969665527
    10. ' return' → logprob: -14.125082969665527

Token 908: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04128726199269295
    2. 'curr' → logprob: -3.5412871837615967
    3. '
' → logprob: -4.541287422180176
    4. ' curr' → logprob: -7.166287422180176
    5. '{
' → logprob: -11.291287422180176
    6. '```' → logprob: -11.916287422180176
    7. 'current' → logprob: -12.666287422180176
    8. '	curr' → logprob: -12.791287422180176
    9. '   ' → logprob: -12.791287422180176
    10. '        
' → logprob: -13.166287422180176

Token 909: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.796184723294573e-06
    2. 'curr' → logprob: -12.625005722045898
    3. '
' → logprob: -13.250005722045898
    4. '   ' → logprob: -15.000005722045898
    5. 'current' → logprob: -16.2500057220459
    6. 'def' → logprob: -16.5000057220459
    7. '        
' → logprob: -17.2500057220459
    8. '      ' → logprob: -17.3750057220459
    9. '           ' → logprob: -17.7500057220459
    10. '```' → logprob: -18.1250057220459

Token 910: ' Check' (ID: 6208)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.018011566251516342
    2. '       ' → logprob: -4.643011569976807
    3. 'Check' (adapté à ' Check') → logprob: -4.893011569976807
    4. ' curr' → logprob: -7.518011569976807
    5. '
' → logprob: -8.768011093139648
    6. 'Checking' → logprob: -12.268011093139648
    7. 'Curr' → logprob: -12.643011093139648
    8. '   ' → logprob: -12.893011093139648
    9. '        
' → logprob: -13.268011093139648
    10. '#' → logprob: -13.268011093139648

Token 911: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0011442647082731128
    2. 'if' → logprob: -7.3761444091796875
    3. '       ' → logprob: -7.6261444091796875
    4. 'self' → logprob: -11.001144409179688
    5. ' self' → logprob: -12.001144409179688
    6. '(self' → logprob: -12.751144409179688
    7. '   ' → logprob: -13.876144409179688
    8. ' whether' → logprob: -13.876144409179688
    9. '        ' → logprob: -14.501144409179688
    10. 'If' → logprob: -14.626144409179688

Token 912: ' given' (ID: 4335)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.4194675087928772
    2. ' given' → logprob: -2.0444674491882324
    3. 'given' → logprob: -3.0444674491882324
    4. 'filename' → logprob: -3.1694674491882324
    5. 'self' → logprob: -3.4194674491882324
    6. ' curr' → logprob: -3.6694674491882324
    7. 'file' → logprob: -3.7944674491882324
    8. 'the' → logprob: -4.169467449188232
    9. ' self' → logprob: -4.669467449188232
    10. ' the' → logprob: -5.169467449188232

Token 913: ' directory' (ID: 12552)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.016479576006531715
    2. ' path' → logprob: -4.1414794921875
    3. 'directory' → logprob: -8.7664794921875
    4. 'self' → logprob: -9.1414794921875
    5. 'len' → logprob: -10.1414794921875
    6. 'filename' → logprob: -10.6414794921875
    7. '   ' → logprob: -10.7664794921875
    8. '(path' → logprob: -11.2664794921875
    9. 'file' → logprob: -11.2664794921875
    10. 'segments' → logprob: -11.3914794921875

Token 914: ' path' (ID: 3104)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.00220687803812325
    2. 'segments' → logprob: -6.877206802368164
    3. 'path' → logprob: -7.877206802368164
    4. '_exists' → logprob: -7.877206802368164
    5. 'exists' → logprob: -8.752206802368164
    6. 's' → logprob: -9.877206802368164
    7. '
' → logprob: -10.002206802368164
    8. '_path' → logprob: -10.252206802368164
    9. ' path' → logprob: -10.627206802368164
    10. ''s' → logprob: -10.877206802368164

Token 915: ' +' (ID: 659)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0022749120835214853
    2. 'segments' → logprob: -6.127274990081787
    3. '       ' → logprob: -10.627274513244629
    4. '_tokens' → logprob: -10.627274513244629
    5. ' segments' → logprob: -11.127274513244629
    6. '
' → logprob: -12.002274513244629
    7. '_' → logprob: -12.127274513244629
    8. '   ' → logprob: -12.502274513244629
    9. ',' → logprob: -13.377274513244629
    10. '_parts' → logprob: -13.502274513244629

Token 916: ' filename' (ID: 8246)
  Prédit: 'filename'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filename' → logprob: -0.20195849239826202
    2. ' filename' → logprob: -1.7019585371017456
    3. 'file' → logprob: -7.576958656311035
    4. ' file' → logprob: -10.576958656311035
    5. '(filename' → logprob: -12.326958656311035
    6. '[' → logprob: -13.826958656311035
    7. '[file' → logprob: -14.576958656311035
    8. '	filename' → logprob: -14.576958656311035
    9. 'the' → logprob: -15.076958656311035
    10. '
' → logprob: -15.201958656311035

Token 917: ' exists' (ID: 13031)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.2759292125701904
    2. '_segments' → logprob: -1.2759292125701904
    3. ' exists' → logprob: -2.1509292125701904
    4. ' contains' → logprob: -2.4009292125701904
    5. ' is' → logprob: -2.9009292125701904
    6. ' segments' → logprob: -3.1509292125701904
    7. 'segments' → logprob: -3.4009292125701904
    8. 'exists' → logprob: -3.6509292125701904
    9. ' has' → logprob: -3.7759292125701904
    10. ')' → logprob: -4.2759294509887695

Token 918: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004227154888212681
    2. '   ' → logprob: -6.504227161407471
    3. 'self' → logprob: -6.879227161407471
    4. '(self' → logprob: -6.879227161407471
    5. '           ' → logprob: -8.754226684570312
    6. ',' → logprob: -9.254226684570312
    7. '```' → logprob: -9.629226684570312
    8. ' self' → logprob: -9.629226684570312
    9. ')' → logprob: -9.879226684570312
    10. ' in' → logprob: -10.129226684570312

Token 919: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.062496501952409744
    2. 'file' → logprob: -3.4374964237213135
    3. ' a' → logprob: -3.6874964237213135
    4. ' file' → logprob: -5.687496662139893
    5. '
' → logprob: -12.687496185302734
    6. ' True' → logprob: -12.687496185302734
    7. 'True' → logprob: -12.937496185302734
    8. 'afile' → logprob: -13.312496185302734
    9. 'existing' → logprob: -13.937496185302734
    10. 'self' → logprob: -13.937496185302734

Token 920: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.0004309076175559312
    2. ' file' → logprob: -7.750431060791016
    3. '
' → logprob: -15.375431060791016
    4. 'f' → logprob: -17.875431060791016
    5. 'True' → logprob: -18.750431060791016
    6. 'filepath' → logprob: -18.875431060791016
    7. 'filename' → logprob: -19.250431060791016
    8. '   ' → logprob: -19.625431060791016
    9. 'existing' → logprob: -20.000431060791016
    10. 'fil' → logprob: -20.000431060791016

Token 921: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18745456635951996
    2. ' in' → logprob: -1.8124545812606812
    3. 'in' → logprob: -5.687454700469971
    4. '   ' → logprob: -6.187454700469971
    5. '.
' → logprob: -6.687454700469971
    6. '.' → logprob: -7.812454700469971
    7. '```' → logprob: -8.937454223632812
    8. '
' → logprob: -9.312454223632812
    9. ' at' → logprob: -9.562454223632812
    10. ',' → logprob: -9.812454223632812

Token 922: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.204720582696609e-05
    2. '   ' → logprob: -10.875052452087402
    3. '<|end|>' → logprob: -11.500052452087402
    4. '
' → logprob: -11.750052452087402
    5. '```' → logprob: -12.250052452087402
    6. '        
' → logprob: -12.625052452087402
    7. ')' → logprob: -13.500052452087402
    8. '           ' → logprob: -13.625052452087402
    9. '[' → logprob: -14.000052452087402
    10. '<|end|>' → logprob: -14.125052452087402

Token 923: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015681622608099133
    2. '
' → logprob: -9.25015640258789
    3. '   ' → logprob: -10.12515640258789
    4. ' for' → logprob: -12.25015640258789
    5. '```' → logprob: -12.37515640258789
    6. ')' → logprob: -13.00015640258789
    7. '):
' → logprob: -13.00015640258789
    8. '        
' → logprob: -13.25015640258789
    9. '           ' → logprob: -14.12515640258789
    10. ' if' → logprob: -14.50015640258789

Token 924: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.35706390615087e-05
    2. 'curr' → logprob: -10.875033378601074
    3. '   ' → logprob: -11.250033378601074
    4. ' curr' → logprob: -14.000033378601074
    5. '
' → logprob: -14.375033378601074
    6. '           ' → logprob: -16.25003433227539
    7. '```' → logprob: -17.00003433227539
    8. ' for' → logprob: -17.37503433227539
    9. 'current' → logprob: -17.62503433227539
    10. 'for' → logprob: -18.00003433227539

Token 925: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.014239783398807049
    2. '       ' → logprob: -4.26423978805542
    3. ' curr' → logprob: -9.514239311218262
    4. '	curr' → logprob: -13.639239311218262
    5. '   ' → logprob: -14.889239311218262
    6. '
' → logprob: -14.889239311218262
    7. 'def' → logprob: -15.264239311218262
    8. '(curr' → logprob: -16.264240264892578
    9. '_curr' → logprob: -16.514240264892578
    10. '.curr' → logprob: -16.764240264892578

Token 926: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10029777884483337
    2. '=' → logprob: -2.350297689437866
    3. '       ' → logprob: -9.350297927856445
    4. '   ' → logprob: -12.850297927856445
    5. ':' → logprob: -14.975297927856445
    6. '=self' → logprob: -15.350297927856445
    7. 'def' → logprob: -15.475297927856445
    8. 'import' → logprob: -15.600297927856445
    9. '    ' → logprob: -15.725297927856445
    10. '        ' → logprob: -16.725297927856445

Token 927: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00671584764495492
    2. ' self' → logprob: -5.006715774536133
    3. '       ' → logprob: -14.631715774536133
    4. '(self' → logprob: -17.256715774536133
    5. '[self' → logprob: -17.756715774536133
    6. '	self' → logprob: -18.006715774536133
    7. '=self' → logprob: -18.506715774536133
    8. '   ' → logprob: -18.756715774536133
    9. 'root' → logprob: -18.756715774536133
    10. '
' → logprob: -18.756715774536133

Token 928: '.root' (ID: 25375)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.15971671044826508
    2. '.root' → logprob: -2.0347166061401367
    3. 'self' → logprob: -4.409716606140137
    4. ' root' → logprob: -5.409716606140137
    5. '_root' → logprob: -9.284716606140137
    6. ' self' → logprob: -9.534716606140137
    7. '   ' → logprob: -11.034716606140137
    8. '	root' → logprob: -11.159716606140137
    9. '=root' → logprob: -11.409716606140137
    10. '[root' → logprob: -11.409716606140137

Token 929: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003964178264141083
    2. 'for' → logprob: -6.128963947296143
    3. ' for' → logprob: -6.503963947296143
    4. '<|end|>' → logprob: -8.7539644241333
    5. '
' → logprob: -9.5039644241333
    6. '   ' → logprob: -11.5039644241333
    7. ',' → logprob: -11.5039644241333
    8. '        
' → logprob: -12.1289644241333
    9. '<|end|>' → logprob: -12.6289644241333
    10. ' =' → logprob: -13.2539644241333

Token 930: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044675805838778615
    2. ' for' → logprob: -8.375446319580078
    3. 'for' → logprob: -8.500446319580078
    4. '
' → logprob: -11.750446319580078
    5. '   ' → logprob: -13.250446319580078
    6. '           ' → logprob: -14.125446319580078
    7. ',' → logprob: -14.250446319580078
    8. '<|end|>' → logprob: -14.625446319580078
    9. '```' → logprob: -15.500446319580078
    10. '        
' → logprob: -15.750446319580078

Token 931: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013735649408772588
    2. '       ' → logprob: -6.751373767852783
    3. ' for' → logprob: -8.501373291015625
    4. '	for' → logprob: -15.626373291015625
    5. '
' → logprob: -17.876373291015625
    6. '   ' → logprob: -18.251373291015625
    7. '        
' → logprob: -18.751373291015625
    8. '```' → logprob: -19.251373291015625
    9. 'For' → logprob: -19.876373291015625
    10. '           ' → logprob: -20.876373291015625

Token 932: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0001415618316968903
    2. 'segment' → logprob: -9.250141143798828
    3. ' seg' → logprob: -10.000141143798828
    4. ' segment' → logprob: -17.125141143798828
    5. '(seg' → logprob: -18.625141143798828
    6. 'part' → logprob: -20.500141143798828
    7. 'dir' → logprob: -21.250141143798828
    8. '```' → logprob: -22.125141143798828
    9. '_seg' → logprob: -22.250141143798828
    10. 's' → logprob: -22.250141143798828

Token 933: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010384062770754099
    2. 'in' → logprob: -6.876038551330566
    3. '       ' → logprob: -13.126038551330566
    4. '        ' → logprob: -13.376038551330566
    5. '           ' → logprob: -14.001038551330566
    6. '   ' → logprob: -15.501038551330566
    7. '	in' → logprob: -15.626038551330566
    8. '_' → logprob: -16.00103759765625
    9. ',' → logprob: -16.12603759765625
    10. ' ' → logprob: -16.62603759765625

Token 934: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -3.5597102396423e-05
    2. ' path' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.500036239624023
    4. ' ' → logprob: -18.625036239624023
    5. '(path' → logprob: -18.750036239624023
    6. '[path' → logprob: -19.000036239624023
    7. '
' → logprob: -19.250036239624023
    8. '	path' → logprob: -19.625036239624023
    9. '           ' → logprob: -20.000036239624023
    10. '       ' → logprob: -20.500036239624023

Token 935: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.012645847164094448
    2. 'path' → logprob: -5.137645721435547
    3. 'segments' → logprob: -5.762645721435547
    4. 'Segments' → logprob: -7.012645721435547
    5. ' in' → logprob: -7.387645721435547
    6. '       ' → logprob: -7.512645721435547
    7. '           ' → logprob: -7.512645721435547
    8. 'in' → logprob: -8.012645721435547
    9. '   ' → logprob: -8.512645721435547
    10. ':
' → logprob: -9.637645721435547

Token 936: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17858801782131195
    2. ':' → logprob: -2.3035879135131836
    3. '           ' → logprob: -2.8035879135131836
    4. '       ' → logprob: -6.053587913513184
    5. '):
' → logprob: -7.928587913513184
    6. '   ' → logprob: -8.553587913513184
    7. ' in' → logprob: -10.428587913513184
    8. ',' → logprob: -10.553587913513184
    9. ' :
' → logprob: -10.678587913513184
    10. ' if' → logprob: -11.428587913513184

Token 937: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005385418422520161
    2. '       ' → logprob: -5.630385398864746
    3. ' if' → logprob: -7.005385398864746
    4. ':
' → logprob: -7.755385398864746
    5. ':' → logprob: -8.755385398864746
    6. '   ' → logprob: -9.630385398864746
    7. '               ' → logprob: -9.755385398864746
    8. 'if' → logprob: -9.880385398864746
    9. '
' → logprob: -10.505385398864746
    10. '        ' → logprob: -10.755385398864746

Token 938: ' curr' (ID: 10495)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001662324066273868
    2. ' if' → logprob: -6.501662254333496
    3. '           ' → logprob: -8.751662254333496
    4. '
' → logprob: -13.501662254333496
    5. '       ' → logprob: -14.751662254333496
    6. '```' → logprob: -18.251663208007812
    7. 'curr' (adapté à ' curr') → logprob: -18.626663208007812
    8. '   ' → logprob: -18.626663208007812
    9. '               ' → logprob: -18.751663208007812
    10. '         ' → logprob: -19.501663208007812

Token 939: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804321587085724
    2. ' =' → logprob: -3.288043260574341
    3. 'if' → logprob: -14.288043022155762
    4. '=get' → logprob: -14.413043022155762
    5. '=None' → logprob: -15.663043022155762
    6. ' if' → logprob: -15.913043022155762
    7. '=current' → logprob: -16.288043975830078
    8. '           ' → logprob: -16.538043975830078
    9. '=
' → logprob: -16.788043975830078
    10. '   ' → logprob: -18.038043975830078

Token 940: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.043035272508859634
    2. ' curr' → logprob: -3.1680352687835693
    3. 'None' → logprob: -11.043035507202148
    4. '(curr' → logprob: -11.918035507202148
    5. ' None' → logprob: -12.418035507202148
    6. '	curr' → logprob: -12.543035507202148
    7. '.curr' → logprob: -12.918035507202148
    8. '[curr' → logprob: -13.543035507202148
    9. '   ' → logprob: -14.668035507202148
    10. ' ' → logprob: -14.793035507202148

Token 941: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0005699523026123643
    2. 'if' → logprob: -7.875569820404053
    3. 'get' → logprob: -8.625570297241211
    4. ' if' → logprob: -12.875570297241211
    5. '.direct' → logprob: -13.125570297241211
    6. '       ' → logprob: -13.250570297241211
    7. '
' → logprob: -13.625570297241211
    8. 'direct' → logprob: -13.750570297241211
    9. '   ' → logprob: -14.500570297241211
    10. '.' → logprob: -14.750570297241211

Token 942: '_directory' (ID: 35850)
  Prédit: '_directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_directory' → logprob: -0.00024335073248948902
    2. 'Directory' → logprob: -8.375243186950684
    3. 'seg' → logprob: -12.625243186950684
    4. '(seg' → logprob: -12.625243186950684
    5. 'directory' → logprob: -12.750243186950684
    6. '_DIRECTORY' → logprob: -13.375243186950684
    7. 'irectory' → logprob: -14.125243186950684
    8. '_segment' → logprob: -15.500243186950684
    9. '.Directory' → logprob: -16.000244140625
    10. '   ' → logprob: -16.250244140625

Token 943: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -1.5048530030981055e-06
    2. 'seg' → logprob: -13.500001907348633
    3. '(segment' → logprob: -17.125001907348633
    4. '(' → logprob: -17.625001907348633
    5. '(sel' → logprob: -19.375001907348633
    6. ' seg' → logprob: -20.250001907348633
    7. '(sess' → logprob: -20.500001907348633
    8. '(s' → logprob: -21.000001907348633
    9. '(se' → logprob: -21.750001907348633
    10. '           ' → logprob: -21.875001907348633

Token 944: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2822476327419281
    2. ')' → logprob: -1.4072476625442505
    3. '           ' → logprob: -7.407247543334961
    4. '       ' → logprob: -8.157247543334961
    5. '):
' → logprob: -9.157247543334961
    6. '')
' → logprob: -11.157247543334961
    7. 'if' → logprob: -11.407247543334961
    8. '<|end|>' → logprob: -11.782247543334961
    9. ')')
' → logprob: -12.032247543334961
    10. ',' → logprob: -12.032247543334961

Token 945: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.476784348487854
    2. '       ' → logprob: -0.976784348487854
    3. ' if' → logprob: -6.3517842292785645
    4. '<|end|>' → logprob: -8.226784706115723
    5. '               ' → logprob: -8.601784706115723
    6. '        
' → logprob: -8.976784706115723
    7. ' and' → logprob: -9.726784706115723
    8. '            
' → logprob: -9.851784706115723
    9. ',' → logprob: -10.101784706115723
    10. '        ' → logprob: -10.226784706115723

Token 946: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030441977083683014
    2. 'if' (adapté à ' if') → logprob: -3.530441999435425
    3. ' if' → logprob: -7.280441761016846
    4. '               ' → logprob: -13.530442237854004
    5. 'If' → logprob: -15.655442237854004
    6. 'import' → logprob: -15.780442237854004
    7. '       ' → logprob: -15.780442237854004
    8. '		' → logprob: -16.280441284179688
    9. '
' → logprob: -16.405441284179688
    10. '```' → logprob: -16.530441284179688

Token 947: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.12692873179912567
    2. ' curr' → logprob: -2.1269288063049316
    3. 'cur' → logprob: -15.251928329467773
    4. '	curr' → logprob: -15.251928329467773
    5. ' not' → logprob: -16.626928329467773
    6. 'c' → logprob: -16.751928329467773
    7. '(curr' → logprob: -17.126928329467773
    8. 'not' → logprob: -17.251928329467773
    9. '[curr' → logprob: -18.376928329467773
    10. '   ' → logprob: -18.376928329467773

Token 948: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3132617771625519
    2. 'is' → logprob: -1.3132617473602295
    3. '	is' → logprob: -17.438261032104492
    4. '           ' → logprob: -18.188261032104492
    5. '_is' → logprob: -19.063261032104492
    6. '        ' → logprob: -19.438261032104492
    7. ' ' → logprob: -19.563261032104492
    8. 'Is' → logprob: -19.563261032104492
    9. ')is' → logprob: -19.813261032104492
    10. 'if' → logprob: -19.813261032104492

Token 949: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006715370807796717
    2. ' None' → logprob: -5.006715297698975
    3. '   ' → logprob: -19.006715774536133
    4. '_None' → logprob: -20.631715774536133
    5. '=None' → logprob: -21.506715774536133
    6. '(None' → logprob: -21.756715774536133
    7. '
' → logprob: -22.006715774536133
    8. 'none' → logprob: -23.631715774536133
    9. '_none' → logprob: -23.631715774536133
    10. ',None' → logprob: -23.631715774536133

Token 950: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6508292555809021
    2. ':
' → logprob: -1.0258293151855469
    3. ' or' → logprob: -2.525829315185547
    4. '           ' → logprob: -3.900829315185547
    5. ':' → logprob: -4.025829315185547
    6. 'or' → logprob: -7.150829315185547
    7. ':return' → logprob: -7.400829315185547
    8. '              ' → logprob: -9.400829315185547
    9. '):
' → logprob: -9.400829315185547
    10. '       ' → logprob: -9.900829315185547

Token 951: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.334533878136426e-05
    2. 'return' → logprob: -10.750042915344238
    3. ' return' → logprob: -11.000042915344238
    4. '                   ' → logprob: -13.250042915344238
    5. '                       ' → logprob: -13.875042915344238
    6. '                ' → logprob: -14.250042915344238
    7. '           ' → logprob: -14.375042915344238
    8. '
' → logprob: -15.000042915344238
    9. '              ' → logprob: -15.000042915344238
    10. '```' → logprob: -15.750042915344238

Token 952: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21052095293998718
    2. 'return' (adapté à ' return') → logprob: -1.7105209827423096
    3. ' return' → logprob: -4.7105207443237305
    4. '                   ' → logprob: -9.71052074432373
    5. '                       ' → logprob: -13.46052074432373
    6. '
' → logprob: -13.96052074432373
    7. '           ' → logprob: -14.33552074432373
    8. '                ' → logprob: -14.33552074432373
    9. '	return' → logprob: -14.83552074432373
    10. '   ' → logprob: -14.96052074432373

Token 953: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. '=False' → logprob: -21.000009536743164
    4. '(False' → logprob: -22.125009536743164
    5. 'false' → logprob: -22.500009536743164
    6. 'True' → logprob: -22.875009536743164
    7. '_false' → logprob: -23.375009536743164
    8. '.False' → logprob: -24.750009536743164
    9. 'FALSE' → logprob: -25.250009536743164
    10. 'None' → logprob: -25.500009536743164

Token 954: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3875342309474945
    2. '       ' → logprob: -1.137534260749817
    3. '
' → logprob: -8.637534141540527
    4. '        
' → logprob: -8.762534141540527
    5. '               ' → logprob: -8.887534141540527
    6. ' if' → logprob: -9.762534141540527
    7. 'return' → logprob: -10.762534141540527
    8. 'if' → logprob: -10.762534141540527
    9. '            
' → logprob: -11.012534141540527
    10. '    
' → logprob: -11.012534141540527

Token 955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6334682703018188
    2. '           ' → logprob: -0.7584682703018188
    3. '
' → logprob: -7.758468151092529
    4. '        
' → logprob: -8.258468627929688
    5. '               ' → logprob: -9.133468627929688
    6. '            
' → logprob: -10.508468627929688
    7. '```' → logprob: -10.883468627929688
    8. 'return' → logprob: -11.008468627929688
    9. '    
' → logprob: -12.508468627929688
    10. ' return' → logprob: -13.758468627929688

Token 956: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017638830468058586
    2. 'if' → logprob: -4.767638683319092
    3. ' if' → logprob: -4.767638683319092
    4. 'return' (adapté à ' return') → logprob: -8.51763916015625
    5. '           ' → logprob: -8.64263916015625
    6. '   ' → logprob: -10.01763916015625
    7. '
' → logprob: -10.26763916015625
    8. ' return' → logprob: -10.76763916015625
    9. 'for' → logprob: -13.26763916015625
    10. ' for' → logprob: -13.76763916015625

Token 957: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.013420210219919682
    2. 'filename' → logprob: -5.013420104980469
    3. ' curr' → logprob: -5.013420104980469
    4. ' filename' → logprob: -10.388420104980469
    5. '(curr' → logprob: -13.888420104980469
    6. '	curr' → logprob: -14.388420104980469
    7. 'current' → logprob: -14.513420104980469
    8. 'cur' → logprob: -14.888420104980469
    9. '   ' → logprob: -15.138420104980469
    10. ' ' → logprob: -15.638420104980469

Token 958: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -6.749814019713085e-06
    2. '.files' → logprob: -12.125006675720215
    3. 'has' → logprob: -14.125006675720215
    4. ' .' → logprob: -15.250006675720215
    5. '.' → logprob: -16.25000762939453
    6. '.have' → logprob: -16.75000762939453
    7. '.is' → logprob: -16.87500762939453
    8. 'files' → logprob: -16.87500762939453
    9. '   ' → logprob: -17.37500762939453
    10. ').' → logprob: -17.75000762939453

Token 959: '_file' (ID: 5933)
  Prédit: '_file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: 0.0
    2. 'file' → logprob: -17.125
    3. '_filename' → logprob: -18.5
    4. '_' → logprob: -19.25
    5. '_directory' → logprob: -19.5
    6. 'File' → logprob: -20.625
    7. '_files' → logprob: -21.75
    8. ' file' → logprob: -22.75
    9. '_FILE' → logprob: -23.0
    10. '_path' → logprob: -23.875

Token 960: '(filename' (ID: 24971)
  Prédit: '(filename'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(filename' → logprob: -2.522638169466518e-05
    2. 'filename' → logprob: -11.000024795532227
    3. '(' → logprob: -11.750024795532227
    4. ' (' → logprob: -15.500024795532227
    5. ' filename' → logprob: -15.625024795532227
    6. '(f' → logprob: -16.125024795532227
    7. '('' → logprob: -17.125024795532227
    8. '(
' → logprob: -17.250024795532227
    9. '(username' → logprob: -18.625024795532227
    10. '(fname' → logprob: -18.750024795532227

Token 961: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ')
' → logprob: -12.125008583068848
    3. ' )' → logprob: -13.375008583068848
    4. '<|end|>' → logprob: -15.125008583068848
    5. '')' → logprob: -15.375008583068848
    6. '   ' → logprob: -15.375008583068848
    7. '       ' → logprob: -15.875008583068848
    8. ')return' → logprob: -16.00000762939453
    9. '())' → logprob: -16.37500762939453
    10. '[' → logprob: -16.62500762939453

Token 962: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5826156139373779
    2. 'class' → logprob: -0.8326156139373779
    3. '
' → logprob: -5.207615852355957
    4. '    
' → logprob: -7.207615852355957
    5. 'def' → logprob: -7.832615852355957
    6. 'from' → logprob: -11.082615852355957
    7. 'import' → logprob: -11.582615852355957
    8. '```' → logprob: -12.582615852355957
    9. '

' → logprob: -12.707615852355957
    10. ' class' → logprob: -13.082615852355957

Token 963: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.09252098202705383
    2. '   ' → logprob: -2.5925209522247314
    3. 'def' (adapté à ' def') → logprob: -4.3425211906433105
    4. '
' → logprob: -7.7175211906433105
    5. 'from' → logprob: -10.342520713806152
    6. 'import' → logprob: -10.592520713806152
    7. '    
' → logprob: -10.717520713806152
    8. '```' → logprob: -12.717520713806152
    9. ' class' → logprob: -12.842520713806152
    10. ' def' → logprob: -13.092520713806152

Token 964: ' __' (ID: 2516)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.2380598783493042
    2. 'resolve' → logprob: -1.2380598783493042
    3. 'list' → logprob: -2.2380599975585938
    4. 'def' → logprob: -2.3630599975585938
    5. ' find' → logprob: -3.3630599975585938
    6. 'get' → logprob: -3.3630599975585938
    7. 'normalize' → logprob: -3.4880599975585938
    8. '__' → logprob: -3.6130599975585938
    9. 'remove' → logprob: -4.113059997558594
    10. 'lookup' → logprob: -4.488059997558594

Token 965: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: 0.0
    2. 'str' → logprob: -18.375
    3. '_repr' → logprob: -18.375
    4. 'len' → logprob: -19.375
    5. 'rep' → logprob: -21.75
    6. 'hash' → logprob: -22.75
    7. 'bool' → logprob: -23.25
    8. ' repr' → logprob: -23.375
    9. 'eq' → logprob: -24.125
    10. 'representation' → logprob: -24.375

Token 966: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04861098527908325
    2. '__(' → logprob: -3.0486109256744385
    3. '(' → logprob: -11.79861068725586
    4. 'self' → logprob: -12.17361068725586
    5. '__' → logprob: -12.17361068725586
    6. '__(
' → logprob: -12.79861068725586
    7. '
' → logprob: -14.04861068725586
    8. '_(' → logprob: -14.17361068725586
    9. '(s' → logprob: -14.54861068725586
    10. '   ' → logprob: -14.67361068725586

Token 967: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.320199877838604e-07
    2. ' self' → logprob: -15.25
    3. ')' → logprob: -15.625
    4. '(self' → logprob: -19.25
    5. 's' → logprob: -20.125
    6. '   ' → logprob: -20.375
    7. '
' → logprob: -20.625
    8. 'Self' → logprob: -20.75
    9. 'sel' → logprob: -20.875
    10. '):
' → logprob: -22.0

Token 968: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.177875816822052
    2. '__(' → logprob: -2.3028757572174072
    3. 'self' → logprob: -3.0528757572174072
    4. '):
' → logprob: -4.302875995635986
    5. '__' → logprob: -7.177875995635986
    6. ')' → logprob: -7.427875995635986
    7. ')(' → logprob: -7.552875995635986
    8. '__(
' → logprob: -9.177875518798828
    9. '   ' → logprob: -9.677875518798828
    10. '):' → logprob: -10.177875518798828

Token 969: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7574031949043274
    2. 'self' → logprob: -0.8824031949043274
    3. '       ' → logprob: -2.3824031352996826
    4. 'def' → logprob: -3.8824031352996826
    5. ' self' → logprob: -5.882403373718262
    6. '(self' → logprob: -6.757403373718262
    7. ' def' → logprob: -9.007403373718262
    8. '
' → logprob: -9.757403373718262
    9. '	self' → logprob: -9.757403373718262
    10. '    ' → logprob: -10.132403373718262

Token 970: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07075466215610504
    2. ' return' → logprob: -3.0707547664642334
    3. '       ' → logprob: -3.8207547664642334
    4. '   ' → logprob: -12.195755004882812
    5. '	return' → logprob: -12.320755004882812
    6. '
' → logprob: -13.695755004882812
    7. 'def' → logprob: -13.945755004882812
    8. 'Return' → logprob: -15.945755004882812
    9. '{return' → logprob: -15.945755004882812
    10. '```' → logprob: -16.195755004882812

Token 971: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.7053759519476444e-05
    2. 'repr' → logprob: -10.000057220458984
    3. ' f' → logprob: -11.375057220458984
    4. 'self' → logprob: -16.000057220458984
    5. '"' → logprob: -16.875057220458984
    6. 'str' → logprob: -17.125057220458984
    7. ' repr' → logprob: -18.250057220458984
    8. '   ' → logprob: -18.750057220458984
    9. 're' → logprob: -19.750057220458984
    10. '       ' → logprob: -19.875057220458984

Token 972: '"' (ID: 1)
  Prédit: 'File'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'File' → logprob: -0.534866213798523
    2. '"' → logprob: -1.284866213798523
    3. 'f' → logprob: -2.6598663330078125
    4. 'Dir' → logprob: -2.7848663330078125
    5. '"<' → logprob: -5.2848663330078125
    6. 'Directory' → logprob: -8.284866333007812
    7. '<File' → logprob: -8.409866333007812
    8. '"{' → logprob: -9.659866333007812
    9. '<' → logprob: -9.784866333007812
    10. ' f' → logprob: -10.784866333007812

Token 973: 'File' (ID: 2279)
  Prédit: 'Dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dir' → logprob: -0.015771325677633286
    2. 'File' → logprob: -4.640771389007568
    3. 'f' → logprob: -6.265771389007568
    4. 'Root' → logprob: -6.390771389007568
    5. '"' → logprob: -6.640771389007568
    6. 'Directory' → logprob: -7.390771389007568
    7. 'root' → logprob: -8.76577091217041
    8. '<' → logprob: -9.14077091217041
    9. '{' → logprob: -9.51577091217041
    10. ''' → logprob: -10.14077091217041

Token 974: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: 0.0
    2. 'system' → logprob: -17.5
    3. 'Systems' → logprob: -18.0
    4. ' System' → logprob: -18.75
    5. 'ystem' → logprob: -19.375
    6. '_System' → logprob: -19.625
    7. 'S' → logprob: -20.5
    8. 'Sys' → logprob: -21.0
    9. '_system' → logprob: -21.125
    10. 'SYSTEM' → logprob: -21.125

Token 975: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -4.4849443838757e-06
    2. '(root' → logprob: -13.750004768371582
    3. '{' → logprob: -14.500004768371582
    4. 'model' → logprob: -14.625004768371582
    5. '(' → logprob: -14.625004768371582
    6. '(Model' → logprob: -15.000004768371582
    7. 'root' → logprob: -15.250004768371582
    8. ')' → logprob: -15.750004768371582
    9. '"' → logprob: -16.250003814697266
    10. ' Model' → logprob: -16.562503814697266

Token 976: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.400357723236084
    2. '({' → logprob: -1.525357723236084
    3. '(self' → logprob: -2.900357723236084
    4. '(' → logprob: -3.025357723236084
    5. '(f' → logprob: -5.275357723236084
    6. '{' → logprob: -6.900357723236084
    7. '(/' → logprob: -7.275357723236084
    8. '(re' → logprob: -7.275357723236084
    9. 'Root' → logprob: -8.525358200073242
    10. 'root' → logprob: -9.025358200073242

Token 977: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6698439717292786
    2. '={' → logprob: -1.0448439121246338
    3. ')' → logprob: -2.044843912124634
    4. '=self' → logprob: -5.294844150543213
    5. '{' → logprob: -7.169844150543213
    6. '=<' → logprob: -8.294843673706055
    7. '=/' → logprob: -8.419843673706055
    8. '=root' → logprob: -8.544843673706055
    9. '(' → logprob: -9.294843673706055
    10. '({' → logprob: -9.419843673706055

Token 978: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.636475493200123e-05
    2. 'repr' → logprob: -9.500076293945312
    3. ' self' → logprob: -13.500076293945312
    4. '{' → logprob: -18.250076293945312
    5. '(self' → logprob: -20.500076293945312
    6. ' repr' → logprob: -20.625076293945312
    7. '	self' → logprob: -22.375076293945312
    8. 'str' → logprob: -23.125076293945312
    9. '[self' → logprob: -23.250076293945312
    10. '   ' → logprob: -23.375076293945312

Token 979: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.008745286613702774
    2. '})' → logprob: -4.883745193481445
    3. 'root' → logprob: -6.883745193481445
    4. '.name' → logprob: -9.383745193481445
    5. '}")' → logprob: -11.133745193481445
    6. ')' → logprob: -12.133745193481445
    7. '!' → logprob: -13.258745193481445
    8. '.re' → logprob: -13.383745193481445
    9. '.' → logprob: -13.508745193481445
    10. '}' → logprob: -13.633745193481445

Token 980: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030367504805326462
    2. ')"' → logprob: -3.530367612838745
    3. ')")' → logprob: -8.530367851257324
    4. ')}' → logprob: -8.780367851257324
    5. '})' → logprob: -8.905367851257324
    6. ')">' → logprob: -9.280367851257324
    7. ')`' → logprob: -10.905367851257324
    8. '")' → logprob: -12.405367851257324
    9. '}' → logprob: -12.530367851257324
    10. '}")' → logprob: -13.030367851257324

Token 981: '"

' (ID: 2678)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03488530218601227
    2. '
' → logprob: -3.6598854064941406
    3. '   ' → logprob: -4.784885406494141
    4. '    
' → logprob: -9.53488540649414
    5. 'def' → logprob: -9.53488540649414
    6. '

' → logprob: -11.15988540649414
    7. 'from' → logprob: -11.28488540649414
    8. 'import' → logprob: -11.40988540649414
    9. ' class' → logprob: -12.40988540649414
    10. '#' → logprob: -13.28488540649414

Token 982: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003998853731900454
    2. 'def' → logprob: -5.753998756408691
    3. '   ' → logprob: -7.128998756408691
    4. ' class' → logprob: -11.628998756408691
    5. 'import' → logprob: -12.628998756408691
    6. 'from' → logprob: -12.878998756408691
    7. 'IND' → logprob: -13.503998756408691
    8. '
' → logprob: -14.003998756408691
    9. '    
' → logprob: -14.503998756408691
    10. '#' → logprob: -15.128998756408691

Token 983: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.26061007380485535
    2. 'Normalized' → logprob: -2.3856101036071777
    3. 'Resolved' → logprob: -2.5106101036071777
    4. ' Path' → logprob: -3.7606101036071777
    5. 'File' → logprob: -5.760610103607178
    6. 'Absolute' → logprob: -5.885610103607178
    7. 'Resolver' → logprob: -5.885610103607178
    8. 'Virtual' → logprob: -6.010610103607178
    9. 'URL' → logprob: -6.010610103607178
    10. ' Normal' → logprob: -6.135610103607178

Token 984: 'Normalizer' (ID: 188213)
  Prédit: 'Normalizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Normalizer' → logprob: -0.6541605591773987
    2. 'Segment' → logprob: -1.279160499572754
    3. 'name' → logprob: -1.779160499572754
    4. 'Resolver' → logprob: -3.904160499572754
    5. 'Normalization' → logprob: -5.279160499572754
    6. 'Resolution' → logprob: -6.654160499572754
    7. 'Path' → logprob: -7.029160499572754
    8. 'Normalized' → logprob: -7.029160499572754
    9. 'Segments' → logprob: -7.404160499572754
    10. 'Canonical' → logprob: -7.904160499572754

Token 985: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011053952388465405
    2. ':
' → logprob: -4.511054039001465
    3. ':def' → logprob: -12.886054039001465
    4. '   ' → logprob: -13.886054039001465
    5. ' :' → logprob: -14.511054039001465
    6. ':

' → logprob: -14.511054039001465
    7. '):' → logprob: -14.636054039001465
    8. '(object' → logprob: -15.761054039001465
    9. '```' → logprob: -15.761054039001465
    10. 'def' → logprob: -15.761054039001465

Token 986: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00033439300023019314
    2. ':' → logprob: -8.500334739685059
    3. 'class' → logprob: -9.500334739685059
    4. ':
' → logprob: -10.250334739685059
    5. '```' → logprob: -12.250334739685059
    6. '    
' → logprob: -12.500334739685059
    7. 'def' → logprob: -12.625334739685059
    8. ' class' → logprob: -13.125334739685059
    9. ' def' → logprob: -13.750334739685059
    10. '):
' → logprob: -13.875334739685059

Token 987: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010592726175673306
    2. '
' → logprob: -10.000105857849121
    3. ' def' → logprob: -10.250105857849121
    4. '    
' → logprob: -11.500105857849121
    5. 'def' → logprob: -11.625105857849121
    6. 'class' → logprob: -12.750105857849121
    7. '"""
' (adapté à ' """
') → logprob: -14.000105857849121
    8. '```' → logprob: -14.125105857849121
    9. ' """
' → logprob: -14.625105857849121
    10. ':
' → logprob: -14.875105857849121

Token 988: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018416560487821698
    2. 'class' → logprob: -7.2518415451049805
    3. '"""
' → logprob: -7.6268415451049805
    4. '"""' → logprob: -8.25184154510498
    5. 'def' → logprob: -8.37684154510498
    6. 'object' → logprob: -9.62684154510498
    7. ')' → logprob: -10.87684154510498
    8. '
' → logprob: -11.12684154510498
    9. '"' → logprob: -11.12684154510498
    10. '):
' → logprob: -11.62684154510498

Token 989: ' Normal' (ID: 29591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06027597934007645
    2. ' def' → logprob: -3.9352760314941406
    3. 'def' → logprob: -3.9352760314941406
    4. 'class' → logprob: -4.060276031494141
    5. ' """
' → logprob: -6.435276031494141
    6. '"""
' → logprob: -8.31027603149414
    7. '```' → logprob: -9.68527603149414
    8. '    ' → logprob: -9.81027603149414
    9. '"""' → logprob: -9.81027603149414
    10. ' class' → logprob: -10.43527603149414

Token 990: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -0.004818849731236696
    2. 'izer' → logprob: -5.379818916320801
    3. 'ize' → logprob: -9.0048189163208
    4. '   ' → logprob: -10.1298189163208
    5. 'class' → logprob: -10.6298189163208
    6. 'ization' → logprob: -12.3798189163208
    7. 'izers' → logprob: -13.5048189163208
    8. 'IZES' → logprob: -13.5048189163208
    9. 'ized' → logprob: -13.7548189163208
    10. 'izing' → logprob: -13.8798189163208

Token 991: ' paths' (ID: 23373)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.2335158735513687
    2. 'path' → logprob: -2.108515977859497
    3. ' paths' → logprob: -2.858515977859497
    4. 'absolute' → logprob: -4.358515739440918
    5. 'a' → logprob: -5.108515739440918
    6. 'Path' → logprob: -6.358515739440918
    7. 'pathname' → logprob: -6.358515739440918
    8. 'the' → logprob: -6.608515739440918
    9. 'Paths' → logprob: -6.983515739440918
    10. ' a' → logprob: -7.108515739440918

Token 992: ' according' (ID: 7065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39135193824768066
    2. ':
' → logprob: -1.1413519382476807
    3. ':' → logprob: -5.641351699829102
    4. 'class' → logprob: -7.516351699829102
    5. 'from' → logprob: -8.766351699829102
    6. '):
' → logprob: -9.766351699829102
    7. ',' → logprob: -10.141351699829102
    8. ' and' → logprob: -10.891351699829102
    9. 'and' → logprob: -11.141351699829102
    10. '
' → logprob: -11.141351699829102

Token 993: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0016369777731597424
    2. ' to' → logprob: -6.501636981964111
    3. '"""' → logprob: -10.251636505126953
    4. 'class' → logprob: -10.376636505126953
    5. 'def' → logprob: -10.376636505126953
    6. '```' → logprob: -10.751636505126953
    7. '"""
' → logprob: -11.626636505126953
    8. '_to' → logprob: -13.626636505126953
    9. '
' → logprob: -13.876636505126953
    10. 't' → logprob: -13.876636505126953

Token 994: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.05067122355103493
    2. ' the' → logprob: -3.925671339035034
    3. 'special' → logprob: -4.300671100616455
    4. 'problem' → logprob: -4.925671100616455
    5. 'specific' → logprob: -5.675671100616455
    6. 'given' → logprob: -6.550671100616455
    7. ' given' → logprob: -6.800671100616455
    8. 'specified' → logprob: -6.925671100616455
    9. 'rules' → logprob: -7.175671100616455
    10. 'provided' → logprob: -8.550671577453613

Token 995: ''s' (ID: 885)
  Prédit: 'description'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'description' → logprob: -0.7468165159225464
    2. ' description' → logprob: -1.9968165159225464
    3. '   ' → logprob: -2.121816635131836
    4. 'rules' → logprob: -2.371816635131836
    5. 'statement' → logprob: -2.371816635131836
    6. ' rules' → logprob: -3.871816635131836
    7. ' statement' → logprob: -4.371816635131836
    8. 'spec' → logprob: -4.746816635131836
    9. 'requirements' → logprob: -4.871816635131836
    10. '-specific' → logprob: -4.996816635131836

Token 996: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -1.1758795976638794
    2. 'spec' → logprob: -1.4258795976638794
    3. ' rules' → logprob: -1.6758795976638794
    4. 'description' → logprob: -2.17587947845459
    5. ' description' → logprob: -2.80087947845459
    6. 'special' → logprob: -3.92587947845459
    7. ' specification' → logprob: -4.05087947845459
    8. 'requirements' → logprob: -4.30087947845459
    9. ' requirements' → logprob: -4.55087947845459
    10. 'statement' → logprob: -4.92587947845459

Token 997: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018673550337553024
    2. ':' → logprob: -4.768673419952393
    3. ':
' → logprob: -4.893673419952393
    4. '
' → logprob: -6.268673419952393
    5. '.' → logprob: -8.89367389678955
    6. ',' → logprob: -9.14367389678955
    7. '    
' → logprob: -9.64367389678955
    8. ' and' → logprob: -9.76867389678955
    9. 'class' → logprob: -9.76867389678955
    10. 'and' → logprob: -10.14367389678955

Token 998: ' canonical' (ID: 91323)
  Prédit: 'absolute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'absolute' → logprob: -0.7981252670288086
    2. 'resolve' → logprob: -2.0481252670288086
    3. 'canonical' → logprob: -2.0481252670288086
    4. 'remove' → logprob: -3.4231252670288086
    5. 'an' → logprob: -3.5481252670288086
    6. 'a' → logprob: -3.6731252670288086
    7. 'normalize' → logprob: -3.9231252670288086
    8. 'handle' → logprob: -4.423125267028809
    9. 'simpl' → logprob: -4.423125267028809
    10. ' absolute' → logprob: -4.548125267028809

Token 999: ' absolute' (ID: 17786)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paths' → logprob: -1.2406926155090332
    2. 'form' → logprob: -1.4906926155090332
    3. ' paths' → logprob: -1.7406926155090332
    4. ' form' → logprob: -1.9906926155090332
    5. 'path' → logprob: -2.115692615509033
    6. 'absolute' → logprob: -3.615692615509033
    7. '_path' → logprob: -5.240692615509033
    8. 'forms' → logprob: -5.490692615509033
    9. ' path' → logprob: -5.740692615509033
    10. ' absolute' → logprob: -5.865692615509033

Token 1000: ' paths' (ID: 23373)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.33024290204048157
    2. 'path' → logprob: -1.3302428722381592
    3. ' paths' → logprob: -4.205243110656738
    4. 'pathname' → logprob: -6.705243110656738
    5. ' path' → logprob: -8.080243110656738
    6. '_path' → logprob: -9.205243110656738
    7. 'form' → logprob: -9.580243110656738
    8. 'Path' → logprob: -9.830243110656738
    9. '_paths' → logprob: -9.830243110656738
    10. 'Unix' → logprob: -10.705243110656738

Token 1001: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013726906850934029
    2. '
' → logprob: -4.763726711273193
    3. ':' → logprob: -6.013726711273193
    4. ':
' → logprob: -6.513726711273193
    5. '    
' → logprob: -7.388726711273193
    6. ',' → logprob: -8.263727188110352
    7. '.' → logprob: -8.763727188110352
    8. '.
' → logprob: -10.888727188110352
    9. '<|end|>' → logprob: -10.888727188110352
    10. '<|end|>' → logprob: -11.388727188110352

Token 1002: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00450832350179553
    2. '
' → logprob: -5.7545084953308105
    3. '    
' → logprob: -6.6295084953308105
    4. '```' → logprob: -12.754508018493652
    5. '        
' → logprob: -13.129508018493652
    6. 'class' → logprob: -13.879508018493652
    7. 'def' → logprob: -14.504508018493652
    8. 'indent' → logprob: -14.629508018493652
    9. '

' → logprob: -15.129508018493652
    10. 'Indent' → logprob: -15.254508018493652

Token 1003: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11988203227519989
    2. '
' → logprob: -2.244882106781006
    3. '    
' → logprob: -4.994882106781006
    4. '```' → logprob: -9.244881629943848
    5. 'class' → logprob: -9.869881629943848
    6. 'def' → logprob: -9.869881629943848
    7. '

' → logprob: -11.244881629943848
    8. '        
' → logprob: -11.369881629943848
    9. '#' → logprob: -11.869881629943848
    10. ')' → logprob: -12.994881629943848

Token 1004: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006359508261084557
    2. ' def' → logprob: -8.000636100769043
    3. 'def' → logprob: -9.500636100769043
    4. 'class' → logprob: -9.750636100769043
    5. '```' → logprob: -9.750636100769043
    6. '
' → logprob: -9.875636100769043
    7. '    
' → logprob: -10.250636100769043
    8. '    ' → logprob: -12.125636100769043
    9. ' indent' → logprob: -12.250636100769043
    10. ' class' → logprob: -12.250636100769043

Token 1005: ' INDEX' (ID: 89743)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7715116739273071
    2. '   ' → logprob: -1.1465116739273071
    3. ' def' → logprob: -1.5215116739273071
    4. 'class' → logprob: -6.646511554718018
    5. '__' → logprob: -8.896512031555176
    6. ' __' → logprob: -10.146512031555176
    7. 'indent' → logprob: -10.646512031555176
    8. 'IND' → logprob: -11.021512031555176
    9. '```' → logprob: -11.021512031555176
    10. ' class' → logprob: -12.396512031555176

Token 1006: '_FILE' (ID: 19131)
  Prédit: '_FILE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FILE' → logprob: -0.41079264879226685
    2. '_FILENAME' → logprob: -2.035792589187622
    3. '_PAGE' → logprob: -2.785792589187622
    4. '_PATH' → logprob: -3.285792589187622
    5. '_SEG' → logprob: -3.285792589187622
    6. '_NAME' → logprob: -3.660792589187622
    7. ' =' → logprob: -4.285792827606201
    8. '=' → logprob: -4.535792827606201
    9. '_' → logprob: -5.410792827606201
    10. 'FILE' → logprob: -6.160792827606201

Token 1007: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3723646402359009
    2. '_NAME' → logprob: -1.3723646402359009
    3. '=' → logprob: -3.7473645210266113
    4. 'S' → logprob: -4.622364521026611
    5. 'NAME' → logprob: -4.747364521026611
    6. '_NAMES' → logprob: -5.122364521026611
    7. '_FILENAME' → logprob: -5.372364521026611
    8. '   ' → logprob: -7.247364521026611
    9. '_SUFFIX' → logprob: -7.372364521026611
    10. '_' → logprob: -7.372364521026611

Token 1008: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.43310779333114624
    2. ''' → logprob: -1.058107852935791
    3. 'index' → logprob: -6.183107852935791
    4. ' "' → logprob: -6.933107852935791
    5. ' '' → logprob: -7.683107852935791
    6. ''s' → logprob: -7.683107852935791
    7. '   ' → logprob: -9.183107376098633
    8. ''in' → logprob: -9.808107376098633
    9. 'Index' → logprob: -10.308107376098633
    10. ' ' → logprob: -10.558107376098633

Token 1009: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.23435354232788086
    2. ''' → logprob: -1.6093535423278809
    3. '"' → logprob: -4.859353542327881
    4. '_index' → logprob: -8.109354019165039
    5. ' index' → logprob: -9.359354019165039
    6. ''_' → logprob: -9.359354019165039
    7. 'README' → logprob: -9.609354019165039
    8. '/index' → logprob: -9.609354019165039
    9. '=index' → logprob: -9.734354019165039
    10. 'INDEX' → logprob: -9.859354019165039

Token 1010: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.0003573919821064919
    2. '.md' → logprob: -8.750357627868652
    3. '.htm' → logprob: -9.375357627868652
    4. '.' → logprob: -9.875357627868652
    5. '.php' → logprob: -10.750357627868652
    6. '.'' → logprob: -11.625357627868652
    7. '.ht' → logprob: -11.625357627868652
    8. '.xhtml' → logprob: -11.750357627868652
    9. '.shtml' → logprob: -12.500357627868652
    10. '.py' → logprob: -12.750357627868652

Token 1011: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02427654340863228
    2. ''

' → logprob: -3.7742764949798584
    3. ''
' → logprob: -6.8992767333984375
    4. '"' → logprob: -11.024276733398438
    5. ''

' → logprob: -13.149276733398438
    6. ''


' → logprob: -13.399276733398438
    7. ''
' → logprob: -13.899276733398438
    8. '"'' → logprob: -14.274276733398438
    9. '')' → logprob: -15.899276733398438
    10. '   ' → logprob: -16.399276733398438

Token 1012: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21499104797840118
    2. '
' → logprob: -1.7149910926818848
    3. '    
' → logprob: -4.339991092681885
    4. 'def' → logprob: -8.089990615844727
    5. ' 
' → logprob: -10.464990615844727
    6. '        
' → logprob: -10.839990615844727
    7. '    ' → logprob: -10.964990615844727
    8. ' def' → logprob: -11.089990615844727
    9. '

' → logprob: -11.339990615844727
    10. '```' → logprob: -11.714990615844727

Token 1013: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0014526135055348277
    2. '@' → logprob: -7.001452445983887
    3. ' def' → logprob: -7.876452445983887
    4. '   ' → logprob: -8.751452445983887
    5. 'MAX' → logprob: -14.001452445983887
    6. 'IND' → logprob: -14.126452445983887
    7. 'class' → logprob: -15.501452445983887
    8. ' @' → logprob: -15.751452445983887
    9. 'AL' → logprob: -16.126453399658203
    10. 'SPECIAL' → logprob: -16.126453399658203

Token 1014: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.44221940636634827
    2. 'def' → logprob: -1.9422193765640259
    3. ' __' → logprob: -2.3172194957733154
    4. 'init' → logprob: -2.3172194957733154
    5. ' def' → logprob: -4.567219257354736
    6. 'staticmethod' → logprob: -5.317219257354736
    7. 'classmethod' → logprob: -7.442219257354736
    8. ' init' → logprob: -7.942219257354736
    9. 'class' → logprob: -9.067219734191895
    10. 'define' → logprob: -9.442219734191895

Token 1015: 'init' (ID: 3287)
  Prédit: 'slots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.4304507076740265
    2. 'init' → logprob: -1.055450677871704
    3. 'staticmethod' → logprob: -6.930450916290283
    4. '_slots' → logprob: -7.805450916290283
    5. 'slot' → logprob: -8.430450439453125
    6. ' slots' → logprob: -10.055450439453125
    7. 'classmethod' → logprob: -10.180450439453125
    8. 'Slots' → logprob: -11.430450439453125
    9. 'continue' → logprob: -11.555450439453125
    10. 'class' → logprob: -11.805450439453125

Token 1016: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009513230063021183
    2. '(self' → logprob: -4.8845133781433105
    3. '__' → logprob: -7.2595133781433105
    4. '(' → logprob: -7.3845133781433105
    5. '__(
' → logprob: -7.6345133781433105
    6. 'self' → logprob: -10.259512901306152
    7. ' (' → logprob: -11.509512901306152
    8. '_(' → logprob: -11.759512901306152
    9. ')(' → logprob: -11.884512901306152
    10. '
' → logprob: -11.884512901306152

Token 1017: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.081584716506768e-05
    2. ' self' → logprob: -11.000020980834961
    3. ')' → logprob: -12.625020980834961
    4. '
' → logprob: -15.500020980834961
    5. '):
' → logprob: -16.00002098083496
    6. '   ' → logprob: -16.12502098083496
    7. '(self' → logprob: -16.25002098083496
    8. 'file' → logprob: -16.50002098083496
    9. '       ' → logprob: -17.25002098083496
    10. ')(' → logprob: -17.50002098083496

Token 1018: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6722435355186462
    2. 'self' → logprob: -0.9222435355186462
    3. '(self' → logprob: -2.922243595123291
    4. ')' → logprob: -4.297243595123291
    5. ' (' → logprob: -4.922243595123291
    6. '__(' → logprob: -5.172243595123291
    7. '):
' → logprob: -5.422243595123291
    8. ' self' → logprob: -5.797243595123291
    9. '
' → logprob: -6.797243595123291
    10. ')(' → logprob: -6.922243595123291

Token 1019: ' fs' (ID: 16105)
  Prédit: 'fs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.24137388169765472
    2. 'filesystem' → logprob: -1.866373896598816
    3. 'file' → logprob: -2.8663737773895264
    4. 'model' → logprob: -6.4913740158081055
    5. 'fsm' → logprob: -7.6163740158081055
    6. ' filesystem' → logprob: -7.8663740158081055
    7. ' fs' → logprob: -8.116374015808105
    8. 'files' → logprob: -9.616374015808105
    9. 'fsp' → logprob: -10.241374015808105
    10. ' file' → logprob: -10.616374015808105

Token 1020: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7921575903892517
    2. '_model' → logprob: -1.2921576499938965
    3. '):
' → logprob: -1.9171576499938965
    4. ':' → logprob: -2.1671576499938965
    5. 'Model' → logprob: -5.0421576499938965
    6. 'model' → logprob: -5.5421576499938965
    7. ' ):' → logprob: -9.417157173156738
    8. '   ' → logprob: -9.917157173156738
    9. ':
' → logprob: -10.042157173156738
    10. ' Model' → logprob: -10.042157173156738

Token 1021: ' File' (ID: 5262)
  Prédit: 'File'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'File' → logprob: -7.922563963802531e-05
    2. ' File' → logprob: -9.750079154968262
    3. 'fs' → logprob: -11.125079154968262
    4. ')' → logprob: -12.875079154968262
    5. 'Filesystem' → logprob: -12.875079154968262
    6. ' fs' → logprob: -15.125079154968262
    7. 'filesystem' → logprob: -15.250079154968262
    8. 'file' → logprob: -15.625079154968262
    9. '   ' → logprob: -16.625080108642578
    10. '_file' → logprob: -16.875080108642578

Token 1022: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -1.2664456789934775e-06
    2. ')' → logprob: -15.125000953674316
    3. 'ystem' → logprob: -15.500000953674316
    4. 'system' → logprob: -15.750000953674316
    5. 'Systems' → logprob: -16.000001907348633
    6. '_System' → logprob: -16.625001907348633
    7. 'Model' → logprob: -16.875001907348633
    8. '_system' → logprob: -17.125001907348633
    9. ' System' → logprob: -17.125001907348633
    10. 'S' → logprob: -17.250001907348633

Token 1023: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -1.5048530030981055e-06
    2. ')' → logprob: -14.375001907348633
    3. 'model' → logprob: -15.250001907348633
    4. '):
' → logprob: -15.750001907348633
    5. '
' → logprob: -16.000001907348633
    6. 'Mode' → logprob: -16.250001907348633
    7. '	Model' → logprob: -16.750001907348633
    8. ' Model' → logprob: -16.875001907348633
    9. 'Mod' → logprob: -17.625001907348633
    10. ')
' → logprob: -17.750001907348633

Token 1024: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12742872536182404
    2. '):' → logprob: -2.1274287700653076
    3. '   ' → logprob: -8.002429008483887
    4. '       ' → logprob: -10.002429008483887
    5. '):
' → logprob: -10.002429008483887
    6. ')' → logprob: -10.127429008483887
    7. ',' → logprob: -10.377429008483887
    8. ' ):
' → logprob: -13.627429008483887
    9. '):

' → logprob: -13.752429008483887
    10. ':' → logprob: -14.377429008483887

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007789266761392355
    2. 'self' → logprob: -5.257789134979248
    3. ' self' → logprob: -7.257789134979248
    4. ',' → logprob: -7.632789134979248
    5. ':
' → logprob: -7.632789134979248
    6. ':' → logprob: -7.882789134979248
    7. '(self' → logprob: -8.757789611816406
    8. '   ' → logprob: -9.257789611816406
    9. '):
' → logprob: -9.382789611816406
    10. '
' → logprob: -9.632789611816406

Token 1026: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002080666832625866
    2. '       ' → logprob: -6.75208044052124
    3. ' self' → logprob: -7.00208044052124
    4. '   ' → logprob: -17.0020809173584
    5. '	self' → logprob: -17.8770809173584
    6. 'fs' → logprob: -19.8770809173584
    7. '(self' → logprob: -19.8770809173584
    8. '
' → logprob: -20.2520809173584
    9. '           ' → logprob: -20.3770809173584
    10. 'import' → logprob: -20.6270809173584

Token 1027: '.fs' (ID: 82179)
  Prédit: '.fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fs' → logprob: -1.5570885807392187e-05
    2. ' .' → logprob: -11.750015258789062
    3. '.f' → logprob: -12.500015258789062
    4. '._' → logprob: -13.500015258789062
    5. '.' → logprob: -13.750015258789062
    6. 'fs' → logprob: -14.500015258789062
    7. '.fd' → logprob: -14.875015258789062
    8. '	fs' → logprob: -15.750015258789062
    9. '.fc' → logprob: -16.125015258789062
    10. ').' → logprob: -16.125015258789062

Token 1028: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12699256837368011
    2. ' =' → logprob: -2.1269924640655518
    3. '   ' → logprob: -10.376992225646973
    4. '.' → logprob: -11.126992225646973
    5. '    ' → logprob: -12.251992225646973
    6. 'model' → logprob: -13.001992225646973
    7. '_model' → logprob: -13.626992225646973
    8. '       ' → logprob: -13.626992225646973
    9. '.=' → logprob: -13.751992225646973
    10. ' ' → logprob: -14.001992225646973

Token 1029: ' fs' (ID: 16105)
  Prédit: 'fs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.011048882268369198
    2. ' fs' → logprob: -4.511048793792725
    3. '(fs' → logprob: -14.011049270629883
    4. '	fs' → logprob: -16.386049270629883
    5. '_fs' → logprob: -17.386049270629883
    6. 'filesystem' → logprob: -17.761049270629883
    7. '/fs' → logprob: -18.011049270629883
    8. 'File' → logprob: -18.636049270629883
    9. '.fs' → logprob: -19.261049270629883
    10. 'file' → logprob: -19.511049270629883

Token 1030: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23897793889045715
    2. '    
' → logprob: -1.8639779090881348
    3. '   ' → logprob: -2.8639779090881348
    4. '        
' → logprob: -8.113978385925293
    5. '   
' → logprob: -9.988978385925293
    6. '

' → logprob: -10.488978385925293
    7. ' 
' → logprob: -10.613978385925293
    8. '<|end|>' → logprob: -10.738978385925293
    9. '  
' → logprob: -10.988978385925293
    10. 'def' → logprob: -11.738978385925293

Token 1031: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06679820269346237
    2. '
' → logprob: -3.316798210144043
    3. '    
' → logprob: -3.566798210144043
    4. '        
' → logprob: -9.441798210144043
    5. 'def' → logprob: -11.066798210144043
    6. '  
' → logprob: -13.066798210144043
    7. '   
' → logprob: -13.316798210144043
    8. '

' → logprob: -14.066798210144043
    9. ' 
' → logprob: -14.691798210144043
    10. '```' → logprob: -14.816798210144043

Token 1032: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10309766232967377
    2. '   ' → logprob: -2.353097677230835
    3. ' def' → logprob: -5.853097438812256
    4. '    
' → logprob: -11.978097915649414
    5. '
' → logprob: -12.228097915649414
    6. '    ' → logprob: -13.478097915649414
    7. '	def' → logprob: -13.853097915649414
    8. ' ' → logprob: -14.228097915649414
    9. '  ' → logprob: -14.603097915649414
    10. 'class' → logprob: -15.478097915649414

Token 1033: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.06829595565795898
    2. ' normalize' → logprob: -2.818295955657959
    3. '_normal' → logprob: -5.443295955657959
    4. 'def' → logprob: -6.693295955657959
    5. ' _' → logprob: -8.818296432495117
    6. ' def' → logprob: -8.818296432495117
    7. 'normal' → logprob: -9.068296432495117
    8. 'resolve' → logprob: -9.568296432495117
    9. '_path' → logprob: -10.193296432495117
    10. ' normal' → logprob: -10.568296432495117

Token 1034: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016192420152947307
    2. '_path' → logprob: -6.876619338989258
    3. '(' → logprob: -7.501619338989258
    4. '(
' → logprob: -11.126619338989258
    5. 'self' → logprob: -12.126619338989258
    6. 'path' → logprob: -12.501619338989258
    7. '(path' → logprob: -12.626619338989258
    8. ' (' → logprob: -12.751619338989258
    9. '_raw' → logprob: -13.376619338989258
    10. '   ' → logprob: -14.876619338989258

Token 1035: ',' (ID: 11)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.03350438177585602
    2. ',' → logprob: -4.533504486083984
    3. '_token' → logprob: -5.033504486083984
    4. ')' → logprob: -5.783504486083984
    5. '(self' → logprob: -5.908504486083984
    6. '):' → logprob: -6.158504486083984
    7. '_' → logprob: -6.158504486083984
    8. 'path' → logprob: -6.283504486083984
    9. ')_' → logprob: -7.158504486083984
    10. '(path' → logprob: -7.533504486083984

Token 1036: ' pathname' (ID: 86882)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -1.0523362159729004
    2. ' raw' → logprob: -1.3023362159729004
    3. 'path' → logprob: -1.4273362159729004
    4. ' path' → logprob: -2.6773362159729004
    5. 'self' → logprob: -3.0523362159729004
    6. ' self' → logprob: -4.5523362159729
    7. 'pathname' → logprob: -5.0523362159729
    8. 'input' → logprob: -5.8023362159729
    9. ' pathname' → logprob: -6.4273362159729
    10. ' input' → logprob: -7.3023362159729

Token 1037: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002403124002739787
    2. ')' → logprob: -6.627403259277344
    3. '):' → logprob: -7.127403259277344
    4. ' :' → logprob: -8.752403259277344
    5. '):
' → logprob: -9.502403259277344
    6. '   ' → logprob: -11.252403259277344
    7. ' ):' → logprob: -11.377403259277344
    8. ' )' → logprob: -11.877403259277344
    9. '       ' → logprob: -13.002403259277344
    10. ',' → logprob: -13.752403259277344

Token 1038: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.024028919637203217
    2. ' Path' → logprob: -3.774029016494751
    3. 'str' → logprob: -7.274028778076172
    4. ')' → logprob: -10.274028778076172
    5. ' str' → logprob: -10.774028778076172
    6. 'Optional' → logprob: -12.274028778076172
    7. 'Raw' → logprob: -12.399028778076172
    8. '	Path' → logprob: -12.524028778076172
    9. 'Union' → logprob: -12.524028778076172
    10. 'path' → logprob: -12.774028778076172

Token 1039: 'name' (ID: 897)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.5421414375305176
    2. '):' → logprob: -1.0421414375305176
    3. 'name' → logprob: -2.9171414375305176
    4. ':' → logprob: -5.292141437530518
    5. '):
' → logprob: -6.042141437530518
    6. '   ' → logprob: -6.292141437530518
    7. ')' → logprob: -6.542141437530518
    8. 'Segments' → logprob: -7.667141437530518
    9. '_segment' → logprob: -9.29214096069336
    10. '       ' → logprob: -9.54214096069336

Token 1040: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7968066206085496e-05
    2. ' )' → logprob: -11.250027656555176
    3. '   ' → logprob: -11.750027656555176
    4. ',' → logprob: -12.375027656555176
    5. '):' → logprob: -13.750027656555176
    6. '):
' → logprob: -14.125027656555176
    7. '       ' → logprob: -14.125027656555176
    8. ')->' → logprob: -15.625027656555176
    9. ':' → logprob: -16.375028610229492
    10. ',)' → logprob: -16.625028610229492

Token 1041: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25382307171821594
    2. '       ' → logprob: -2.2538230419158936
    3. ':
' → logprob: -3.0038230419158936
    4. '->' → logprob: -3.7538230419158936
    5. '(self' → logprob: -4.253823280334473
    6. '   ' → logprob: -4.503823280334473
    7. ')' → logprob: -4.503823280334473
    8. ' ->' → logprob: -5.378823280334473
    9. ')->' → logprob: -5.753823280334473
    10. '):
' → logprob: -6.753823280334473

Token 1042: ' Optional' (ID: 19351)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.22781126201152802
    2. 'Optional' → logprob: -1.8528112173080444
    3. 'str' → logprob: -3.352811336517334
    4. 'List' → logprob: -5.602811336517334
    5. 'Union' → logprob: -5.727811336517334
    6. ' Path' → logprob: -5.727811336517334
    7. 'Tuple' → logprob: -7.227811336517334
    8. ' Optional' → logprob: -7.977811336517334
    9. ' str' → logprob: -8.102810859680176
    10. ''' → logprob: -9.102810859680176

Token 1043: '[str' (ID: 33439)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02069895714521408
    2. '[str' → logprob: -3.8956990242004395
    3. '[List' → logprob: -9.645698547363281
    4. '['' → logprob: -9.645698547363281
    5. '[path' → logprob: -11.770698547363281
    6. '[int' → logprob: -12.520698547363281
    7. '<Path' → logprob: -12.645698547363281
    8. ' [' → logprob: -12.770698547363281
    9. '[
' → logprob: -12.770698547363281
    10. 'str' → logprob: -13.270698547363281

Token 1044: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08064914494752884
    2. '):
' → logprob: -2.5806491374969482
    3. ')' → logprob: -7.205649375915527
    4. '       ' → logprob: -7.455649375915527
    5. ':' → logprob: -8.580649375915527
    6. '   ' → logprob: -8.830649375915527
    7. '):
' → logprob: -9.580649375915527
    8. ':
' → logprob: -11.080649375915527
    9. ',' → logprob: -12.705649375915527
    10. '[' → logprob: -12.705649375915527

Token 1045: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030733743915334344
    2. '        
' → logprob: -8.375307083129883
    3. '```' → logprob: -10.500307083129883
    4. '#' → logprob: -11.625307083129883
    5. '    
' → logprob: -11.750307083129883
    6. '`' → logprob: -12.000307083129883
    7. ':' → logprob: -12.250307083129883
    8. '[' → logprob: -13.000307083129883
    9. ')' → logprob: -13.000307083129883
    10. '):
' → logprob: -13.125307083129883

Token 1046: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.658714771270752
    2. 'segments' → logprob: -1.908714771270752
    3. 'curr' → logprob: -2.033714771270752
    4. 'path' → logprob: -2.283714771270752
    5. 'stack' → logprob: -2.533714771270752
    6. '#' → logprob: -5.533714771270752
    7. 'resolved' → logprob: -5.533714771270752
    8. 'result' → logprob: -5.658714771270752
    9. 'if' → logprob: -6.033714771270752
    10. 'parts' → logprob: -6.158714771270752

Token 1047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17021557688713074
    2. 'curr' → logprob: -2.670215606689453
    3. 'segments' → logprob: -2.920215606689453
    4. 'path' → logprob: -4.170215606689453
    5. '#' → logprob: -4.545215606689453
    6. 'if' → logprob: -6.045215606689453
    7. 'current' → logprob: -6.545215606689453
    8. 'raw' → logprob: -6.545215606689453
    9. 'seg' → logprob: -7.920215606689453
    10. '   ' → logprob: -7.920215606689453

Token 1048: ' Normalize' (ID: 155762)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.841077446937561
    2. 'path' → logprob: -1.466077446937561
    3. 'segments' → logprob: -1.591077446937561
    4. ' path' → logprob: -2.8410773277282715
    5. '#' → logprob: -2.8410773277282715
    6. 'curr' → logprob: -5.0910773277282715
    7. ' segments' → logprob: -5.7160773277282715
    8. ' #' → logprob: -6.2160773277282715
    9. 'raw' → logprob: -6.8410773277282715
    10. ' curr' → logprob: -7.4660773277282715

Token 1049: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7353357672691345
    2. 'self' → logprob: -0.8603357672691345
    3. '       ' → logprob: -2.6103358268737793
    4. ' path' → logprob: -4.610335826873779
    5. 'path' → logprob: -5.110335826873779
    6. 'segments' → logprob: -6.110335826873779
    7. 'pathname' → logprob: -6.485335826873779
    8. ' raw' → logprob: -6.735335826873779
    9. ' pathname' → logprob: -6.985335826873779
    10. ' segments' → logprob: -7.235335826873779

Token 1050: ' pathname' (ID: 86882)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.8230543732643127
    2. ' path' → logprob: -1.073054313659668
    3. ' pathname' → logprob: -2.323054313659668
    4. 'pathname' → logprob: -2.448054313659668
    5. ' given' → logprob: -4.323054313659668
    6. ')' → logprob: -4.823054313659668
    7. '_path' → logprob: -6.198054313659668
    8. 'n' → logprob: -6.323054313659668
    9. 'absolute' → logprob: -6.698054313659668
    10. 'given' → logprob: -6.698054313659668

Token 1051: ' string' (ID: 1621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5630285739898682
    2. '(self' → logprob: -0.9380285739898682
    3. 'self' → logprob: -4.063028335571289
    4. '   ' → logprob: -4.563028335571289
    5. ',' → logprob: -6.063028335571289
    6. '
' → logprob: -6.188028335571289
    7. ' to' → logprob: -6.688028335571289
    8. ' self' → logprob: -6.688028335571289
    9. ')' → logprob: -6.938028335571289
    10. ':' → logprob: -7.188028335571289

Token 1052: ' into' (ID: 1511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19840720295906067
    2. '(self' → logprob: -2.4484071731567383
    3. ',' → logprob: -3.0734071731567383
    4. '):
' → logprob: -4.698407173156738
    5. ':' → logprob: -5.323407173156738
    6. '   ' → logprob: -5.323407173156738
    7. ')' → logprob: -5.448407173156738
    8. ' to' → logprob: -5.948407173156738
    9. '(' → logprob: -5.948407173156738
    10. '[' → logprob: -6.073407173156738

Token 1053: ' canonical' (ID: 91323)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.13498181104660034
    2. 'a' → logprob: -2.259981870651245
    3. 'the' → logprob: -4.634981632232666
    4. ' an' → logprob: -4.884981632232666
    5. 'str' → logprob: -6.259981632232666
    6. 'canonical' → logprob: -7.134981632232666
    7. ' a' → logprob: -7.384981632232666
    8. 'Optional' → logprob: -8.134982109069824
    9. 'absolute' → logprob: -8.134982109069824
    10. 'its' → logprob: -8.259982109069824

Token 1054: ' absolute' (ID: 17786)
  Prédit: ' absolute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' absolute' → logprob: -1.1645163297653198
    2. 'absolute' → logprob: -1.4145163297653198
    3. ' path' → logprob: -1.5395163297653198
    4. 'path' → logprob: -2.1645164489746094
    5. '_path' → logprob: -2.6645164489746094
    6. '/' → logprob: -4.164516448974609
    7. '/path' → logprob: -4.289516448974609
    8. '_absolute' → logprob: -4.789516448974609
    9. 'abs' → logprob: -6.164516448974609
    10. ' /' → logprob: -6.664516448974609

Token 1055: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.5299069285392761
    2. 'path' → logprob: -0.9049069285392761
    3. '_path' → logprob: -5.029906749725342
    4. '/path' → logprob: -8.9049072265625
    5. 'pathname' → logprob: -10.9049072265625
    6. ' /' → logprob: -11.4049072265625
    7. 'token' → logprob: -11.6549072265625
    8. '/' → logprob: -11.7799072265625
    9. '`' → logprob: -12.5299072265625
    10. '```' → logprob: -12.6549072265625

Token 1056: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0836242288351059
    2. '(self' → logprob: -2.8336241245269775
    3. ':' → logprob: -4.583624362945557
    4. ',' → logprob: -6.458624362945557
    5. '):
' → logprob: -6.583624362945557
    6. '
' → logprob: -6.833624362945557
    7. '   ' → logprob: -6.958624362945557
    8. ':
' → logprob: -6.958624362945557
    9. '(
' → logprob: -7.708624362945557
    10. '[' → logprob: -7.708624362945557

Token 1057: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.005277157761156559
    2. ' None' → logprob: -5.255277156829834
    3. '       ' → logprob: -10.380277633666992
    4. 'return' → logprob: -12.005277633666992
    5. '
' → logprob: -12.380277633666992
    6. '        
' → logprob: -14.630277633666992
    7. '(None' → logprob: -14.880277633666992
    8. '   ' → logprob: -15.130277633666992
    9. '`' → logprob: -15.505277633666992
    10. '           ' → logprob: -15.880277633666992

Token 1058: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6504524946212769
    2. ':
' → logprob: -0.7754524946212769
    3. ':' → logprob: -5.150452613830566
    4. ' if' → logprob: -5.275452613830566
    5. '):
' → logprob: -6.275452613830566
    6. '```' → logprob: -7.025452613830566
    7. ',' → logprob: -7.400452613830566
    8. 'if' → logprob: -7.525452613830566
    9. ' to' → logprob: -7.775452613830566
    10. '[' → logprob: -7.900452613830566

Token 1059: ' path' (ID: 3104)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.22713488340377808
    2. 'invalid' → logprob: -2.352134943008423
    3. 'it' → logprob: -2.477134943008423
    4. ' not' → logprob: -4.227134704589844
    5. ' invalid' → logprob: -5.977134704589844
    6. 'the' → logprob: -5.977134704589844
    7. ' it' → logprob: -6.352134704589844
    8. 'no' → logprob: -7.477134704589844
    9. 'self' → logprob: -7.852134704589844
    10. 'cannot' → logprob: -8.227134704589844

Token 1060: ' invalid' (ID: 15796)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5341825485229492
    2. 'is' → logprob: -2.034182548522949
    3. 'cannot' → logprob: -2.534182548522949
    4. ' does' → logprob: -3.034182548522949
    5. 'does' → logprob: -3.284182548522949
    6. ' not' → logprob: -3.659182548522949
    7. 'not' → logprob: -3.659182548522949
    8. ' cannot' → logprob: -3.784182548522949
    9. '_not' → logprob: -5.034182548522949
    10. '       ' → logprob: -5.159182548522949

Token 1061: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01854109577834606
    2. '):
' → logprob: -4.393540859222412
    3. '(self' → logprob: -6.018540859222412
    4. ':
' → logprob: -6.268540859222412
    5. '
' → logprob: -7.893540859222412
    6. ')' → logprob: -8.26854133605957
    7. 'self' → logprob: -8.39354133605957
    8. '   ' → logprob: -8.39354133605957
    9. '.
' → logprob: -8.64354133605957
    10. ':' → logprob: -8.76854133605957

Token 1062: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004844003822654486
    2. '
' → logprob: -5.6298441886901855
    3. '```' → logprob: -7.3798441886901855
    4. '        
' → logprob: -7.5048441886901855
    5. ' 
' → logprob: -11.629843711853027
    6. '`' → logprob: -11.754843711853027
    7. '    
' → logprob: -11.754843711853027
    8. '#' → logprob: -12.004843711853027
    9. '   ' → logprob: -12.379843711853027
    10. '``' → logprob: -12.629843711853027

Token 1063: ' Steps' (ID: 60117)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016823208425194025
    2. '
' → logprob: -6.751682281494141
    3. '        
' → logprob: -7.751682281494141
    4. '```' → logprob: -10.00168228149414
    5. ' 
' → logprob: -11.37668228149414
    6. '\n' → logprob: -11.87668228149414
    7. ')' → logprob: -13.12668228149414
    8. '    
' → logprob: -13.12668228149414
    9. '#' → logprob: -13.12668228149414
    10. '):
' → logprob: -13.50168228149414

Token 1064: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0943366065621376
    2. ':' → logprob: -2.59433650970459
    3. '   ' → logprob: -4.84433650970459
    4. ' =' → logprob: -6.09433650970459
    5. '=' → logprob: -6.59433650970459
    6. ':
' → logprob: -7.34433650970459
    7. '        
' → logprob: -7.34433650970459
    8. '):' → logprob: -7.59433650970459
    9. '(self' → logprob: -7.96933650970459
    10. '...' → logprob: -8.59433650970459

Token 1065: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.08944896562025e-05
    2. '```' → logprob: -9.875081062316895
    3. '        
' → logprob: -11.750081062316895
    4. '           ' → logprob: -12.500081062316895
    5. '`' → logprob: -12.625081062316895
    6. '1' → logprob: -12.750081062316895
    7. '#' → logprob: -12.750081062316895
    8. '"""' → logprob: -13.125081062316895
    9. '   ' → logprob: -13.375081062316895
    10. '        ' → logprob: -13.875081062316895

Token 1066: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015817560255527496
    2. 'segments' → logprob: -5.140817642211914
    3. '#' → logprob: -5.890817642211914
    4. '1' → logprob: -6.015817642211914
    5. ' segments' → logprob: -6.765817642211914
    6. '        ' → logprob: -7.390817642211914
    7. ' #' → logprob: -7.515817642211914
    8. '```' → logprob: -7.515817642211914
    9. ' path' → logprob: -7.765817642211914
    10. 'path' → logprob: -8.140817642211914

Token 1067: ' Split' (ID: 44687)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.4127786159515381
    2. 'curr' → logprob: -2.787778615951538
    3. '       ' → logprob: -3.287778615951538
    4. 'start' → logprob: -3.412778615951538
    5. ' segments' → logprob: -3.412778615951538
    6. 'Start' → logprob: -3.912778615951538
    7. ' curr' → logprob: -4.037778854370117
    8. 'Normalize' → logprob: -4.162778854370117
    9. 'Initialize' → logprob: -4.287778854370117
    10. '#' → logprob: -4.412778854370117

Token 1068: ' into' (ID: 1511)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.4331969022750854
    2. ' into' → logprob: -1.6831969022750854
    3. 'path' → logprob: -1.9331969022750854
    4. ' path' → logprob: -2.433197021484375
    5. '_path' → logprob: -2.433197021484375
    6. 'the' → logprob: -3.058197021484375
    7. '       ' → logprob: -3.058197021484375
    8. 'self' → logprob: -3.183197021484375
    9. ' self' → logprob: -4.183197021484375
    10. 'segments' → logprob: -4.183197021484375

Token 1069: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.015495290979743004
    2. 'tokens' → logprob: -4.515495300292969
    3. ' segments' → logprob: -5.890495300292969
    4. 'self' → logprob: -7.265495300292969
    5. 'path' → logprob: -7.765495300292969
    6. ' tokens' → logprob: -8.515495300292969
    7. 'components' → logprob: -9.015495300292969
    8. 'parts' → logprob: -9.265495300292969
    9. '```' → logprob: -10.765495300292969
    10. 'normalized' → logprob: -10.765495300292969

Token 1070: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013626477681100368
    2. ',' → logprob: -5.388626575469971
    3. '
' → logprob: -5.513626575469971
    4. 'segments' → logprob: -7.138626575469971
    5. ':' → logprob: -7.263626575469971
    6. '.' → logprob: -7.388626575469971
    7. 'tokens' → logprob: -7.388626575469971
    8. '        
' → logprob: -7.638626575469971
    9. ' and' → logprob: -7.763626575469971
    10. ' (' → logprob: -8.263626098632812

Token 1071: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000774846994318068
    2. ',' → logprob: -8.625774383544922
    3. '        
' → logprob: -8.750774383544922
    4. '```' → logprob: -8.750774383544922
    5. '...' → logprob: -9.750774383544922
    6. '   ' → logprob: -10.000774383544922
    7. '#' → logprob: -10.000774383544922
    8. '           ' → logprob: -11.000774383544922
    9. ')' → logprob: -11.375774383544922
    10. 'tokens' → logprob: -11.500774383544922

Token 1072: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037890311796218157
    2. '-' (adapté à ' -') → logprob: -6.503788948059082
    3. '#' → logprob: -6.878788948059082
    4. 'current' → logprob: -8.003788948059082
    5. '   ' → logprob: -8.503788948059082
    6. 'tokens' → logprob: -8.503788948059082
    7. 'result' → logprob: -9.503788948059082
    8. 'token' → logprob: -9.628788948059082
    9. 'prev' → logprob: -9.628788948059082
    10. ' #' → logprob: -9.878788948059082

Token 1073: ' Resolve' (ID: 89269)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.259077787399292
    2. 'Initialize' → logprob: -1.634077787399292
    3. ' result' → logprob: -2.134077787399292
    4. 'stack' → logprob: -2.509077787399292
    5. 'resolved' → logprob: -2.759077787399292
    6. 'Normalize' → logprob: -3.384077787399292
    7. ' stack' → logprob: -3.509077787399292
    8. 'Use' → logprob: -4.009078025817871
    9. '       ' → logprob: -4.134078025817871
    10. 'Resolve' → logprob: -4.259078025817871

Token 1074: ' '.'' (ID: 64762)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.29242751002311707
    2. '.' → logprob: -2.7924275398254395
    3. '..' → logprob: -2.9174275398254395
    4. '```' → logprob: -3.5424275398254395
    5. ' segments' → logprob: -3.7924275398254395
    6. '`' → logprob: -4.5424275398254395
    7. 'for' → logprob: -4.6674275398254395
    8. 'path' → logprob: -5.1674275398254395
    9. 'curr' → logprob: -5.1674275398254395
    10. 'current' → logprob: -5.1674275398254395

Token 1075: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04323405772447586
    2. 'and' → logprob: -3.66823410987854
    3. '       ' → logprob: -4.418233871459961
    4. ',' → logprob: -6.293233871459961
    5. '
' → logprob: -6.293233871459961
    6. '        
' → logprob: -8.043233871459961
    7. ' or' → logprob: -8.293233871459961
    8. ' segments' → logprob: -8.918233871459961
    9. '   ' → logprob: -9.918233871459961
    10. ',
' → logprob: -10.043233871459961

Token 1076: ' '..' (ID: 107414)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03833315894007683
    2. '..' → logprob: -3.2883331775665283
    3. ' '..' → logprob: -8.16333293914795
    4. ' ..' → logprob: -12.91333293914795
    5. '`' → logprob: -13.16333293914795
    6. '   ' → logprob: -14.53833293914795
    7. ' ' → logprob: -14.66333293914795
    8. '..
' → logprob: -15.28833293914795
    9. '..)' → logprob: -15.28833293914795
    10. '''' → logprob: -15.66333293914795

Token 1077: ''' (ID: 6)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.8671552538871765
    2. ' segments' → logprob: -1.1171553134918213
    3. '       ' → logprob: -2.7421553134918213
    4. 'segments' → logprob: -2.8671553134918213
    5. 'tokens' → logprob: -3.3671553134918213
    6. ' and' → logprob: -3.4921553134918213
    7. ',' → logprob: -3.9921553134918213
    8. ')' → logprob: -4.492155075073242
    9. '')' → logprob: -4.867155075073242
    10. '
' → logprob: -4.992155075073242

Token 1078: ' normally' (ID: 19857)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034059707541018724
    2. '
' → logprob: -6.378406047821045
    3. '        
' → logprob: -7.378406047821045
    4. ' and' → logprob: -8.503405570983887
    5. 'segments' → logprob: -8.503405570983887
    6. ',' → logprob: -8.753405570983887
    7. ' segments' → logprob: -8.878405570983887
    8. '   ' → logprob: -9.503405570983887
    9. ' tokens' → logprob: -9.753405570983887
    10. 'tokens' → logprob: -10.003405570983887

Token 1079: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015702145174145699
    2. '
' → logprob: -6.626570224761963
    3. '        
' → logprob: -8.876569747924805
    4. ',' → logprob: -10.251569747924805
    5. '   ' → logprob: -11.001569747924805
    6. 'tokens' → logprob: -11.501569747924805
    7. ' tokens' → logprob: -11.876569747924805
    8. 'segments' → logprob: -12.126569747924805
    9. ' and' → logprob: -12.376569747924805
    10. ' for' → logprob: -12.751569747924805

Token 1080: ' with' (ID: 483)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.3581931591033936
    2. ' skip' → logprob: -2.1081931591033936
    3. 'not' → logprob: -2.3581931591033936
    4. ' also' → logprob: -2.6081931591033936
    5. ' without' → logprob: -2.8581931591033936
    6. ' stop' → logprob: -3.1081931591033936
    7. 'stop' → logprob: -3.2331931591033936
    8. 'also' → logprob: -3.2331931591033936
    9. 'without' → logprob: -3.3581931591033936
    10. 'skip' → logprob: -3.4831931591033936

Token 1081: ' problem' (ID: 4792)
  Prédit: 'special'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'special' → logprob: -0.579322338104248
    2. 'respect' → logprob: -2.079322338104248
    3. 'a' → logprob: -2.704322338104248
    4. 'some' → logprob: -2.954322338104248
    5. 'consider' → logprob: -3.204322338104248
    6. 'custom' → logprob: -3.579322338104248
    7. 'restr' → logprob: -3.704322338104248
    8. 'attention' → logprob: -4.204322338104248
    9. 'limitations' → logprob: -4.454322338104248
    10. 'the' → logprob: -4.454322338104248

Token 1082: ' rules' (ID: 9607)
  Prédit: ' rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rules' → logprob: -0.7503529787063599
    2. '-specific' → logprob: -0.8753529787063599
    3. '       ' → logprob: -3.2503528594970703
    4. ' constraints' → logprob: -3.7503528594970703
    5. ' specific' → logprob: -4.25035285949707
    6. 'specific' → logprob: -4.37535285949707
    7. '   ' → logprob: -5.75035285949707
    8. 'rules' → logprob: -5.87535285949707
    9. '-defined' → logprob: -6.50035285949707
    10. '           ' → logprob: -6.50035285949707

Token 1083: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03801567107439041
    2. '
' → logprob: -3.413015604019165
    3. '        
' → logprob: -6.038015842437744
    4. ' for' → logprob: -7.413015842437744
    5. ',' → logprob: -8.288015365600586
    6. '   ' → logprob: -8.538015365600586
    7. ' and' → logprob: -8.788015365600586
    8. ':
' → logprob: -8.913015365600586
    9. ' to' → logprob: -9.288015365600586
    10. '        ' → logprob: -9.913015365600586

Token 1084: '         ' (ID: 983)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022487416572403163
    2. '-' → logprob: -9.250225067138672
    3. '           ' → logprob: -10.375225067138672
    4. '```' → logprob: -10.750225067138672
    5. ' -' → logprob: -11.000225067138672
    6. '`' → logprob: -11.625225067138672
    7. '   ' → logprob: -11.750225067138672
    8. '        
' → logprob: -12.000225067138672
    9. '#' → logprob: -12.125225067138672
    10. ',' → logprob: -12.625225067138672

Token 1085: ' '..' (ID: 107414)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7903829216957092
    2. '       ' → logprob: -0.9153829216957092
    3. '#' → logprob: -2.6653828620910645
    4. ' -' → logprob: -3.6653828620910645
    5. '         ' → logprob: -5.1653828620910645
    6. ' #' → logprob: -5.4153828620910645
    7. ' ' → logprob: -5.5403828620910645
    8. '   ' → logprob: -5.9153828620910645
    9. '"""
' → logprob: -5.9153828620910645
    10. 'segments' → logprob: -6.0403828620910645

Token 1086: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2671931982040405
    2. '')' → logprob: -2.26719331741333
    3. ' '' → logprob: -3.39219331741333
    4. '',' → logprob: -4.26719331741333
    5. ' ')' → logprob: -4.76719331741333
    6. '':' → logprob: -5.26719331741333
    7. ''):' → logprob: -5.26719331741333
    8. ')' → logprob: -5.26719331741333
    9. ' and' → logprob: -5.39219331741333
    10. ',' → logprob: -5.64219331741333

Token 1087: ' parent' (ID: 5980)
  Prédit: ' removes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' removes' → logprob: -1.4287511110305786
    2. ' skips' → logprob: -1.4287511110305786
    3. ' not' → logprob: -1.8037511110305786
    4. ' must' → logprob: -3.053750991821289
    5. ' cannot' → logprob: -3.303750991821289
    6. ':' → logprob: -3.428750991821289
    7. 'rem' → logprob: -3.803750991821289
    8. ' continues' → logprob: -3.803750991821289
    9. ' is' → logprob: -3.803750991821289
    10. ' in' → logprob: -4.428750991821289

Token 1088: ' directory' (ID: 12552)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.1319787502288818
    2. 'segments' → logprob: -1.3819787502288818
    3. ' segments' → logprob: -2.631978750228882
    4. '_segment' → logprob: -3.006978750228882
    5. 's' → logprob: -3.131978750228882
    6. ')' → logprob: -3.506978750228882
    7. '_dir' → logprob: -3.631978750228882
    8. ' if' → logprob: -3.756978750228882
    9. 'if' → logprob: -3.756978750228882
    10. 'return' → logprob: -4.506978988647461

Token 1089: ' accesses' (ID: 175361)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.0182141065597534
    2. ' segments' → logprob: -1.7682141065597534
    3. 's' → logprob: -2.143214225769043
    4. '       ' → logprob: -2.268214225769043
    5. ':' → logprob: -3.643214225769043
    6. ' and' → logprob: -3.768214225769043
    7. ',' → logprob: -3.893214225769043
    8. ' is' → logprob: -4.018214225769043
    9. '_segments' → logprob: -4.143214225769043
    10. 'segment' → logprob: -4.393214225769043

Token 1090: ' must' (ID: 2804)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5888604521751404
    2. ' not' → logprob: -1.8388605117797852
    3. '       ' → logprob: -3.213860511779785
    4. 'are' → logprob: -3.338860511779785
    5. ' only' → logprob: -3.713860511779785
    6. 'not' → logprob: -3.963860511779785
    7. ' beyond' → logprob: -4.213860511779785
    8. ' =' → logprob: -4.338860511779785
    9. ' must' → logprob: -4.463860511779785
    10. ' should' → logprob: -4.463860511779785

Token 1091: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.27687332034111023
    2. 'be' → logprob: -1.7768733501434326
    3. ' not' → logprob: -3.4018733501434326
    4. 'always' → logprob: -4.2768731117248535
    5. ' be' → logprob: -4.5268731117248535
    6. 'never' → logprob: -6.0268731117248535
    7. 'resolve' → logprob: -6.5268731117248535
    8. 'go' → logprob: -6.9018731117248535
    9. ' always' → logprob: -7.0268731117248535
    10. 'return' → logprob: -7.1518731117248535

Token 1092: ' escape' (ID: 21544)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.07593973726034164
    2. 'escape' → logprob: -2.950939655303955
    3. 'allow' → logprob: -4.700939655303955
    4. ' go' → logprob: -5.700939655303955
    5. 'move' → logprob: -5.950939655303955
    6. 'pop' → logprob: -6.450939655303955
    7. 'lead' → logprob: -7.200939655303955
    8. 'ex' → logprob: -7.325939655303955
    9. 'leave' → logprob: -7.575939655303955
    10. 'step' → logprob: -8.075940132141113

Token 1093: ' root' (ID: 6577)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0160280466079712
    2. 'root' → logprob: -1.7660280466079712
    3. 'the' → logprob: -1.8910280466079712
    4. 'from' → logprob: -2.1410279273986816
    5. ' root' → logprob: -2.2660279273986816
    6. ' from' → logprob: -2.7660279273986816
    7. '       ' → logprob: -3.6410279273986816
    8. 'self' → logprob: -6.141027927398682
    9. '/root' → logprob: -7.016027927398682
    10. ' beyond' → logprob: -7.266027927398682

Token 1094: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001978237647563219
    2. '
' → logprob: -6.751978397369385
    3. '        
' → logprob: -8.126977920532227
    4. ',' → logprob: -9.126977920532227
    5. '   ' → logprob: -9.501977920532227
    6. 'segments' → logprob: -9.626977920532227
    7. 'def' → logprob: -10.001977920532227
    8. '```' → logprob: -10.876977920532227
    9. ')' → logprob: -11.001977920532227
    10. ' segments' → logprob: -11.251977920532227

Token 1095: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002666999935172498
    2. '        
' → logprob: -9.500267028808594
    3. '
' → logprob: -9.750267028808594
    4. '           ' → logprob: -9.875267028808594
    5. '   ' → logprob: -10.625267028808594
    6. '```' → logprob: -11.250267028808594
    7. '         ' → logprob: -11.875267028808594
    8. ',' → logprob: -12.000267028808594
    9. '        ' → logprob: -12.375267028808594
    10. '`' → logprob: -12.500267028808594

Token 1096: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003326049481984228
    2. '   ' → logprob: -9.000332832336426
    3. 'def' → logprob: -9.500332832336426
    4. '-' (adapté à ' -') → logprob: -9.625332832336426
    5. ' def' → logprob: -11.375332832336426
    6. '#' → logprob: -11.375332832336426
    7. ' ' → logprob: -11.875332832336426
    8. ' -' → logprob: -12.000332832336426
    9. '         ' → logprob: -12.375332832336426
    10. 'token' → logprob: -12.375332832336426

Token 1097: ' Handle' (ID: 25041)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2507855296134949
    2. '#' → logprob: -3.0007855892181396
    3. 'Build' → logprob: -3.5007855892181396
    4. 'def' → logprob: -3.8757855892181396
    5. 'segments' → logprob: -3.8757855892181396
    6. 'Handle' → logprob: -4.6257853507995605
    7. 'Apply' → logprob: -5.2507853507995605
    8. 'If' → logprob: -5.3757853507995605
    9. 'from' → logprob: -5.3757853507995605
    10. ' segments' → logprob: -5.5007853507995605

Token 1098: ' optional' (ID: 18297)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.3022420406341553
    2. 'self' → logprob: -2.6772420406341553
    3. 'special' → logprob: -3.1772420406341553
    4. ' trailing' → logprob: -3.4272420406341553
    5. 'the' → logprob: -3.5522420406341553
    6. 'index' → logprob: -3.9272420406341553
    7. 'segments' → logprob: -3.9272420406341553
    8. 'empty' → logprob: -4.302242279052734
    9. 'segment' → logprob: -5.177242279052734
    10. 'last' → logprob: -5.302242279052734

Token 1099: ' last' (ID: 2174)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.08337080478668213
    2. 'index' → logprob: -3.0833706855773926
    3. ' trailing' → logprob: -3.8333706855773926
    4. 'slash' → logprob: -6.208370685577393
    5. 'Index' → logprob: -6.583370685577393
    6. ''' → logprob: -6.583370685577393
    7. 'segment' → logprob: -6.708370685577393
    8. '_index' → logprob: -6.833370685577393
    9. 'segments' → logprob: -6.833370685577393
    10. 'filename' → logprob: -6.958370685577393

Token 1100: ' segment' (ID: 14806)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.9068216681480408
    2. ' segment' → logprob: -1.1568217277526855
    3. 'segment' → logprob: -2.5318217277526855
    4. ' token' → logprob: -3.5318217277526855
    5. '_token' → logprob: -3.5318217277526855
    6. ' segments' → logprob: -4.0318217277526855
    7. 'Segment' → logprob: -4.0318217277526855
    8. 'token' → logprob: -4.2818217277526855
    9. '/' → logprob: -4.4068217277526855
    10. '_segments' → logprob: -4.4068217277526855

Token 1101: ' index' (ID: 3472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10468486696481705
    2. ' if' → logprob: -2.979684829711914
    3. ':' → logprob: -3.854684829711914
    4. ':
' → logprob: -4.729684829711914
    5. ' (' → logprob: -5.854684829711914
    6. ',' → logprob: -5.979684829711914
    7. ' =' → logprob: -6.104684829711914
    8. '        
' → logprob: -6.604684829711914
    9. ' and' → logprob: -6.854684829711914
    10. '
' → logprob: -6.854684829711914

Token 1102: '.html' (ID: 4588)
  Prédit: '_file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -0.13587737083435059
    2. ' =' → logprob: -3.1358773708343506
    3. '       ' → logprob: -4.01087760925293
    4. '_' → logprob: -4.63587760925293
    5. '   ' → logprob: -4.76087760925293
    6. '.html' → logprob: -4.88587760925293
    7. 'def' → logprob: -5.13587760925293
    8. '```' → logprob: -5.26087760925293
    9. '_filename' → logprob: -5.26087760925293
    10. '_path' → logprob: -5.51087760925293

Token 1103: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013694453984498978
    2. '
' → logprob: -5.1386942863464355
    3. '(self' → logprob: -5.1386942863464355
    4. '   ' → logprob: -7.1386942863464355
    5. '        
' → logprob: -7.8886942863464355
    6. 'self' → logprob: -8.638694763183594
    7. '```' → logprob: -9.513694763183594
    8. ',' → logprob: -9.763694763183594
    9. '(' → logprob: -9.888694763183594
    10. ')
' → logprob: -9.888694763183594

Token 1104: '         ' (ID: 983)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001414426224073395
    2. '```' → logprob: -10.125141143798828
    3. '
' → logprob: -10.625141143798828
    4. '#' → logprob: -10.625141143798828
    5. '   ' → logprob: -11.000141143798828
    6. '           ' → logprob: -11.500141143798828
    7. '         ' → logprob: -11.625141143798828
    8. ' if' → logprob: -12.000141143798828
    9. 'if' → logprob: -13.250141143798828
    10. '     ' → logprob: -13.500141143798828

Token 1105: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9333694577217102
    2. 'if' (adapté à ' if') → logprob: -1.0583693981170654
    3. 'If' → logprob: -1.6833693981170654
    4. '#' → logprob: -3.4333693981170654
    5. '       ' → logprob: -3.4333693981170654
    6. ' If' → logprob: -5.3083696365356445
    7. ' #' → logprob: -6.5583696365356445
    8. '-' → logprob: -7.5583696365356445
    9. '        ' → logprob: -7.5583696365356445
    10. '         ' → logprob: -7.8083696365356445

Token 1106: ' last' (ID: 2174)
  Prédit: ' pathname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pathname' → logprob: -0.9027307033538818
    2. ' self' → logprob: -1.2777307033538818
    3. 'pathname' → logprob: -1.7777307033538818
    4. 'self' → logprob: -2.652730703353882
    5. ' len' → logprob: -3.277730703353882
    6. 'len' → logprob: -3.652730703353882
    7. ' not' → logprob: -5.027730941772461
    8. ' the' → logprob: -5.652730941772461
    9. 'the' → logprob: -7.902730941772461
    10. ' last' → logprob: -8.027730941772461

Token 1107: ' segment' (ID: 14806)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.29042932391166687
    2. 'segment' → logprob: -1.6654293537139893
    3. '_seg' → logprob: -3.7904293537139893
    4. ' segment' → logprob: -4.41542911529541
    5. '       ' → logprob: -5.29042911529541
    6. 'name' → logprob: -5.54042911529541
    7. 'token' → logprob: -5.66542911529541
    8. '_' → logprob: -5.79042911529541
    9. '   ' → logprob: -5.91542911529541
    10. '_segments' → logprob: -6.04042911529541

Token 1108: ' is' (ID: 382)
  Prédit: '.name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.4904646575450897
    2. '.is' → logprob: -1.615464687347412
    3. '().' → logprob: -2.490464687347412
    4. '.' → logprob: -2.865464687347412
    5. '       ' → logprob: -4.115464687347412
    6. ' is' → logprob: -4.615464687347412
    7. ' .' → logprob: -4.990464687347412
    8. ' and' → logprob: -5.365464687347412
    9. '   ' → logprob: -5.615464687347412
    10. 'name' → logprob: -5.865464687347412

Token 1109: ' omitted' (ID: 92895)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32976916432380676
    2. 'Path' → logprob: -1.4547691345214844
    3. 'index' → logprob: -4.204769134521484
    4. ' self' → logprob: -4.454769134521484
    5. 'a' → logprob: -4.954769134521484
    6. ''.' → logprob: -5.454769134521484
    7. ' Path' → logprob: -5.579769134521484
    8. 'Index' → logprob: -5.704769134521484
    9. ' a' → logprob: -7.954769134521484
    10. 'Segment' → logprob: -8.329769134521484

Token 1110: ' index' (ID: 3472)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6802611351013184
    2. ',' → logprob: -0.9302611351013184
    3. ' and' → logprob: -2.4302611351013184
    4. ':' → logprob: -5.555261135101318
    5. '       ' → logprob: -5.680261135101318
    6. ',
' → logprob: -6.930261135101318
    7. 'and' → logprob: -7.055261135101318
    8. '/' → logprob: -7.930261135101318
    9. '           ' → logprob: -8.055261611938477
    10. ':
' → logprob: -8.180261611938477

Token 1111: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.144250750541687
    2. '.' → logprob: -2.3942508697509766
    3. '_file' → logprob: -4.269250869750977
    4. '       ' → logprob: -5.269250869750977
    5. '_name' → logprob: -5.394250869750977
    6. '_filename' → logprob: -5.519250869750977
    7. '_' → logprob: -5.769250869750977
    8. ''.' → logprob: -6.144250869750977
    9. '_path' → logprob: -6.644250869750977
    10. '_html' → logprob: -6.769250869750977

Token 1112: ' (' (ID: 350)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.31385815143585205
    2. '       ' → logprob: -2.4388580322265625
    3. ' and' → logprob: -2.8138580322265625
    4. ':
' → logprob: -3.1888580322265625
    5. ',' → logprob: -3.3138580322265625
    6. '           ' → logprob: -4.3138580322265625
    7. ':' → logprob: -4.9388580322265625
    8. 'or' → logprob: -5.4388580322265625
    9. 'and' → logprob: -5.4388580322265625
    10. '/' → logprob: -5.4388580322265625

Token 1113: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9209639430046082
    2. ' or' → logprob: -1.545964002609253
    3. '),' → logprob: -1.670964002609253
    4. '')' → logprob: -2.295964002609253
    5. ''),' → logprob: -3.295964002609253
    6. ' and' → logprob: -3.920964002609253
    7. ',' → logprob: -5.045963764190674
    8. '):
' → logprob: -5.045963764190674
    9. '/' → logprob: -5.045963764190674
    10. '       ' → logprob: -5.670963764190674

Token 1114: '.e' (ID: 2560)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8050464987754822
    2. 'f' → logprob: -1.305046558380127
    3. 'nd' → logprob: -1.555046558380127
    4. 'n' → logprob: -3.305046558380127
    5. 't' → logprob: -3.680046558380127
    6. 'if' → logprob: -6.305046558380127
    7. 'self' → logprob: -7.055046558380127
    8. ')' → logprob: -7.180046558380127
    9. 'm' → logprob: -7.430046558380127
    10. 'ndef' → logprob: -7.680046558380127

Token 1115: '.' (ID: 13)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7530759572982788
    2. 'f' → logprob: -2.1280760765075684
    3. '''' → logprob: -2.3780760765075684
    4. ' if' → logprob: -2.5030760765075684
    5. '.' → logprob: -2.8780760765075684
    6. '),' → logprob: -2.8780760765075684
    7. 'self' → logprob: -3.1280760765075684
    8. ')' → logprob: -3.2530760765075684
    9. '.),' → logprob: -3.2530760765075684
    10. '.e' → logprob: -3.6280760765075684

Token 1116: ' ends' (ID: 17095)
  Prédit: 'pathname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pathname' → logprob: -0.39296919107437134
    2. ' pathname' → logprob: -1.5179691314697266
    3. 'not' → logprob: -3.0179691314697266
    4. ' not' → logprob: -3.3929691314697266
    5. 'self' → logprob: -4.392969131469727
    6. ' self' → logprob: -5.642969131469727
    7. 'len' → logprob: -6.142969131469727
    8. '(not' → logprob: -7.517969131469727
    9. ' len' → logprob: -7.517969131469727
    10. ')' → logprob: -7.642969131469727

Token 1117: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.00901136826723814
    2. ' with' → logprob: -4.884011268615723
    3. '/' → logprob: -7.259011268615723
    4. '       ' → logprob: -8.134011268615723
    5. 'in' → logprob: -9.759011268615723
    6. '           ' → logprob: -10.134011268615723
    7. '   ' → logprob: -10.134011268615723
    8. '('/')' → logprob: -10.384011268615723
    9. 'without' → logprob: -10.384011268615723
    10. '==' → logprob: -10.884011268615723

Token 1118: ' slash' (ID: 79755)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.12013578414916992
    2. ''' → logprob: -2.74513578414917
    3. '/' → logprob: -3.74513578414917
    4. ' '/' → logprob: -5.24513578414917
    5. '/)' → logprob: -5.49513578414917
    6. '"/' → logprob: -5.62013578414917
    7. ' '/')' → logprob: -5.87013578414917
    8. 'slash' → logprob: -5.99513578414917
    9. '`' → logprob: -6.12013578414917
    10. 'a' → logprob: -6.49513578414917

Token 1119: ' after' (ID: 1934)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.13193273544311523
    2. '),' → logprob: -2.7569327354431152
    3. ')' → logprob: -4.006932735443115
    4. ',' → logprob: -4.006932735443115
    5. 'or' → logprob: -4.756932735443115
    6. '       ' → logprob: -5.131932735443115
    7. '):
' → logprob: -5.256932735443115
    8. ' and' → logprob: -6.881932735443115
    9. ''),' → logprob: -7.256932735443115
    10. '):' → logprob: -7.256932735443115

Token 1120: ' directory' (ID: 12552)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6216517090797424
    2. 'a' → logprob: -1.4966516494750977
    3. 'segment' → logprob: -2.3716516494750977
    4. 'last' → logprob: -3.7466516494750977
    5. 'def' → logprob: -3.8716516494750977
    6. 'spl' → logprob: -3.8716516494750977
    7. 'segments' → logprob: -4.371651649475098
    8. 'normal' → logprob: -4.371651649475098
    9. ' the' → logprob: -4.746651649475098
    10. 'directory' → logprob: -5.121651649475098

Token 1121: '),
' (ID: 2313)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.2573307752609253
    2. '):
' → logprob: -1.2573307752609253
    3. '),' → logprob: -1.6323307752609253
    4. '):' → logprob: -3.257330894470215
    5. 'name' → logprob: -3.257330894470215
    6. ' and' → logprob: -3.882330894470215
    7. '       ' → logprob: -4.007330894470215
    8. ',' → logprob: -4.007330894470215
    9. 'segment' → logprob: -4.007330894470215
    10. ' segment' → logprob: -4.132330894470215

Token 1122: '         ' (ID: 983)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046870309859514236
    2. '#' → logprob: -3.171870231628418
    3. '   ' → logprob: -7.046870231628418
    4. '           ' → logprob: -7.671870231628418
    5. 'def' → logprob: -7.921870231628418
    6. ' then' → logprob: -8.046870231628418
    7. ' and' → logprob: -8.296870231628418
    8. 'return' → logprob: -8.546870231628418
    9. '        ' → logprob: -8.921870231628418
    10. 'and' → logprob: -9.046870231628418

Token 1123: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7206055521965027
    2. 'return' → logprob: -1.3456056118011475
    3. '#' → logprob: -2.2206056118011475
    4. '           ' → logprob: -3.0956056118011475
    5. 'then' → logprob: -3.4706056118011475
    6. 'we' (adapté à ' we') → logprob: -3.8456056118011475
    7. ' return' → logprob: -3.8456056118011475
    8. ' then' → logprob: -4.845605373382568
    9. 'the' → logprob: -5.095605373382568
    10. '        ' → logprob: -6.720605373382568

Token 1124: ' check' (ID: 2371)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8303925395011902
    2. 'continue' → logprob: -0.8303925395011902
    3. '       ' → logprob: -2.580392599105835
    4. ' should' → logprob: -4.705392360687256
    5. ' add' → logprob: -4.705392360687256
    6. ' return' → logprob: -5.080392360687256
    7. 'return' → logprob: -5.330392360687256
    8. 'should' → logprob: -5.705392360687256
    9. 'append' → logprob: -5.955392360687256
    10. '           ' → logprob: -6.080392360687256

Token 1125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3471952974796295
    2. 'if' → logprob: -1.3471952676773071
    3. '       ' → logprob: -3.8471953868865967
    4. ' for' → logprob: -5.597195148468018
    5. 'for' → logprob: -6.222195148468018
    6. 'whether' → logprob: -6.472195148468018
    7. ' the' → logprob: -6.597195148468018
    8. ' whether' → logprob: -6.722195148468018
    9. 'the' → logprob: -7.097195148468018
    10. 'index' → logprob: -8.222195625305176

Token 1126: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07029318064451218
    2. ' self' → logprob: -3.0702931880950928
    3. 'the' → logprob: -4.695292949676514
    4. '       ' → logprob: -5.570292949676514
    5. ' the' → logprob: -5.695292949676514
    6. 'index' → logprob: -6.695292949676514
    7. 'pathname' → logprob: -6.820292949676514
    8. 'path' → logprob: -7.820292949676514
    9. 'last' → logprob: -7.945292949676514
    10. 'len' → logprob: -7.945292949676514

Token 1127: '.html' (ID: 4588)
  Prédit: '_file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -0.22707152366638184
    2. '.html' → logprob: -2.102071523666382
    3. 'html' → logprob: -4.352071762084961
    4. '       ' → logprob: -4.477071762084961
    5. ' =' → logprob: -4.602071762084961
    6. '_html' → logprob: -4.852071762084961
    7. '   ' → logprob: -5.227071762084961
    8. '.' → logprob: -5.602071762084961
    9. '```' → logprob: -5.727071762084961
    10. 'file' → logprob: -6.102071762084961

Token 1128: ' file' (ID: 1974)
  Prédit: ' exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exists' → logprob: -0.8853825926780701
    2. ' in' → logprob: -1.2603826522827148
    3. 'in' → logprob: -2.260382652282715
    4. 'exists' → logprob: -2.385382652282715
    5. ' is' → logprob: -2.885382652282715
    6. '       ' → logprob: -3.885382652282715
    7. ')' → logprob: -4.885382652282715
    8. ' can' → logprob: -5.635382652282715
    9. 'is' → logprob: -6.010382652282715
    10. '   ' → logprob: -6.260382652282715

Token 1129: ' exists' (ID: 13031)
  Prédit: ' exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exists' → logprob: -1.3456562757492065
    2. ' in' → logprob: -1.7206562757492065
    3. ' is' → logprob: -1.8456562757492065
    4. '       ' → logprob: -1.9706562757492065
    5. 'in' → logprob: -2.095656394958496
    6. 'exists' → logprob: -2.345656394958496
    7. 'is' → logprob: -4.720656394958496
    8. ':
' → logprob: -5.220656394958496
    9. '           ' → logprob: -5.220656394958496
    10. '   ' → logprob: -5.470656394958496

Token 1130: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004984339699149132
    2. ' and' → logprob: -6.379984378814697
    3. ',' → logprob: -7.129984378814697
    4. '
' → logprob: -7.254984378814697
    5. ':
' → logprob: -8.129983901977539
    6. '           ' → logprob: -8.379983901977539
    7. '.
' → logprob: -8.379983901977539
    8. ' or' → logprob: -8.629983901977539
    9. '.' → logprob: -8.879983901977539
    10. ':' → logprob: -9.129983901977539

Token 1131: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.25254565477371216
    2. 'that' → logprob: -2.1275455951690674
    3. 'self' → logprob: -3.1275455951690674
    4. 'pathname' → logprob: -3.7525455951690674
    5. 'path' → logprob: -4.6275458335876465
    6. ' the' → logprob: -4.8775458335876465
    7. 'segments' → logprob: -4.8775458335876465
    8. '       ' → logprob: -5.1275458335876465
    9. ' that' → logprob: -6.1275458335876465
    10. 'last' → logprob: -6.6275458335876465

Token 1132: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.06969629973173141
    2. ' directory' → logprob: -3.0696961879730225
    3. 'segment' → logprob: -4.069696426391602
    4. ' segment' → logprob: -6.444696426391602
    5. '       ' → logprob: -7.569696426391602
    6. 'last' → logprob: -8.319696426391602
    7. 'dir' → logprob: -8.694696426391602
    8. 'path' → logprob: -8.819696426391602
    9. ' last' → logprob: -8.944696426391602
    10. '   ' → logprob: -9.069696426391602

Token 1133: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004710176028311253
    2. '
' → logprob: -5.6297101974487305
    3. '        
' → logprob: -7.2547101974487305
    4. ',' → logprob: -8.62971019744873
    5. '```' → logprob: -9.75471019744873
    6. '    
' → logprob: -10.25471019744873
    7. '           ' → logprob: -11.12971019744873
    8. ':
' → logprob: -11.12971019744873
    9. ',
' → logprob: -11.12971019744873
    10. ':' → logprob: -11.25471019744873

Token 1134: ' map' (ID: 4014)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'det' → logprob: -1.1658823490142822
    2. 'append' → logprob: -1.2908823490142822
    3. 'return' → logprob: -2.1658823490142822
    4. 'include' → logprob: -2.1658823490142822
    5. 'dec' → logprob: -2.7908823490142822
    6. 'consider' → logprob: -3.6658823490142822
    7. 'complete' → logprob: -3.7908823490142822
    8. 'add' → logprob: -4.790882110595703
    9. 'normalize' → logprob: -4.790882110595703
    10. 'continue' → logprob: -4.790882110595703

Token 1135: ' equival' (ID: 56509)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9608440399169922
    2. ' to' → logprob: -2.085844039916992
    3. 'self' → logprob: -2.460844039916992
    4. ' the' → logprob: -2.585844039916992
    5. '):
' → logprob: -2.960844039916992
    6. ')
' → logprob: -3.085844039916992
    7. '           ' → logprob: -3.710844039916992
    8. 'the' → logprob: -3.710844039916992
    9. '.
' → logprob: -3.835844039916992
    10. '.' → logprob: -3.960844039916992

Token 1136: 'ence' (ID: 1082)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.11318463832139969
    2. 'al' → logprob: -2.363184690475464
    3. 'ently' → logprob: -4.863184452056885
    4. 'ents' → logprob: -6.238184452056885
    5. '   ' → logprob: -7.238184452056885
    6. 'alent' → logprob: -7.613184452056885
    7. 'ivalent' → logprob: -7.863184452056885
    8. '
' → logprob: -7.988184452056885
    9. '       ' → logprob: -7.988184452056885
    10. 'val' → logprob: -8.238184928894043

Token 1137: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007020006887614727
    2. '.
' → logprob: -6.132019996643066
    3. '.' → logprob: -6.257019996643066
    4. ',' → logprob: -6.757019996643066
    5. ':' → logprob: -7.757019996643066
    6. ':
' → logprob: -8.257019996643066
    7. '           ' → logprob: -8.257019996643066
    8. ' and' → logprob: -8.632019996643066
    9. '
' → logprob: -8.632019996643066
    10. '        
' → logprob: -9.132019996643066

Token 1138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011687451973557472
    2. '
' → logprob: -4.511687278747559
    3. '        
' → logprob: -7.886687278747559
    4. '```' → logprob: -8.636687278747559
    5. '    
' → logprob: -11.136687278747559
    6. '\n' → logprob: -11.261687278747559
    7. '``' → logprob: -11.386687278747559
    8. '           ' → logprob: -11.886687278747559
    9. '   ' → logprob: -12.011687278747559
    10. '`' → logprob: -12.636687278747559

Token 1139: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035811839625239372
    2. '
' → logprob: -6.3785810470581055
    3. '        
' → logprob: -6.7535810470581055
    4. '```' → logprob: -7.5035810470581055
    5. '    
' → logprob: -10.003581047058105
    6. '``' → logprob: -11.128581047058105
    7. '\n' → logprob: -11.253581047058105
    8. '#' → logprob: -11.378581047058105
    9. '`' → logprob: -11.378581047058105
    10. '  
' → logprob: -11.503581047058105

Token 1140: ' Remove' (ID: 18141)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5450629591941833
    2. ' def' → logprob: -1.7950630187988281
    3. 'def' → logprob: -2.045063018798828
    4. '#' → logprob: -3.420063018798828
    5. 'Resolve' → logprob: -4.795063018798828
    6. 'Handle' → logprob: -4.920063018798828
    7. 'Implement' → logprob: -5.045063018798828
    8. ' #' → logprob: -5.420063018798828
    9. ' path' → logprob: -5.420063018798828
    10. ' segments' → logprob: -5.420063018798828

Token 1141: ' last' (ID: 2174)
  Prédit: ' redundant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' redundant' → logprob: -0.9024259448051453
    2. 'tr' → logprob: -1.02742600440979
    3. ' trailing' → logprob: -2.65242600440979
    4. 'redu' → logprob: -3.90242600440979
    5. 'empty' → logprob: -4.027425765991211
    6. '.' → logprob: -4.402425765991211
    7. ' '.'' → logprob: -4.402425765991211
    8. 'dot' → logprob: -4.527425765991211
    9. ' any' → logprob: -4.527425765991211
    10. 'duplicate' → logprob: -4.652425765991211

Token 1142: ' slash' (ID: 79755)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.7658212780952454
    2. 'segment' → logprob: -1.1408212184906006
    3. '_segment' → logprob: -1.8908212184906006
    4. '_sl' → logprob: -5.01582145690918
    5. '_seg' → logprob: -5.14082145690918
    6. 'token' → logprob: -5.39082145690918
    7. 'slash' → logprob: -5.39082145690918
    8. ' if' → logprob: -5.51582145690918
    9. '       ' → logprob: -5.64082145690918
    10. 'if' → logprob: -5.76582145690918

Token 1143: ' optionally' (ID: 105438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04195883125066757
    2. '(self' → logprob: -3.416958808898926
    3. '   ' → logprob: -6.166958808898926
    4. 'self' → logprob: -6.416958808898926
    5. '
' → logprob: -7.041958808898926
    6. '        
' → logprob: -7.416958808898926
    7. 'def' → logprob: -7.916958808898926
    8. '(' → logprob: -8.291958808898926
    9. ',' → logprob: -8.416958808898926
    10. ':' → logprob: -8.666958808898926

Token 1144: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007284780964255333
    2. '
' → logprob: -5.257284641265869
    3. '        
' → logprob: -6.507284641265869
    4. '(self' → logprob: -8.257285118103027
    5. 'self' → logprob: -9.132285118103027
    6. '    
' → logprob: -9.882285118103027
    7. '   ' → logprob: -10.007285118103027
    8. ',' → logprob: -11.257285118103027
    9. 'def' → logprob: -11.757285118103027
    10. ')
' → logprob: -11.882285118103027

Token 1145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037036393769085407
    2. '
' → logprob: -6.003703594207764
    3. '        
' → logprob: -6.753703594207764
    4. '    
' → logprob: -10.378704071044922
    5. '```' → logprob: -11.378704071044922
    6. '           ' → logprob: -13.003704071044922
    7. '   ' → logprob: -13.003704071044922
    8. '#' → logprob: -13.253704071044922
    9. '  
' → logprob: -13.253704071044922
    10. '        

' → logprob: -13.503704071044922

Token 1146: ' Return' (ID: 6318)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006921391934156418
    2. '        
' → logprob: -5.506921291351318
    3. '
' → logprob: -6.006921291351318
    4. '    
' → logprob: -8.881921768188477
    5. '```' → logprob: -9.256921768188477
    6. ' 
' → logprob: -10.256921768188477
    7. '\n' → logprob: -10.756921768188477
    8. '   ' → logprob: -11.131921768188477
    9. '       
' → logprob: -11.131921768188477
    10. '#' → logprob: -11.506921768188477

Token 1147: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.07474995404481888
    2. 'None' → logprob: -2.6997499465942383
    3. ' Optional' → logprob: -5.574749946594238
    4. 'Optional' → logprob: -7.074749946594238
    5. ' str' → logprob: -9.324749946594238
    6. 'str' → logprob: -10.324749946594238
    7. ' self' → logprob: -10.949749946594238
    8. 'self' → logprob: -11.574749946594238
    9. '   ' → logprob: -12.574749946594238
    10. '```' → logprob: -13.074749946594238

Token 1148: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06635775417089462
    2. '       ' → logprob: -2.9413578510284424
    3. ')' → logprob: -5.816357612609863
    4. 'if' → logprob: -6.191357612609863
    5. '   ' → logprob: -6.316357612609863
    6. '<|end|>' → logprob: -6.566357612609863
    7. ' for' → logprob: -6.691357612609863
    8. ',' → logprob: -8.441357612609863
    9. '<|end|>' → logprob: -8.441357612609863
    10. '    ' → logprob: -8.691357612609863

Token 1149: ' path' (ID: 3104)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.1488157510757446
    2. 'pathname' → logprob: -1.1488157510757446
    3. 'False' → logprob: -1.6488157510757446
    4. ' None' → logprob: -3.023815631866455
    5. ' not' → logprob: -3.273815631866455
    6. 'path' → logprob: -3.648815631866455
    7. 'not' → logprob: -3.773815631866455
    8. ' False' → logprob: -4.148815631866455
    9. ' pathname' → logprob: -4.648815631866455
    10. 'self' → logprob: -4.898815631866455

Token 1150: ' does' (ID: 2226)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0405813492834568
    2. ' not' → logprob: -4.165581226348877
    3. '       ' → logprob: -5.415581226348877
    4. ' ==' → logprob: -5.540581226348877
    5. '_invalid' → logprob: -5.665581226348877
    6. '   ' → logprob: -5.915581226348877
    7. '
' → logprob: -6.665581226348877
    8. ':' → logprob: -6.915581226348877
    9. '):
' → logprob: -7.165581226348877
    10. ')' → logprob: -7.165581226348877

Token 1151: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.008625447750091553
    2. ' not' → logprob: -4.758625507354736
    3. '_not' → logprob: -12.758625030517578
    4. '
' → logprob: -13.008625030517578
    5. '```' → logprob: -13.133625030517578
    6. 'n't' → logprob: -14.258625030517578
    7. 't' → logprob: -14.258625030517578
    8. '_' → logprob: -14.758625030517578
    9. 'continue' → logprob: -14.758625030517578
    10. 'return' → logprob: -14.883625030517578

Token 1152: ' refer' (ID: 6716)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.10533858090639114
    2. ' exist' → logprob: -2.3553385734558105
    3. '_exist' → logprob: -6.1053385734558105
    4. ' correspond' → logprob: -6.6053385734558105
    5. 'resolve' → logprob: -6.8553385734558105
    6. ' resolve' → logprob: -8.605339050292969
    7. '```' → logprob: -9.355339050292969
    8. 'cor' → logprob: -9.980339050292969
    9. 'exists' → logprob: -10.230339050292969
    10. 'represent' → logprob: -10.605339050292969

Token 1153: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07196132093667984
    2. 'to' → logprob: -3.0719614028930664
    3. '_to' → logprob: -4.196961402893066
    4. ')' → logprob: -5.321961402893066
    5. ' None' → logprob: -6.321961402893066
    6. '_' → logprob: -7.946961402893066
    7. ' )' → logprob: -8.321961402893066
    8. 'To' → logprob: -8.571961402893066
    9. ' ' → logprob: -8.946961402893066
    10. '       ' → logprob: -9.196961402893066

Token 1154: ' existing' (ID: 9595)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6536152958869934
    2. 'an' → logprob: -1.1536152362823486
    3. 'any' → logprob: -2.5286152362823486
    4. 'existing' → logprob: -2.7786152362823486
    5. 'anything' → logprob: -4.528615474700928
    6. 'valid' → logprob: -4.903615474700928
    7. ' a' → logprob: -6.153615474700928
    8. ' an' → logprob: -7.278615474700928
    9. 'existent' → logprob: -7.278615474700928
    10. ' any' → logprob: -7.778615474700928

Token 1155: ' web' (ID: 1880)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.9129854440689087
    2. 'file' → logprob: -1.7879854440689087
    3. ' file' → logprob: -2.037985324859619
    4. ' path' → logprob: -2.037985324859619
    5. '_path' → logprob: -2.537985324859619
    6. '_file' → logprob: -3.162985324859619
    7. 'entity' → logprob: -3.662985324859619
    8. '_' → logprob: -5.037985324859619
    9. ' entity' → logprob: -5.037985324859619
    10. 'directory' → logprob: -6.787985324859619

Token 1156: ' page' (ID: 3011)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8597777485847473
    2. 'page' → logprob: -1.3597776889801025
    3. '_page' → logprob: -2.8597776889801025
    4. '_resource' → logprob: -2.8597776889801025
    5. 'site' → logprob: -2.9847776889801025
    6. '_path' → logprob: -3.2347776889801025
    7. 'root' → logprob: -3.3597776889801025
    8. 'path' → logprob: -3.9847776889801025
    9. '_root' → logprob: -4.109777927398682
    10. '_site' → logprob: -4.234777927398682

Token 1157: ' according' (ID: 7065)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002293471246957779
    2. '
' → logprob: -7.002293586730957
    3. '(self' → logprob: -7.252293586730957
    4. '   ' → logprob: -7.877293586730957
    5. '        
' → logprob: -9.002293586730957
    6. 'self' → logprob: -10.127293586730957
    7. '):
' → logprob: -10.502293586730957
    8. ':
' → logprob: -10.752293586730957
    9. '    
' → logprob: -11.002293586730957
    10. ')' → logprob: -11.127293586730957

Token 1158: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3909502923488617
    2. 'to' → logprob: -1.140950322151184
    3. ''' → logprob: -6.1409502029418945
    4. '_' → logprob: -7.6409502029418945
    5. '_to' → logprob: -7.7659502029418945
    6. 'To' → logprob: -8.390950202941895
    7. '<|end|>' → logprob: -8.640950202941895
    8. '"' → logprob: -8.640950202941895
    9. ')' → logprob: -8.890950202941895
    10. '=' → logprob: -10.140950202941895

Token 1159: ' problem' (ID: 4792)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6769929528236389
    2. 'the' → logprob: -1.3019928932189941
    3. 'filesystem' → logprob: -1.9269928932189941
    4. ' filesystem' → logprob: -3.551992893218994
    5. ' rules' → logprob: -4.426992893218994
    6. 'self' → logprob: -5.176992893218994
    7. 'rules' → logprob: -5.426992893218994
    8. 'fs' → logprob: -5.551992893218994
    9. ' file' → logprob: -5.801992893218994
    10. 'existing' → logprob: -5.926992893218994

Token 1160: ' rules' (ID: 9607)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07917892932891846
    2. '(self' → logprob: -2.954178810119629
    3. '   ' → logprob: -3.954178810119629
    4. 'self' → logprob: -6.579178810119629
    5. '
' → logprob: -6.829178810119629
    6. '        
' → logprob: -7.079178810119629
    7. '_path' → logprob: -7.829178810119629
    8. '```' → logprob: -8.204178810119629
    9. '(' → logprob: -9.204178810119629
    10. 'def' → logprob: -9.329178810119629

Token 1161: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008161775767803192
    2. '        
' → logprob: -8.125816345214844
    3. '
' → logprob: -8.250816345214844
    4. '   ' → logprob: -9.250816345214844
    5. '    
' → logprob: -9.750816345214844
    6. '(self' → logprob: -11.125816345214844
    7. 'self' → logprob: -11.250816345214844
    8. ',' → logprob: -11.375816345214844
    9. ':' → logprob: -11.500816345214844
    10. '`' → logprob: -11.750816345214844

Token 1162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002355072181671858
    2. '
' → logprob: -6.752355098724365
    3. '        
' → logprob: -7.127355098724365
    4. '```' → logprob: -8.377354621887207
    5. '    
' → logprob: -10.627354621887207
    6. '`' → logprob: -10.877354621887207
    7. ':' → logprob: -11.127354621887207
    8. '):
' → logprob: -11.127354621887207
    9. ',' → logprob: -11.252354621887207
    10. '   ' → logprob: -11.252354621887207

Token 1163: ' Return' (ID: 6318)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00388891133479774
    2. '
' → logprob: -6.253889083862305
    3. '        
' → logprob: -6.378889083862305
    4. '```' → logprob: -9.378889083862305
    5. '    
' → logprob: -9.878889083862305
    6. '`
' → logprob: -10.503889083862305
    7. ' 
' → logprob: -10.878889083862305
    8. '`' → logprob: -11.253889083862305
    9. ')' → logprob: -11.378889083862305
    10. '):
' → logprob: -11.753889083862305

Token 1164: ' canonical' (ID: 91323)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.05804331228137016
    2. ' self' → logprob: -3.4330432415008545
    3. 'None' → logprob: -4.183043479919434
    4. 'self' → logprob: -5.308043479919434
    5. ' the' → logprob: -6.933043479919434
    6. ' a' → logprob: -7.308043479919434
    7. ' normalized' → logprob: -7.933043479919434
    8. '"' → logprob: -8.058043479919434
    9. ' '' → logprob: -8.308043479919434
    10. ' path' → logprob: -8.683043479919434

Token 1165: ' absolute' (ID: 17786)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.08717471361160278
    2. ' path' → logprob: -3.712174654006958
    3. ' absolute' → logprob: -4.087174892425537
    4. '_absolute' → logprob: -4.212174892425537
    5. '_' → logprob: -4.462174892425537
    6. 'absolute' → logprob: -5.587174892425537
    7. 'path' → logprob: -5.587174892425537
    8. '`' → logprob: -5.962174892425537
    9. ')' → logprob: -6.837174892425537
    10. ' _' → logprob: -6.837174892425537

Token 1166: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.004478066228330135
    2. ' path' → logprob: -6.3794779777526855
    3. 'path' → logprob: -6.5044779777526855
    4. '_' → logprob: -7.2544779777526855
    5. ''' → logprob: -8.629478454589844
    6. ' _' → logprob: -9.129478454589844
    7. '`' → logprob: -10.379478454589844
    8. '       ' → logprob: -10.504478454589844
    9. '_name' → logprob: -10.504478454589844
    10. '_string' → logprob: -10.629478454589844

Token 1167: ' string' (ID: 1621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014079231768846512
    2. '(self' → logprob: -4.8890790939331055
    3. '
' → logprob: -6.2640790939331055
    4. '   ' → logprob: -6.2640790939331055
    5. ':' → logprob: -6.7640790939331055
    6. ':
' → logprob: -7.8890790939331055
    7. '(' → logprob: -8.264079093933105
    8. '        
' → logprob: -8.389079093933105
    9. '    
' → logprob: -9.139079093933105
    10. ',' → logprob: -9.264079093933105

Token 1168: ' otherwise' (ID: 10275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021625140216201544
    2. '(self' → logprob: -6.752162456512451
    3. '
' → logprob: -7.877162456512451
    4. '   ' → logprob: -8.62716293334961
    5. ',' → logprob: -9.00216293334961
    6. '        
' → logprob: -9.12716293334961
    7. ':' → logprob: -10.00216293334961
    8. 'self' → logprob: -10.25216293334961
    9. '(' → logprob: -10.75216293334961
    10. ':
' → logprob: -10.87716293334961

Token 1169: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014145197346806526
    2. '        
' → logprob: -7.5014142990112305
    3. ',' → logprob: -8.25141429901123
    4. '
' → logprob: -8.50141429901123
    5. '(self' → logprob: -9.37641429901123
    6. ':' → logprob: -9.37641429901123
    7. '    
' → logprob: -9.87641429901123
    8. '):
' → logprob: -10.00141429901123
    9. ')' → logprob: -10.37641429901123
    10. ':
' → logprob: -10.75141429901123

Token 1170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020435559563338757
    2. '        
' → logprob: -6.627043724060059
    3. '
' → logprob: -7.752043724060059
    4. '```' → logprob: -8.377043724060059
    5. '    
' → logprob: -11.002043724060059
    6. ' 
' → logprob: -11.127043724060059
    7. '       
' → logprob: -12.127043724060059
    8. '  
' → logprob: -12.627043724060059
    9. '``' → logprob: -12.877043724060059
    10. '`' → logprob: -12.877043724060059

Token 1171: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029609426856040955
    2. '        
' → logprob: -6.252961158752441
    3. '```' → logprob: -7.502961158752441
    4. '
' → logprob: -8.627961158752441
    5. '    
' → logprob: -9.752961158752441
    6. '\n' → logprob: -9.752961158752441
    7. ' 
' → logprob: -10.252961158752441
    8. '`' → logprob: -10.877961158752441
    9. ':' → logprob: -11.127961158752441
    10. '):
' → logprob: -11.377961158752441

Token 1172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005786505062133074
    2. '        
' → logprob: -7.750578880310059
    3. '```' → logprob: -10.000578880310059
    4. '
' → logprob: -10.125578880310059
    5. 'tokens' → logprob: -10.500578880310059
    6. '    
' → logprob: -11.500578880310059
    7. 'token' → logprob: -12.125578880310059
    8. ' 
' → logprob: -12.500578880310059
    9. '   ' → logprob: -12.625578880310059
    10. ' tokens' → logprob: -12.875578880310059

Token 1173: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.940938413143158
    2. 'segments' → logprob: -1.3159384727478027
    3. 'resolved' → logprob: -2.1909384727478027
    4. 'result' → logprob: -2.6909384727478027
    5. 'curr' → logprob: -2.6909384727478027
    6. 'stack' → logprob: -3.5659384727478027
    7. 'path' → logprob: -3.8159384727478027
    8. 'normalized' → logprob: -4.065938472747803
    9. '#' (adapté à ' #') → logprob: -4.815938472747803
    10. 'res' → logprob: -5.565938472747803

Token 1174: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6501334309577942
    2. 'segments' → logprob: -0.9001334309577942
    3. 'path' → logprob: -3.2751333713531494
    4. 'curr' → logprob: -3.9001333713531494
    5. '#' → logprob: -5.6501336097717285
    6. 'pos' → logprob: -6.0251336097717285
    7. 'stack' → logprob: -7.0251336097717285
    8. 'idx' → logprob: -7.4001336097717285
    9. 'current' → logprob: -7.5251336097717285
    10. 'normalized' → logprob: -7.6501336097717285

Token 1175: ' work' (ID: 1101)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9073042273521423
    2. 'segments' → logprob: -1.782304286956787
    3. '_segments' → logprob: -2.407304286956787
    4. 'raw' → logprob: -3.032304286956787
    5. ' segments' → logprob: -3.032304286956787
    6. '_raw' → logprob: -3.157304286956787
    7. 'def' → logprob: -3.782304286956787
    8. '       ' → logprob: -4.032304286956787
    9. 'name' → logprob: -4.032304286956787
    10. '=' → logprob: -4.157304286956787

Token 1176: ' step' (ID: 5983)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8313842415809631
    2. '_' → logprob: -1.7063841819763184
    3. ' with' → logprob: -2.0813841819763184
    4. 'with' → logprob: -2.0813841819763184
    5. '   ' → logprob: -2.9563841819763184
    6. ' on' → logprob: -4.206384181976318
    7. ' through' → logprob: -4.706384181976318
    8. ' =' → logprob: -4.831384181976318
    9. 'self' → logprob: -5.206384181976318
    10. 'on' → logprob: -5.706384181976318

Token 1177: 'wise' (ID: 7480)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0758187398314476
    2. ' by' → logprob: -3.2008187770843506
    3. '       ' → logprob: -4.0758185386657715
    4. '-by' → logprob: -5.2008185386657715
    5. '           ' → logprob: -5.4508185386657715
    6. 'wise' → logprob: -6.4508185386657715
    7. '   ' → logprob: -6.9508185386657715
    8. '=' → logprob: -6.9508185386657715
    9. '               ' → logprob: -7.7008185386657715
    10. ':' → logprob: -8.20081901550293

Token 1178: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.547673225402832
    2. 'segments' → logprob: -1.422673225402832
    3. 'curr' → logprob: -2.422673225402832
    4. 'path' → logprob: -3.047673225402832
    5. '```' → logprob: -4.297673225402832
    6. 'tokens' → logprob: -5.797673225402832
    7. ':' → logprob: -5.797673225402832
    8. ' segments' → logprob: -5.922673225402832
    9. ',' → logprob: -6.047673225402832
    10. 'pos' → logprob: -6.047673225402832

Token 1179: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.30589330196380615
    2. 'result' → logprob: -2.6808934211730957
    3. 'normalized' → logprob: -2.8058934211730957
    4. 'path' → logprob: -3.1808934211730957
    5. 'curr' → logprob: -3.6808934211730957
    6. 'resolved' → logprob: -4.180893421173096
    7. 'new' → logprob: -4.430893421173096
    8. 'self' → logprob: -4.555893421173096
    9. 'canonical' → logprob: -4.555893421173096
    10. '[' → logprob: -5.680893421173096

Token 1180: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18858347833156586
    2. 'segments' → logprob: -2.4385833740234375
    3. ':' → logprob: -3.0635833740234375
    4. 'curr' → logprob: -5.1885833740234375
    5. ' =' → logprob: -5.3135833740234375
    6. '_path' → logprob: -5.8135833740234375
    7. ',' → logprob: -5.8135833740234375
    8. '=' → logprob: -6.0635833740234375
    9. 'current' → logprob: -6.0635833740234375
    10. 'self' → logprob: -6.0635833740234375

Token 1181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03632456809282303
    2. 'segments' → logprob: -3.6613245010375977
    3. ' path' → logprob: -5.911324501037598
    4. ' segments' → logprob: -6.411324501037598
    5. 'path' → logprob: -6.911324501037598
    6. 'curr' → logprob: -7.161324501037598
    7. 'resolved' → logprob: -7.286324501037598
    8. 'normalized' → logprob: -7.661324501037598
    9. ' curr' → logprob: -7.786324501037598
    10. 'result' → logprob: -7.911324501037598

Token 1182: ' segments' (ID: 33749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0853257179260254
    2. 'segments' (adapté à ' segments') → logprob: -1.4603257179260254
    3. 'resolved' → logprob: -1.7103257179260254
    4. 'result' → logprob: -2.0853257179260254
    5. 'curr' → logprob: -3.4603257179260254
    6. 'stack' → logprob: -3.4603257179260254
    7. 'normalized' → logprob: -3.8353257179260254
    8. 'path' → logprob: -4.835325717926025
    9. ' result' → logprob: -5.085325717926025
    10. 'new' → logprob: -5.710325717926025

Token 1183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14297835528850555
    2. '=' → logprob: -2.0179784297943115
    3. ':' → logprob: -8.51797866821289
    4. '=[]' → logprob: -9.39297866821289
    5. '       ' → logprob: -12.26797866821289
    6. '=[]
' → logprob: -12.39297866821289
    7. ')' → logprob: -12.76797866821289
    8. ',' → logprob: -13.76797866821289
    9. '_tokens' → logprob: -13.76797866821289
    10. ' :' → logprob: -14.01797866821289

Token 1184: ' pathname' (ID: 86882)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.21056433022022247
    2. '[path' → logprob: -2.085564374923706
    3. 'pathname' → logprob: -3.210564374923706
    4. 'list' → logprob: -4.835564136505127
    5. '[]
' → logprob: -4.960564136505127
    6. '[' → logprob: -4.960564136505127
    7. 'path' → logprob: -6.835564136505127
    8. '[list' → logprob: -6.835564136505127
    9. '[]}' → logprob: -8.585564613342285
    10. '[self' → logprob: -8.960564613342285

Token 1185: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.0018878262490034103
    2. '._' → logprob: -7.001887798309326
    3. '.' → logprob: -7.626887798309326
    4. ' .' → logprob: -8.751888275146484
    5. 'segments' → logprob: -9.251888275146484
    6. '_segments' → logprob: -9.876888275146484
    7. '.name' → logprob: -10.001888275146484
    8. '.segment' → logprob: -10.501888275146484
    9. '.raw' → logprob: -10.751888275146484
    10. '.seg' → logprob: -10.876888275146484

Token 1186: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -0.0006887249764986336
    2. 'ments' → logprob: -7.375688552856445
    3. 'nts' → logprob: -10.500688552856445
    4. 'g' → logprob: -10.750688552856445
    5. 'gements' → logprob: -12.250688552856445
    6. 'gment' → logprob: -13.125688552856445
    7. '```' → logprob: -13.250688552856445
    8. '__' → logprob: -13.375688552856445
    9. 'segments' → logprob: -13.875688552856445
    10. '_' → logprob: -14.750688552856445

Token 1187: '[:' (ID: 7808)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6228727698326111
    2. '
' → logprob: -1.3728728294372559
    3. '.copy' → logprob: -1.9978728294372559
    4. '[:]' → logprob: -3.122872829437256
    5. '[:' → logprob: -4.622872829437256
    6. '        
' → logprob: -4.622872829437256
    7. '_copy' → logprob: -5.997872829437256
    8. 'copy' → logprob: -6.872872829437256
    9. '[::-' → logprob: -6.997872829437256
    10. 'result' → logprob: -7.247872829437256

Token 1188: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015411654021590948
    2. ']
' → logprob: -6.5015411376953125
    3. ']

' → logprob: -11.126541137695312
    4. ' ]' → logprob: -11.751541137695312
    5. ']
' → logprob: -12.001541137695312
    6. '()]' → logprob: -13.001541137695312
    7. '1' → logprob: -13.376541137695312
    8. '   ' → logprob: -13.501541137695312
    9. ')' → logprob: -13.876541137695312
    10. '       ' → logprob: -14.251541137695312

Token 1189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39626941084861755
    2. 'result' → logprob: -1.89626944065094
    3. 'normalized' → logprob: -2.8962693214416504
    4. 'stack' → logprob: -3.1462693214416504
    5. 'res' → logprob: -3.6462693214416504
    6. 'i' → logprob: -4.27126932144165
    7. 'resolved' → logprob: -4.27126932144165
    8. 'for' → logprob: -5.39626932144165
    9. ' result' → logprob: -5.39626932144165
    10. 'idx' → logprob: -5.77126932144165

Token 1190: ' #' (ID: 1069)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.5880830883979797
    2. 'result' → logprob: -1.713083028793335
    3. 'resolved' → logprob: -2.088083028793335
    4. 'i' → logprob: -2.838083028793335
    5. 'stack' → logprob: -3.088083028793335
    6. 'res' → logprob: -4.588083267211914
    7. 'canonical' → logprob: -4.713083267211914
    8. '       ' → logprob: -5.338083267211914
    9. ' normalized' → logprob: -5.838083267211914
    10. 'idx' → logprob: -5.838083267211914

Token 1191: ' Defensive' (ID: 194572)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.8550306558609009
    2. 'i' → logprob: -1.7300306558609009
    3. 'result' → logprob: -1.7300306558609009
    4. 'resolved' → logprob: -2.2300305366516113
    5. 'stack' → logprob: -2.7300305366516113
    6. 'res' → logprob: -4.230030536651611
    7. ' i' → logprob: -4.980030536651611
    8. 'canonical' → logprob: -5.230030536651611
    9. ' normalized' → logprob: -5.355030536651611
    10. 'norm' → logprob: -5.605030536651611

Token 1192: ' copy' (ID: 5150)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18828925490379333
    2. ' if' → logprob: -1.9382892847061157
    3. 'segments' → logprob: -4.938289165496826
    4. 'for' → logprob: -5.063289165496826
    5. ' segments' → logprob: -5.813289165496826
    6. 'check' → logprob: -5.938289165496826
    7. ' for' → logprob: -6.063289165496826
    8. ' check' → logprob: -6.813289165496826
    9. 'while' → logprob: -7.313289165496826
    10. '
' → logprob: -7.313289165496826

Token 1193: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30000385642051697
    2. '       ' → logprob: -2.17500376701355
    3. '        
' → logprob: -3.30000376701355
    4. 'if' → logprob: -4.300004005432129
    5. 'while' → logprob: -4.300004005432129
    6. ' if' → logprob: -4.425004005432129
    7. 'segments' → logprob: -4.675004005432129
    8. '#' → logprob: -4.925004005432129
    9. ' while' → logprob: -5.175004005432129
    10. 'idx' → logprob: -5.300004005432129

Token 1194: ' segments' (ID: 33749)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.3208041191101074
    2. 'resolved' → logprob: -1.8208041191101074
    3. 'stack' → logprob: -3.0708041191101074
    4. 'result' → logprob: -3.3208041191101074
    5. 'canonical' → logprob: -4.445804119110107
    6. ' normalized' → logprob: -4.945804119110107
    7. 'i' → logprob: -5.820804119110107
    8. 'res' → logprob: -6.320804119110107
    9. 'norm' → logprob: -6.445804119110107
    10. 'new' → logprob: -7.195804119110107

Token 1195: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08591420203447342
    2. '=' → logprob: -3.585914134979248
    3. '.pop' → logprob: -3.710914134979248
    4. '=[]' → logprob: -4.585914134979248
    5. '.append' → logprob: -5.710914134979248
    6. ':' → logprob: -5.710914134979248
    7. '.reverse' → logprob: -6.335914134979248
    8. '[:]' → logprob: -6.335914134979248
    9. '_copy' → logprob: -6.460914134979248
    10. ')' → logprob: -6.835914134979248

Token 1196: ' list' (ID: 1562)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.7468724250793457
    2. 'list' → logprob: -0.9968724250793457
    3. '[' → logprob: -1.9968724250793457
    4. '[]' → logprob: -4.996872425079346
    5. '[path' → logprob: -5.121872425079346
    6. '[
' → logprob: -5.871872425079346
    7. '[list' → logprob: -6.496872425079346
    8. '[]
' → logprob: -6.621872425079346
    9. '[s' → logprob: -6.996872425079346
    10. ' list' → logprob: -8.371871948242188

Token 1197: ' of' (ID: 328)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.9891497492790222
    2. '(' → logprob: -1.114149808883667
    3. ' =' → logprob: -2.989149808883667
    4. '=' → logprob: -3.114149808883667
    5. '(
' → logprob: -3.239149808883667
    6. '.copy' → logprob: -3.489149808883667
    7. '()' → logprob: -3.739149808883667
    8. '[' → logprob: -4.114149570465088
    9. 'copy' → logprob: -4.364149570465088
    10. '       ' → logprob: -4.364149570465088

Token 1198: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -4.179569077678025e-05
    2. 'segments' → logprob: -10.625041961669922
    3. 'Segment' → logprob: -11.125041961669922
    4. ' Path' → logprob: -13.375041961669922
    5. 'segment' → logprob: -13.875041961669922
    6. 'path' → logprob: -16.125041961669922
    7. 'Segments' → logprob: -16.875041961669922
    8. ' segments' → logprob: -17.625041961669922
    9. '_path' → logprob: -18.375041961669922
    10. '<Path' → logprob: -18.500041961669922

Token 1199: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -8.77627644513268e-06
    2. 'Token' → logprob: -12.625008583068848
    3. 'Segments' → logprob: -12.625008583068848
    4. 'segment' → logprob: -14.250008583068848
    5. ' Segment' → logprob: -14.375008583068848
    6. 'Seg' → logprob: -14.875008583068848
    7. '_segment' → logprob: -14.875008583068848
    8. 'segments' → logprob: -17.000009536743164
    9. 'Path' → logprob: -17.750009536743164
    10. '[' → logprob: -17.875009536743164

Token 1200: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31662696599960327
    2. '
' → logprob: -1.691627025604248
    3. '        
' → logprob: -4.316627025604248
    4. 'while' → logprob: -4.316627025604248
    5. 'idx' → logprob: -4.691627025604248
    6. ' i' → logprob: -5.066627025604248
    7. ' while' → logprob: -5.316627025604248
    8. 'i' → logprob: -5.441627025604248
    9. '   ' → logprob: -5.691627025604248
    10. ',' → logprob: -5.816627025604248

Token 1201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5711225867271423
    2. 'normalized' → logprob: -2.071122646331787
    3. 'resolved' → logprob: -2.321122646331787
    4. 'result' → logprob: -2.446122646331787
    5. 'stack' → logprob: -2.696122646331787
    6. 'res' → logprob: -4.321122646331787
    7. 'i' → logprob: -4.696122646331787
    8. ' normalized' → logprob: -4.821122646331787
    9. 'path' → logprob: -5.321122646331787
    10. ' result' → logprob: -5.446122646331787

Token 1202: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9898965954780579
    2. 'normalized' → logprob: -1.114896535873413
    3. 'resolved' → logprob: -1.864896535873413
    4. 'stack' → logprob: -3.114896535873413
    5. '       ' → logprob: -3.239896535873413
    6. 'res' → logprob: -4.114896774291992
    7. 'i' → logprob: -4.364896774291992
    8. 'path' → logprob: -4.989896774291992
    9. 'canonical' → logprob: -5.114896774291992
    10. 'new' → logprob: -5.489896774291992

Token 1203: ' Use' (ID: 7649)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.8061894178390503
    2. 'result' → logprob: -1.4311894178390503
    3. 'i' → logprob: -1.9311894178390503
    4. 'resolved' → logprob: -2.30618953704834
    5. 'stack' → logprob: -3.68118953704834
    6. 'canonical' → logprob: -4.43118953704834
    7. 'res' → logprob: -4.55618953704834
    8. 'idx' → logprob: -5.30618953704834
    9. 'new' → logprob: -5.43118953704834
    10. '       ' → logprob: -5.68118953704834

Token 1204: ' list' (ID: 1562)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.7661176323890686
    2. 'a' → logprob: -1.7661175727844238
    3. 'result' → logprob: -2.141117572784424
    4. 'normalized' → logprob: -2.141117572784424
    5. '[]' → logprob: -2.641117572784424
    6. 'resolved' → logprob: -3.891117572784424
    7. 'new' → logprob: -4.141117572784424
    8. 'res' → logprob: -4.641117572784424
    9. 'path' → logprob: -5.391117572784424
    10. 'canonical' → logprob: -5.641117572784424

Token 1205: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.120914936065674
    2. 'segments' → logprob: -2.245914936065674
    3. ' =' → logprob: -2.370914936065674
    4. '[]' → logprob: -2.495914936065674
    5. '=[]' → logprob: -2.495914936065674
    6. 'of' → logprob: -2.620914936065674
    7. 'to' → logprob: -2.745914936065674
    8. 'out' → logprob: -3.120914936065674
    9. '_path' → logprob: -3.620914936065674
    10. 'normalized' → logprob: -3.620914936065674

Token 1206: ' strings' (ID: 18279)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0006202232325449586
    2. 'Path' → logprob: -7.625620365142822
    3. '[str' → logprob: -9.250619888305664
    4. 'strings' → logprob: -11.125619888305664
    5. 'segments' → logprob: -11.500619888305664
    6. 'Segment' → logprob: -13.000619888305664
    7. ' str' → logprob: -13.250619888305664
    8. 'segment' → logprob: -13.250619888305664
    9. 'path' → logprob: -13.250619888305664
    10. 'string' → logprob: -13.625619888305664

Token 1207: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6192909479141235
    2. '       ' → logprob: -1.6192909479141235
    3. 'segments' → logprob: -2.119290828704834
    4. '[' → logprob: -2.994290828704834
    5. ' [' → logprob: -3.994290828704834
    6. 'names' → logprob: -4.369290828704834
    7. 'seg' → logprob: -4.619290828704834
    8. 'path' → logprob: -4.744290828704834
    9. 'curr' → logprob: -5.119290828704834
    10. '=' → logprob: -5.369290828704834

Token 1208: ' convenience' (ID: 24582)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.6970040798187256
    2. 'names' → logprob: -1.5720040798187256
    3. 'processing' → logprob: -2.5720040798187256
    4. 'segment' → logprob: -2.5720040798187256
    5. 'path' → logprob: -3.6970040798187256
    6. 'seg' → logprob: -3.8220040798187256
    7. 'name' → logprob: -4.322004318237305
    8. 'resolved' → logprob: -4.822004318237305
    9. 'the' → logprob: -5.072004318237305
    10. 'segments' → logprob: -5.197004318237305

Token 1209: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9891414046287537
    2. 'path' → logprob: -1.2391414642333984
    3. 'curr' → logprob: -2.1141414642333984
    4. ' path' → logprob: -2.4891414642333984
    5. 'segments' → logprob: -2.8641414642333984
    6. 'parts' → logprob: -3.8641414642333984
    7. 'names' → logprob: -4.489141464233398
    8. 'resolved' → logprob: -4.739141464233398
    9. 'normalized' → logprob: -4.739141464233398
    10. ' curr' → logprob: -5.239141464233398

Token 1210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5798754692077637
    2. 'path' → logprob: -1.5798754692077637
    3. ' path' → logprob: -2.5798754692077637
    4. 'segments' → logprob: -2.9548754692077637
    5. 'curr' → logprob: -3.4548754692077637
    6. 'normalized' → logprob: -3.7048754692077637
    7. 'parts' → logprob: -4.829875469207764
    8. 'current' → logprob: -4.829875469207764
    9. 'result' → logprob: -5.204875469207764
    10. 'names' → logprob: -5.454875469207764

Token 1211: ' seg' (ID: 3055)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -1.0411596298217773
    2. 'path' → logprob: -1.5411596298217773
    3. 'segments' → logprob: -2.4161596298217773
    4. 'normalized' → logprob: -2.6661596298217773
    5. 'parts' → logprob: -3.1661596298217773
    6. ' curr' → logprob: -3.4161596298217773
    7. 'result' → logprob: -3.5411596298217773
    8. 'resolved' → logprob: -3.5411596298217773
    9. 'seg' (adapté à ' seg') → logprob: -3.7911596298217773
    10. 'segment' → logprob: -3.9161596298217773

Token 1212: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07780539244413376
    2. ' =' → logprob: -3.202805280685425
    3. '_names' → logprob: -4.452805519104004
    4. '_' → logprob: -4.952805519104004
    5. '_strings' → logprob: -5.077805519104004
    6. 'ents' → logprob: -5.452805519104004
    7. '_segments' → logprob: -5.952805519104004
    8. 'ments' → logprob: -7.577805519104004
    9. '_str' → logprob: -7.577805519104004
    10. '_s' → logprob: -7.827805519104004

Token 1213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11324136704206467
    2. '=' → logprob: -2.23824143409729
    3. 's' → logprob: -7.988241195678711
    4. '       ' → logprob: -10.863241195678711
    5. ':' → logprob: -11.363241195678711
    6. '_' → logprob: -11.613241195678711
    7. '=[]' → logprob: -11.738241195678711
    8. '_name' → logprob: -12.113241195678711
    9. '   ' → logprob: -12.238241195678711
    10. '_names' → logprob: -12.488241195678711

Token 1214: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13524124026298523
    2. '[name' → logprob: -2.7602412700653076
    3. '[s' → logprob: -3.0102412700653076
    4. ' [' → logprob: -5.5102410316467285
    5. '[str' → logprob: -6.1352410316467285
    6. '[i' → logprob: -6.3852410316467285
    7. '[]' → logprob: -6.5102410316467285
    8. '[token' → logprob: -6.6352410316467285
    9. '[item' → logprob: -7.2602410316467285
    10. '[path' → logprob: -7.7602410316467285

Token 1215: 's' (ID: 82)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.05168548598885536
    2. 's' → logprob: -3.3016855716705322
    3. 'segment' → logprob: -4.301685333251953
    4. ' seg' → logprob: -12.801685333251953
    5. 'sg' → logprob: -13.301685333251953
    6. '(seg' → logprob: -14.801685333251953
    7. 'p' → logprob: -15.051685333251953
    8. ' segment' → logprob: -15.801685333251953
    9. 'x' → logprob: -16.301685333251953
    10. ' s' → logprob: -16.551685333251953

Token 1216: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.002848982810974121
    2. '.' → logprob: -6.002849102020264
    3. 'name' → logprob: -9.002848625183105
    4. '.s' → logprob: -9.252848625183105
    5. 's' → logprob: -9.877848625183105
    6. '(s' → logprob: -10.127848625183105
    7. ' .' → logprob: -10.377848625183105
    8. ' s' → logprob: -11.377848625183105
    9. '.segment' → logprob: -12.127848625183105
    10. '(name' → logprob: -12.252848625183105

Token 1217: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026545848697423935
    2. 'for' → logprob: -3.651545763015747
    3. ']' → logprob: -8.651545524597168
    4. ')' → logprob: -10.276545524597168
    5. '       ' → logprob: -11.026545524597168
    6. '        ' → logprob: -12.151545524597168
    7. '[:]' → logprob: -12.776545524597168
    8. '           ' → logprob: -12.901545524597168
    9. '<|end|>' → logprob: -13.651545524597168
    10. ' ]' → logprob: -13.651545524597168

Token 1218: ' s' (ID: 265)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.26117491722106934
    2. 's' → logprob: -1.8861749172210693
    3. 'se' → logprob: -2.8861749172210693
    4. ' segments' → logprob: -4.261175155639648
    5. 'seg' → logprob: -5.261175155639648
    6. ' s' → logprob: -5.886175155639648
    7. 'segment' → logprob: -8.386175155639648
    8. ' seg' → logprob: -9.386175155639648
    9. '_segments' → logprob: -12.136175155639648
    10. ' segmentos' → logprob: -12.636175155639648

Token 1219: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5439128875732422
    2. 'segments' → logprob: -1.0439128875732422
    3. 'se' → logprob: -3.418912887573242
    4. ' segments' → logprob: -3.793912887573242
    5. ' s' → logprob: -4.918912887573242
    6. 'seg' → logprob: -5.418912887573242
    7. '_segments' → logprob: -8.793912887573242
    8. 'segment' → logprob: -9.418912887573242
    9. ' seg' → logprob: -9.418912887573242
    10. ' segmentos' → logprob: -10.043912887573242

Token 1220: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.0012104723136872053
    2. ' segments' → logprob: -7.001210689544678
    3. 'se' → logprob: -8.12621021270752
    4. 'seg' → logprob: -12.75121021270752
    5. 'segment' → logprob: -15.62621021270752
    6. '   ' → logprob: -17.001211166381836
    7. 'Segments' → logprob: -17.126211166381836
    8. '_segments' → logprob: -18.501211166381836
    9. 's' → logprob: -18.876211166381836
    10. 'self' → logprob: -19.126211166381836

Token 1221: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020358281210064888
    2. ' ]' → logprob: -4.145358085632324
    3. ']
' → logprob: -5.645358085632324
    4. '       ' → logprob: -7.270358085632324
    5. ' ]
' → logprob: -9.895358085632324
    6. ' if' → logprob: -11.020358085632324
    7. ']

' → logprob: -11.770358085632324
    8. ']
' → logprob: -13.145358085632324
    9. '
' → logprob: -13.270358085632324
    10. '...]' → logprob: -14.145358085632324

Token 1222: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7867264151573181
    2. '       ' → logprob: -0.9117264151573181
    3. 'i' → logprob: -2.411726474761963
    4. 'idx' → logprob: -4.536726474761963
    5. ' idx' → logprob: -4.786726474761963
    6. 'stack' → logprob: -5.036726474761963
    7. 'normalized' → logprob: -5.661726474761963
    8. ' normalized' → logprob: -5.661726474761963
    9. ' if' → logprob: -5.911726474761963
    10. ' stack' → logprob: -5.911726474761963

Token 1223: ' #' (ID: 1069)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.26327091455459595
    2. 'normalized' → logprob: -1.8882708549499512
    3. 'resolved' → logprob: -2.888270854949951
    4. '       ' → logprob: -4.763270854949951
    5. 'result' → logprob: -5.013270854949951
    6. 'canonical' → logprob: -5.763270854949951
    7. 'new' → logprob: -6.013270854949951
    8. 'i' → logprob: -6.888270854949951
    9. 'res' → logprob: -6.888270854949951
    10. 'norm' → logprob: -7.013270854949951

Token 1224: ' Check' (ID: 6208)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6345887780189514
    2. 'normalized' → logprob: -1.1345887184143066
    3. 'resolved' → logprob: -2.2595887184143066
    4. 'new' → logprob: -4.134588718414307
    5. 'result' → logprob: -4.259588718414307
    6. 'canonical' → logprob: -5.509588718414307
    7. 'norm' → logprob: -5.509588718414307
    8. '#' → logprob: -6.134588718414307
    9. 'res' → logprob: -6.884588718414307
    10. 'i' → logprob: -7.009588718414307

Token 1225: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10853662341833115
    2. ' if' → logprob: -2.983536720275879
    3. 'not' → logprob: -3.483536720275879
    4. ' not' → logprob: -4.108536720275879
    5. 'for' → logprob: -5.483536720275879
    6. 'len' → logprob: -7.858536720275879
    7. ' for' → logprob: -8.608536720275879
    8. 'seg' → logprob: -8.733536720275879
    9. 'while' → logprob: -10.108536720275879
    10. 'se' → logprob: -10.233536720275879

Token 1226: ' empty' (ID: 8213)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7459551095962524
    2. ' not' → logprob: -1.4959551095962524
    3. 'len' → logprob: -2.120954990386963
    4. 'seg' → logprob: -2.495954990386963
    5. 'se' → logprob: -2.995954990386963
    6. 'i' → logprob: -3.995954990386963
    7. ' seg' → logprob: -4.245954990386963
    8. 's' → logprob: -5.745954990386963
    9. ''' → logprob: -6.370954990386963
    10. ' len' → logprob: -6.745954990386963

Token 1227: ' root' (ID: 6577)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8760966062545776
    2. 'se' → logprob: -1.2510966062545776
    3. 'segments' → logprob: -2.376096725463867
    4. ' segments' → logprob: -2.501096725463867
    5. 'if' → logprob: -3.001096725463867
    6. ' if' → logprob: -4.126096725463867
    7. ':' → logprob: -4.376096725463867
    8. '       ' → logprob: -4.876096725463867
    9. 'or' → logprob: -4.876096725463867
    10. 's' → logprob: -5.376096725463867

Token 1228: '-only' (ID: 31100)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1445760577917099
    2. ' if' → logprob: -2.644576072692871
    3. '       ' → logprob: -2.769576072692871
    4. ':' → logprob: -8.269576072692871
    5. '
' → logprob: -9.019576072692871
    6. ' =' → logprob: -9.394576072692871
    7. ' and' → logprob: -9.394576072692871
    8. ',' → logprob: -9.394576072692871
    9. ':
' → logprob: -9.519576072692871
    10. ' or' → logprob: -10.394576072692871

Token 1229: ' pathname' (ID: 86882)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36066362261772156
    2. 'if' → logprob: -1.235663652420044
    3. ' path' → logprob: -5.860663414001465
    4. '       ' → logprob: -5.985663414001465
    5. ' or' → logprob: -6.735663414001465
    6. ' and' → logprob: -6.735663414001465
    7. 'segments' → logprob: -6.985663414001465
    8. ' segments' → logprob: -7.235663414001465
    9. 'path' → logprob: -7.610663414001465
    10. ' (' → logprob: -7.735663414001465

Token 1230: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.043509263545274734
    2. '       ' → logprob: -3.5435092449188232
    3. ' if' → logprob: -4.293509483337402
    4. '
' → logprob: -13.293509483337402
    5. '```' → logprob: -13.293509483337402
    6. '==' → logprob: -13.543509483337402
    7. ':' → logprob: -14.043509483337402
    8. ' ==' → logprob: -14.668509483337402
    9. ',' → logprob: -14.793509483337402
    10. '   ' → logprob: -15.168509483337402

Token 1231: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5892899632453918
    2. '       ' → logprob: -1.339289903640747
    3. 'if' → logprob: -1.714289903640747
    4. ':' → logprob: -7.589290142059326
    5. ' ==' → logprob: -7.589290142059326
    6. ' =' → logprob: -7.839290142059326
    7. ' and' → logprob: -8.339289665222168
    8. ':
' → logprob: -8.464289665222168
    9. '==' → logprob: -8.464289665222168
    10. '
' → logprob: -8.589289665222168

Token 1232: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0362781286239624
    2. ' if' → logprob: -3.536278247833252
    3. '       ' → logprob: -5.036278247833252
    4. '```' → logprob: -12.036277770996094
    5. 'If' → logprob: -14.036277770996094
    6. '   ' → logprob: -14.161277770996094
    7. '#' → logprob: -15.411277770996094
    8. '	if' → logprob: -15.786277770996094
    9. '        
' → logprob: -16.036277770996094
    10. ' ' → logprob: -16.286277770996094

Token 1233: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5196216702461243
    2. ' not' → logprob: -1.3946216106414795
    3. 'len' → logprob: -2.0196216106414795
    4. 'se' → logprob: -4.394621849060059
    5. ' len' → logprob: -4.644621849060059
    6. ' seg' → logprob: -6.769621849060059
    7. 'seg' → logprob: -6.894621849060059
    8. ' se' → logprob: -9.019621849060059
    9. 'segments' → logprob: -9.394621849060059
    10. 'path' → logprob: -9.894621849060059

Token 1234: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.08811920136213303
    2. ' seg' → logprob: -2.5881192684173584
    3. 'seg' → logprob: -4.713119029998779
    4. 'segments' → logprob: -8.963119506835938
    5. ' segments' → logprob: -9.838119506835938
    6. 's' → logprob: -11.463119506835938
    7. ' se' → logprob: -11.588119506835938
    8. 'self' → logprob: -12.588119506835938
    9. '	se' → logprob: -13.713119506835938
    10. 'path' → logprob: -13.838119506835938

Token 1235: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0013598784571513534
    2. '_segments' → logprob: -7.876359939575195
    3. 'segments' → logprob: -8.001359939575195
    4. 'se' → logprob: -8.251359939575195
    5. '_' → logprob: -9.251359939575195
    6. '_se' → logprob: -9.251359939575195
    7. 'seg' → logprob: -9.501359939575195
    8. ' segments' → logprob: -10.001359939575195
    9. '_s' → logprob: -11.501359939575195
    10. 'gs' → logprob: -11.876359939575195

Token 1236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22678308188915253
    2. ':
' → logprob: -1.601783037185669
    3. ' or' → logprob: -7.226783275604248
    4. ':return' → logprob: -8.60178279876709
    5. ' and' → logprob: -8.97678279876709
    6. 'or' → logprob: -9.35178279876709
    7. '[' → logprob: -9.60178279876709
    8. '           ' → logprob: -9.72678279876709
    9. '       ' → logprob: -9.97678279876709
    10. 'and' → logprob: -10.47678279876709

Token 1237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005483233369886875
    2. ' return' → logprob: -5.755483150482178
    3. 'return' → logprob: -6.130483150482178
    4. ',' → logprob: -10.505483627319336
    5. ':
' → logprob: -10.630483627319336
    6. '   ' → logprob: -11.005483627319336
    7. ':' → logprob: -11.630483627319336
    8. '#' → logprob: -12.005483627319336
    9. '       ' → logprob: -12.005483627319336
    10. '          ' → logprob: -12.505483627319336

Token 1238: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08491404354572296
    2. '           ' → logprob: -2.834913969039917
    3. ' return' → logprob: -4.084914207458496
    4. 'se' → logprob: -5.584914207458496
    5. 'if' → logprob: -6.709914207458496
    6. '#' (adapté à ' #') → logprob: -7.834914207458496
    7. 'seg' → logprob: -8.584914207458496
    8. ' if' → logprob: -8.959914207458496
    9. '       ' → logprob: -9.959914207458496
    10. ' seg' → logprob: -10.459914207458496

Token 1239: ' path' (ID: 3104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10014445334672928
    2. 'if' → logprob: -2.600144386291504
    3. '#' → logprob: -4.350144386291504
    4. ' return' → logprob: -5.975144386291504
    5. 'root' → logprob: -6.475144386291504
    6. 'se' → logprob: -6.975144386291504
    7. 'segments' → logprob: -7.225144386291504
    8. 'curr' → logprob: -7.350144386291504
    9. ' if' → logprob: -7.600144386291504
    10. '           ' → logprob: -7.975144386291504

Token 1240: ' points' (ID: 5571)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1578819900751114
    2. '=' → logprob: -2.28288197517395
    3. 'return' → logprob: -3.65788197517395
    4. '           ' → logprob: -4.657882213592529
    5. ' return' → logprob: -5.657882213592529
    6. '[' → logprob: -7.407882213592529
    7. 's' → logprob: -7.657882213592529
    8. ':' → logprob: -7.907882213592529
    9. '=
' → logprob: -8.032881736755371
    10. ' =
' → logprob: -8.157881736755371

Token 1241: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5317347049713135
    2. ' to' → logprob: -0.9067347049713135
    3. '"/' → logprob: -5.031734466552734
    4. ''/' → logprob: -7.656734466552734
    5. '/' → logprob: -7.906734466552734
    6. '           ' → logprob: -8.156734466552734
    7. ' '/'' → logprob: -8.531734466552734
    8. '="/"' → logprob: -9.156734466552734
    9. ' =' → logprob: -9.281734466552734
    10. '       ' → logprob: -9.281734466552734

Token 1242: ' root' (ID: 6577)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.387301504611969
    2. '"/' → logprob: -1.2623014450073242
    3. ''/' → logprob: -3.387301445007324
    4. '/' → logprob: -6.762301445007324
    5. ' '/'' → logprob: -6.887301445007324
    6. 'index' → logprob: -7.637301445007324
    7. 'root' → logprob: -7.637301445007324
    8. 'None' → logprob: -7.887301445007324
    9. 'self' → logprob: -8.637301445007324
    10. ' "/"' → logprob: -8.887301445007324

Token 1243: ' directory' (ID: 12552)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5030651688575745
    2. 'return' → logprob: -1.3780651092529297
    3. ' return' → logprob: -2.2530651092529297
    4. '/' → logprob: -4.50306510925293
    5. ':
' → logprob: -4.75306510925293
    6. '       ' → logprob: -4.75306510925293
    7. ':' → logprob: -6.25306510925293
    8. ',' → logprob: -6.62806510925293
    9. '
' → logprob: -6.87806510925293
    10. ':return' → logprob: -7.12806510925293

Token 1244: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17340469360351562
    2. 'return' → logprob: -2.1734046936035156
    3. ' return' → logprob: -3.6734046936035156
    4. ':
' → logprob: -4.298404693603516
    5. ':' → logprob: -6.673404693603516
    6. '       ' → logprob: -6.923404693603516
    7. '
' → logprob: -7.298404693603516
    8. ',' → logprob: -7.423404693603516
    9. '               ' → logprob: -7.798404693603516
    10. '/' → logprob: -7.798404693603516

Token 1245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06571721285581589
    2. '       ' → logprob: -3.3157172203063965
    3. ':
' → logprob: -4.6907172203063965
    4. '               ' → logprob: -5.5657172203063965
    5. 'return' → logprob: -5.6907172203063965
    6. ' and' → logprob: -5.8157172203063965
    7. ':' → logprob: -6.0657172203063965
    8. ' or' → logprob: -6.3157172203063965
    9. ' return' → logprob: -6.9407172203063965
    10. '/' → logprob: -7.5657172203063965

Token 1246: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014487610198557377
    2. '           ' → logprob: -4.6394877433776855
    3. ' return' → logprob: -6.0144877433776855
    4. 'if' → logprob: -6.1394877433776855
    5. '#' (adapté à ' #') → logprob: -10.014487266540527
    6. ' if' → logprob: -10.264487266540527
    7. '       ' → logprob: -11.264487266540527
    8. 'segments' → logprob: -11.514487266540527
    9. 'seg' → logprob: -12.639487266540527
    10. 'se' → logprob: -12.764487266540527

Token 1247: ' root' (ID: 6577)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17713144421577454
    2. 'if' → logprob: -1.9271314144134521
    3. '#' → logprob: -4.177131652832031
    4. '       ' → logprob: -7.677131652832031
    5. 'curr' → logprob: -8.427131652832031
    6. ' return' → logprob: -8.927131652832031
    7. 'dir' → logprob: -9.302131652832031
    8. '           ' → logprob: -9.302131652832031
    9. 'segments' → logprob: -9.427131652832031
    10. ' if' → logprob: -9.927131652832031

Token 1248: ' does' (ID: 2226)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.6375470161437988
    2. 'return' → logprob: -1.7625470161437988
    3. '/' → logprob: -1.8875470161437988
    4. ' return' → logprob: -2.512547016143799
    5. '       ' → logprob: -3.012547016143799
    6. ' is' → logprob: -3.262547016143799
    7. ' segments' → logprob: -3.387547016143799
    8. ' =' → logprob: -3.512547016143799
    9. '_segments' → logprob: -3.637547016143799
    10. 'path' → logprob: -3.762547016143799

Token 1249: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.011135661974549294
    2. ' not' → logprob: -4.511135578155518
    3. '   ' → logprob: -10.511136054992676
    4. '
' → logprob: -10.636136054992676
    5. 'n't' → logprob: -10.886136054992676
    6. '```' → logprob: -12.511136054992676
    7. 'return' → logprob: -13.011136054992676
    8. 'continue' → logprob: -13.136136054992676
    9. '    ' → logprob: -13.261136054992676
    10. '_not' → logprob: -13.386136054992676

Token 1250: ' contain' (ID: 10232)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.618096649646759
    2. 'represent' → logprob: -1.6180965900421143
    3. 'contain' → logprob: -1.7430965900421143
    4. ' represent' → logprob: -3.4930965900421143
    5. ' have' → logprob: -4.243096828460693
    6. ' contain' → logprob: -4.868096828460693
    7. 'return' → logprob: -4.868096828460693
    8. 'end' → logprob: -5.118096828460693
    9. 'exist' → logprob: -5.493096828460693
    10. 'allow' → logprob: -5.743096828460693

Token 1251: ' file' (ID: 1974)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.46850159764289856
    2. 'files' → logprob: -1.0935015678405762
    3. 'index' → logprob: -3.718501567840576
    4. 'a' → logprob: -4.968501567840576
    5. ' any' → logprob: -5.593501567840576
    6. 'file' → logprob: -6.093501567840576
    7. 'an' → logprob: -7.593501567840576
    8. ' files' → logprob: -7.968501567840576
    9. 'filename' → logprob: -8.093502044677734
    10. ''' → logprob: -8.343502044677734

Token 1252: ' index' (ID: 3472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6192155480384827
    2. '
' → logprob: -2.119215488433838
    3. ' return' → logprob: -2.119215488433838
    4. ',' → logprob: -2.494215488433838
    5. '           ' → logprob: -2.619215488433838
    6. 'return' → logprob: -3.369215488433838
    7. ' or' → logprob: -4.744215488433838
    8. ' None' → logprob: -5.494215488433838
    9. '.' → logprob: -5.994215488433838
    10. ':
' → logprob: -6.244215488433838

Token 1253: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.9284256100654602
    2. '_segments' → logprob: -2.5534255504608154
    3. ':
' → logprob: -2.6784255504608154
    4. ' =' → logprob: -2.6784255504608154
    5. '_' → logprob: -2.8034255504608154
    6. '       ' → logprob: -3.1784255504608154
    7. '_
' → logprob: -3.3034255504608154
    8. ':' → logprob: -3.6784255504608154
    9. '
' → logprob: -3.8034255504608154
    10. '           ' → logprob: -4.1784257888793945

Token 1254: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8022236227989197
    2. '       ' → logprob: -0.9272236227989197
    3. '
' → logprob: -2.8022236824035645
    4. ':
' → logprob: -3.0522236824035645
    5. ',' → logprob: -4.3022236824035645
    6. 'return' → logprob: -4.9272236824035645
    7. ' return' → logprob: -5.3022236824035645
    8. ':' → logprob: -5.3022236824035645
    9. ' or' → logprob: -5.3022236824035645
    10. ' and' → logprob: -5.9272236824035645

Token 1255: ' cannot' (ID: 6284)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5150926113128662
    2. ' return' → logprob: -1.1400926113128662
    3. '           ' → logprob: -2.640092611312866
    4. ' None' → logprob: -5.265092849731445
    5. 'None' → logprob: -5.265092849731445
    6. ' so' → logprob: -7.390092849731445
    7. '               ' → logprob: -9.265092849731445
    8. '```' → logprob: -9.515092849731445
    9. '#' → logprob: -9.640092849731445
    10. '       ' → logprob: -9.765092849731445

Token 1256: ' be' (ID: 413)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1736774742603302
    2. 'be' → logprob: -2.048677444458008
    3. 'represent' → logprob: -4.673677444458008
    4. ' be' → logprob: -5.173677444458008
    5. 'resolve' → logprob: -5.423677444458008
    6. ' return' → logprob: -5.423677444458008
    7. 'normalize' → logprob: -5.673677444458008
    8. 'point' → logprob: -6.298677444458008
    9. 'refer' → logprob: -8.173677444458008
    10. '```' → logprob: -8.173677444458008

Token 1257: ' a' (ID: 261)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.19669924676418304
    2. 'a' → logprob: -2.0716991424560547
    3. 'canonical' → logprob: -3.6966991424560547
    4. ' normalized' → logprob: -4.696699142456055
    5. 'None' → logprob: -5.071699142456055
    6. 'resolved' → logprob: -5.321699142456055
    7. ' a' → logprob: -6.196699142456055
    8. 'returned' → logprob: -6.696699142456055
    9. 'consider' → logprob: -7.196699142456055
    10. 'mapped' → logprob: -7.571699142456055

Token 1258: ' web' (ID: 1880)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.643264651298523
    2. 'page' → logprob: -1.643264651298523
    3. 'valid' → logprob: -1.768264651298523
    4. 'web' → logprob: -2.3932647705078125
    5. 'canonical' → logprob: -4.6432647705078125
    6. 'path' → logprob: -5.3932647705078125
    7. ' valid' → logprob: -6.5182647705078125
    8. ' web' → logprob: -7.0182647705078125
    9. 'None' → logprob: -7.6432647705078125
    10. ' file' → logprob: -8.268264770507812

Token 1259: ' page' (ID: 3011)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.0021962907630950212
    2. ' page' → logprob: -7.002196311950684
    3. 'path' → logprob: -7.627196311950684
    4. 'site' → logprob: -7.752196311950684
    5. '_page' → logprob: -8.752196311950684
    6. '   ' → logprob: -9.252196311950684
    7. '-page' → logprob: -10.627196311950684
    8. '       ' → logprob: -10.627196311950684
    9. 'Page' → logprob: -11.002196311950684
    10. '/page' → logprob: -12.002196311950684

Token 1260: ' normally' (ID: 19857)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44273489713668823
    2. '       ' → logprob: -1.067734956741333
    3. 'return' → logprob: -4.817734718322754
    4. '
' → logprob: -5.567734718322754
    5. '\n' → logprob: -6.692734718322754
    6. ',' → logprob: -8.692734718322754
    7. ' return' → logprob: -9.067734718322754
    8. '               ' → logprob: -9.192734718322754
    9. '\' → logprob: -9.317734718322754
    10. '        
' → logprob: -10.067734718322754

Token 1261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40298575162887573
    2. '
' → logprob: -1.7779858112335205
    3. '           ' → logprob: -2.0279858112335205
    4. 'return' → logprob: -3.7779858112335205
    5. '\n' → logprob: -5.277985572814941
    6. ' return' → logprob: -7.027985572814941
    7. '\' → logprob: -7.402985572814941
    8. ':
' → logprob: -8.277985572814941
    9. '               ' → logprob: -8.402985572814941
    10. '        
' → logprob: -8.527985572814941

Token 1262: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22799256443977356
    2. '           ' → logprob: -1.6029925346374512
    3. 'return' → logprob: -6.852992534637451
    4. '
' → logprob: -7.477992534637451
    5. '               ' → logprob: -8.35299301147461
    6. '\n' → logprob: -8.47799301147461
    7. ' return' → logprob: -8.97799301147461
    8. '```' → logprob: -9.35299301147461
    9. '   ' → logprob: -9.47799301147461
    10. ',' → logprob: -9.85299301147461

Token 1263: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0026384377852082253
    2. '           ' → logprob: -6.252638339996338
    3. ' return' → logprob: -7.252638339996338
    4. '       ' → logprob: -14.002638816833496
    5. 'None' → logprob: -16.25263786315918
    6. '{return' → logprob: -16.37763786315918
    7. '#' (adapté à ' #') → logprob: -16.37763786315918
    8. ':return' → logprob: -16.50263786315918
    9. '               ' → logprob: -16.75263786315918
    10. '	return' → logprob: -16.87763786315918

Token 1264: ' but' (ID: 889)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -6.921253225300461e-05
    2. ' return' → logprob: -9.750069618225098
    3. '           ' → logprob: -11.875069618225098
    4. '       ' → logprob: -12.625069618225098
    5. 'if' → logprob: -14.625069618225098
    6. '#' → logprob: -16.00006866455078
    7. 'Return' → logprob: -17.37506866455078
    8. ':return' → logprob: -18.37506866455078
    9. '{return' → logprob: -18.75006866455078
    10. '               ' → logprob: -18.87506866455078

Token 1265: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.040901120752096176
    2. ' return' → logprob: -3.6659011840820312
    3. '           ' → logprob: -4.790901184082031
    4. 'None' → logprob: -5.790901184082031
    5. '#' → logprob: -6.290901184082031
    6. ' None' → logprob: -7.415901184082031
    7. '       ' → logprob: -7.790901184082031
    8. 'if' → logprob: -8.665901184082031
    9. ' #' → logprob: -10.665901184082031
    10. 'self' → logprob: -11.290901184082031

Token 1266: ' input' (ID: 3422)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13994023203849792
    2. 'False' → logprob: -2.6399402618408203
    3. 'len' → logprob: -3.3899402618408203
    4. ''' → logprob: -5.26494026184082
    5. 'se' → logprob: -5.51494026184082
    6. 'not' → logprob: -5.51494026184082
    7. ' self' → logprob: -5.88994026184082
    8. ''s' → logprob: -5.88994026184082
    9. 'seg' → logprob: -6.38994026184082
    10. 'segments' → logprob: -6.76494026184082

Token 1267: ' points' (ID: 5571)
  Prédit: '.endswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.endswith' → logprob: -1.2614933252334595
    2. 'se' → logprob: -2.26149320602417
    3. '==' → logprob: -2.38649320602417
    4. 'segments' → logprob: -2.51149320602417
    5. 'and' → logprob: -2.76149320602417
    6. '_segments' → logprob: -3.13649320602417
    7. ' and' → logprob: -3.13649320602417
    8. ':' → logprob: -3.13649320602417
    9. '       ' → logprob: -3.63649320602417
    10. ':
' → logprob: -3.88649320602417

Token 1268: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.32287004590034485
    2. 'to' → logprob: -1.3228700160980225
    3. '       ' → logprob: -5.947870254516602
    4. ')' → logprob: -6.822870254516602
    5. '==' → logprob: -6.822870254516602
    6. '/' → logprob: -7.197870254516602
    7. ' only' → logprob: -7.322870254516602
    8. '_to' → logprob: -7.572870254516602
    9. 'only' → logprob: -8.072870254516602
    10. '           ' → logprob: -8.322870254516602

Token 1269: ' '/',' (ID: 144914)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24418799579143524
    2. ''/' → logprob: -1.8691879510879517
    3. '"/' → logprob: -3.119188070297241
    4. 'self' → logprob: -4.494187831878662
    5. 'index' → logprob: -5.494187831878662
    6. ' '/'' → logprob: -7.119187831878662
    7. 'root' → logprob: -7.619187831878662
    8. '''' → logprob: -8.74418830871582
    9. 'Index' → logprob: -8.74418830871582
    10. '"' → logprob: -9.24418830871582

Token 1270: ' it' (ID: 480)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.048961006104946136
    2. ' return' → logprob: -3.1739609241485596
    3. '           ' → logprob: -5.173961162567139
    4. '#' → logprob: -8.92396068572998
    5. '       ' → logprob: -9.54896068572998
    6. 'None' → logprob: -10.17396068572998
    7. ' None' → logprob: -11.29896068572998
    8. ' #' → logprob: -11.54896068572998
    9. '```' → logprob: -13.04896068572998
    10. ':return' → logprob: -13.04896068572998

Token 1271: ' can' (ID: 665)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9447352290153503
    2. ' return' → logprob: -1.0697352886199951
    3. ' is' → logprob: -2.569735288619995
    4. '           ' → logprob: -2.694735288619995
    5. ' can' → logprob: -3.444735288619995
    6. '       ' → logprob: -4.319735050201416
    7. ' #' → logprob: -4.569735050201416
    8. ' returns' → logprob: -4.694735050201416
    9. ' will' → logprob: -5.069735050201416
    10. '#' → logprob: -5.069735050201416

Token 1272: ' be' (ID: 413)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5929436087608337
    2. 'return' → logprob: -0.9679436087608337
    3. ' return' → logprob: -2.7179436683654785
    4. '       ' → logprob: -8.09294319152832
    5. '
' → logprob: -8.21794319152832
    6. ' if' → logprob: -8.59294319152832
    7. 'if' → logprob: -9.09294319152832
    8. '#' → logprob: -9.09294319152832
    9. ',' → logprob: -9.71794319152832
    10. '{return' → logprob: -10.09294319152832

Token 1273: ' /' (ID: 820)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4187413156032562
    2. '           ' → logprob: -1.5437413454055786
    3. ' return' → logprob: -2.668741226196289
    4. 'None' → logprob: -3.918741226196289
    5. ' None' → logprob: -4.418741226196289
    6. '#' → logprob: -4.418741226196289
    7. 'if' → logprob: -4.668741226196289
    8. ' if' → logprob: -6.418741226196289
    9. ' #' → logprob: -7.043741226196289
    10. 'index' → logprob: -7.543741226196289

Token 1274: 'index' (ID: 2257)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4100155830383301
    2. ' return' → logprob: -2.03501558303833
    3. '       ' → logprob: -2.28501558303833
    4. '           ' → logprob: -2.53501558303833
    5. 'if' → logprob: -4.78501558303833
    6. ' if' → logprob: -4.78501558303833
    7. '
' → logprob: -5.28501558303833
    8. '#' → logprob: -7.03501558303833
    9. '```' → logprob: -7.41001558303833
    10. '        
' → logprob: -8.160015106201172

Token 1275: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.21509353816509247
    2. 'html' → logprob: -2.8400936126708984
    3. '_html' → logprob: -3.7150936126708984
    4. '```' → logprob: -4.090093612670898
    5. '       ' → logprob: -4.590093612670898
    6. 'if' → logprob: -4.840093612670898
    7. '_segments' → logprob: -4.840093612670898
    8. '/' → logprob: -4.840093612670898
    9. '.' → logprob: -5.090093612670898
    10. '           ' → logprob: -5.215093612670898

Token 1276: ' abbreviation' (ID: 138308)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8721038699150085
    2. '       ' → logprob: -1.2471039295196533
    3. 'if' → logprob: -1.6221039295196533
    4. ' if' → logprob: -2.4971039295196533
    5. '#' → logprob: -5.122103691101074
    6. 'index' → logprob: -5.997103691101074
    7. '        
' → logprob: -6.747103691101074
    8. ',' → logprob: -7.622103691101074
    9. 'segments' → logprob: -7.872103691101074
    10. ':' → logprob: -7.997103691101074

Token 1277: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10923432558774948
    2. 'if' → logprob: -2.85923433303833
    3. ' if' → logprob: -3.98423433303833
    4. 'index' → logprob: -4.60923433303833
    5. '
' → logprob: -4.73423433303833
    6. '#' → logprob: -5.48423433303833
    7. '           ' → logprob: -6.85923433303833
    8. '        
' → logprob: -6.98423433303833
    9. 'segments' → logprob: -7.85923433303833
    10. ',' → logprob: -7.98423433303833

Token 1278: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09070970118045807
    2. 'if' → logprob: -3.590709686279297
    3. '
' → logprob: -3.965709686279297
    4. 'return' → logprob: -4.465709686279297
    5. ' if' → logprob: -4.590709686279297
    6. '           ' → logprob: -4.840709686279297
    7. '\n' → logprob: -5.090709686279297
    8. '\' → logprob: -7.090709686279297
    9. ' return' → logprob: -7.215709686279297
    10. '   ' → logprob: -7.340709686279297

Token 1279: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.284251868724823
    2. 'se' → logprob: -1.6592519283294678
    3. '       ' → logprob: -4.034251689910889
    4. 'seg' → logprob: -4.159251689910889
    5. 'index' → logprob: -4.409251689910889
    6. '#' (adapté à ' #') → logprob: -5.659251689910889
    7. 'segments' → logprob: -5.909251689910889
    8. '           ' → logprob: -6.409251689910889
    9. 'return' → logprob: -6.534251689910889
    10. 'filename' → logprob: -7.784251689910889

Token 1280: ' let's' (ID: 35717)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07985812425613403
    2. 'index' → logprob: -2.9548580646514893
    3. '       ' → logprob: -4.454858303070068
    4. '#' → logprob: -4.829858303070068
    5. 'se' → logprob: -6.704858303070068
    6. 'root' → logprob: -6.954858303070068
    7. 'return' → logprob: -7.579858303070068
    8. 'segments' → logprob: -7.829858303070068
    9. 'seg' → logprob: -7.954858303070068
    10. ' if' → logprob: -7.954858303070068

Token 1281: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.035179510712623596
    2. '       ' → logprob: -4.785179615020752
    3. 'continue' → logprob: -4.910179615020752
    4. 'append' → logprob: -4.910179615020752
    5. 'try' → logprob: -5.410179615020752
    6. '#' → logprob: -6.160179615020752
    7. 'segments' → logprob: -6.660179615020752
    8. ' check' → logprob: -7.035179615020752
    9. 'add' → logprob: -7.285179615020752
    10. 'consider' → logprob: -7.785179615020752

Token 1282: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19668827950954437
    2. '       ' → logprob: -2.196688175201416
    3. 'index' → logprob: -3.196688175201416
    4. ' if' → logprob: -3.696688175201416
    5. 'file' → logprob: -7.571688175201416
    6. '#' → logprob: -8.571688652038574
    7. ' index' → logprob: -8.696688652038574
    8. 'filename' → logprob: -8.696688652038574
    9. '
' → logprob: -8.946688652038574
    10. 'self' → logprob: -9.071688652038574

Token 1283: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004195575136691332
    2. ' self' → logprob: -5.504195690155029
    3. ''s' → logprob: -9.879195213317871
    4. ''' → logprob: -10.004195213317871
    5. 'index' → logprob: -12.254195213317871
    6. '   ' → logprob: -12.379195213317871
    7. '       ' → logprob: -13.004195213317871
    8. '''' → logprob: -13.754195213317871
    9. '           ' → logprob: -13.879195213317871
    10. ' '' → logprob: -14.004195213317871

Token 1284: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.8608257174491882
    2. '_file' → logprob: -0.8608257174491882
    3. '.' → logprob: -2.485825777053833
    4. '('.' → logprob: -4.235825538635254
    5. '_segments' → logprob: -4.235825538635254
    6. '
' → logprob: -5.485825538635254
    7. 'segments' → logprob: -5.485825538635254
    8. ' =' → logprob: -5.735825538635254
    9. '```' → logprob: -5.735825538635254
    10. ''.' → logprob: -5.985825538635254

Token 1285: ' exists' (ID: 13031)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.636719286441803
    2. 'in' → logprob: -1.7617192268371582
    3. 'exists' → logprob: -2.011719226837158
    4. ' exists' → logprob: -2.261719226837158
    5. ')' → logprob: -4.261719226837158
    6. 'file' → logprob: -4.636719226837158
    7. '_exists' → logprob: -4.761719226837158
    8. ' is' → logprob: -4.761719226837158
    9. 'segments' → logprob: -5.511719226837158
    10. ' file' → logprob: -6.386719226837158

Token 1286: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023913221433758736
    2. ' in' → logprob: -4.523913383483887
    3. ' if' → logprob: -5.023913383483887
    4. '           ' → logprob: -6.398913383483887
    5. 'if' → logprob: -6.398913383483887
    6. ',' → logprob: -7.023913383483887
    7. 'in' → logprob: -7.648913383483887
    8. 'index' → logprob: -7.898913383483887
    9. 'self' → logprob: -8.648913383483887
    10. '/' → logprob: -9.148913383483887

Token 1287: ' root' (ID: 6577)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.23229539394378662
    2. '['' → logprob: -1.6072953939437866
    3. '[])' → logprob: -5.732295513153076
    4. '[]
' → logprob: -6.607295513153076
    5. 'self' → logprob: -6.732295513153076
    6. '["' → logprob: -7.732295513153076
    7. '[]}' → logprob: -8.357295036315918
    8. '[' → logprob: -8.982295036315918
    9. '[self' → logprob: -9.357295036315918
    10. '[]

' → logprob: -10.232295036315918

Token 1288: ' files' (ID: 6291)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1089150458574295
    2. ' if' → logprob: -2.983915090560913
    3. 'if' → logprob: -3.233915090560913
    4. '
' → logprob: -4.608914852142334
    5. '           ' → logprob: -6.733914852142334
    6. ',' → logprob: -7.858914852142334
    7. ':
' → logprob: -7.983914852142334
    8. 'index' → logprob: -8.233915328979492
    9. '        
' → logprob: -9.108915328979492
    10. 'root' → logprob: -9.233915328979492

Token 1289: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009771554730832577
    2. 'if' → logprob: -5.009771347045898
    3. ' if' → logprob: -5.884771347045898
    4. '
' → logprob: -9.259771347045898
    5. ',' → logprob: -9.384771347045898
    6. '           ' → logprob: -9.634771347045898
    7. 'index' → logprob: -12.134771347045898
    8. '   ' → logprob: -13.009771347045898
    9. '#' → logprob: -13.259771347045898
    10. '        
' → logprob: -13.259771347045898

Token 1290: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021317063365131617
    2. 'if' → logprob: -6.502131938934326
    3. ' if' → logprob: -7.627131938934326
    4. '           ' → logprob: -9.252131462097168
    5. '
' → logprob: -10.752131462097168
    6. ',' → logprob: -11.627131462097168
    7. '```' → logprob: -12.002131462097168
    8. '   ' → logprob: -12.502131462097168
    9. '        
' → logprob: -13.127131462097168
    10. '	' → logprob: -14.877131462097168

Token 1291: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25828632712364197
    2. '       ' → logprob: -1.5082863569259644
    3. ' if' → logprob: -5.133286476135254
    4. 'index' → logprob: -8.633286476135254
    5. '           ' → logprob: -9.133286476135254
    6. 'root' → logprob: -9.508286476135254
    7. '```' → logprob: -10.633286476135254
    8. '
' → logprob: -11.383286476135254
    9. '#' → logprob: -11.508286476135254
    10. 'path' → logprob: -12.383286476135254

Token 1292: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.045124832540750504
    2. ' self' → logprob: -3.1701247692108154
    3. '           ' → logprob: -6.7951250076293945
    4. 'not' → logprob: -8.170125007629395
    5. ''s' → logprob: -8.170125007629395
    6. ' not' → logprob: -8.670125007629395
    7. ''' → logprob: -8.795125007629395
    8. ' '' → logprob: -10.420125007629395
    9. '   ' → logprob: -10.420125007629395
    10. '       ' → logprob: -11.920125007629395

Token 1293: '.fs' (ID: 82179)
  Prédit: '.fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fs' → logprob: -1.4736459888808895e-05
    2. 'fs' → logprob: -11.750014305114746
    3. '.' → logprob: -13.000014305114746
    4. '	fs' → logprob: -13.750014305114746
    5. ' .' → logprob: -14.000014305114746
    6. ').' → logprob: -15.000014305114746
    7. ''.' → logprob: -15.125014305114746
    8. '`.' → logprob: -15.250014305114746
    9. '".' → logprob: -15.500014305114746

Token 1294: '.file' (ID: 17613)
  Prédit: '.file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.file' → logprob: -0.013744660653173923
    2. '.has' → logprob: -5.138744831085205
    3. '.root' → logprob: -5.263744831085205
    4. '.directory' → logprob: -6.013744831085205
    5. '.' → logprob: -9.638744354248047
    6. 'file' → logprob: -10.513744354248047
    7. '   ' → logprob: -10.638744354248047
    8. '.files' → logprob: -11.513744354248047
    9. '.index' → logprob: -11.763744354248047
    10. '.filename' → logprob: -11.888744354248047

Token 1295: '_exists' (ID: 23519)
  Prédit: '_exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exists' → logprob: -6.492120155598968e-05
    2. '_segments' → logprob: -10.375064849853516
    3. 'Exists' → logprob: -11.250064849853516
    4. '.exists' → logprob: -12.125064849853516
    5. 'exists' → logprob: -12.125064849853516
    6. 's' → logprob: -13.250064849853516
    7. '_EXISTS' → logprob: -13.500064849853516
    8. '('_' → logprob: -14.000064849853516
    9. '```' → logprob: -14.125064849853516
    10. '._' → logprob: -14.250064849853516

Token 1296: '([],' (ID: 92032)
  Prédit: '([],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([],' → logprob: -0.0002557369298301637
    2. '([]' → logprob: -8.500255584716797
    3. '(['' → logprob: -10.000255584716797
    4. '       ' → logprob: -12.750255584716797
    5. '([])
' → logprob: -13.375255584716797
    6. '[],' → logprob: -13.875255584716797
    7. '           ' → logprob: -15.000255584716797
    8. '[]' → logprob: -15.000255584716797
    9. '   ' → logprob: -15.875255584716797
    10. '([]);
' → logprob: -16.000255584716797

Token 1297: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03719419240951538
    2. ''' → logprob: -3.53719425201416
    3. ''s' → logprob: -5.28719425201416
    4. ' self' → logprob: -6.28719425201416
    5. 'Path' → logprob: -8.41219425201416
    6. '"' → logprob: -8.53719425201416
    7. 'index' → logprob: -11.16219425201416
    8. '(self' → logprob: -11.53719425201416
    9. 'Index' → logprob: -11.66219425201416
    10. '   ' → logprob: -11.78719425201416

Token 1298: '.IN' (ID: 20931)
  Prédit: 'INDEX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INDEX' → logprob: -0.14990518987178802
    2. '.IN' → logprob: -2.274905204772949
    3. 'Path' → logprob: -4.774905204772949
    4. ''' → logprob: -4.774905204772949
    5. '.Index' → logprob: -5.024905204772949
    6. 'Index' → logprob: -5.274905204772949
    7. 'index' → logprob: -5.399905204772949
    8. ''.' → logprob: -6.899905204772949
    9. '.Path' → logprob: -7.399905204772949
    10. '.index' → logprob: -8.14990520477295

Token 1299: 'DEX' (ID: 22598)
  Prédit: 'DEX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEX' → logprob: -3.047134305234067e-05
    2. 'EX' → logprob: -10.875030517578125
    3. 'D' → logprob: -11.625030517578125
    4. 'DE' → logprob: -13.500030517578125
    5. 'dex' → logprob: -14.625030517578125
    6. 'Dex' → logprob: -15.250030517578125
    7. 'DX' → logprob: -15.875030517578125
    8. '
' → logprob: -16.125030517578125
    9. '   ' → logprob: -16.625030517578125
    10. '```' → logprob: -16.750030517578125

Token 1300: '_FILE' (ID: 19131)
  Prédit: '_FILE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FILE' → logprob: -0.0003312937042210251
    2. '_File' → logprob: -8.250330924987793
    3. '_' → logprob: -11.250330924987793
    4. 'File' → logprob: -11.375330924987793
    5. '_FILES' → logprob: -11.375330924987793
    6. '_file' → logprob: -11.500330924987793
    7. '_FILENAME' → logprob: -12.000330924987793
    8. '<File' → logprob: -13.000330924987793
    9. '_HTML' → logprob: -13.000330924987793
    10. '_F' → logprob: -13.125330924987793

Token 1301: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1287975311279297
    2. '):' → logprob: -2.1287975311279297
    3. ')' → logprob: -6.87879753112793
    4. '       ' → logprob: -7.37879753112793
    5. '):
' → logprob: -8.87879753112793
    6. '           ' → logprob: -9.87879753112793
    7. ''):
' → logprob: -11.75379753112793
    8. ')==' → logprob: -12.37879753112793
    9. ':' → logprob: -13.00379753112793
    10. ':
' → logprob: -13.37879753112793

Token 1302: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28234562277793884
    2. '               ' → logprob: -1.4073456525802612
    3. ':' → logprob: -7.907345771789551
    4. 'return' → logprob: -8.03234577178955
    5. ':
' → logprob: -8.28234577178955
    6. ':return' → logprob: -9.28234577178955
    7. ' return' → logprob: -9.53234577178955
    8. '            ' → logprob: -11.03234577178955
    9. '):
' → logprob: -11.15734577178955
    10. '              ' → logprob: -12.03234577178955

Token 1303: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.171251118183136
    2. '           ' → logprob: -1.9212510585784912
    3. ' return' → logprob: -4.54625129699707
    4. '   ' → logprob: -8.67125129699707
    5. '                   ' → logprob: -9.29625129699707
    6. '               ' → logprob: -9.67125129699707
    7. '	return' → logprob: -10.92125129699707
    8. ':return' → logprob: -12.17125129699707
    9. '       ' → logprob: -13.17125129699707
    10. ' ' → logprob: -13.42125129699707

Token 1304: ' path' (ID: 3104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001184276770800352
    2. ' return' → logprob: -6.751184463500977
    3. '           ' → logprob: -11.251184463500977
    4. 'Return' → logprob: -14.626184463500977
    5. '               ' → logprob: -15.001184463500977
    6. '                   ' → logprob: -16.751184463500977
    7. '   ' → logprob: -17.001184463500977
    8. '"/' → logprob: -17.001184463500977
    9. '       ' → logprob: -17.251184463500977
    10. 'ret' → logprob: -18.001184463500977

Token 1305: ' '/'' (ID: 39443)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10396498441696167
    2. 'return' → logprob: -2.9789650440216064
    3. '=' → logprob: -3.4789650440216064
    4. ' return' → logprob: -4.353964805603027
    5. '           ' → logprob: -6.103964805603027
    6. '_segments' → logprob: -7.478964805603027
    7. 'segments' → logprob: -8.353964805603027
    8. ':' → logprob: -8.728964805603027
    9. '       ' → logprob: -8.728964805603027
    10. '               ' → logprob: -8.978964805603027

Token 1306: ' is' (ID: 382)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3649100065231323
    2. ' +' → logprob: -1.3649100065231323
    3. 'return' → logprob: -3.614910125732422
    4. '/index' → logprob: -4.614910125732422
    5. '/' → logprob: -6.239910125732422
    6. ' return' → logprob: -6.489910125732422
    7. ' =' → logprob: -6.489910125732422
    8. ')' → logprob: -6.989910125732422
    9. '           ' → logprob: -6.989910125732422
    10. '+=' → logprob: -6.989910125732422

Token 1307: ' equivalent' (ID: 23458)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.24431590735912323
    2. '"/' → logprob: -2.1193158626556396
    3. 'self' → logprob: -2.6193158626556396
    4. 'normalized' → logprob: -4.994316101074219
    5. ' '/' → logprob: -5.619316101074219
    6. ''' → logprob: -5.619316101074219
    7. ' self' → logprob: -6.119316101074219
    8. 'f' → logprob: -6.244316101074219
    9. '/index' → logprob: -6.494316101074219
    10. '   ' → logprob: -6.994316101074219

Token 1308: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.39102405309677124
    2. ' to' → logprob: -1.141024112701416
    3. ''/' → logprob: -6.266024112701416
    4. '               ' → logprob: -6.641024112701416
    5. '           ' → logprob: -7.641024112701416
    6. '"/' → logprob: -8.516023635864258
    7. ' '/' → logprob: -9.266023635864258
    8. ''' → logprob: -9.766023635864258
    9. '/' → logprob: -10.891023635864258
    10. '                   ' → logprob: -11.141023635864258

Token 1309: ' /' (ID: 820)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.10870804637670517
    2. ''' → logprob: -2.858708143234253
    3. '"/' → logprob: -3.483708143234253
    4. 'f' → logprob: -4.483707904815674
    5. ' f' → logprob: -6.233707904815674
    6. ' '/' → logprob: -7.483707904815674
    7. '/' → logprob: -8.233708381652832
    8. '   ' → logprob: -8.358708381652832
    9. '/f' → logprob: -8.858708381652832
    10. ' '/'' → logprob: -8.983708381652832

Token 1310: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.2899913489818573
    2. ''/' → logprob: -1.7899913787841797
    3. ''' → logprob: -3.1649913787841797
    4. '"/' → logprob: -4.28999137878418
    5. '/' → logprob: -4.28999137878418
    6. '/index' → logprob: -4.41499137878418
    7. '"' → logprob: -6.16499137878418
    8. '`' → logprob: -7.53999137878418
    9. ' index' → logprob: -9.91499137878418
    10. '(index' → logprob: -9.91499137878418

Token 1311: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.06513524800539017
    2. ''.' → logprob: -2.8151352405548096
    3. 'html' → logprob: -6.440135478973389
    4. '".' → logprob: -7.690135478973389
    5. '.' → logprob: -8.69013500213623
    6. 'File' → logprob: -8.69013500213623
    7. '`.' → logprob: -8.69013500213623
    8. '   ' → logprob: -8.81513500213623
    9. 'file' → logprob: -9.94013500213623
    10. '('.' → logprob: -10.19013500213623

Token 1312: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1356312483549118
    2. '           ' → logprob: -2.2606313228607178
    3. 'return' → logprob: -4.385631084442139
    4. '
' → logprob: -5.010631084442139
    5. ':
' → logprob: -5.885631084442139
    6. ' return' → logprob: -8.385631561279297
    7. '                   ' → logprob: -8.760631561279297
    8. ',' → logprob: -9.635631561279297
    9. '```' → logprob: -10.385631561279297
    10. ':' → logprob: -10.760631561279297

Token 1313: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011257312260568142
    2. '           ' → logprob: -5.261257171630859
    3. 'return' → logprob: -5.761257171630859
    4. '                   ' → logprob: -6.136257171630859
    5. ' return' → logprob: -7.636257171630859
    6. ':
' → logprob: -8.88625717163086
    7. ':return' → logprob: -10.63625717163086
    8. ':' → logprob: -11.51125717163086
    9. '                       ' → logprob: -11.63625717163086
    10. '   ' → logprob: -12.26125717163086

Token 1314: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00019102399528492242
    2. ' return' → logprob: -8.750190734863281
    3. '               ' → logprob: -11.125190734863281
    4. '           ' → logprob: -11.625190734863281
    5. '                   ' → logprob: -11.750190734863281
    6. '	return' → logprob: -15.125190734863281
    7. '
' → logprob: -15.875190734863281
    8. '   ' → logprob: -16.25019073486328
    9. '                       ' → logprob: -16.37519073486328
    10. '```' → logprob: -16.87519073486328

Token 1315: ' '/'
' (ID: 176928)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.019799435511231422
    2. ''' → logprob: -4.51979923248291
    3. '"/' → logprob: -4.76979923248291
    4. ' '/' → logprob: -8.89479923248291
    5. '/index' → logprob: -10.64479923248291
    6. 'f' → logprob: -10.64479923248291
    7. '/' → logprob: -11.39479923248291
    8. '   ' → logprob: -11.64479923248291
    9. '/self' → logprob: -12.14479923248291
    10. ' f' → logprob: -12.39479923248291

Token 1316: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01536593772470951
    2. '           ' → logprob: -4.390366077423096
    3. '        
' → logprob: -6.390366077423096
    4. '
' → logprob: -7.640366077423096
    5. 'return' → logprob: -8.765365600585938
    6. '.' → logprob: -8.890365600585938
    7. '        ' → logprob: -9.765365600585938
    8. '<|end|>' → logprob: -10.140365600585938
    9. ')' → logprob: -10.265365600585938
    10. '            
' → logprob: -10.515365600585938

Token 1317: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07617736607789993
    2. 'return' → logprob: -3.7011773586273193
    3. '
' → logprob: -3.9511773586273193
    4. '        
' → logprob: -4.326177597045898
    5. 'else' (adapté à ' else') → logprob: -5.076177597045898
    6. 'if' → logprob: -5.201177597045898
    7. '#' → logprob: -7.451177597045898
    8. '           ' → logprob: -7.701177597045898
    9. ' else' → logprob: -7.826177597045898
    10. ' if' → logprob: -8.076177597045898

Token 1318: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1223222017288208
    2. '               ' → logprob: -1.3723222017288208
    3. 'return' → logprob: -1.3723222017288208
    4. 'None' → logprob: -2.1223220825195312
    5. ' None' → logprob: -3.2473220825195312
    6. ' return' → logprob: -4.747322082519531
    7. '   ' → logprob: -9.497322082519531
    8. '
' → logprob: -11.247322082519531
    9. '(None' → logprob: -11.372322082519531
    10. '{return' → logprob: -12.122322082519531

Token 1319: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10502395778894424
    2. 'return' → logprob: -2.3550238609313965
    3. 'None' → logprob: -6.3550238609313965
    4. '               ' → logprob: -6.3550238609313965
    5. ' return' → logprob: -6.9800238609313965
    6. ' None' → logprob: -7.8550238609313965
    7. '   ' → logprob: -12.855024337768555
    8. '       ' → logprob: -13.230024337768555
    9. '		' → logprob: -13.230024337768555
    10. '	return' → logprob: -13.480024337768555

Token 1320: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023669928312301636
    2. 'None' → logprob: -3.773669958114624
    3. ' return' → logprob: -8.273670196533203
    4. '               ' → logprob: -9.023670196533203
    5. ' None' → logprob: -10.148670196533203
    6. '           ' → logprob: -12.273670196533203
    7. '                   ' → logprob: -12.648670196533203
    8. '   ' → logprob: -14.148670196533203
    9. '	return' → logprob: -14.773670196533203
    10. 'Return' → logprob: -15.148670196533203

Token 1321: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.02324547804892063
    2. ' None' → logprob: -3.7732455730438232
    3. '_None' → logprob: -17.148244857788086
    4. '(None' → logprob: -18.148244857788086
    5. '=None' → logprob: -18.523244857788086
    6. 'No' → logprob: -18.773244857788086
    7. 'none' → logprob: -18.898244857788086
    8. '
' → logprob: -19.398244857788086
    9. ',None' → logprob: -19.898244857788086
    10. '   ' → logprob: -20.523244857788086

Token 1322: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010406949557363987
    2. '        
' → logprob: -4.635406970977783
    3. '
' → logprob: -8.760406494140625
    4. '    
' → logprob: -9.135406494140625
    5. '       
' → logprob: -9.385406494140625
    6. '  
' → logprob: -10.135406494140625
    7. '```' → logprob: -10.260406494140625
    8. '   ' → logprob: -10.385406494140625
    9. 'if' → logprob: -10.760406494140625
    10. '            
' → logprob: -11.135406494140625

Token 1323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003709701995830983
    2. '        
' → logprob: -8.250370979309082
    3. 'current' → logprob: -10.375370979309082
    4. 'stack' → logprob: -10.875370979309082
    5. '
' → logprob: -11.250370979309082
    6. 'pos' → logprob: -11.875370979309082
    7. '   ' → logprob: -12.000370979309082
    8. 'path' → logprob: -12.125370979309082
    9. '#' → logprob: -12.750370979309082
    10. 'cur' → logprob: -12.875370979309082

Token 1324: ' #' (ID: 1069)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.2050994634628296
    2. 'normalized' → logprob: -1.2050994634628296
    3. 'resolved' → logprob: -1.2050994634628296
    4. 'new' → logprob: -3.205099582672119
    5. '       ' → logprob: -4.205099582672119
    6. '#' (adapté à ' #') → logprob: -4.205099582672119
    7. 'result' → logprob: -4.330099582672119
    8. 'path' → logprob: -4.955099582672119
    9. 'norm' → logprob: -5.205099582672119
    10. 'canonical' → logprob: -6.330099582672119

Token 1325: ' Build' (ID: 10885)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.5638313293457031
    2. 'stack' → logprob: -1.5638313293457031
    3. 'resolved' → logprob: -1.9388313293457031
    4. 'new' → logprob: -3.563831329345703
    5. 'result' → logprob: -4.188831329345703
    6. 'norm' → logprob: -4.438831329345703
    7. '#' → logprob: -4.563831329345703
    8. 'canonical' → logprob: -4.813831329345703
    9. 'path' → logprob: -6.438831329345703
    10. 'res' → logprob: -6.813831329345703

Token 1326: ' stack' (ID: 10825)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.2839050590991974
    2. 'stack' → logprob: -2.408905029296875
    3. 'resolved' → logprob: -3.158905029296875
    4. 'result' → logprob: -3.533905029296875
    5. 'new' → logprob: -3.658905029296875
    6. 'canonical' → logprob: -3.783905029296875
    7. ' normalized' → logprob: -4.533905029296875
    8. 'a' → logprob: -4.658905029296875
    9. 'path' → logprob: -5.033905029296875
    10. 'res' → logprob: -5.533905029296875

Token 1327: ' for' (ID: 395)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07157620787620544
    2. ' stack' → logprob: -3.3215761184692383
    3. '       ' → logprob: -3.4465761184692383
    4. ' =' → logprob: -7.821576118469238
    5. 'path' → logprob: -8.071576118469238
    6. 'normalized' → logprob: -9.571576118469238
    7. ' path' → logprob: -9.821576118469238
    8. ':' → logprob: -10.196576118469238
    9. '_stack' → logprob: -10.321576118469238
    10. '=' → logprob: -10.446576118469238

Token 1328: ' canonical' (ID: 91323)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.285858154296875
    2. '[]' → logprob: -1.535858154296875
    3. 'result' → logprob: -4.285858154296875
    4. 'resolved' → logprob: -4.910858154296875
    5. 'stack' → logprob: -5.410858154296875
    6. 'canonical' → logprob: -5.660858154296875
    7. 'res' → logprob: -6.660858154296875
    8. 'path' → logprob: -6.910858154296875
    9. 'normal' → logprob: -7.535858154296875
    10. 'norm' → logprob: -8.410858154296875

Token 1329: ' directory' (ID: 12552)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -1.0560460090637207
    2. 'path' → logprob: -1.0560460090637207
    3. 'segments' → logprob: -1.5560460090637207
    4. '_path' → logprob: -3.1810460090637207
    5. ' segments' → logprob: -3.5560460090637207
    6. ' seg' → logprob: -4.431046009063721
    7. '_segments' → logprob: -5.556046009063721
    8. 'seg' → logprob: -6.056046009063721
    9. '[]' → logprob: -6.931046009063721
    10. 'se' → logprob: -7.181046009063721

Token 1330: ' path' (ID: 3104)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.40678462386131287
    2. ' segments' → logprob: -1.9067846536636353
    3. 'path' → logprob: -3.1567845344543457
    4. ' stack' → logprob: -3.6567845344543457
    5. 'stack' → logprob: -3.6567845344543457
    6. ' seg' → logprob: -3.9067845344543457
    7. ' path' → logprob: -4.281784534454346
    8. 'seg' → logprob: -4.781784534454346
    9. '[]' → logprob: -4.781784534454346
    10. 'se' → logprob: -4.906784534454346

Token 1331: ' resolution' (ID: 17365)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12813550233840942
    2. 'stack' → logprob: -2.8781354427337646
    3. ' stack' → logprob: -3.0031354427337646
    4. ' path' → logprob: -5.253135681152344
    5. 'path' → logprob: -6.378135681152344
    6. '        
' → logprob: -6.503135681152344
    7. 'segments' → logprob: -7.378135681152344
    8. '```' → logprob: -7.503135681152344
    9. '
' → logprob: -7.878135681152344
    10. '`' → logprob: -7.878135681152344

Token 1332: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4469262659549713
    2. 'stack' → logprob: -1.071926236152649
    3. ' stack' → logprob: -4.696926116943359
    4. 'path' → logprob: -5.196926116943359
    5. ' path' → logprob: -6.196926116943359
    6. 'dir' → logprob: -7.821926116943359
    7. 'segments' → logprob: -8.69692611694336
    8. 'canonical' → logprob: -8.82192611694336
    9. '        
' → logprob: -9.19692611694336
    10. ' dir' → logprob: -9.57192611694336

Token 1333: ' without' (ID: 2935)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.12504620850086212
    2. ' stack' → logprob: -2.5000462532043457
    3. 'resolved' → logprob: -4.125046253204346
    4. 'canonical' → logprob: -4.875046253204346
    5. 'result' → logprob: -5.875046253204346
    6. '       ' → logprob: -6.375046253204346
    7. ' canonical' → logprob: -6.375046253204346
    8. 'path' → logprob: -6.500046253204346
    9. 'normalized' → logprob: -6.500046253204346
    10. ' resolved' → logprob: -6.875046253204346

Token 1334: ' file' (ID: 1974)
  Prédit: 'allow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allow' → logprob: -0.5394181609153748
    2. 'going' → logprob: -1.7894182205200195
    3. 'empty' → logprob: -2.5394182205200195
    4. 'escaping' → logprob: -3.2894182205200195
    5. 'breaking' → logprob: -3.6644182205200195
    6. 'any' → logprob: -4.4144182205200195
    7. 'index' → logprob: -4.4144182205200195
    8. 'pop' → logprob: -4.5394182205200195
    9. ''.' → logprob: -4.6644182205200195
    10. 'p' → logprob: -4.9144182205200195

Token 1335: ' name' (ID: 1308)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.9124571084976196
    2. ' stack' → logprob: -1.6624571084976196
    3. '_stack' → logprob: -1.6624571084976196
    4. 'path' → logprob: -2.66245698928833
    5. 'for' → logprob: -3.66245698928833
    6. 'name' → logprob: -3.91245698928833
    7. '_path' → logprob: -4.28745698928833
    8. ' for' → logprob: -4.41245698928833
    9. 'segments' → logprob: -4.78745698928833
    10. '       ' → logprob: -5.03745698928833

Token 1336: ' yet' (ID: 5073)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3549129366874695
    2. 'stack' → logprob: -1.6049129962921143
    3. ' stack' → logprob: -2.9799129962921143
    4. '
' → logprob: -4.354912757873535
    5. '        
' → logprob: -4.354912757873535
    6. '_stack' → logprob: -6.104912757873535
    7. '```' → logprob: -6.104912757873535
    8. '   ' → logprob: -6.729912757873535
    9. 'segments' → logprob: -6.729912757873535
    10. '(stack' → logprob: -6.729912757873535

Token 1337: '
' (ID: 198)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.21880778670310974
    2. '       ' → logprob: -2.0938076972961426
    3. ' stack' → logprob: -2.8438076972961426
    4. 'dir' → logprob: -4.968807697296143
    5. 'path' → logprob: -6.093807697296143
    6. ' dir' → logprob: -6.093807697296143
    7. ' path' → logprob: -7.093807697296143
    8. 'canonical' → logprob: -7.468807697296143
    9. 'directory' → logprob: -8.2188081741333
    10. '        
' → logprob: -8.2188081741333

Token 1338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1141936182975769
    2. 'stack' → logprob: -2.6141936779022217
    3. ' stack' → logprob: -3.8641936779022217
    4. ' path' → logprob: -5.489193439483643
    5. '```' → logprob: -5.989193439483643
    6. ' dir' → logprob: -6.114193439483643
    7. 'path' → logprob: -6.489193439483643
    8. 'dir' → logprob: -6.864193439483643
    9. ' directory' → logprob: -7.739193439483643
    10. ' file' → logprob: -8.4891939163208

Token 1339: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.21587416529655457
    2. 'dir' → logprob: -2.590874195098877
    3. ' stack' → logprob: -3.090874195098877
    4. 'dirs' → logprob: -3.965874195098877
    5. ' dir' → logprob: -4.090874195098877
    6. 'path' → logprob: -4.215874195098877
    7. '       ' → logprob: -4.340874195098877
    8. ' path' → logprob: -5.715874195098877
    9. ' dirs' → logprob: -5.840874195098877
    10. 'directory' → logprob: -7.090874195098877

Token 1340: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004636723082512617
    2. '=' → logprob: -5.379636764526367
    3. ':' → logprob: -11.504636764526367
    4. '=[]' → logprob: -12.129636764526367
    5. '.append' → logprob: -14.629636764526367
    6. ',' → logprob: -16.254636764526367
    7. ' =[' → logprob: -16.254636764526367
    8. '[]' → logprob: -16.379636764526367
    9. '[' → logprob: -16.629636764526367
    10. '=[]
' → logprob: -16.754636764526367

Token 1341: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.023736754432320595
    2. ' []' → logprob: -3.7737367153167725
    3. 'List' → logprob: -8.773736953735352
    4. '=[]' → logprob: -8.898736953735352
    5. 'list' → logprob: -9.023736953735352
    6. '[]=' → logprob: -10.773736953735352
    7. '[List' → logprob: -11.273736953735352
    8. ' list' → logprob: -11.398736953735352
    9. '[]}' → logprob: -11.773736953735352
    10. ' List' → logprob: -11.898736953735352

Token 1342: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.00732939038425684
    2. ' =' → logprob: -5.38232946395874
    3. '=' → logprob: -6.38232946395874
    4. '=[]' → logprob: -7.13232946395874
    5. '[]' → logprob: -9.382328987121582
    6. '[' → logprob: -9.882328987121582
    7. '=[]
' → logprob: -10.632328987121582
    8. '=str' → logprob: -10.632328987121582
    9. 'str' → logprob: -11.632328987121582
    10. '[int' → logprob: -11.882328987121582

Token 1343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010180408135056496
    2. ')' → logprob: -7.376018047332764
    3. '       ' → logprob: -9.251017570495605
    4. ']=' → logprob: -9.251017570495605
    5. ' ]' → logprob: -9.501017570495605
    6. '=' → logprob: -9.876017570495605
    7. ' =' → logprob: -10.376017570495605
    8. '[]' → logprob: -11.126017570495605
    9. '']' → logprob: -11.501017570495605
    10. '[' → logprob: -12.126017570495605

Token 1344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38768213987350464
    2. '=' → logprob: -1.1376821994781494
    3. '=[]' → logprob: -7.38768196105957
    4. '=[]
' → logprob: -9.38768196105957
    5. '       ' → logprob: -10.01268196105957
    6. '.append' → logprob: -10.88768196105957
    7. '[]' → logprob: -10.88768196105957
    8. ')' → logprob: -12.13768196105957
    9. ':' → logprob: -12.63768196105957
    10. ',' → logprob: -13.01268196105957

Token 1345: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00044044392416253686
    2. '[]
' → logprob: -7.75044059753418
    3. '[]

' → logprob: -12.62544059753418
    4. '[])' → logprob: -12.87544059753418
    5. '['' → logprob: -13.37544059753418
    6. ' []' → logprob: -14.12544059753418
    7. '[' → logprob: -14.50044059753418
    8. '[]"' → logprob: -14.75044059753418
    9. '[]>' → logprob: -15.12544059753418
    10. '[]}' → logprob: -15.62544059753418

Token 1346: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.216282844543457
    2. ' for' → logprob: -1.466282844543457
    3. 'for' → logprob: -1.591282844543457
    4. ' i' → logprob: -1.966282844543457
    5. '       ' → logprob: -2.091282844543457
    6. 'idx' → logprob: -5.466282844543457
    7. '```' → logprob: -7.966282844543457
    8. '   ' → logprob: -7.966282844543457
    9. ' idx' → logprob: -8.716282844543457
    10. 'index' → logprob: -8.841282844543457

Token 1347: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006000961875542998
    2. 'i' → logprob: -7.5005998611450195
    3. '       ' → logprob: -10.25059986114502
    4. ' for' → logprob: -11.75059986114502
    5. 'idx' → logprob: -12.50059986114502
    6. 'index' → logprob: -16.125600814819336
    7. '   ' → logprob: -16.625600814819336
    8. ' i' → logprob: -16.875600814819336
    9. 'while' → logprob: -18.000600814819336
    10. 'For' → logprob: -18.375600814819336

Token 1348: ' Special' (ID: 12586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10335053503513336
    2. 'i' → logprob: -2.3533506393432617
    3. 'idx' → logprob: -6.478350639343262
    4. '       ' → logprob: -6.728350639343262
    5. ' for' → logprob: -8.103350639343262
    6. 'index' → logprob: -9.853350639343262
    7. ' i' → logprob: -10.478350639343262
    8. 'file' → logprob: -11.103350639343262
    9. '#' → logprob: -13.478350639343262
    10. '   ' → logprob: -13.728350639343262

Token 1349: ' handling' (ID: 17491)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28513631224632263
    2. ' for' → logprob: -2.6601362228393555
    3. 'case' → logprob: -2.7851362228393555
    4. ':' → logprob: -3.7851362228393555
    5. '       ' → logprob: -3.7851362228393555
    6. 'token' → logprob: -4.1601362228393555
    7. '_token' → logprob: -4.9101362228393555
    8. ' handling' → logprob: -4.9101362228393555
    9. 'handling' → logprob: -4.9101362228393555
    10. '_index' → logprob: -6.0351362228393555

Token 1350: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4969608783721924
    2. 'for' → logprob: -0.9969608783721924
    3. '       ' → logprob: -3.8719608783721924
    4. ' of' → logprob: -6.996960639953613
    5. ':' → logprob: -7.996960639953613
    6. 'of' → logprob: -9.496960639953613
    7. ' if' → logprob: -9.621960639953613
    8. 'if' → logprob: -9.621960639953613
    9. 'while' → logprob: -9.621960639953613
    10. 'idx' → logprob: -9.996960639953613

Token 1351: ' last' (ID: 2174)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9241069555282593
    2. 'seg' → logprob: -0.9241069555282593
    3. 'last' → logprob: -2.799107074737549
    4. 'segment' → logprob: -3.674107074737549
    5. ' seg' → logprob: -3.799107074737549
    6. 's' → logprob: -3.924107074737549
    7. 'se' → logprob: -4.424107074737549
    8. 'for' → logprob: -4.424107074737549
    9. ' last' → logprob: -4.549107074737549
    10. 'all' → logprob: -4.674107074737549

Token 1352: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.5489570498466492
    2. ' token' → logprob: -1.798957109451294
    3. 'segment' → logprob: -2.173957109451294
    4. 'token' → logprob: -3.298957109451294
    5. '_token' → logprob: -3.673957109451294
    6. '_segment' → logprob: -3.798957109451294
    7. 'seg' → logprob: -3.923957109451294
    8. ')' → logprob: -5.048956871032715
    9. ' seg' → logprob: -5.173956871032715
    10. ':' → logprob: -5.173956871032715

Token 1353: ' related' (ID: 7168)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0792831182479858
    2. ' if' → logprob: -1.9542831182479858
    3. 'for' → logprob: -2.0792832374572754
    4. 'i' → logprob: -2.3292832374572754
    5. ' i' → logprob: -2.7042832374572754
    6. 'idx' → logprob: -2.7042832374572754
    7. ' =' → logprob: -3.5792832374572754
    8. ' for' → logprob: -3.7042832374572754
    9. ' is' → logprob: -3.8292832374572754
    10. 'last' → logprob: -3.9542832374572754

Token 1354: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.005285103805363178
    2. ' to' → logprob: -5.255285263061523
    3. '_to' → logprob: -10.630285263061523
    4. 'segments' → logprob: -10.755285263061523
    5. 'tokens' → logprob: -13.505285263061523
    6. '_name' → logprob: -14.005285263061523
    7. 'name' → logprob: -14.380285263061523
    8. '=' → logprob: -14.380285263061523
    9. '_segments' → logprob: -14.505285263061523
    10. '_token' → logprob: -15.130285263061523

Token 1355: ' file' (ID: 1974)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6292318105697632
    2. 'file' → logprob: -1.6292318105697632
    3. 'seg' → logprob: -2.5042319297790527
    4. 'the' → logprob: -3.0042319297790527
    5. 'filename' → logprob: -3.7542319297790527
    6. 'se' → logprob: -3.7542319297790527
    7. 'last' → logprob: -4.254231929779053
    8. 'whether' → logprob: -4.254231929779053
    9. 'checking' → logprob: -4.754231929779053
    10. 'normal' → logprob: -5.004231929779053

Token 1356: ' or' (ID: 503)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2480511665344238
    2. ' for' → logprob: -1.7480511665344238
    3. 'if' → logprob: -2.498051166534424
    4. ' if' → logprob: -2.623051166534424
    5. ' i' → logprob: -2.623051166534424
    6. '       ' → logprob: -2.873051166534424
    7. ':' → logprob: -3.123051166534424
    8. 'i' → logprob: -3.373051166534424
    9. 'while' → logprob: -3.623051166534424
    10. 'name' → logprob: -3.623051166534424

Token 1357: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.16214337944984436
    2. ' directory' → logprob: -2.0371434688568115
    3. 'directories' → logprob: -5.287143230438232
    4. 'tr' → logprob: -5.412143230438232
    5. ' trailing' → logprob: -5.537143230438232
    6. ' directories' → logprob: -5.912143230438232
    7. 'possible' → logprob: -7.037143230438232
    8. 'index' → logprob: -7.912143230438232
    9. 'slash' → logprob: -8.28714370727539
    10. 'dir' → logprob: -8.41214370727539

Token 1358: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8929007053375244
    2. 'for' → logprob: -1.5179007053375244
    3. 'i' → logprob: -1.8929007053375244
    4. ' i' → logprob: -1.8929007053375244
    5. '       ' → logprob: -3.7679007053375244
    6. 'idx' → logprob: -4.767900466918945
    7. 'while' → logprob: -5.017900466918945
    8. ':' → logprob: -5.392900466918945
    9. ' while' → logprob: -5.892900466918945
    10. '```' → logprob: -6.142900466918945

Token 1359: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8653505444526672
    2. 'i' → logprob: -1.4903504848480225
    3. '       ' → logprob: -1.6153504848480225
    4. ' for' → logprob: -1.9903504848480225
    5. 'for' → logprob: -4.115350723266602
    6. ' idx' → logprob: -7.115350723266602
    7. 'idx' → logprob: -7.365350723266602
    8. '```' → logprob: -9.115350723266602
    9. '   ' → logprob: -9.365350723266602
    10. '`' → logprob: -9.865350723266602

Token 1360: ' last' (ID: 2174)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5395926833152771
    2. 'for' → logprob: -1.2895927429199219
    3. ' i' → logprob: -2.539592742919922
    4. 'i' → logprob: -3.039592742919922
    5. '       ' → logprob: -5.039592742919922
    6. ' last' → logprob: -5.539592742919922
    7. 'file' → logprob: -6.664592742919922
    8. 'last' (adapté à ' last') → logprob: -6.914592742919922
    9. ' file' → logprob: -7.164592742919922
    10. ' filename' → logprob: -8.539592742919922

Token 1361: '_seg' (ID: 78972)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.25505486130714417
    2. '_segment' → logprob: -2.2550549507141113
    3. '_seg' → logprob: -2.8800549507141113
    4. ' =' → logprob: -3.6300549507141113
    5. '_name' → logprob: -4.380054950714111
    6. '_' → logprob: -4.880054950714111
    7. '_part' → logprob: -6.130054950714111
    8. '=' → logprob: -6.255054950714111
    9. '_idx' → logprob: -6.380054950714111
    10. 'token' → logprob: -6.380054950714111

Token 1362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12145739048719406
    2. '=' → logprob: -2.24645733833313
    3. '_name' → logprob: -4.996457576751709
    4. 'name' → logprob: -7.746457576751709
    5. '_index' → logprob: -8.12145709991455
    6. '_' → logprob: -8.37145709991455
    7. ':' → logprob: -8.74645709991455
    8. '_idx' → logprob: -8.87145709991455
    9. ')' → logprob: -9.12145709991455
    10. '.' → logprob: -9.24645709991455

Token 1363: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.25914838910102844
    2. ' seg' → logprob: -1.759148359298706
    3. 'seg' → logprob: -2.884148359298706
    4. 'segments' → logprob: -9.634148597717285
    5. 'None' → logprob: -10.009148597717285
    6. ' se' → logprob: -10.884148597717285
    7. ' segments' → logprob: -11.009148597717285
    8. ' None' → logprob: -11.384148597717285
    9. 's' → logprob: -11.509148597717285
    10. 'Seg' → logprob: -12.134148597717285

Token 1364: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1011589914560318
    2. 'ments' → logprob: -2.35115909576416
    3. 'ment' → logprob: -7.35115909576416
    4. '       ' → logprob: -9.35115909576416
    5. 'se' → logprob: -10.10115909576416
    6. 'ms' → logprob: -10.10115909576416
    7. 'seg' → logprob: -10.85115909576416
    8. 'ements' → logprob: -10.97615909576416
    9. '[' → logprob: -11.10115909576416
    10. 'segments' → logprob: -11.10115909576416

Token 1365: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.011769934557378292
    2. '.pop' → logprob: -4.511769771575928
    3. '       ' → logprob: -8.386770248413086
    4. ' if' → logprob: -8.511770248413086
    5. '[:]' → logprob: -9.136770248413086
    6. '[len' → logprob: -9.761770248413086
    7. '   ' → logprob: -10.136770248413086
    8. '[' → logprob: -11.386770248413086
    9. ' =' → logprob: -11.386770248413086
    10. 'pop' → logprob: -11.636770248413086

Token 1366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.875
    4. '   ' → logprob: -17.625
    5. '0' → logprob: -18.375
    6. ')' → logprob: -18.8125
    7. '
' → logprob: -19.25
    8. ']' → logprob: -19.375
    9. '``' → logprob: -19.4375
    10. '  ' → logprob: -19.875

Token 1367: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6176002025604248
    2. ']' → logprob: -0.9926002025604248
    3. ']
' → logprob: -3.367600202560425
    4. ')
' → logprob: -3.492600202560425
    5. '       ' → logprob: -3.867600202560425
    6. ']

' → logprob: -5.742600440979004
    7. ')

' → logprob: -7.742600440979004
    8. ')]' → logprob: -8.117600440979004
    9. ' )' → logprob: -8.992600440979004
    10. '   ' → logprob: -9.742600440979004

Token 1368: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8341575264930725
    2. 'for' → logprob: -0.9591575264930725
    3. '       ' → logprob: -2.4591574668884277
    4. ' for' → logprob: -2.9591574668884277
    5. ' i' → logprob: -3.2091574668884277
    6. '```' → logprob: -6.459157466888428
    7. 'idx' → logprob: -6.834157466888428
    8. 'if' → logprob: -6.834157466888428
    9. '#' → logprob: -7.834157466888428
    10. 'prev' → logprob: -7.959157466888428

Token 1369: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03571522608399391
    2. 'i' → logprob: -3.535715341567993
    3. '#' (adapté à ' #') → logprob: -5.660715103149414
    4. 'if' → logprob: -6.160715103149414
    5. 'is' → logprob: -8.285715103149414
    6. '       ' → logprob: -10.035715103149414
    7. 'idx' → logprob: -10.785715103149414
    8. ' for' → logprob: -11.285715103149414
    9. 'dir' → logprob: -11.785715103149414
    10. 'file' → logprob: -12.535715103149414

Token 1370: ' According' (ID: 16344)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008682532235980034
    2. '#' → logprob: -5.008682727813721
    3. 'i' → logprob: -6.383682727813721
    4. 'is' → logprob: -9.508682250976562
    5. 'if' → logprob: -9.508682250976562
    6. 'def' → logprob: -10.383682250976562
    7. '       ' → logprob: -10.508682250976562
    8. ' for' → logprob: -10.883682250976562
    9. 'dir' → logprob: -11.008682250976562
    10. 'For' → logprob: -11.883682250976562

Token 1371: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.15631070733070374
    2. 'to' → logprob: -2.031310796737671
    3. '=' → logprob: -4.531310558319092
    4. '_to' → logprob: -6.281310558319092
    5. ' =' → logprob: -8.03131103515625
    6. '       ' → logprob: -9.03131103515625
    7. 'for' → logprob: -9.53131103515625
    8. 's' → logprob: -9.65631103515625
    9. 't' → logprob: -9.90631103515625
    10. '        ' → logprob: -9.90631103515625

Token 1372: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0201025009155273
    2. 'problem' → logprob: -1.0201025009155273
    3. ' problem' → logprob: -2.0201025009155273
    4. ' the' → logprob: -2.5201025009155273
    5. '#' → logprob: -4.020102500915527
    6. 'code' → logprob: -4.520102500915527
    7. 'previous' → logprob: -4.645102500915527
    8. ' code' → logprob: -5.020102500915527
    9. 'len' → logprob: -5.770102500915527
    10. ' previous' → logprob: -6.020102500915527

Token 1373: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.645528256893158
    2. ' logic' → logprob: -1.6455283164978027
    3. '#' → logprob: -2.5205283164978027
    4. ':' → logprob: -2.7705283164978027
    5. ' rules' → logprob: -3.5205283164978027
    6. ':
' → logprob: -4.145528316497803
    7. ' for' → logprob: -4.270528316497803
    8. ' if' → logprob: -4.270528316497803
    9. '):
' → logprob: -4.395528316497803
    10. ' segments' → logprob: -4.520528316497803

Token 1374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10194064676761627
    2. ' if' → logprob: -3.226940631866455
    3. ' for' → logprob: -3.351940631866455
    4. ' i' → logprob: -4.601940631866455
    5. 'for' → logprob: -4.976940631866455
    6. 'if' → logprob: -5.351940631866455
    7. 'i' → logprob: -7.726940631866455
    8. '#' → logprob: -10.351941108703613
    9. '```' → logprob: -10.601941108703613
    10. ' idx' → logprob: -11.476941108703613

Token 1375: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11423125863075256
    2. 'for' → logprob: -2.8642313480377197
    3. ' if' → logprob: -3.9892313480377197
    4. '#' (adapté à ' #') → logprob: -4.114231109619141
    5. 'i' → logprob: -4.864231109619141
    6. '       ' → logprob: -5.239231109619141
    7. ' for' → logprob: -6.739231109619141
    8. ' #' → logprob: -6.864231109619141
    9. ' i' → logprob: -7.489231109619141
    10. 'is' → logprob: -8.98923110961914

Token 1376: ' segments' (ID: 33749)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12959130108356476
    2. 'for' → logprob: -2.379591226577759
    3. '#' → logprob: -4.254591464996338
    4. 'i' → logprob: -4.629591464996338
    5. '       ' → logprob: -5.879591464996338
    6. ' if' → logprob: -7.254591464996338
    7. 'is' → logprob: -7.254591464996338
    8. 'file' → logprob: -8.12959098815918
    9. 'If' → logprob: -8.87959098815918
    10. ' for' → logprob: -9.50459098815918

Token 1377: ' '.'' (ID: 64762)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1643601655960083
    2. '[:-' → logprob: -1.1643601655960083
    3. '_except' → logprob: -1.9143601655960083
    4. 'except' → logprob: -2.1643600463867188
    5. ' except' → logprob: -4.039360046386719
    6. '.pop' → logprob: -4.289360046386719
    7. '_before' → logprob: -4.539360046386719
    8. '_without' → logprob: -4.789360046386719
    9. '#' → logprob: -5.414360046386719
    10. 'for' → logprob: -5.539360046386719

Token 1378: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.5204157829284668
    2. ' or' → logprob: -1.6454157829284668
    3. ' and' → logprob: -1.6454157829284668
    4. ' ==' → logprob: -2.145415782928467
    5. 'and' → logprob: -2.270415782928467
    6. ' !=' → logprob: -2.770415782928467
    7. '!=' → logprob: -3.395415782928467
    8. 'or' → logprob: -3.395415782928467
    9. '       ' → logprob: -4.270415782928467
    10. ':' → logprob: -4.645415782928467

Token 1379: ' '..' (ID: 107414)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004331725067459047
    2. '..' → logprob: -7.750432968139648
    3. '"' → logprob: -14.125432968139648
    4. ' '..' → logprob: -14.375432968139648
    5. '''' → logprob: -15.500432968139648
    6. 'last' → logprob: -16.12543296813965
    7. ''is' → logprob: -16.37543296813965
    8. '`' → logprob: -16.62543296813965
    9. '..
' → logprob: -16.75043296813965
    10. '   ' → logprob: -16.75043296813965

Token 1380: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5476922392845154
    2. ' !=' → logprob: -1.6726922988891602
    3. ' not' → logprob: -1.6726922988891602
    4. ' '' → logprob: -4.79769229888916
    5. '       ' → logprob: -4.92269229888916
    6. '',' → logprob: -5.17269229888916
    7. '':' → logprob: -5.67269229888916
    8. 'not' → logprob: -5.92269229888916
    9. '!=' → logprob: -5.92269229888916
    10. ' and' → logprob: -6.29769229888916

Token 1381: ' are' (ID: 553)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.4201992750167847
    2. ':' → logprob: -2.045199394226074
    3. ' in' → logprob: -2.045199394226074
    4. 'not' → logprob: -2.295199394226074
    5. ' are' → logprob: -2.420199394226074
    6. ' !=' → logprob: -2.795199394226074
    7. '!=' → logprob: -3.295199394226074
    8. '==' → logprob: -3.420199394226074
    9. 'continue' → logprob: -3.795199394226074
    10. 'in' → logprob: -3.920199394226074

Token 1382: ' always' (ID: 3324)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.0583298206329346
    2. 'allowed' → logprob: -1.5583298206329346
    3. 'special' → logprob: -1.9333298206329346
    4. 'treated' → logprob: -2.4333298206329346
    5. 'handled' → logprob: -3.0583298206329346
    6. ' not' → logprob: -3.8083298206329346
    7. 'processed' → logprob: -3.9333298206329346
    8. ' handled' → logprob: -4.0583295822143555
    9. ''.' → logprob: -4.4333295822143555
    10. 'normal' → logprob: -4.4333295822143555

Token 1383: ' directory' (ID: 12552)
  Prédit: 'treated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'treated' → logprob: -0.10843682289123535
    2. 'allowed' → logprob: -3.7334368228912354
    3. 'consider' → logprob: -3.7334368228912354
    4. ' treated' → logprob: -4.233436584472656
    5. 'normal' → logprob: -4.858436584472656
    6. 'normalized' → logprob: -5.483436584472656
    7. 'processed' → logprob: -5.608436584472656
    8. 'valid' → logprob: -5.608436584472656
    9. 'handled' → logprob: -5.733436584472656
    10. 'interpre' → logprob: -5.983436584472656

Token 1384: ' names' (ID: 8747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.795994758605957
    2. ' for' → logprob: -1.795994758605957
    3. '
' → logprob: -2.045994758605957
    4. ' if' → logprob: -2.295994758605957
    5. 'for' → logprob: -3.295994758605957
    6. 's' → logprob: -4.045994758605957
    7. '        
' → logprob: -4.295994758605957
    8. 'if' → logprob: -4.545994758605957
    9. ',' → logprob: -4.795994758605957
    10. '#' → logprob: -4.920994758605957

Token 1385: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5357632040977478
    2. '
' → logprob: -1.6607632637023926
    3. ' for' → logprob: -1.7857632637023926
    4. '        
' → logprob: -3.2857632637023926
    5. 'for' → logprob: -4.910763263702393
    6. '#' → logprob: -6.660763263702393
    7. ',' → logprob: -6.660763263702393
    8. '    
' → logprob: -6.785763263702393
    9. ' i' → logprob: -6.910763263702393
    10. '   ' → logprob: -7.035763263702393

Token 1386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6837931275367737
    2. ' for' → logprob: -1.058793067932129
    3. '
' → logprob: -2.683793067932129
    4. 'for' → logprob: -3.558793067932129
    5. ' if' → logprob: -4.683793067932129
    6. '#' → logprob: -4.808793067932129
    7. '        
' → logprob: -4.808793067932129
    8. ' and' → logprob: -5.183793067932129
    9. '.' → logprob: -5.558793067932129
    10. '   ' → logprob: -5.808793067932129

Token 1387: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7482424378395081
    2. 'for' → logprob: -1.3732423782348633
    3. ' if' → logprob: -2.4982423782348633
    4. '       ' → logprob: -2.7482423782348633
    5. 'if' → logprob: -2.9982423782348633
    6. ' i' → logprob: -3.1232423782348633
    7. 'i' → logprob: -4.248242378234863
    8. '#' (adapté à ' #') → logprob: -4.248242378234863
    9. ' #' → logprob: -6.498242378234863
    10. '
' → logprob: -6.748242378234863

Token 1388: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4233595132827759
    2. ' for' → logprob: -1.2983595132827759
    3. 'i' → logprob: -3.6733593940734863
    4. 'if' → logprob: -3.9233593940734863
    5. '       ' → logprob: -4.423359394073486
    6. ' i' → logprob: -4.548359394073486
    7. ' if' → logprob: -5.548359394073486
    8. '#' → logprob: -8.298359870910645
    9. 'idx' → logprob: -9.673359870910645
    10. ' #' → logprob: -10.048359870910645

Token 1389: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.229306161403656
    2. ' for' → logprob: -2.354306221008301
    3. 'for' → logprob: -2.479306221008301
    4. ' continue' → logprob: -4.604306221008301
    5. 'continue' → logprob: -5.354306221008301
    6. ' i' → logprob: -6.354306221008301
    7. '   ' → logprob: -6.854306221008301
    8. 'def' → logprob: -7.479306221008301
    9. ' have' → logprob: -7.479306221008301
    10. ' will' → logprob: -7.604306221008301

Token 1390: ' check' (ID: 2371)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.4069051742553711
    2. 'handle' → logprob: -1.281905174255371
    3. 't' → logprob: -4.156905174255371
    4. 'continue' → logprob: -4.156905174255371
    5. 'check' → logprob: -5.281905174255371
    6. ' process' → logprob: -5.906905174255371
    7. '       ' → logprob: -5.906905174255371
    8. 'for' → logprob: -6.156905174255371
    9. 'skip' → logprob: -6.156905174255371
    10. 'reject' → logprob: -6.531905174255371

Token 1391: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9816126227378845
    2. ' if' → logprob: -1.4816126823425293
    3. 'for' → logprob: -1.4816126823425293
    4. 'if' → logprob: -2.2316126823425293
    5. '       ' → logprob: -3.8566126823425293
    6. ' i' → logprob: -4.481612682342529
    7. ' all' → logprob: -4.481612682342529
    8. 'i' → logprob: -4.856612682342529
    9. ' each' → logprob: -5.356612682342529
    10. 'all' → logprob: -6.606612682342529

Token 1392: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.005960084032267332
    2. ' last' → logprob: -5.505959987640381
    3. 'len' → logprob: -6.380959987640381
    4. '..' → logprob: -9.755960464477539
    5. 'any' → logprob: -10.005960464477539
    6. 'all' → logprob: -10.255960464477539
    7. 'self' → logprob: -11.380960464477539
    8. '...' → logprob: -12.130960464477539
    9. ' '..' → logprob: -12.130960464477539
    10. ''' → logprob: -12.380960464477539

Token 1393: ' segment' (ID: 14806)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.053948625922203064
    2. 'seg' → logprob: -3.9289486408233643
    3. 'last' → logprob: -4.803948402404785
    4. '_se' → logprob: -5.303948402404785
    5. '`' → logprob: -5.678948402404785
    6. '```' → logprob: -5.928948402404785
    7. ' last' → logprob: -6.428948402404785
    8. 'se' → logprob: -6.553948402404785
    9. 'Seg' → logprob: -6.553948402404785
    10. '_sep' → logprob: -6.803948402404785

Token 1394: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.037276655435562134
    2. ' is' → logprob: -3.9122767448425293
    3. '.endswith' → logprob: -5.412276744842529
    4. '==' → logprob: -5.537276744842529
    5. ' in' → logprob: -5.912276744842529
    6. '.startswith' → logprob: -7.037276744842529
    7. '.' → logprob: -7.037276744842529
    8. '.is' → logprob: -7.162276744842529
    9. ' !=' → logprob: -7.412276744842529
    10. '=='' → logprob: -7.412276744842529

Token 1395: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6949948668479919
    2. ''.' → logprob: -1.0699949264526367
    3. ''' → logprob: -2.3199949264526367
    4. 'a' → logprob: -4.069994926452637
    5. '..' → logprob: -5.069994926452637
    6. 'last' → logprob: -5.194994926452637
    7. 'Path' → logprob: -5.194994926452637
    8. ' self' → logprob: -5.444994926452637
    9. ' '.'' → logprob: -5.819994926452637
    10. 'index' → logprob: -6.194994926452637

Token 1396: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.07034207880496979
    2. ''.' → logprob: -3.9453420639038086
    3. 'directory' → logprob: -4.445342063903809
    4. 'special' → logprob: -4.570342063903809
    5. ' file' → logprob: -4.695342063903809
    6. 'filename' → logprob: -5.320342063903809
    7. '.' → logprob: -5.445342063903809
    8. 'single' → logprob: -6.195342063903809
    9. 'dot' → logprob: -7.070342063903809
    10. '..' → logprob: -7.570342063903809

Token 1397: ' name' (ID: 1308)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4411805272102356
    2. '
' → logprob: -1.9411804676055908
    3. ' for' → logprob: -2.441180467605591
    4. ' if' → logprob: -3.066180467605591
    5. '        
' → logprob: -3.066180467605591
    6. ' 
' → logprob: -5.19118070602417
    7. ' =' → logprob: -5.56618070602417
    8. ' or' → logprob: -6.06618070602417
    9. ' i' → logprob: -6.19118070602417
    10. ' in' → logprob: -6.31618070602417

Token 1398: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08950445801019669
    2. ' if' → logprob: -3.4645044803619385
    3. '
' → logprob: -3.5895044803619385
    4. ' for' → logprob: -4.714504241943359
    5. ' or' → logprob: -4.839504241943359
    6. 'if' → logprob: -6.464504241943359
    7. '        
' → logprob: -6.464504241943359
    8. ' (' → logprob: -6.589504241943359
    9. 'for' → logprob: -6.839504241943359
    10. ',' → logprob: -7.214504241943359

Token 1399: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.007657262030988932
    2. 'not' → logprob: -5.757657051086426
    3. ' directory' → logprob: -6.132657051086426
    4. 'a' → logprob: -6.507657051086426
    5. 'special' → logprob: -8.007657051086426
    6. ' not' → logprob: -8.632657051086426
    7. 'if' → logprob: -9.132657051086426
    8. ' a' → logprob: -9.757657051086426
    9. 'segment' → logprob: -9.882657051086426
    10. 'dir' → logprob: -10.882657051086426

Token 1400: ' name' (ID: 1308)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4653814733028412
    2. '
' → logprob: -2.090381383895874
    3. ' i' → logprob: -2.215381383895874
    4. ' if' → logprob: -2.465381383895874
    5. '        
' → logprob: -4.090381622314453
    6. ' for' → logprob: -4.340381622314453
    7. '#' → logprob: -4.840381622314453
    8. ' #' → logprob: -5.590381622314453
    9. 'i' → logprob: -5.715381622314453
    10. 'if' → logprob: -6.715381622314453

Token 1401: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3548453152179718
    2. '       ' → logprob: -2.3548452854156494
    3. ' i' → logprob: -2.3548452854156494
    4. ' 
' → logprob: -2.9798452854156494
    5. ' if' → logprob: -3.4798452854156494
    6. '        
' → logprob: -4.4798455238342285
    7. ' for' → logprob: -5.7298455238342285
    8. '#' → logprob: -5.8548455238342285
    9. '  
' → logprob: -6.6048455238342285
    10. 'i' → logprob: -6.6048455238342285

Token 1402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2648320198059082
    2. 'if' → logprob: -2.514832019805908
    3. ' if' → logprob: -3.014832019805908
    4. ' i' → logprob: -3.264832019805908
    5. 'i' → logprob: -3.514832019805908
    6. 'for' → logprob: -4.264832019805908
    7. ' for' → logprob: -5.139832019805908
    8. '#' → logprob: -5.889832019805908
    9. '```' → logprob: -5.889832019805908
    10. '
' → logprob: -6.264832019805908

Token 1403: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5514757633209229
    2. '#' (adapté à ' #') → logprob: -1.3014757633209229
    3. 'for' → logprob: -3.051475763320923
    4. 'is' → logprob: -3.176475763320923
    5. 'file' → logprob: -3.551475763320923
    6. '       ' → logprob: -3.676475763320923
    7. 'curr' → logprob: -5.676475524902344
    8. ' if' → logprob: -6.176475524902344
    9. ' #' → logprob: -7.051475524902344
    10. 'i' → logprob: -7.176475524902344

Token 1404: ' If' (ID: 1843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.544694185256958
    2. 'is' → logprob: -2.169694185256958
    3. 'if' → logprob: -2.294694185256958
    4. '#' → logprob: -2.294694185256958
    5. 'i' → logprob: -3.169694185256958
    6. '       ' → logprob: -3.169694185256958
    7. 'file' → logprob: -4.044693946838379
    8. 'dir' → logprob: -7.294693946838379
    9. '```' → logprob: -7.919693946838379
    10. 'idx' → logprob: -8.544693946838379

Token 1405: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.11993194371461868
    2. ' last' → logprob: -2.244931936264038
    3. 'len' → logprob: -5.744932174682617
    4. 'self' → logprob: -5.994932174682617
    5. ' self' → logprob: -7.494932174682617
    6. ' Path' → logprob: -8.869932174682617
    7. 'Path' → logprob: -8.869932174682617
    8. ' len' → logprob: -9.119932174682617
    9. 'se' → logprob: -9.869932174682617
    10. 'any' → logprob: -9.869932174682617

Token 1406: ' segment' (ID: 14806)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.0030210837721824646
    2. 'seg' → logprob: -7.253021240234375
    3. '_sep' → logprob: -7.628021240234375
    4. '_segment' → logprob: -8.378021240234375
    5. 'segment' → logprob: -8.503021240234375
    6. ' segment' → logprob: -8.753021240234375
    7. ' not' → logprob: -9.003021240234375
    8. 'token' → logprob: -9.128021240234375
    9. 'Seg' → logprob: -9.378021240234375
    10. ' ' → logprob: -9.378021240234375

Token 1407: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.44292864203453064
    2. '.endswith' → logprob: -1.692928671836853
    3. '==' → logprob: -2.8179285526275635
    4. '.' → logprob: -2.9429285526275635
    5. ' in' → logprob: -3.3179285526275635
    6. ' not' → logprob: -4.567928791046143
    7. ' !=' → logprob: -5.192928791046143
    8. '.find' → logprob: -6.192928791046143
    9. '.is' → logprob: -6.192928791046143
    10. ' is' → logprob: -6.442928791046143

Token 1408: ' a' (ID: 261)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.35428544878959656
    2. 'self' → logprob: -1.354285478591919
    3. ''' → logprob: -4.60428524017334
    4. '''' → logprob: -4.85428524017334
    5. 'Path' → logprob: -5.22928524017334
    6. '..' → logprob: -5.47928524017334
    7. ' '.'' → logprob: -5.60428524017334
    8. 'not' → logprob: -6.35428524017334
    9. ' self' → logprob: -6.85428524017334
    10. '''.' → logprob: -6.85428524017334

Token 1409: ' file' (ID: 1974)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.3015354573726654
    2. 'file' → logprob: -2.0515353679656982
    3. 'directory' → logprob: -2.9265353679656982
    4. 'segment' → logprob: -4.301535606384277
    5. '.' → logprob: -4.676535606384277
    6. 'dot' → logprob: -4.801535606384277
    7. 'special' → logprob: -4.926535606384277
    8. ' '.'' → logprob: -5.426535606384277
    9. 'index' → logprob: -5.551535606384277
    10. 'parent' → logprob: -5.676535606384277

Token 1410: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4815253019332886
    2. ':' → logprob: -1.9815253019332886
    3. 'name' → logprob: -2.231525421142578
    4. ' if' → logprob: -3.481525421142578
    5. ' or' → logprob: -3.981525421142578
    6. 'and' → logprob: -4.106525421142578
    7. ''' → logprob: -4.356525421142578
    8. ' name' → logprob: -4.356525421142578
    9. '.' → logprob: -4.606525421142578
    10. '_name' → logprob: -4.856525421142578

Token 1411: 'except' (ID: 25035)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.43623822927474976
    2. 'not' → logprob: -1.9362382888793945
    3. ' not' → logprob: -2.4362382888793945
    4. 'last' → logprob: -2.9362382888793945
    5. ' last' → logprob: -4.0612382888793945
    6. ''' → logprob: -4.1862382888793945
    7. ')' → logprob: -4.4362382888793945
    8. ' '.'' → logprob: -5.5612382888793945
    9. 'if' → logprob: -5.6862382888793945
    10. '#' → logprob: -5.9362382888793945

Token 1412: ' if' (ID: 538)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.991685688495636
    2. ''/' → logprob: -1.2416856288909912
    3. 'for' → logprob: -1.9916856288909912
    4. ''' → logprob: -2.491685628890991
    5. ' for' → logprob: -3.491685628890991
    6. 'last' → logprob: -3.991685628890991
    7. 'self' → logprob: -4.61668586730957
    8. ' last' → logprob: -4.74168586730957
    9. ' '/' → logprob: -4.99168586730957
    10. 'if' → logprob: -5.36668586730957

Token 1413: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.03805767372250557
    2. ' last' → logprob: -3.288057565689087
    3. '(last' → logprob: -12.663057327270508
    4. ' Path' → logprob: -13.163057327270508
    5. 'self' → logprob: -13.163057327270508
    6. 'Path' → logprob: -13.288057327270508
    7. '.last' → logprob: -13.413057327270508
    8. '	last' → logprob: -13.913057327270508
    9. 'segments' → logprob: -14.038057327270508
    10. 'se' → logprob: -14.288057327270508

Token 1414: ' is' (ID: 382)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.02339024469256401
    2. 'segment' → logprob: -5.398390293121338
    3. 'seg' → logprob: -5.398390293121338
    4. ' segment' → logprob: -5.648390293121338
    5. '_segment' → logprob: -5.898390293121338
    6. 'Seg' → logprob: -7.273390293121338
    7. '_sep' → logprob: -7.398390293121338
    8. ')' → logprob: -7.523390293121338
    9. '.' → logprob: -7.523390293121338
    10. ' ' → logprob: -7.648390293121338

Token 1415: ' index' (ID: 3472)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.719946026802063
    2. 'self' → logprob: -0.969946026802063
    3. ''' → logprob: -3.2199459075927734
    4. ''/' → logprob: -3.3449459075927734
    5. ' self' → logprob: -3.7199459075927734
    6. ' '.'' → logprob: -4.594945907592773
    7. 'INDEX' → logprob: -5.469945907592773
    8. '''' → logprob: -5.719945907592773
    9. ' '.')' → logprob: -5.844945907592773
    10. 'Index' → logprob: -5.969945907592773

Token 1416: '.html' (ID: 4588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11998999118804932
    2. '.html' → logprob: -2.2449898719787598
    3. ''.' → logprob: -6.11998987197876
    4. '_file' → logprob: -6.61998987197876
    5. ')' → logprob: -6.99498987197876
    6. 'html' → logprob: -7.61998987197876
    7. '_html' → logprob: -7.86998987197876
    8. '.)' → logprob: -7.99498987197876
    9. '.
' → logprob: -8.119990348815918
    10. '```' → logprob: -8.494990348815918

Token 1417: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38917943835258484
    2. ')' → logprob: -1.8891794681549072
    3. ' or' → logprob: -2.0141794681549072
    4. '):
' → logprob: -4.014179229736328
    5. 'and' → logprob: -4.514179229736328
    6. '):' → logprob: -6.139179229736328
    7. ''' → logprob: -6.514179229736328
    8. '),' → logprob: -6.639179229736328
    9. '')' → logprob: -7.139179229736328
    10. ' )' → logprob: -7.264179229736328

Token 1418: ' possible' (ID: 4149)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.14959688484668732
    2. 'len' → logprob: -2.649596929550171
    3. ' last' → logprob: -3.149596929550171
    4. 'self' → logprob: -5.149596691131592
    5. 'stack' → logprob: -5.149596691131592
    6. 'not' → logprob: -5.274596691131592
    7. ' not' → logprob: -6.149596691131592
    8. ' len' → logprob: -6.274596691131592
    9. '(last' → logprob: -6.524596691131592
    10. 'False' → logprob: -7.274596691131592

Token 1419: ' omission' (ID: 171628)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -1.3920390605926514
    2. 'len' → logprob: -1.8920390605926514
    3. 'slash' → logprob: -2.0170390605926514
    4. 'last' → logprob: -2.6420390605926514
    5. ' to' → logprob: -2.8920390605926514
    6. ' len' → logprob: -3.1420390605926514
    7. ' is' → logprob: -3.1420390605926514
    8. ' stack' → logprob: -3.6420390605926514
    9. 'stack' → logprob: -4.0170392990112305
    10. ' '/'' → logprob: -4.2670392990112305

Token 1420: ')
' (ID: 446)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7896353006362915
    2. '),' → logprob: -1.5396353006362915
    3. 'of' → logprob: -2.039635181427002
    4. ' is' → logprob: -2.539635181427002
    5. '):' → logprob: -3.164635181427002
    6. ' or' → logprob: -3.789635181427002
    7. '):
' → logprob: -4.414635181427002
    8. ')' → logprob: -5.039635181427002
    9. 'is' → logprob: -5.039635181427002
    10. '...' → logprob: -5.164635181427002

Token 1421: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0082275867462158
    2. '       ' → logprob: -1.0082275867462158
    3. ' if' → logprob: -2.133227586746216
    4. ':
' → logprob: -2.758227586746216
    5. ' and' → logprob: -3.133227586746216
    6. '.' → logprob: -4.133227348327637
    7. 'if' → logprob: -4.883227348327637
    8. ' or' → logprob: -5.133227348327637
    9. ' :' → logprob: -5.883227348327637
    10. ',' → logprob: -6.383227348327637

Token 1422: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44384443759918213
    2. 'if' → logprob: -1.6938444375991821
    3. '       ' → logprob: -1.8188444375991821
    4. ':' → logprob: -5.443844318389893
    5. ':
' → logprob: -5.818844318389893
    6. '
' → logprob: -6.318844318389893
    7. '        
' → logprob: -7.193844318389893
    8. '#' (adapté à ' #') → logprob: -7.318844318389893
    9. '   ' → logprob: -8.69384479522705
    10. ')' → logprob: -8.69384479522705

Token 1423: ' Let's' (ID: 41021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9073169231414795
    2. ' if' → logprob: -0.9073169231414795
    3. 'if' → logprob: -1.6573169231414795
    4. '#' → logprob: -7.907317161560059
    5. '
' → logprob: -8.157317161560059
    6. ' is' → logprob: -8.157317161560059
    7. '        
' → logprob: -8.407317161560059
    8. 'for' → logprob: -8.532317161560059
    9. ' for' → logprob: -8.657317161560059
    10. '   ' → logprob: -9.157317161560059

Token 1424: ' guess' (ID: 11915)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6016926169395447
    2. 'continue' → logprob: -1.8516926765441895
    3. 'check' → logprob: -2.3516926765441895
    4. '       ' → logprob: -2.3516926765441895
    5. 'det' → logprob: -3.9766926765441895
    6. 'ass' → logprob: -4.4766926765441895
    7. ' if' → logprob: -4.4766926765441895
    8. ' check' → logprob: -4.8516926765441895
    9. ' continue' → logprob: -4.9766926765441895
    10. '```' → logprob: -4.9766926765441895

Token 1425: ' by' (ID: 656)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14406630396842957
    2. 'if' → logprob: -2.644066333770752
    3. '       ' → logprob: -4.269066333770752
    4. ' i' → logprob: -4.394066333770752
    5. ' for' → logprob: -4.394066333770752
    6. ' last' → logprob: -5.269066333770752
    7. 'for' → logprob: -5.769066333770752
    8. ' tokens' → logprob: -6.019066333770752
    9. ' whether' → logprob: -6.144066333770752
    10. ' token' → logprob: -6.144066333770752

Token 1426: ' verifying' (ID: 119332)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -1.0091074705123901
    2. '('.' → logprob: -1.1341074705123901
    3. 'not' → logprob: -1.5091074705123901
    4. '('.')' → logprob: -3.6341075897216797
    5. 'checking' → logprob: -4.25910758972168
    6. '(not' → logprob: -4.38410758972168
    7. 'last' → logprob: -4.75910758972168
    8. ' not' → logprob: -5.00910758972168
    9. '('.',' → logprob: -5.63410758972168
    10. '(' → logprob: -5.63410758972168

Token 1427: ' fs' (ID: 16105)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.046399280428886414
    2. 'curr' → logprob: -3.9213993549346924
    3. ' if' → logprob: -4.296399116516113
    4. 'file' → logprob: -5.671399116516113
    5. '       ' → logprob: -6.046399116516113
    6. 'exists' → logprob: -6.546399116516113
    7. 'last' → logprob: -7.046399116516113
    8. ' curr' → logprob: -7.796399116516113
    9. '#' → logprob: -7.796399116516113
    10. 'path' → logprob: -7.921399116516113

Token 1428: ' existence' (ID: 24140)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16791070997714996
    2. '_segments' → logprob: -3.1679108142852783
    3. 'curr' → logprob: -3.9179108142852783
    4. '_path' → logprob: -4.292910575866699
    5. ' if' → logprob: -4.417910575866699
    6. 'segments' → logprob: -4.542910575866699
    7. '_curr' → logprob: -5.042910575866699
    8. '(curr' → logprob: -5.417910575866699
    9. 'if' → logprob: -5.417910575866699
    10. ' segments' → logprob: -5.417910575866699

Token 1429: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08006095141172409
    2. 'curr' → logprob: -3.5800609588623047
    3. 'if' → logprob: -3.8300609588623047
    4. '
' → logprob: -4.955060958862305
    5. ' if' → logprob: -5.455060958862305
    6. ' curr' → logprob: -5.955060958862305
    7. '#' → logprob: -6.080060958862305
    8. 'for' → logprob: -6.205060958862305
    9. ',' → logprob: -6.705060958862305
    10. '        
' → logprob: -6.830060958862305

Token 1430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021631386131048203
    2. ' curr' → logprob: -4.771631240844727
    3. ' if' → logprob: -5.396631240844727
    4. 'curr' → logprob: -6.021631240844727
    5. ' path' → logprob: -6.396631240844727
    6. 'if' → logprob: -7.021631240844727
    7. '        
' → logprob: -7.271631240844727
    8. ' dir' → logprob: -7.271631240844727
    9. 'dir' → logprob: -7.646631240844727
    10. 'path' → logprob: -8.021631240844727

Token 1431: ' #' (ID: 1069)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -1.2220202684402466
    2. '       ' → logprob: -1.3470202684402466
    3. 'if' → logprob: -1.4720202684402466
    4. 'for' → logprob: -2.097020149230957
    5. 'dir' → logprob: -3.097020149230957
    6. '#' (adapté à ' #') → logprob: -3.722020149230957
    7. 'path' → logprob: -4.972020149230957
    8. 'parent' → logprob: -5.972020149230957
    9. 'dirs' → logprob: -5.972020149230957
    10. ' curr' → logprob: -6.097020149230957

Token 1432: ' In' (ID: 730)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1874926090240479
    2. 'curr' → logprob: -1.1874926090240479
    3. '       ' → logprob: -1.4374926090240479
    4. '#' → logprob: -3.187492609024048
    5. 'i' → logprob: -3.312492609024048
    6. 'for' → logprob: -3.812492609024048
    7. 'dir' → logprob: -3.812492609024048
    8. 'file' → logprob: -4.562492370605469
    9. 'is' → logprob: -4.812492370605469
    10. 'prev' → logprob: -6.062492370605469

Token 1433: ' normalization' (ID: 115461)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6367508172988892
    2. 'if' → logprob: -1.8867508172988892
    3. '       ' → logprob: -3.1367506980895996
    4. 'segments' → logprob: -3.3867506980895996
    5. 'self' → logprob: -3.5117506980895996
    6. 'def' → logprob: -3.7617506980895996
    7. 'curr' → logprob: -3.8867506980895996
    8. 'the' → logprob: -3.8867506980895996
    9. 'this' → logprob: -4.0117506980896
    10. ' segments' → logprob: -4.1367506980896

Token 1434: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3564903736114502
    2. ':' → logprob: -1.6064903736114502
    3. ',' → logprob: -2.85649037361145
    4. 'for' → logprob: -4.856490135192871
    5. ':
' → logprob: -4.981490135192871
    6. ' for' → logprob: -4.981490135192871
    7. '   ' → logprob: -5.106490135192871
    8. ' if' → logprob: -5.481490135192871
    9. 'if' → logprob: -7.106490135192871
    10. '.' → logprob: -7.231490135192871

Token 1435: ' cannot' (ID: 6284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2187638282775879
    2. ' try' → logprob: -2.593763828277588
    3. ' continue' → logprob: -2.843763828277588
    4. 'continue' → logprob: -3.968763828277588
    5. ' will' → logprob: -5.093763828277588
    6. 'try' → logprob: -5.468763828277588
    7. '   ' → logprob: -5.843763828277588
    8. ' =' → logprob: -5.968763828277588
    9. '#' → logprob: -5.968763828277588
    10. ' must' → logprob: -5.968763828277588

Token 1436: ' just' (ID: 1327)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.96170574426651
    2. 're' → logprob: -2.2117056846618652
    3. 'ass' → logprob: -2.5867056846618652
    4. 'guess' → logprob: -2.7117056846618652
    5. 'know' → logprob: -2.8367056846618652
    6. ' reliably' → logprob: -2.9617056846618652
    7. '```' → logprob: -3.4617056846618652
    8. 'def' → logprob: -4.086705684661865
    9. 'check' → logprob: -4.086705684661865
    10. 'continue' → logprob: -4.211705684661865

Token 1437: ' guess' (ID: 11915)
  Prédit: 'guess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'guess' → logprob: -0.9349181056022644
    2. 'ass' → logprob: -1.3099181652069092
    3. 'check' → logprob: -1.5599181652069092
    4. 'use' → logprob: -3.559918165206909
    5. 'return' → logprob: -3.559918165206909
    6. 're' → logprob: -3.684918165206909
    7. 'det' → logprob: -4.30991792678833
    8. 'know' → logprob: -4.80991792678833
    9. 'im' → logprob: -5.68491792678833
    10. 'query' → logprob: -6.18491792678833

Token 1438: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21390283107757568
    2. ' if' → logprob: -2.4639029502868652
    3. ' here' → logprob: -4.088902950286865
    4. ',' → logprob: -4.338902950286865
    5. 'if' → logprob: -4.338902950286865
    6. '.' → logprob: -4.713902950286865
    7. '...' → logprob: -4.838902950286865
    8. ' for' → logprob: -4.963902950286865
    9. '#' → logprob: -5.088902950286865
    10. ' at' → logprob: -5.338902950286865

Token 1439: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.06660258769989014
    2. ' last' → logprob: -2.9416027069091797
    3. 'the' → logprob: -4.81660270690918
    4. ' the' → logprob: -6.56660270690918
    5. 'a' → logprob: -6.94160270690918
    6. 'next' → logprob: -8.19160270690918
    7. ' a' → logprob: -8.31660270690918
    8. 'se' → logprob: -8.44160270690918
    9. 'file' → logprob: -9.44160270690918
    10. '#' → logprob: -9.56660270690918

Token 1440: ' segment' (ID: 14806)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.5524084568023682
    2. ' is' → logprob: -1.6774084568023682
    3. 'seg' → logprob: -3.552408456802368
    4. 'is' → logprob: -3.677408456802368
    5. 'segment' → logprob: -3.802408456802368
    6. '_' → logprob: -3.802408456802368
    7. ' seg' → logprob: -4.052408218383789
    8. ''' → logprob: -4.177408218383789
    9. ' '' → logprob: -4.427408218383789
    10. ' segment' → logprob: -4.552408218383789

Token 1441: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03671282157301903
    2. 'is' → logprob: -3.411712884902954
    3. ' ==' → logprob: -7.036712646484375
    4. ')' → logprob: -7.536712646484375
    5. ' ' → logprob: -8.036712646484375
    6. '_is' → logprob: -8.786712646484375
    7. '.endswith' → logprob: -9.036712646484375
    8. ' )' → logprob: -9.286712646484375
    9. ' represents' → logprob: -9.286712646484375
    10. '.startswith' → logprob: -9.536712646484375

Token 1442: ' file' (ID: 1974)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1435495913028717
    2. 'file' → logprob: -2.143549680709839
    3. ' a' → logprob: -4.14354944229126
    4. ' file' → logprob: -8.268549919128418
    5. '...' → logprob: -9.393549919128418
    6. '..' → logprob: -9.643549919128418
    7. 'index' → logprob: -10.393549919128418
    8. 'an' → logprob: -10.643549919128418
    9. ''.' → logprob: -10.643549919128418
    10. 'filename' → logprob: -10.768549919128418

Token 1443: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.024691488593816757
    2. ':' → logprob: -4.524691581726074
    3. '       ' → logprob: -5.524691581726074
    4. ' if' → logprob: -5.774691581726074
    5. '.' → logprob: -6.149691581726074
    6. ',' → logprob: -6.399691581726074
    7. 'or' → logprob: -8.024691581726074
    8. ' :' → logprob: -8.274691581726074
    9. ' ' → logprob: -8.399691581726074
    10. ':
' → logprob: -8.774691581726074

Token 1444: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.014455175027251244
    2. ' directory' → logprob: -4.389455318450928
    3. 'dir' → logprob: -6.389455318450928
    4. 'not' → logprob: -9.01445484161377
    5. ' not' → logprob: -9.38945484161377
    6. ' dir' → logprob: -11.01445484161377
    7. 'dirname' → logprob: -11.51445484161377
    8. 'folder' → logprob: -11.63945484161377
    9. '
' → logprob: -12.38945484161377
    10. 'a' → logprob: -12.51445484161377

Token 1445: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23611433804035187
    2. '
' → logprob: -2.236114263534546
    3. ' or' → logprob: -3.111114263534546
    4. ' if' → logprob: -3.486114263534546
    5. '#' → logprob: -4.736114501953125
    6. 'if' → logprob: -4.986114501953125
    7. '        
' → logprob: -6.111114501953125
    8. ',' → logprob: -6.236114501953125
    9. '.' → logprob: -6.486114501953125
    10. ' until' → logprob: -6.736114501953125

Token 1446: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8282873034477234
    2. '       ' → logprob: -1.0782873630523682
    3. ' 
' → logprob: -2.453287363052368
    4. ' seg' → logprob: -3.703287363052368
    5. '#' → logprob: -3.953287363052368
    6. '        
' → logprob: -4.203287124633789
    7. 'if' → logprob: -4.328287124633789
    8. '        ' → logprob: -4.828287124633789
    9. ' i' → logprob: -5.078287124633789
    10. ' for' → logprob: -5.203287124633789

Token 1447: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4588538110256195
    2. '       ' → logprob: -1.958853840827942
    3. ' #' → logprob: -2.8338537216186523
    4. ' 
' → logprob: -3.2088537216186523
    5. '#' (adapté à ' #') → logprob: -3.5838537216186523
    6. ' curr' → logprob: -3.9588537216186523
    7. 'if' → logprob: -4.208853721618652
    8. ' seg' → logprob: -4.333853721618652
    9. ' path' → logprob: -4.458853721618652
    10. '        
' → logprob: -4.708853721618652

Token 1448: ' According' (ID: 16344)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8703316450119019
    2. ' if' → logprob: -1.3703316450119019
    3. ' curr' → logprob: -1.8703316450119019
    4. 'if' → logprob: -2.9953317642211914
    5. '#' → logprob: -3.1203317642211914
    6. 'curr' → logprob: -3.3703317642211914
    7. '
' → logprob: -4.495331764221191
    8. ' #' → logprob: -4.620331764221191
    9. ' for' → logprob: -5.245331764221191
    10. '        
' → logprob: -5.620331764221191

Token 1449: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.024530626833438873
    2. ' to' → logprob: -4.024530410766602
    3. ':' → logprob: -5.899530410766602
    4. '_to' → logprob: -6.024530410766602
    5. '       ' → logprob: -7.649530410766602
    6. '```' → logprob: -8.899530410766602
    7. 'To' → logprob: -9.024530410766602
    8. ''s' → logprob: -10.024530410766602
    9. '   ' → logprob: -10.149530410766602
    10. '#' → logprob: -10.274530410766602

Token 1450: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.46196630597114563
    2. ' the' → logprob: -1.5869662761688232
    3. 'problem' → logprob: -3.2119662761688232
    4. 'self' → logprob: -3.4619662761688232
    5. '#' → logprob: -3.4619662761688232
    6. 'fs' → logprob: -3.9619662761688232
    7. ' problem' → logprob: -3.9619662761688232
    8. 'comment' → logprob: -5.086966514587402
    9. 'comments' → logprob: -6.211966514587402
    10. 'user' → logprob: -6.461966514587402

Token 1451: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5252016186714172
    2. ':' → logprob: -1.6502015590667725
    3. ',' → logprob: -2.4002015590667725
    4. ':
' → logprob: -3.1502015590667725
    5. ' if' → logprob: -3.6502015590667725
    6. '#' → logprob: -3.9002015590667725
    7. ' for' → logprob: -4.650201797485352
    8. '
' → logprob: -5.525201797485352
    9. '):
' → logprob: -5.900201797485352
    10. ',
' → logprob: -6.150201797485352

Token 1452: ' last' (ID: 2174)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20966298878192902
    2. 'for' → logprob: -2.709662914276123
    3. '#' → logprob: -3.084662914276123
    4. ' i' → logprob: -3.334662914276123
    5. '       ' → logprob: -4.084662914276123
    6. 'i' → logprob: -5.209662914276123
    7. ' prev' → logprob: -5.584662914276123
    8. ' if' → logprob: -5.709662914276123
    9. ' #' → logprob: -5.834662914276123
    10. ' index' → logprob: -6.834662914276123

Token 1453: ' segment' (ID: 14806)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.7307690978050232
    2. ' segment' → logprob: -2.605769157409668
    3. 'seg' → logprob: -2.855769157409668
    4. '_segment' → logprob: -3.105769157409668
    5. ' seg' → logprob: -3.230769157409668
    6. 'segment' → logprob: -3.355769157409668
    7. ')' → logprob: -3.605769157409668
    8. '_token' → logprob: -3.730769157409668
    9. '```' → logprob: -3.980769157409668
    10. ' '' → logprob: -4.105769157409668

Token 1454: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.17532287538051605
    2. ' =' → logprob: -2.5503227710723877
    3. ' can' → logprob: -4.175323009490967
    4. ':' → logprob: -4.300323009490967
    5. '=' → logprob: -4.800323009490967
    6. 'is' → logprob: -5.050323009490967
    7. ' ==' → logprob: -5.050323009490967
    8. ' may' → logprob: -5.800323009490967
    9. ' must' → logprob: -5.800323009490967
    10. ' in' → logprob: -5.925323009490967

Token 1455: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0060358005575835705
    2. 'be' → logprob: -5.756035804748535
    3. ' either' → logprob: -6.256035804748535
    4. ' is' → logprob: -8.131035804748535
    5. 'either' → logprob: -8.381035804748535
    6. ' not' → logprob: -8.506035804748535
    7. 'not' → logprob: -10.256035804748535
    8. '```' → logprob: -10.506035804748535
    9. 'is' → logprob: -10.631035804748535
    10. ' represent' → logprob: -10.756035804748535

Token 1456: ' index' (ID: 3472)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32679319381713867
    2. 'file' → logprob: -1.5767931938171387
    3. 'either' → logprob: -2.8267931938171387
    4. ' a' → logprob: -5.451793193817139
    5. 'filename' → logprob: -6.201793193817139
    6. ' either' → logprob: -6.326793193817139
    7. 'both' → logprob: -6.451793193817139
    8. 'directory' → logprob: -7.576793193817139
    9. 'last' → logprob: -7.826793193817139
    10. 'interpre' → logprob: -7.951793193817139

Token 1457: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.4448939859867096
    2. '.' → logprob: -1.6948939561843872
    3. 'html' → logprob: -3.0698940753936768
    4. '_html' → logprob: -3.4448940753936768
    5. '_' → logprob: -3.6948940753936768
    6. '[' → logprob: -4.319893836975098
    7. ')' → logprob: -4.444893836975098
    8. '_name' → logprob: -4.569893836975098
    9. ''.' → logprob: -5.194893836975098
    10. '_file' → logprob: -5.444893836975098

Token 1458: ' file' (ID: 1974)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5745478272438049
    2. ' i' → logprob: -1.5745477676391602
    3. ' for' → logprob: -2.69954776763916
    4. '
' → logprob: -3.44954776763916
    5. '        
' → logprob: -3.82454776763916
    6. 'i' → logprob: -4.07454776763916
    7. ' =' → logprob: -4.07454776763916
    8. ' if' → logprob: -4.69954776763916
    9. ')' → logprob: -4.82454776763916
    10. ',' → logprob: -5.07454776763916

Token 1459: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5810246467590332
    2. ' for' → logprob: -1.7060246467590332
    3. ' i' → logprob: -1.9560246467590332
    4. ' if' → logprob: -3.581024646759033
    5. '
' → logprob: -3.706024646759033
    6. 'for' → logprob: -4.331024646759033
    7. '        
' → logprob: -5.331024646759033
    8. ':' → logprob: -5.581024646759033
    9. ' or' → logprob: -5.706024646759033
    10. ',' → logprob: -5.706024646759033

Token 1460: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12990394234657288
    2. ' but' → logprob: -2.87990403175354
    3. 'or' → logprob: -4.254903793334961
    4. '#' → logprob: -4.754903793334961
    5. '       ' → logprob: -5.254903793334961
    6. ''' → logprob: -5.379903793334961
    7. ' if' → logprob: -5.504903793334961
    8. ' not' → logprob: -5.754903793334961
    9. ' so' → logprob: -5.879903793334961
    10. ' last' → logprob: -6.004903793334961

Token 1461: ' ordinary' (ID: 30633)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.3622608184814453
    2. 'a' → logprob: -1.4872608184814453
    3. ' directory' → logprob: -3.4872608184814453
    4. ' a' → logprob: -3.6122608184814453
    5. 'an' → logprob: -5.987260818481445
    6. 'last' → logprob: -6.237260818481445
    7. 'other' → logprob: -6.612260818481445
    8. ' an' → logprob: -6.737260818481445
    9. 'possibly' → logprob: -6.862260818481445
    10. 'dirname' → logprob: -6.987260818481445

Token 1462: ' file' (ID: 1974)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.19708490371704102
    2. ' directory' → logprob: -2.572084903717041
    3. 'segment' → logprob: -3.072084903717041
    4. ' segment' → logprob: -4.447084903717041
    5. 'file' → logprob: -4.572084903717041
    6. 'dirname' → logprob: -4.572084903717041
    7. ' file' → logprob: -5.197084903717041
    8. 'directories' → logprob: -5.572084903717041
    9. 'dir' → logprob: -6.197084903717041
    10. 'name' → logprob: -6.322084903717041

Token 1463: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3848322331905365
    2. ' or' → logprob: -1.5098322629928589
    3. ',' → logprob: -3.2598321437835693
    4. ' if' → logprob: -4.384832382202148
    5. ')' → logprob: -4.509832382202148
    6. ' for' → logprob: -5.009832382202148
    7. ':' → logprob: -5.509832382202148
    8. 'for' → logprob: -5.759832382202148
    9. '   ' → logprob: -5.884832382202148
    10. '.' → logprob: -6.134832382202148

Token 1464: ' or' (ID: 503)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6340810060501099
    2. 'or' → logprob: -1.1340810060501099
    3. ' or' → logprob: -2.1340808868408203
    4. '       ' → logprob: -4.25908088684082
    5. 'directory' → logprob: -4.50908088684082
    6. 'but' → logprob: -6.25908088684082
    7. ' but' → logprob: -7.25908088684082
    8. 'and' → logprob: -7.38408088684082
    9. ' directory' → logprob: -8.25908088684082
    10. ' #' → logprob: -8.38408088684082

Token 1465: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.013320575468242168
    2. 'a' → logprob: -4.388320446014404
    3. ' directory' → logprob: -7.263320446014404
    4. ' a' → logprob: -9.388320922851562
    5. 'index' → logprob: -12.388320922851562
    6. 'directories' → logprob: -12.388320922851562
    7. 'dirname' → logprob: -13.013320922851562
    8. 'dir' → logprob: -13.138320922851562
    9. 'last' → logprob: -13.263320922851562
    10. 'segment' → logprob: -13.263320922851562

Token 1466: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32996928691864014
    2. ' i' → logprob: -1.9549692869186401
    3. ' for' → logprob: -2.7049694061279297
    4. 'i' → logprob: -3.3299694061279297
    5. 'for' → logprob: -4.07996940612793
    6. '
' → logprob: -4.95496940612793
    7. '#' → logprob: -5.70496940612793
    8. '```' → logprob: -6.57996940612793
    9. ' =' → logprob: -6.82996940612793
    10. 'idx' → logprob: -6.95496940612793

Token 1467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.912643551826477
    2. 'i' → logprob: -1.037643551826477
    3. ' i' → logprob: -1.787643551826477
    4. 'for' → logprob: -3.2876434326171875
    5. ' for' → logprob: -3.4126434326171875
    6. '#' → logprob: -6.5376434326171875
    7. 'idx' → logprob: -6.6626434326171875
    8. '
' → logprob: -7.6626434326171875
    9. 'if' → logprob: -7.9126434326171875
    10. 'pos' → logprob: -7.9126434326171875

Token 1468: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15648606419563293
    2. 'for' → logprob: -2.0314860343933105
    3. '       ' → logprob: -5.0314860343933105
    4. '#' (adapté à ' #') → logprob: -6.1564860343933105
    5. ' i' → logprob: -6.4064860343933105
    6. 'idx' → logprob: -6.5314860343933105
    7. ' for' → logprob: -7.0314860343933105
    8. 'if' → logprob: -7.6564860343933105
    9. 'dir' → logprob: -8.781486511230469
    10. 'pos' → logprob: -8.906486511230469

Token 1469: ' So' (ID: 2632)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32277795672416687
    2. 'for' → logprob: -1.3227779865264893
    3. '       ' → logprob: -4.94777774810791
    4. 'idx' → logprob: -6.69777774810791
    5. '#' → logprob: -7.82277774810791
    6. 'is' → logprob: -8.57277774810791
    7. 'if' → logprob: -8.94777774810791
    8. 'dir' → logprob: -9.19777774810791
    9. ' i' → logprob: -9.44777774810791
    10. ' for' → logprob: -9.69777774810791

Token 1470: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1934230625629425
    2. 'i' → logprob: -2.69342303276062
    3. ' for' → logprob: -2.69342303276062
    4. '       ' → logprob: -4.193423271179199
    5. '#' → logprob: -4.193423271179199
    6. ' i' → logprob: -4.943423271179199
    7. 'dir' → logprob: -6.693423271179199
    8. ' #' → logprob: -7.568423271179199
    9. 'def' → logprob: -7.693423271179199
    10. 'if' → logprob: -8.4434232711792

Token 1471: ' try' (ID: 2075)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.548154354095459
    2. 'process' → logprob: -1.798154354095459
    3. '#' → logprob: -2.423154354095459
    4. 'for' → logprob: -3.423154354095459
    5. 'try' → logprob: -3.673154354095459
    6. 'def' → logprob: -3.923154354095459
    7. ' process' → logprob: -4.173154354095459
    8. '   ' → logprob: -4.423154354095459
    9. 'consider' → logprob: -5.048154354095459
    10. 'will' → logprob: -5.173154354095459

Token 1472: ' two' (ID: 1920)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.0675380229949951
    2. ' to' → logprob: -1.3175380229949951
    3. ':
' → logprob: -1.8175380229949951
    4. ':' → logprob: -2.067538022994995
    5. '       ' → logprob: -3.317538022994995
    6. 'if' → logprob: -3.942538022994995
    7. 'both' → logprob: -4.692538261413574
    8. '   ' → logprob: -5.192538261413574
    9. 'all' → logprob: -5.442538261413574
    10. 'for' → logprob: -5.567538261413574

Token 1473: ' hypotheses' (ID: 158735)
  Prédit: ' possibilities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibilities' → logprob: -0.9048835635185242
    2. ':' → logprob: -1.654883623123169
    3. 'poss' → logprob: -2.029883623123169
    4. ' options' → logprob: -2.404883623123169
    5. ' approaches' → logprob: -2.904883623123169
    6. 'paths' → logprob: -3.404883623123169
    7. 'options' → logprob: -3.529883623123169
    8. ' paths' → logprob: -4.02988338470459
    9. 'cases' → logprob: -4.52988338470459
    10. 'appro' → logprob: -4.65488338470459

Token 1474: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006585335824638605
    2. ':
' → logprob: -5.381585121154785
    3. '       ' → logprob: -7.506585121154785
    4. ' :' → logprob: -8.131585121154785
    5. ' =' → logprob: -8.381585121154785
    6. ',' → logprob: -8.506585121154785
    7. '#' → logprob: -8.631585121154785
    8. '.' → logprob: -8.756585121154785
    9. ' if' → logprob: -9.881585121154785
    10. ' for' → logprob: -10.131585121154785

Token 1475: ' needed' (ID: 6118)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.10426490008831024
    2. ' last' → logprob: -2.354264974594116
    3. 'len' → logprob: -5.854264736175537
    4. ' not' → logprob: -7.979264736175537
    5. 'not' → logprob: -7.979264736175537
    6. ' len' → logprob: -8.854265213012695
    7. 'self' → logprob: -8.854265213012695
    8. '(last' → logprob: -9.354265213012695
    9. ' self' → logprob: -10.104265213012695
    10. ' '.'' → logprob: -11.104265213012695

Token 1476: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5156449675559998
    2. ' if' → logprob: -1.6406450271606445
    3. '       ' → logprob: -2.5156450271606445
    4. '#' → logprob: -3.3906450271606445
    5. 'if' → logprob: -3.3906450271606445
    6. ':
' → logprob: -4.7656450271606445
    7. '        
' → logprob: -4.7656450271606445
    8. '
' → logprob: -4.8906450271606445
    9. '.' → logprob: -4.8906450271606445
    10. ' for' → logprob: -5.6406450271606445

Token 1477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4427639842033386
    2. ' if' → logprob: -1.4427640438079834
    3. 'if' → logprob: -2.6927640438079834
    4. '#' → logprob: -3.9427640438079834
    5. '        
' → logprob: -4.442763805389404
    6. '
' → logprob: -4.692763805389404
    7. ' for' → logprob: -5.317763805389404
    8. ' i' → logprob: -6.067763805389404
    9. 'for' → logprob: -6.567763805389404
    10. ' #' → logprob: -6.817763805389404

Token 1478: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8270253539085388
    2. ' if' → logprob: -0.8270253539085388
    3. '       ' → logprob: -2.5770254135131836
    4. '#' (adapté à ' #') → logprob: -3.5770254135131836
    5. ' for' → logprob: -5.202025413513184
    6. 'for' → logprob: -5.202025413513184
    7. ' #' → logprob: -5.327025413513184
    8. ' i' → logprob: -6.202025413513184
    9. '        
' → logprob: -7.202025413513184
    10. '
' → logprob: -7.202025413513184

Token 1479: ' Hyp' (ID: 59608)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7798596024513245
    2. ' if' → logprob: -1.0298595428466797
    3. '       ' → logprob: -1.9048595428466797
    4. '#' → logprob: -4.02985954284668
    5. '
' → logprob: -5.40485954284668
    6. ' #' → logprob: -5.52985954284668
    7. 'for' → logprob: -6.02985954284668
    8. ' for' → logprob: -6.40485954284668
    9. '        
' → logprob: -6.40485954284668
    10. ' i' → logprob: -7.15485954284668

Token 1480: '1' (ID: 16)
  Prédit: 'othesis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'othesis' → logprob: -0.1494455635547638
    2. '#' → logprob: -2.5244455337524414
    3. 'th' → logprob: -3.7744455337524414
    4. '       ' → logprob: -4.274445533752441
    5. 'oth' → logprob: -5.399445533752441
    6. '   ' → logprob: -5.399445533752441
    7. 'ot' → logprob: -5.649445533752441
    8. 't' → logprob: -6.149445533752441
    9. '#
' → logprob: -6.274445533752441
    10. '
' → logprob: -7.274445533752441

Token 1481: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46281787753105164
    2. ':' → logprob: -1.212817907333374
    3. ' if' → logprob: -3.462817907333374
    4. '=' → logprob: -3.962817907333374
    5. '       ' → logprob: -4.712817668914795
    6. ':
' → logprob: -5.962817668914795
    7. '        ' → logprob: -6.087817668914795
    8. 'if' → logprob: -6.087817668914795
    9. ' :' → logprob: -6.212817668914795
    10. ')' → logprob: -7.462817668914795

Token 1482: ' last' (ID: 2174)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5179072618484497
    2. ' #' → logprob: -2.51790714263916
    3. 'if' → logprob: -2.64290714263916
    4. ' stack' → logprob: -3.26790714263916
    5. 'stack' → logprob: -3.64290714263916
    6. ' if' → logprob: -3.76790714263916
    7. 'last' → logprob: -3.76790714263916
    8. 'file' → logprob: -3.89290714263916
    9. 'se' → logprob: -4.14290714263916
    10. ' file' → logprob: -4.14290714263916

Token 1483: ' segment' (ID: 14806)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.1179596483707428
    2. ' =' → logprob: -3.61795973777771
    3. '_token' → logprob: -4.117959499359131
    4. '_segment' → logprob: -4.367959499359131
    5. '_' → logprob: -4.742959499359131
    6. '_se' → logprob: -4.867959499359131
    7. ' seg' → logprob: -5.367959499359131
    8. ' segment' → logprob: -5.617959499359131
    9. ' is' → logprob: -5.742959499359131
    10. 'Seg' → logprob: -5.992959499359131

Token 1484: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1669883131980896
    2. 'is' → logprob: -2.2919883728027344
    3. '_is' → logprob: -3.0419883728027344
    4. 'Is' → logprob: -6.416988372802734
    5. ' might' → logprob: -6.916988372802734
    6. ' may' → logprob: -8.166988372802734
    7. ' represents' → logprob: -8.416988372802734
    8. ' =' → logprob: -8.541988372802734
    9. '.endswith' → logprob: -8.541988372802734
    10. '```' → logprob: -8.666988372802734

Token 1485: ' file' (ID: 1974)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3453066051006317
    2. 'file' → logprob: -1.470306634902954
    3. ' a' → logprob: -2.970306634902954
    4. ' file' → logprob: -4.720306396484375
    5. 'directory' → logprob: -6.595306396484375
    6. 'filename' → logprob: -7.720306396484375
    7. ' directory' → logprob: -9.595306396484375
    8. 'an' → logprob: -10.720306396484375
    9. 'treated' → logprob: -12.220306396484375
    10. ' filename' → logprob: -12.345306396484375

Token 1486: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2402152121067047
    2. ':' → logprob: -3.115215301513672
    3. 'if' → logprob: -3.490215301513672
    4. ' if' → logprob: -3.990215301513672
    5. 'name' → logprob: -4.115215301513672
    6. '_name' → logprob: -4.115215301513672
    7. 'segments' → logprob: -4.490215301513672
    8. '   ' → logprob: -4.615215301513672
    9. '
' → logprob: -4.865215301513672
    10. ' =' → logprob: -5.115215301513672

Token 1487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29943105578422546
    2. ':' → logprob: -2.799431085586548
    3. ' if' → logprob: -2.799431085586548
    4. '#' → logprob: -2.924431085586548
    5. '
' → logprob: -3.174431085586548
    6. 'if' → logprob: -4.674430847167969
    7. '.' → logprob: -4.924430847167969
    8. ',' → logprob: -5.549430847167969
    9. ')' → logprob: -5.799430847167969
    10. ':
' → logprob: -6.299430847167969

Token 1488: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0990991592407227
    2. '#' (adapté à ' #') → logprob: -1.5990991592407227
    3. ' if' → logprob: -1.5990991592407227
    4. 'if' → logprob: -2.0990991592407227
    5. '
' → logprob: -2.3490991592407227
    6. ':' → logprob: -4.349099159240723
    7. ':
' → logprob: -4.974099159240723
    8. ' #' → logprob: -5.599099159240723
    9. ',' → logprob: -5.724099159240723
    10. ',
' → logprob: -6.099099159240723

Token 1489: ' Hyp' (ID: 59608)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8025753498077393
    2. ' if' → logprob: -2.0525753498077393
    3. ' path' → logprob: -2.0525753498077393
    4. 'if' → logprob: -2.8025753498077393
    5. '#' → logprob: -2.8025753498077393
    6. ' dir' → logprob: -3.1775753498077393
    7. 'path' → logprob: -3.9275753498077393
    8. ' file' → logprob: -3.9275753498077393
    9. ' #' → logprob: -4.17757511138916
    10. ' curr' → logprob: -4.17757511138916

Token 1490: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006615430116653442
    2. '_' → logprob: -5.50661563873291
    3. '#' → logprob: -7.00661563873291
    4. ' =' → logprob: -7.25661563873291
    5. '=' → logprob: -8.25661563873291
    6. 's' → logprob: -9.13161563873291
    7. '```' → logprob: -9.25661563873291
    8. '?' → logprob: -9.38161563873291
    9. '_name' → logprob: -10.13161563873291
    10. ')' → logprob: -10.13161563873291

Token 1491: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007141007808968425
    2. '=' → logprob: -7.875714302062988
    3. ' :' → logprob: -8.375714302062988
    4. '1' → logprob: -10.125714302062988
    5. ' =' → logprob: -10.125714302062988
    6. '):' → logprob: -12.750714302062988
    7. '   ' → logprob: -12.750714302062988
    8. '2' → logprob: -12.875714302062988
    9. '=None' → logprob: -12.875714302062988
    10. ':list' → logprob: -13.625714302062988

Token 1492: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.13428747653961182
    2. ' last' → logprob: -2.1342873573303223
    3. 'stack' → logprob: -5.884287357330322
    4. 'if' → logprob: -6.884287357330322
    5. ' stack' → logprob: -7.259287357330322
    6. 'segments' → logprob: -8.00928783416748
    7. ' if' → logprob: -8.25928783416748
    8. '#' → logprob: -8.25928783416748
    9. '...' → logprob: -8.38428783416748
    10. 'the' → logprob: -8.50928783416748

Token 1493: ' segment' (ID: 14806)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.0377051867544651
    2. '_' → logprob: -4.037705421447754
    3. '_segment' → logprob: -4.537705421447754
    4. 'Seg' → logprob: -6.037705421447754
    5. 'seg' → logprob: -6.787705421447754
    6. '_segments' → logprob: -7.162705421447754
    7. '_token' → logprob: -7.287705421447754
    8. '```' → logprob: -7.412705421447754
    9. ' Seg' → logprob: -7.662705421447754
    10. '_se' → logprob: -8.037705421447754

Token 1494: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.002948578679934144
    2. 'is' → logprob: -5.877948760986328
    3. '
' → logprob: -10.627948760986328
    4. ' =' → logprob: -10.752948760986328
    5. ' ' → logprob: -11.127948760986328
    6. ')' → logprob: -11.252948760986328
    7. '_is' → logprob: -11.877948760986328
    8. ' not' → logprob: -12.002948760986328
    9. ':' → logprob: -12.377948760986328
    10. '.is' → logprob: -12.377948760986328

Token 1495: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.0030393933411687613
    2. 'a' → logprob: -5.878039360046387
    3. ' directory' → logprob: -8.503039360046387
    4. '''' → logprob: -11.878039360046387
    5. ' a' → logprob: -12.128039360046387
    6. 'index' → logprob: -12.128039360046387
    7. 'None' → logprob: -12.503039360046387
    8. 'treated' → logprob: -12.753039360046387
    9. 'file' → logprob: -13.628039360046387
    10. 'dir' → logprob: -13.753039360046387

Token 1496: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39903730154037476
    2. '
' → logprob: -1.2740373611450195
    3. '        
' → logprob: -4.1490373611450195
    4. ' i' → logprob: -4.3990373611450195
    5. ' if' → logprob: -5.2740373611450195
    6. ' for' → logprob: -5.5240373611450195
    7. '#' → logprob: -5.8990373611450195
    8. 'i' → logprob: -6.2740373611450195
    9. 'if' → logprob: -6.3990373611450195
    10. 'for' → logprob: -6.5240373611450195

Token 1497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12092598527669907
    2. '
' → logprob: -2.3709259033203125
    3. '        
' → logprob: -4.2459259033203125
    4. ' if' → logprob: -6.1209259033203125
    5. ' 
' → logprob: -6.6209259033203125
    6. '#' → logprob: -7.4959259033203125
    7. '  
' → logprob: -7.9959259033203125
    8. '    
' → logprob: -8.120925903320312
    9. 'if' → logprob: -8.620925903320312
    10. '       
' → logprob: -8.620925903320312

Token 1498: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8095513582229614
    2. '
' → logprob: -1.1845513582229614
    3. 'if' → logprob: -1.9345513582229614
    4. ' if' → logprob: -2.809551239013672
    5. '        
' → logprob: -3.809551239013672
    6. '#' (adapté à ' #') → logprob: -4.059551239013672
    7. ' #' → logprob: -6.434551239013672
    8. ' 
' → logprob: -7.184551239013672
    9. 'for' → logprob: -7.809551239013672
    10. 'def' → logprob: -7.934551239013672

Token 1499: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2122175693511963
    2. ' if' → logprob: -1.2122175693511963
    3. '
' → logprob: -1.3372175693511963
    4. 'if' → logprob: -2.2122175693511963
    5. '#' → logprob: -4.212217330932617
    6. ' #' → logprob: -5.337217330932617
    7. '        
' → logprob: -5.462217330932617
    8. ' for' → logprob: -5.962217330932617
    9. 'for' → logprob: -6.337217330932617
    10. 'def' → logprob: -6.587217330932617

Token 1500: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6210156679153442
    2. '       ' → logprob: -1.2460156679153442
    3. '
' → logprob: -2.6210155487060547
    4. 'if' → logprob: -2.7460155487060547
    5. 'def' → logprob: -3.8710155487060547
    6. 'for' → logprob: -4.246015548706055
    7. 'file' → logprob: -7.246015548706055
    8. 'curr' → logprob: -7.746015548706055
    9. '        
' → logprob: -7.996015548706055
    10. '   ' → logprob: -8.371015548706055

Token 1501: ' check' (ID: 2371)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.47331005334854126
    2. ' try' → logprob: -1.2233099937438965
    3. 'check' → logprob: -4.2233099937438965
    4. 'attempt' → logprob: -4.4733099937438965
    5. 'continue' → logprob: -4.4733099937438965
    6. '#' → logprob: -4.5983099937438965
    7. ' check' → logprob: -4.9733099937438965
    8. '       ' → logprob: -4.9733099937438965
    9. 'def' → logprob: -5.2233099937438965
    10. 'simulate' → logprob: -5.9733099937438965

Token 1502: ' filesystem' (ID: 105930)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2626464366912842
    2. '       ' → logprob: -1.8876464366912842
    3. 'if' → logprob: -2.887646436691284
    4. ' for' → logprob: -4.887646675109863
    5. '
' → logprob: -5.637646675109863
    6. '#' → logprob: -5.762646675109863
    7. 'for' → logprob: -6.137646675109863
    8. ' #' → logprob: -6.387646675109863
    9. '        
' → logprob: -6.887646675109863
    10. ' both' → logprob: -7.012646675109863

Token 1503: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8771231770515442
    2. '       ' → logprob: -1.0021231174468994
    3. '        
' → logprob: -1.7521231174468994
    4. ' if' → logprob: -4.3771233558654785
    5. '#' → logprob: -4.7521233558654785
    6. '    
' → logprob: -5.5021233558654785
    7. 'def' → logprob: -5.8771233558654785
    8. ',' → logprob: -6.3771233558654785
    9. ' #' → logprob: -6.3771233558654785
    10. ' for' → logprob: -6.3771233558654785

Token 1504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010028519667685032
    2. '
' → logprob: -5.76002836227417
    3. ' if' → logprob: -5.76002836227417
    4. '        
' → logprob: -5.88502836227417
    5. 'if' → logprob: -8.760028839111328
    6. '```' → logprob: -8.760028839111328
    7. ' for' → logprob: -9.010028839111328
    8. ' 
' → logprob: -9.385028839111328
    9. '[' → logprob: -9.885028839111328
    10. '           ' → logprob: -10.135028839111328

Token 1505: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5183806419372559
    2. ' if' → logprob: -1.5183806419372559
    3. 'if' → logprob: -2.018380641937256
    4. '
' → logprob: -3.268380641937256
    5. '        
' → logprob: -5.643380641937256
    6. '#' (adapté à ' #') → logprob: -5.893380641937256
    7. ' for' → logprob: -6.143380641937256
    8. 'for' → logprob: -6.518380641937256
    9. ' i' → logprob: -7.268380641937256
    10. ' #' → logprob: -7.393380641937256

Token 1506: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8020263910293579
    2. 'if' → logprob: -1.427026391029358
    3. ' if' → logprob: -1.552026391029358
    4. '
' → logprob: -2.8020262718200684
    5. '#' → logprob: -4.427026271820068
    6. 'for' → logprob: -4.802026271820068
    7. ' for' → logprob: -4.927026271820068
    8. 'def' → logprob: -6.052026271820068
    9. ' #' → logprob: -6.052026271820068
    10. ' i' → logprob: -6.552026271820068

Token 1507: ' index' (ID: 3472)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.8647756576538086
    2. 'last' → logprob: -0.8647756576538086
    3. 'self' → logprob: -3.3647756576538086
    4. ' self' → logprob: -3.7397756576538086
    5. 'len' → logprob: -3.7397756576538086
    6. ' not' → logprob: -3.8647756576538086
    7. ' len' → logprob: -4.364775657653809
    8. 'se' → logprob: -4.489775657653809
    9. ' pathname' → logprob: -5.114775657653809
    10. ' seg' → logprob: -5.489775657653809

Token 1508: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.03286125510931015
    2. '.' → logprob: -3.7828612327575684
    3. '_segments' → logprob: -5.907861232757568
    4. '_file' → logprob: -6.157861232757568
    5. 'html' → logprob: -6.532861232757568
    6. 'segments' → logprob: -7.282861232757568
    7. '```' → logprob: -7.657861232757568
    8. '('.' → logprob: -8.157861709594727
    9. '<html' → logprob: -8.282861709594727
    10. '   ' → logprob: -8.907861709594727

Token 1509: ' omission' (ID: 171628)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.4587057828903198
    2. 'if' → logprob: -1.5837057828903198
    3. ' if' → logprob: -1.8337057828903198
    4. '
' → logprob: -2.3337059020996094
    5. ')' → logprob: -3.2087059020996094
    6. '```' → logprob: -3.2087059020996094
    7. ' and' → logprob: -3.8337059020996094
    8. ' or' → logprob: -3.9587059020996094
    9. ' can' → logprob: -4.208705902099609
    10. ' file' → logprob: -4.458705902099609

Token 1510: ' rule' (ID: 10652)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9340817332267761
    2. '       ' → logprob: -1.184081792831421
    3. ' if' → logprob: -1.684081792831421
    4. 'if' → logprob: -2.684081792831421
    5. '        
' → logprob: -3.934081792831421
    6. '#' → logprob: -4.434081554412842
    7. ' for' → logprob: -6.184081554412842
    8. ':' → logprob: -6.559081554412842
    9. 'for' → logprob: -6.559081554412842
    10. '    
' → logprob: -6.684081554412842

Token 1511: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.301237016916275
    2. '       ' → logprob: -1.5512369871139526
    3. ' if' → logprob: -3.676237106323242
    4. '        
' → logprob: -4.301237106323242
    5. 'if' → logprob: -5.676237106323242
    6. '
' → logprob: -6.801237106323242
    7. '#' → logprob: -6.926237106323242
    8. '    
' → logprob: -7.301237106323242
    9. '```' → logprob: -7.676237106323242
    10. ' 
' → logprob: -7.801237106323242

Token 1512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7099447250366211
    2. ' if' → logprob: -0.7099447250366211
    3. '        
' → logprob: -5.709944725036621
    4. '#' → logprob: -6.084944725036621
    5. ' 
' → logprob: -6.334944725036621
    6. 'if' → logprob: -6.334944725036621
    7. '        ' → logprob: -6.584944725036621
    8. ' try' → logprob: -6.709944725036621
    9. '
' → logprob: -7.459944725036621
    10. ' #' → logprob: -7.834944725036621

Token 1513: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7282132506370544
    2. ' if' → logprob: -0.8532132506370544
    3. '
' → logprob: -3.103213310241699
    4. 'if' → logprob: -4.103213310241699
    5. '#' (adapté à ' #') → logprob: -4.978213310241699
    6. '        
' → logprob: -4.978213310241699
    7. ' for' → logprob: -5.353213310241699
    8. ' 
' → logprob: -5.853213310241699
    9. '        ' → logprob: -6.603213310241699
    10. ' #' → logprob: -6.853213310241699

Token 1514: '  ' (ID: 256)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.752671480178833
    2. 'if' → logprob: -0.877671480178833
    3. '       ' → logprob: -2.377671480178833
    4. '#' → logprob: -4.877671241760254
    5. '
' → logprob: -5.627671241760254
    6. ' for' → logprob: -6.252671241760254
    7. ' #' → logprob: -6.252671241760254
    8. 'for' → logprob: -6.377671241760254
    9. 'def' → logprob: -7.627671241760254
    10. 'file' → logprob: -8.002671241760254

Token 1515: ' /' (ID: 820)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.257478266954422
    2. ' if' → logprob: -1.6324782371520996
    3. '       ' → logprob: -4.3824782371521
    4. '#' → logprob: -4.5074782371521
    5. '
' → logprob: -5.2574782371521
    6. 'If' → logprob: -7.5074782371521
    7. ' #' → logprob: -7.5074782371521
    8. '```' → logprob: -8.257478713989258
    9. '        
' → logprob: -8.507478713989258
    10. '"' → logprob: -8.882478713989258

Token 1516: 'dir' (ID: 6457)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.3348592519760132
    2. 'segments' → logprob: -1.3348592519760132
    3. 'se' → logprob: -1.7098592519760132
    4. 's' → logprob: -2.7098593711853027
    5. 'if' → logprob: -3.2098593711853027
    6. ' last' → logprob: -3.3348593711853027
    7. ' if' → logprob: -3.5848593711853027
    8. '
' → logprob: -4.084859371185303
    9. '#' → logprob: -4.334859371185303
    10. 'If' → logprob: -4.459859371185303

Token 1517: '/index' (ID: 17321)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2938041687011719
    2. '_segments' → logprob: -1.4188041687011719
    3. 's' → logprob: -1.5438041687011719
    4. '/' → logprob: -2.168804168701172
    5. 'segments' → logprob: -3.043804168701172
    6. '
' → logprob: -4.293804168701172
    7. ' or' → logprob: -4.668804168701172
    8. '   ' → logprob: -4.668804168701172
    9. ' =' → logprob: -4.793804168701172
    10. ')' → logprob: -4.793804168701172

Token 1518: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.004525062162429094
    2. '.' → logprob: -6.129525184631348
    3. ''.' → logprob: -6.504525184631348
    4. 'html' → logprob: -8.379525184631348
    5. '.py' → logprob: -8.754525184631348
    6. '```' → logprob: -9.879525184631348
    7. '<html' → logprob: -9.879525184631348
    8. '".' → logprob: -10.129525184631348
    9. '<|end|>' → logprob: -10.129525184631348
    10. ').' → logprob: -10.504525184631348

Token 1519: ' equals' (ID: 29702)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.897952675819397
    2. '
' → logprob: -1.522952675819397
    3. ' if' → logprob: -2.0229525566101074
    4. ' =' → logprob: -2.8979525566101074
    5. ':' → logprob: -3.6479525566101074
    6. 'if' → logprob: -3.7729525566101074
    7. '        
' → logprob: -3.8979525566101074
    8. ')' → logprob: -4.022952556610107
    9. '):
' → logprob: -4.772952556610107
    10. '
' → logprob: -4.772952556610107

Token 1520: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.15676239132881165
    2. ''/' → logprob: -3.0317623615264893
    3. '"/' → logprob: -3.1567623615264893
    4. ' /' → logprob: -3.5317623615264893
    5. ''' → logprob: -4.781762599945068
    6. 'dir' → logprob: -5.156762599945068
    7. ' '/' → logprob: -6.031762599945068
    8. '`' → logprob: -6.281762599945068
    9. ' dir' → logprob: -6.406762599945068
    10. '"' → logprob: -6.906762599945068

Token 1521: 'dir' (ID: 6457)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1454472541809082
    2. '/' → logprob: -1.3954472541809082
    3. '
' → logprob: -2.145447254180908
    4. ''' → logprob: -3.020447254180908
    5. '')' → logprob: -3.145447254180908
    6. '       ' → logprob: -3.770447254180908
    7. '<|end|>' → logprob: -3.895447254180908
    8. '<|end|>' → logprob: -4.520447254180908
    9. '```' → logprob: -4.645447254180908
    10. ']' → logprob: -4.770447254180908

Token 1522: '/' (ID: 14)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6362117528915405
    2. '
' → logprob: -0.8862117528915405
    3. ' if' → logprob: -3.51121187210083
    4. '        
' → logprob: -4.13621187210083
    5. 'if' → logprob: -5.26121187210083
    6. '#' → logprob: -6.76121187210083
    7. '    
' → logprob: -7.01121187210083
    8. '
' → logprob: -7.13621187210083
    9. '```' → logprob: -7.26121187210083
    10. '   ' → logprob: -7.51121187210083

Token 1523: ' equals' (ID: 29702)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12429345399141312
    2. '
' → logprob: -2.874293565750122
    3. 'if' → logprob: -3.374293565750122
    4. '        
' → logprob: -4.124293327331543
    5. '#' → logprob: -5.374293327331543
    6. 'for' → logprob: -6.749293327331543
    7. 'def' → logprob: -6.749293327331543
    8. ' if' → logprob: -6.874293327331543
    9. 'i' → logprob: -8.249293327331543
    10. 'is' → logprob: -8.624293327331543

Token 1524: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.16808152198791504
    2. '"/' → logprob: -2.668081521987915
    3. ''/' → logprob: -2.793081521987915
    4. '       ' → logprob: -3.918081521987915
    5. '      ' → logprob: -7.168081283569336
    6. ''' → logprob: -7.668081283569336
    7. '#' → logprob: -7.793081283569336
    8. ' /' → logprob: -7.918081283569336
    9. ' '/' → logprob: -7.918081283569336
    10. '"' → logprob: -7.918081283569336

Token 1525: 'dir' (ID: 6457)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3284395635128021
    2. 'if' → logprob: -1.8284395933151245
    3. '
' → logprob: -2.953439474105835
    4. ' if' → logprob: -2.953439474105835
    5. '        
' → logprob: -5.203439712524414
    6. '#' → logprob: -5.578439712524414
    7. '   ' → logprob: -6.453439712524414
    8. 'for' → logprob: -6.703439712524414
    9. '```' → logprob: -6.953439712524414
    10. ' for' → logprob: -8.078439712524414

Token 1526: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3659018576145172
    2. '
' → logprob: -1.4909018278121948
    3. '        
' → logprob: -2.9909019470214844
    4. ' if' → logprob: -4.365901947021484
    5. 'if' → logprob: -4.865901947021484
    6. '#' → logprob: -4.990901947021484
    7. '    
' → logprob: -7.490901947021484
    8. 'def' → logprob: -7.615901947021484
    9. '  
' → logprob: -7.740901947021484
    10. ' 
' → logprob: -8.240901947021484

Token 1527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29827091097831726
    2. '
' → logprob: -1.5482709407806396
    3. ' if' → logprob: -3.9232709407806396
    4. '        
' → logprob: -4.1732707023620605
    5. ' 
' → logprob: -6.0482707023620605
    6. '```' → logprob: -6.5482707023620605
    7. 'if' → logprob: -6.7982707023620605
    8. '#' → logprob: -7.0482707023620605
    9. '    
' → logprob: -7.1732707023620605
    10. ')' → logprob: -7.4232707023620605

Token 1528: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0679640993475914
    2. 'if' → logprob: -3.8179640769958496
    3. '#' (adapté à ' #') → logprob: -4.31796407699585
    4. 'i' → logprob: -4.56796407699585
    5. 'for' → logprob: -4.94296407699585
    6. 'def' → logprob: -5.44296407699585
    7. ' i' → logprob: -5.94296407699585
    8. '
' → logprob: -6.31796407699585
    9. ' if' → logprob: -6.81796407699585
    10. ' #' → logprob: -7.44296407699585

Token 1529: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3679638206958771
    2. '       ' → logprob: -1.6179637908935547
    3. 'for' → logprob: -3.2429637908935547
    4. 'i' → logprob: -3.4929637908935547
    5. '#' → logprob: -4.117963790893555
    6. 'is' → logprob: -4.367963790893555
    7. 'def' → logprob: -5.367963790893555
    8. ' if' → logprob: -5.992963790893555
    9. ' i' → logprob: -7.492963790893555
    10. 'hyp' → logprob: -7.492963790893555

Token 1530: ' let's' (ID: 35717)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29668745398521423
    2. '#' → logprob: -1.9216874837875366
    3. '       ' → logprob: -2.671687364578247
    4. 'is' → logprob: -4.421687602996826
    5. 'def' → logprob: -4.546687602996826
    6. ' if' → logprob: -4.796687602996826
    7. ' #' → logprob: -6.046687602996826
    8. 'dir' → logprob: -6.171687602996826
    9. 'for' → logprob: -6.421687602996826
    10. 'hyp' → logprob: -6.796687602996826

Token 1531: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0496076345443726
    2. 'if' → logprob: -1.2996076345443726
    3. '#' → logprob: -2.049607753753662
    4. 'def' → logprob: -2.549607753753662
    5. ' if' → logprob: -2.924607753753662
    6. 'try' → logprob: -3.049607753753662
    7. ' #' → logprob: -4.299607753753662
    8. 'continue' → logprob: -4.299607753753662
    9. '
' → logprob: -4.799607753753662
    10. ' try' → logprob: -5.049607753753662

Token 1532: ' resolve' (ID: 14062)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -1.3799911737442017
    2. 'try' → logprob: -1.5049911737442017
    3. 'handle' → logprob: -2.754991054534912
    4. 'det' → logprob: -2.754991054534912
    5. 'normalize' → logprob: -2.754991054534912
    6. 'check' → logprob: -2.879991054534912
    7. 'consider' → logprob: -3.254991054534912
    8. 'def' → logprob: -3.379991054534912
    9. 'pop' → logprob: -3.504991054534912
    10. 'append' → logprob: -3.629991054534912

Token 1533: ' path' (ID: 3104)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5419514179229736
    2. 'for' → logprob: -1.1669514179229736
    3. ' for' → logprob: -3.2919514179229736
    4. ' i' → logprob: -3.5419514179229736
    5. 'stack' → logprob: -3.9169514179229736
    6. 'parent' → logprob: -5.6669511795043945
    7. 'curr' → logprob: -5.9169511795043945
    8. 'path' → logprob: -6.1669511795043945
    9. ' stack' → logprob: -6.2919511795043945
    10. 'current' → logprob: -6.5419511795043945

Token 1534: ' treating' (ID: 39212)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31349489092826843
    2. 'i' → logprob: -1.9384949207305908
    3. ' for' → logprob: -2.813494920730591
    4. '       ' → logprob: -3.188494920730591
    5. ' i' → logprob: -5.188494682312012
    6. 'curr' → logprob: -5.688494682312012
    7. 'result' → logprob: -5.813494682312012
    8. '```' → logprob: -6.188494682312012
    9. 'dir' → logprob: -6.688494682312012
    10. 'stack' → logprob: -7.063494682312012

Token 1535: ' last' (ID: 2174)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.6319686770439148
    2. 'last' → logprob: -1.6319687366485596
    3. ' last' → logprob: -2.7569687366485596
    4. ' all' → logprob: -2.8819687366485596
    5. ''' → logprob: -3.1319687366485596
    6. ' the' → logprob: -3.5069687366485596
    7. ' seg' → logprob: -4.0069684982299805
    8. 'the' → logprob: -4.2569684982299805
    9. 'segments' → logprob: -4.2569684982299805
    10. 'all' → logprob: -4.3819684982299805

Token 1536: ' segment' (ID: 14806)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.9041159749031067
    2. '_' → logprob: -2.029115915298462
    3. ' segment' → logprob: -2.404115915298462
    4. 'seg' → logprob: -2.654115915298462
    5. '_segment' → logprob: -2.654115915298462
    6. ' seg' → logprob: -3.154115915298462
    7. 'segment' → logprob: -3.529115915298462
    8. '`' → logprob: -3.654115915298462
    9. ' Seg' → logprob: -4.279116153717041
    10. ' ' → logprob: -4.529116153717041

Token 1537: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.6465925574302673
    2. 'as' → logprob: -0.7715925574302673
    3. '[:-' → logprob: -5.146592617034912
    4. 's' → logprob: -6.021592617034912
    5. 'except' → logprob: -6.771592617034912
    6. ' =' → logprob: -7.396592617034912
    7. '=' → logprob: -7.396592617034912
    8. 'like' → logprob: -7.771592617034912
    9. 'for' → logprob: -8.021592140197754
    10. '```' → logprob: -8.146592140197754

Token 1538: ' file' (ID: 1974)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.11029930412769318
    2. 'file' → logprob: -2.6102993488311768
    3. 'a' → logprob: -3.6102993488311768
    4. ' directory' → logprob: -5.860299110412598
    5. 'part' → logprob: -8.110299110412598
    6. 'filename' → logprob: -8.735299110412598
    7. ' file' → logprob: -8.735299110412598
    8. 'dir' → logprob: -8.860299110412598
    9. 'directories' → logprob: -8.985299110412598
    10. ' a' → logprob: -9.360299110412598

Token 1539: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7206117510795593
    2. '       ' → logprob: -1.095611810684204
    3. ' for' → logprob: -2.220611810684204
    4. 'if' → logprob: -4.470611572265625
    5. '#' → logprob: -4.595611572265625
    6. 'dir' → logprob: -4.720611572265625
    7. ',' → logprob: -4.970611572265625
    8. '```' → logprob: -5.470611572265625
    9. ' if' → logprob: -5.720611572265625
    10. '
' → logprob: -5.845611572265625

Token 1540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.665525496006012
    2. 'for' → logprob: -1.4155254364013672
    3. 'dir' → logprob: -2.665525436401367
    4. 'curr' → logprob: -3.165525436401367
    5. 'path' → logprob: -3.540525436401367
    6. 'file' → logprob: -3.790525436401367
    7. ' for' → logprob: -3.790525436401367
    8. 'if' → logprob: -4.165525436401367
    9. ' dir' → logprob: -4.790525436401367
    10. '#' → logprob: -4.915525436401367

Token 1541: ' parent' (ID: 5980)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36418411135673523
    2. 'path' → logprob: -2.4891841411590576
    3. 'stack' → logprob: -2.6141841411590576
    4. 'file' → logprob: -2.9891841411590576
    5. 'for' → logprob: -3.7391841411590576
    6. 'curr' → logprob: -4.1141839027404785
    7. '#' → logprob: -4.4891839027404785
    8. 'if' → logprob: -4.4891839027404785
    9. ' path' → logprob: -5.1141839027404785
    10. 'i' → logprob: -5.3641839027404785

Token 1542: '_dirs' (ID: 117442)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.010929559357464314
    2. '_segments' → logprob: -5.385929584503174
    3. '_dirs' → logprob: -6.135929584503174
    4. '_paths' → logprob: -6.885929584503174
    5. ' =' → logprob: -7.010929584503174
    6. 'path' → logprob: -7.385929584503174
    7. '_dir' → logprob: -7.510929584503174
    8. '_stack' → logprob: -7.635929584503174
    9. '_se' → logprob: -9.010929107666016
    10. 'Path' → logprob: -9.135929107666016

Token 1543: '_h' (ID: 3434)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326193809509277
    2. ' =' → logprob: -0.7576193809509277
    3. '       ' → logprob: -12.257619857788086
    4. '   ' → logprob: -12.507619857788086
    5. ',' → logprob: -12.882619857788086
    6. '=[]' → logprob: -13.132619857788086
    7. ':' → logprob: -13.632619857788086
    8. ' ' → logprob: -13.757619857788086
    9. '    ' → logprob: -14.007619857788086
    10. '=[' → logprob: -14.632619857788086

Token 1544: '1' (ID: 16)
  Prédit: 'yp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.5722463726997375
    2. ' =' → logprob: -1.4472463130950928
    3. '       ' → logprob: -2.1972463130950928
    4. '   ' → logprob: -3.3222463130950928
    5. '=' → logprob: -4.572246551513672
    6. 'old' → logprob: -5.447246551513672
    7. 'y' → logprob: -5.572246551513672
    8. '[' → logprob: -5.572246551513672
    9. '=[]' → logprob: -5.572246551513672
    10. 'ave' → logprob: -5.822246551513672

Token 1545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04301438108086586
    2. '=' → logprob: -3.1680142879486084
    3. '=[]' → logprob: -12.543014526367188
    4. ':' → logprob: -13.043014526367188
    5. ',' → logprob: -13.043014526367188
    6. 's' → logprob: -14.043014526367188
    7. '=[]
' → logprob: -14.168014526367188
    8. ' ' → logprob: -14.168014526367188
    9. ')' → logprob: -14.293014526367188
    10. '    ' → logprob: -14.418014526367188

Token 1546: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.00731317326426506
    2. 'stack' → logprob: -5.382313251495361
    3. 'seg' → logprob: -6.382313251495361
    4. ' seg' → logprob: -7.007313251495361
    5. ' stack' → logprob: -10.007312774658203
    6. 'st' → logprob: -11.757312774658203
    7. '   ' → logprob: -11.757312774658203
    8. 'segments' → logprob: -11.882312774658203
    9. 's' → logprob: -12.132312774658203
    10. 'list' → logprob: -13.132312774658203

Token 1547: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00012296605564188212
    2. '[:-' → logprob: -9.500123023986816
    3. '[' → logprob: -10.500123023986816
    4. 'se' → logprob: -11.500123023986816
    5. 'seg' → logprob: -12.625123023986816
    6. '[s' → logprob: -13.500123023986816
    7. '[:' → logprob: -13.875123023986816
    8. '[-' → logprob: -14.125123023986816
    9. 'ms' → logprob: -14.125123023986816
    10. '```' → logprob: -14.250123023986816

Token 1548: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -3.128163257315464e-07
    2. '[:' → logprob: -16.125
    3. '[' → logprob: -16.25
    4. '   ' → logprob: -19.625
    5. 's' → logprob: -20.375
    6. '0' → logprob: -20.375
    7. '1' → logprob: -20.875
    8. ':-' → logprob: -21.125
    9. '```' → logprob: -21.125
    10. '[:]' → logprob: -21.625

Token 1549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '-' → logprob: -14.750000953674316
    3. ' ' → logprob: -16.125
    4. '   ' → logprob: -17.375
    5. ']' → logprob: -18.5
    6. '])' → logprob: -19.25
    7. '       ' → logprob: -19.375
    8. '...' → logprob: -19.375
    9. '0' → logprob: -19.5
    10. '```' → logprob: -19.875

Token 1550: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015798516105860472
    2. ']
' → logprob: -7.126579761505127
    3. ' ]' → logprob: -8.376580238342285
    4. '.copy' → logprob: -8.501580238342285
    5. '[:]' → logprob: -8.876580238342285
    6. ')' → logprob: -9.501580238342285
    7. '       ' → logprob: -9.626580238342285
    8. '[:' → logprob: -11.376580238342285
    9. ']

' → logprob: -11.876580238342285
    10. '<|end|>' → logprob: -12.126580238342285

Token 1551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.509627103805542
    2. '
' → logprob: -1.009627103805542
    3. 'curr' → logprob: -4.634627342224121
    4. '        
' → logprob: -5.009627342224121
    5. ')' → logprob: -5.509627342224121
    6. ' if' → logprob: -5.509627342224121
    7. ' curr' → logprob: -6.509627342224121
    8. '```' → logprob: -6.509627342224121
    9. ')
' → logprob: -6.634627342224121
    10. 'if' → logprob: -6.884627342224121

Token 1552: ' possible' (ID: 4149)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6287317276000977
    2. 'filename' → logprob: -1.0037317276000977
    3. 'file' → logprob: -2.7537317276000977
    4. 'parent' → logprob: -3.8787317276000977
    5. '       ' → logprob: -5.003731727600098
    6. 'last' → logprob: -5.378731727600098
    7. '#' → logprob: -6.253731727600098
    8. 'curr' → logprob: -6.378731727600098
    9. 'fname' → logprob: -7.753731727600098
    10. '```' → logprob: -10.003731727600098

Token 1553: '_file' (ID: 5933)
  Prédit: '_file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -0.1965550035238266
    2. '_paths' → logprob: -2.5715548992156982
    3. '_filename' → logprob: -3.4465548992156982
    4. '_files' → logprob: -3.4465548992156982
    5. '_path' → logprob: -4.196555137634277
    6. 'file' → logprob: -4.946555137634277
    7. '_f' → logprob: -5.446555137634277
    8. '_dirs' → logprob: -5.571555137634277
    9. '_filepath' → logprob: -6.196555137634277
    10. '_dir' → logprob: -6.696555137634277

Token 1554: ' =' (ID: 314)
  Prédit: '_name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.8667360544204712
    2. 'name' → logprob: -1.2417360544204712
    3. ' =' → logprob: -1.4917360544204712
    4. '=' → logprob: -2.8667359352111816
    5. 's' → logprob: -4.866735935211182
    6. 'nam' → logprob: -8.11673641204834
    7. 'names' → logprob: -8.61673641204834
    8. '_names' → logprob: -8.74173641204834
    9. 'Name' → logprob: -8.86673641204834
    10. 'filename' → logprob: -9.86673641204834

Token 1555: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.03674200922250748
    2. 'se' → logprob: -3.4117419719696045
    3. ' last' → logprob: -5.786742210388184
    4. 'seg' → logprob: -11.661742210388184
    5. '   ' → logprob: -11.911742210388184
    6. '       ' → logprob: -13.661742210388184
    7. 'segments' → logprob: -13.661742210388184
    8. ' seg' → logprob: -14.411742210388184
    9. '	last' → logprob: -14.536742210388184
    10. ' ' → logprob: -14.536742210388184

Token 1556: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.003445403417572379
    2. 'seg' → logprob: -5.878445625305176
    3. 'Seg' → logprob: -8.003445625305176
    4. '```' → logprob: -9.378445625305176
    5. '_segment' → logprob: -9.753445625305176
    6. ')' → logprob: -10.253445625305176
    7. '_' → logprob: -10.753445625305176
    8. ''s' → logprob: -11.253445625305176
    9. '`' → logprob: -11.503445625305176
    10. '_token' → logprob: -11.753445625305176

Token 1557: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21017012000083923
    2. '
' → logprob: -1.9601701498031616
    3. '        
' → logprob: -4.460170269012451
    4. ')' → logprob: -4.710170269012451
    5. '<|end|>' → logprob: -4.710170269012451
    6. '   ' → logprob: -5.835170269012451
    7. '        ' → logprob: -5.960170269012451
    8. '    
' → logprob: -6.210170269012451
    9. 'if' → logprob: -6.210170269012451
    10. '    ' → logprob: -6.460170269012451

Token 1558: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.336599200963974
    2. '       ' → logprob: -1.3365992307662964
    3. ' if' → logprob: -4.211599349975586
    4. '#' → logprob: -5.711599349975586
    5. '
' → logprob: -6.586599349975586
    6. 'curr' → logprob: -6.961599349975586
    7. 'parent' → logprob: -7.336599349975586
    8. '        
' → logprob: -7.461599349975586
    9. 'for' → logprob: -7.586599349975586
    10. 'file' → logprob: -7.836599349975586

Token 1559: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.039477720856666565
    2. '#' (adapté à ' #') → logprob: -3.789477825164795
    3. 'curr' → logprob: -4.914477825164795
    4. 'for' → logprob: -5.164477825164795
    5. '       ' → logprob: -6.664477825164795
    6. 'parent' → logprob: -6.789477825164795
    7. 'def' → logprob: -8.289477348327637
    8. 'dir' → logprob: -9.539477348327637
    9. 'stack' → logprob: -9.789477348327637
    10. '   ' → logprob: -10.039477348327637

Token 1560: ' resolve' (ID: 14062)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01782960630953312
    2. '#' → logprob: -4.892829418182373
    3. '       ' → logprob: -5.642829418182373
    4. 'curr' → logprob: -5.642829418182373
    5. 'for' → logprob: -6.142829418182373
    6. 'parent' → logprob: -8.017829895019531
    7. 'def' → logprob: -8.892829895019531
    8. ' if' → logprob: -8.892829895019531
    9. 'dir' → logprob: -10.017829895019531
    10. '```' → logprob: -10.142829895019531

Token 1561: ' parent' (ID: 5980)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.7008357644081116
    2. 'for' → logprob: -1.7008357048034668
    3. 'parent' → logprob: -2.075835704803467
    4. 'def' → logprob: -3.825835704803467
    5. 'resolved' → logprob: -3.825835704803467
    6. ' stack' → logprob: -4.075835704803467
    7. 'curr' → logprob: -4.200835704803467
    8. 'canonical' → logprob: -4.450835704803467
    9. 'i' → logprob: -4.575835704803467
    10. 'res' → logprob: -4.700835704803467

Token 1562: '_dirs' (ID: 117442)
  Prédit: '_dirs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dirs' → logprob: -0.015642361715435982
    2. 'dirs' → logprob: -4.890642166137695
    3. 'for' → logprob: -5.515642166137695
    4. '_segments' → logprob: -7.015642166137695
    5. ' =' → logprob: -7.140642166137695
    6. '_dir' → logprob: -7.390642166137695
    7. '_paths' → logprob: -8.765642166137695
    8. '       ' → logprob: -8.890642166137695
    9. 'dir' → logprob: -9.140642166137695
    10. '_h' → logprob: -9.140642166137695

Token 1563: '_h' (ID: 3434)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2509422302246094
    2. '=' → logprob: -2.2509422302246094
    3. 'stack' → logprob: -2.7509422302246094
    4. '_stack' → logprob: -3.2509422302246094
    5. ':' → logprob: -5.000942230224609
    6. '=[]' → logprob: -5.625942230224609
    7. 'dirs' → logprob: -7.250942230224609
    8. '=[]
' → logprob: -7.375942230224609
    9. 'for' → logprob: -7.375942230224609
    10. '_path' → logprob: -7.875942230224609

Token 1564: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018245273968204856
    2. '```' → logprob: -7.501824378967285
    3. 'yp' → logprob: -8.126824378967285
    4. ' =' → logprob: -8.376824378967285
    5. '[]
' → logprob: -8.626824378967285
    6. '   ' → logprob: -9.251824378967285
    7. '[]' → logprob: -9.501824378967285
    8. '_' → logprob: -9.751824378967285
    9. '=[]
' → logprob: -10.251824378967285
    10. '       ' → logprob: -10.376824378967285

Token 1565: ' with' (ID: 483)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.7889528870582581
    2. '_stack' → logprob: -0.7889528870582581
    3. ' =' → logprob: -2.6639528274536133
    4. 'for' → logprob: -5.038952827453613
    5. '_res' → logprob: -5.413952827453613
    6. '=' → logprob: -6.163952827453613
    7. '_path' → logprob: -6.413952827453613
    8. 'curr' → logprob: -7.038952827453613
    9. 'res' → logprob: -7.163952827453613
    10. 'resolved' → logprob: -7.413952827453613

Token 1566: ' '.',' (ID: 110580)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2040194272994995
    2. 'stack' → logprob: -1.9540194272994995
    3. '[])' → logprob: -3.829019546508789
    4. 'self' → logprob: -4.204019546508789
    5. '[]
' → logprob: -6.454019546508789
    6. 'parent' → logprob: -6.579019546508789
    7. '[' → logprob: -7.579019546508789
    8. '[])
' → logprob: -8.204019546508789
    9. ')' → logprob: -8.579019546508789
    10. ' []' → logprob: -8.579019546508789

Token 1567: ' '..' (ID: 107414)
  Prédit: ' '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '..' → logprob: -1.2392574548721313
    2. ''' → logprob: -1.3642574548721313
    3. '..' → logprob: -1.7392574548721313
    4. 'parent' → logprob: -3.114257335662842
    5. 'None' → logprob: -3.364257335662842
    6. ')' → logprob: -3.489257335662842
    7. ' and' → logprob: -3.989257335662842
    8. '')' → logprob: -3.989257335662842
    9. ' '',' → logprob: -4.239257335662842
    10. '[],' → logprob: -4.864257335662842

Token 1568: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.690430760383606
    2. ',' → logprob: -1.815430760383606
    3. 'and' → logprob: -1.940430760383606
    4. ')' → logprob: -2.4404306411743164
    5. '):' → logprob: -2.9404306411743164
    6. ':' → logprob: -4.940430641174316
    7. '):
' → logprob: -5.065430641174316
    8. '')' → logprob: -5.190430641174316
    9. '       ' → logprob: -5.940430641174316
    10. '=' → logprob: -5.940430641174316

Token 1569: ' treated' (ID: 18669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8390347361564636
    2. 'resolved' → logprob: -0.8390347361564636
    3. '       ' → logprob: -2.5890347957611084
    4. 'final' → logprob: -3.7140347957611084
    5. 'normalized' → logprob: -4.589034557342529
    6. 'res' → logprob: -5.464034557342529
    7. 'stack' → logprob: -5.464034557342529
    8. 'new' → logprob: -5.714034557342529
    9. 'canonical' → logprob: -5.839034557342529
    10. 'real' → logprob: -6.214034557342529

Token 1570: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.046835508197546005
    2. ' as' → logprob: -3.671835422515869
    3. '=' → logprob: -4.421835422515869
    4. 'in' → logprob: -6.671835422515869
    5. 'proper' → logprob: -6.671835422515869
    6. 'normally' → logprob: -6.796835422515869
    7. 'for' → logprob: -7.046835422515869
    8. ' =' → logprob: -7.296835422515869
    9. 'like' → logprob: -7.921835422515869
    10. 'correct' → logprob: -8.171835899353027

Token 1571: ' directory' (ID: 12552)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.17755834758281708
    2. 'directory' → logprob: -1.9275583028793335
    3. 'directories' → logprob: -4.802558422088623
    4. 'dir' → logprob: -5.677558422088623
    5. 'literal' → logprob: -6.302558422088623
    6. 'segment' → logprob: -7.677558422088623
    7. 'dirs' → logprob: -7.927558422088623
    8. 'norm' → logprob: -7.927558422088623
    9. 'ordinary' → logprob: -8.052557945251465
    10. 'folder' → logprob: -8.052557945251465

Token 1572: ' names' (ID: 8747)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4971899688243866
    2. 'dirs' → logprob: -2.247189998626709
    3. 'stack' → logprob: -2.497189998626709
    4. 'resolved' → logprob: -2.497189998626709
    5. '       ' → logprob: -2.747189998626709
    6. ' for' → logprob: -4.747189998626709
    7. '   ' → logprob: -4.872189998626709
    8. 'i' → logprob: -4.872189998626709
    9. 'segments' → logprob: -4.872189998626709
    10. 'parts' → logprob: -5.372189998626709

Token 1573: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20182329416275024
    2. 'resolved' → logprob: -2.0768232345581055
    3. '       ' → logprob: -3.2018232345581055
    4. 'stack' → logprob: -5.2018232345581055
    5. 'final' → logprob: -5.3268232345581055
    6. 'normalized' → logprob: -6.0768232345581055
    7. ' for' → logprob: -7.0768232345581055
    8. 'real' → logprob: -7.5768232345581055
    9. 'new' → logprob: -7.5768232345581055
    10. 'valid' → logprob: -7.9518232345581055

Token 1574: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6286323070526123
    2. 'resolved' → logprob: -1.1286323070526123
    3. '       ' → logprob: -2.3786323070526123
    4. 'final' → logprob: -3.8786323070526123
    5. 'normalized' → logprob: -4.128632545471191
    6. 'stack' → logprob: -4.753632545471191
    7. 'canonical' → logprob: -6.003632545471191
    8. 'real' → logprob: -7.753632545471191
    9. 'clean' → logprob: -7.878632545471191
    10. ' for' → logprob: -8.128632545471191

Token 1575: ' canonical' (ID: 91323)
  Prédit: 'resolved'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resolved' → logprob: -0.291017085313797
    2. 'for' → logprob: -1.6660170555114746
    3. 'canonical' (adapté à ' canonical') → logprob: -4.041017055511475
    4. 'stack' → logprob: -4.166017055511475
    5. 'normalized' → logprob: -4.291017055511475
    6. 'real' → logprob: -5.166017055511475
    7. 'final' → logprob: -5.666017055511475
    8. 'new' → logprob: -6.041017055511475
    9. '       ' → logprob: -7.291017055511475
    10. 'dir' → logprob: -7.291017055511475

Token 1576: '_parent' (ID: 39570)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.7847695350646973
    2. '_stack' → logprob: -1.0347695350646973
    3. '_dirs' → logprob: -2.2847695350646973
    4. ' =' → logprob: -3.1597695350646973
    5. '_parent' → logprob: -3.6597695350646973
    6. '_paths' → logprob: -4.784769535064697
    7. '_segments' → logprob: -5.284769535064697
    8. '_parts' → logprob: -6.784769535064697
    9. '_dir' → logprob: -6.784769535064697
    10. 'path' → logprob: -7.409769535064697

Token 1577: '1' (ID: 16)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_stack' → logprob: -1.069411039352417
    2. '_path' → logprob: -1.694411039352417
    3. ' =' → logprob: -1.819411039352417
    4. '_dirs' → logprob: -1.819411039352417
    5. '_segments' → logprob: -2.444411039352417
    6. '_' → logprob: -3.569411039352417
    7. '_paths' → logprob: -3.944411039352417
    8. '=' → logprob: -5.694411277770996
    9. '_h' → logprob: -6.194411277770996
    10. '_parts' → logprob: -6.194411277770996

Token 1578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054343871772289276
    2. '=' → logprob: -3.5543439388275146
    3. '_stack' → logprob: -3.9293439388275146
    4. '=[]' → logprob: -6.5543437004089355
    5. '_segments' → logprob: -6.5543437004089355
    6. ':' → logprob: -7.9293437004089355
    7. 'stack' → logprob: -7.9293437004089355
    8. '=[]
' → logprob: -8.304344177246094
    9. '_' → logprob: -8.304344177246094
    10. '_path' → logprob: -8.804344177246094

Token 1579: ' self' (ID: 1051)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.14036963880062103
    2. '[]' → logprob: -2.1403696537017822
    3. '[]

' → logprob: -4.390369415283203
    4. '[parent' → logprob: -8.015369415283203
    5. 'self' → logprob: -8.390369415283203
    6. '[' → logprob: -8.515369415283203
    7. '[self' → logprob: -8.765369415283203
    8. 'parent' → logprob: -11.140369415283203
    9. '[
' → logprob: -12.390369415283203
    10. '[pos' → logprob: -13.140369415283203

Token 1580: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.02006341516971588
    2. '.resolve' → logprob: -4.270063400268555
    3. '.normalize' → logprob: -5.645063400268555
    4. 'normalize' → logprob: -7.770063400268555
    5. 'resolve' → logprob: -7.770063400268555
    6. '_normal' → logprob: -7.770063400268555
    7. '.__' → logprob: -8.145063400268555
    8. '.fs' → logprob: -8.770063400268555
    9. '_path' → logprob: -9.020063400268555
    10. '_res' → logprob: -10.020063400268555

Token 1581: 'resolve' (ID: 31567)
  Prédit: 'resolve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resolve' → logprob: -0.005780661478638649
    2. 'normalize' → logprob: -6.1307806968688965
    3. 'simpl' → logprob: -6.5057806968688965
    4. 'canonical' → logprob: -7.0057806968688965
    5. 'clean' → logprob: -7.3807806968688965
    6. 'collapse' → logprob: -9.130780220031738
    7. 'process' → logprob: -9.255780220031738
    8. 'sanitize' → logprob: -9.255780220031738
    9. '_clean' → logprob: -10.380780220031738
    10. '_res' → logprob: -10.755780220031738

Token 1582: '_dirs' (ID: 117442)
  Prédit: '(parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.8295533657073975
    2. '_path' → logprob: -1.2045533657073975
    3. 'parent' → logprob: -2.5795533657073975
    4. '_segments' → logprob: -2.7045533657073975
    5. 'path' → logprob: -2.8295533657073975
    6. 'segments' → logprob: -3.4545533657073975
    7. '_paths' → logprob: -4.329553604125977
    8. '_dirs' → logprob: -5.079553604125977
    9. '_parent' → logprob: -5.579553604125977
    10. '_stack' → logprob: -6.579553604125977

Token 1583: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.00010163593105971813
    2. 'parent' → logprob: -9.250102043151855
    3. '(' → logprob: -12.750102043151855
    4. ' (' → logprob: -13.750102043151855
    5. '[parent' → logprob: -15.000102043151855
    6. ',parent' → logprob: -15.625102043151855
    7. '       ' → logprob: -15.750102043151855
    8. ' parent' → logprob: -16.25010108947754
    9. '(pos' → logprob: -16.25010108947754
    10. '(paren' → logprob: -16.25010108947754

Token 1584: '_dirs' (ID: 117442)
  Prédit: '_dirs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dirs' → logprob: -0.003018472343683243
    2. 'dirs' → logprob: -6.253018379211426
    3. '_segments' → logprob: -8.128018379211426
    4. 'Dirs' → logprob: -8.878018379211426
    5. '       ' → logprob: -9.003018379211426
    6. 'h' → logprob: -9.003018379211426
    7. ')' → logprob: -9.253018379211426
    8. '```' → logprob: -10.378018379211426
    9. 'parent' → logprob: -10.503018379211426
    10. '           ' → logprob: -10.628018379211426

Token 1585: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00020818933262489736
    2. 'h' → logprob: -8.750207901000977
    3. ')' → logprob: -11.375207901000977
    4. '```' → logprob: -11.500207901000977
    5. ')_' → logprob: -11.750207901000977
    6. '       ' → logprob: -12.750207901000977
    7. '   ' → logprob: -12.875207901000977
    8. '
' → logprob: -13.000207901000977
    9. '_' → logprob: -13.375207901000977
    10. '1' → logprob: -13.500207901000977

Token 1586: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016909420082811266
    2. '   ' → logprob: -9.250168800354004
    3. '```' → logprob: -10.625168800354004
    4. '       ' → logprob: -11.500168800354004
    5. 'list' → logprob: -12.250168800354004
    6. 's' → logprob: -12.250168800354004
    7. '           ' → logprob: -13.000168800354004
    8. 'h' → logprob: -13.000168800354004
    9. 'ist' → logprob: -13.000168800354004
    10. '_' → logprob: -13.125168800354004

Token 1587: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08009044080972672
    2. ')
' → logprob: -2.5800905227661133
    3. ',' → logprob: -7.080090522766113
    4. '       ' → logprob: -8.580090522766113
    5. ')

' → logprob: -9.080090522766113
    6. ' )' → logprob: -11.080090522766113
    7. '   ' → logprob: -11.205090522766113
    8. ')`
' → logprob: -11.705090522766113
    9. ')`' → logprob: -12.080090522766113
    10. ' )
' → logprob: -12.705090522766113

Token 1588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09199551492929459
    2. '
' → logprob: -3.2169954776763916
    3. ' if' → logprob: -3.3419954776763916
    4. '        
' → logprob: -5.591995716094971
    5. 'if' → logprob: -5.716995716094971
    6. '```' → logprob: -6.966995716094971
    7. ')' → logprob: -7.466995716094971
    8. '[' → logprob: -7.591995716094971
    9. '   ' → logprob: -7.716995716094971
    10. ')
' → logprob: -7.841995716094971

Token 1589: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8578373789787292
    2. 'if' (adapté à ' if') → logprob: -1.357837438583374
    3. '       ' → logprob: -1.482837438583374
    4. '
' → logprob: -2.482837438583374
    5. '        
' → logprob: -5.607837200164795
    6. ' 
' → logprob: -7.732837200164795
    7. '```' → logprob: -7.732837200164795
    8. ')' → logprob: -7.732837200164795
    9. ')
' → logprob: -7.857837200164795
    10. ':
' → logprob: -8.357837677001953

Token 1590: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.03370252996683121
    2. ' canonical' → logprob: -3.4087026119232178
    3. '   ' → logprob: -10.283702850341797
    4. '       ' → logprob: -11.158702850341797
    5. 'can' → logprob: -13.408702850341797
    6. '           ' → logprob: -13.533702850341797
    7. 'canon' → logprob: -13.658702850341797
    8. '        ' → logprob: -14.033702850341797
    9. ' ' → logprob: -14.408702850341797
    10. '    ' → logprob: -14.408702850341797

Token 1591: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -4.4418171455617994e-05
    2. 'parent' → logprob: -10.375044822692871
    3. 'Parent' → logprob: -12.125044822692871
    4. '_' → logprob: -13.125044822692871
    5. '
' → logprob: -13.500044822692871
    6. '1' → logprob: -13.875044822692871
    7. '_par' → logprob: -14.750044822692871
    8. '_p' → logprob: -14.875044822692871
    9. '```' → logprob: -14.875044822692871
    10. '_
' → logprob: -15.000044822692871

Token 1592: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008887103176675737
    2. ' is' → logprob: -7.125888824462891
    3. 'is' → logprob: -10.12588882446289
    4. ':' → logprob: -10.87588882446289
    5. 's' → logprob: -12.12588882446289
    6. ' ' → logprob: -12.87588882446289
    7. '
' → logprob: -12.87588882446289
    8. '   ' → logprob: -13.00088882446289
    9. ':
' → logprob: -13.00088882446289
    10. '```' → logprob: -13.37588882446289

Token 1593: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07889628410339355
    2. 'is' → logprob: -2.5788962841033936
    3. ' ' → logprob: -12.828896522521973
    4. ')' → logprob: -13.703896522521973
    5. '[' → logprob: -13.703896522521973
    6. ')is' → logprob: -15.203896522521973
    7. '   ' → logprob: -15.453896522521973
    8. '    ' → logprob: -15.828896522521973
    9. ':' → logprob: -16.078895568847656
    10. '!=' → logprob: -16.203895568847656

Token 1594: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0031905474606901407
    2. ' None' → logprob: -6.003190517425537
    3. 'not' → logprob: -7.253190517425537
    4. ' not' → logprob: -12.753190994262695
    5. 'False' → logprob: -13.253190994262695
    6. '   ' → logprob: -13.503190994262695
    7. 'Not' → logprob: -15.253190994262695
    8. ' ' → logprob: -16.128190994262695
    9. '  ' → logprob: -16.378190994262695
    10. 'N' → logprob: -16.503190994262695

Token 1595: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018018240109086037
    2. ':
' → logprob: -4.6430182456970215
    3. '           ' → logprob: -5.0180182456970215
    4. ' or' → logprob: -7.0180182456970215
    5. ':return' → logprob: -8.018017768859863
    6. ' and' → logprob: -8.518017768859863
    7. '):' → logprob: -10.018017768859863
    8. '       ' → logprob: -10.143017768859863
    9. '               ' → logprob: -10.768017768859863
    10. '          ' → logprob: -10.893017768859863

Token 1596: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014976027887314558
    2. ' return' → logprob: -7.501497745513916
    3. ' None' → logprob: -7.751497745513916
    4. 'return' → logprob: -8.376497268676758
    5. '   ' → logprob: -9.376497268676758
    6. 'None' → logprob: -10.001497268676758
    7. '       ' → logprob: -10.001497268676758
    8. '               ' → logprob: -10.376497268676758
    9. ':
' → logprob: -10.751497268676758
    10. ' ' → logprob: -11.501497268676758

Token 1597: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42877697944641113
    2. 'return' → logprob: -1.1787769794464111
    3. ' return' → logprob: -3.803776979446411
    4. 'None' → logprob: -4.303776741027832
    5. ' None' → logprob: -5.303776741027832
    6. '               ' → logprob: -9.428776741027832
    7. '   ' → logprob: -9.803776741027832
    8. '       ' → logprob: -9.928776741027832
    9. ' ' → logprob: -10.678776741027832
    10. '(None' → logprob: -11.678776741027832

Token 1598: ' parent' (ID: 5980)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.047495849430561066
    2. ' return' → logprob: -3.2974958419799805
    3. '           ' → logprob: -4.6724958419799805
    4. 'None' → logprob: -10.42249584197998
    5. ' None' → logprob: -11.29749584197998
    6. '   ' → logprob: -12.29749584197998
    7. '       ' → logprob: -12.54749584197998
    8. '               ' → logprob: -12.54749584197998
    9. ' ' → logprob: -12.79749584197998
    10. '```' → logprob: -13.17249584197998

Token 1599: ' directory' (ID: 12552)
  Prédit: '_dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dirs' → logprob: -0.05731594190001488
    2. '1' → logprob: -3.8073158264160156
    3. 'dirs' → logprob: -4.057315826416016
    4. ')' → logprob: -5.307315826416016
    5. 'Dirs' → logprob: -6.307315826416016
    6. '_segments' → logprob: -6.307315826416016
    7. '```' → logprob: -6.432315826416016
    8. 's' → logprob: -6.807315826416016
    9. '       ' → logprob: -7.182315826416016
    10. '
' → logprob: -7.682315826416016

Token 1600: ' does' (ID: 2226)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5195879936218262
    2. ':
' → logprob: -1.6445879936218262
    3. '       ' → logprob: -1.8945879936218262
    4. '           ' → logprob: -2.269587993621826
    5. ' is' → logprob: -2.394587993621826
    6. ' =' → logprob: -2.519587993621826
    7. '.append' → logprob: -3.144587993621826
    8. ')' → logprob: -3.769587993621826
    9. '=' → logprob: -4.269587993621826
    10. '
' → logprob: -4.894587993621826

Token 1601: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31415247917175293
    2. 'not' → logprob: -1.314152479171753
    3. 'n't' → logprob: -7.439152717590332
    4. 'n' → logprob: -9.064152717590332
    5. '```' → logprob: -9.939152717590332
    6. ')' → logprob: -10.939152717590332
    7. '_not' → logprob: -11.189152717590332
    8. 'nt' → logprob: -11.189152717590332
    9. '_' → logprob: -11.314152717590332
    10. ' continue' → logprob: -11.439152717590332

Token 1602: ' exist' (ID: 4310)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.9252945780754089
    2. ')' → logprob: -1.3002946376800537
    3. ' exist' → logprob: -2.0502946376800537
    4. 'is' → logprob: -2.9252946376800537
    5. 'continue' → logprob: -3.0502946376800537
    6. '_exist' → logprob: -3.4252946376800537
    7. 'return' → logprob: -4.175294399261475
    8. ' is' → logprob: -4.300294399261475
    9. '):
' → logprob: -4.550294399261475
    10. '```' → logprob: -5.300294399261475

Token 1603: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09453748911619186
    2. '           ' → logprob: -2.5945374965667725
    3. ':' → logprob: -5.094537258148193
    4. ':
' → logprob: -5.469537258148193
    5. '\n' → logprob: -6.844537258148193
    6. '
' → logprob: -7.219537258148193
    7. '               ' → logprob: -7.469537258148193
    8. '        
' → logprob: -7.594537258148193
    9. ' return' → logprob: -7.844537258148193
    10. 'return' → logprob: -7.844537258148193

Token 1604: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039230503141880035
    2. '       ' → logprob: -3.2892305850982666
    3. '               ' → logprob: -7.9142303466796875
    4. '\n' → logprob: -8.414230346679688
    5. 'return' → logprob: -8.789230346679688
    6. '
' → logprob: -9.539230346679688
    7. '        
' → logprob: -9.664230346679688
    8. ' return' → logprob: -9.914230346679688
    9. ':
' → logprob: -10.289230346679688
    10. '		' → logprob: -10.414230346679688

Token 1605: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3594721555709839
    2. '           ' → logprob: -1.3594721555709839
    3. 'return' → logprob: -3.1094722747802734
    4. ' None' → logprob: -8.484472274780273
    5. '   ' → logprob: -9.609472274780273
    6. '
' → logprob: -9.609472274780273
    7. ' ' → logprob: -10.234472274780273
    8. '               ' → logprob: -10.484472274780273
    9. '       ' → logprob: -10.734472274780273
    10. 'None' → logprob: -10.859472274780273

Token 1606: ' fallback' (ID: 66264)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3160945475101471
    2. '           ' → logprob: -1.9410945177078247
    3. ' return' → logprob: -2.0660946369171143
    4. '       ' → logprob: -7.441094398498535
    5. 'if' → logprob: -10.066094398498535
    6. ' if' → logprob: -10.691094398498535
    7. '   ' → logprob: -10.691094398498535
    8. '```' → logprob: -10.816094398498535
    9. '#' → logprob: -11.066094398498535
    10. '               ' → logprob: -11.191094398498535

Token 1607: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5503442287445068
    2. '       ' → logprob: -1.5503442287445068
    3. ':
' → logprob: -2.925344228744507
    4. ' if' → logprob: -3.050344228744507
    5. ' to' → logprob: -3.550344228744507
    6. '           ' → logprob: -3.925344228744507
    7. ' or' → logprob: -4.425344467163086
    8. ' =' → logprob: -4.550344467163086
    9. ',' → logprob: -5.425344467163086
    10. ' else' → logprob: -5.425344467163086

Token 1608: ' hypothesis' (ID: 65604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3057112693786621
    2. 'None' → logprob: -1.555711269378662
    3. 'se' → logprob: -3.180711269378662
    4. ' self' → logprob: -5.180711269378662
    5. ' None' → logprob: -5.930711269378662
    6. 'stack' → logprob: -7.180711269378662
    7. 'seg' → logprob: -7.180711269378662
    8. '[]' → logprob: -8.80571174621582
    9. ' seg' → logprob: -9.43071174621582
    10. '
' → logprob: -9.68071174621582

Token 1609: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4796164035797119
    2. 'else' → logprob: -1.854616403579712
    3. '           ' → logprob: -2.979616403579712
    4. '
' → logprob: -3.104616403579712
    5. 'canonical' → logprob: -3.229616403579712
    6. '#' → logprob: -3.479616403579712
    7. ' =' → logprob: -4.229616165161133
    8. ' else' → logprob: -4.604616165161133
    9. '        
' → logprob: -5.229616165161133
    10. '=' → logprob: -5.354616165161133

Token 1610: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3694682717323303
    2. '#' → logprob: -1.9944682121276855
    3. ':' → logprob: -2.9944682121276855
    4. '1' → logprob: -3.7444682121276855
    5. '=' → logprob: -3.8694682121276855
    6. ' =' → logprob: -4.3694682121276855
    7. ' #' → logprob: -4.4944682121276855
    8. '       ' → logprob: -4.4944682121276855
    9. ':
' → logprob: -4.6194682121276855
    10. 'else' → logprob: -4.8694682121276855

Token 1611: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12337987124919891
    2. '
' → logprob: -2.873379945755005
    3. '        
' → logprob: -3.248379945755005
    4. '           ' → logprob: -4.498379707336426
    5. 'else' → logprob: -5.373379707336426
    6. '    
' → logprob: -6.998379707336426
    7. '            
' → logprob: -7.123379707336426
    8. ' else' → logprob: -7.123379707336426
    9. ',' → logprob: -7.248379707336426
    10. '   ' → logprob: -8.623379707336426

Token 1612: ' last' (ID: 2174)
  Prédit: ' canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' canonical' → logprob: -0.7916128635406494
    2. 'canonical' → logprob: -0.9166128635406494
    3. '       ' → logprob: -2.1666128635406494
    4. '           ' → logprob: -4.04161262512207
    5. 'stack' → logprob: -5.79161262512207
    6. 'parent' → logprob: -5.91661262512207
    7. ' parent' → logprob: -6.16661262512207
    8. '
' → logprob: -7.29161262512207
    9. 'segments' → logprob: -7.41661262512207
    10. 'seg' → logprob: -7.66661262512207

Token 1613: ' segment' (ID: 14806)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.22151662409305573
    2. '_segment' → logprob: -2.5965166091918945
    3. 'segment' → logprob: -2.5965166091918945
    4. ' segment' → logprob: -3.5965166091918945
    5. 'seg' → logprob: -4.0965166091918945
    6. '```' → logprob: -6.8465166091918945
    7. '_segments' → logprob: -7.2215166091918945
    8. ')' → logprob: -7.8465166091918945
    9. '_' → logprob: -7.8465166091918945
    10. '   ' → logprob: -8.096516609191895

Token 1614: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5603758692741394
    2. '_is' → logprob: -2.310375928878784
    3. ' is' → logprob: -2.435375928878784
    4. ' =' → logprob: -2.935375928878784
    5. ':' → logprob: -3.060375928878784
    6. ')' → logprob: -3.185375928878784
    7. 'as' → logprob: -3.935375928878784
    8. '=' → logprob: -4.185375690460205
    9. ' as' → logprob: -4.310375690460205
    10. '_name' → logprob: -4.810375690460205

Token 1615: ' a' (ID: 261)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.0006992113194428384
    2. ' directory' → logprob: -8.000699043273926
    3. 'a' → logprob: -8.125699043273926
    4. 'dir' → logprob: -9.625699043273926
    5. ' a' → logprob: -13.750699043273926
    6. 'dirname' → logprob: -15.250699043273926
    7. 'file' → logprob: -15.500699043273926
    8. '_directory' → logprob: -15.875699043273926
    9. 'folder' → logprob: -16.625699996948242
    10. 'treated' → logprob: -16.750699996948242

Token 1616: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.0019528986886143684
    2. ' directory' → logprob: -6.251953125
    3. 'dir' → logprob: -11.251953125
    4. '_directory' → logprob: -12.001953125
    5. 'segment' → logprob: -13.376953125
    6. 'dirname' → logprob: -13.626953125
    7. '(directory' → logprob: -15.001953125
    8. 'Directory' → logprob: -15.126953125
    9. '
' → logprob: -15.126953125
    10. '.directory' → logprob: -15.376953125

Token 1617: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1240488737821579
    2. '
' → logprob: -2.249048948287964
    3. '        
' → logprob: -5.124048709869385
    4. '           ' → logprob: -5.749048709869385
    5. ',' → logprob: -7.374048709869385
    6. '```' → logprob: -8.124049186706543
    7. '    
' → logprob: -8.249049186706543
    8. 'return' → logprob: -9.124049186706543
    9. '   ' → logprob: -9.374049186706543
    10. ',
' → logprob: -9.499049186706543

Token 1618: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5775200724601746
    2. '           ' → logprob: -0.8275200724601746
    3. '
' → logprob: -7.32751989364624
    4. '        
' → logprob: -8.202520370483398
    5. '   ' → logprob: -8.577520370483398
    6. ',' → logprob: -9.327520370483398
    7. 'return' → logprob: -9.327520370483398
    8. '```' → logprob: -9.327520370483398
    9. '            
' → logprob: -9.702520370483398
    10. '    
' → logprob: -10.577520370483398

Token 1619: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' (adapté à ' canonical') → logprob: -0.6103783845901489
    2. '       ' → logprob: -1.735378384590149
    3. '
' → logprob: -1.860378384590149
    4. ' canonical' → logprob: -2.7353782653808594
    5. '           ' → logprob: -3.9853782653808594
    6. 'return' → logprob: -3.9853782653808594
    7. '        
' → logprob: -4.735378265380859
    8. 'stack' → logprob: -5.860378265380859
    9. '#' → logprob: -6.235378265380859
    10. ' return' → logprob: -6.485378265380859

Token 1620: '_dir' (ID: 9526)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.004278076812624931
    2. 'parent' → logprob: -5.504278182983398
    3. 'Parent' → logprob: -9.879278182983398
    4. '_' → logprob: -9.879278182983398
    5. '```' → logprob: -10.629278182983398
    6. '_PARENT' → logprob: -11.504278182983398
    7. '_par' → logprob: -11.879278182983398
    8. 'paren' → logprob: -12.004278182983398
    9. '_dirs' → logprob: -12.129278182983398
    10. '	parent' → logprob: -12.629278182983398

Token 1621: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7464030385017395
    2. 's' → logprob: -1.4964029788970947
    3. '=' → logprob: -2.1214029788970947
    4. '1' → logprob: -2.4964029788970947
    5. '_path' → logprob: -2.6214029788970947
    6. 'path' → logprob: -4.496403217315674
    7. '_stack' → logprob: -5.121403217315674
    8. '_paths' → logprob: -6.371403217315674
    9. '_' → logprob: -6.746403217315674
    10. '_list' → logprob: -6.871403217315674

Token 1622: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.348468154668808
    2. '=' → logprob: -1.2234681844711304
    3. ')' → logprob: -12.598467826843262
    4. '=None' → logprob: -12.723467826843262
    5. ',' → logprob: -12.848467826843262
    6. 's' → logprob: -13.223467826843262
    7. '=[]' → logprob: -13.473467826843262
    8. '_' → logprob: -13.723467826843262
    9. ':' → logprob: -13.723467826843262
    10. '[]' → logprob: -13.848467826843262

Token 1623: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01254991628229618
    2. ' self' → logprob: -4.387549877166748
    3. '           ' → logprob: -10.512550354003906
    4. '   ' → logprob: -12.262550354003906
    5. '       ' → logprob: -12.262550354003906
    6. '(self' → logprob: -14.012550354003906
    7. '               ' → logprob: -14.637550354003906
    8. '         ' → logprob: -14.637550354003906
    9. '[self' → logprob: -14.637550354003906
    10. '	self' → logprob: -14.887550354003906

Token 1624: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00022797346173319966
    2. '_normal' → logprob: -8.500227928161621
    3. '.normalize' → logprob: -11.875227928161621
    4. '_res' → logprob: -12.000227928161621
    5. '
' → logprob: -12.375227928161621
    6. '.' → logprob: -13.250227928161621
    7. '.resolve' → logprob: -13.875227928161621
    8. ' _' → logprob: -14.500227928161621
    9. '   ' → logprob: -14.750227928161621
    10. '.\' → logprob: -14.875227928161621

Token 1625: 'resolve' (ID: 31567)
  Prédit: 'resolve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resolve' → logprob: -3.650518920039758e-06
    2. 'normalize' → logprob: -13.000003814697266
    3. 'continue' → logprob: -15.500003814697266
    4. 'parse' → logprob: -15.750003814697266
    5. 'solve' → logprob: -15.750003814697266
    6. ' resolve' → logprob: -16.000003814697266
    7. '```' → logprob: -16.125003814697266
    8. '_path' → logprob: -16.750003814697266
    9. 'replace' → logprob: -17.000003814697266
    10. 'repr' → logprob: -17.125003814697266

Token 1626: '_dirs' (ID: 117442)
  Prédit: '_dirs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dirs' → logprob: -0.0032061156816780567
    2. 'dirs' → logprob: -5.753206253051758
    3. '```' → logprob: -11.753206253051758
    4. '`' → logprob: -12.503206253051758
    5. 'dir' → logprob: -13.003206253051758
    6. 'Dirs' → logprob: -13.253206253051758
    7. 'self' → logprob: -13.253206253051758
    8. '\' → logprob: -13.628206253051758
    9. '_paths' → logprob: -13.753206253051758
    10. ''s' → logprob: -13.878206253051758

Token 1627: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.14307858049869537
    2. 'se' → logprob: -2.018078565597534
    3. '(s' → logprob: -8.643078804016113
    4. '       ' → logprob: -8.768078804016113
    5. '   ' → logprob: -11.393078804016113
    6. 's' → logprob: -11.768078804016113
    7. 'segments' → logprob: -11.768078804016113
    8. '[' → logprob: -11.893078804016113
    9. 'seg' → logprob: -12.018078804016113
    10. '           ' → logprob: -12.268078804016113

Token 1628: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.00014120421838015318
    2. 'qs' → logprob: -8.875141143798828
    3. 'gments' → logprob: -14.750141143798828
    4. '[' → logprob: -15.000141143798828
    5. '```' → logprob: -16.500141143798828
    6. 'ps' → logprob: -16.500141143798828
    7. ' gs' → logprob: -16.750141143798828
    8. '
' → logprob: -16.875141143798828
    9. '   ' → logprob: -17.250141143798828
    10. '.gs' → logprob: -17.375141143798828

Token 1629: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2298387885093689
    2. '[:-' → logprob: -1.7298388481140137
    3. '[:' → logprob: -4.229838848114014
    4. ')
' → logprob: -4.479838848114014
    5. '[' → logprob: -6.229838848114014
    6. '[:]' → logprob: -9.604838371276855
    7. '       ' → logprob: -10.604838371276855
    8. '   ' → logprob: -11.104838371276855
    9. ')return' → logprob: -11.854838371276855
    10. '[::-' → logprob: -12.104838371276855

Token 1630: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10154958069324493
    2. '       ' → logprob: -2.3515496253967285
    3. ' if' → logprob: -7.9765496253967285
    4. '               ' → logprob: -8.22654914855957
    5. '<|end|>' → logprob: -9.22654914855957
    6. 'if' → logprob: -9.35154914855957
    7. '
' → logprob: -9.72654914855957
    8. ':' → logprob: -9.72654914855957
    9. ':
' → logprob: -9.97654914855957
    10. '   ' → logprob: -9.97654914855957

Token 1631: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21704009175300598
    2. 'if' (adapté à ' if') → logprob: -2.2170400619506836
    3. ' if' → logprob: -2.4670400619506836
    4. '       ' → logprob: -6.967040061950684
    5. '```' → logprob: -8.467040061950684
    6. '   ' → logprob: -9.967040061950684
    7. '<|end|>' → logprob: -10.217040061950684
    8. '               ' → logprob: -11.217040061950684
    9. 'return' → logprob: -11.467040061950684
    10. ';if' → logprob: -11.467040061950684

Token 1632: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.03806202858686447
    2. ' canonical' → logprob: -3.28806209564209
    3. 'not' → logprob: -11.03806209564209
    4. ' not' → logprob: -13.41306209564209
    5. '           ' → logprob: -13.53806209564209
    6. '   ' → logprob: -14.28806209564209
    7. '       ' → logprob: -14.91306209564209
    8. 'c' → logprob: -15.91306209564209
    9. 'canon' → logprob: -16.038061141967773
    10. 'can' → logprob: -16.288061141967773

Token 1633: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -2.9875325708417222e-05
    2. '_' → logprob: -12.250029563903809
    3. '
' → logprob: -12.500029563903809
    4. 'dir' → logprob: -12.625029563903809
    5. '```' → logprob: -13.000029563903809
    6. 'Dir' → logprob: -13.125029563903809
    7. ')_' → logprob: -13.125029563903809
    8. '`' → logprob: -13.625029563903809
    9. '2' → logprob: -13.750029563903809
    10. '_seg' → logprob: -13.875029563903809

Token 1634: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011450992315076292
    2. '[' → logprob: -10.750114440917969
    3. '   ' → logprob: -11.000114440917969
    4. '```' → logprob: -11.000114440917969
    5. '       ' → logprob: -11.375114440917969
    6. 's' → logprob: -11.875114440917969
    7. 'None' → logprob: -12.125114440917969
    8. '           ' → logprob: -12.250114440917969
    9. ' ' → logprob: -12.375114440917969
    10. '...' → logprob: -13.000114440917969

Token 1635: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.020551113411784172
    2. 'is' → logprob: -3.8955512046813965
    3. '==' → logprob: -12.520550727844238
    4. ' ==' → logprob: -13.645550727844238
    5. ')is' → logprob: -13.895550727844238
    6. ')' → logprob: -14.145550727844238
    7. '	is' → logprob: -14.395550727844238
    8. ' ' → logprob: -14.520550727844238
    9. '            ' → logprob: -14.645550727844238
    10. '    ' → logprob: -15.645550727844238

Token 1636: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04883715137839317
    2. ' None' → logprob: -3.048837184906006
    3. 'not' → logprob: -8.548836708068848
    4. ' not' → logprob: -9.923836708068848
    5. '   ' → logprob: -12.423836708068848
    6. '(None' → logprob: -14.048836708068848
    7. '=None' → logprob: -14.173836708068848
    8. '_None' → logprob: -14.298836708068848
    9. 'Not' → logprob: -15.298836708068848
    10. '                   ' → logprob: -15.673836708068848

Token 1637: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1081019937992096
    2. ':
' → logprob: -2.6081020832061768
    3. '               ' → logprob: -3.7331020832061768
    4. ':return' → logprob: -5.608101844787598
    5. '           ' → logprob: -7.483101844787598
    6. '<|end|>' → logprob: -8.233101844787598
    7. ',' → logprob: -9.358101844787598
    8. '):
' → logprob: -9.733101844787598
    9. ' or' → logprob: -10.108101844787598
    10. '):' → logprob: -10.108101844787598

Token 1638: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012118533049942926
    2. '           ' → logprob: -9.500121116638184
    3. 'return' → logprob: -10.375121116638184
    4. ' return' → logprob: -12.375121116638184
    5. '                   ' → logprob: -12.750121116638184
    6. '                       ' → logprob: -13.375121116638184
    7. '{return' → logprob: -13.875121116638184
    8. ':return' → logprob: -13.875121116638184
    9. '<|end|>' → logprob: -14.000121116638184
    10. '                               ' → logprob: -14.375121116638184

Token 1639: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021862227469682693
    2. 'return' → logprob: -4.021862030029297
    3. '           ' → logprob: -5.771862030029297
    4. ' return' → logprob: -8.021862030029297
    5. '                   ' → logprob: -8.396862030029297
    6. '   ' → logprob: -10.646862030029297
    7. '{return' → logprob: -12.146862030029297
    8. '```' → logprob: -12.521862030029297
    9. '       ' → logprob: -13.646862030029297
    10. ':return' → logprob: -13.771862030029297

Token 1640: ' invalid' (ID: 15796)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -4.739826181321405e-05
    2. ' return' → logprob: -10.50004768371582
    3. '                   ' → logprob: -11.00004768371582
    4. '           ' → logprob: -13.50004768371582
    5. '               ' → logprob: -13.62504768371582
    6. '   ' → logprob: -14.62504768371582
    7. '```' → logprob: -16.25004768371582
    8. '#' → logprob: -17.12504768371582
    9. '                       ' → logprob: -17.87504768371582
    10. '       ' → logprob: -18.12504768371582

Token 1641: ' path' (ID: 3104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3129536509513855
    2. '           ' → logprob: -1.4379537105560303
    3. ' return' → logprob: -3.9379537105560303
    4. '               ' → logprob: -4.562953472137451
    5. '       ' → logprob: -8.06295394897461
    6. 'None' → logprob: -8.43795394897461
    7. ':
' → logprob: -8.43795394897461
    8. '                   ' → logprob: -8.56295394897461
    9. ')' → logprob: -8.93795394897461
    10. ' None' → logprob: -9.43795394897461

Token 1642: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25674429535865784
    2. '               ' → logprob: -1.5067442655563354
    3. 'return' → logprob: -5.631744384765625
    4. '                   ' → logprob: -7.381744384765625
    5. ':
' → logprob: -8.506744384765625
    6. '
' → logprob: -8.756744384765625
    7. ' return' → logprob: -9.506744384765625
    8. '```' → logprob: -9.881744384765625
    9. '       ' → logprob: -10.006744384765625
    10. '   ' → logprob: -10.756744384765625

Token 1643: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10852314531803131
    2. '               ' → logprob: -2.35852313041687
    3. '                   ' → logprob: -5.108523368835449
    4. '           ' → logprob: -6.483523368835449
    5. ' return' → logprob: -7.608523368835449
    6. 'None' → logprob: -8.73352336883545
    7. '   ' → logprob: -10.10852336883545
    8. '	return' → logprob: -12.98352336883545
    9. '{return' → logprob: -13.35852336883545
    10. ' None' → logprob: -13.48352336883545

Token 1644: ' page' (ID: 3011)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19292610883712769
    2. ' return' → logprob: -1.8179261684417725
    3. 'valid' → logprob: -5.817925930023193
    4. 'token' → logprob: -5.817925930023193
    5. 'existing' → logprob: -6.192925930023193
    6. ' valid' → logprob: -6.567925930023193
    7. 'canonical' → logprob: -6.567925930023193
    8. 'path' → logprob: -7.692925930023193
    9. ' existing' → logprob: -8.442926406860352
    10. '
' → logprob: -8.692926406860352

Token 1645: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17518669366836548
    2. '           ' → logprob: -2.5501866340637207
    3. 'return' → logprob: -2.9251866340637207
    4. '
' → logprob: -4.300186634063721
    5. '                   ' → logprob: -5.050186634063721
    6. ' return' → logprob: -5.675186634063721
    7. ':
' → logprob: -6.050186634063721
    8. '```' → logprob: -6.300186634063721
    9. '       ' → logprob: -7.050186634063721
    10. '``' → logprob: -9.300187110900879

Token 1646: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004324722103774548
    2. '           ' → logprob: -5.504324913024902
    3. '                   ' → logprob: -8.629324913024902
    4. 'return' → logprob: -10.004324913024902
    5. '```' → logprob: -11.254324913024902
    6. '                       ' → logprob: -13.004324913024902
    7. '       ' → logprob: -13.254324913024902
    8. ' return' → logprob: -13.754324913024902
    9. ')' → logprob: -14.254324913024902
    10. ':return' → logprob: -14.629324913024902

Token 1647: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.016882164403796196
    2. '                   ' → logprob: -4.516881942749023
    3. '           ' → logprob: -5.391881942749023
    4. '               ' → logprob: -7.141881942749023
    5. ' return' → logprob: -7.891881942749023
    6. '   ' → logprob: -10.766881942749023
    7. '```' → logprob: -10.766881942749023
    8. '	return' → logprob: -11.141881942749023
    9. ':return' → logprob: -11.266881942749023
    10. '{return' → logprob: -11.391881942749023

Token 1648: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.1994775377388578e-05
    2. ' None' → logprob: -11.500012397766113
    3. '                   ' → logprob: -13.500012397766113
    4. '               ' → logprob: -14.750012397766113
    5. '                       ' → logprob: -17.750011444091797
    6. '```' → logprob: -18.625011444091797
    7. '           ' → logprob: -18.750011444091797
    8. '
' → logprob: -19.250011444091797
    9. '                               ' → logprob: -19.750011444091797
    10. '                           ' → logprob: -20.750011444091797

Token 1649: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28099653124809265
    2. '       ' → logprob: -1.530996561050415
    3. '
' → logprob: -3.655996561050415
    4. '        
' → logprob: -6.030996322631836
    5. '            
' → logprob: -9.280996322631836
    6. 'return' → logprob: -9.405996322631836
    7. '    
' → logprob: -9.780996322631836
    8. ')' → logprob: -10.405996322631836
    9. '```' → logprob: -10.405996322631836
    10. 'else' → logprob: -11.280996322631836

Token 1650: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10113442689180374
    2. '
' → logprob: -2.9761345386505127
    3. '           ' → logprob: -3.2261345386505127
    4. '        
' → logprob: -5.351134300231934
    5. '```' → logprob: -8.476134300231934
    6. 'else' → logprob: -8.851134300231934
    7. '    
' → logprob: -8.976134300231934
    8. '            
' → logprob: -9.851134300231934
    9. 'return' → logprob: -10.101134300231934
    10. ',
' → logprob: -11.101134300231934

Token 1651: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033887267112731934
    2. '           ' → logprob: -3.7838873863220215
    3. '
' → logprob: -5.6588873863220215
    4. 'return' → logprob: -5.7838873863220215
    5. '        
' → logprob: -6.1588873863220215
    6. 'if' → logprob: -6.7838873863220215
    7. 'else' (adapté à ' else') → logprob: -8.033886909484863
    8. '#' → logprob: -9.283886909484863
    9. ' if' → logprob: -9.283886909484863
    10. '```' → logprob: -9.908886909484863

Token 1652: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037835699040442705
    2. '           ' → logprob: -6.378783702850342
    3. ':' → logprob: -6.753783702850342
    4. ':
' → logprob: -7.253783702850342
    5. 'return' → logprob: -9.128783226013184
    6. ' return' → logprob: -10.503783226013184
    7. ':return' → logprob: -10.753783226013184
    8. ',' → logprob: -11.003783226013184
    9. '                   ' → logprob: -12.003783226013184
    10. ' and' → logprob: -12.378783226013184

Token 1653: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48463621735572815
    2. '           ' → logprob: -0.9846361875534058
    3. 'return' → logprob: -4.609636306762695
    4. ' return' → logprob: -7.859636306762695
    5. '```' → logprob: -10.234636306762695
    6. '   ' → logprob: -10.734636306762695
    7. '	       ' → logprob: -10.859636306762695
    8. '       ' → logprob: -11.109636306762695
    9. 'if' → logprob: -11.609636306762695
    10. ' ' → logprob: -11.734636306762695

Token 1654: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.0012764930725098
    2. 'if' → logprob: -1.1262764930725098
    3. 'return' → logprob: -1.3762764930725098
    4. '           ' → logprob: -3.7512764930725098
    5. 'dir' → logprob: -5.00127649307251
    6. 'path' → logprob: -5.12627649307251
    7. '       ' → logprob: -5.50127649307251
    8. 'final' → logprob: -5.62627649307251
    9. 'canonical' → logprob: -6.00127649307251
    10. '               ' → logprob: -6.62627649307251

Token 1655: ' check' (ID: 2371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.31345123052597046
    2. 'if' → logprob: -1.4384512901306152
    3. 'return' → logprob: -3.8134512901306152
    4. 'dir' → logprob: -5.313451290130615
    5. 'canonical' → logprob: -6.688451290130615
    6. '       ' → logprob: -7.063451290130615
    7. 'final' → logprob: -7.938451290130615
    8. '               ' → logprob: -7.938451290130615
    9. 'file' → logprob: -8.313450813293457
    10. '           ' → logprob: -8.313450813293457

Token 1656: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3226745128631592
    2. ' if' → logprob: -1.3226745128631592
    3. '               ' → logprob: -4.822674751281738
    4. 'file' → logprob: -7.072674751281738
    5. 'exists' → logprob: -8.947674751281738
    6. 'filesystem' → logprob: -9.322674751281738
    7. ' file' → logprob: -9.447674751281738
    8. 'whether' → logprob: -10.447674751281738
    9. 'return' → logprob: -10.697674751281738
    10. ' whether' → logprob: -11.322674751281738

Token 1657: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009519370272755623
    2. ' self' → logprob: -5.009519577026367
    3. 'canonical' → logprob: -6.009519577026367
    4. 'len' → logprob: -8.759519577026367
    5. 'index' → logprob: -9.884519577026367
    6. '   ' → logprob: -10.759519577026367
    7. 'possible' → logprob: -10.759519577026367
    8. ' canonical' → logprob: -11.009519577026367
    9. 'last' → logprob: -11.384519577026367
    10. 'not' → logprob: -11.634519577026367

Token 1658: '.html' (ID: 4588)
  Prédit: '_file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -0.3711611032485962
    2. '.html' → logprob: -1.3711611032485962
    3. ' =' → logprob: -4.621160984039307
    4. 'html' → logprob: -4.621160984039307
    5. ')' → logprob: -4.871160984039307
    6. 'file' → logprob: -4.996160984039307
    7. '_html' → logprob: -5.371160984039307
    8. '=' → logprob: -6.371160984039307
    9. '```' → logprob: -6.371160984039307
    10. '.' → logprob: -6.496160984039307

Token 1659: ' exists' (ID: 13031)
  Prédit: 'exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exists' → logprob: -1.1777105331420898
    2. ' in' → logprob: -1.8027105331420898
    3. ' exists' → logprob: -1.8027105331420898
    4. '_exists' → logprob: -1.9277105331420898
    5. 'file' → logprob: -2.17771053314209
    6. 'in' → logprob: -3.30271053314209
    7. ' file' → logprob: -3.30271053314209
    8. ')' → logprob: -4.67771053314209
    9. '_file' → logprob: -4.92771053314209
    10. '```' → logprob: -6.05271053314209

Token 1660: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5395565032958984
    2. '               ' → logprob: -1.0395565032958984
    3. 'in' → logprob: -2.7895565032958984
    4. '       ' → logprob: -7.289556503295898
    5. ',' → logprob: -8.289556503295898
    6. '           ' → logprob: -8.664556503295898
    7. ' =' → logprob: -8.789556503295898
    8. '                   ' → logprob: -9.164556503295898
    9. ' and' → logprob: -9.789556503295898
    10. ' for' → logprob: -10.039556503295898

Token 1661: ' this' (ID: 495)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.001526525360532105
    2. ' canonical' → logprob: -6.501526355743408
    3. '   ' → logprob: -11.751526832580566
    4. '       ' → logprob: -12.001526832580566
    5. '           ' → logprob: -12.126526832580566
    6. '               ' → logprob: -12.876526832580566
    7. '                   ' → logprob: -14.126526832580566
    8. 'can' → logprob: -15.251526832580566
    9. 'c' → logprob: -15.251526832580566
    10. 'self' → logprob: -15.376526832580566

Token 1662: ' directory' (ID: 12552)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.5799183249473572
    2. 'directory' → logprob: -1.079918384552002
    3. 'directories' → logprob: -2.954918384552002
    4. '
' → logprob: -4.079918384552002
    5. ' canonical' → logprob: -4.579918384552002
    6. ' directory' → logprob: -5.329918384552002
    7. '_directory' → logprob: -5.829918384552002
    8. '`' → logprob: -5.954918384552002
    9. '/' → logprob: -6.579918384552002
    10. '   ' → logprob: -6.954918384552002

Token 1663: ' =' (ID: 314)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028787286952137947
    2. '       ' → logprob: -3.90378737449646
    3. '           ' → logprob: -5.028787136077881
    4. ',' → logprob: -7.028787136077881
    5. ' if' → logprob: -8.528787612915039
    6. ' for' → logprob: -9.278787612915039
    7. ' and' → logprob: -9.903787612915039
    8. ':' → logprob: -10.153787612915039
    9. '<|end|>' → logprob: -10.153787612915039
    10. 'if' → logprob: -10.403787612915039

Token 1664: ' directory' (ID: 12552)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7564723491668701
    2. ' True' → logprob: -1.2564723491668701
    3. 'self' → logprob: -1.6314723491668701
    4. ' self' → logprob: -3.50647234916687
    5. '               ' → logprob: -4.131472587585449
    6. ' canonical' → logprob: -6.631472587585449
    7. 'canonical' → logprob: -6.756472587585449
    8. '                   ' → logprob: -7.631472587585449
    9. '=True' → logprob: -8.13147258758545
    10. 'False' → logprob: -8.75647258758545

Token 1665: ' path' (ID: 3104)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6278815269470215
    2. '
' → logprob: -2.0028815269470215
    3. ' and' → logprob: -2.6278815269470215
    4. 'and' → logprob: -2.8778815269470215
    5. 'name' → logprob: -3.2528815269470215
    6. 'return' → logprob: -3.7528815269470215
    7. '                   ' → logprob: -4.0028815269470215
    8. '           ' → logprob: -4.0028815269470215
    9. ':
' → logprob: -4.1278815269470215
    10. '       ' → logprob: -4.5028815269470215

Token 1666: ' itself' (ID: 8807)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03046441450715065
    2. '       ' → logprob: -4.1554646492004395
    3. '           ' → logprob: -5.2804646492004395
    4. ' and' → logprob: -5.9054646492004395
    5. '
' → logprob: -6.5304646492004395
    6. ',' → logprob: -7.0304646492004395
    7. ' if' → logprob: -7.1554646492004395
    8. ':
' → logprob: -7.4054646492004395
    9. '```' → logprob: -7.7804646492004395
    10. 'and' → logprob: -8.030464172363281

Token 1667: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5845261216163635
    2. '       ' → logprob: -0.8345261216163635
    3. '           ' → logprob: -5.834526062011719
    4. '
' → logprob: -6.209526062011719
    5. ',' → logprob: -6.709526062011719
    6. '```' → logprob: -6.959526062011719
    7. ' if' → logprob: -7.334526062011719
    8. ':
' → logprob: -8.584526062011719
    9. '        
' → logprob: -8.959526062011719
    10. 'if' → logprob: -8.959526062011719

Token 1668: ' a' (ID: 261)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.30587124824523926
    2. 'a' → logprob: -2.1808712482452393
    3. ' canonical' → logprob: -3.0558712482452393
    4. 'index' → logprob: -3.8058712482452393
    5. 'possible' → logprob: -3.9308712482452393
    6. 'file' → logprob: -4.18087100982666
    7. 'valid' → logprob: -4.43087100982666
    8. 'equ' → logprob: -5.18087100982666
    9. ' a' → logprob: -5.18087100982666
    10. 'the' → logprob: -5.30587100982666

Token 1669: ' page' (ID: 3011)
  Prédit: 'web'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'web' → logprob: -0.8302369117736816
    2. 'valid' → logprob: -1.0802369117736816
    3. 'page' → logprob: -2.0802369117736816
    4. 'canonical' → logprob: -2.8302369117736816
    5. 'file' → logprob: -3.4552369117736816
    6. ' valid' → logprob: -6.080236911773682
    7. 'path' → logprob: -6.080236911773682
    8. ' web' → logprob: -6.205236911773682
    9. 'possible' → logprob: -7.580236911773682
    10. ' canonical' → logprob: -8.455236434936523

Token 1670: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034347150940448046
    2. '
' → logprob: -6.503434658050537
    3. '       ' → logprob: -7.378434658050537
    4. '           ' → logprob: -7.878434658050537
    5. ' if' → logprob: -8.128435134887695
    6. '```' → logprob: -8.378435134887695
    7. '                
' → logprob: -9.003435134887695
    8. ':
' → logprob: -10.128435134887695
    9. 'if' → logprob: -10.253435134887695
    10. ',' → logprob: -10.378435134887695

Token 1671: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1032785102725029
    2. ' self' → logprob: -2.353278398513794
    3. 'index' → logprob: -7.478278636932373
    4. '               ' → logprob: -7.603278636932373
    5. 'possible' → logprob: -7.728278636932373
    6. 'canonical' → logprob: -8.103278160095215
    7. '                   ' → logprob: -8.353278160095215
    8. '   ' → logprob: -8.853278160095215
    9. 'len' → logprob: -8.978278160095215
    10. ' canonical' → logprob: -9.228278160095215

Token 1672: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.038079943507909775
    2. ''.' → logprob: -3.9130799770355225
    3. '_html' → logprob: -5.038079738616943
    4. 'html' → logprob: -5.288079738616943
    5. '_file' → logprob: -6.788079738616943
    6. '<html' → logprob: -7.538079738616943
    7. '('.' → logprob: -7.788079738616943
    8. '
' → logprob: -7.788079738616943
    9. '```' → logprob: -8.038080215454102
    10. '".' → logprob: -8.288080215454102

Token 1673: ' present' (ID: 3333)
  Prédit: ' exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exists' → logprob: -0.468647301197052
    2. 'exists' → logprob: -1.4686472415924072
    3. ' in' → logprob: -2.2186472415924072
    4. 'in' → logprob: -4.218647480010986
    5. '_exists' → logprob: -4.718647480010986
    6. ')' → logprob: -5.468647480010986
    7. '```' → logprob: -6.468647480010986
    8. ' file' → logprob: -6.468647480010986
    9. '
' → logprob: -7.343647480010986
    10. '   ' → logprob: -7.593647480010986

Token 1674: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014822866767644882
    2. '
' → logprob: -4.514822959899902
    3. '           ' → logprob: -6.764822959899902
    4. '```' → logprob: -7.389822959899902
    5. '       ' → logprob: -7.514822959899902
    6. ',' → logprob: -8.514822959899902
    7. '                
' → logprob: -8.639822959899902
    8. ' if' → logprob: -8.639822959899902
    9. '\n' → logprob: -8.764822959899902
    10. ':
' → logprob: -8.764822959899902

Token 1675: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001667803735472262
    2. '```' → logprob: -7.2516679763793945
    3. '       ' → logprob: -7.7516679763793945
    4. '
' → logprob: -8.251667976379395
    5. '           ' → logprob: -8.751667976379395
    6. '                   ' → logprob: -10.376667976379395
    7. ',' → logprob: -10.376667976379395
    8. ' if' → logprob: -11.376667976379395
    9. '                
' → logprob: -11.626667976379395
    10. '``' → logprob: -12.251667976379395

Token 1676: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.48255324363708496
    2. '               ' → logprob: -0.982553243637085
    3. ' if' → logprob: -5.107553482055664
    4. '       ' → logprob: -6.232553482055664
    5. '           ' → logprob: -8.232553482055664
    6. 'index' → logprob: -9.107553482055664
    7. 'file' → logprob: -11.357553482055664
    8. '   ' → logprob: -11.357553482055664
    9. '#' → logprob: -11.857553482055664
    10. '                   ' → logprob: -12.607553482055664

Token 1677: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02330627478659153
    2. ' self' → logprob: -3.773306369781494
    3. '   ' → logprob: -10.898305892944336
    4. '               ' → logprob: -11.148305892944336
    5. '                   ' → logprob: -12.148305892944336
    6. '           ' → logprob: -12.523305892944336
    7. ' ' → logprob: -12.648305892944336
    8. '	self' → logprob: -12.648305892944336
    9. '(self' → logprob: -12.898305892944336
    10. 'index' → logprob: -13.023305892944336

Token 1678: '.fs' (ID: 82179)
  Prédit: '.fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fs' → logprob: -1.9385402993066236e-05
    2. '   ' → logprob: -12.125019073486328
    3. ' .' → logprob: -12.750019073486328
    4. '.' → logprob: -12.750019073486328
    5. 'fs' → logprob: -12.875019073486328
    6. '	fs' → logprob: -13.750019073486328
    7. '
' → logprob: -13.875019073486328
    8. '`.' → logprob: -14.875019073486328
    9. '​.' → logprob: -14.875019073486328
    10. '       ' → logprob: -15.000019073486328

Token 1679: '.file' (ID: 17613)
  Prédit: '.file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.file' → logprob: -0.00029601677670143545
    2. '.has' → logprob: -9.000295639038086
    3. 'file' → logprob: -9.250295639038086
    4. '.' → logprob: -10.125295639038086
    5. '```' → logprob: -11.500295639038086
    6. '   ' → logprob: -12.375295639038086
    7. ' .' → logprob: -12.875295639038086
    8. '       ' → logprob: -13.125295639038086
    9. '	file' → logprob: -13.375295639038086
    10. '
' → logprob: -13.375295639038086

Token 1680: '_exists' (ID: 23519)
  Prédit: '_exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exists' → logprob: -6.511406809295295e-06
    2. 'exists' → logprob: -13.125006675720215
    3. 'Exists' → logprob: -13.500006675720215
    4. '_EXISTS' → logprob: -13.750006675720215
    5. '.exists' → logprob: -14.125006675720215
    6. '```' → logprob: -14.500006675720215
    7. '_exist' → logprob: -15.375006675720215
    8. '_contains' → logprob: -16.3750057220459
    9. ')_' → logprob: -16.5000057220459
    10. '_existing' → logprob: -16.6250057220459

Token 1681: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0001005630983854644
    2. 'canonical' → logprob: -9.375100135803223
    3. ' (' → logprob: -12.625100135803223
    4. '(['' → logprob: -13.000100135803223
    5. '   ' → logprob: -13.250100135803223
    6. ' canonical' → logprob: -13.375100135803223
    7. '([' → logprob: -13.375100135803223
    8. '(list' → logprob: -13.375100135803223
    9. '```' → logprob: -14.250100135803223
    10. '       ' → logprob: -14.375100135803223

Token 1682: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -0.004644434433430433
    2. 'canonical' → logprob: -5.504644393920898
    3. 'an' → logprob: -8.129644393920898
    4. '```' → logprob: -9.129644393920898
    5. 'anon' → logprob: -9.879644393920898
    6. 'on' → logprob: -10.254644393920898
    7. '[' → logprob: -11.129644393920898
    8. 'anical' → logprob: -11.629644393920898
    9. 'a' → logprob: -11.754644393920898
    10. ' canonical' → logprob: -12.004644393920898

Token 1683: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -7.584239938296378e-06
    2. 'dir' → logprob: -12.500007629394531
    3. '_dirs' → logprob: -14.125007629394531
    4. 'Dir' → logprob: -14.250007629394531
    5. '```' → logprob: -14.375007629394531
    6. '
' → logprob: -14.750007629394531
    7. '_path' → logprob: -15.500007629394531
    8. '`' → logprob: -16.00000762939453
    9. '[_' → logprob: -16.00000762939453
    10. '[' → logprob: -16.25000762939453

Token 1684: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20455996692180634
    2. '_dir' → logprob: -1.7045599222183228
    3. 'dir' → logprob: -5.954559803009033
    4. 'Dir' → logprob: -8.204560279846191
    5. '```' → logprob: -9.704560279846191
    6. '1' → logprob: -9.954560279846191
    7. '   ' → logprob: -10.829560279846191
    8. '...' → logprob: -11.079560279846191
    9. 'dirs' → logprob: -11.579560279846191
    10. '_dirs' → logprob: -11.579560279846191

Token 1685: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046951865078881383
    2. ',['' → logprob: -8.500469207763672
    3. ' ,' → logprob: -8.750469207763672
    4. '[],' → logprob: -10.625469207763672
    5. '   ' → logprob: -11.250469207763672
    6. '           ' → logprob: -11.375469207763672
    7. '```' → logprob: -11.625469207763672
    8. '               ' → logprob: -11.750469207763672
    9. ',
' → logprob: -12.000469207763672
    10. '       ' → logprob: -12.125469207763672

Token 1686: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01849312335252762
    2. ' self' → logprob: -4.018493175506592
    3. ''s' → logprob: -9.143492698669434
    4. '   ' → logprob: -9.518492698669434
    5. ''' → logprob: -9.643492698669434
    6. '       ' → logprob: -10.393492698669434
    7. '           ' → logprob: -10.393492698669434
    8. '               ' → logprob: -11.518492698669434
    9. ' ' → logprob: -12.643492698669434
    10. '
' → logprob: -12.893492698669434

Token 1687: '.IN' (ID: 20931)
  Prédit: '.IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.IN' → logprob: -0.007671695202589035
    2. 'INDEX' → logprob: -4.88267183303833
    3. 'IN' → logprob: -10.007671356201172
    4. '
' → logprob: -12.632671356201172
    5. '   ' → logprob: -12.757671356201172
    6. 'self' → logprob: -12.757671356201172
    7. '.I' → logprob: -12.882671356201172
    8. '.' → logprob: -13.257671356201172
    9. 'index' → logprob: -13.257671356201172
    10. '.P' → logprob: -13.507671356201172

Token 1688: 'DEX' (ID: 22598)
  Prédit: 'DEX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEX' → logprob: -0.04885963350534439
    2. 'EX' → logprob: -3.0488595962524414
    3. 'ex' → logprob: -8.298859596252441
    4. 'D' → logprob: -11.423859596252441
    5. 'dex' → logprob: -12.173859596252441
    6. 'ED' → logprob: -13.298859596252441
    7. 'DE' → logprob: -13.548859596252441
    8. '   ' → logprob: -14.048859596252441
    9. '
' → logprob: -14.173859596252441
    10. '`' → logprob: -14.298859596252441

Token 1689: '_FILE' (ID: 19131)
  Prédit: '_FILE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FILE' → logprob: -5.157039049663581e-05
    2. 'FILE' → logprob: -11.000051498413086
    3. '```' → logprob: -11.750051498413086
    4. '_File' → logprob: -12.000051498413086
    5. 'File' → logprob: -12.250051498413086
    6. '_FILES' → logprob: -12.625051498413086
    7. '_FIL' → logprob: -13.125051498413086
    8. '_FILENAME' → logprob: -13.125051498413086
    9. '`' → logprob: -13.250051498413086
    10. '_F' → logprob: -13.375051498413086

Token 1690: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00424294313415885
    2. '):' → logprob: -5.504242897033691
    3. ')' → logprob: -9.879242897033691
    4. '):
' → logprob: -10.129242897033691
    5. '           ' → logprob: -10.504242897033691
    6. '               ' → logprob: -11.379242897033691
    7. '       ' → logprob: -11.379242897033691
    8. ''):
' → logprob: -11.754242897033691
    9. '                   ' → logprob: -12.379242897033691
    10. '):

' → logprob: -12.504242897033691

Token 1691: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0023210567887872458
    2. ':
' → logprob: -6.877321243286133
    3. ':' → logprob: -7.252321243286133
    4. '                       ' → logprob: -8.502321243286133
    5. '               ' → logprob: -8.877321243286133
    6. '                  ' → logprob: -9.377321243286133
    7. ':return' → logprob: -9.752321243286133
    8. '           ' → logprob: -10.252321243286133
    9. 'return' → logprob: -11.002321243286133
    10. ' return' → logprob: -11.127321243286133

Token 1692: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.048724982887506485
    2. '                   ' → logprob: -3.798724889755249
    3. 'return' → logprob: -3.798724889755249
    4. ' return' → logprob: -6.423725128173828
    5. '           ' → logprob: -7.048725128173828
    6. '               ' → logprob: -9.298725128173828
    7. '                           ' → logprob: -9.548725128173828
    8. '                      ' → logprob: -10.423725128173828
    9. '   ' → logprob: -10.923725128173828
    10. '       ' → logprob: -11.423725128173828

Token 1693: ' directory' (ID: 12552)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00040755473310127854
    2. '#' → logprob: -8.250407218933105
    3. ' return' → logprob: -9.750407218933105
    4. 'if' → logprob: -10.250407218933105
    5. '                   ' → logprob: -10.250407218933105
    6. 'canonical' → logprob: -11.500407218933105
    7. '                       ' → logprob: -13.125407218933105
    8. '               ' → logprob: -13.500407218933105
    9. 'path' → logprob: -13.750407218933105
    10. '   ' → logprob: -14.375407218933105

Token 1694: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.10754813253879547
    2. 'path' → logprob: -2.357548236846924
    3. ' =' → logprob: -5.357548236846924
    4. 'return' → logprob: -6.607548236846924
    5. '
' → logprob: -8.607547760009766
    6. 'canonical' → logprob: -8.982547760009766
    7. '=' → logprob: -9.107547760009766
    8. 'name' → logprob: -9.107547760009766
    9. '           ' → logprob: -9.232547760009766
    10. '       ' → logprob: -9.732547760009766

Token 1695: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10086234658956528
    2. '=' → logprob: -3.3508622646331787
    3. 'return' → logprob: -4.100862503051758
    4. '/' → logprob: -4.225862503051758
    5. '/path' → logprob: -4.975862503051758
    6. ')' → logprob: -5.100862503051758
    7. '_path' → logprob: -5.350862503051758
    8. ' is' → logprob: -6.350862503051758
    9. 'with' → logprob: -6.350862503051758
    10. '                   ' → logprob: -6.850862503051758

Token 1696: ' possibly' (ID: 14836)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.17320972681045532
    2. ' trailing' → logprob: -2.6732096672058105
    3. 'slash' → logprob: -3.1732096672058105
    4. 'a' → logprob: -4.0482096672058105
    5. 'index' → logprob: -4.6732096672058105
    6. ''' → logprob: -5.4232096672058105
    7. 'canonical' → logprob: -5.6732096672058105
    8. '/' → logprob: -5.9232096672058105
    9. ' or' → logprob: -6.4232096672058105
    10. ' a' → logprob: -6.4232096672058105

Token 1697: ' slash' (ID: 79755)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.16216962039470673
    2. ' trailing' → logprob: -2.7871696949005127
    3. 'index' → logprob: -3.4121696949005127
    4. 'slash' → logprob: -3.5371696949005127
    5. 'a' → logprob: -4.287169456481934
    6. '/' → logprob: -6.162169456481934
    7. 'no' → logprob: -6.287169456481934
    8. '/index' → logprob: -6.537169456481934
    9. 'or' → logprob: -6.787169456481934
    10. 'canonical' → logprob: -7.037169456481934

Token 1698: ' removed' (ID: 11906)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49131348729133606
    2. '=' → logprob: -1.7413134574890137
    3. 'return' → logprob: -2.4913134574890137
    4. ' is' → logprob: -3.9913134574890137
    5. ' or' → logprob: -4.241313457489014
    6. ')' → logprob: -4.616313457489014
    7. ':' → logprob: -4.741313457489014
    8. '/' → logprob: -4.866313457489014
    9. ' return' → logprob: -4.866313457489014
    10. '.rstrip' → logprob: -4.991313457489014

Token 1699: ' is' (ID: 382)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5497934818267822
    2. 'return' → logprob: -1.0497934818267822
    3. ' return' → logprob: -3.0497934818267822
    4. ':
' → logprob: -4.674793243408203
    5. '               ' → logprob: -5.549793243408203
    6. '                       ' → logprob: -5.549793243408203
    7. ' =' → logprob: -6.049793243408203
    8. '):
' → logprob: -6.174793243408203
    9. ':' → logprob: -7.424793243408203
    10. ' or' → logprob: -7.924793243408203

Token 1700: ' valid' (ID: 4529)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.33481845259666443
    2. ''/' → logprob: -1.9598184823989868
    3. 'f' → logprob: -3.4598183631896973
    4. ''' → logprob: -3.8348183631896973
    5. '''.' → logprob: -4.084818363189697
    6. 'True' → logprob: -4.084818363189697
    7. ' canonical' → logprob: -4.209818363189697
    8. ' '/'' → logprob: -4.584818363189697
    9. '"/' → logprob: -4.834818363189697
    10. 'self' → logprob: -5.209818363189697

Token 1701: ' page' (ID: 3011)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010306783020496368
    2. '                       ' → logprob: -4.7603068351745605
    3. 'return' → logprob: -7.1353068351745605
    4. '               ' → logprob: -7.7603068351745605
    5. ' return' → logprob: -8.260306358337402
    6. '           ' → logprob: -9.010306358337402
    7. '       ' → logprob: -10.885306358337402
    8. '```' → logprob: -10.885306358337402
    9. '
' → logprob: -11.385306358337402
    10. '   ' → logprob: -11.510306358337402

Token 1702: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011263561435043812
    2. '                       ' → logprob: -4.511263370513916
    3. '               ' → logprob: -9.636263847351074
    4. 'return' → logprob: -9.636263847351074
    5. '           ' → logprob: -10.511263847351074
    6. ' return' → logprob: -10.761263847351074
    7. '       ' → logprob: -11.636263847351074
    8. '```' → logprob: -12.011263847351074
    9. '                  ' → logprob: -12.511263847351074
    10. ':' → logprob: -13.011263847351074

Token 1703: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6333104372024536
    2. '                   ' → logprob: -0.7583104372024536
    3. 'return' → logprob: -7.758310317993164
    4. ' return' → logprob: -9.133310317993164
    5. '                      ' → logprob: -10.008310317993164
    6. '               ' → logprob: -10.133310317993164
    7. '```' → logprob: -10.758310317993164
    8. '       ' → logprob: -11.133310317993164
    9. '           ' → logprob: -11.133310317993164
    10. '   ' → logprob: -11.633310317993164

Token 1704: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4977675974369049
    2. '                   ' → logprob: -1.4977675676345825
    3. 'return' → logprob: -1.8727675676345825
    4. ' return' → logprob: -4.247767448425293
    5. '           ' → logprob: -8.372767448425293
    6. '   ' → logprob: -8.997767448425293
    7. '               ' → logprob: -9.872767448425293
    8. '       ' → logprob: -10.247767448425293
    9. '                           ' → logprob: -11.622767448425293
    10. '                      ' → logprob: -11.622767448425293

Token 1705: ' normalize' (ID: 44464)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2271665334701538
    2. '                   ' → logprob: -1.7271665334701538
    3. 'if' → logprob: -4.352166652679443
    4. ' return' → logprob: -4.602166652679443
    5. '                       ' → logprob: -6.602166652679443
    6. ' if' → logprob: -7.727166652679443
    7. '   ' → logprob: -8.727166175842285
    8. '#' → logprob: -8.977166175842285
    9. '           ' → logprob: -9.102166175842285
    10. 'path' → logprob: -9.102166175842285

Token 1706: ' to' (ID: 316)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.43155837059020996
    2. 'return' → logprob: -1.55655837059021
    3. '_path' → logprob: -3.05655837059021
    4. '               ' → logprob: -3.30655837059021
    5. ' return' → logprob: -3.80655837059021
    6. '                       ' → logprob: -4.431558609008789
    7. ' if' → logprob: -5.931558609008789
    8. '       ' → logprob: -6.181558609008789
    9. '           ' → logprob: -6.181558609008789
    10. ' =' → logprob: -6.306558609008789

Token 1707: ' directory' (ID: 12552)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20928022265434265
    2. ''/' → logprob: -2.459280252456665
    3. ' '/'' → logprob: -2.959280252456665
    4. 'canonical' → logprob: -3.584280252456665
    5. '"/' → logprob: -4.334280014038086
    6. 'f' → logprob: -5.959280014038086
    7. '('/' → logprob: -6.084280014038086
    8. ' canonical' → logprob: -6.209280014038086
    9. ' '/' → logprob: -6.959280014038086
    10. '/' → logprob: -7.834280014038086

Token 1708: ' path' (ID: 3104)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7520715594291687
    2. '           ' → logprob: -1.5020716190338135
    3. '/' → logprob: -2.1270716190338135
    4. 'return' → logprob: -2.5020716190338135
    5. '               ' → logprob: -3.6270716190338135
    6. '
' → logprob: -4.002071380615234
    7. '                   ' → logprob: -4.127071380615234
    8. '                       ' → logprob: -4.377071380615234
    9. ' return' → logprob: -4.877071380615234
    10. '_path' → logprob: -5.252071380615234

Token 1709: ' possibly' (ID: 14836)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10294151306152344
    2. '               ' → logprob: -2.8529415130615234
    3. '           ' → logprob: -3.6029415130615234
    4. 'return' → logprob: -5.102941513061523
    5. '                       ' → logprob: -5.852941513061523
    6. '       ' → logprob: -6.602941513061523
    7. '
' → logprob: -6.977941513061523
    8. '```' → logprob: -7.602941513061523
    9. ' return' → logprob: -8.727941513061523
    10. ':
' → logprob: -8.727941513061523

Token 1710: ' without' (ID: 2935)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7892232537269592
    2. '       ' → logprob: -2.0392231941223145
    3. '
' → logprob: -2.4142231941223145
    4. '               ' → logprob: -2.7892231941223145
    5. ' if' → logprob: -2.7892231941223145
    6. 'return' → logprob: -2.7892231941223145
    7. '           ' → logprob: -3.4142231941223145
    8. ':
' → logprob: -3.9142231941223145
    9. '```' → logprob: -4.0392231941223145
    10. ' =' → logprob: -4.5392231941223145

Token 1711: ' trailing' (ID: 57985)
  Prédit: 'slash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slash' → logprob: -0.32362449169158936
    2. ' trailing' → logprob: -1.9486244916915894
    3. 'tr' → logprob: -2.073624610900879
    4. '/' → logprob: -5.448624610900879
    5. '_tr' → logprob: -6.698624610900879
    6. ' slash' → logprob: -7.073624610900879
    7. 'a' → logprob: -7.198624610900879
    8. ' '/'' → logprob: -8.323624610900879
    9. ''/' → logprob: -8.323624610900879
    10. ''' → logprob: -9.073624610900879

Token 1712: ' '/'
' (ID: 176928)
  Prédit: '_sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sl' → logprob: -0.25307855010032654
    2. 'slash' → logprob: -1.503078579902649
    3. ' slash' → logprob: -7.253078460693359
    4. '_' → logprob: -8.00307846069336
    5. '/' → logprob: -9.75307846069336
    6. '```' → logprob: -11.12807846069336
    7. '`' → logprob: -11.25307846069336
    8. 'sl' → logprob: -11.75307846069336
    9. 'slashes' → logprob: -13.00307846069336
    10. 'Slash' → logprob: -13.00307846069336

Token 1713: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04283657297492027
    2. 'return' → logprob: -3.4178366661071777
    3. ' return' → logprob: -5.792836666107178
    4. '               ' → logprob: -5.792836666107178
    5. '           ' → logprob: -6.417836666107178
    6. '                       ' → logprob: -7.542836666107178
    7. '```' → logprob: -7.667836666107178
    8. '       ' → logprob: -8.16783618927002
    9. '   ' → logprob: -9.79283618927002
    10. '`' → logprob: -11.04283618927002

Token 1714: ' base' (ID: 3611)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2197762429714203
    2. '                   ' → logprob: -2.094776153564453
    3. 'if' → logprob: -2.719776153564453
    4. '                       ' → logprob: -5.844776153564453
    5. 'path' → logprob: -6.469776153564453
    6. '           ' → logprob: -6.469776153564453
    7. ' return' → logprob: -7.219776153564453
    8. '               ' → logprob: -7.969776153564453
    9. '       ' → logprob: -7.969776153564453
    10. ' if' → logprob: -8.344776153564453

Token 1715: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.03681681305170059
    2. 'path' → logprob: -3.5368168354034424
    3. ' =' → logprob: -5.286816596984863
    4. '=' → logprob: -7.036816596984863
    5. 'name' → logprob: -8.286816596984863
    6. '_' → logprob: -8.536816596984863
    7. '_name' → logprob: -8.786816596984863
    8. '=_' → logprob: -9.036816596984863
    9. '```' → logprob: -9.411816596984863
    10. 'Path' → logprob: -10.161816596984863

Token 1716: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08909954875707626
    2. '=' → logprob: -2.464099645614624
    3. '       ' → logprob: -9.964099884033203
    4. '_tokens' → logprob: -10.714099884033203
    5. '_parts' → logprob: -10.839099884033203
    6. 's' → logprob: -11.339099884033203
    7. '_segments' → logprob: -11.839099884033203
    8. '```' → logprob: -11.839099884033203
    9. ':' → logprob: -11.964099884033203
    10. '_' → logprob: -12.214099884033203

Token 1717: ' '/'' (ID: 39443)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.19491185247898102
    2. '"/' → logprob: -2.1949119567871094
    3. ''/' → logprob: -3.3199119567871094
    4. ' '/'' → logprob: -3.5699119567871094
    5. '           ' → logprob: -7.569911956787109
    6. ' "/"' → logprob: -8.81991195678711
    7. '('/' → logprob: -8.94491195678711
    8. '   ' → logprob: -9.19491195678711
    9. 'f' → logprob: -9.19491195678711
    10. '"' → logprob: -9.44491195678711

Token 1718: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5339406132698059
    2. ' +' → logprob: -0.9089406132698059
    3. '                   ' → logprob: -5.28394079208374
    4. ''/' → logprob: -6.15894079208374
    5. '+'/' → logprob: -6.28394079208374
    6. '           ' → logprob: -8.033940315246582
    7. '```' → logprob: -8.033940315246582
    8. '               ' → logprob: -8.533940315246582
    9. '"/' → logprob: -8.658940315246582
    10. ''' → logprob: -9.033940315246582

Token 1719: ' '/' (ID: 7041)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.0002929174806922674
    2. '"/' → logprob: -8.875292778015137
    3. ' '/' → logprob: -8.875292778015137
    4. '('/' → logprob: -11.625292778015137
    5. ' ' → logprob: -13.000292778015137
    6. '   ' → logprob: -13.500292778015137
    7. '           ' → logprob: -15.250292778015137
    8. '	' → logprob: -15.750292778015137
    9. '       ' → logprob: -16.000293731689453
    10. ''' → logprob: -16.125293731689453

Token 1720: ''.' (ID: 6120)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.03269950672984123
    2. '.join' → logprob: -4.0326995849609375
    3. '"/' → logprob: -5.1576995849609375
    4. ' '/' → logprob: -5.9076995849609375
    5. '           ' → logprob: -6.6576995849609375
    6. 'join' → logprob: -7.0326995849609375
    7. '('/' → logprob: -7.1576995849609375
    8. '   ' → logprob: -7.2826995849609375
    9. '       ' → logprob: -7.4076995849609375
    10. '```' → logprob: -7.9076995849609375

Token 1721: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.45848218582978e-06
    2. 'j' → logprob: -14.00000286102295
    3. ''.' → logprob: -14.50000286102295
    4. 'jo' → logprob: -14.62500286102295
    5. '.join' → logprob: -15.50000286102295
    6. ' join' → logprob: -15.50000286102295
    7. '```' → logprob: -16.125001907348633
    8. '   ' → logprob: -17.875001907348633
    9. ''/' → logprob: -18.000001907348633
    10. '(join' → logprob: -18.375001907348633

Token 1722: '(c' (ID: 2410)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -3.173704271830502e-06
    2. ' canonical' → logprob: -12.75000286102295
    3. '(c' → logprob: -16.250003814697266
    4. 'c' → logprob: -17.375003814697266
    5. '[' → logprob: -17.375003814697266
    6. 'stack' → logprob: -18.875003814697266
    7. '   ' → logprob: -18.875003814697266
    8. 'canon' → logprob: -19.750003814697266
    9. '[c' → logprob: -20.375003814697266
    10. '```' → logprob: -20.500003814697266

Token 1723: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -0.0017406281549483538
    2. 'canonical' → logprob: -6.376740455627441
    3. 'an' → logprob: -11.001740455627441
    4. 'a' → logprob: -12.126740455627441
    5. '```' → logprob: -12.126740455627441
    6. 'on' → logprob: -13.126740455627441
    7. 'anon' → logprob: -13.251740455627441
    8. '[' → logprob: -13.251740455627441
    9. 'anical' → logprob: -13.376740455627441
    10. 'onal' → logprob: -14.001740455627441

Token 1724: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.0042920843698084354
    2. 'dir' → logprob: -5.504292011260986
    3. 'segments' → logprob: -9.629292488098145
    4. 'Dir' → logprob: -9.879292488098145
    5. '
' → logprob: -10.879292488098145
    6. 'dirs' → logprob: -11.129292488098145
    7. '   ' → logprob: -11.504292488098145
    8. '_dirs' → logprob: -12.004292488098145
    9. '[' → logprob: -12.254292488098145
    10. 'dirname' → logprob: -12.629292488098145

Token 1725: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.074907287256792e-05
    2. '_dir' → logprob: -9.75006103515625
    3. '   ' → logprob: -13.75006103515625
    4. 'dir' → logprob: -14.37506103515625
    5. '1' → logprob: -16.00006103515625
    6. 'Dir' → logprob: -16.12506103515625
    7. '```' → logprob: -16.12506103515625
    8. '
' → logprob: -16.25006103515625
    9. '       ' → logprob: -16.50006103515625
    10. '_' → logprob: -17.00006103515625

Token 1726: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008982192724943161
    2. ')
' → logprob: -4.883982181549072
    3. ')+' → logprob: -6.883982181549072
    4. ')+'' → logprob: -8.25898265838623
    5. '       ' → logprob: -10.50898265838623
    6. '+' → logprob: -11.00898265838623
    7. ')

' → logprob: -11.50898265838623
    8. 'if' → logprob: -12.00898265838623
    9. '   ' → logprob: -12.38398265838623
    10. ').' → logprob: -12.63398265838623

Token 1727: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07746268063783646
    2. '       ' → logprob: -3.202462673187256
    3. '+' → logprob: -4.452462673187256
    4. '               ' → logprob: -4.827462673187256
    5. ' +' → logprob: -5.202462673187256
    6. 'if' → logprob: -6.202462673187256
    7. '                   ' → logprob: -6.327462673187256
    8. '/' → logprob: -6.327462673187256
    9. '                       ' → logprob: -6.327462673187256
    10. ' if' → logprob: -7.702462673187256

Token 1728: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006785589735955
    2. '       ' → logprob: -5.7567853927612305
    3. '           ' → logprob: -5.8817853927612305
    4. 'return' → logprob: -7.7567853927612305
    5. ' if' → logprob: -7.8817853927612305
    6. '               ' → logprob: -12.75678539276123
    7. '#' (adapté à ' #') → logprob: -13.88178539276123
    8. '   ' → logprob: -14.00678539276123
    9. '
' → logprob: -14.13178539276123
    10. '	if' → logprob: -14.38178539276123

Token 1729: ' multiple' (ID: 7598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007137430948205292
    2. 'return' → logprob: -7.62571382522583
    3. '       ' → logprob: -9.000713348388672
    4. '           ' → logprob: -9.500713348388672
    5. ' if' → logprob: -10.750713348388672
    6. '#' → logprob: -12.375713348388672
    7. '               ' → logprob: -13.750713348388672
    8. '                   ' → logprob: -15.125713348388672
    9. '   ' → logprob: -15.250713348388672
    10. '
' → logprob: -15.500713348388672

Token 1730: ' ending' (ID: 22013)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07476244866847992
    2. ' if' → logprob: -3.1997623443603516
    3. '
' → logprob: -4.574762344360352
    4. 'slashes' → logprob: -5.574762344360352
    5. 's' → logprob: -5.699762344360352
    6. 'base' → logprob: -5.824762344360352
    7. '#' → logprob: -6.449762344360352
    8. 'return' → logprob: -6.574762344360352
    9. '       ' → logprob: -7.074762344360352
    10. '   ' → logprob: -7.074762344360352

Token 1731: ' slash' (ID: 79755)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.007337672170251608
    2. 's' → logprob: -5.75733757019043
    3. ''' → logprob: -6.75733757019043
    4. '/
' → logprob: -6.88233757019043
    5. 'if' → logprob: -7.63233757019043
    6. 'slashes' → logprob: -7.75733757019043
    7. '/'' → logprob: -8.13233757019043
    8. '('/')' → logprob: -8.13233757019043
    9. ''/' → logprob: -8.63233757019043
    10. '('/')
' → logprob: -9.88233757019043

Token 1732: ' removal' (ID: 23201)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5167024731636047
    2. ' or' → logprob: -2.39170241355896
    3. ' +' → logprob: -2.64170241355896
    4. '+' → logprob: -2.76670241355896
    5. 'if' → logprob: -3.26670241355896
    6. 's' → logprob: -3.64170241355896
    7. ' /' → logprob: -3.89170241355896
    8. ' if' → logprob: -3.89170241355896
    9. ')' → logprob: -4.266702651977539
    10. '.rstrip' → logprob: -4.641702651977539

Token 1733: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2528839111328125
    2. 'if' → logprob: -1.3778839111328125
    3. 'while' → logprob: -1.3778839111328125
    4. '       ' → logprob: -3.0028839111328125
    5. '.rstrip' → logprob: -3.0028839111328125
    6. ' while' → logprob: -3.3778839111328125
    7. '
' → logprob: -3.5028839111328125
    8. ' =' → logprob: -4.1278839111328125
    9. 'rstrip' → logprob: -4.2528839111328125
    10. 'return' → logprob: -4.6278839111328125

Token 1734: ' minimize' (ID: 41776)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7032778859138489
    2. 'return' → logprob: -0.9532778859138489
    3. ' if' → logprob: -2.453277826309204
    4. ' return' → logprob: -3.578277826309204
    5. 'while' → logprob: -5.828278064727783
    6. 'base' → logprob: -6.703278064727783
    7. ' while' → logprob: -7.328278064727783
    8. '           ' → logprob: -8.328277587890625
    9. '       ' → logprob: -9.078277587890625
    10. ' base' → logprob: -9.453277587890625

Token 1735: ' representation' (ID: 22311)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.7685369253158569
    2. 'if' → logprob: -1.393536925315857
    3. ' if' → logprob: -2.3935370445251465
    4. '(base' → logprob: -2.5185370445251465
    5. ' base' → logprob: -3.5185370445251465
    6. 'return' → logprob: -4.1435370445251465
    7. 'rstrip' → logprob: -4.2685370445251465
    8. '
' → logprob: -4.7685370445251465
    9. '/base' → logprob: -5.0185370445251465
    10. 'while' → logprob: -5.5185370445251465

Token 1736: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12189639359712601
    2. ' if' → logprob: -2.996896505355835
    3. '           ' → logprob: -2.996896505355835
    4. 'while' → logprob: -4.871896266937256
    5. 'return' → logprob: -5.496896266937256
    6. '       ' → logprob: -5.996896266937256
    7. '               ' → logprob: -8.871896743774414
    8. 'base' → logprob: -8.871896743774414
    9. '```' → logprob: -9.371896743774414
    10. '                   ' → logprob: -9.496896743774414

Token 1737: ' directories' (ID: 58917)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.013455136679112911
    2. 'canonical' → logprob: -5.138454914093018
    3. 'path' → logprob: -6.263454914093018
    4. ' base' → logprob: -6.388454914093018
    5. 'the' → logprob: -6.888454914093018
    6. 'cons' → logprob: -7.013454914093018
    7. 'normal' → logprob: -7.513454914093018
    8. 'directory' → logprob: -8.388455390930176
    9. 'normalized' → logprob: -8.638455390930176
    10. '`' → logprob: -9.638455390930176

Token 1738: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6711522340774536
    2. 'if' → logprob: -1.4211522340774536
    3. ' if' → logprob: -1.9211522340774536
    4. '           ' → logprob: -3.046152114868164
    5. 'return' → logprob: -3.046152114868164
    6. '
' → logprob: -5.421152114868164
    7. ' return' → logprob: -7.546152114868164
    8. '               ' → logprob: -8.546152114868164
    9. 'while' → logprob: -9.171152114868164
    10. '   ' → logprob: -9.296152114868164

Token 1739: ' index' (ID: 3472)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.502480685710907
    2. 'index' → logprob: -2.5024807453155518
    3. 'out' → logprob: -2.6274807453155518
    4. '(base' → logprob: -2.8774807453155518
    5. 'if' → logprob: -3.2524807453155518
    6. 'no' → logprob: -3.5024807453155518
    7. ' no' → logprob: -3.7524807453155518
    8. ' base' → logprob: -3.8774807453155518
    9. '#' → logprob: -3.8774807453155518
    10. '''' → logprob: -4.252480506896973

Token 1740: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.11581341922283173
    2. '/' → logprob: -3.2408134937286377
    3. '_html' → logprob: -4.115813255310059
    4. '_path' → logprob: -4.365813255310059
    5. '')' → logprob: -4.740813255310059
    6. '_' → logprob: -4.990813255310059
    7. 'html' → logprob: -5.115813255310059
    8. '```' → logprob: -5.490813255310059
    9. ')' → logprob: -5.615813255310059
    10. '''' → logprob: -6.115813255310059

Token 1741: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08180386573076248
    2. '       ' → logprob: -2.956803798675537
    3. ' if' → logprob: -4.081803798675537
    4. 'return' → logprob: -5.081803798675537
    5. '           ' → logprob: -5.831803798675537
    6. '
' → logprob: -7.956803798675537
    7. '```' → logprob: -8.956804275512695
    8. '               ' → logprob: -10.831804275512695
    9. '``' → logprob: -11.456804275512695
    10. 'while' → logprob: -11.956804275512695

Token 1742: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04111922159790993
    2. '       ' → logprob: -4.16611909866333
    3. '                   ' → logprob: -4.54111909866333
    4. 'if' → logprob: -4.79111909866333
    5. ' if' → logprob: -5.91611909866333
    6. '               ' → logprob: -6.29111909866333
    7. 'return' → logprob: -6.79111909866333
    8. '   ' → logprob: -9.791119575500488
    9. '```' → logprob: -10.166119575500488
    10. '                       ' → logprob: -10.916119575500488

Token 1743: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06711415946483612
    2. 'return' (adapté à ' return') → logprob: -2.8171141147613525
    3. '           ' → logprob: -5.942114353179932
    4. ' if' → logprob: -6.442114353179932
    5. '       ' → logprob: -7.067114353179932
    6. '               ' → logprob: -10.692113876342773
    7. ' return' → logprob: -11.192113876342773
    8. '                   ' → logprob: -11.317113876342773
    9. '
' → logprob: -12.317113876342773
    10. '                       ' → logprob: -12.942113876342773

Token 1744: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.004105827305465937
    2. ' base' → logprob: -5.504106044769287
    3. '(base' → logprob: -11.004105567932129
    4. '''' → logprob: -12.004105567932129
    5. ''' → logprob: -13.504105567932129
    6. '   ' → logprob: -13.629105567932129
    7. '	base' → logprob: -14.254105567932129
    8. ''/' → logprob: -14.629105567932129
    9. ' '/'' → logprob: -15.754105567932129
    10. '(' → logprob: -16.004106521606445

Token 1745: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -9.805981972021982e-05
    2. 'path' → logprob: -9.25009822845459
    3. '_' → logprob: -14.12509822845459
    4. '`' → logprob: -15.62509822845459
    5. 'Path' → logprob: -15.87509822845459
    6. '_pat' → logprob: -16.000097274780273
    7. '
' → logprob: -16.375097274780273
    8. '_p' → logprob: -16.375097274780273
    9. '```' → logprob: -16.375097274780273
    10. '_PATH' → logprob: -16.500097274780273

Token 1746: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1293891817331314
    2. ' +' → logprob: -3.3793892860412598
    3. '+' → logprob: -3.6293892860412598
    4. '<|end|>' → logprob: -4.00438928604126
    5. ' if' → logprob: -4.12938928604126
    6. '/' → logprob: -4.75438928604126
    7. '.rstrip' → logprob: -5.25438928604126
    8. '
' → logprob: -5.75438928604126
    9. '               ' → logprob: -6.25438928604126
    10. '           ' → logprob: -7.00438928604126

Token 1747: ' base' (ID: 3611)
  Prédit: 'pathname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pathname' → logprob: -0.20588819682598114
    2. 'base' → logprob: -1.9558881521224976
    3. 'self' → logprob: -3.705888271331787
    4. 'not' → logprob: -5.330888271331787
    5. ' pathname' → logprob: -5.330888271331787
    6. 'path' → logprob: -5.580888271331787
    7. '(base' → logprob: -5.830888271331787
    8. '(not' → logprob: -6.955888271331787
    9. '(' → logprob: -7.955888271331787
    10. 'canonical' → logprob: -8.205887794494629

Token 1748: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0002457238151691854
    2. 'path' → logprob: -8.750246047973633
    3. '```' → logprob: -11.000246047973633
    4. '   ' → logprob: -11.375246047973633
    5. '_segments' → logprob: -11.375246047973633
    6. '.endswith' → logprob: -11.875246047973633
    7. 'base' → logprob: -12.000246047973633
    8. '==' → logprob: -12.000246047973633
    9. '[-' → logprob: -12.750246047973633
    10. 'ends' → logprob: -13.125246047973633

Token 1749: ' !=' (ID: 1666)
  Prédit: '.endswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.endswith' → logprob: -0.12931062281131744
    2. '==' → logprob: -2.1293106079101562
    3. '[-' → logprob: -6.379310607910156
    4. ' ==' → logprob: -8.004310607910156
    5. 'ends' → logprob: -8.254310607910156
    6. '.rstrip' → logprob: -10.754310607910156
    7. '==-' → logprob: -10.879310607910156
    8. '!=' → logprob: -11.129310607910156
    9. '```' → logprob: -11.629310607910156
    10. 'or' → logprob: -11.879310607910156

Token 1750: ' ''' (ID: 8686)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -8.578184497309849e-05
    2. '"/' → logprob: -10.000085830688477
    3. ''/' → logprob: -10.375085830688477
    4. ' '/'' → logprob: -11.625085830688477
    5. '/' → logprob: -17.250085830688477
    6. ''''' → logprob: -17.375085830688477
    7. '   ' → logprob: -17.750085830688477
    8. ''#' → logprob: -17.875085830688477
    9. '('/')' → logprob: -18.000085830688477
    10. '''' → logprob: -18.125085830688477

Token 1751: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.007167135830968618
    2. ' else' → logprob: -5.007167339324951
    3. '+' → logprob: -7.882167339324951
    4. 'and' → logprob: -10.132166862487793
    5. ' +' → logprob: -11.882166862487793
    6. '/' → logprob: -12.132166862487793
    7. 'or' → logprob: -12.507166862487793
    8. '          ' → logprob: -12.507166862487793
    9. '   ' → logprob: -12.882166862487793
    10. '       ' → logprob: -12.882166862487793

Token 1752: ' '/'
' (ID: 176928)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07334066182374954
    2. ''/' → logprob: -3.073340654373169
    3. '/' → logprob: -3.823340654373169
    4. '"/' → logprob: -6.573340892791748
    5. '/'' → logprob: -6.823340892791748
    6. ' '/'' → logprob: -9.69834041595459
    7. '('/')' → logprob: -10.32334041595459
    8. 'slash' → logprob: -12.07334041595459
    9. '/
' → logprob: -13.44834041595459
    10. '/')' → logprob: -13.82334041595459

Token 1753: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7172691822052002
    2. '<|end|>' → logprob: -1.0922691822052002
    3. '           ' → logprob: -2.8422691822052
    4. '/' → logprob: -3.0922691822052
    5. '               ' → logprob: -3.3422691822052
    6. '.' → logprob: -4.592268943786621
    7. '
' → logprob: -5.092268943786621
    8. 'else' → logprob: -5.467268943786621
    9. 'return' → logprob: -5.967268943786621
    10. ' else' → logprob: -6.342268943786621

Token 1754: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05533400550484657
    2. '       ' → logprob: -3.6803340911865234
    3. '
' → logprob: -3.9303340911865234
    4. 'else' (adapté à ' else') → logprob: -5.305334091186523
    5. '               ' → logprob: -6.555334091186523
    6. ' else' → logprob: -7.055334091186523
    7. 'return' → logprob: -7.305334091186523
    8. '        
' → logprob: -7.555334091186523
    9. '            
' → logprob: -8.430334091186523
    10. '    
' → logprob: -9.430334091186523

Token 1755: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02245921455323696
    2. ':
' → logprob: -3.8974592685699463
    3. ':' → logprob: -6.772459030151367
    4. '               ' → logprob: -7.647459030151367
    5. ':return' → logprob: -9.647459030151367
    6. '                       ' → logprob: -9.772459030151367
    7. '           ' → logprob: -10.022459030151367
    8. 'return' → logprob: -10.022459030151367
    9. '                  ' → logprob: -10.647459030151367
    10. ' return' → logprob: -10.647459030151367

Token 1756: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009122769348323345
    2. '               ' → logprob: -5.259122848510742
    3. 'return' → logprob: -5.759122848510742
    4. '           ' → logprob: -7.259122848510742
    5. '                       ' → logprob: -11.259122848510742
    6. ' return' → logprob: -11.884122848510742
    7. '```' → logprob: -13.384122848510742
    8. '                  ' → logprob: -14.259122848510742
    9. '   ' → logprob: -14.634122848510742
    10. '       ' → logprob: -14.634122848510742

Token 1757: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006070760078728199
    2. '                   ' → logprob: -5.506070613861084
    3. ' return' → logprob: -6.256070613861084
    4. '               ' → logprob: -10.006071090698242
    5. '           ' → logprob: -11.006071090698242
    6. '                       ' → logprob: -12.006071090698242
    7. '   ' → logprob: -12.881071090698242
    8. '       ' → logprob: -14.631071090698242
    9. '	return' → logprob: -15.006071090698242
    10. '#' (adapté à ' #') → logprob: -16.131071090698242

Token 1758: ' directory' (ID: 12552)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.000523842521943152
    2. ' return' → logprob: -7.875524044036865
    3. '                   ' → logprob: -9.000523567199707
    4. '#' → logprob: -11.250523567199707
    5. '               ' → logprob: -12.625523567199707
    6. '           ' → logprob: -13.000523567199707
    7. '                       ' → logprob: -13.500523567199707
    8. '   ' → logprob: -15.875523567199707
    9. '       ' → logprob: -16.250524520874023
    10. '                 ' → logprob: -16.500524520874023

Token 1759: ' is' (ID: 382)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5740612745285034
    2. ' path' → logprob: -1.3240612745285034
    3. '_path' → logprob: -2.574061393737793
    4. 'name' → logprob: -3.074061393737793
    5. '_exists' → logprob: -4.074061393737793
    6. ' not' → logprob: -5.449061393737793
    7. '_segments' → logprob: -5.449061393737793
    8. '_name' → logprob: -5.949061393737793
    9. 'exists' → logprob: -5.949061393737793
    10. ' name' → logprob: -6.074061393737793

Token 1760: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.33607009053230286
    2. ' not' → logprob: -1.3360700607299805
    3. 'invalid' → logprob: -4.5860700607299805
    4. ' None' → logprob: -5.7110700607299805
    5. 'False' → logprob: -5.8360700607299805
    6. ' invalid' → logprob: -5.9610700607299805
    7. 'None' → logprob: -6.0860700607299805
    8. ' False' → logprob: -7.2110700607299805
    9. 'valid' → logprob: -9.58607006072998
    10. ' valid' → logprob: -9.83607006072998

Token 1761: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02865361049771309
    2. ' a' → logprob: -3.653653621673584
    3. 'valid' → logprob: -6.903653621673584
    4. 'page' → logprob: -7.903653621673584
    5. ' valid' → logprob: -8.153653144836426
    6. 'afile' → logprob: -8.278653144836426
    7. 'file' → logprob: -8.903653144836426
    8. 'an' → logprob: -9.278653144836426
    9. 'consider' → logprob: -9.903653144836426
    10. ' considered' → logprob: -10.278653144836426

Token 1762: ' page' (ID: 3011)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.045869965106248856
    2. 'valid' → logprob: -3.920870065689087
    3. 'web' → logprob: -3.920870065689087
    4. 'file' → logprob: -5.420869827270508
    5. 'path' → logprob: -8.295869827270508
    6. ' page' → logprob: -8.420869827270508
    7. ' valid' → logprob: -9.045869827270508
    8. 'directory' → logprob: -9.670869827270508
    9. ' web' → logprob: -9.795869827270508
    10. 'leaf' → logprob: -11.045869827270508

Token 1763: ' by' (ID: 656)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009505256894044578
    2. '               ' → logprob: -7.750950336456299
    3. 'return' → logprob: -8.875950813293457
    4. '           ' → logprob: -9.000950813293457
    5. '
' → logprob: -9.875950813293457
    6. ' return' → logprob: -9.875950813293457
    7. '                       ' → logprob: -10.000950813293457
    8. '                    
' → logprob: -10.125950813293457
    9. '```' → logprob: -10.750950813293457
    10. ',' → logprob: -11.375950813293457

Token 1764: ' itself' (ID: 8807)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.9096438884735107
    2. 'index' → logprob: -1.2846438884735107
    3. 'file' → logprob: -1.4096438884735107
    4. ' itself' → logprob: -3.5346438884735107
    5. 'the' → logprob: -4.03464412689209
    6. 'having' → logprob: -5.03464412689209
    7. 'exist' → logprob: -5.28464412689209
    8. 'filename' → logprob: -5.78464412689209
    9. 'presence' → logprob: -6.15964412689209
    10. 'lack' → logprob: -6.40964412689209

Token 1765: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00182214321102947
    2. '               ' → logprob: -7.751821994781494
    3. ' return' → logprob: -8.251822471618652
    4. '
' → logprob: -8.376822471618652
    5. '           ' → logprob: -8.501822471618652
    6. 'return' → logprob: -8.626822471618652
    7. '                       ' → logprob: -8.626822471618652
    8. ',' → logprob: -9.126822471618652
    9. '                    
' → logprob: -9.251822471618652
    10. ':
' → logprob: -11.126822471618652

Token 1766: 'no' (ID: 1750)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2847811281681061
    2. '                   ' → logprob: -2.4097812175750732
    3. ')
' → logprob: -3.1597812175750732
    4. ' return' → logprob: -3.1597812175750732
    5. ')' → logprob: -3.7847812175750732
    6. 'no' → logprob: -4.534780979156494
    7. ' no' → logprob: -4.534780979156494
    8. '
' → logprob: -5.284780979156494
    9. '):
' → logprob: -5.409780979156494
    10. '#' → logprob: -5.534780979156494

Token 1767: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.049112312495708466
    2. ' index' → logprob: -3.049112319946289
    3. 'file' → logprob: -8.174112319946289
    4. ' file' → logprob: -9.674112319946289
    5. '/index' → logprob: -9.799112319946289
    6. '   ' → logprob: -10.424112319946289
    7. '
' → logprob: -10.799112319946289
    8. '       ' → logprob: -11.424112319946289
    9. '#index' → logprob: -11.424112319946289
    10. ')' → logprob: -12.049112319946289

Token 1768: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.0021596604492515326
    2. '_file' → logprob: -6.252159595489502
    3. ').' → logprob: -10.00216007232666
    4. ''.' → logprob: -10.12716007232666
    5. 'file' → logprob: -10.12716007232666
    6. '<html' → logprob: -11.37716007232666
    7. 'html' → logprob: -11.62716007232666
    8. '           ' → logprob: -11.75216007232666
    9. '   ' → logprob: -11.75216007232666
    10. 'File' → logprob: -11.87716007232666

Token 1769: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.024866269901394844
    2. '')
' → logprob: -4.899866104125977
    3. '               ' → logprob: -5.024866104125977
    4. '                   ' → logprob: -5.149866104125977
    5. ')' → logprob: -5.899866104125977
    6. '),' → logprob: -7.024866104125977
    7. '           ' → logprob: -7.649866104125977
    8. '       ' → logprob: -9.399866104125977
    9. '):
' → logprob: -9.399866104125977
    10. '')' → logprob: -9.524866104125977

Token 1770: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00016384923947043717
    2. '               ' → logprob: -9.750164031982422
    3. 'return' → logprob: -10.000164031982422
    4. '           ' → logprob: -10.875164031982422
    5. ' return' → logprob: -11.500164031982422
    6. '                       ' → logprob: -11.625164031982422
    7. '				' → logprob: -12.250164031982422
    8. '                  ' → logprob: -12.375164031982422
    9. '                    
' → logprob: -12.500164031982422
    10. '
' → logprob: -13.000164031982422

Token 1771: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25435730814933777
    2. '                   ' → logprob: -1.5043573379516602
    3. '               ' → logprob: -7.00435733795166
    4. ' return' → logprob: -7.37935733795166
    5. '           ' → logprob: -7.75435733795166
    6. '                       ' → logprob: -8.00435733795166
    7. '   ' → logprob: -9.25435733795166
    8. '       ' → logprob: -10.50435733795166
    9. ':return' → logprob: -13.62935733795166
    10. '	return' → logprob: -13.75435733795166

Token 1772: ' so' (ID: 813)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015958821401000023
    2. ' return' → logprob: -5.015958786010742
    3. '                   ' → logprob: -5.015958786010742
    4. 'if' → logprob: -6.515958786010742
    5. '           ' → logprob: -7.890958786010742
    6. '#' → logprob: -8.015958786010742
    7. '               ' → logprob: -8.265958786010742
    8. '       ' → logprob: -9.640958786010742
    9. ' if' → logprob: -10.765958786010742
    10. '   ' → logprob: -10.890958786010742

Token 1773: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.043503209948539734
    2. ' return' → logprob: -3.1685032844543457
    3. '                   ' → logprob: -8.293502807617188
    4. 'None' → logprob: -8.543502807617188
    5. ' None' → logprob: -10.793502807617188
    6. '#' → logprob: -11.543502807617188
    7. 'if' → logprob: -11.668502807617188
    8. ' if' → logprob: -12.043502807617188
    9. '                       ' → logprob: -12.418502807617188
    10. ':return' → logprob: -12.918502807617188

Token 1774: ' web' (ID: 1880)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3071269392967224
    2. ' page' → logprob: -2.182126998901367
    3. 'return' → logprob: -2.432126998901367
    4. 'page' → logprob: -2.932126998901367
    5. ' valid' → logprob: -5.432126998901367
    6. ' file' → logprob: -6.057126998901367
    7. 'file' → logprob: -7.307126998901367
    8. ' web' → logprob: -7.557126998901367
    9. 'valid' → logprob: -8.057126998901367
    10. ' further' → logprob: -8.057126998901367

Token 1775: ' page' (ID: 3011)
  Prédit: '_page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_page' → logprob: -0.17481453716754913
    2. 'page' → logprob: -1.9248145818710327
    3. '_' → logprob: -4.424814701080322
    4. ' page' → logprob: -6.674814701080322
    5. '_path' → logprob: -6.924814701080322
    6. 'site' → logprob: -9.799814224243164
    7. ' _' → logprob: -10.049814224243164
    8. '_site' → logprob: -10.424814224243164
    9. 'path' → logprob: -10.549814224243164
    10. '_p' → logprob: -10.674814224243164

Token 1776: ' exists' (ID: 13031)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7243945598602295
    2. '                   ' → logprob: -1.3493945598602295
    3. ' return' → logprob: -2.2243945598602295
    4. '               ' → logprob: -3.0993945598602295
    5. ' exists' → logprob: -3.8493945598602295
    6. '
' → logprob: -3.9743945598602295
    7. '           ' → logprob: -3.9743945598602295
    8. '```' → logprob: -3.9743945598602295
    9. '       ' → logprob: -4.849394798278809
    10. '                       ' → logprob: -5.474394798278809

Token 1777: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022986415773630142
    2. '                   ' → logprob: -3.89798641204834
    3. '               ' → logprob: -6.39798641204834
    4. '       ' → logprob: -7.64798641204834
    5. 'return' → logprob: -8.64798641204834
    6. '
' → logprob: -9.52298641204834
    7. '                       ' → logprob: -11.27298641204834
    8. ' return' → logprob: -11.89798641204834
    9. '.' → logprob: -12.14798641204834
    10. '```' → logprob: -12.14798641204834

Token 1778: ' this' (ID: 495)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.22861561179161072
    2. 'all' → logprob: -2.6036155223846436
    3. ' that' → logprob: -2.7286155223846436
    4. ' this' → logprob: -3.7286155223846436
    5. 'that' → logprob: -3.8536155223846436
    6. ' last' → logprob: -4.603615760803223
    7. 'this' → logprob: -5.478615760803223
    8. 'last' → logprob: -6.228615760803223
    9. 'possible' → logprob: -6.353615760803223
    10. ' the' → logprob: -7.228615760803223

Token 1779: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.745620608329773
    2. 'point' → logprob: -0.870620608329773
    3. ' point' → logprob: -2.6206207275390625
    4. ' path' → logprob: -3.4956207275390625
    5. 'segment' → logprob: -6.4956207275390625
    6. '_path' → logprob: -7.6206207275390625
    7. 'directory' → logprob: -7.8706207275390625
    8. 'token' → logprob: -8.495620727539062
    9. '           ' → logprob: -8.745620727539062
    10. ' segment' → logprob: -8.745620727539062

Token 1780: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5867676734924316
    2. '           ' → logprob: -0.8367676734924316
    3. '
' → logprob: -5.086767673492432
    4. '               ' → logprob: -5.711767673492432
    5. 'return' → logprob: -6.961767673492432
    6. '       ' → logprob: -8.836767196655273
    7. '                       ' → logprob: -9.461767196655273
    8. ' return' → logprob: -10.086767196655273
    9. '   ' → logprob: -11.586767196655273
    10. ',' → logprob: -11.711767196655273

Token 1781: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004168033599853516
    2. '           ' → logprob: -5.7541680335998535
    3. '               ' → logprob: -7.1291680335998535
    4. '       ' → logprob: -9.379167556762695
    5. 'return' → logprob: -9.754167556762695
    6. '
' → logprob: -11.004167556762695
    7. '                       ' → logprob: -11.129167556762695
    8. '```' → logprob: -11.254167556762695
    9. '   ' → logprob: -14.254167556762695
    10. ' return' → logprob: -14.879167556762695

Token 1782: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003401094349101186
    2. '                   ' → logprob: -5.753401279449463
    3. ' return' → logprob: -8.503400802612305
    4. '               ' → logprob: -12.128400802612305
    5. '           ' → logprob: -12.378400802612305
    6. 'None' → logprob: -12.503400802612305
    7. '                       ' → logprob: -13.003400802612305
    8. '	return' → logprob: -13.253400802612305
    9. '   ' → logprob: -13.753400802612305
    10. '{return' → logprob: -14.003400802612305

Token 1783: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.615255839889869e-05
    2. ' None' → logprob: -9.250096321105957
    3. '_None' → logprob: -18.75009536743164
    4. '(None' → logprob: -20.25009536743164
    5. '=None' → logprob: -21.75009536743164
    6. ',None' → logprob: -22.25009536743164
    7. '   ' → logprob: -22.75009536743164
    8. '
' → logprob: -22.75009536743164
    9. '```' → logprob: -22.75009536743164
    10. '.None' → logprob: -22.87509536743164

Token 1784: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018985437229275703
    2. '        
' → logprob: -4.518985271453857
    3. '    
' → logprob: -5.768985271453857
    4. '
' → logprob: -5.768985271453857
    5. '   ' → logprob: -7.018985271453857
    6. '```' → logprob: -8.268985748291016
    7. ')' → logprob: -8.893985748291016
    8. '           ' → logprob: -9.143985748291016
    9. '        ' → logprob: -9.268985748291016
    10. '    ' → logprob: -10.268985748291016

Token 1785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005491891410201788
    2. '        
' → logprob: -5.755491733551025
    3. '
' → logprob: -7.005491733551025
    4. '    
' → logprob: -7.380491733551025
    5. '   ' → logprob: -7.630491733551025
    6. '```' → logprob: -9.005492210388184
    7. '           ' → logprob: -9.630492210388184
    8. '        ' → logprob: -10.755492210388184
    9. ')' → logprob: -11.005492210388184
    10. '            
' → logprob: -11.630492210388184

Token 1786: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008485148660838604
    2. '        
' → logprob: -5.008485317230225
    3. '    
' → logprob: -7.383485317230225
    4. '
' → logprob: -8.133484840393066
    5. '```' → logprob: -8.133484840393066
    6. '   ' → logprob: -8.383484840393066
    7. ')' → logprob: -9.508484840393066
    8. 'return' → logprob: -9.508484840393066
    9. '           ' → logprob: -10.383484840393066
    10. 'token' → logprob: -10.633484840393066

Token 1787: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5536713004112244
    2. ':
' → logprob: -1.4286713600158691
    3. '       ' → logprob: -2.178671360015869
    4. ' if' → logprob: -3.178671360015869
    5. ' and' → logprob: -4.678671360015869
    6. '           ' → logprob: -5.053671360015869
    7. '        ' → logprob: -5.053671360015869
    8. '        
' → logprob: -6.178671360015869
    9. '[' → logprob: -6.553671360015869
    10. ',' → logprob: -7.303671360015869

Token 1788: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04326099529862404
    2. 'file' → logprob: -3.7932610511779785
    3. '#' → logprob: -4.9182610511779785
    4. 'parent' → logprob: -5.7932610511779785
    5. ' file' → logprob: -5.9182610511779785
    6. 'for' → logprob: -6.0432610511779785
    7. 'if' → logprob: -6.5432610511779785
    8. ' parent' → logprob: -6.7932610511779785
    9. ' if' → logprob: -7.2932610511779785
    10. ' for' → logprob: -7.7932610511779785

Token 1789: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8048649430274963
    2. '       ' → logprob: -1.3048648834228516
    3. '#' (adapté à ' #') → logprob: -1.4298648834228516
    4. 'file' → logprob: -3.8048648834228516
    5. '           ' → logprob: -4.304864883422852
    6. 'parent' → logprob: -5.679864883422852
    7. 'canonical' → logprob: -6.429864883422852
    8. ' if' → logprob: -7.554864883422852
    9. ' #' → logprob: -8.179864883422852
    10. 'files' → logprob: -9.054864883422852

Token 1790: ' Hyp' (ID: 59608)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29287439584732056
    2. '#' → logprob: -1.5428743362426758
    3. 'parent' → logprob: -3.542874336242676
    4. 'file' → logprob: -5.167874336242676
    5. '       ' → logprob: -6.292874336242676
    6. '           ' → logprob: -6.667874336242676
    7. 'canonical' → logprob: -6.667874336242676
    8. 'dir' → logprob: -8.542874336242676
    9. 'candidate' → logprob: -8.792874336242676
    10. 'possible' → logprob: -9.542874336242676

Token 1791: '1' (ID: 16)
  Prédit: 'othesis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'othesis' → logprob: -0.0144536467269063
    2. '1' → logprob: -4.389453411102295
    3. 'th' → logprob: -7.639453411102295
    4. 'ot' → logprob: -8.389453887939453
    5. '       ' → logprob: -8.389453887939453
    6. '           ' → logprob: -8.514453887939453
    7. '#' → logprob: -8.639453887939453
    8. 'oth' → logprob: -8.889453887939453
    9. '   ' → logprob: -9.139453887939453
    10. 'otype' → logprob: -9.639453887939453

Token 1792: ' parent' (ID: 5980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1667813062667847
    2. '_parent' → logprob: -1.1667813062667847
    3. ' =' → logprob: -1.5417813062667847
    4. '           ' → logprob: -3.166781425476074
    5. '_dir' → logprob: -3.291781425476074
    6. '_path' → logprob: -3.416781425476074
    7. ' if' → logprob: -5.041781425476074
    8. '_dirs' → logprob: -5.291781425476074
    9. '_segments' → logprob: -5.291781425476074
    10. ' parent' → logprob: -5.541781425476074

Token 1793: ' directory' (ID: 12552)
  Prédit: '_dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dirs' → logprob: -0.0738874152302742
    2. '1' → logprob: -2.948887348175049
    3. 'dirs' → logprob: -4.823887348175049
    4. '       ' → logprob: -6.073887348175049
    5. ' =' → logprob: -6.073887348175049
    6. '_paths' → logprob: -6.948887348175049
    7. '
' → logprob: -7.323887348175049
    8. '_d' → logprob: -7.323887348175049
    9. '```' → logprob: -7.323887348175049
    10. '_dir' → logprob: -7.573887348175049

Token 1794: ' exists' (ID: 13031)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28529343008995056
    2. '.append' → logprob: -2.9102933406829834
    3. ':' → logprob: -3.1602933406829834
    4. '_path' → logprob: -3.5352933406829834
    5. '=' → logprob: -3.6602933406829834
    6. '_exists' → logprob: -4.2852935791015625
    7. 'exists' → logprob: -4.7852935791015625
    8. '2' → logprob: -4.7852935791015625
    9. '_segments' → logprob: -4.7852935791015625
    10. ')' → logprob: -5.0352935791015625

Token 1795: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.903049647808075
    2. ' if' → logprob: -1.4030497074127197
    3. '           ' → logprob: -2.2780497074127197
    4. ',' → logprob: -2.5280497074127197
    5. '
' → logprob: -2.7780497074127197
    6. ' and' → logprob: -3.4030497074127197
    7. ',
' → logprob: -4.028049468994141
    8. ' for' → logprob: -5.028049468994141
    9. '        
' → logprob: -5.028049468994141
    10. ')' → logprob: -5.153049468994141

Token 1796: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09520893543958664
    2. ',' → logprob: -3.8452088832855225
    3. ' and' → logprob: -3.8452088832855225
    4. '
' → logprob: -4.095209121704102
    5. ' if' → logprob: -4.720209121704102
    6. '       ' → logprob: -4.720209121704102
    7. ':
' → logprob: -5.595209121704102
    8. ',
' → logprob: -5.720209121704102
    9. '            
' → logprob: -6.720209121704102
    10. '```' → logprob: -6.845209121704102

Token 1797: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23185379803180695
    2. 'file' → logprob: -1.7318538427352905
    3. '           ' → logprob: -4.35685396194458
    4. '       ' → logprob: -5.10685396194458
    5. 'files' → logprob: -5.23185396194458
    6. '#' (adapté à ' #') → logprob: -5.98185396194458
    7. 'is' → logprob: -7.10685396194458
    8. ' if' → logprob: -7.48185396194458
    9. 'filename' → logprob: -7.73185396194458
    10. 'exists' → logprob: -7.85685396194458

Token 1798: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5403656363487244
    2. 'file' → logprob: -0.9153656363487244
    3. '#' → logprob: -4.915365695953369
    4. 'possible' → logprob: -5.790365695953369
    5. 'full' → logprob: -6.290365695953369
    6. 'is' → logprob: -6.665365695953369
    7. 'filename' → logprob: -7.040365695953369
    8. 'canonical' → logprob: -7.040365695953369
    9. '           ' → logprob: -7.790365695953369
    10. 'candidate' → logprob: -8.165365219116211

Token 1799: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07897736877202988
    2. ' if' → logprob: -2.578977346420288
    3. '           ' → logprob: -9.703977584838867
    4. ' =' → logprob: -11.453977584838867
    5. '       ' → logprob: -12.203977584838867
    6. '   ' → logprob: -12.703977584838867
    7. 'file' → logprob: -13.078977584838867
    8. '=' → logprob: -13.203977584838867
    9. 'self' → logprob: -13.453977584838867
    10. '               ' → logprob: -13.953977584838867

Token 1800: ' file' (ID: 1974)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016543833538889885
    2. ' self' → logprob: -4.141543865203857
    3. '           ' → logprob: -8.5165433883667
    4. 'possible' → logprob: -8.5165433883667
    5. '               ' → logprob: -10.7665433883667
    6. '       ' → logprob: -10.8915433883667
    7. 'file' → logprob: -11.3915433883667
    8. '   ' → logprob: -11.6415433883667
    9. '                   ' → logprob: -11.7665433883667
    10. 'not' → logprob: -11.7665433883667

Token 1801: ' exists' (ID: 13031)
  Prédit: '_exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_exists' → logprob: -0.03651250898838043
    2. 'exists' → logprob: -3.411512613296509
    3. ' =' → logprob: -6.16151237487793
    4. '_name' → logprob: -8.28651237487793
    5. '_path' → logprob: -8.91151237487793
    6. '=' → logprob: -9.41151237487793
    7. '_present' → logprob: -9.66151237487793
    8. 'name' → logprob: -10.41151237487793
    9. '_exist' → logprob: -10.53651237487793
    10. '   ' → logprob: -10.91151237487793

Token 1802: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05129745602607727
    2. '(c' → logprob: -3.051297426223755
    3. ' =' → logprob: -7.301297664642334
    4. ',' → logprob: -7.426297664642334
    5. '       ' → logprob: -8.051297187805176
    6. ' in' → logprob: -8.801297187805176
    7. '(se' → logprob: -8.926297187805176
    8. '(parent' → logprob: -9.051297187805176
    9. '               ' → logprob: -9.051297187805176
    10. ' (' → logprob: -9.176297187805176

Token 1803: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2560940682888031
    2. '(c' → logprob: -2.381093978881836
    3. ' =' → logprob: -2.756093978881836
    4. '=' → logprob: -3.381093978881836
    5. 'in' → logprob: -3.756093978881836
    6. ' in' → logprob: -4.881093978881836
    7. '       ' → logprob: -5.631093978881836
    8. '               ' → logprob: -8.006093978881836
    9. ',' → logprob: -8.381093978881836
    10. ':' → logprob: -8.756093978881836

Token 1804: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001442972687073052
    2. '           ' → logprob: -7.126442909240723
    3. ' if' → logprob: -7.501442909240723
    4. 'file' → logprob: -10.251442909240723
    5. '       ' → logprob: -10.376442909240723
    6. 'exists' → logprob: -11.001442909240723
    7. '```' → logprob: -13.626442909240723
    8. '   ' → logprob: -14.751442909240723
    9. 'filename' → logprob: -14.876442909240723
    10. 'is' → logprob: -15.001442909240723

Token 1805: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06172889098525047
    2. 'not' → logprob: -3.5617289543151855
    3. ' self' → logprob: -3.5617289543151855
    4. ' not' → logprob: -5.8117289543151855
    5. '           ' → logprob: -9.811728477478027
    6. '   ' → logprob: -11.436728477478027
    7. '       ' → logprob: -12.186728477478027
    8. '(self' → logprob: -12.561728477478027
    9. ' ' → logprob: -13.061728477478027
    10. '	self' → logprob: -13.061728477478027

Token 1806: '.fs' (ID: 82179)
  Prédit: '.fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fs' → logprob: -7.703443770878948e-06
    2. 'fs' → logprob: -12.500007629394531
    3. '	fs' → logprob: -13.875007629394531
    4. '.' → logprob: -14.500007629394531
    5. '           ' → logprob: -14.500007629394531
    6. ' .' → logprob: -14.750007629394531
    7. '   ' → logprob: -14.875007629394531
    8. '       ' → logprob: -14.875007629394531
    9. ' fs' → logprob: -15.000007629394531
    10. '.fc' → logprob: -15.750007629394531

Token 1807: '.file' (ID: 17613)
  Prédit: '.file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.file' → logprob: -0.0006974232383072376
    2. 'file' → logprob: -7.500697612762451
    3. '           ' → logprob: -9.625697135925293
    4. '.' → logprob: -10.375697135925293
    5. '.has' → logprob: -11.250697135925293
    6. '   ' → logprob: -11.500697135925293
    7. ' .' → logprob: -12.125697135925293
    8. '       ' → logprob: -12.625697135925293
    9. '_file' → logprob: -12.625697135925293
    10. ' file' → logprob: -12.750697135925293

Token 1808: '_exists' (ID: 23519)
  Prédit: '_exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exists' → logprob: -6.599403423024341e-05
    2. 'Exists' → logprob: -10.000065803527832
    3. 'exists' → logprob: -11.625065803527832
    4. '_segments' → logprob: -11.750065803527832
    5. '```' → logprob: -13.375065803527832
    6. '_EXISTS' → logprob: -13.750065803527832
    7. 's' → logprob: -15.000065803527832
    8. '_has' → logprob: -15.250065803527832
    9. '.exists' → logprob: -15.875065803527832
    10. '_exist' → logprob: -16.25006675720215

Token 1809: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.6457742175552994e-05
    2. 'canonical' → logprob: -9.875056266784668
    3. ' canonical' → logprob: -12.875056266784668
    4. ' (' → logprob: -13.875056266784668
    5. '           ' → logprob: -14.500056266784668
    6. '       ' → logprob: -15.250056266784668
    7. 'Canonical' → logprob: -15.375056266784668
    8. '   ' → logprob: -15.875056266784668
    9. '```' → logprob: -16.375057220458984
    10. '	c' → logprob: -16.875057220458984

Token 1810: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -0.014841306954622269
    2. 'canonical' → logprob: -4.389841079711914
    3. 'an' → logprob: -6.389841079711914
    4. '```' → logprob: -8.639841079711914
    5. 'anon' → logprob: -9.139841079711914
    6. '   ' → logprob: -9.514841079711914
    7. 'on' → logprob: -9.764841079711914
    8. '[' → logprob: -10.264841079711914
    9. 'c' → logprob: -10.764841079711914
    10. '_' → logprob: -10.889841079711914

Token 1811: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.00861930102109909
    2. 'parent' → logprob: -4.75861930847168
    3. 'Parent' → logprob: -13.38361930847168
    4. '[parent' → logprob: -13.38361930847168
    5. ' parent' → logprob: -15.00861930847168
    6. '.parent' → logprob: -15.13361930847168
    7. '	parent' → logprob: -15.25861930847168
    8. '(parent' → logprob: -15.38361930847168
    9. '_PARENT' → logprob: -15.75861930847168
    10. ',parent' → logprob: -16.13361930847168

Token 1812: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.739826181321405e-05
    2. '_h' → logprob: -10.75004768371582
    3. 'h' → logprob: -12.00004768371582
    4. '```' → logprob: -12.37504768371582
    5. 'parent' → logprob: -12.87504768371582
    6. 's' → logprob: -13.12504768371582
    7. '_parent' → logprob: -13.12504768371582
    8. ')' → logprob: -13.37504768371582
    9. 'segments' → logprob: -13.62504768371582
    10. '_segments' → logprob: -13.75004768371582

Token 1813: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044663884909823537
    2. ' ,' → logprob: -7.750446796417236
    3. ',se' → logprob: -11.750446319580078
    4. ',
' → logprob: -12.875446319580078
    5. '   ' → logprob: -14.000446319580078
    6. ',c' → logprob: -14.125446319580078
    7. '_,' → logprob: -14.125446319580078
    8. ',parent' → logprob: -14.625446319580078
    9. '```' → logprob: -14.750446319580078
    10. ',[' → logprob: -15.125446319580078

Token 1814: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.00317783304490149
    2. ' possible' → logprob: -5.753177642822266
    3. '           ' → logprob: -17.128177642822266
    4. '_possible' → logprob: -18.378177642822266
    5. '   ' → logprob: -18.503177642822266
    6. ' posible' → logprob: -18.628177642822266
    7. 'Possible' → logprob: -19.128177642822266
    8. 'pos' → logprob: -19.503177642822266
    9. '```' → logprob: -19.628177642822266
    10. '`' → logprob: -19.878177642822266

Token 1815: '_file' (ID: 5933)
  Prédit: '_file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -4.961759259458631e-06
    2. 'file' → logprob: -12.375004768371582
    3. '```' → logprob: -15.500004768371582
    4. 'File' → logprob: -15.875004768371582
    5. '`' → logprob: -16.0000057220459
    6. '_' → logprob: -16.7500057220459
    7. ')' → logprob: -17.1250057220459
    8. '_FILE' → logprob: -17.3750057220459
    9. '_filename' → logprob: -18.3750057220459
    10. ' file' → logprob: -18.3750057220459

Token 1816: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25218090415000916
    2. '):' → logprob: -1.5021809339523315
    3. '):
' → logprob: -8.627181053161621
    4. ')' → logprob: -10.252181053161621
    5. '           ' → logprob: -10.627181053161621
    6. '       ' → logprob: -12.002181053161621
    7. '):

' → logprob: -13.002181053161621
    8. '               ' → logprob: -13.502181053161621
    9. ':' → logprob: -14.627181053161621
    10. '          ' → logprob: -14.627181053161621

Token 1817: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013915427261963487
    2. '           ' → logprob: -6.751391410827637
    3. ' return' → logprob: -10.001391410827637
    4. '                ' → logprob: -10.251391410827637
    5. '                   ' → logprob: -10.501391410827637
    6. '            ' → logprob: -10.501391410827637
    7. ':' → logprob: -10.751391410827637
    8. '              ' → logprob: -11.501391410827637
    9. ' ' → logprob: -11.751391410827637
    10. 'return' → logprob: -12.251391410827637

Token 1818: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10235254466533661
    2. 'base' → logprob: -3.2273526191711426
    3. '           ' → logprob: -3.6023526191711426
    4. '               ' → logprob: -3.7273526191711426
    5. '#' (adapté à ' #') → logprob: -5.477352619171143
    6. 'return' → logprob: -7.102352619171143
    7. '   ' → logprob: -7.352352619171143
    8. ' base' → logprob: -7.977352619171143
    9. '
' → logprob: -9.977352142333984
    10. '       ' → logprob: -10.102352142333984

Token 1819: ' valid' (ID: 4529)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.06143936514854431
    2. '#' → logprob: -3.061439275741577
    3. 'canonical' → logprob: -6.186439514160156
    4. 'file' → logprob: -6.311439514160156
    5. 'path' → logprob: -6.436439514160156
    6. 'if' → logprob: -6.561439514160156
    7. 'return' → logprob: -6.686439514160156
    8. '           ' → logprob: -6.811439514160156
    9. 'full' → logprob: -6.811439514160156
    10. ' base' → logprob: -7.061439514160156

Token 1820: ' file' (ID: 1974)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.3555922508239746
    2. 'path' → logprob: -2.2305922508239746
    3. '_page' → logprob: -2.7305922508239746
    4. 'canonical' → logprob: -3.4805922508239746
    5. 'page' → logprob: -3.9805922508239746
    6. ' path' → logprob: -3.9805922508239746
    7. ' canonical' → logprob: -4.480592250823975
    8. '_' → logprob: -4.730592250823975
    9. ')' → logprob: -4.980592250823975
    10. ' page' → logprob: -5.105592250823975

Token 1821: ' path' (ID: 3104)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7076942920684814
    2. '               ' → logprob: -1.3326942920684814
    3. ')' → logprob: -2.8326942920684814
    4. ':' → logprob: -2.8326942920684814
    5. '<|end|>' → logprob: -3.0826942920684814
    6. '                   ' → logprob: -3.9576942920684814
    7. '<|end|>' → logprob: -4.957694053649902
    8. '            ' → logprob: -4.957694053649902
    9. '                ' → logprob: -5.082694053649902
    10. 'return' → logprob: -5.332694053649902

Token 1822: ' page' (ID: 3011)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27639591693878174
    2. '               ' → logprob: -1.5263959169387817
    3. '                   ' → logprob: -4.401395797729492
    4. ':' → logprob: -5.026395797729492
    5. '       ' → logprob: -7.276395797729492
    6. ')' → logprob: -7.526395797729492
    7. 'return' → logprob: -7.901395797729492
    8. '            ' → logprob: -8.026395797729492
    9. ':
' → logprob: -8.026395797729492
    10. ':return' → logprob: -8.026395797729492

Token 1823: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04730439931154251
    2. '                   ' → logprob: -3.297304391860962
    3. ':' → logprob: -5.422304630279541
    4. '           ' → logprob: -5.672304630279541
    5. ':
' → logprob: -7.922304630279541
    6. '                ' → logprob: -8.297304153442383
    7. 'return' → logprob: -8.922304153442383
    8. '                       ' → logprob: -9.297304153442383
    9. '              ' → logprob: -9.672304153442383
    10. ')' → logprob: -10.047304153442383

Token 1824: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00625676941126585
    2. '                   ' → logprob: -5.131256580352783
    3. '           ' → logprob: -9.506257057189941
    4. '                ' → logprob: -9.881257057189941
    5. '              ' → logprob: -9.881257057189941
    6. 'return' → logprob: -9.881257057189941
    7. '.' → logprob: -10.881257057189941
    8. ' return' → logprob: -11.381257057189941
    9. '                       ' → logprob: -11.381257057189941
    10. '                  ' → logprob: -11.506257057189941

Token 1825: ' file' (ID: 1974)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.37654367089271545
    2. '               ' → logprob: -1.376543641090393
    3. '           ' → logprob: -3.3765437602996826
    4. ' base' → logprob: -4.5015435218811035
    5. 'base' → logprob: -5.0015435218811035
    6. 'return' → logprob: -5.5015435218811035
    7. ' return' → logprob: -5.7515435218811035
    8. '   ' → logprob: -7.0015435218811035
    9. '                ' → logprob: -7.8765435218811035
    10. '       ' → logprob: -8.376543998718262

Token 1826: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.13343150913715363
    2. '_exists' → logprob: -2.7584314346313477
    3. '_name' → logprob: -3.8834314346313477
    4. 'name' → logprob: -4.008431434631348
    5. 'path' → logprob: -4.133431434631348
    6. ' =' → logprob: -6.133431434631348
    7. 'exists' → logprob: -6.258431434631348
    8. '=' → logprob: -7.883431434631348
    9. ')' → logprob: -8.008431434631348
    10. '='_' → logprob: -8.008431434631348

Token 1827: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0038104073610156775
    2. '=' → logprob: -5.628810405731201
    3. '_path' → logprob: -8.62881088256836
    4. '       ' → logprob: -11.75381088256836
    5. 's' → logprob: -12.12881088256836
    6. '_tokens' → logprob: -12.87881088256836
    7. '```' → logprob: -13.00381088256836
    8. '   ' → logprob: -13.00381088256836
    9. '_parts' → logprob: -13.12881088256836
    10. ')' → logprob: -13.37881088256836

Token 1828: ' '/'' (ID: 39443)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.022448616102337837
    2. ' '/'' → logprob: -4.022448539733887
    3. ''/' → logprob: -6.022448539733887
    4. '"/' → logprob: -6.397448539733887
    5. '           ' → logprob: -9.522448539733887
    6. '   ' → logprob: -9.647448539733887
    7. '       ' → logprob: -11.022448539733887
    8. ' ' → logprob: -11.897448539733887
    9. '/' → logprob: -12.272448539733887
    10. ' "/"' → logprob: -12.272448539733887

Token 1829: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3327995240688324
    2. ' +' → logprob: -1.3327995538711548
    3. ''/' → logprob: -4.457799434661865
    4. '+'/' → logprob: -5.457799434661865
    5. '           ' → logprob: -6.582799434661865
    6. ''' → logprob: -6.957799434661865
    7. ''+' → logprob: -8.082799911499023
    8. '               ' → logprob: -8.582799911499023
    9. '                   ' → logprob: -9.207799911499023
    10. ' '/' → logprob: -9.207799911499023

Token 1830: ' '/' (ID: 7041)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.0009771942859515548
    2. ' '/' → logprob: -7.125977039337158
    3. '"/' → logprob: -8.750977516174316
    4. '('/' → logprob: -11.875977516174316
    5. '   ' → logprob: -13.000977516174316
    6. '           ' → logprob: -13.125977516174316
    7. ' ' → logprob: -13.750977516174316
    8. '       ' → logprob: -14.250977516174316
    9. '+'/' → logprob: -14.625977516174316
    10. '         ' → logprob: -15.750977516174316

Token 1831: ''.' (ID: 6120)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.06670140475034714
    2. '"/' → logprob: -4.441701412200928
    3. 'join' → logprob: -4.441701412200928
    4. 'file' → logprob: -4.566701412200928
    5. ''.' → logprob: -4.941701412200928
    6. '.join' → logprob: -5.191701412200928
    7. ' '/' → logprob: -5.191701412200928
    8. '```' → logprob: -5.691701412200928
    9. '...' → logprob: -6.566701412200928
    10. '('/' → logprob: -6.691701412200928

Token 1832: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.1928003813372925e-05
    2. 'file' → logprob: -11.500051498413086
    3. ''.' → logprob: -11.500051498413086
    4. ''/' → logprob: -11.625051498413086
    5. '.join' → logprob: -12.000051498413086
    6. '           ' → logprob: -12.500051498413086
    7. ' join' → logprob: -12.750051498413086
    8. '(join' → logprob: -12.750051498413086
    9. '       ' → logprob: -13.250051498413086
    10. '   ' → logprob: -14.250051498413086

Token 1833: '(c' (ID: 2410)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -3.3451433409936726e-05
    2. '(c' → logprob: -11.000033378601074
    3. ' canonical' → logprob: -11.000033378601074
    4. 'canon' → logprob: -17.87503433227539
    5. '   ' → logprob: -18.00003433227539
    6. 'c' → logprob: -18.12503433227539
    7. '           ' → logprob: -19.50003433227539
    8. '       ' → logprob: -19.62503433227539
    9. 'can' → logprob: -19.62503433227539
    10. 'Canonical' → logprob: -19.87503433227539

Token 1834: 'anonical' (ID: 143898)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.013578047975897789
    2. '(c' → logprob: -4.513577938079834
    3. 'anonical' → logprob: -6.138577938079834
    4. 'c' → logprob: -9.138578414916992
    5. '[' → logprob: -9.513578414916992
    6. '[c' → logprob: -9.888578414916992
    7. ' canonical' → logprob: -10.013578414916992
    8. '           ' → logprob: -10.138578414916992
    9. 'can' → logprob: -10.888578414916992
    10. '               ' → logprob: -11.513578414916992

Token 1835: '_parent' (ID: 39570)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.3868851363658905
    2. '_parent' → logprob: -1.136885166168213
    3. 'segments' → logprob: -12.261884689331055
    4. '[parent' → logprob: -13.261884689331055
    5. ' parent' → logprob: -13.386884689331055
    6. '1' → logprob: -13.386884689331055
    7. '	parent' → logprob: -13.761884689331055
    8. 'Parent' → logprob: -14.386884689331055
    9. '   ' → logprob: -14.511884689331055
    10. '
' → logprob: -14.636884689331055

Token 1836: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.468279752880335e-05
    2. 'segments' → logprob: -10.250064849853516
    3. 'parent' → logprob: -11.000064849853516
    4. '_parent' → logprob: -12.375064849853516
    5. '...' → logprob: -12.750064849853516
    6. '```' → logprob: -13.625064849853516
    7. '_segments' → logprob: -14.125064849853516
    8. '   ' → logprob: -14.375064849853516
    9. '
' → logprob: -14.625064849853516
    10. ' segments' → logprob: -14.875064849853516

Token 1837: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03978123515844345
    2. ' +' → logprob: -3.289781332015991
    3. ')' → logprob: -6.539781093597412
    4. '+'/'+' → logprob: -9.03978157043457
    5. '+[' → logprob: -9.78978157043457
    6. '/' → logprob: -10.78978157043457
    7. ')+' → logprob: -10.78978157043457
    8. '[' → logprob: -11.28978157043457
    9. '       ' → logprob: -11.41478157043457
    10. '+"/"+' → logprob: -11.78978157043457

Token 1838: ' [' (ID: 723)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.35184445977211
    2. '[' → logprob: -1.6018444299697876
    3. '[file' → logprob: -2.601844549179077
    4. '[f' → logprob: -4.601844310760498
    5. '[p' → logprob: -4.976844310760498
    6. '['' → logprob: -6.226844310760498
    7. '[path' → logprob: -6.976844310760498
    8. '[last' → logprob: -8.601844787597656
    9. '[next' → logprob: -8.601844787597656
    10. ' [' → logprob: -8.976844787597656

Token 1839: 'possible' (ID: 50714)
  Prédit: 'possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -2.339278580620885e-06
    2. ' possible' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.625001907348633
    4. 'potential' → logprob: -21.000001907348633
    5. 'poss' → logprob: -21.625001907348633
    6. '           ' → logprob: -21.625001907348633
    7. '[' → logprob: -22.500001907348633
    8. 'pos' → logprob: -22.500001907348633
    9. ' ' → logprob: -22.625001907348633
    10. '_possible' → logprob: -22.875001907348633

Token 1840: '_file' (ID: 5933)
  Prédit: '_file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -0.0007738933200016618
    2. 'file' → logprob: -7.375773906707764
    3. ''' → logprob: -9.125773429870605
    4. '`' → logprob: -11.000773429870605
    5. ''_' → logprob: -11.125773429870605
    6. 'File' → logprob: -12.875773429870605
    7. '```' → logprob: -13.375773429870605
    8. '_FILE' → logprob: -14.625773429870605
    9. ''s' → logprob: -15.000773429870605
    10. ' ' → logprob: -15.125773429870605

Token 1841: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03949090093374252
    2. ')
' → logprob: -3.4144909381866455
    3. '])' → logprob: -5.414490699768066
    4. '')' → logprob: -7.414490699768066
    5. '       ' → logprob: -8.039490699768066
    6. ']' → logprob: -8.664490699768066
    7. '])
' → logprob: -9.039490699768066
    8. '           ' → logprob: -9.664490699768066
    9. ')`
' → logprob: -11.039490699768066
    10. ')]' → logprob: -11.289490699768066

Token 1842: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39411401748657227
    2. '               ' → logprob: -2.2691140174865723
    3. '
' → logprob: -2.7691140174865723
    4. '       ' → logprob: -2.8941140174865723
    5. '<|end|>' → logprob: -3.0191140174865723
    6. ')' → logprob: -4.269114017486572
    7. 'return' → logprob: -4.394114017486572
    8. '\n' → logprob: -4.519114017486572
    9. ')return' → logprob: -5.144114017486572
    10. ':return' → logprob: -6.269114017486572

Token 1843: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009329007007181644
    2. '           ' → logprob: -5.134328842163086
    3. 'return' → logprob: -5.759328842163086
    4. '                   ' → logprob: -9.134328842163086
    5. ' return' → logprob: -9.384328842163086
    6. '       ' → logprob: -11.259328842163086
    7. '              ' → logprob: -11.634328842163086
    8. '                ' → logprob: -12.259328842163086
    9. '			' → logprob: -12.259328842163086
    10. '                       ' → logprob: -12.384328842163086

Token 1844: ' Now' (ID: 6549)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05105416476726532
    2. 'if' → logprob: -3.0510542392730713
    3. '               ' → logprob: -6.301054000854492
    4. ' return' → logprob: -7.926054000854492
    5. '#' → logprob: -9.301054000854492
    6. '           ' → logprob: -9.426054000854492
    7. ' if' → logprob: -10.051054000854492
    8. '       ' → logprob: -10.301054000854492
    9. '
' → logprob: -11.801054000854492
    10. '   ' → logprob: -11.926054000854492

Token 1845: ' apply' (ID: 6096)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6991761922836304
    2. 'if' → logprob: -1.0741761922836304
    3. '       ' → logprob: -2.19917631149292
    4. 'return' → logprob: -3.94917631149292
    5. '           ' → logprob: -4.07417631149292
    6. ':' → logprob: -5.57417631149292
    7. ' return' → logprob: -5.82417631149292
    8. '
' → logprob: -6.07417631149292
    9. '#' → logprob: -7.19917631149292
    10. '```' → logprob: -7.32417631149292

Token 1846: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9470703601837158
    2. ' self' → logprob: -1.6970703601837158
    3. ''' → logprob: -1.9470703601837158
    4. '''' → logprob: -2.572070360183716
    5. 'rstrip' → logprob: -3.072070360183716
    6. '#' → logprob: -3.572070360183716
    7. '('' → logprob: -4.072070121765137
    8. '(self' → logprob: -4.572070121765137
    9. '(
' → logprob: -4.822070121765137
    10. ' '/'' → logprob: -4.822070121765137

Token 1847: '.html' (ID: 4588)
  Prédit: '_file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -0.6964770555496216
    2. '.html' → logprob: -2.071476936340332
    3. '_path' → logprob: -2.071476936340332
    4. '_' → logprob: -2.446476936340332
    5. '.' → logprob: -3.321476936340332
    6. '._' → logprob: -3.446476936340332
    7. 'html' → logprob: -3.571476936340332
    8. '_html' → logprob: -3.946476936340332
    9. 'file' → logprob: -4.946476936340332
    10. '<|end|>' → logprob: -5.196476936340332

Token 1848: ' omission' (ID: 171628)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.678822934627533
    2. 'if' → logprob: -1.3038229942321777
    3. '.endswith' → logprob: -3.0538229942321777
    4. '_path' → logprob: -3.3038229942321777
    5. ' and' → logprob: -3.9288229942321777
    6. ' in' → logprob: -4.053822994232178
    7. '```' → logprob: -4.053822994232178
    8. '==' → logprob: -4.053822994232178
    9. ' not' → logprob: -4.553822994232178
    10. '
' → logprob: -4.553822994232178

Token 1849: ' rule' (ID: 10652)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.560338020324707
    2. 'if' → logprob: -1.560338020324707
    3. '       ' → logprob: -2.310338020324707
    4. '               ' → logprob: -2.935338020324707
    5. '           ' → logprob: -3.810338020324707
    6. '_path' → logprob: -4.935338020324707
    7. '_' → logprob: -5.185338020324707
    8. ':
' → logprob: -5.310338020324707
    9. '```' → logprob: -5.435338020324707
    10. ' in' → logprob: -5.935338020324707

Token 1850: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9353295564651489
    2. ' if' → logprob: -1.310329556465149
    3. '               ' → logprob: -1.560329556465149
    4. '           ' → logprob: -2.6853294372558594
    5. '
' → logprob: -3.5603294372558594
    6. 'if' → logprob: -3.8103294372558594
    7. '\' → logprob: -6.810329437255859
    8. '```' → logprob: -6.935329437255859
    9. '        
' → logprob: -7.060329437255859
    10. ':' → logprob: -7.310329437255859

Token 1851: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.1602371335029602
    2. ' possible' → logprob: -1.9102370738983154
    3. 'file' → logprob: -12.410237312316895
    4. '_possible' → logprob: -12.785237312316895
    5. ' posible' → logprob: -12.910237312316895
    6. ' file' → logprob: -13.160237312316895
    7. '   ' → logprob: -14.660237312316895
    8. ' possibile' → logprob: -14.910237312316895
    9. 'Possible' → logprob: -15.160237312316895
    10. 'pos' → logprob: -16.285236358642578

Token 1852: '_file' (ID: 5933)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7351797223091125
    2. ' if' → logprob: -1.1101796627044678
    3. '           ' → logprob: -2.4851796627044678
    4. 'if' → logprob: -3.1101796627044678
    5. '               ' → logprob: -3.3601796627044678
    6. '
' → logprob: -3.7351796627044678
    7. '```' → logprob: -7.485179901123047
    8. '   ' → logprob: -7.610179901123047
    9. ':
' → logprob: -7.735179901123047
    10. ':' → logprob: -7.860179901123047

Token 1853: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.024864884093403816
    2. '==' → logprob: -3.899864912033081
    3. '=='' → logprob: -5.774864673614502
    4. ' !=' → logprob: -7.649864673614502
    5. ' =='' → logprob: -7.774864673614502
    6. '=="' → logprob: -8.89986515045166
    7. ''' → logprob: -10.27486515045166
    8. ' =' → logprob: -10.52486515045166
    9. '[' → logprob: -11.02486515045166
    10. ' =="' → logprob: -11.39986515045166

Token 1854: ' index' (ID: 3472)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0028713271021842957
    2. '"' → logprob: -6.002871513366699
    3. ' '' → logprob: -8.0028715133667
    4. '
' → logprob: -11.1278715133667
    5. 'self' → logprob: -11.3778715133667
    6. '('' → logprob: -11.8778715133667
    7. 'index' → logprob: -12.5028715133667
    8. '`' → logprob: -12.5028715133667
    9. ' self' → logprob: -13.0028715133667
    10. ' ' → logprob: -13.1278715133667

Token 1855: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.7116681337356567
    2. '.' → logprob: -1.3366681337356567
    3. ''.' → logprob: -1.9616681337356567
    4. '_file' → logprob: -2.836668014526367
    5. '._' → logprob: -4.336668014526367
    6. 'html' → logprob: -4.461668014526367
    7. 'file' → logprob: -5.711668014526367
    8. '_html' → logprob: -6.086668014526367
    9. '_' → logprob: -6.211668014526367
    10. '.file' → logprob: -6.211668014526367

Token 1856: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8324573636054993
    2. '           ' → logprob: -1.4574573040008545
    3. ' if' → logprob: -2.0824573040008545
    4. '
' → logprob: -2.3324573040008545
    5. ':
' → logprob: -2.9574573040008545
    6. ' and' → logprob: -4.082457542419434
    7. '[' → logprob: -4.707457542419434
    8. '                   ' → logprob: -5.082457542419434
    9. 'if' → logprob: -5.707457542419434
    10. '       ' → logprob: -5.832457542419434

Token 1857: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038139257580041885
    2. '           ' → logprob: -3.5381393432617188
    3. ' if' → logprob: -5.413139343261719
    4. '                   ' → logprob: -6.538139343261719
    5. ':' → logprob: -7.163139343261719
    6. '                       ' → logprob: -8.163139343261719
    7. '       ' → logprob: -8.288139343261719
    8. '              ' → logprob: -8.788139343261719
    9. '[' → logprob: -8.913139343261719
    10. 'if' → logprob: -9.038139343261719

Token 1858: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.492637574672699
    2. ' if' → logprob: -0.992637574672699
    3. 'if' (adapté à ' if') → logprob: -4.117637634277344
    4. '           ' → logprob: -6.492637634277344
    5. '                   ' → logprob: -7.867637634277344
    6. '   ' → logprob: -10.242637634277344
    7. '       ' → logprob: -10.742637634277344
    8. ' ' → logprob: -10.742637634277344
    9. '                       ' → logprob: -10.867637634277344
    10. '```' → logprob: -11.117637634277344

Token 1859: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.3868757486343384
    2. 'possible' → logprob: -1.1368757486343384
    3. ' posible' → logprob: -13.136876106262207
    4. '_possible' → logprob: -13.761876106262207
    5. 'Possible' → logprob: -14.636876106262207
    6. '`' → logprob: -14.886876106262207
    7. ' possibile' → logprob: -15.011876106262207
    8. ' possibles' → logprob: -16.26187515258789
    9. 'pos' → logprob: -16.51187515258789
    10. ' potential' → logprob: -16.51187515258789

Token 1860: '_file' (ID: 5933)
  Prédit: '_file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -4.751746746478602e-05
    2. '_' → logprob: -10.50004768371582
    3. '_FILE' → logprob: -12.25004768371582
    4. 'File' → logprob: -12.37504768371582
    5. '_f' → logprob: -12.87504768371582
    6. ''_' → logprob: -13.25004768371582
    7. '```' → logprob: -13.50004768371582
    8. '_File' → logprob: -13.75004768371582
    9. ' _' → logprob: -14.12504768371582
    10. '`' → logprob: -14.37504768371582

Token 1861: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09057371318340302
    2. '==' → logprob: -2.465573787689209
    3. '=='' → logprob: -6.590573787689209
    4. ' =='' → logprob: -8.84057331085205
    5. '=="' → logprob: -10.21557331085205
    6. '[' → logprob: -10.71557331085205
    7. '=' → logprob: -11.09057331085205
    8. ' !=' → logprob: -11.46557331085205
    9. '==
' → logprob: -11.59057331085205
    10. ')' → logprob: -12.96557331085205

Token 1862: ' self' (ID: 1051)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03309597074985504
    2. 'self' → logprob: -3.9080960750579834
    3. ' self' → logprob: -4.658095836639404
    4. ' '' → logprob: -6.158095836639404
    5. '"' → logprob: -7.158095836639404
    6. ''s' → logprob: -10.283096313476562
    7. '`' → logprob: -10.658096313476562
    8. '   ' → logprob: -11.533096313476562
    9. ' ' → logprob: -11.783096313476562
    10. 'index' → logprob: -12.908096313476562

Token 1863: '.IN' (ID: 20931)
  Prédit: '.IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.IN' → logprob: -0.5855196118354797
    2. '.' → logprob: -1.335519552230835
    3. ''.' → logprob: -2.960519552230835
    4. '._' → logprob: -3.085519552230835
    5. 'INDEX' → logprob: -3.085519552230835
    6. '_INDEX' → logprob: -4.335519790649414
    7. ' .' → logprob: -4.460519790649414
    8. ''' → logprob: -4.960519790649414
    9. '_.' → logprob: -7.335519790649414
    10. '.__' → logprob: -7.460519790649414

Token 1864: 'DEX' (ID: 22598)
  Prédit: 'DEX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEX' → logprob: -0.00044353955308906734
    2. 'EX' → logprob: -8.125443458557129
    3. 'dex' → logprob: -10.125443458557129
    4. 'D' → logprob: -10.375443458557129
    5. 'ex' → logprob: -10.625443458557129
    6. 'DE' → logprob: -11.250443458557129
    7. 'ED' → logprob: -11.500443458557129
    8. '   ' → logprob: -11.750443458557129
    9. 'DX' → logprob: -12.250443458557129
    10. '_FILE' → logprob: -12.375443458557129

Token 1865: '_FILE' (ID: 19131)
  Prédit: '_FILE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FILE' → logprob: -0.00040958117460832
    2. '_File' → logprob: -8.625409126281738
    3. '_HTML' → logprob: -9.500409126281738
    4. '_FILES' → logprob: -10.250409126281738
    5. 'File' → logprob: -10.375409126281738
    6. '```' → logprob: -10.875409126281738
    7. ' _' → logprob: -11.375409126281738
    8. '_FIL' → logprob: -11.625409126281738
    9. '_FILENAME' → logprob: -11.875409126281738
    10. '<File' → logprob: -11.875409126281738

Token 1866: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3557355999946594
    2. ':
' → logprob: -1.4807355403900146
    3. ':' → logprob: -2.8557355403900146
    4. 'and' → logprob: -4.605735778808594
    5. '           ' → logprob: -6.105735778808594
    6. '               ' → logprob: -7.355735778808594
    7. '):
' → logprob: -8.480735778808594
    8. '                   ' → logprob: -8.605735778808594
    9. '                           ' → logprob: -8.605735778808594
    10. '   ' → logprob: -9.105735778808594

Token 1867: '                   ' (ID: 699)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8644252419471741
    2. '                   ' → logprob: -1.4894251823425293
    3. ' and' → logprob: -1.8644251823425293
    4. '           ' → logprob: -2.3644251823425293
    5. '               ' → logprob: -2.9894251823425293
    6. ':' → logprob: -2.9894251823425293
    7. ':return' → logprob: -7.239425182342529
    8. '                ' → logprob: -7.364425182342529
    9. '                       ' → logprob: -7.364425182342529
    10. '                    ' → logprob: -7.864425182342529

Token 1868: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.265329509973526
    2. 'return' → logprob: -1.8903294801712036
    3. ' return' → logprob: -2.890329599380493
    4. 'file' → logprob: -4.515329360961914
    5. '               ' → logprob: -5.390329360961914
    6. ' file' → logprob: -5.640329360961914
    7. '                       ' → logprob: -6.015329360961914
    8. '#' (adapté à ' #') → logprob: -6.640329360961914
    9. '   ' → logprob: -6.640329360961914
    10. 'if' → logprob: -7.015329360961914

Token 1869: ' this' (ID: 495)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -1.1219394207000732
    2. 'return' → logprob: -1.2469394207000732
    3. '#' → logprob: -1.4969394207000732
    4. 'base' → logprob: -2.4969394207000732
    5. 'dir' → logprob: -2.8719394207000732
    6. '               ' → logprob: -4.871939659118652
    7. 'if' → logprob: -4.996939659118652
    8. ' #' → logprob: -6.121939659118652
    9. ' return' → logprob: -6.621939659118652
    10. '                   ' → logprob: -6.996939659118652

Token 1870: ' is' (ID: 382)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.6413851380348206
    2. 'return' → logprob: -2.641385078430176
    3. ' should' → logprob: -3.016385078430176
    4. '#' → logprob: -3.141385078430176
    5. ' is' → logprob: -3.141385078430176
    6. ':' → logprob: -3.516385078430176
    7. '_file' → logprob: -3.516385078430176
    8. 'path' → logprob: -3.641385078430176
    9. 'should' → logprob: -3.641385078430176
    10. 'is' → logprob: -3.641385078430176

Token 1871: ' equal' (ID: 12629)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2740185856819153
    2. '''' → logprob: -2.2740185260772705
    3. ' '/'' → logprob: -2.6490185260772705
    4. ''/' → logprob: -3.1490185260772705
    5. 'file' → logprob: -4.52401876449585
    6. 'canonical' → logprob: -6.27401876449585
    7. ' ' → logprob: -6.39901876449585
    8. ' ''' → logprob: -6.77401876449585
    9. 'base' → logprob: -6.77401876449585
    10. 'len' → logprob: -7.27401876449585

Token 1872: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2552371919155121
    2. 'to' → logprob: -1.5052372217178345
    3. '                   ' → logprob: -6.005237102508545
    4. ''' → logprob: -7.630237102508545
    5. '               ' → logprob: -9.005237579345703
    6. '_to' → logprob: -10.130237579345703
    7. '                       ' → logprob: -10.505237579345703
    8. '#' → logprob: -11.130237579345703
    9. '                  ' → logprob: -11.255237579345703
    10. ' '/'' → logprob: -11.255237579345703

Token 1873: ' directory' (ID: 12552)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1369529366493225
    2. '''' → logprob: -2.8869528770446777
    3. ' '/'' → logprob: -3.5119528770446777
    4. ''/' → logprob: -3.6369528770446777
    5. 'base' → logprob: -5.511952877044678
    6. '('/')
' → logprob: -6.136952877044678
    7. '('/' → logprob: -6.511952877044678
    8. '''
' → logprob: -6.636952877044678
    9. '('/')' → logprob: -6.886952877044678
    10. '   ' → logprob: -7.386952877044678

Token 1874: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.45603618025779724
    2. '/' → logprob: -1.0810362100601196
    3. ''' → logprob: -4.33103609085083
    4. '
' → logprob: -6.08103609085083
    5. 'path' → logprob: -6.08103609085083
    6. '/
' → logprob: -6.45603609085083
    7. ''/' → logprob: -6.58103609085083
    8. '/_' → logprob: -6.70603609085083
    9. '('/')' → logprob: -7.45603609085083
    10. '/'' → logprob: -7.58103609085083

Token 1875: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8759505152702332
    2. '                   ' → logprob: -0.8759505152702332
    3. '[:-' → logprob: -2.625950574874878
    4. '
' → logprob: -3.875950574874878
    5. ' +' → logprob: -4.250950336456299
    6. '           ' → logprob: -4.250950336456299
    7. '.rstrip' → logprob: -4.375950336456299
    8. '                       ' → logprob: -4.875950336456299
    9. ':
' → logprob: -5.500950336456299
    10. 'return' → logprob: -5.875950336456299

Token 1876: ' or' (ID: 503)
  Prédit: 'slash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'slash' → logprob: -0.5423959493637085
    2. 'a' → logprob: -1.9173959493637085
    3. 'tr' → logprob: -2.167396068572998
    4. '_tr' → logprob: -3.542396068572998
    5. 'index' → logprob: -4.042396068572998
    6. '
' → logprob: -4.292396068572998
    7. 'seg' → logprob: -4.417396068572998
    8. 'segments' → logprob: -4.667396068572998
    9. '/' → logprob: -4.792396068572998
    10. 'canonical' → logprob: -4.917396068572998

Token 1877: ' without' (ID: 2935)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.8402618765830994
    2. 'slash' → logprob: -0.8402618765830994
    3. ' trailing' → logprob: -3.090261936187744
    4. 'out' → logprob: -3.215261936187744
    5. 'tr' → logprob: -4.840261936187744
    6. '#' → logprob: -4.840261936187744
    7. 'a' → logprob: -4.840261936187744
    8. 'or' → logprob: -5.715261936187744
    9. '```' → logprob: -5.840261936187744
    10. '_tr' → logprob: -6.090261936187744

Token 1878: ' trailing' (ID: 57985)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.12587924301624298
    2. 'slash' → logprob: -3.1258792877197266
    3. ' trailing' → logprob: -3.8758792877197266
    4. '/' → logprob: -3.8758792877197266
    5. ''' → logprob: -4.500879287719727
    6. ''/' → logprob: -4.750879287719727
    7. 'a' → logprob: -5.000879287719727
    8. '('/')' → logprob: -5.875879287719727
    9. '/tr' → logprob: -6.625879287719727
    10. ' '/'' → logprob: -6.750879287719727

Token 1879: ' slash' (ID: 79755)
  Prédit: 'slash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slash' → logprob: -0.40154898166656494
    2. '_sl' → logprob: -1.776548981666565
    3. '/' → logprob: -2.1515488624572754
    4. ''' → logprob: -3.6515488624572754
    5. ' slash' → logprob: -4.651548862457275
    6. ''/' → logprob: -6.026548862457275
    7. '`' → logprob: -6.151548862457275
    8. '/
' → logprob: -6.276548862457275
    9. '_' → logprob: -7.151548862457275
    10. '```' → logprob: -7.401548862457275

Token 1880: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0727962777018547
    2. '                       ' → logprob: -3.44779634475708
    3. '
' → logprob: -3.94779634475708
    4. 'return' → logprob: -4.82279634475708
    5. '               ' → logprob: -5.19779634475708
    6. ':
' → logprob: -6.57279634475708
    7. '                    
' → logprob: -6.82279634475708
    8. '                        
' → logprob: -7.82279634475708
    9. '\' → logprob: -7.94779634475708
    10. '           ' → logprob: -8.447795867919922

Token 1881: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001025662524625659
    2. 'return' → logprob: -7.626025676727295
    3. '                       ' → logprob: -8.251025199890137
    4. '               ' → logprob: -8.626025199890137
    5. '
' → logprob: -10.126025199890137
    6. '           ' → logprob: -11.001025199890137
    7. ' return' → logprob: -11.751025199890137
    8. ':
' → logprob: -12.251025199890137
    9. '                  ' → logprob: -12.251025199890137
    10. '       ' → logprob: -12.376025199890137

Token 1882: ' base' (ID: 3611)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.29832911491394043
    2. 'return' → logprob: -2.0483291149139404
    3. '
' → logprob: -2.2983291149139404
    4. ' return' → logprob: -3.7983291149139404
    5. '                       ' → logprob: -6.6733293533325195
    6. '#' → logprob: -6.6733293533325195
    7. '   ' → logprob: -7.0483293533325195
    8. '               ' → logprob: -7.2983293533325195
    9. '           ' → logprob: -7.9233293533325195
    10. '                    
' → logprob: -8.17332935333252

Token 1883: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -8.196732960641384e-05
    2. 'path' → logprob: -9.625082015991211
    3. '`' → logprob: -12.750082015991211
    4. '_file' → logprob: -12.875082015991211
    5. 'file' → logprob: -13.125082015991211
    6. '_' → logprob: -13.250082015991211
    7. '```' → logprob: -13.625082015991211
    8. '_p' → logprob: -13.875082015991211
    9. '_pat' → logprob: -14.125082015991211
    10. ' =' → logprob: -14.625082015991211

Token 1884: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143379271030426
    2. '=' → logprob: -1.701433777809143
    3. '=_' → logprob: -12.201434135437012
    4. '```' → logprob: -12.576434135437012
    5. 's' → logprob: -12.701434135437012
    6. '           ' → logprob: -13.076434135437012
    7. '='' → logprob: -14.201434135437012
    8. ',' → logprob: -14.326434135437012
    9. '=None' → logprob: -14.701434135437012
    10. ' ' → logprob: -14.701434135437012

Token 1885: ' '/'' (ID: 39443)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002625358523800969
    2. ' '/'' → logprob: -6.252625465393066
    3. ''/' → logprob: -7.502625465393066
    4. '"/' → logprob: -9.627625465393066
    5. '   ' → logprob: -10.252625465393066
    6. '           ' → logprob: -10.877625465393066
    7. '       ' → logprob: -12.377625465393066
    8. ' ' → logprob: -12.502625465393066
    9. '''' → logprob: -12.752625465393066
    10. '('/' → logprob: -12.877625465393066

Token 1886: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18025213479995728
    2. ' +' → logprob: -1.8052520751953125
    3. '+'/' → logprob: -8.305252075195312
    4. '                   ' → logprob: -8.430252075195312
    5. '+'/'+' → logprob: -11.180252075195312
    6. '               ' → logprob: -12.055252075195312
    7. '           ' → logprob: -12.430252075195312
    8. ''/' → logprob: -12.680252075195312
    9. '+'' → logprob: -13.305252075195312
    10. ''+' → logprob: -13.305252075195312

Token 1887: ' '/' (ID: 7041)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.00021402664424385875
    2. ' '/' → logprob: -8.625213623046875
    3. '"/' → logprob: -11.250213623046875
    4. '('/' → logprob: -11.500213623046875
    5. '           ' → logprob: -12.500213623046875
    6. '   ' → logprob: -13.500213623046875
    7. ' ' → logprob: -14.000213623046875
    8. '         ' → logprob: -14.125213623046875
    9. '       ' → logprob: -14.250213623046875
    10. '	' → logprob: -14.250213623046875

Token 1888: ''.' (ID: 6120)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.03287474811077118
    2. '.join' → logprob: -3.907874822616577
    3. ''.' → logprob: -5.407874584197998
    4. 'join' → logprob: -5.407874584197998
    5. '"/' → logprob: -6.532874584197998
    6. ' '/' → logprob: -7.532874584197998
    7. '''.' → logprob: -8.157875061035156
    8. '
' → logprob: -8.657875061035156
    9. '   ' → logprob: -9.032875061035156
    10. '#' → logprob: -9.282875061035156

Token 1889: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.008219508454203606
    2. '.join' → logprob: -5.2582197189331055
    3. ''/' → logprob: -5.8832197189331055
    4. 'canonical' → logprob: -9.758219718933105
    5. '"/' → logprob: -10.133219718933105
    6. 'joined' → logprob: -10.758219718933105
    7. '_join' → logprob: -11.508219718933105
    8. '('/' → logprob: -11.508219718933105
    9. ''.' → logprob: -11.758219718933105
    10. '(join' → logprob: -11.883219718933105

Token 1890: '(c' (ID: 2410)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.000432695698691532
    2. '(c' → logprob: -8.000432968139648
    3. ' canonical' → logprob: -9.250432968139648
    4. '           ' → logprob: -14.500432968139648
    5. 'c' → logprob: -15.000432968139648
    6. ' (' → logprob: -15.750432968139648
    7. '               ' → logprob: -17.25043296813965
    8. '                   ' → logprob: -17.25043296813965
    9. '       ' → logprob: -17.25043296813965
    10. '   ' → logprob: -17.37543296813965

Token 1891: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -0.18033099174499512
    2. 'canonical' → logprob: -1.8053309917449951
    3. '(c' → logprob: -7.805331230163574
    4. 'an' → logprob: -9.930331230163574
    5. '[' → logprob: -10.055331230163574
    6. 'c' → logprob: -10.555331230163574
    7. ' canonical' → logprob: -11.180331230163574
    8. '           ' → logprob: -11.430331230163574
    9. '[c' → logprob: -12.055331230163574
    10. '   ' → logprob: -12.305331230163574

Token 1892: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.47413772344589233
    2. 'parent' → logprob: -0.9741377234458923
    3. 'segments' → logprob: -11.224137306213379
    4. 'canonical' → logprob: -11.224137306213379
    5. '[parent' → logprob: -11.474137306213379
    6. 'Parent' → logprob: -12.349137306213379
    7. ' parent' → logprob: -12.724137306213379
    8. '   ' → logprob: -12.849137306213379
    9. '	parent' → logprob: -12.849137306213379
    10. '.parent' → logprob: -13.224137306213379

Token 1893: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002371521550230682
    2. 'parent' → logprob: -9.000237464904785
    3. '_parent' → logprob: -9.375237464904785
    4. '...' → logprob: -11.750237464904785
    5. 'segments' → logprob: -12.125237464904785
    6. '[' → logprob: -12.875237464904785
    7. '
' → logprob: -13.500237464904785
    8. '   ' → logprob: -13.625237464904785
    9. 'canonical' → logprob: -13.625237464904785
    10. '```' → logprob: -13.875237464904785

Token 1894: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04498980566859245
    2. '
' → logprob: -4.169989585876465
    3. '<|end|>' → logprob: -5.044989585876465
    4. '+' → logprob: -5.794989585876465
    5. ' if' → logprob: -5.919989585876465
    6. ']' → logprob: -6.169989585876465
    7. ')+' → logprob: -6.294989585876465
    8. 'if' → logprob: -6.544989585876465
    9. '                   ' → logprob: -6.669989585876465
    10. ')return' → logprob: -6.919989585876465

Token 1895: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01951282098889351
    2. '/' → logprob: -4.89451265335083
    3. '                       ' → logprob: -5.51951265335083
    4. '               ' → logprob: -5.76951265335083
    5. '           ' → logprob: -6.51951265335083
    6. 'return' → logprob: -7.51951265335083
    7. '+' → logprob: -7.64451265335083
    8. ' +' → logprob: -8.144513130187988
    9. '       ' → logprob: -8.519513130187988
    10. '                  ' → logprob: -8.644513130187988

Token 1896: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3823961913585663
    2. 'return' → logprob: -1.6323962211608887
    3. 'if' → logprob: -2.1323962211608887
    4. ' if' → logprob: -6.507396221160889
    5. '               ' → logprob: -6.757396221160889
    6. '           ' → logprob: -7.382396221160889
    7. ' return' → logprob: -8.25739574432373
    8. '                       ' → logprob: -9.13239574432373
    9. '   ' → logprob: -9.38239574432373
    10. '       ' → logprob: -10.88239574432373

Token 1897: ' base' (ID: 3611)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02256004326045513
    2. 'if' → logprob: -4.522560119628906
    3. '                   ' → logprob: -4.522560119628906
    4. '               ' → logprob: -7.522560119628906
    5. ' return' → logprob: -10.772560119628906
    6. '#' → logprob: -11.647560119628906
    7. '           ' → logprob: -12.147560119628906
    8. '   ' → logprob: -12.272560119628906
    9. ' if' → logprob: -12.772560119628906
    10. '                       ' → logprob: -14.022560119628906

Token 1898: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -5.6696149840718135e-05
    2. 'path' → logprob: -10.000056266784668
    3. '   ' → logprob: -12.625056266784668
    4. '           ' → logprob: -12.750056266784668
    5. '```' → logprob: -14.000056266784668
    6. 'Path' → logprob: -14.125056266784668
    7. '       ' → logprob: -14.375056266784668
    8. '+' → logprob: -14.750056266784668
    9. '`' → logprob: -14.875056266784668
    10. 'if' → logprob: -15.000056266784668

Token 1899: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3052554428577423
    2. ' =' → logprob: -2.05525541305542
    3. '==' → logprob: -2.30525541305542
    4. 'if' → logprob: -4.18025541305542
    5. ' if' → logprob: -4.93025541305542
    6. '+=' → logprob: -5.30525541305542
    7. 'return' → logprob: -6.18025541305542
    8. '+' → logprob: -6.55525541305542
    9. ' +=' → logprob: -6.68025541305542
    10. ' ==' → logprob: -6.80525541305542

Token 1900: ' root' (ID: 6577)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04504644125699997
    2. ''/' → logprob: -3.795046329498291
    3. '''' → logprob: -3.920046329498291
    4. ' '/'' → logprob: -6.795046329498291
    5. '"/' → logprob: -8.17004680633545
    6. 'base' → logprob: -9.17004680633545
    7. '('/')' → logprob: -9.54504680633545
    8. '''
' → logprob: -10.54504680633545
    9. '   ' → logprob: -10.79504680633545
    10. '('/')
' → logprob: -11.04504680633545

Token 1901: ' when' (ID: 1261)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6565004587173462
    2. '                   ' → logprob: -1.6565004587173462
    3. ' if' → logprob: -1.6565004587173462
    4. 'if' → logprob: -2.5315003395080566
    5. ' and' → logprob: -5.031500339508057
    6. '/' → logprob: -5.531500339508057
    7. 'or' → logprob: -5.781500339508057
    8. ':
' → logprob: -6.406500339508057
    9. '                       ' → logprob: -6.781500339508057
    10. '           ' → logprob: -7.031500339508057

Token 1902: ' no' (ID: 860)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0024728013668209314
    2. ' base' → logprob: -6.627472877502441
    3. 'not' → logprob: -6.877472877502441
    4. ' not' → logprob: -9.627472877502441
    5. 'len' → logprob: -10.502472877502441
    6. '''' → logprob: -12.127472877502441
    7. 'canonical' → logprob: -12.502472877502441
    8. '```' → logprob: -12.627472877502441
    9. '==' → logprob: -12.752472877502441
    10. '(base' → logprob: -13.002472877502441

Token 1903: ' parent' (ID: 5980)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.013876342214643955
    2. ' canonical' → logprob: -5.263876438140869
    3. 'segments' → logprob: -5.263876438140869
    4. 'base' → logprob: -5.888876438140869
    5. ' segments' → logprob: -8.638875961303711
    6. '_segments' → logprob: -8.638875961303711
    7. '```' → logprob: -9.263875961303711
    8. 'parent' → logprob: -11.013875961303711
    9. ' base' → logprob: -11.138875961303711
    10. '_path' → logprob: -11.263875961303711

Token 1904: ' dirs' (ID: 99999)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.05611704662442207
    2. '_' → logprob: -4.056117057800293
    3. '_dirs' → logprob: -4.181117057800293
    4. 'dirs' → logprob: -5.431117057800293
    5. '_segments' → logprob: -5.681117057800293
    6. '
' → logprob: -6.306117057800293
    7. '_dir' → logprob: -6.431117057800293
    8. '==' → logprob: -6.431117057800293
    9. '_
' → logprob: -6.681117057800293
    10. '```' → logprob: -6.806117057800293

Token 1905: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6107361912727356
    2. ' and' → logprob: -1.7357361316680908
    3. ' or' → logprob: -1.7357361316680908
    4. ' if' → logprob: -2.860736131668091
    5. 'if' → logprob: -3.860736131668091
    6. '           ' → logprob: -4.73573637008667
    7. ':
' → logprob: -5.73573637008667
    8. '               ' → logprob: -5.98573637008667
    9. '                       ' → logprob: -6.11073637008667
    10. 'and' → logprob: -6.23573637008667

Token 1906: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5859778523445129
    2. ' or' → logprob: -1.2109777927398682
    3. ' and' → logprob: -2.710977792739868
    4. ' if' → logprob: -3.710977792739868
    5. '           ' → logprob: -3.960977792739868
    6. '               ' → logprob: -4.835978031158447
    7. 'if' → logprob: -4.960978031158447
    8. 'or' → logprob: -5.460978031158447
    9. '                       ' → logprob: -5.460978031158447
    10. '+' → logprob: -5.710978031158447

Token 1907: ' base' (ID: 3611)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19177481532096863
    2. 'return' → logprob: -2.066774845123291
    3. '                   ' → logprob: -3.191774845123291
    4. ' if' → logprob: -5.316774845123291
    5. '           ' → logprob: -6.566774845123291
    6. ' return' → logprob: -8.441774368286133
    7. '               ' → logprob: -8.441774368286133
    8. 'base' (adapté à ' base') → logprob: -10.191774368286133
    9. '
' → logprob: -11.316774368286133
    10. '                       ' → logprob: -11.816774368286133

Token 1908: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -1.4021237802808173e-05
    2. 'Path' → logprob: -11.875014305114746
    3. 'path' → logprob: -12.250014305114746
    4. '   ' → logprob: -13.750014305114746
    5. '           ' → logprob: -15.250014305114746
    6. 'if' → logprob: -15.875014305114746
    7. '       ' → logprob: -15.875014305114746
    8. '```' → logprob: -16.12501335144043
    9. '_PATH' → logprob: -16.75001335144043
    10. '_segment' → logprob: -16.75001335144043

Token 1909: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0967988520860672
    2. ' =' → logprob: -2.471798896789551
    3. '==' → logprob: -4.971798896789551
    4. 'if' → logprob: -7.596798896789551
    5. '           ' → logprob: -8.59679889678955
    6. '+=' → logprob: -9.22179889678955
    7. ' if' → logprob: -10.47179889678955
    8. ' or' → logprob: -11.09679889678955
    9. 'return' → logprob: -11.09679889678955
    10. 'or' → logprob: -11.47179889678955

Token 1910: ' base' (ID: 3611)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18960829079151154
    2. 'base' → logprob: -1.9396083354949951
    3. ' base' → logprob: -4.439608097076416
    4. ' '/'' → logprob: -4.439608097076416
    5. ''/' → logprob: -5.439608097076416
    6. '"/' → logprob: -8.064608573913574
    7. '   ' → logprob: -8.564608573913574
    8. '('/')' → logprob: -9.564608573913574
    9. ' ' → logprob: -9.689608573913574
    10. '(base' → logprob: -10.064608573913574

Token 1911: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.00017600801947992295
    2. 'path' → logprob: -8.750176429748535
    3. ''' → logprob: -11.500176429748535
    4. 'Path' → logprob: -13.000176429748535
    5. '_' → logprob: -14.125176429748535
    6. '```' → logprob: -14.125176429748535
    7. ''/' → logprob: -14.500176429748535
    8. '   ' → logprob: -14.500176429748535
    9. 'if' → logprob: -14.750176429748535
    10. '`' → logprob: -14.875176429748535

Token 1912: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8546572923660278
    2. ' if' → logprob: -1.2296572923660278
    3. ' or' → logprob: -1.6046572923660278
    4. 'or' → logprob: -2.6046571731567383
    5. '.rstrip' → logprob: -5.979657173156738
    6. '+' → logprob: -6.479657173156738
    7. '           ' → logprob: -6.979657173156738
    8. ' +' → logprob: -7.104657173156738
    9. '   ' → logprob: -8.104657173156738
    10. '                   ' → logprob: -8.354657173156738

Token 1913: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -2.7610454708337784e-05
    2. ' base' → logprob: -10.500027656555176
    3. '```' → logprob: -17.62502670288086
    4. '(base' → logprob: -18.00002670288086
    5. '
' → logprob: -19.25002670288086
    6. '	base' → logprob: -19.37502670288086
    7. 'len' → logprob: -19.50002670288086
    8. '   ' → logprob: -20.12502670288086
    9. 'not' → logprob: -21.12502670288086
    10. '>' → logprob: -21.62502670288086

Token 1914: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0034068014938384295
    2. 'path' → logprob: -5.878407001495361
    3. 'segments' → logprob: -8.753406524658203
    4. '```' → logprob: -8.753406524658203
    5. '!=' → logprob: -9.253406524658203
    6. '_segments' → logprob: -10.628406524658203
    7. '!='' → logprob: -10.753406524658203
    8. '==' → logprob: -10.753406524658203
    9. ' !=' → logprob: -11.003406524658203
    10. '_paths' → logprob: -11.503406524658203

Token 1915: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07993769645690918
    2. 'else' → logprob: -3.079937696456909
    3. ' !=' → logprob: -3.579937696456909
    4. '!==' → logprob: -6.704937934875488
    5. '!='' → logprob: -7.329937934875488
    6. ' else' → logprob: -7.579937934875488
    7. '!' → logprob: -8.204937934875488
    8. 'not' → logprob: -8.954937934875488
    9. '==' → logprob: -9.204937934875488
    10. '```' → logprob: -10.704937934875488

Token 1916: ' ''' (ID: 8686)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.10024560242891312
    2. ''' → logprob: -2.350245714187622
    3. ''/' → logprob: -11.100245475769043
    4. '""' → logprob: -11.850245475769043
    5. ' '/'' → logprob: -11.975245475769043
    6. '''
' → logprob: -12.725245475769043
    7. ' ''' → logprob: -12.975245475769043
    8. '/' → logprob: -13.225245475769043
    9. '   ' → logprob: -13.725245475769043
    10. '"/' → logprob: -14.225245475769043

Token 1917: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.014166327193379402
    2. ' else' → logprob: -4.264166355133057
    3. '                   ' → logprob: -13.764165878295898
    4. '/' → logprob: -14.264165878295898
    5. '   ' → logprob: -14.639165878295898
    6. '           ' → logprob: -16.0141658782959
    7. '+' → logprob: -16.1391658782959
    8. '                    ' → logprob: -16.2641658782959
    9. '               ' → logprob: -16.5141658782959
    10. '	else' → logprob: -16.7641658782959

Token 1918: ' '/'
' (ID: 176928)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0012486852938309312
    2. ''/' → logprob: -6.751248836517334
    3. ' '/'' → logprob: -10.501248359680176
    4. '/' → logprob: -10.626248359680176
    5. '"/' → logprob: -10.626248359680176
    6. '('/')' → logprob: -13.626248359680176
    7. '   ' → logprob: -14.751248359680176
    8. '/'' → logprob: -15.001248359680176
    9. '       ' → logprob: -16.126249313354492
    10. '`' → logprob: -16.876249313354492

Token 1919: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01600727066397667
    2. '               ' → logprob: -4.516007423400879
    3. '           ' → logprob: -5.641007423400879
    4. 'return' → logprob: -7.391007423400879
    5. '                       ' → logprob: -7.516007423400879
    6. '```' → logprob: -9.516007423400879
    7. '       ' → logprob: -9.641007423400879
    8. '   ' → logprob: -10.391007423400879
    9. '
' → logprob: -10.891007423400879
    10. '				' → logprob: -11.266007423400879

Token 1920: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26507100462913513
    2. '                   ' → logprob: -1.5150710344314575
    3. ' return' → logprob: -4.640070915222168
    4. 'if' → logprob: -6.265070915222168
    5. '               ' → logprob: -7.265070915222168
    6. '                       ' → logprob: -8.140070915222168
    7. '           ' → logprob: -8.140070915222168
    8. ' if' → logprob: -9.140070915222168
    9. '
' → logprob: -10.140070915222168
    10. '   ' → logprob: -10.515070915222168

Token 1921: ' Depending' (ID: 51083)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006527434103190899
    2. '                   ' → logprob: -5.256527423858643
    3. 'if' → logprob: -7.131527423858643
    4. ' return' → logprob: -7.756527423858643
    5. '               ' → logprob: -10.1315279006958
    6. '                       ' → logprob: -11.3815279006958
    7. '           ' → logprob: -12.3815279006958
    8. '   ' → logprob: -12.6315279006958
    9. ' if' → logprob: -13.0065279006958
    10. '#' → logprob: -13.1315279006958

Token 1922: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.022519130259752274
    2. 'on' → logprob: -3.897519111633301
    3. ' if' → logprob: -6.897519111633301
    4. ' in' → logprob: -8.5225191116333
    5. ' to' → logprob: -9.2725191116333
    6. ' of' → logprob: -9.5225191116333
    7. ' ' → logprob: -9.5225191116333
    8. ' (' → logprob: -9.5225191116333
    9. ' not' → logprob: -10.5225191116333
    10. '       ' → logprob: -10.5225191116333

Token 1923: ' trailing' (ID: 57985)
  Prédit: 'pathname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pathname' → logprob: -0.35042911767959595
    2. 'self' → logprob: -1.3504290580749512
    3. ' pathname' → logprob: -3.725429058074951
    4. ' self' → logprob: -4.725429058074951
    5. 'path' → logprob: -6.350429058074951
    6. 'not' → logprob: -7.600429058074951
    7. ' not' → logprob: -8.47542953491211
    8. 'base' → logprob: -9.10042953491211
    9. 'possible' → logprob: -9.22542953491211
    10. 'segments' → logprob: -9.22542953491211

Token 1924: ' slash' (ID: 79755)
  Prédit: '_sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sl' → logprob: -0.697670578956604
    2. 'slash' → logprob: -0.697670578956604
    3. ' slash' → logprob: -6.4476704597473145
    4. '_' → logprob: -7.0726704597473145
    5. '_seg' → logprob: -7.3226704597473145
    6. 'sl' → logprob: -7.8226704597473145
    7. '```' → logprob: -8.447670936584473
    8. '_path' → logprob: -8.572670936584473
    9. 'slashes' → logprob: -8.572670936584473
    10. 'underscore' → logprob: -9.447670936584473

Token 1925: ' or' (ID: 503)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5479416251182556
    2. ':
' → logprob: -2.0479416847229004
    3. 'if' → logprob: -2.1729416847229004
    4. ':' → logprob: -3.0479416847229004
    5. ' and' → logprob: -3.5479416847229004
    6. '                   ' → logprob: -3.6729416847229004
    7. ',' → logprob: -3.7979416847229004
    8. '           ' → logprob: -4.6729416847229
    9. 'return' → logprob: -4.6729416847229
    10. '       ' → logprob: -5.0479416847229

Token 1926: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2050095945596695
    2. ' not' → logprob: -1.7050095796585083
    3. 'possible' → logprob: -6.955009460449219
    4. 'True' → logprob: -7.205009460449219
    5. 'no' → logprob: -7.330009460449219
    6. '
' → logprob: -8.705009460449219
    7. 'False' → logprob: -9.080009460449219
    8. ' True' → logprob: -9.080009460449219
    9. 'last' → logprob: -9.205009460449219
    10. ' no' → logprob: -9.205009460449219

Token 1927: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005036524962633848
    2. ',' → logprob: -6.005036354064941
    3. 'return' → logprob: -7.005036354064941
    4. ':
' → logprob: -7.630036354064941
    5. '
' → logprob: -8.130036354064941
    6. '               ' → logprob: -8.630036354064941
    7. ' return' → logprob: -8.880036354064941
    8. '           ' → logprob: -9.005036354064941
    9. ' if' → logprob: -9.130036354064941
    10. ':' → logprob: -9.255036354064941

Token 1928: ' both' (ID: 2973)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6277815103530884
    2. 'return' → logprob: -0.8777815103530884
    3. '                   ' → logprob: -3.627781391143799
    4. '                       ' → logprob: -3.752781391143799
    5. '                    ' → logprob: -8.377781867980957
    6. ':return' → logprob: -10.002781867980957
    7. '   ' → logprob: -10.377781867980957
    8. ' if' → logprob: -10.502781867980957
    9. '                        ' → logprob: -10.627781867980957
    10. '```' → logprob: -10.877781867980957

Token 1929: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.40040597319602966
    2. ' return' → logprob: -2.4004058837890625
    3. ' and' → logprob: -2.9004058837890625
    4. 'return' → logprob: -3.0254058837890625
    5. 'are' → logprob: -3.2754058837890625
    6. ' or' → logprob: -4.1504058837890625
    7. ' options' → logprob: -4.6504058837890625
    8. ' paths' → logprob: -4.7754058837890625
    9. ' can' → logprob: -4.9004058837890625
    10. '```' → logprob: -5.0254058837890625

Token 1930: ' equivalent' (ID: 23458)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.45996153354644775
    2. 'valid' → logprob: -2.334961414337158
    3. ' acceptable' → logprob: -2.459961414337158
    4. 'accepted' → logprob: -2.584961414337158
    5. 'acceptable' → logprob: -3.084961414337158
    6. ' accepted' → logprob: -3.459961414337158
    7. 'consider' → logprob: -4.459961414337158
    8. ' equivalent' → logprob: -4.709961414337158
    9. ' considered' → logprob: -5.209961414337158
    10. 'equ' → logprob: -5.709961414337158

Token 1931: '.
' (ID: 558)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0021275414619594812
    2. 'return' → logprob: -7.252127647399902
    3. '               ' → logprob: -7.252127647399902
    4. '
' → logprob: -8.002127647399902
    5. '           ' → logprob: -8.627127647399902
    6. ',' → logprob: -9.377127647399902
    7. ' return' → logprob: -10.002127647399902
    8. '                       ' → logprob: -10.752127647399902
    9. 'if' → logprob: -12.002127647399902
    10. '.' → logprob: -12.002127647399902

Token 1932: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030251752585172653
    2. '           ' → logprob: -4.030251979827881
    3. '               ' → logprob: -4.530251979827881
    4. 'return' → logprob: -7.280251979827881
    5. '       ' → logprob: -8.155251502990723
    6. '                       ' → logprob: -8.655251502990723
    7. '```' → logprob: -10.280251502990723
    8. ' return' → logprob: -10.655251502990723
    9. '
' → logprob: -10.905251502990723
    10. '                  ' → logprob: -11.780251502990723

Token 1933: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2733079195022583
    2. '                   ' → logprob: -1.5233079195022583
    3. 'if' → logprob: -5.023307800292969
    4. ' return' → logprob: -5.023307800292969
    5. '               ' → logprob: -5.523307800292969
    6. '           ' → logprob: -5.773307800292969
    7. '                       ' → logprob: -7.898307800292969
    8. ' if' → logprob: -8.273307800292969
    9. '       ' → logprob: -8.523307800292969
    10. '   ' → logprob: -10.398307800292969

Token 1934: ' Per' (ID: 4651)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05088457837700844
    2. '                   ' → logprob: -3.300884485244751
    3. 'if' → logprob: -4.67588472366333
    4. ' return' → logprob: -6.42588472366333
    5. '           ' → logprob: -6.80088472366333
    6. '               ' → logprob: -7.67588472366333
    7. '       ' → logprob: -9.050884246826172
    8. ' if' → logprob: -10.050884246826172
    9. '                       ' → logprob: -10.550884246826172
    10. '#' → logprob: -10.800884246826172

Token 1935: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.3635880947113037
    2. ' problem' → logprob: -1.6135880947113037
    3. 'self' → logprob: -2.9885880947113037
    4. '           ' → logprob: -3.8635880947113037
    5. '#' → logprob: -4.613588333129883
    6. 'the' → logprob: -4.863588333129883
    7. ' the' → logprob: -5.988588333129883
    8. 'return' → logprob: -6.113588333129883
    9. '               ' → logprob: -6.488588333129883
    10. '                   ' → logprob: -6.613588333129883

Token 1936: ' trailing' (ID: 57985)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8046267032623291
    2. '                   ' → logprob: -0.8046267032623291
    3. 'return' → logprob: -3.179626703262329
    4. ' return' → logprob: -4.17962646484375
    5. '#' → logprob: -4.67962646484375
    6. ',' → logprob: -4.80462646484375
    7. '       ' → logprob: -4.80462646484375
    8. '               ' → logprob: -4.92962646484375
    9. '           ' → logprob: -4.92962646484375
    10. ':
' → logprob: -5.55462646484375

Token 1937: ' slash' (ID: 79755)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14630478620529175
    2. '_sl' → logprob: -2.0213048458099365
    3. ' _' → logprob: -5.896304607391357
    4. 'slash' → logprob: -8.396305084228516
    5. '_s' → logprob: -9.021305084228516
    6. '_path' → logprob: -9.646305084228516
    7. '_strip' → logprob: -9.646305084228516
    8. '/' → logprob: -9.646305084228516
    9. '_suffix' → logprob: -9.771305084228516
    10. '_slug' → logprob: -10.146305084228516

Token 1938: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.136179119348526
    2. '=' → logprob: -4.011178970336914
    3. ' =' → logprob: -4.261178970336914
    4. ' should' → logprob: -4.511178970336914
    5. ' can' → logprob: -4.636178970336914
    6. ':' → logprob: -4.636178970336914
    7. ' if' → logprob: -4.886178970336914
    8. ' and' → logprob: -5.011178970336914
    9. ')' → logprob: -5.011178970336914
    10. '==' → logprob: -5.511178970336914

Token 1939: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0159685630351305
    2. ' either' → logprob: -4.2659687995910645
    3. 'either' → logprob: -7.3909687995910645
    4. 'be' → logprob: -7.6409687995910645
    5. ' not' → logprob: -8.140968322753906
    6. ' return' → logprob: -9.765968322753906
    7. ')' → logprob: -9.890968322753906
    8. ' have' → logprob: -9.890968322753906
    9. ' present' → logprob: -10.390968322753906
    10. '"' → logprob: -10.515968322753906

Token 1940: ' omitted' (ID: 92895)
  Prédit: ' omitted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' omitted' → logprob: -0.6552027463912964
    2. 'either' → logprob: -1.5302027463912964
    3. ' either' → logprob: -2.280202865600586
    4. 'present' → logprob: -2.780202865600586
    5. 'removed' → logprob: -3.280202865600586
    6. 'om' → logprob: -4.155202865600586
    7. ' present' → logprob: -4.405202865600586
    8. '''' → logprob: -5.030202865600586
    9. ' removed' → logprob: -5.280202865600586
    10. 'ke' → logprob: -5.405202865600586

Token 1941: '.
' (ID: 558)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04616880416870117
    2. '               ' → logprob: -3.921168804168701
    3. '
' → logprob: -4.046168804168701
    4. 'return' → logprob: -5.421168804168701
    5. '           ' → logprob: -6.296168804168701
    6. '       ' → logprob: -7.921168804168701
    7. ' or' → logprob: -8.04616928100586
    8. ' and' → logprob: -8.42116928100586
    9. ' return' → logprob: -8.79616928100586
    10. ',' → logprob: -9.17116928100586

Token 1942: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.041407134383916855
    2. '           ' → logprob: -3.6664071083068848
    3. '               ' → logprob: -4.916407108306885
    4. 'return' → logprob: -5.166407108306885
    5. ' return' → logprob: -7.041407108306885
    6. '       ' → logprob: -7.291407108306885
    7. '
' → logprob: -8.541407585144043
    8. '                       ' → logprob: -9.666407585144043
    9. '```' → logprob: -9.666407585144043
    10. '   ' → logprob: -9.916407585144043

Token 1943: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23849806189537048
    2. '                   ' → logprob: -1.7384980916976929
    3. ' return' → logprob: -3.6134979724884033
    4. '           ' → logprob: -4.988498210906982
    5. '               ' → logprob: -6.238498210906982
    6. '       ' → logprob: -7.863498210906982
    7. '   ' → logprob: -9.113497734069824
    8. '
' → logprob: -9.738497734069824
    9. '                       ' → logprob: -9.988497734069824
    10. 'if' → logprob: -9.988497734069824

Token 1944: ' Normalize' (ID: 155762)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08284851163625717
    2. '                   ' → logprob: -2.70784854888916
    3. ' return' → logprob: -5.08284854888916
    4. '               ' → logprob: -5.83284854888916
    5. 'if' → logprob: -5.95784854888916
    6. '           ' → logprob: -7.08284854888916
    7. '       ' → logprob: -9.20784854888916
    8. ' if' → logprob: -9.83284854888916
    9. '   ' → logprob: -10.58284854888916
    10. '
' → logprob: -10.70784854888916

Token 1945: ' final' (ID: 1721)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(base' → logprob: -1.2327089309692383
    2. ' =' → logprob: -1.3577089309692383
    3. 'return' → logprob: -2.2327089309692383
    4. '=' → logprob: -2.2327089309692383
    5. 'base' → logprob: -2.7327089309692383
    6. ' to' → logprob: -2.7327089309692383
    7. '                   ' → logprob: -2.8577089309692383
    8. ' base' → logprob: -4.232708930969238
    9. '_base' → logprob: -4.607708930969238
    10. ' return' → logprob: -5.357708930969238

Token 1946: ' as' (ID: 472)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0041991365142166615
    2. 'path' → logprob: -6.754199028015137
    3. '_token' → logprob: -7.254199028015137
    4. '_result' → logprob: -7.379199028015137
    5. '_' → logprob: -8.379199028015137
    6. ' path' → logprob: -8.629199028015137
    7. ' =' → logprob: -8.629199028015137
    8. '_string' → logprob: -8.754199028015137
    9. '_str' → logprob: -8.754199028015137
    10. '_file' → logprob: -9.004199028015137

Token 1947: ' directory' (ID: 12552)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0019335162360221148
    2. ' base' → logprob: -6.251933574676514
    3. '```' → logprob: -12.876933097839355
    4. '   ' → logprob: -14.001933097839355
    5. '(base' → logprob: -14.251933097839355
    6. '	base' → logprob: -14.751933097839355
    7. 'canonical' → logprob: -16.126934051513672
    8. '`' → logprob: -16.126934051513672
    9. '
' → logprob: -16.251934051513672
    10. '``' → logprob: -17.001934051513672

Token 1948: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.07549580186605453
    2. '_' → logprob: -4.200495719909668
    3. ' +' → logprob: -4.700495719909668
    4. ')' → logprob: -4.700495719909668
    5. '       ' → logprob: -5.075495719909668
    6. 'path' → logprob: -5.325495719909668
    7. '/' → logprob: -5.700495719909668
    8. ':' → logprob: -5.825495719909668
    9. ''' → logprob: -5.950495719909668
    10. '<|end|>' → logprob: -6.325495719909668

Token 1949: ' without' (ID: 2935)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0618503093719482
    2. ' +' → logprob: -1.5618503093719482
    3. ' if' → logprob: -1.6868503093719482
    4. '
' → logprob: -2.1868503093719482
    5. '       ' → logprob: -3.3118503093719482
    6. '               ' → logprob: -4.311850547790527
    7. '+' → logprob: -4.811850547790527
    8. 'return' → logprob: -5.061850547790527
    9. ' with' → logprob: -5.186850547790527
    10. '           ' → logprob: -5.186850547790527

Token 1950: ' trailing' (ID: 57985)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.16868573427200317
    2. ' trailing' → logprob: -1.9186856746673584
    3. 'slash' → logprob: -5.0436859130859375
    4. '/' → logprob: -7.1686859130859375
    5. 'a' → logprob: -7.4186859130859375
    6. 'index' → logprob: -8.418685913085938
    7. '/tr' → logprob: -9.168685913085938
    8. '('/')' → logprob: -9.793685913085938
    9. ' a' → logprob: -10.168685913085938
    10. '/index' → logprob: -10.543685913085938

Token 1951: ' slash' (ID: 79755)
  Prédit: 'slash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slash' → logprob: -0.0519847646355629
    2. '_sl' → logprob: -3.1769847869873047
    3. '/' → logprob: -5.551984786987305
    4. '_' → logprob: -5.676984786987305
    5. ' slash' → logprob: -7.551984786987305
    6. ''' → logprob: -7.676984786987305
    7. '`' → logprob: -8.926984786987305
    8. '```' → logprob: -8.926984786987305
    9. 'slashes' → logprob: -9.426984786987305
    10. ''_' → logprob: -9.551984786987305

Token 1952: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7135342955589294
    2. '               ' → logprob: -1.7135343551635742
    3. '                   ' → logprob: -1.8385343551635742
    4. '           ' → logprob: -2.088534355163574
    5. '       ' → logprob: -3.588534355163574
    6. 'return' → logprob: -5.463534355163574
    7. '\n' → logprob: -5.713534355163574
    8. '        
' → logprob: -5.963534355163574
    9. '.' → logprob: -6.463534355163574
    10. '.
' → logprob: -7.088534355163574

Token 1953: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06049805507063866
    2. '           ' → logprob: -3.060497999191284
    3. '               ' → logprob: -4.685498237609863
    4. '       ' → logprob: -6.935498237609863
    5. 'return' → logprob: -7.060498237609863
    6. '                       ' → logprob: -7.435498237609863
    7. '   ' → logprob: -9.810498237609863
    8. '```' → logprob: -10.185498237609863
    9. ' return' → logprob: -10.435498237609863
    10. '
' → logprob: -10.435498237609863

Token 1954: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00918396282941103
    2. '                   ' → logprob: -5.009183883666992
    3. ' return' → logprob: -6.134183883666992
    4. '           ' → logprob: -9.009183883666992
    5. '               ' → logprob: -9.634183883666992
    6. '       ' → logprob: -10.009183883666992
    7. '   ' → logprob: -10.259183883666992
    8. '                       ' → logprob: -11.884183883666992
    9. 'base' → logprob: -12.009183883666992
    10. '
' → logprob: -12.509183883666992

Token 1955: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0002615742268972099
    2. ' base' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.500261306762695
    4. '(base' → logprob: -16.500261306762695
    5. '	base' → logprob: -16.625261306762695
    6. '`' → logprob: -17.625261306762695
    7. '```' → logprob: -18.125261306762695
    8. 'b' → logprob: -19.250261306762695
    9. ' ' → logprob: -20.000261306762695
    10. 'Base' → logprob: -20.750261306762695

Token 1956: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -6.2729995988775045e-06
    2. 'path' → logprob: -12.625006675720215
    3. '```' → logprob: -14.125006675720215
    4. 'Path' → logprob: -14.250006675720215
    5. '_' → logprob: -15.250006675720215
    6. '_PATH' → logprob: -15.500006675720215
    7. '`' → logprob: -15.875006675720215
    8. '   ' → logprob: -16.0000057220459
    9. '           ' → logprob: -16.1250057220459
    10. ''_' → logprob: -16.2500057220459

Token 1957: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38406774401664734
    2. '               ' → logprob: -1.7590677738189697
    3. '           ' → logprob: -2.0090677738189697
    4. '<|end|>' → logprob: -5.384067535400391
    5. '
' → logprob: -6.384067535400391
    6. 'else' → logprob: -6.759067535400391
    7. '        
' → logprob: -6.884067535400391
    8. '.' → logprob: -7.134067535400391
    9. ')' → logprob: -7.759067535400391
    10. ' else' → logprob: -7.884067535400391

Token 1958: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2698366641998291
    2. '           ' → logprob: -1.769836664199829
    3. '       ' → logprob: -3.019836664199829
    4. 'else' → logprob: -5.39483642578125
    5. 'return' → logprob: -5.64483642578125
    6. ')' → logprob: -6.39483642578125
    7. '<|end|>' → logprob: -6.39483642578125
    8. '.' → logprob: -6.76983642578125
    9. ' else' → logprob: -6.89483642578125
    10. '```' → logprob: -7.51983642578125

Token 1959: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013784486800432205
    2. 'else' (adapté à ' else') → logprob: -6.751378536224365
    3. '
' → logprob: -9.001378059387207
    4. ' else' → logprob: -9.876378059387207
    5. '       ' → logprob: -11.501378059387207
    6. 'return' → logprob: -11.876378059387207
    7. '               ' → logprob: -12.001378059387207
    8. '            
' → logprob: -12.126378059387207
    9. 'elif' → logprob: -12.876378059387207
    10. '    
' → logprob: -14.126378059387207

Token 1960: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6062608361244202
    2. '                   ' → logprob: -0.9812608361244202
    3. ':
' → logprob: -2.7312607765197754
    4. ':' → logprob: -4.981260776519775
    5. '           ' → logprob: -5.356260776519775
    6. '                ' → logprob: -6.606260776519775
    7. '                       ' → logprob: -8.231261253356934
    8. '                  ' → logprob: -8.356261253356934
    9. '                    ' → logprob: -8.981261253356934
    10. '              ' → logprob: -9.106261253356934

Token 1961: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2322174310684204
    2. '               ' → logprob: -1.6072174310684204
    3. 'return' → logprob: -5.607217311859131
    4. ' return' → logprob: -6.357217311859131
    5. '           ' → logprob: -6.857217311859131
    6. '                       ' → logprob: -8.857217788696289
    7. '   ' → logprob: -9.482217788696289
    8. '                ' → logprob: -10.482217788696289
    9. '       ' → logprob: -11.107217788696289
    10. '                  ' → logprob: -11.482217788696289

Token 1962: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3208540976047516
    2. ' return' → logprob: -1.4458540678024292
    3. '               ' → logprob: -3.6958541870117188
    4. '                   ' → logprob: -4.320854187011719
    5. '           ' → logprob: -8.070854187011719
    6. '   ' → logprob: -8.570854187011719
    7. '
' → logprob: -9.695854187011719
    8. '#' (adapté à ' #') → logprob: -9.820854187011719
    9. 'file' → logprob: -9.820854187011719
    10. '                       ' → logprob: -10.070854187011719

Token 1963: ' ordinary' (ID: 30633)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05381070822477341
    2. ' return' → logprob: -3.0538105964660645
    3. '               ' → logprob: -5.6788105964660645
    4. '                   ' → logprob: -6.4288105964660645
    5. '           ' → logprob: -9.053811073303223
    6. '#' → logprob: -10.553811073303223
    7. '       ' → logprob: -11.178811073303223
    8. '   ' → logprob: -11.678811073303223
    9. '                       ' → logprob: -12.553811073303223
    10. '
' → logprob: -12.928811073303223

Token 1964: ' file' (ID: 1974)
  Prédit: '_file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -0.3663454055786133
    2. ' file' → logprob: -1.4913454055786133
    3. 'file' → logprob: -2.7413454055786133
    4. '_' → logprob: -4.866345405578613
    5. ')' → logprob: -5.241345405578613
    6. '_filename' → logprob: -7.366345405578613
    7. '_path' → logprob: -7.366345405578613
    8. '<|end|>' → logprob: -7.616345405578613
    9. 'File' → logprob: -8.116345405578613
    10. '_filepath' → logprob: -8.366345405578613

Token 1965: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.22584766149520874
    2. '<|end|>' → logprob: -2.2258477210998535
    3. ')' → logprob: -3.3508477210998535
    4. '<|end|>' → logprob: -3.3508477210998535
    5. '
' → logprob: -4.4758477210998535
    6. ':' → logprob: -6.3508477210998535
    7. '_' → logprob: -6.6008477210998535
    8. 'path' → logprob: -7.1008477210998535
    9. '```' → logprob: -7.1008477210998535
    10. ''' → logprob: -7.4758477210998535

Token 1966: ' no' (ID: 860)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1967: ' special' (ID: 3582)
  Prédit: ' trailing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trailing' → logprob: -0.5904035568237305
    2. 'slash' → logprob: -2.2154035568237305
    3. '/' → logprob: -2.7154035568237305
    4. '_suffix' → logprob: -3.2154035568237305
    5. '_' → logprob: -3.4654035568237305
    6. '```' → logprob: -3.8404035568237305
    7. 'suffix' → logprob: -3.8404035568237305
    8. 'index' → logprob: -3.9654035568237305
    9. ' '/'' → logprob: -3.9654035568237305
    10. ' slash' → logprob: -4.8404035568237305

Token 1968: ' omission' (ID: 171628)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36021336913108826
    2. '_suffix' → logprob: -2.860213279724121
    3. 'suffix' → logprob: -3.235213279724121
    4. '/' → logprob: -3.735213279724121
    5. '```' → logprob: -3.985213279724121
    6. 'char' → logprob: -4.360213279724121
    7. ' handling' → logprob: -4.360213279724121
    8. '_char' → logprob: -4.485213279724121
    9. 'character' → logprob: -4.485213279724121
    10. ' trailing' → logprob: -4.610213279724121

Token 1969: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8894644379615784
    2. ':' → logprob: -1.7644643783569336
    3. ')' → logprob: -2.0144643783569336
    4. ':
' → logprob: -2.3894643783569336
    5. ' return' → logprob: -3.7644643783569336
    6. 'return' → logprob: -4.139464378356934
    7. '_' → logprob: -4.264464378356934
    8. '       ' → logprob: -4.389464378356934
    9. '```' → logprob: -4.389464378356934
    10. '   ' → logprob: -4.639464378356934

Token 1970: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2972055673599243
    2. '               ' → logprob: -1.5472055673599243
    3. '           ' → logprob: -4.172205448150635
    4. '       ' → logprob: -4.672205448150635
    5. ')' → logprob: -5.047205448150635
    6. '.' → logprob: -5.922205448150635
    7. 'return' → logprob: -6.047205448150635
    8. '                ' → logprob: -7.047205448150635
    9. ' return' → logprob: -7.047205448150635
    10. '<|end|>' → logprob: -7.297205448150635

Token 1971: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20824065804481506
    2. 'return' (adapté à ' return') → logprob: -1.7082406282424927
    3. '                   ' → logprob: -5.083240509033203
    4. '               ' → logprob: -7.958240509033203
    5. '   ' → logprob: -9.208240509033203
    6. '           ' → logprob: -9.583240509033203
    7. '	return' → logprob: -10.208240509033203
    8. '       ' → logprob: -11.208240509033203
    9. '                       ' → logprob: -11.208240509033203
    10. '                ' → logprob: -11.958240509033203

Token 1972: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.00861681904643774
    2. ' file' → logprob: -4.758616924285889
    3. ''' → logprob: -13.50861644744873
    4. 'f' → logprob: -14.63361644744873
    5. '`' → logprob: -16.758617401123047
    6. '   ' → logprob: -16.883617401123047
    7. '	file' → logprob: -17.008617401123047
    8. '_file' → logprob: -17.133617401123047
    9. 'filepath' → logprob: -17.133617401123047
    10. '               ' → logprob: -17.383617401123047

Token 1973: '_path' (ID: 5558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23611529171466827
    2. 'name' → logprob: -2.2361152172088623
    3. '_name' → logprob: -4.361115455627441
    4. 'ilename' → logprob: -4.486115455627441
    5. '"' → logprob: -4.611115455627441
    6. ')' → logprob: -4.736115455627441
    7. ''' → logprob: -4.736115455627441
    8. '\n' → logprob: -4.736115455627441
    9. '.' → logprob: -5.111115455627441
    10. '_path' → logprob: -5.611115455627441

Token 1974: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1975: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18274416029453278
    2. '    
' → logprob: -2.057744264602661
    3. '<|end|>' → logprob: -4.307744026184082
    4. '
' → logprob: -4.932744026184082
    5. '```' → logprob: -5.807744026184082
    6. '       ' → logprob: -5.807744026184082
    7. '    ' → logprob: -6.182744026184082
    8. '_' → logprob: -6.557744026184082
    9. 'def' → logprob: -6.682744026184082
    10. '        
' → logprob: -6.682744026184082

Token 1976: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13902133703231812
    2. '       ' → logprob: -2.764021396636963
    3. 'else' (adapté à ' else') → logprob: -2.764021396636963
    4. ' else' → logprob: -5.639021396636963
    5. 'return' → logprob: -9.639020919799805
    6. '
' → logprob: -10.139020919799805
    7. 'elif' → logprob: -10.639020919799805
    8. '               ' → logprob: -10.889020919799805
    9. '   ' → logprob: -12.139020919799805
    10. '		' → logprob: -14.139020919799805

Token 1977: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29555994272232056
    2. ':
' → logprob: -1.4205598831176758
    3. ':' → logprob: -4.545559883117676
    4. '           ' → logprob: -5.920559883117676
    5. ':return' → logprob: -7.795559883117676
    6. 'return' → logprob: -8.045559883117676
    7. '                   ' → logprob: -9.795559883117676
    8. ':
' → logprob: -10.170559883117676
    9. '{
' → logprob: -10.295559883117676
    10. '{' → logprob: -10.295559883117676

Token 1978: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003848413238301873
    2. '           ' → logprob: -5.753848552703857
    3. 'return' → logprob: -7.378848552703857
    4. ' return' → logprob: -10.6288480758667
    5. '                   ' → logprob: -11.2538480758667
    6. '#' → logprob: -12.2538480758667
    7. '   ' → logprob: -13.0038480758667
    8. '       ' → logprob: -14.1288480758667
    9. ' #' → logprob: -15.3788480758667
    10. '              ' → logprob: -15.5038480758667

Token 1979: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47191092371940613
    2. '               ' → logprob: -1.4719109535217285
    3. '#' (adapté à ' #') → logprob: -2.0969109535217285
    4. 'return' → logprob: -4.3469109535217285
    5. ' #' → logprob: -5.0969109535217285
    6. ' return' → logprob: -5.5969109535217285
    7. '   ' → logprob: -7.0969109535217285
    8. '       ' → logprob: -9.34691047668457
    9. ' ' → logprob: -10.72191047668457
    10. ' None' → logprob: -10.97191047668457

Token 1980: ' file' (ID: 1974)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2806481420993805
    2. '               ' → logprob: -1.655648112297058
    3. ' #' → logprob: -3.7806482315063477
    4. '           ' → logprob: -4.280648231506348
    5. 'return' → logprob: -4.280648231506348
    6. ' return' → logprob: -5.905648231506348
    7. 'canonical' → logprob: -8.655648231506348
    8. '   ' → logprob: -9.405648231506348
    9. 'if' → logprob: -10.030648231506348
    10. '       ' → logprob: -10.280648231506348

Token 1981: ' not' (ID: 625)
  Prédit: '_exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exists' → logprob: -0.03626341000199318
    2. '_path' → logprob: -3.9112634658813477
    3. '_not' → logprob: -4.536263465881348
    4. ' not' → logprob: -6.286263465881348
    5. 'not' → logprob: -7.036263465881348
    6. 'exists' → logprob: -8.286263465881348
    7. '_missing' → logprob: -8.536263465881348
    8. 'does' → logprob: -8.786263465881348
    9. ' does' → logprob: -8.911263465881348
    10. '```' → logprob: -8.911263465881348

Token 1982: ' exist' (ID: 4310)
  Prédit: '_exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_exists' → logprob: -0.028980815783143044
    2. '_found' → logprob: -4.153980731964111
    3. 'exists' → logprob: -4.903980731964111
    4. 'found' → logprob: -5.778980731964111
    5. ' exists' → logprob: -6.903980731964111
    6. ' found' → logprob: -7.778980731964111
    7. ' _' → logprob: -7.903980731964111
    8. '_exist' → logprob: -8.40398120880127
    9. '_in' → logprob: -9.65398120880127
    10. ')' → logprob: -9.65398120880127

Token 1983: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10350306332111359
    2. '                   ' → logprob: -3.2285029888153076
    3. ':
' → logprob: -3.3535029888153076
    4. ':' → logprob: -5.353503227233887
    5. '                ' → logprob: -5.478503227233887
    6. ' return' → logprob: -5.978503227233887
    7. 'return' → logprob: -6.103503227233887
    8. '           ' → logprob: -6.603503227233887
    9. 'None' → logprob: -6.978503227233887
    10. '<|end|>' → logprob: -6.978503227233887

Token 1984: ' try' (ID: 2075)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6984802484512329
    2. '               ' → logprob: -1.323480248451233
    3. 'return' → logprob: -1.448480248451233
    4. '#' → logprob: -7.448480129241943
    5. ' None' → logprob: -8.323480606079102
    6. '                ' → logprob: -8.698480606079102
    7. ' #' → logprob: -9.073480606079102
    8. ' continue' → logprob: -9.573480606079102
    9. 'None' → logprob: -9.823480606079102
    10. '                   ' → logprob: -9.948480606079102

Token 1985: ' Hyp' (ID: 59608)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3931654393672943
    2. '{
' → logprob: -2.268165349960327
    3. ':' → logprob: -3.018165349960327
    4. ' last' → logprob: -3.518165349960327
    5. 'self' → logprob: -3.768165349960327
    6. ' ' → logprob: -4.018165588378906
    7. ' None' → logprob: -4.143165588378906
    8. '   ' → logprob: -4.268165588378906
    9. 'None' → logprob: -4.893165588378906
    10. '               ' → logprob: -5.018165588378906

Token 1986: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1009284108877182
    2. 'othesis' → logprob: -2.35092830657959
    3. '1' → logprob: -7.35092830657959
    4. 'oth' → logprob: -10.35092830657959
    5. '#' → logprob: -10.72592830657959
    6. ' ' → logprob: -12.10092830657959
    7. ':' → logprob: -12.47592830657959
    8. 'o' → logprob: -12.60092830657959
    9. 'ot' → logprob: -13.10092830657959
    10. '_' → logprob: -13.22592830657959

Token 1987: ' guess' (ID: 11915)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8409568071365356
    2. ':
' → logprob: -1.0909568071365356
    3. ':' → logprob: -1.5909568071365356
    4. '               ' → logprob: -3.715956687927246
    5. '
' → logprob: -6.840956687927246
    6. ' =' → logprob: -7.590956687927246
    7. '            
' → logprob: -8.090956687927246
    8. '       ' → logprob: -8.215956687927246
    9. ',' → logprob: -8.340956687927246
    10. ':

' → logprob: -8.340956687927246

Token 1988: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5944924354553223
    2. '               ' → logprob: -1.7194924354553223
    3. ':
' → logprob: -2.0944924354553223
    4. '           ' → logprob: -2.0944924354553223
    5. ' =' → logprob: -5.094492435455322
    6. '=' → logprob: -5.094492435455322
    7. '                   ' → logprob: -6.594492435455322
    8. '   ' → logprob: -6.594492435455322
    9. '       ' → logprob: -6.719492435455322
    10. ',' → logprob: -7.219492435455322

Token 1989: ' last' (ID: 2174)
  Prédit: ' canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' canonical' → logprob: -0.1102149561047554
    2. 'canonical' → logprob: -2.860214948654175
    3. '               ' → logprob: -3.235214948654175
    4. '   ' → logprob: -5.485215187072754
    5. '           ' → logprob: -6.610215187072754
    6. ' return' → logprob: -8.235215187072754
    7. ' ' → logprob: -8.235215187072754
    8. ' _' → logprob: -8.360215187072754
    9. '```' → logprob: -8.360215187072754
    10. '                   ' → logprob: -8.610215187072754

Token 1990: ' segment' (ID: 14806)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.056046146899461746
    2. '_' → logprob: -4.431046009063721
    3. 'seg' → logprob: -4.806046009063721
    4. 'segment' → logprob: -4.806046009063721
    5. '_segment' → logprob: -5.181046009063721
    6. '```' → logprob: -5.181046009063721
    7. ')' → logprob: -5.806046009063721
    8. '`' → logprob: -6.306046009063721
    9. 'Seg' → logprob: -6.431046009063721
    10. '
' → logprob: -7.306046009063721

Token 1991: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.17649415135383606
    2. 'is' → logprob: -1.9264941215515137
    3. ' as' → logprob: -4.676494121551514
    4. ':' → logprob: -6.051494121551514
    5. ' =' → logprob: -7.051494121551514
    6. '```' → logprob: -7.051494121551514
    7. '_is' → logprob: -7.426494121551514
    8. ')' → logprob: -7.551494121551514
    9. 'as' → logprob: -7.676494121551514
    10. '=' → logprob: -7.926494121551514

Token 1992: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.005651932675391436
    2. 'a' → logprob: -5.380651950836182
    3. ' directory' → logprob: -7.005651950836182
    4. ' a' → logprob: -9.130651473999023
    5. 'dir' → logprob: -11.630651473999023
    6. 'dirname' → logprob: -13.255651473999023
    7. '_directory' → logprob: -13.380651473999023
    8. ''' → logprob: -14.005651473999023
    9. ' ' → logprob: -14.505651473999023
    10. 'file' → logprob: -15.130651473999023

Token 1993: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36657875776290894
    2. '
' → logprob: -2.4915788173675537
    3. ':
' → logprob: -2.7415788173675537
    4. '                
' → logprob: -3.4915788173675537
    5. '           ' → logprob: -3.6165788173675537
    6. ')' → logprob: -3.8665788173675537
    7. '<|end|>' → logprob: -4.366578578948975
    8. '                   ' → logprob: -4.616578578948975
    9. ':' → logprob: -4.866578578948975
    10. '    
' → logprob: -4.991578578948975

Token 1994: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009285066276788712
    2. '(' → logprob: -6.384284973144531
    3. '                   ' → logprob: -6.509284973144531
    4. '                ' → logprob: -6.759284973144531
    5. '(
' → logprob: -7.009284973144531
    6. '                
' → logprob: -7.009284973144531
    7. '
' → logprob: -8.009284973144531
    8. '           ' → logprob: -8.009284973144531
    9. '\n' → logprob: -8.009284973144531
    10. '('\' → logprob: -8.134284973144531

Token 1995: ' canonical' (ID: 91323)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31755074858665466
    2. '           ' → logprob: -2.0675506591796875
    3. '
' → logprob: -2.5675506591796875
    4. 'canonical' (adapté à ' canonical') → logprob: -3.3175506591796875
    5. ' canonical' → logprob: -3.8175506591796875
    6. '       ' → logprob: -5.3175506591796875
    7. '```' → logprob: -6.6925506591796875
    8. '   ' → logprob: -6.8175506591796875
    9. 'return' → logprob: -7.4425506591796875
    10. '\n' → logprob: -7.6925506591796875

Token 1996: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -4.847109812544659e-05
    2. '_dirs' → logprob: -10.375048637390137
    3. '_d' → logprob: -13.125048637390137
    4. '_' → logprob: -13.125048637390137
    5. 'Dir' → logprob: -13.125048637390137
    6. '`' → logprob: -13.125048637390137
    7. '```' → logprob: -13.750048637390137
    8. ' _' → logprob: -13.750048637390137
    9. '_seg' → logprob: -13.875048637390137
    10. '
' → logprob: -14.375048637390137

Token 1997: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.742448022123426e-05
    2. ' =' → logprob: -10.125067710876465
    3. '=' → logprob: -11.250067710876465
    4. '_' → logprob: -12.500067710876465
    5. '```' → logprob: -12.750067710876465
    6. '       ' → logprob: -13.125067710876465
    7. 's' → logprob: -13.750067710876465
    8. 'segments' → logprob: -13.875067710876465
    9. '_segments' → logprob: -13.875067710876465
    10. '   ' → logprob: -14.625067710876465

Token 1998: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141403377056122
    2. '=' → logprob: -1.7014139890670776
    3. ' ' → logprob: -15.701414108276367
    4. '=self' → logprob: -16.201414108276367
    5. ')' → logprob: -16.326414108276367
    6. '=None' → logprob: -16.326414108276367
    7. '           ' → logprob: -16.701414108276367
    8. '        ' → logprob: -16.826414108276367
    9. '=_' → logprob: -17.576414108276367
    10. '       ' → logprob: -17.951414108276367

Token 1999: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975858747959137
    2. ' self' → logprob: -3.5297586917877197
    3. '               ' → logprob: -12.52975845336914
    4. '           ' → logprob: -13.40475845336914
    5. '(self' → logprob: -14.02975845336914
    6. '[self' → logprob: -14.15475845336914
    7. '   ' → logprob: -14.27975845336914
    8. '                   ' → logprob: -15.40475845336914
    9. '	self' → logprob: -15.40475845336914
    10. '       ' → logprob: -16.02975845336914

Token 2000: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.030178768560290337
    2. '_res' → logprob: -3.5301787853240967
    3. '_normal' → logprob: -8.155179023742676
    4. ' _' → logprob: -9.905179023742676
    5. '.resolve' → logprob: -9.905179023742676
    6. '_' → logprob: -11.030179023742676
    7. '_continue' → logprob: -12.030179023742676
    8. '```' → logprob: -12.530179023742676
    9. '_parse' → logprob: -12.780179023742676
    10. '_finalize' → logprob: -13.655179023742676

Token 2001: 'resolve' (ID: 31567)
  Prédit: 'resolve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resolve' → logprob: -6.704273118884885e-07
    2. '.resolve' → logprob: -15.375000953674316
    3. '
' → logprob: -16.0
    4. 'normalize' → logprob: -16.25
    5. ' resolve' → logprob: -16.25
    6. 'parse' → logprob: -17.125
    7. '	resolve' → logprob: -18.5
    8. 'resolved' → logprob: -18.75
    9. '```' → logprob: -19.0
    10. 'resolver' → logprob: -19.125

Token 2002: '_dirs' (ID: 117442)
  Prédit: '_dirs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dirs' → logprob: -0.0005633997498080134
    2. 'dirs' → logprob: -7.750563621520996
    3. '(se' → logprob: -9.375563621520996
    4. '_se' → logprob: -10.375563621520996
    5. 'se' → logprob: -12.000563621520996
    6. '_dir' → logprob: -12.125563621520996
    7. 'Dirs' → logprob: -13.125563621520996
    8. '```' → logprob: -14.250563621520996
    9. '_' → logprob: -14.375563621520996
    10. '`' → logprob: -15.125563621520996

Token 2003: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -5.848420551046729e-05
    2. 'se' → logprob: -9.7500581741333
    3. '       ' → logprob: -16.125059127807617
    4. '(st' → logprob: -17.750059127807617
    5. '	se' → logprob: -18.125059127807617
    6. '(s' → logprob: -18.875059127807617
    7. '   ' → logprob: -19.125059127807617
    8. ',se' → logprob: -19.250059127807617
    9. ' (' → logprob: -19.375059127807617
    10. '(' → logprob: -19.375059127807617

Token 2004: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -2.2200749754119897e-06
    2. 'qs' → logprob: -13.375001907348633
    3. '[' → logprob: -15.375001907348633
    4. '.gs' → logprob: -17.000001907348633
    5. ' gs' → logprob: -17.000001907348633
    6. 'gments' → logprob: -17.125001907348633
    7. '{
' → logprob: -17.375001907348633
    8. '(gs' → logprob: -17.500001907348633
    9. '[
' → logprob: -17.875001907348633
    10. '```' → logprob: -17.875001907348633

Token 2005: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932646036148071
    2. ')
' → logprob: -0.6932646036148071
    3. '           ' → logprob: -10.693264961242676
    4. '       ' → logprob: -10.818264961242676
    5. '[' → logprob: -11.193264961242676
    6. '               ' → logprob: -11.318264961242676
    7. ',' → logprob: -11.693264961242676
    8. ')`
' → logprob: -11.818264961242676
    9. '):
' → logprob: -11.943264961242676
    10. '
' → logprob: -12.443264961242676

Token 2006: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026119373738765717
    2. ' if' → logprob: -4.901119232177734
    3. '<|end|>' → logprob: -5.276119232177734
    4. ':' → logprob: -5.901119232177734
    5. ')' → logprob: -6.151119232177734
    6. '```' → logprob: -6.276119232177734
    7. '(None' → logprob: -7.026119232177734
    8. '			' → logprob: -7.401119232177734
    9. '           ' → logprob: -7.401119232177734
    10. '                ' → logprob: -7.526119232177734

Token 2007: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8279850482940674
    2. ' if' → logprob: -0.8279850482940674
    3. 'if' (adapté à ' if') → logprob: -2.0779850482940674
    4. '```' → logprob: -7.702984809875488
    5. '       ' → logprob: -7.827984809875488
    6. '           ' → logprob: -9.327984809875488
    7. 'If' → logprob: -12.202984809875488
    8. '   ' → logprob: -12.327984809875488
    9. '	if' → logprob: -12.702984809875488
    10. ' ' → logprob: -13.327984809875488

Token 2008: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.3868989050388336
    2. ' canonical' → logprob: -1.1368988752365112
    3. 'not' → logprob: -11.3868989944458
    4. '               ' → logprob: -12.1368989944458
    5. '                   ' → logprob: -12.5118989944458
    6. ' not' → logprob: -12.6368989944458
    7. '           ' → logprob: -13.2618989944458
    8. 'canon' → logprob: -14.2618989944458
    9. ' canon' → logprob: -15.0118989944458
    10. 'can' → logprob: -15.0118989944458

Token 2009: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -1.7954958821064793e-05
    2. '2' → logprob: -11.500018119812012
    3. 'dir' → logprob: -12.375018119812012
    4. '```' → logprob: -14.125018119812012
    5. 'Dir' → logprob: -14.500018119812012
    6. '`' → logprob: -14.875018119812012
    7. '[' → logprob: -14.875018119812012
    8. '[_' → logprob: -15.500018119812012
    9. '...' → logprob: -16.125017166137695
    10. '
' → logprob: -16.250017166137695

Token 2010: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.3458322731312364e-06
    2. '```' → logprob: -12.875007629394531
    3. '   ' → logprob: -13.375007629394531
    4. ' ' → logprob: -14.125007629394531
    5. '[' → logprob: -14.375007629394531
    6. '       ' → logprob: -14.750007629394531
    7. '``' → logprob: -14.875007629394531
    8. '               ' → logprob: -15.500007629394531
    9. '           ' → logprob: -15.500007629394531
    10. '_' → logprob: -16.12500762939453

Token 2011: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25226226449012756
    2. 'is' → logprob: -1.5022622346878052
    3. '               ' → logprob: -9.127262115478516
    4. ')is' → logprob: -9.877262115478516
    5. '	is' → logprob: -10.627262115478516
    6. '                   ' → logprob: -10.752262115478516
    7. '[' → logprob: -10.752262115478516
    8. ')' → logprob: -11.002262115478516
    9. '                ' → logprob: -11.002262115478516
    10. '==' → logprob: -11.127262115478516

Token 2012: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.02324605919420719
    2. ' None' → logprob: -3.7732460498809814
    3. 'not' → logprob: -15.398245811462402
    4. '_None' → logprob: -15.648245811462402
    5. '(None' → logprob: -16.14824676513672
    6. '=None' → logprob: -16.27324676513672
    7. 'none' → logprob: -17.52324676513672
    8. '_none' → logprob: -18.14824676513672
    9. '   ' → logprob: -18.39824676513672
    10. '```' → logprob: -18.77324676513672

Token 2013: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3438527286052704
    2. '                   ' → logprob: -1.5938527584075928
    3. ':
' → logprob: -2.5938527584075928
    4. ':return' → logprob: -5.218852519989014
    5. '               ' → logprob: -5.343852519989014
    6. '                       ' → logprob: -7.343852519989014
    7. '<|end|>' → logprob: -7.593852519989014
    8. '           ' → logprob: -7.968852519989014
    9. '                  ' → logprob: -8.718852996826172
    10. '                           ' → logprob: -9.093852996826172

Token 2014: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0029742566403001547
    2. 'return' → logprob: -6.502974033355713
    3. '               ' → logprob: -8.002974510192871
    4. '           ' → logprob: -8.127974510192871
    5. '                       ' → logprob: -8.502974510192871
    6. ' return' → logprob: -8.752974510192871
    7. '		           ' → logprob: -9.127974510192871
    8. ':return' → logprob: -9.877974510192871
    9. '			       ' → logprob: -10.127974510192871
    10. '   ' → logprob: -10.127974510192871

Token 2015: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.380998820066452
    2. 'return' (adapté à ' return') → logprob: -1.3809988498687744
    3. ' return' → logprob: -2.7559988498687744
    4. '                       ' → logprob: -7.380998611450195
    5. '               ' → logprob: -7.630998611450195
    6. '   ' → logprob: -8.755998611450195
    7. '	return' → logprob: -9.005998611450195
    8. '           ' → logprob: -9.005998611450195
    9. '{return' → logprob: -9.255998611450195
    10. '       ' → logprob: -9.880998611450195

Token 2016: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0031797364354133606
    2. ' None' → logprob: -5.753179550170898
    3. '_None' → logprob: -14.003179550170898
    4. '                   ' → logprob: -14.753179550170898
    5. '(None' → logprob: -15.378179550170898
    6. '               ' → logprob: -15.503179550170898
    7. '.None' → logprob: -16.1281795501709
    8. ',None' → logprob: -16.3781795501709
    9. 'No' → logprob: -16.6281795501709
    10. '```' → logprob: -17.1281795501709

Token 2017: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008130819769576192
    2. '
' → logprob: -7.750813007354736
    3. '                
' → logprob: -8.375813484191895
    4. 'else' → logprob: -9.625813484191895
    5. '    
' → logprob: -11.250813484191895
    6. ' else' → logprob: -11.375813484191895
    7. '			' → logprob: -11.750813484191895
    8. '\
' → logprob: -12.000813484191895
    9. '```' → logprob: -12.000813484191895
    10. 'return' → logprob: -12.000813484191895

Token 2018: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007274442468769848
    2. 'else' → logprob: -8.125727653503418
    3. '                   ' → logprob: -9.125727653503418
    4. '{
' → logprob: -9.500727653503418
    5. '           ' → logprob: -9.625727653503418
    6. '
' → logprob: -10.250727653503418
    7. '```' → logprob: -10.250727653503418
    8. ' else' → logprob: -10.375727653503418
    9. '                
' → logprob: -10.375727653503418
    10. '       ' → logprob: -11.000727653503418

Token 2019: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015574743738397956
    2. '       ' → logprob: -7.501557350158691
    3. 'if' → logprob: -8.626557350158691
    4. '			' → logprob: -8.626557350158691
    5. ' if' → logprob: -8.876557350158691
    6. 'else' (adapté à ' else') → logprob: -9.376557350158691
    7. '```' → logprob: -9.376557350158691
    8. '{
' → logprob: -9.626557350158691
    9. ' else' → logprob: -9.876557350158691
    10. '           ' → logprob: -10.251557350158691

Token 2020: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003963228315114975
    2. ':' → logprob: -5.878962993621826
    3. ':
' → logprob: -7.128962993621826
    4. '                       ' → logprob: -8.253963470458984
    5. '                  ' → logprob: -10.753963470458984
    6. '               ' → logprob: -10.878963470458984
    7. '                           ' → logprob: -11.628963470458984
    8. '           ' → logprob: -11.878963470458984
    9. '                    ' → logprob: -12.003963470458984
    10. ' if' → logprob: -12.128963470458984

Token 2021: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1295670121908188
    2. '           ' → logprob: -2.2545669078826904
    3. '                   ' → logprob: -4.1295671463012695
    4. 'if' → logprob: -8.50456714630127
    5. '       ' → logprob: -8.50456714630127
    6. '                       ' → logprob: -10.12956714630127
    7. '```' → logprob: -10.37956714630127
    8. ' if' → logprob: -11.00456714630127
    9. '
' → logprob: -11.37956714630127
    10. '                ' → logprob: -13.25456714630127

Token 2022: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07994154840707779
    2. 'if' → logprob: -3.079941511154175
    3. '               ' → logprob: -3.954941511154175
    4. '           ' → logprob: -4.829941749572754
    5. '                       ' → logprob: -6.204941749572754
    6. '       ' → logprob: -6.579941749572754
    7. ' if' → logprob: -8.704941749572754
    8. '```' → logprob: -9.579941749572754
    9. '   ' → logprob: -9.829941749572754
    10. '#' (adapté à ' #') → logprob: -11.954941749572754

Token 2023: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0017846565460786223
    2. '                   ' → logprob: -6.501784801483154
    3. '               ' → logprob: -8.501784324645996
    4. '#' → logprob: -10.001784324645996
    5. ' if' → logprob: -10.626784324645996
    6. '       ' → logprob: -12.376784324645996
    7. '           ' → logprob: -13.001784324645996
    8. 'check' → logprob: -14.001784324645996
    9. '```' → logprob: -14.001784324645996
    10. '
' → logprob: -14.501784324645996

Token 2024: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3872092366218567
    2. ' if' → logprob: -1.137209177017212
    3. '                   ' → logprob: -8.137208938598633
    4. '               ' → logprob: -11.012208938598633
    5. 'self' → logprob: -11.637208938598633
    6. '   ' → logprob: -11.762208938598633
    7. '_if' → logprob: -12.887208938598633
    8. '
' → logprob: -13.012208938598633
    9. '       ' → logprob: -13.387208938598633
    10. '                       ' → logprob: -14.012208938598633

Token 2025: ' directory' (ID: 12552)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12695194780826569
    2. ' self' → logprob: -2.1269519329071045
    3. 'index' → logprob: -11.751952171325684
    4. '                   ' → logprob: -12.001952171325684
    5. '   ' → logprob: -12.626952171325684
    6. '               ' → logprob: -13.251952171325684
    7. '(self' → logprob: -13.876952171325684
    8. ' index' → logprob: -14.126952171325684
    9. '           ' → logprob: -14.376952171325684
    10. ' ' → logprob: -14.501952171325684

Token 2026: ' has' (ID: 853)
  Prédit: '_exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exists' → logprob: -0.9029994010925293
    2. 'exists' → logprob: -1.0279994010925293
    3. '                   ' → logprob: -1.9029994010925293
    4. 'has' → logprob: -3.6529994010925293
    5. '_has' → logprob: -4.402999401092529
    6. ' exists' → logprob: -4.527999401092529
    7. ' has' → logprob: -5.152999401092529
    8. ' =' → logprob: -5.152999401092529
    9. '               ' → logprob: -5.402999401092529
    10. ' in' → logprob: -5.402999401092529

Token 2027: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39066949486732483
    2. 'index' → logprob: -1.1406694650650024
    3. 'file' → logprob: -5.890669345855713
    4. ' self' → logprob: -7.515669345855713
    5. '_file' → logprob: -9.140669822692871
    6. '                   ' → logprob: -9.390669822692871
    7. ' index' → logprob: -9.515669822692871
    8. '(self' → logprob: -9.640669822692871
    9. '
' → logprob: -10.140669822692871
    10. '   ' → logprob: -10.515669822692871

Token 2028: '.html' (ID: 4588)
  Prédit: '.html'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.html' → logprob: -0.0031228174921125174
    2. '_file' → logprob: -5.878122806549072
    3. 'html' → logprob: -8.62812328338623
    4. 'file' → logprob: -10.00312328338623
    5. '.' → logprob: -10.75312328338623
    6. '```' → logprob: -11.12812328338623
    7. '_html' → logprob: -11.37812328338623
    8. ''.' → logprob: -11.62812328338623
    9. '_files' → logprob: -11.87812328338623
    10. '<html' → logprob: -12.00312328338623

Token 2029: ' file' (ID: 1974)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.22026459872722626
    2. '(self' → logprob: -2.7202646732330322
    3. 'exists' → logprob: -2.9702646732330322
    4. '                   ' → logprob: -3.4702646732330322
    5. '_exists' → logprob: -3.7202646732330322
    6. '
' → logprob: -4.845264434814453
    7. ' exists' → logprob: -5.970264434814453
    8. ' (' → logprob: -6.220264434814453
    9. '(' → logprob: -6.595264434814453
    10. 'Exists' → logprob: -6.595264434814453

Token 2030: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4611629247665405
    2. '(c' → logprob: -1.2111629247665405
    3. ' if' → logprob: -3.46116304397583
    4. 'if' → logprob: -4.46116304397583
    5. ':
' → logprob: -5.08616304397583
    6. '(self' → logprob: -5.21116304397583
    7. '                       ' → logprob: -5.58616304397583
    8. ' in' → logprob: -6.21116304397583
    9. '       ' → logprob: -6.21116304397583
    10. 'in' → logprob: -6.96116304397583

Token 2031: ' page' (ID: 3011)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.5969233512878418
    2. 'self' → logprob: -1.3469233512878418
    3. 'index' → logprob: -1.7219233512878418
    4. ' canonical' → logprob: -5.596923351287842
    5. ' index' → logprob: -6.846923351287842
    6. 'possible' → logprob: -6.971923351287842
    7. 'True' → logprob: -7.096923351287842
    8. 'INDEX' → logprob: -7.221923351287842
    9. ' self' → logprob: -7.346923351287842
    10. 'the' → logprob: -7.721923351287842

Token 2032: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11566062271595001
    2. '                       ' → logprob: -2.3656606674194336
    3. ' if' → logprob: -4.865660667419434
    4. 'if' → logprob: -6.240660667419434
    5. '       ' → logprob: -6.365660667419434
    6. '
' → logprob: -7.240660667419434
    7. '               ' → logprob: -7.240660667419434
    8. '           ' → logprob: -7.615660667419434
    9. '```' → logprob: -7.740660667419434
    10. '(' → logprob: -8.740660667419434

Token 2033: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.47558125853538513
    2. '                   ' → logprob: -0.9755812883377075
    3. '```' → logprob: -7.475581169128418
    4. ' if' → logprob: -8.475581169128418
    5. 'if' → logprob: -8.725581169128418
    6. '       ' → logprob: -8.725581169128418
    7. ':
' → logprob: -8.850581169128418
    8. '
' → logprob: -9.850581169128418
    9. '           ' → logprob: -10.350581169128418
    10. '               ' → logprob: -10.350581169128418

Token 2034: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.024113643914461136
    2. '                   ' → logprob: -3.774113655090332
    3. ' if' → logprob: -7.149113655090332
    4. '                       ' → logprob: -10.524113655090332
    5. '               ' → logprob: -10.774113655090332
    6. '       ' → logprob: -11.274113655090332
    7. '           ' → logprob: -11.524113655090332
    8. '   ' → logprob: -11.774113655090332
    9. '```' → logprob: -12.899113655090332
    10. 'return' → logprob: -14.149113655090332

Token 2035: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014186781831085682
    2. ' self' → logprob: -4.264186859130859
    3. '                   ' → logprob: -10.76418685913086
    4. '   ' → logprob: -14.13918685913086
    5. '               ' → logprob: -14.63918685913086
    6. '(self' → logprob: -15.26418685913086
    7. '                       ' → logprob: -15.38918685913086
    8. '	self' → logprob: -16.01418685913086
    9. '           ' → logprob: -16.13918685913086
    10. ' ' → logprob: -16.38918685913086

Token 2036: '.fs' (ID: 82179)
  Prédit: '.fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fs' → logprob: -7.994086627149954e-05
    2. 'fs' → logprob: -9.500080108642578
    3. '	fs' → logprob: -13.625080108642578
    4. ' fs' → logprob: -13.750080108642578
    5. '_fs' → logprob: -13.875080108642578
    6. '.' → logprob: -14.250080108642578
    7. '.fc' → logprob: -14.750080108642578
    8. 'self' → logprob: -15.375080108642578
    9. ' .' → logprob: -15.750080108642578
    10. '
' → logprob: -16.375080108642578

Token 2037: '.file' (ID: 17613)
  Prédit: '.file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.file' → logprob: -0.00016635251813568175
    2. 'file' → logprob: -9.250165939331055
    3. '.has' → logprob: -9.750165939331055
    4. '.' → logprob: -12.625165939331055
    5. '               ' → logprob: -12.625165939331055
    6. '                   ' → logprob: -13.375165939331055
    7. '   ' → logprob: -14.000165939331055
    8. '           ' → logprob: -14.125165939331055
    9. ' .' → logprob: -14.625165939331055
    10. ' file' → logprob: -14.750165939331055

Token 2038: '_exists' (ID: 23519)
  Prédit: '_exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exists' → logprob: -3.607391408877447e-05
    2. '_has' → logprob: -11.000036239624023
    3. '.exists' → logprob: -11.125036239624023
    4. 'exists' → logprob: -12.750036239624023
    5. '_EXISTS' → logprob: -14.125036239624023
    6. 'Exists' → logprob: -14.875036239624023
    7. '2' → logprob: -15.500036239624023
    8. '```' → logprob: -15.875036239624023
    9. '_contains' → logprob: -16.000036239624023
    10. '.has' → logprob: -16.625036239624023

Token 2039: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0040838588029146194
    2. 'canonical' → logprob: -5.504083633422852
    3. ' canonical' → logprob: -12.379083633422852
    4. 'c' → logprob: -14.254083633422852
    5. 'Canonical' → logprob: -15.254083633422852
    6. '   ' → logprob: -16.25408363342285
    7. '```' → logprob: -16.37908363342285
    8. ' (' → logprob: -16.37908363342285
    9. '(
' → logprob: -17.00408363342285
    10. '(can' → logprob: -17.00408363342285

Token 2040: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -0.1271037459373474
    2. 'canonical' → logprob: -2.127103805541992
    3. '```' → logprob: -9.752103805541992
    4. ' canonical' → logprob: -10.377103805541992
    5. 'an' → logprob: -10.502103805541992
    6. 'anon' → logprob: -10.627103805541992
    7. 'anical' → logprob: -11.377103805541992
    8. '[' → logprob: -12.752103805541992
    9. 'Canonical' → logprob: -12.877103805541992
    10. 'on' → logprob: -13.127103805541992

Token 2041: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.0003663212701212615
    2. 'dir' → logprob: -8.2503662109375
    3. '2' → logprob: -9.7503662109375
    4. 'Dir' → logprob: -10.2503662109375
    5. '-dir' → logprob: -12.8753662109375
    6. '```' → logprob: -13.0003662109375
    7. '[' → logprob: -14.1253662109375
    8. '_DIR' → logprob: -14.2503662109375
    9. 'segments' → logprob: -14.5003662109375
    10. '	dir' → logprob: -14.7503662109375

Token 2042: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008298786706291139
    2. '_dir' → logprob: -7.125829696655273
    3. 'dir' → logprob: -11.125829696655273
    4. 'Dir' → logprob: -11.625829696655273
    5. '```' → logprob: -14.125829696655273
    6. '...' → logprob: -15.500829696655273
    7. '   ' → logprob: -15.875829696655273
    8. ' ' → logprob: -16.250829696655273
    9. '[' → logprob: -16.250829696655273
    10. '_DIR' → logprob: -16.375829696655273

Token 2043: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ' ,' → logprob: -12.12501049041748
    3. ',
' → logprob: -13.62501049041748
    4. '           ' → logprob: -13.75001049041748
    5. ',c' → logprob: -13.87501049041748
    6. ',['' → logprob: -14.37501049041748
    7. '       ' → logprob: -15.12501049041748
    8. '[' → logprob: -15.62501049041748
    9. '[],' → logprob: -16.125009536743164
    10. '   ' → logprob: -16.125009536743164

Token 2044: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016111908480525017
    2. ' self' → logprob: -4.141111850738525
    3. ''s' → logprob: -10.266112327575684
    4. ''' → logprob: -10.641112327575684
    5. '   ' → logprob: -12.016112327575684
    6. 'Path' → logprob: -13.141112327575684
    7. '           ' → logprob: -13.266112327575684
    8. '       ' → logprob: -13.516112327575684
    9. ' ' → logprob: -13.891112327575684
    10. '"' → logprob: -14.016112327575684

Token 2045: '.IN' (ID: 20931)
  Prédit: '.IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.IN' → logprob: -0.16044549643993378
    2. 'INDEX' → logprob: -1.9104454517364502
    3. 'IN' → logprob: -9.035445213317871
    4. '
' → logprob: -10.660445213317871
    5. 'index' → logprob: -11.160445213317871
    6. 'self' → logprob: -11.285445213317871
    7. ''' → logprob: -11.535445213317871
    8. '.Index' → logprob: -12.035445213317871
    9. '_INDEX' → logprob: -12.160445213317871
    10. '"' → logprob: -12.410445213317871

Token 2046: 'DEX' (ID: 22598)
  Prédit: 'DEX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEX' → logprob: -0.014448359608650208
    2. 'EX' → logprob: -4.264448165893555
    3. 'D' → logprob: -8.889448165893555
    4. 'ex' → logprob: -9.764448165893555
    5. 'DX' → logprob: -9.889448165893555
    6. 'DE' → logprob: -11.514448165893555
    7. 'ED' → logprob: -11.639448165893555
    8. 'X' → logprob: -12.389448165893555
    9. 'INDEX' → logprob: -12.514448165893555
    10. 'dex' → logprob: -12.514448165893555

Token 2047: '_FILE' (ID: 19131)
  Prédit: '_FILE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FILE' → logprob: -0.0003241414960939437
    2. 'FILE' → logprob: -8.500324249267578
    3. 'File' → logprob: -10.125324249267578
    4. '```' → logprob: -10.750324249267578
    5. '_HTML' → logprob: -11.125324249267578
    6. 'html' → logprob: -11.125324249267578
    7. '   ' → logprob: -12.375324249267578
    8. '_File' → logprob: -12.375324249267578
    9. '_FILES' → logprob: -12.625324249267578
    10. '.html' → logprob: -12.750324249267578

Token 2048: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0047089881263673306
    2. '):' → logprob: -5.379708766937256
    3. ')' → logprob: -9.879709243774414
    4. '):
' → logprob: -11.254709243774414
    5. '                   ' → logprob: -11.504709243774414
    6. '               ' → logprob: -12.254709243774414
    7. '       ' → logprob: -12.379709243774414
    8. ':
' → logprob: -13.504709243774414
    9. '):

' → logprob: -13.629709243774414
    10. '                       ' → logprob: -14.379709243774414

Token 2049: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003273600013926625
    2. '                   ' → logprob: -8.250327110290527
    3. 'return' → logprob: -10.125327110290527
    4. '                      ' → logprob: -11.500327110290527
    5. ' return' → logprob: -12.625327110290527
    6. '           ' → logprob: -12.625327110290527
    7. '       ' → logprob: -13.375327110290527
    8. ':' → logprob: -13.500327110290527
    9. '               ' → logprob: -13.750327110290527
    10. '```' → logprob: -13.875327110290527

Token 2050: ' base' (ID: 3611)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.21247458457946777
    2. '                           ' → logprob: -1.9624745845794678
    3. '           ' → logprob: -3.0874745845794678
    4. '#' → logprob: -5.587474822998047
    5. 'return' → logprob: -7.087474822998047
    6. '                   ' → logprob: -7.712474822998047
    7. '               ' → logprob: -8.587474822998047
    8. '   ' → logprob: -11.337474822998047
    9. '       ' → logprob: -11.337474822998047
    10. '                        ' → logprob: -11.462474822998047

Token 2051: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -7.3458322731312364e-06
    2. '```' → logprob: -13.125007629394531
    3. 'path' → logprob: -13.625007629394531
    4. ''_' → logprob: -14.375007629394531
    5. '
' → logprob: -14.500007629394531
    6. ')_' → logprob: -14.750007629394531
    7. '`' → logprob: -14.875007629394531
    8. '"_' → logprob: -14.875007629394531
    9. '_segments' → logprob: -15.125007629394531
    10. ' _' → logprob: -15.375007629394531

Token 2052: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054920315742492676
    2. '=' → logprob: -2.929920196533203
    3. ')' → logprob: -10.929920196533203
    4. '<|end|>' → logprob: -12.304920196533203
    5. ' +=' → logprob: -12.679920196533203
    6. ' +' → logprob: -13.179920196533203
    7. ' ' → logprob: -13.304920196533203
    8. ' =
' → logprob: -13.929920196533203
    9. ',' → logprob: -14.054920196533203
    10. 's' → logprob: -14.429920196533203

Token 2053: ' '/'' (ID: 39443)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010060509666800499
    2. ' '/'' → logprob: -4.7600603103637695
    3. '"/' → logprob: -6.8850603103637695
    4. ''/' → logprob: -8.01006031036377
    5. '                   ' → logprob: -10.76006031036377
    6. '                           ' → logprob: -10.88506031036377
    7. '                       ' → logprob: -11.01006031036377
    8. '                               ' → logprob: -11.63506031036377
    9. '/' → logprob: -11.76006031036377
    10. '"' → logprob: -12.63506031036377

Token 2054: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0788998156785965
    2. ' +' → logprob: -2.57889986038208
    3. '+'/' → logprob: -12.578899383544922
    4. '+'' → logprob: -12.828899383544922
    5. '+'/'+' → logprob: -13.703899383544922
    6. '                   ' → logprob: -14.078899383544922
    7. ''+' → logprob: -14.953899383544922
    8. '                       ' → logprob: -15.203899383544922
    9. '+/' → logprob: -15.328899383544922
    10. '           ' → logprob: -15.328899383544922

Token 2055: ' '/' (ID: 7041)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -9.722539834911004e-05
    2. ' '/' → logprob: -9.375097274780273
    3. '"/' → logprob: -11.375097274780273
    4. '('/' → logprob: -14.875097274780273
    5. ' ' → logprob: -15.625097274780273
    6. ''' → logprob: -15.750097274780273
    7. '   ' → logprob: -16.250097274780273
    8. '           ' → logprob: -17.000097274780273
    9. '	' → logprob: -17.250097274780273
    10. '+'/' → logprob: -17.375097274780273

Token 2056: ''.' (ID: 6120)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.00399742741137743
    2. ' '/' → logprob: -6.753997325897217
    3. ''' → logprob: -7.128997325897217
    4. 'canonical' → logprob: -7.253997325897217
    5. '"/' → logprob: -7.378997325897217
    6. '('/' → logprob: -8.628997802734375
    7. '   ' → logprob: -9.128997802734375
    8. '''.' → logprob: -9.628997802734375
    9. ''.' → logprob: -9.753997802734375
    10. ''s' → logprob: -9.878997802734375

Token 2057: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.10235738754272461
    2. ''/' → logprob: -2.3523573875427246
    3. ''' → logprob: -7.102357387542725
    4. '.join' → logprob: -7.352357387542725
    5. ''.' → logprob: -8.602357864379883
    6. '('/' → logprob: -9.227357864379883
    7. ' '/' → logprob: -9.602357864379883
    8. '"/' → logprob: -9.852357864379883
    9. ''s' → logprob: -10.227357864379883
    10. 'joined' → logprob: -10.477357864379883

Token 2058: '(c' (ID: 2410)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -6.704273118884885e-07
    2. ' canonical' → logprob: -14.500000953674316
    3. '(c' → logprob: -16.125
    4. '```' → logprob: -19.25
    5. '#' → logprob: -20.75
    6. 'can' → logprob: -20.75
    7. '           ' → logprob: -21.0
    8. 'encoded' → logprob: -21.375
    9. '               ' → logprob: -21.5
    10. 'canon' → logprob: -21.5

Token 2059: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -0.07899675518274307
    2. 'canonical' → logprob: -2.5789966583251953
    3. 'an' → logprob: -9.953996658325195
    4. '[' → logprob: -10.578996658325195
    5. 'anical' → logprob: -11.703996658325195
    6. '```' → logprob: -11.953996658325195
    7. 'a' → logprob: -12.953996658325195
    8. 'on' → logprob: -12.953996658325195
    9. 'c' → logprob: -13.328996658325195
    10. 'anon' → logprob: -13.453996658325195

Token 2060: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -9.341087570646778e-05
    2. 'dir' → logprob: -9.500093460083008
    3. '2' → logprob: -12.375093460083008
    4. 'canonical' → logprob: -12.375093460083008
    5. 'c' → logprob: -13.250093460083008
    6. 'Dir' → logprob: -13.750093460083008
    7. '[' → logprob: -13.875093460083008
    8. '   ' → logprob: -14.250093460083008
    9. '-dir' → logprob: -14.250093460083008
    10. 'or' → logprob: -14.500093460083008

Token 2061: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.054944004863500595
    2. '_dir' → logprob: -2.9299440383911133
    3. 'or' → logprob: -10.554944038391113
    4. 'c' → logprob: -11.429944038391113
    5. 'dir' → logprob: -12.179944038391113
    6. 'canonical' → logprob: -12.429944038391113
    7. '   ' → logprob: -13.054944038391113
    8. 'Dir' → logprob: -13.179944038391113
    9. '[' → logprob: -13.179944038391113
    10. '```' → logprob: -13.304944038391113

Token 2062: ')
' (ID: 446)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04123544320464134
    2. ')' → logprob: -3.9162354469299316
    3. 'return' → logprob: -5.041235446929932
    4. '                   ' → logprob: -5.166235446929932
    5. ')
' → logprob: -5.416235446929932
    6. '
' → logprob: -6.541235446929932
    7. '           ' → logprob: -7.416235446929932
    8. 'if' → logprob: -7.541235446929932
    9. '               ' → logprob: -8.291234970092773
    10. ' if' → logprob: -8.416234970092773

Token 2063: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0010735384421423078
    2. 'return' → logprob: -7.876073360443115
    3. '           ' → logprob: -8.001073837280273
    4. '                   ' → logprob: -8.751073837280273
    5. '                           ' → logprob: -9.626073837280273
    6. '                      ' → logprob: -9.751073837280273
    7. '               ' → logprob: -10.376073837280273
    8. ' return' → logprob: -12.251073837280273
    9. '```' → logprob: -12.376073837280273
    10. '                        ' → logprob: -12.501073837280273

Token 2064: ' base' (ID: 3611)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.026750609278678894
    2. 'return' → logprob: -3.6517505645751953
    3. ' return' → logprob: -8.776750564575195
    4. '           ' → logprob: -9.026750564575195
    5. 'if' → logprob: -9.651750564575195
    6. '                           ' → logprob: -10.276750564575195
    7. '
' → logprob: -11.026750564575195
    8. '                   ' → logprob: -11.651750564575195
    9. '                        
' → logprob: -11.651750564575195
    10. '       ' → logprob: -11.901750564575195

Token 2065: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.5776860184123507e-06
    2. 'path' → logprob: -13.87500286102295
    3. '!=' → logprob: -14.75000286102295
    4. ' !=' → logprob: -15.62500286102295
    5. '==' → logprob: -15.87500286102295
    6. '```' → logprob: -16.000001907348633
    7. 'Path' → logprob: -16.250001907348633
    8. 'if' → logprob: -16.375001907348633
    9. '.endswith' → logprob: -16.375001907348633
    10. '#' → logprob: -16.500001907348633

Token 2066: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01120921690016985
    2. ' =' → logprob: -4.511209011077881
    3. ' if' → logprob: -9.886209487915039
    4. 'if' → logprob: -10.386209487915039
    5. '                       ' → logprob: -10.511209487915039
    6. '==' → logprob: -11.011209487915039
    7. '!=' → logprob: -11.011209487915039
    8. '.rstrip' → logprob: -12.761209487915039
    9. '+=' → logprob: -12.886209487915039
    10. '                   ' → logprob: -13.386209487915039

Token 2067: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.005234832875430584
    2. ' base' → logprob: -5.255234718322754
    3. '(base' → logprob: -14.630234718322754
    4. '	base' → logprob: -15.255234718322754
    5. '   ' → logprob: -15.880234718322754
    6. '/base' → logprob: -16.13023567199707
    7. ' '/'' → logprob: -17.75523567199707
    8. '_base' → logprob: -17.75523567199707
    9. ''' → logprob: -17.88023567199707
    10. ' ' → logprob: -18.13023567199707

Token 2068: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0017202809685841203
    2. 'base' → logprob: -6.376720428466797
    3. '_base' → logprob: -12.001720428466797
    4. 'if' → logprob: -12.126720428466797
    5. 'path' → logprob: -12.376720428466797
    6. 'Path' → logprob: -14.251720428466797
    7. '(base' → logprob: -15.126720428466797
    8. '```' → logprob: -15.501720428466797
    9. 'or' → logprob: -16.001720428466797
    10. '_dir' → logprob: -16.126720428466797

Token 2069: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04869319498538971
    2. 'if' → logprob: -3.0486931800842285
    3. ' or' → logprob: -9.173693656921387
    4. 'or' → logprob: -13.298693656921387
    5. '.rstrip' → logprob: -15.798693656921387
    6. '	if' → logprob: -16.92369270324707
    7. '                               ' → logprob: -17.17369270324707
    8. '                           ' → logprob: -17.54869270324707
    9. '<|end|>' → logprob: -18.04869270324707
    10. '                   ' → logprob: -18.04869270324707

Token 2070: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.004085997585207224
    2. ' base' → logprob: -5.504086017608643
    3. '```' → logprob: -12.629085540771484
    4. '>' → logprob: -12.879085540771484
    5. '(base' → logprob: -14.129085540771484
    6. '	base' → logprob: -15.379085540771484
    7. '!=' → logprob: -15.629085540771484
    8. 'len' → logprob: -16.129085540771484
    9. '``' → logprob: -16.254085540771484
    10. '/base' → logprob: -16.254085540771484

Token 2071: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.050582706928253174
    2. 'base' → logprob: -3.0505826473236084
    3. 'path' → logprob: -6.8005828857421875
    4. '```' → logprob: -8.175582885742188
    5. '`' → logprob: -8.800582885742188
    6. ''/' → logprob: -9.300582885742188
    7. '_base' → logprob: -9.675582885742188
    8. '   ' → logprob: -9.925582885742188
    9. ''' → logprob: -10.050582885742188
    10. '``' → logprob: -10.175582885742188

Token 2072: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.023596815764904022
    2. ' !=' → logprob: -3.77359676361084
    3. '!='' → logprob: -8.39859676361084
    4. '!==' → logprob: -9.64859676361084
    5. '!' → logprob: -10.27359676361084
    6. '<>' → logprob: -12.02359676361084
    7. 'else' → logprob: -12.14859676361084
    8. '!=-' → logprob: -12.52359676361084
    9. '!="' → logprob: -12.64859676361084
    10. '```' → logprob: -12.64859676361084

Token 2073: ' ''' (ID: 8686)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -3.869639476761222e-05
    2. ''' → logprob: -11.000039100646973
    3. ' ''' → logprob: -11.125039100646973
    4. '''
' → logprob: -12.750039100646973
    5. ''/' → logprob: -13.375039100646973
    6. '""' → logprob: -13.500039100646973
    7. 'None' → logprob: -13.750039100646973
    8. ' '/'' → logprob: -15.750039100646973
    9. '```' → logprob: -17.000038146972656
    10. ''s' → logprob: -17.250038146972656

Token 2074: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07889562100172043
    2. ' else' → logprob: -2.5788955688476562
    3. '                   ' → logprob: -13.078895568847656
    4. '                       ' → logprob: -13.953895568847656
    5. '/' → logprob: -14.828895568847656
    6. ':' → logprob: -14.953895568847656
    7. '```' → logprob: -14.953895568847656
    8. '               ' → logprob: -15.203895568847656
    9. '                    ' → logprob: -15.328895568847656
    10. '   ' → logprob: -15.578895568847656

Token 2075: ' '/'
' (ID: 176928)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0022414892446249723
    2. ''/' → logprob: -6.127241611480713
    3. '"/' → logprob: -10.627241134643555
    4. '/' → logprob: -11.002241134643555
    5. '/'' → logprob: -11.752241134643555
    6. ' '/'' → logprob: -12.002241134643555
    7. '('/')' → logprob: -13.502241134643555
    8. '/
' → logprob: -17.627241134643555
    9. '’' → logprob: -17.877241134643555
    10. ''''' → logprob: -17.877241134643555

Token 2076: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005213391850702465
    2. '           ' → logprob: -8.000521659851074
    3. '                   ' → logprob: -9.375521659851074
    4. 'return' → logprob: -10.125521659851074
    5. '               ' → logprob: -10.625521659851074
    6. '                           ' → logprob: -11.375521659851074
    7. '                      ' → logprob: -11.750521659851074
    8. '       ' → logprob: -12.500521659851074
    9. '```' → logprob: -12.500521659851074
    10. ' return' → logprob: -13.125521659851074

Token 2077: ' return' (ID: 622)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.47545385360717773
    2. 'return' (adapté à ' return') → logprob: -0.9754538536071777
    3. '           ' → logprob: -7.225453853607178
    4. '                           ' → logprob: -7.725453853607178
    5. '                   ' → logprob: -9.100454330444336
    6. ' return' → logprob: -9.850454330444336
    7. '               ' → logprob: -10.475454330444336
    8. '       ' → logprob: -12.225454330444336
    9. '                               ' → logprob: -12.600454330444336
    10. '   ' → logprob: -13.225454330444336

Token 2078: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.04859725013375282
    2. ' base' → logprob: -3.0485973358154297
    3. 'None' → logprob: -11.79859733581543
    4. '                   ' → logprob: -13.42359733581543
    5. ' None' → logprob: -14.17359733581543
    6. '                       ' → logprob: -16.42359733581543
    7. '	base' → logprob: -16.79859733581543
    8. '(base' → logprob: -17.17359733581543
    9. '               ' → logprob: -18.17359733581543
    10. '   ' → logprob: -19.17359733581543

Token 2079: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.816093228830141e-06
    2. 'path' → logprob: -13.62500286102295
    3. 'base' → logprob: -13.75000286102295
    4. '_base' → logprob: -15.37500286102295
    5. 'Path' → logprob: -16.750001907348633
    6. '```' → logprob: -17.000001907348633
    7. ''_' → logprob: -17.125001907348633
    8. '_PATH' → logprob: -17.250001907348633
    9. '_p' → logprob: -17.875001907348633
    10. '_' → logprob: -17.875001907348633

Token 2080: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03032645396888256
    2. '<|end|>' → logprob: -4.1553263664245605
    3. '       ' → logprob: -5.2803263664245605
    4. '           ' → logprob: -5.5303263664245605
    5. '                   ' → logprob: -6.2803263664245605
    6. '.' → logprob: -6.6553263664245605
    7. 'return' → logprob: -7.6553263664245605
    8. '			' → logprob: -8.280326843261719
    9. '```' → logprob: -8.405326843261719
    10. '<|end|>' → logprob: -8.655326843261719

Token 2081: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.319202184677124
    2. '               ' → logprob: -1.319202184677124
    3. '```' → logprob: -6.319202423095703
    4. '       ' → logprob: -6.444202423095703
    5. '           ' → logprob: -6.444202423095703
    6. '
' → logprob: -7.944202423095703
    7. '                       ' → logprob: -8.944202423095703
    8. 'return' → logprob: -9.694202423095703
    9. 'else' → logprob: -9.819202423095703
    10. '                    
' → logprob: -10.069202423095703

Token 2082: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06702442467212677
    2. 'else' (adapté à ' else') → logprob: -3.4420244693756104
    3. '                   ' → logprob: -3.5670244693756104
    4. ' else' → logprob: -5.942024230957031
    5. '           ' → logprob: -7.192024230957031
    6. '       ' → logprob: -7.567024230957031
    7. '                       ' → logprob: -8.192024230957031
    8. 'return' → logprob: -8.942024230957031
    9. '
' → logprob: -9.817024230957031
    10. 'None' → logprob: -10.442024230957031

Token 2083: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2652848958969116
    2. '                       ' → logprob: -1.5152848958969116
    3. ':
' → logprob: -4.390285015106201
    4. 'return' → logprob: -7.765285015106201
    5. ':' → logprob: -8.015284538269043
    6. '               ' → logprob: -10.390284538269043
    7. '           ' → logprob: -10.890284538269043
    8. ':return' → logprob: -10.890284538269043
    9. ' return' → logprob: -11.140284538269043
    10. '                           ' → logprob: -11.765284538269043

Token 2084: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7003381252288818
    2. 'return' → logprob: -0.7003381252288818
    3. '                       ' → logprob: -5.575338363647461
    4. ' return' → logprob: -6.700338363647461
    5. '               ' → logprob: -7.200338363647461
    6. 'None' → logprob: -7.200338363647461
    7. '           ' → logprob: -7.575338363647461
    8. '       ' → logprob: -9.825338363647461
    9. '   ' → logprob: -9.950338363647461
    10. ' None' → logprob: -10.825338363647461

Token 2085: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006344011635519564
    2. 'None' → logprob: -7.50063419342041
    3. ' return' → logprob: -10.00063419342041
    4. '                   ' → logprob: -10.50063419342041
    5. '                       ' → logprob: -12.00063419342041
    6. '               ' → logprob: -13.62563419342041
    7. ' None' → logprob: -14.75063419342041
    8. '   ' → logprob: -15.12563419342041
    9. '           ' → logprob: -15.25063419342041
    10. '       ' → logprob: -16.875635147094727

Token 2086: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002614550176076591
    2. ' None' → logprob: -8.250261306762695
    3. '                   ' → logprob: -15.750261306762695
    4. '               ' → logprob: -18.000261306762695
    5. '                       ' → logprob: -18.875261306762695
    6. '_None' → logprob: -19.000261306762695
    7. '   ' → logprob: -19.125261306762695
    8. 'none' → logprob: -19.625261306762695
    9. 'No' → logprob: -19.875261306762695
    10. '=None' → logprob: -20.000261306762695

Token 2087: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08448666334152222
    2. '
' → logprob: -3.209486722946167
    3. '    
' → logprob: -3.209486722946167
    4. '        
' → logprob: -9.334486961364746
    5. '<|end|>' → logprob: -10.334486961364746
    6. 'def' → logprob: -10.584486961364746
    7. '       ' → logprob: -10.834486961364746
    8. '  
' → logprob: -10.834486961364746
    9. '```' → logprob: -10.959486961364746
    10. '   
' → logprob: -11.209486961364746

Token 2088: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03225141763687134
    2. 'def' → logprob: -3.7822513580322266
    3. '
' → logprob: -4.907251358032227
    4. '    
' → logprob: -6.782251358032227
    5. ' def' → logprob: -8.657251358032227
    6. '```' → logprob: -9.407251358032227
    7. '<|end|>' → logprob: -10.407251358032227
    8. '       ' → logprob: -10.532251358032227
    9. '        
' → logprob: -10.657251358032227
    10. '    ' → logprob: -11.282251358032227

Token 2089: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012411225587129593
    2. 'def' (adapté à ' def') → logprob: -4.637411117553711
    3. '    
' → logprob: -6.637411117553711
    4. '
' → logprob: -7.637411117553711
    5. ' def' → logprob: -7.887411117553711
    6. '```' → logprob: -9.012411117553711
    7. '    ' → logprob: -9.637411117553711
    8. '        
' → logprob: -9.762411117553711
    9. ' ' → logprob: -9.887411117553711
    10. '       ' → logprob: -10.262411117553711

Token 2090: ' _' (ID: 1175)
  Prédit: '_res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.00014597235713154078
    2. ' _' → logprob: -8.87514591217041
    3. '_parse' → logprob: -13.25014591217041
    4. '_normal' → logprob: -14.50014591217041
    5. '._' → logprob: -14.62514591217041
    6. '_' → logprob: -14.62514591217041
    7. '   ' → logprob: -14.75014591217041
    8. '_finalize' → logprob: -14.75014591217041
    9. '_restore' → logprob: -14.87514591217041
    10. '_def' → logprob: -15.37514591217041

Token 2091: 'resolve' (ID: 31567)
  Prédit: '_res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.3133034408092499
    2. 'resolve' → logprob: -1.3133034706115723
    3. ' resolve' → logprob: -10.438302993774414
    4. 'res' → logprob: -12.438302993774414
    5. 'token' → logprob: -12.938302993774414
    6. '_token' → logprob: -14.063302993774414
    7. '_resolution' → logprob: -14.063302993774414
    8. '_parse' → logprob: -14.438302993774414
    9. ' _' → logprob: -14.688302993774414
    10. '	resolve' → logprob: -14.813302993774414

Token 2092: '_dirs' (ID: 117442)
  Prédit: '_dirs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dirs' → logprob: -1.0683535037969705e-05
    2. '_segments' → logprob: -12.50001049041748
    3. '_dir' → logprob: -12.87501049041748
    4. '_' → logprob: -13.12501049041748
    5. '_paths' → logprob: -14.25001049041748
    6. 'dirs' → logprob: -14.50001049041748
    7. '_direct' → logprob: -15.12501049041748
    8. ' _' → logprob: -15.87501049041748
    9. '_d' → logprob: -16.000011444091797
    10. '_dims' → logprob: -16.250011444091797

Token 2093: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -12.125006675720215
    3. '(se' → logprob: -14.875006675720215
    4. '(
' → logprob: -15.000006675720215
    5. '       ' → logprob: -15.125006675720215
    6. '   ' → logprob: -15.125006675720215
    7. 'self' → logprob: -15.250006675720215
    8. '[self' → logprob: -16.75000762939453
    9. ' (' → logprob: -17.62500762939453
    10. '(sel' → logprob: -17.62500762939453

Token 2094: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0026535361539572477
    2. 'self' → logprob: -6.5026535987854
    3. ',' → logprob: -7.7526535987854
    4. ')' → logprob: -8.127653121948242
    5. '(' → logprob: -8.877653121948242
    6. '(se' → logprob: -9.002653121948242
    7. ')(' → logprob: -10.127653121948242
    8. '   ' → logprob: -10.627653121948242
    9. '       ' → logprob: -10.752653121948242
    10. '[' → logprob: -11.252653121948242

Token 2095: ' dirs' (ID: 99999)
  Prédit: 'dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -0.3110162913799286
    2. 'self' → logprob: -1.436016321182251
    3. 'dir' → logprob: -4.061016082763672
    4. 'segments' → logprob: -4.811016082763672
    5. ' dirs' → logprob: -6.186016082763672
    6. ' self' → logprob: -7.061016082763672
    7. '       ' → logprob: -8.186016082763672
    8. ' segments' → logprob: -8.811016082763672
    9. '   ' → logprob: -8.811016082763672
    10. 'seg' → logprob: -8.811016082763672

Token 2096: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1731889694929123
    2. ')' → logprob: -2.0481889247894287
    3. 'self' → logprob: -4.298189163208008
    4. '       ' → logprob: -4.673189163208008
    5. ',' → logprob: -5.423189163208008
    6. '   ' → logprob: -6.798189163208008
    7. ')(' → logprob: -6.923189163208008
    8. '):
' → logprob: -8.423189163208008
    9. ':' → logprob: -9.048189163208008
    10. '```' → logprob: -9.673189163208008

Token 2097: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0002100965939462185
    2. ' List' → logprob: -8.87520980834961
    3. ')' → logprob: -10.25020980834961
    4. '[List' → logprob: -10.75020980834961
    5. 'self' → logprob: -12.00020980834961
    6. 'list' → logprob: -12.75020980834961
    7. '   ' → logprob: -13.00020980834961
    8. '       ' → logprob: -13.25020980834961
    9. '(List' → logprob: -16.37520980834961
    10. '_list' → logprob: -16.87520980834961

Token 2098: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.2664456789934775e-06
    2. ')' → logprob: -14.375000953674316
    3. 'str' → logprob: -14.625000953674316
    4. '[' → logprob: -16.625001907348633
    5. '[
' → logprob: -17.250001907348633
    6. '(str' → logprob: -17.625001907348633
    7. '       ' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.000001907348633
    9. '[int' → logprob: -18.125001907348633
    10. ':str' → logprob: -19.375001907348633

Token 2099: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029279827140271664
    2. '])' → logprob: -8.500292778015137
    3. '   ' → logprob: -9.500292778015137
    4. '       ' → logprob: -11.250292778015137
    5. ' )' → logprob: -14.500292778015137
    6. '`)' → logprob: -14.875292778015137
    7. '):
' → logprob: -15.500292778015137
    8. '）' → logprob: -15.750292778015137
    9. ')->' → logprob: -16.750293731689453
    10. '    ' → logprob: -16.750293731689453

Token 2100: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.3425414264202118
    2. '       ' → logprob: -1.7175414562225342
    3. ' ->' → logprob: -2.842541456222534
    4. ')' → logprob: -3.342541456222534
    5. ')->' → logprob: -5.217541217803955
    6. ':' → logprob: -5.342541217803955
    7. 'def' → logprob: -5.842541217803955
    8. ':
' → logprob: -6.592541217803955
    9. '   ' → logprob: -6.842541217803955
    10. '(self' → logprob: -6.967541217803955

Token 2101: ' Optional' (ID: 19351)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.694294273853302
    2. 'Optional' → logprob: -0.694294273853302
    3. ' Optional' → logprob: -6.944294452667236
    4. ' List' → logprob: -8.819293975830078
    5. 'Union' → logprob: -11.569293975830078
    6. 'list' → logprob: -11.569293975830078
    7. '   ' → logprob: -12.194293975830078
    8. '(Optional' → logprob: -12.944293975830078
    9. '[List' → logprob: -13.069293975830078
    10. 'None' → logprob: -13.069293975830078

Token 2102: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -4.36574100604048e-06
    2. '[str' → logprob: -13.250004768371582
    3. '[' → logprob: -13.375004768371582
    4. 'List' → logprob: -14.250004768371582
    5. '[
' → logprob: -15.625004768371582
    6. '[list' → logprob: -16.625003814697266
    7. '[int' → logprob: -17.000003814697266
    8. '<List' → logprob: -19.000003814697266
    9. '```' → logprob: -19.500003814697266
    10. '(List' → logprob: -19.625003814697266

Token 2103: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.9361264946837764e-07
    2. 'str' → logprob: -16.125
    3. '[' → logprob: -18.875
    4. '[int' → logprob: -19.5
    5. '[
' → logprob: -20.125
    6. ')' → logprob: -20.375
    7. ']' → logprob: -21.125
    8. '```' → logprob: -21.625
    9. '(str' → logprob: -22.125
    10. '   ' → logprob: -22.5

Token 2104: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.017418500036001205
    2. ']' → logprob: -4.267418384552002
    3. ']:' → logprob: -6.642418384552002
    4. '       ' → logprob: -7.267418384552002
    5. '):
' → logprob: -8.01741886138916
    6. '   ' → logprob: -8.26741886138916
    7. ']):
' → logprob: -8.51741886138916
    8. ']:
' → logprob: -8.64241886138916
    9. ']]:
' → logprob: -8.76741886138916
    10. '']:
' → logprob: -10.01741886138916

Token 2105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022404235787689686
    2. '[' → logprob: -7.0022406578063965
    3. '   ' → logprob: -7.5022406578063965
    4. '```' → logprob: -8.002240180969238
    5. '[
' → logprob: -9.127240180969238
    6. '    ' → logprob: -9.127240180969238
    7. ':' → logprob: -10.252240180969238
    8. '        
' → logprob: -10.877240180969238
    9. '           ' → logprob: -10.877240180969238
    10. ' 
' → logprob: -11.127240180969238

Token 2106: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10013721883296967
    2. ' i' → logprob: -2.725137233734131
    3. 'i' → logprob: -4.475137233734131
    4. ' if' → logprob: -5.475137233734131
    5. '   ' → logprob: -5.725137233734131
    6. '    ' → logprob: -6.100137233734131
    7. '[' → logprob: -6.600137233734131
    8. ' for' → logprob: -6.725137233734131
    9. '```' → logprob: -6.975137233734131
    10. '        ' → logprob: -7.350137233734131

Token 2107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.204839825630188
    2. 'stack' → logprob: -1.704839825630188
    3. '   ' → logprob: -6.829839706420898
    4. ' stack' → logprob: -7.579839706420898
    5. 'resolved' → logprob: -7.579839706420898
    6. 'curr' → logprob: -8.079839706420898
    7. 'result' → logprob: -8.454839706420898
    8. 'dirs' → logprob: -8.829839706420898
    9. 'prev' → logprob: -8.954839706420898
    10. 'if' → logprob: -9.079839706420898

Token 2108: ' Resolve' (ID: 89269)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08405351638793945
    2. 'stack' → logprob: -3.3340535163879395
    3. 'resolved' → logprob: -3.4590535163879395
    4. 'dirs' → logprob: -5.3340535163879395
    5. 'curr' → logprob: -6.3340535163879395
    6. 'res' → logprob: -6.5840535163879395
    7. 'result' → logprob: -6.9590535163879395
    8. ' resolved' → logprob: -7.4590535163879395
    9. 'segments' → logprob: -7.4590535163879395
    10. 'current' → logprob: -7.7090535163879395

Token 2109: ' directory' (ID: 12552)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.35795310139656067
    2. 'dirs' → logprob: -1.6079530715942383
    3. '[]' → logprob: -3.2329530715942383
    4. 'canonical' → logprob: -3.6079530715942383
    5. 'resolved' → logprob: -4.232953071594238
    6. '[]
' → logprob: -4.982953071594238
    7. 'self' → logprob: -5.232953071594238
    8. 'path' → logprob: -6.107953071594238
    9. 'the' → logprob: -6.732953071594238
    10. 'result' → logprob: -7.607953071594238

Token 2110: ' path' (ID: 3104)
  Prédit: 'names'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'names' → logprob: -1.3547420501708984
    2. 'stack' → logprob: -1.4797420501708984
    3. '_stack' → logprob: -1.7297420501708984
    4. 'segments' → logprob: -2.1047420501708984
    5. '_names' → logprob: -2.7297420501708984
    6. 's' → logprob: -2.9797420501708984
    7. '_segments' → logprob: -3.8547420501708984
    8. '_path' → logprob: -4.229742050170898
    9. 'path' → logprob: -4.354742050170898
    10. '[]' → logprob: -4.854742050170898

Token 2111: ' considering' (ID: 17227)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7766661047935486
    2. '       ' → logprob: -1.0266661643981934
    3. 'self' → logprob: -2.9016661643981934
    4. 'segments' → logprob: -2.9016661643981934
    5. ' segments' → logprob: -3.0266661643981934
    6. ' self' → logprob: -5.526666164398193
    7. '_segments' → logprob: -5.651666164398193
    8. ',' → logprob: -5.901666164398193
    9. ' with' → logprob: -6.151666164398193
    10. ' to' → logprob: -6.526666164398193

Token 2112: ' '.'' (ID: 64762)
  Prédit: 'dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -0.1355767846107483
    2. 'stack' → logprob: -2.5105767250061035
    3. ' dirs' → logprob: -4.6355767250061035
    4. '[]' → logprob: -4.8855767250061035
    5. ' stack' → logprob: -5.0105767250061035
    6. 'self' → logprob: -5.5105767250061035
    7. 'the' → logprob: -5.7605767250061035
    8. '[]
' → logprob: -5.8855767250061035
    9. '['' → logprob: -6.0105767250061035
    10. 'segments' → logprob: -6.6355767250061035

Token 2113: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4909147620201111
    2. 'and' → logprob: -0.9909147620201111
    3. ',' → logprob: -4.865914821624756
    4. '       ' → logprob: -5.990914821624756
    5. ' segments' → logprob: -6.740914821624756
    6. ' or' → logprob: -6.990914821624756
    7. 'segments' → logprob: -7.115914821624756
    8. ')' → logprob: -7.240914821624756
    9. 'or' → logprob: -7.490914821624756
    10. '   ' → logprob: -7.490914821624756

Token 2114: ' '..' (ID: 107414)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03860916197299957
    2. '..' → logprob: -3.288609266281128
    3. ' '..' → logprob: -7.538609027862549
    4. '   ' → logprob: -11.913609504699707
    5. ' ..' → logprob: -12.038609504699707
    6. '..
' → logprob: -12.038609504699707
    7. ' ' → logprob: -12.538609504699707
    8. '  ' → logprob: -12.788609504699707
    9. ' '' → logprob: -13.163609504699707
    10. '`' → logprob: -13.288609504699707

Token 2115: ''' (ID: 6)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.34041503071784973
    2. 'segments' → logprob: -2.4654150009155273
    3. ''' → logprob: -2.8404150009155273
    4. '       ' → logprob: -3.5904150009155273
    5. ''):
' → logprob: -3.5904150009155273
    6. ' as' → logprob: -3.8404150009155273
    7. '')' → logprob: -4.090415000915527
    8. '   ' → logprob: -4.215415000915527
    9. '):
' → logprob: -5.215415000915527
    10. ' tokens' → logprob: -5.465415000915527

Token 2116: ' as' (ID: 472)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.6421249508857727
    2. '       ' → logprob: -1.517124891281128
    3. 'segments' → logprob: -1.892124891281128
    4. '   ' → logprob: -3.392124891281128
    5. ',' → logprob: -4.392125129699707
    6. ' tokens' → logprob: -4.767125129699707
    7. ' for' → logprob: -4.767125129699707
    8. ' as' → logprob: -4.892125129699707
    9. ' in' → logprob: -5.392125129699707
    10. ':' → logprob: -5.517125129699707

Token 2117: ' directory' (ID: 12552)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.3117979168891907
    2. 'directory' → logprob: -1.436797857284546
    3. 'directories' → logprob: -4.061798095703125
    4. 'dirs' → logprob: -5.311798095703125
    5. 'special' → logprob: -5.936798095703125
    6. 'real' → logprob: -6.436798095703125
    7. 'segments' → logprob: -6.561798095703125
    8. 'dir' → logprob: -7.561798095703125
    9. 'names' → logprob: -8.061798095703125
    10. 'segment' → logprob: -8.311798095703125

Token 2118: ' names' (ID: 8747)
  Prédit: 'names'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'names' → logprob: -0.0077749681659042835
    2. ' names' → logprob: -5.382774829864502
    3. 'segments' → logprob: -6.007774829864502
    4. '_names' → logprob: -8.25777530670166
    5. ' segments' → logprob: -8.50777530670166
    6. 'components' → logprob: -9.25777530670166
    7. 'entries' → logprob: -10.63277530670166
    8. 'tokens' → logprob: -10.75777530670166
    9. 'name' → logprob: -10.88277530670166
    10. 'elements' → logprob: -11.13277530670166

Token 2119: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09157159179449081
    2. ',' → logprob: -3.716571569442749
    3. ':' → logprob: -3.716571569442749
    4. ' for' → logprob: -4.091571807861328
    5. 'for' → logprob: -4.966571807861328
    6. ':
' → logprob: -5.216571807861328
    7. ' and' → logprob: -6.341571807861328
    8. '[]' → logprob: -6.466571807861328
    9. '   ' → logprob: -6.966571807861328
    10. ' if' → logprob: -7.216571807861328

Token 2120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012649978743866086
    2. '```' → logprob: -7.251265048980713
    3. '        
' → logprob: -8.376264572143555
    4. '   ' → logprob: -9.626264572143555
    5. 'return' → logprob: -10.501264572143555
    6. ' return' → logprob: -10.501264572143555
    7. ' 
' → logprob: -10.501264572143555
    8. '``' → logprob: -10.751264572143555
    9. '           ' → logprob: -11.001264572143555
    10. '[
' → logprob: -11.001264572143555

Token 2121: ' They' (ID: 3164)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002243631286546588
    2. 'stack' → logprob: -6.377243518829346
    3. '
' → logprob: -8.377243995666504
    4. '   ' → logprob: -9.377243995666504
    5. '        
' → logprob: -9.877243995666504
    6. '```' → logprob: -10.502243995666504
    7. ' stack' → logprob: -10.752243995666504
    8. 'if' → logprob: -11.002243995666504
    9. 'segments' → logprob: -11.252243995666504
    10. '#' → logprob: -11.252243995666504

Token 2122: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9072107076644897
    2. ' are' → logprob: -1.7822107076644897
    3. ' =' → logprob: -2.0322108268737793
    4. '):
' → logprob: -3.0322108268737793
    5. 'def' → logprob: -3.1572108268737793
    6. '=' → logprob: -3.1572108268737793
    7. ' must' → logprob: -3.4072108268737793
    8. 'are' → logprob: -3.9072108268737793
    9. ' can' → logprob: -4.157210826873779
    10. ')' → logprob: -4.282210826873779

Token 2123: ' normal' (ID: 6078)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.915582001209259
    2. 'normal' → logprob: -1.2905819416046143
    3. 'treated' → logprob: -2.2905819416046143
    4. 'just' → logprob: -3.1655819416046143
    5. 'resolved' → logprob: -3.2905819416046143
    6. 'dirs' → logprob: -3.6655819416046143
    7. 'directories' → logprob: -4.290582180023193
    8. 'sim' → logprob: -4.415582180023193
    9. 'valid' → logprob: -4.915582180023193
    10. 'actually' → logprob: -5.040582180023193

Token 2124: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'directory' → logprob: -1.0550776720046997
    2. 'directories' → logprob: -1.0550776720046997
    3. 'dirs' → logprob: -1.6800776720046997
    4. 'segments' → logprob: -3.18007755279541
    5. 'names' → logprob: -3.30507755279541
    6. 'dir' → logprob: -4.05507755279541
    7. 'strings' → logprob: -5.05507755279541
    8. ' directories' → logprob: -5.93007755279541
    9. 'elements' → logprob: -6.05507755279541
    10. '_dirs' → logprob: -6.30507755279541

Token 2125: ' names' (ID: 8747)
  Prédit: 'names'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'names' → logprob: -0.010962927713990211
    2. ' names' → logprob: -4.635962963104248
    3. 'name' → logprob: -7.760962963104248
    4. '_names' → logprob: -8.26096248626709
    5. 'segments' → logprob: -8.51096248626709
    6. 'nam' → logprob: -9.13596248626709
    7. 's' → logprob: -10.13596248626709
    8. '   ' → logprob: -10.26096248626709
    9. '
' → logprob: -10.38596248626709
    10. 'n' → logprob: -10.88596248626709

Token 2126: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16153408586978912
    2. ':' → logprob: -2.286534070968628
    3. ':
' → logprob: -3.786534070968628
    4. '.' → logprob: -4.411534309387207
    5. ',' → logprob: -5.036534309387207
    6. '[]' → logprob: -6.661534309387207
    7. '[' → logprob: -6.911534309387207
    8. ' and' → logprob: -7.536534309387207
    9. '[:]' → logprob: -7.661534309387207
    10. '[
' → logprob: -7.786534309387207

Token 2127: ' but' (ID: 889)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.26385167241096497
    2. ' not' → logprob: -2.3888516426086426
    3. '       ' → logprob: -2.7638516426086426
    4. 'so' → logprob: -2.8888516426086426
    5. ' so' → logprob: -4.013851642608643
    6. 'meaning' → logprob: -7.138851642608643
    7. 'no' → logprob: -7.638851642608643
    8. 'without' → logprob: -8.0138521194458
    9. ' meaning' → logprob: -8.2638521194458
    10. '```' → logprob: -8.6388521194458

Token 2128: ' ..' (ID: 8548)
  Prédit: 'dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -1.3761318922042847
    2. '..' → logprob: -2.251132011413574
    3. 'all' → logprob: -2.251132011413574
    4. 'any' → logprob: -2.376132011413574
    5. 'not' → logprob: -2.626132011413574
    6. 'the' → logprob: -2.751132011413574
    7. 'we' → logprob: -2.876132011413574
    8. 'they' → logprob: -3.251132011413574
    9. 'there' → logprob: -3.376132011413574
    10. 'True' → logprob: -3.501132011413574

Token 2129: ' means' (ID: 4748)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -1.4246610403060913
    2. ' can' → logprob: -1.6746610403060913
    3. ' are' → logprob: -1.7996610403060913
    4. ' is' → logprob: -2.299661159515381
    5. 'must' → logprob: -2.424661159515381
    6. '...' → logprob: -2.924661159515381
    7. 'can' → logprob: -4.049661159515381
    8. ' in' → logprob: -4.299661159515381
    9. ' not' → logprob: -4.424661159515381
    10. 'are' → logprob: -4.424661159515381

Token 2130: ' parent' (ID: 5980)
  Prédit: 'going'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'going' → logprob: -0.7382634282112122
    2. 'go' → logprob: -1.4882633686065674
    3. 'pop' → logprob: -2.4882633686065674
    4. 'moving' → logprob: -3.1132633686065674
    5. 'parent' → logprob: -3.4882633686065674
    6. 'move' → logprob: -3.4882633686065674
    7. 'a' → logprob: -3.8632633686065674
    8. 'the' → logprob: -4.6132636070251465
    9. ' going' → logprob: -4.6132636070251465
    10. ' go' → logprob: -4.6132636070251465

Token 2131: ' directory' (ID: 12552)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.9357491731643677
    2. '_dirs' → logprob: -2.060749053955078
    3. '_dir' → logprob: -2.185749053955078
    4. 'dir' → logprob: -2.560749053955078
    5. 'directory' → logprob: -2.685749053955078
    6. '_segments' → logprob: -2.685749053955078
    7. 'dirs' → logprob: -2.935749053955078
    8. 'if' → logprob: -3.185749053955078
    9. 'segment' → logprob: -3.310749053955078
    10. ' directory' → logprob: -3.310749053955078

Token 2132: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3493523895740509
    2. ',' → logprob: -1.9743523597717285
    3. ' if' → logprob: -3.3493523597717285
    4. '
' → logprob: -3.4743523597717285
    5. ' and' → logprob: -3.7243523597717285
    6. ':' → logprob: -4.4743523597717285
    7. ':
' → logprob: -4.7243523597717285
    8. 'if' → logprob: -5.0993523597717285
    9. ' for' → logprob: -5.5993523597717285
    10. 'for' → logprob: -5.5993523597717285

Token 2133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004074354947078973
    2. '```' → logprob: -8.250407218933105
    3. '   ' → logprob: -9.375407218933105
    4. '``' → logprob: -11.375407218933105
    5. '           ' → logprob: -11.625407218933105
    6. '        
' → logprob: -12.125407218933105
    7. '`' → logprob: -12.250407218933105
    8. ' for' → logprob: -12.250407218933105
    9. '    ' → logprob: -12.625407218933105
    10. '[
' → logprob: -13.000407218933105

Token 2134: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025680451653897762
    2. '```' → logprob: -6.877568244934082
    3. '   ' → logprob: -7.502568244934082
    4. '
' → logprob: -7.877568244934082
    5. '``' → logprob: -9.002568244934082
    6. 'stack' → logprob: -9.002568244934082
    7. 'i' → logprob: -9.377568244934082
    8. 'n' → logprob: -10.377568244934082
    9. ' i' → logprob: -10.502568244934082
    10. '#' → logprob: -10.627568244934082

Token 2135: ' '' (ID: 461)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.378872275352478
    2. 'going' → logprob: -1.503872275352478
    3. 'not' → logprob: -1.628872275352478
    4. 'dirs' → logprob: -2.5038723945617676
    5. 'the' → logprob: -2.8788723945617676
    6. 'any' → logprob: -3.1288723945617676
    7. '..' → logprob: -3.3788723945617676
    8. ' not' → logprob: -3.8788723945617676
    9. 'escaping' → logprob: -4.378872394561768
    10. 'a' → logprob: -4.503872394561768

Token 2136: 'dirs' (ID: 132921)
  Prédit: 'dirs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -0.2370101362466812
    2. ' not' → logprob: -2.4870102405548096
    3. 'not' → logprob: -2.4870102405548096
    4. 'len' → logprob: -4.2370100021362305
    5. '..' → logprob: -4.3620100021362305
    6. 'any' → logprob: -5.2370100021362305
    7. 'd' → logprob: -5.8620100021362305
    8. ' dirs' → logprob: -6.3620100021362305
    9. ''' → logprob: -6.3620100021362305
    10. 'dir' → logprob: -7.2370100021362305

Token 2137: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30630576610565186
    2. '       ' → logprob: -2.0563058853149414
    3. '):
' → logprob: -3.1813058853149414
    4. ''' → logprob: -3.8063058853149414
    5. ')' → logprob: -4.431305885314941
    6. ' is' → logprob: -4.556305885314941
    7. '   ' → logprob: -4.681305885314941
    8. ':
' → logprob: -4.681305885314941
    9. '):' → logprob: -5.556305885314941
    10. ' ==' → logprob: -5.556305885314941

Token 2138: ' point' (ID: 2438)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4711973965167999
    2. ' is' → logprob: -2.0961973667144775
    3. ' ==' → logprob: -2.5961973667144775
    4. 'is' → logprob: -2.7211973667144775
    5. 'and' → logprob: -2.9711973667144775
    6. ':' → logprob: -3.8461973667144775
    7. ':
' → logprob: -4.596197605133057
    8. ' and' → logprob: -4.721197605133057
    9. '=[]' → logprob: -4.846197605133057
    10. ')' → logprob: -6.346197605133057

Token 2139: ' outside' (ID: 7539)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2132977992296219
    2. 'to' → logprob: -1.7132978439331055
    3. 'not' → logprob: -5.3382978439331055
    4. '       ' → logprob: -6.0882978439331055
    5. ' not' → logprob: -6.9632978439331055
    6. 's' → logprob: -7.0882978439331055
    7. '=' → logprob: -7.5882978439331055
    8. ')' → logprob: -7.9632978439331055
    9. 'only' → logprob: -8.088297843933105
    10. '   ' → logprob: -8.213297843933105

Token 2140: ' root' (ID: 6577)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1144205331802368
    2. 'root' → logprob: -1.2394205331802368
    3. ' the' → logprob: -1.6144205331802368
    4. 'the' → logprob: -2.6144204139709473
    5. '       ' → logprob: -2.8644204139709473
    6. ' root' → logprob: -3.9894204139709473
    7. '_root' → logprob: -4.114420413970947
    8. ' of' → logprob: -4.864420413970947
    9. ' self' → logprob: -5.614420413970947
    10. 'of' → logprob: -6.114420413970947

Token 2141: ' (' (ID: 350)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22358036041259766
    2. '       ' → logprob: -2.0985803604125977
    3. ':' → logprob: -3.0985803604125977
    4. ',' → logprob: -3.5985803604125977
    5. '):
' → logprob: -6.098580360412598
    6. ':
' → logprob: -7.598580360412598
    7. ',
' → logprob: -8.223580360412598
    8. '           ' → logprob: -8.473580360412598
    9. 'return' → logprob: -8.598580360412598
    10. ':return' → logprob: -8.723580360412598

Token 2142: '..' (ID: 485)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.3061116933822632
    2. '       ' → logprob: -1.5561116933822632
    3. '),' → logprob: -1.6811116933822632
    4. ')' → logprob: -1.6811116933822632
    5. '[]' → logprob: -3.1811118125915527
    6. 'dirs' → logprob: -3.3061118125915527
    7. '):
' → logprob: -4.056111812591553
    8. '...' → logprob: -5.431111812591553
    9. '           ' → logprob: -5.431111812591553
    10. ',' → logprob: -5.806111812591553

Token 2143: ' from' (ID: 591)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6365019083023071
    2. '       ' → logprob: -1.2615019083023071
    3. ' or' → logprob: -3.5115017890930176
    4. ')' → logprob: -4.136501789093018
    5. '...' → logprob: -4.386501789093018
    6. ' is' → logprob: -4.636501789093018
    7. ',' → logprob: -4.636501789093018
    8. ':' → logprob: -4.636501789093018
    9. '==' → logprob: -4.761501789093018
    10. '):' → logprob: -4.761501789093018

Token 2144: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.4105040729045868
    2. 'empty' → logprob: -1.4105041027069092
    3. '[]' → logprob: -2.785504102706909
    4. '[])' → logprob: -3.535504102706909
    5. '['' → logprob: -7.28550386428833
    6. 'current' → logprob: -8.285504341125488
    7. 'an' → logprob: -8.785504341125488
    8. ')' → logprob: -9.035504341125488
    9. '[]
' → logprob: -9.160504341125488
    10. 'stack' → logprob: -9.285504341125488

Token 2145: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5623182058334351
    2. '):
' → logprob: -1.562318205833435
    3. ')' → logprob: -2.1873183250427246
    4. '       ' → logprob: -3.3123183250427246
    5. ',' → logprob: -4.687318325042725
    6. ' and' → logprob: -4.937318325042725
    7. 'level' → logprob: -4.937318325042725
    8. ' or' → logprob: -5.062318325042725
    9. ' not' → logprob: -5.187318325042725
    10. '):' → logprob: -5.312318325042725

Token 2146: ' returns' (ID: 7377)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4170069992542267
    2. 'return' → logprob: -1.2920069694519043
    3. '           ' → logprob: -2.7920069694519043
    4. '       ' → logprob: -5.542006969451904
    5. ' None' → logprob: -7.542006969451904
    6. 'None' → logprob: -8.542007446289062
    7. '        ' → logprob: -9.042007446289062
    8. '               ' → logprob: -9.292007446289062
    9. '   ' → logprob: -10.667007446289062
    10. ':return' → logprob: -11.042007446289062

Token 2147: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00033546582562848926
    2. ' None' → logprob: -8.000335693359375
    3. '           ' → logprob: -17.250335693359375
    4. '       ' → logprob: -17.500335693359375
    5. '```' → logprob: -17.625335693359375
    6. '   ' → logprob: -17.750335693359375
    7. '               ' → logprob: -17.875335693359375
    8. '
' → logprob: -18.375335693359375
    9. '=None' → logprob: -19.000335693359375
    10. '_None' → logprob: -19.625335693359375

Token 2148: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03419732674956322
    2. ':
' → logprob: -3.7841973304748535
    3. ':' → logprob: -4.9091973304748535
    4. '   ' → logprob: -6.2841973304748535
    5. '):
' → logprob: -7.7841973304748535
    6. ')' → logprob: -7.7841973304748535
    7. '[' → logprob: -8.034196853637695
    8. '           ' → logprob: -9.159196853637695
    9. '
' → logprob: -9.659196853637695
    10. '        
' → logprob: -10.284196853637695

Token 2149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003392425598576665
    2. '```' → logprob: -5.878392219543457
    3. '``' → logprob: -8.628392219543457
    4. '   ' → logprob: -9.378392219543457
    5. '        
' → logprob: -9.378392219543457
    6. '[' → logprob: -10.003392219543457
    7. '\n' → logprob: -10.503392219543457
    8. '           ' → logprob: -10.753392219543457
    9. '
' → logprob: -10.878392219543457
    10. '`' → logprob: -11.003392219543457

Token 2150: ' Also' (ID: 8820)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10219413042068481
    2. 'stack' → logprob: -2.35219407081604
    3. 'resolved' → logprob: -6.602194309234619
    4. 'result' → logprob: -8.477193832397461
    5. 'res' → logprob: -8.977193832397461
    6. 'path' → logprob: -9.477193832397461
    7. '```' → logprob: -9.852193832397461
    8. '   ' → logprob: -10.352193832397461
    9. 'curr' → logprob: -10.727193832397461
    10. ' stack' → logprob: -10.727193832397461

Token 2151: ' verify' (ID: 14866)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7072121500968933
    2. '
' → logprob: -1.957212209701538
    3. '#' → logprob: -2.207212209701538
    4. 'if' → logprob: -2.457212209701538
    5. ' if' → logprob: -3.332212209701538
    6. ' handles' → logprob: -3.332212209701538
    7. 'handles' → logprob: -4.207211971282959
    8. 'stack' → logprob: -4.582211971282959
    9. 'for' → logprob: -4.707211971282959
    10. ' #' → logprob: -4.832211971282959

Token 2152: ' every' (ID: 1753)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.37045279145240784
    2. 'dirs' → logprob: -2.620452880859375
    3. 'len' → logprob: -2.745452880859375
    4. 'all' → logprob: -2.870452880859375
    5. 'that' → logprob: -3.620452880859375
    6. 'for' → logprob: -4.370452880859375
    7. '       ' → logprob: -4.370452880859375
    8. 'if' → logprob: -4.870452880859375
    9. 'curr' → logprob: -4.995452880859375
    10. 'exists' → logprob: -4.995452880859375

Token 2153: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.35029178857803345
    2. 'dir' → logprob: -1.8502917289733887
    3. 'segment' → logprob: -2.4752917289733887
    4. 'step' → logprob: -3.6002917289733887
    5. 'name' → logprob: -4.600291728973389
    6. 'component' → logprob: -4.975291728973389
    7. 'part' → logprob: -5.600291728973389
    8. 'dirname' → logprob: -6.100291728973389
    9. 'seg' → logprob: -6.350291728973389
    10. 'element' → logprob: -7.100291728973389

Token 2154: ' exists' (ID: 13031)
  Prédit: 'exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exists' → logprob: -0.2139635682106018
    2. ' exists' → logprob: -2.338963508605957
    3. ' in' → logprob: -3.463963508605957
    4. 'name' → logprob: -3.713963508605957
    5. '       ' → logprob: -4.463963508605957
    6. 'in' → logprob: -4.463963508605957
    7. '_exists' → logprob: -4.713963508605957
    8. 'for' → logprob: -6.213963508605957
    9. ' name' → logprob: -6.838963508605957
    10. ' for' → logprob: -6.838963508605957

Token 2155: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034553834702819586
    2. '(self' → logprob: -6.75345516204834
    3. ':
' → logprob: -7.37845516204834
    4. '   ' → logprob: -7.75345516204834
    5. '
' → logprob: -8.37845516204834
    6. ':' → logprob: -8.62845516204834
    7. ',' → logprob: -8.62845516204834
    8. 'self' → logprob: -9.00345516204834
    9. '):
' → logprob: -9.12845516204834
    10. '        
' → logprob: -10.00345516204834

Token 2156: ' fs' (ID: 16105)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11135803163051605
    2. 'the' → logprob: -2.3613579273223877
    3. 'curr' → logprob: -4.736358165740967
    4. 'current' → logprob: -6.861358165740967
    5. ' the' → logprob: -7.736358165740967
    6. 'filesystem' → logprob: -8.111357688903809
    7. ' self' → logprob: -8.486357688903809
    8. 'cur' → logprob: -9.361357688903809
    9. 'cwd' → logprob: -9.736357688903809
    10. '       ' → logprob: -10.486357688903809

Token 2157: ' when' (ID: 1261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012325039133429527
    2. '   ' → logprob: -5.262324810028076
    3. ':
' → logprob: -5.637324810028076
    4. '(self' → logprob: -7.137324810028076
    5. ':' → logprob: -7.262324810028076
    6. '[' → logprob: -7.637324810028076
    7. '        
' → logprob: -7.887324810028076
    8. '(
' → logprob: -8.387325286865234
    9. '):
' → logprob: -8.637325286865234
    10. '[
' → logprob: -8.762325286865234

Token 2158: ' advancing' (ID: 74857)
  Prédit: 'checking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checking' → logprob: -0.2747475206851959
    2. 'tr' → logprob: -2.024747610092163
    3. 'iter' → logprob: -2.899747610092163
    4. 'res' → logprob: -4.649747371673584
    5. 'moving' → logprob: -4.649747371673584
    6. 'walking' → logprob: -4.899747371673584
    7. ' travers' → logprob: -5.149747371673584
    8. 'going' → logprob: -5.274747371673584
    9. 'checked' → logprob: -5.524747371673584
    10. ' checking' → logprob: -6.149747371673584

Token 2159: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01063591055572033
    2. ':
' → logprob: -5.260635852813721
    3. ':' → logprob: -6.385635852813721
    4. '):
' → logprob: -7.010635852813721
    5. '```' → logprob: -7.510635852813721
    6. ',' → logprob: -7.635635852813721
    7. '
' → logprob: -7.760635852813721
    8. ')' → logprob: -8.135636329650879
    9. ' for' → logprob: -8.260636329650879
    10. '   ' → logprob: -8.260636329650879

Token 2160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046332005877047777
    2. '
' → logprob: -7.875463485717773
    3. '```' → logprob: -9.875463485717773
    4. '        
' → logprob: -10.875463485717773
    5. 'curr' → logprob: -11.750463485717773
    6. '``' → logprob: -13.500463485717773
    7. '   ' → logprob: -13.625463485717773
    8. ' curr' → logprob: -13.875463485717773
    9. '    
' → logprob: -14.500463485717773
    10. '`' → logprob: -15.625463485717773

Token 2161: ' Note' (ID: 12225)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000227496653678827
    2. 'curr' → logprob: -8.625227928161621
    3. '```' → logprob: -10.250227928161621
    4. '
' → logprob: -11.750227928161621
    5. ' curr' → logprob: -13.500227928161621
    6. 'def' → logprob: -13.875227928161621
    7. '   ' → logprob: -14.000227928161621
    8. '``' → logprob: -14.375227928161621
    9. '        
' → logprob: -14.750227928161621
    10. 'current' → logprob: -16.250226974487305

Token 2162: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009999489411711693
    2. '
' → logprob: -5.3849992752075195
    3. ' that' → logprob: -6.0099992752075195
    4. '   ' → logprob: -6.8849992752075195
    5. ':' → logprob: -7.8849992752075195
    6. 'that' → logprob: -8.13499927520752
    7. '        
' → logprob: -8.25999927520752
    8. 'self' → logprob: -8.38499927520752
    9. '```' → logprob: -9.25999927520752
    10. 'def' → logprob: -9.38499927520752

Token 2163: ' '.'' (ID: 64762)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.2856529951095581
    2. ' curr' → logprob: -1.660652995109558
    3. '       ' → logprob: -2.9106531143188477
    4. '
' → logprob: -6.785653114318848
    5. '```' → logprob: -7.535653114318848
    6. 'current' → logprob: -7.660653114318848
    7. '``' → logprob: -7.910653114318848
    8. 'def' → logprob: -8.035653114318848
    9. 'stack' → logprob: -8.035653114318848
    10. '   ' → logprob: -8.410653114318848

Token 2164: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2765299081802368
    2. ' and' → logprob: -1.6515299081802368
    3. ' def' → logprob: -4.526529788970947
    4. 'is' → logprob: -4.901529788970947
    5. 'and' → logprob: -5.401529788970947
    6. ' can' → logprob: -5.526529788970947
    7. '   ' → logprob: -5.526529788970947
    8. ' in' → logprob: -6.151529788970947
    9. ' represents' → logprob: -6.151529788970947
    10. ' means' → logprob: -6.401529788970947

Token 2165: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6411254405975342
    2. 'not' → logprob: -1.8911254405975342
    3. 'treated' → logprob: -2.516125440597534
    4. 'consider' → logprob: -2.766125440597534
    5. ' a' → logprob: -2.891125440597534
    6. ''.' → logprob: -4.016125679016113
    7. ' considered' → logprob: -4.141125679016113
    8. 'normal' → logprob: -4.266125679016113
    9. ' not' → logprob: -4.266125679016113
    10. ' treated' → logprob: -4.391125679016113

Token 2166: ' directory' (ID: 12552)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.40925392508506775
    2. 'directory' → logprob: -1.2842539548873901
    3. 'valid' → logprob: -3.0342538356781006
    4. 'regular' → logprob: -5.65925407409668
    5. ' normal' → logprob: -6.28425407409668
    6. 'name' → logprob: -6.40925407409668
    7. 'segment' → logprob: -6.78425407409668
    8. ' directory' → logprob: -7.03425407409668
    9. 'dirname' → logprob: -7.78425407409668
    10. ' valid' → logprob: -8.03425407409668

Token 2167: ' name' (ID: 1308)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7487151622772217
    2. 's' → logprob: -0.9987151622772217
    3. '   ' → logprob: -2.6237151622772217
    4. '_name' → logprob: -3.9987151622772217
    5. '_names' → logprob: -4.623715400695801
    6. ':' → logprob: -4.873715400695801
    7. '_segments' → logprob: -4.998715400695801
    8. '):
' → logprob: -5.498715400695801
    9. ':
' → logprob: -5.748715400695801
    10. '):' → logprob: -5.998715400695801

Token 2168: ' representing' (ID: 25389)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09583401679992676
    2. ':
' → logprob: -3.5958340167999268
    3. ':' → logprob: -3.8458340167999268
    4. '
' → logprob: -4.345833778381348
    5. '):
' → logprob: -4.845833778381348
    6. '   ' → logprob: -5.095833778381348
    7. '        
' → logprob: -5.220833778381348
    8. ',' → logprob: -6.720833778381348
    9. '[' → logprob: -7.095833778381348
    10. ' and' → logprob: -7.220833778381348

Token 2169: ' itself' (ID: 8807)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16335701942443848
    2. 'a' → logprob: -2.9133570194244385
    3. 'the' → logprob: -2.9133570194244385
    4. ''.' → logprob: -3.4133570194244385
    5. 'normal' → logprob: -6.163356781005859
    6. 'it' → logprob: -6.413356781005859
    7. 'literal' → logprob: -6.788356781005859
    8. ''' → logprob: -7.163356781005859
    9. 'actual' → logprob: -7.538356781005859
    10. ' current' → logprob: -7.913356781005859

Token 2170: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010111343581229448
    2. '```' → logprob: -7.626011371612549
    3. '
' → logprob: -8.75101089477539
    4. '   ' → logprob: -9.25101089477539
    5. '        
' → logprob: -9.37601089477539
    6. ',' → logprob: -9.50101089477539
    7. ':
' → logprob: -10.62601089477539
    8. '`' → logprob: -11.00101089477539
    9. '):
' → logprob: -11.37601089477539
    10. ':' → logprob: -11.75101089477539

Token 2171: ' so' (ID: 813)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0055021047592163
    2. ' so' → logprob: -1.1305021047592163
    3. '       ' → logprob: -1.6305021047592163
    4. 'not' → logprob: -2.630502223968506
    5. ' but' → logprob: -4.005502223968506
    6. 'so' → logprob: -4.255502223968506
    7. 'but' → logprob: -5.880502223968506
    8. ' no' → logprob: -7.005502223968506
    9. 'return' → logprob: -7.005502223968506
    10. ' and' → logprob: -7.505502223968506

Token 2172: ' no' (ID: 860)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.8051750659942627
    2. 'it' → logprob: -2.0551750659942627
    3. 'not' → logprob: -2.5551750659942627
    4. 'the' → logprob: -2.6801750659942627
    5. '       ' → logprob: -2.8051750659942627
    6. 'for' → logprob: -2.8051750659942627
    7. 'if' → logprob: -3.1801750659942627
    8. 'they' → logprob: -3.9301750659942627
    9. '#' → logprob: -4.430174827575684
    10. 'all' → logprob: -4.805174827575684

Token 2173: ' special' (ID: 3582)
  Prédit: 'special'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'special' → logprob: -0.8612329363822937
    2. 'change' → logprob: -0.9862329363822937
    3. 'pop' → logprob: -3.1112329959869385
    4. 'op' → logprob: -3.6112329959869385
    5. ' special' → logprob: -3.7362329959869385
    6. 'resolution' → logprob: -3.9862329959869385
    7. 'stack' → logprob: -4.111232757568359
    8. 'effect' → logprob: -4.486232757568359
    9. ' change' → logprob: -4.486232757568359
    10. 'skip' → logprob: -5.236232757568359

Token 2174: ' collapse' (ID: 38335)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08841115236282349
    2. 'handling' → logprob: -2.8384110927581787
    3. 'special' → logprob: -4.963411331176758
    4. 'meaning' → logprob: -5.338411331176758
    5. 'skip' → logprob: -6.213411331176758
    6. 'action' → logprob: -6.213411331176758
    7. 'resolution' → logprob: -6.463411331176758
    8. 'check' → logprob: -6.963411331176758
    9. 'logic' → logprob: -7.088411331176758
    10. 'case' → logprob: -7.338411331176758

Token 2175: '.
' (ID: 558)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.3388433456420898
    2. ' logic' → logprob: -1.8388433456420898
    3. 'needed' → logprob: -2.58884334564209
    4. ' needed' → logprob: -2.71384334564209
    5. ' behavior' → logprob: -2.83884334564209
    6. '_' → logprob: -3.21384334564209
    7. 'action' → logprob: -3.46384334564209
    8. 'operation' → logprob: -3.46384334564209
    9. 'behavior' → logprob: -3.71384334564209
    10. ',' → logprob: -3.96384334564209

Token 2176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009293294278904796
    2. '
' → logprob: -7.750929355621338
    3. '```' → logprob: -8.00092887878418
    4. '        
' → logprob: -9.00092887878418
    5. '   ' → logprob: -11.62592887878418
    6. '``' → logprob: -12.00092887878418
    7. '           ' → logprob: -12.12592887878418
    8. '    
' → logprob: -12.25092887878418
    9. '`' → logprob: -12.75092887878418
    10. '	' → logprob: -13.37592887878418

Token 2177: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034145128447562456
    2. 'curr' → logprob: -6.378414630889893
    3. 'def' → logprob: -6.753414630889893
    4. '   ' → logprob: -8.878414154052734
    5. 'current' → logprob: -9.378414154052734
    6. '
' → logprob: -9.878414154052734
    7. 'index' → logprob: -10.003414154052734
    8. '```' → logprob: -10.003414154052734
    9. '        
' → logprob: -10.503414154052734
    10. '"""' → logprob: -11.128414154052734

Token 2178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032966553699225187
    2. '```' → logprob: -6.378296852111816
    3. '
' → logprob: -6.878296852111816
    4. '        
' → logprob: -8.753296852111816
    5. 'curr' → logprob: -8.753296852111816
    6. '``' → logprob: -9.628296852111816
    7. '`' → logprob: -10.128296852111816
    8. ' curr' → logprob: -10.878296852111816
    9. '   ' → logprob: -11.003296852111816
    10. '`
' → logprob: -11.128296852111816

Token 2179: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.24281910061836243
    2. 'resolved' → logprob: -2.49281907081604
    3. 'result' → logprob: -2.86781907081604
    4. '       ' → logprob: -3.24281907081604
    5. 'curr' → logprob: -3.49281907081604
    6. 'res' → logprob: -5.992819309234619
    7. 'path' → logprob: -6.242819309234619
    8. 'current' → logprob: -6.617819309234619
    9. 'cur' → logprob: -7.742819309234619
    10. ' curr' → logprob: -9.617818832397461

Token 2180: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12742379307746887
    2. '=' → logprob: -2.1274237632751465
    3. '=[]' → logprob: -7.8774237632751465
    4. ':' → logprob: -9.252424240112305
    5. '.append' → logprob: -11.627424240112305
    6. '=[]
' → logprob: -11.877424240112305
    7. '[:]' → logprob: -12.752424240112305
    8. '[]' → logprob: -14.377424240112305
    9. '       ' → logprob: -15.002424240112305
    10. '=[]
' → logprob: -15.127424240112305

Token 2181: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03500329703092575
    2. '[]
' → logprob: -4.035003185272217
    3. ' []' → logprob: -4.285003185272217
    4. 'List' → logprob: -6.035003185272217
    5. ' []
' → logprob: -7.785003185272217
    6. ' List' → logprob: -9.285003662109375
    7. '=[]' → logprob: -11.285003662109375
    8. 'list' → logprob: -11.785003662109375
    9. '[]

' → logprob: -12.160003662109375
    10. '[List' → logprob: -12.535003662109375

Token 2182: '[str' (ID: 33439)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30555129051208496
    2. ' =' → logprob: -1.555551290512085
    3. '=[]' → logprob: -3.555551290512085
    4. '[str' → logprob: -3.805551290512085
    5. '=[]
' → logprob: -7.180551528930664
    6. '[]' → logprob: -7.680551528930664
    7. ':' → logprob: -8.930551528930664
    8. '[:]' → logprob: -11.430551528930664
    9. 'str' → logprob: -12.055551528930664
    10. '   ' → logprob: -12.180551528930664

Token 2183: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6937850117683411
    2. ' =' → logprob: -0.6937850117683411
    3. '=[]' → logprob: -8.193784713745117
    4. '       ' → logprob: -8.318784713745117
    5. ')' → logprob: -9.568784713745117
    6. '=[]
' → logprob: -10.818784713745117
    7. ']' → logprob: -11.818784713745117
    8. '.append' → logprob: -11.943784713745117
    9. '[]' → logprob: -12.693784713745117
    10. ']=' → logprob: -12.943784713745117

Token 2184: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02095242775976658
    2. ' =' → logprob: -3.8959524631500244
    3. '=[]' → logprob: -7.895952224731445
    4. '=[]
' → logprob: -10.520952224731445
    5. '[]' → logprob: -11.770952224731445
    6. '.append' → logprob: -14.395952224731445
    7. '       ' → logprob: -14.395952224731445
    8. ':' → logprob: -14.520952224731445
    9. '=
' → logprob: -14.520952224731445
    10. '[:]' → logprob: -15.020952224731445

Token 2185: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6932042837142944
    2. '[]
' → logprob: -0.6932042837142944
    3. '[]

' → logprob: -9.943203926086426
    4. ' []
' → logprob: -12.193203926086426
    5. '[])
' → logprob: -13.568203926086426
    6. ' []' → logprob: -13.818203926086426
    7. '[])' → logprob: -13.943203926086426
    8. '[' → logprob: -15.693203926086426
    9. '[],' → logprob: -15.818203926086426
    10. '=[]
' → logprob: -16.193204879760742

Token 2186: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24054180085659027
    2. '       ' → logprob: -1.8655418157577515
    3. 'for' → logprob: -2.865541696548462
    4. '	for' → logprob: -6.615541934967041
    5. '   ' → logprob: -8.115541458129883
    6. '```' → logprob: -8.240541458129883
    7. '        
' → logprob: -10.115541458129883
    8. '
' → logprob: -10.240541458129883
    9. ':' → logprob: -12.115541458129883
    10. ' ' → logprob: -12.240541458129883

Token 2187: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002037487458437681
    2. '       ' → logprob: -6.252037525177002
    3. ' for' → logprob: -9.127037048339844
    4. '   ' → logprob: -16.377037048339844
    5. '	for' → logprob: -16.877037048339844
    6. 'For' → logprob: -17.252037048339844
    7. '```' → logprob: -17.377037048339844
    8. 'current' → logprob: -18.252037048339844
    9. 'curr' → logprob: -18.502037048339844
    10. 'parent' → logprob: -18.752037048339844

Token 2188: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0816965326666832
    2. 'dir' → logprob: -2.5816965103149414
    3. 'seg' → logprob: -6.956696510314941
    4. 'dirname' → logprob: -7.081696510314941
    5. 'segment' → logprob: -7.706696510314941
    6. 'part' → logprob: -7.706696510314941
    7. 'directory' → logprob: -9.581696510314941
    8. 'name' → logprob: -10.706696510314941
    9. ' d' → logprob: -11.456696510314941
    10. 'component' → logprob: -12.206696510314941

Token 2189: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04316772520542145
    2. 'in' → logprob: -3.16816782951355
    3. 'd' → logprob: -8.793168067932129
    4. '       ' → logprob: -11.793168067932129
    5. ' ' → logprob: -13.168168067932129
    6. '   ' → logprob: -13.293168067932129
    7. ' d' → logprob: -13.543168067932129
    8. ')' → logprob: -14.543168067932129
    9. '	in' → logprob: -14.668168067932129
    10. 'i' → logprob: -14.793168067932129

Token 2190: ' dirs' (ID: 99999)
  Prédit: 'dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -0.0006729974993504584
    2. 'd' → logprob: -7.375672817230225
    3. ' dirs' → logprob: -10.000673294067383
    4. 'dir' → logprob: -14.875673294067383
    5. '_dirs' → logprob: -15.375673294067383
    6. 'dims' → logprob: -15.500673294067383
    7. '       ' → logprob: -15.875673294067383
    8. '   ' → logprob: -16.875673294067383
    9. 'docs' → logprob: -17.000673294067383
    10. 'dire' → logprob: -17.125673294067383

Token 2191: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.599770724773407
    2. '           ' → logprob: -0.974770724773407
    3. ':' → logprob: -2.8497707843780518
    4. '       ' → logprob: -4.224770545959473
    5. ',' → logprob: -7.599770545959473
    6. ' if' → logprob: -8.849770545959473
    7. '   ' → logprob: -9.474770545959473
    8. '        ' → logprob: -9.599770545959473
    9. '          ' → logprob: -9.599770545959473
    10. '<|end|>' → logprob: -9.849770545959473

Token 2192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013815441634505987
    2. '       ' → logprob: -6.6263813972473145
    3. '   ' → logprob: -10.126381874084473
    4. '```' → logprob: -11.876381874084473
    5. 'if' → logprob: -12.501381874084473
    6. '
' → logprob: -14.126381874084473
    7. '    ' → logprob: -14.251381874084473
    8. '               ' → logprob: -14.251381874084473
    9. '          ' → logprob: -14.501381874084473
    10. ' if' → logprob: -14.501381874084473

Token 2193: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.7835754988482222e-05
    2. '           ' → logprob: -11.250018119812012
    3. ' if' → logprob: -12.250018119812012
    4. '               ' → logprob: -17.250017166137695
    5. '```' → logprob: -17.250017166137695
    6. '   ' → logprob: -18.750017166137695
    7. '       ' → logprob: -18.750017166137695
    8. 'If' → logprob: -19.000017166137695
    9. '            
' → logprob: -19.375017166137695
    10. 'stack' → logprob: -20.250017166137695

Token 2194: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003658983623608947
    2. ' d' → logprob: -5.628658771514893
    3. '           ' → logprob: -11.00365924835205
    4. '   ' → logprob: -11.50365924835205
    5. '         ' → logprob: -12.25365924835205
    6. ' ' → logprob: -12.25365924835205
    7. '    ' → logprob: -12.50365924835205
    8. '       ' → logprob: -12.62865924835205
    9. '     ' → logprob: -12.62865924835205
    10. '  ' → logprob: -13.12865924835205

Token 2195: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1697850376367569
    2. ' ==' → logprob: -1.9197850227355957
    3. '=='' → logprob: -4.794785022735596
    4. '=="' → logprob: -7.044785022735596
    5. '==
' → logprob: -8.169785499572754
    6. '=' → logprob: -10.919785499572754
    7. '!=' → logprob: -11.294785499572754
    8. ' =='' → logprob: -11.544785499572754
    9. ')==' → logprob: -11.794785499572754
    10. 'is' → logprob: -12.294785499572754

Token 2196: ' '..' (ID: 107414)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.000652389950118959
    2. ''.' → logprob: -7.750652313232422
    3. '"..' → logprob: -9.125652313232422
    4. ' '..' → logprob: -10.000652313232422
    5. '..' → logprob: -10.125652313232422
    6. '"' → logprob: -11.500652313232422
    7. '''' → logprob: -11.875652313232422
    8. '   ' → logprob: -13.000652313232422
    9. '('' → logprob: -13.125652313232422
    10. ''"' → logprob: -14.625652313232422

Token 2197: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.06218256056308746
    2. ''' → logprob: -3.687182664871216
    3. '           ' → logprob: -4.312182426452637
    4. '               ' → logprob: -4.437182426452637
    5. '':' → logprob: -5.062182426452637
    6. ':
' → logprob: -6.187182426452637
    7. ''):
' → logprob: -7.062182426452637
    8. '```' → logprob: -8.687182426452637
    9. ' and' → logprob: -8.812182426452637
    10. '):
' → logprob: -9.312182426452637

Token 2198: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15353119373321533
    2. '               ' → logprob: -2.153531074523926
    3. 'if' → logprob: -4.028531074523926
    4. ' if' → logprob: -4.778531074523926
    5. '```' → logprob: -10.903531074523926
    6. '          ' → logprob: -12.153531074523926
    7. '              ' → logprob: -12.903531074523926
    8. '   ' → logprob: -12.903531074523926
    9. '       ' → logprob: -12.903531074523926
    10. '            ' → logprob: -13.028531074523926

Token 2199: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -6.170270353322849e-05
    2. ' if' → logprob: -9.750061988830566
    3. '               ' → logprob: -13.000061988830566
    4. '           ' → logprob: -13.875061988830566
    5. '                   ' → logprob: -15.750061988830566
    6. 'return' → logprob: -18.37506103515625
    7. '#' → logprob: -18.37506103515625
    8. 'If' → logprob: -18.50006103515625
    9. '	if' → logprob: -19.00006103515625
    10. '   ' → logprob: -19.25006103515625

Token 2200: ' len' (ID: 4631)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.04823744297027588
    2. ' not' → logprob: -3.1732373237609863
    3. 'stack' → logprob: -5.423237323760986
    4. 'len' → logprob: -7.298237323760986
    5. ' stack' → logprob: -9.423237800598145
    6. ' len' → logprob: -10.423237800598145
    7. '   ' → logprob: -10.923237800598145
    8. '	not' → logprob: -13.298237800598145
    9. '       ' → logprob: -13.798237800598145
    10. ' ' → logprob: -13.923237800598145

Token 2201: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.0015028368216007948
    2. 'stack' → logprob: -6.501502990722656
    3. '	stack' → logprob: -14.876502990722656
    4. ' stack' → logprob: -17.001502990722656
    5. '.stack' → logprob: -18.251502990722656
    6. '(st' → logprob: -18.376502990722656
    7. '(' → logprob: -18.751502990722656
    8. '```' → logprob: -19.001502990722656
    9. '(
' → logprob: -19.251502990722656
    10. '_stack' → logprob: -19.251502990722656

Token 2202: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04027406498789787
    2. ' ==' → logprob: -3.290274143218994
    3. ')==' → logprob: -6.415274143218994
    4. ')' → logprob: -8.290273666381836
    5. '>' → logprob: -8.290273666381836
    6. '===' → logprob: -10.290273666381836
    7. '()==' → logprob: -10.665273666381836
    8. ']==' → logprob: -11.040273666381836
    9. '0' → logprob: -12.040273666381836
    10. '=' → logprob: -12.415273666381836

Token 2203: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0033061588183045387
    2. ' ==' → logprob: -5.7533063888549805
    3. '>' → logprob: -9.25330638885498
    4. '===' → logprob: -10.75330638885498
    5. '==
' → logprob: -12.62830638885498
    6. '()==' → logprob: -12.87830638885498
    7. ')==' → logprob: -13.00330638885498
    8. '=' → logprob: -14.00330638885498
    9. '<=' → logprob: -14.00330638885498
    10. '0' → logprob: -14.50330638885498

Token 2204: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.750001907348633
    4. '۰' → logprob: -19.875001907348633
    5. '```' → logprob: -20.750001907348633
    6. '00' → logprob: -21.750001907348633
    7. '000' → logprob: -21.875001907348633
    8. '=' → logprob: -22.000001907348633
    9. '０' → logprob: -22.125001907348633
    10. '<|end|>' → logprob: -22.625001907348633

Token 2205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۰' → logprob: -19.375003814697266
    4. '   ' → logprob: -20.000003814697266
    5. '00' → logprob: -21.125003814697266
    6. '０' → logprob: -21.750003814697266
    7. '```' → logprob: -21.750003814697266
    8. '1' → logprob: -22.000003814697266
    9. '000' → logprob: -22.000003814697266
    10. '০' → logprob: -22.375003814697266

Token 2206: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6985631585121155
    2. ':
' → logprob: -0.6985631585121155
    3. ':' → logprob: -5.448563098907471
    4. '               ' → logprob: -7.198563098907471
    5. ':return' → logprob: -8.948563575744629
    6. '):
' → logprob: -9.948563575744629
    7. '                  ' → logprob: -10.073563575744629
    8. '                       ' → logprob: -10.073563575744629
    9. ' and' → logprob: -11.323563575744629
    10. '                 ' → logprob: -11.448563575744629

Token 2207: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007027800311334431
    2. 'return' → logprob: -7.875702857971191
    3. ':
' → logprob: -9.375702857971191
    4. '               ' → logprob: -9.750702857971191
    5. ':return' → logprob: -9.750702857971191
    6. ' return' → logprob: -10.375702857971191
    7. '                  ' → logprob: -10.750702857971191
    8. '                       ' → logprob: -10.875702857971191
    9. '   ' → logprob: -11.375702857971191
    10. '```' → logprob: -12.000702857971191

Token 2208: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00023679454170633107
    2. '                   ' → logprob: -9.000236511230469
    3. 'None' → logprob: -9.250236511230469
    4. ' return' → logprob: -11.000236511230469
    5. '                       ' → logprob: -15.500236511230469
    6. '```' → logprob: -16.37523651123047
    7. '               ' → logprob: -16.50023651123047
    8. '   ' → logprob: -17.25023651123047
    9. '	return' → logprob: -17.37523651123047
    10. ':return' → logprob: -17.87523651123047

Token 2209: ' ..' (ID: 8548)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -9.567575034452602e-05
    2. 'None' → logprob: -9.75009536743164
    3. '                   ' → logprob: -10.25009536743164
    4. ' return' → logprob: -13.75009536743164
    5. '               ' → logprob: -14.50009536743164
    6. '#' → logprob: -15.12509536743164
    7. '                       ' → logprob: -17.87509536743164
    8. 'Return' → logprob: -18.12509536743164
    9. '           ' → logprob: -19.12509536743164
    10. '   ' → logprob: -19.62509536743164

Token 2210: ' from' (ID: 591)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3080246150493622
    2. ' return' → logprob: -1.9330246448516846
    3. ':
' → logprob: -3.1830246448516846
    4. '                   ' → logprob: -3.6830246448516846
    5. ':return' → logprob: -4.1830244064331055
    6. '               ' → logprob: -4.3080244064331055
    7. 'continue' → logprob: -4.4330244064331055
    8. '#' → logprob: -5.6830244064331055
    9. ':' → logprob: -5.9330244064331055
    10. ' continue' → logprob: -6.1830244064331055

Token 2211: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.010615038685500622
    2. 'None' → logprob: -5.26061487197876
    3. '#' → logprob: -6.13561487197876
    4. '[]' → logprob: -6.38561487197876
    5. 'stack' → logprob: -7.13561487197876
    6. ' root' → logprob: -7.63561487197876
    7. '[]
' → logprob: -10.510615348815918
    8. '0' → logprob: -10.510615348815918
    9. 'empty' → logprob: -10.635615348815918
    10. '_root' → logprob: -10.635615348815918

Token 2212: ' =>' (ID: 871)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01972907781600952
    2. 'return' → logprob: -5.144729137420654
    3. ' return' → logprob: -5.269729137420654
    4. ':
' → logprob: -5.269729137420654
    5. ':return' → logprob: -6.394729137420654
    6. '                       ' → logprob: -6.519729137420654
    7. ':' → logprob: -8.519728660583496
    8. '               ' → logprob: -10.519728660583496
    9. '                  ' → logprob: -11.019728660583496
    10. ' None' → logprob: -12.144728660583496

Token 2213: ' invalid' (ID: 15796)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.062188051640987396
    2. 'return' → logprob: -2.812188148498535
    3. ' None' → logprob: -8.562188148498535
    4. '                   ' → logprob: -11.437188148498535
    5. '               ' → logprob: -11.562188148498535
    6. ' return' → logprob: -11.687188148498535
    7. '           ' → logprob: -15.062188148498535
    8. 'null' → logprob: -17.06218719482422
    9. '```' → logprob: -17.18718719482422
    10. 'Return' → logprob: -17.31218719482422

Token 2214: ' path' (ID: 3104)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007427845615893602
    2. 'return' → logprob: -5.00742769241333
    3. ' return' → logprob: -7.88242769241333
    4. '               ' → logprob: -9.382428169250488
    5. '                       ' → logprob: -9.382428169250488
    6. 'None' → logprob: -9.382428169250488
    7. ':return' → logprob: -10.507428169250488
    8. ':
' → logprob: -11.007428169250488
    9. '                  ' → logprob: -11.382428169250488
    10. ' None' → logprob: -11.632428169250488

Token 2215: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001074015162885189
    2. 'return' → logprob: -7.501073837280273
    3. '                       ' → logprob: -8.126073837280273
    4. ':
' → logprob: -9.001073837280273
    5. '               ' → logprob: -10.251073837280273
    6. ' return' → logprob: -10.751073837280273
    7. ':return' → logprob: -10.876073837280273
    8. '                  ' → logprob: -11.376073837280273
    9. ':' → logprob: -12.376073837280273
    10. '				' → logprob: -13.126073837280273

Token 2216: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016141273081302643
    2. '                       ' → logprob: -6.626614093780518
    3. 'return' → logprob: -9.001614570617676
    4. '               ' → logprob: -9.501614570617676
    5. ':
' → logprob: -10.501614570617676
    6. 'continue' → logprob: -10.876614570617676
    7. ' return' → logprob: -11.876614570617676
    8. '                  ' → logprob: -11.876614570617676
    9. '   ' → logprob: -12.501614570617676
    10. '       ' → logprob: -12.626614570617676

Token 2217: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009591046255081892
    2. '                   ' → logprob: -7.0009589195251465
    3. ' return' → logprob: -10.125959396362305
    4. '                       ' → logprob: -12.500959396362305
    5. 'None' → logprob: -12.875959396362305
    6. '	return' → logprob: -14.875959396362305
    7. '```' → logprob: -15.375959396362305
    8. '               ' → logprob: -15.750959396362305
    9. ':return' → logprob: -16.250959396362305
    10. '                           ' → logprob: -16.375959396362305

Token 2218: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.842555426876061e-06
    2. ' None' → logprob: -12.250004768371582
    3. '=None' → logprob: -18.3750057220459
    4. '(None' → logprob: -18.7500057220459
    5. '_None' → logprob: -18.7500057220459
    6. '```' → logprob: -20.2500057220459
    7. 'No' → logprob: -21.0000057220459
    8. ',None' → logprob: -21.0000057220459
    9. '`' → logprob: -21.5000057220459
    10. 'none' → logprob: -21.5000057220459

Token 2219: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31345418095588684
    2. '           ' → logprob: -1.3134541511535645
    3. 'else' → logprob: -9.188454627990723
    4. '                   ' → logprob: -10.438454627990723
    5. '                
' → logprob: -10.938454627990723
    6. 'elif' → logprob: -11.688454627990723
    7. '			' → logprob: -12.063454627990723
    8. '            
' → logprob: -12.188454627990723
    9. '		' → logprob: -12.438454627990723
    10. '
' → logprob: -12.438454627990723

Token 2220: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000844172143843025
    2. '           ' → logprob: -7.2508440017700195
    3. '                
' → logprob: -9.50084400177002
    4. '                   ' → logprob: -10.62584400177002
    5. 'else' → logprob: -11.50084400177002
    6. '
' → logprob: -11.50084400177002
    7. '```' → logprob: -12.87584400177002
    8. '            
' → logprob: -13.25084400177002
    9. '                    
' → logprob: -13.50084400177002
    10. '			' → logprob: -13.50084400177002

Token 2221: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.4457772374153137
    2. '           ' → logprob: -1.195777177810669
    3. '               ' → logprob: -2.945777177810669
    4. 'else' → logprob: -5.570777416229248
    5. ' stack' → logprob: -7.445777416229248
    6. ' else' → logprob: -9.82077693939209
    7. 'pop' → logprob: -10.07077693939209
    8. '(stack' → logprob: -10.44577693939209
    9. '```' → logprob: -10.57077693939209
    10. '.stack' → logprob: -10.69577693939209

Token 2222: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -4.8232690460281447e-05
    2. 'pop' → logprob: -10.000048637390137
    3. '.' → logprob: -12.875048637390137
    4. ' pop' → logprob: -16.50004768371582
    5. '_pop' → logprob: -16.50004768371582
    6. '	pop' → logprob: -16.50004768371582
    7. 'Pop' → logprob: -17.50004768371582
    8. '.Pop' → logprob: -18.25004768371582
    9. '=' → logprob: -18.62504768371582
    10. '(pop' → logprob: -19.00004768371582

Token 2223: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010213785571977496
    2. 'else' → logprob: -7.501021385192871
    3. 'elif' → logprob: -8.376021385192871
    4. ' else' → logprob: -8.876021385192871
    5. '
' → logprob: -10.501021385192871
    6. '               ' → logprob: -11.001021385192871
    7. ' elif' → logprob: -11.501021385192871
    8. '            
' → logprob: -11.626021385192871
    9. '<|end|>' → logprob: -11.626021385192871
    10. '		' → logprob: -11.751021385192871

Token 2224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002632430987432599
    2. 'elif' → logprob: -8.500263214111328
    3. '               ' → logprob: -10.750263214111328
    4. ' elif' → logprob: -11.125263214111328
    5. 'else' → logprob: -11.375263214111328
    6. '            
' → logprob: -12.250263214111328
    7. '		' → logprob: -12.875263214111328
    8. ' else' → logprob: -13.000263214111328
    9. '```' → logprob: -14.125263214111328
    10. '          ' → logprob: -14.750263214111328

Token 2225: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4203933775424957
    2. 'elif' → logprob: -1.6703933477401733
    3. 'else' (adapté à ' else') → logprob: -1.9203933477401733
    4. ' elif' → logprob: -5.295393466949463
    5. ' else' → logprob: -5.670393466949463
    6. '       ' → logprob: -11.795392990112305
    7. '		' → logprob: -11.920392990112305
    8. '          ' → logprob: -12.920392990112305
    9. 'el' → logprob: -13.170392990112305
    10. '               ' → logprob: -13.420392990112305

Token 2226: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006552186328917742
    2. '           ' → logprob: -5.131552219390869
    3. ':' → logprob: -8.006551742553711
    4. ':
' → logprob: -9.381551742553711
    5. '                   ' → logprob: -9.881551742553711
    6. '	       ' → logprob: -10.631551742553711
    7. '	           ' → logprob: -10.631551742553711
    8. '<|end|>' → logprob: -11.131551742553711
    9. '                       ' → logprob: -11.256551742553711
    10. '[' → logprob: -11.256551742553711

Token 2227: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08407741039991379
    2. '           ' → logprob: -3.0840773582458496
    3. ' if' → logprob: -3.9590773582458496
    4. 'stack' → logprob: -4.70907735824585
    5. ' stack' → logprob: -5.70907735824585
    6. 'if' → logprob: -5.83407735824585
    7. '                   ' → logprob: -8.084077835083008
    8. '```' → logprob: -9.334077835083008
    9. '                       ' → logprob: -10.334077835083008
    10. '            ' → logprob: -10.584077835083008

Token 2228: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45677468180656433
    2. 'stack' → logprob: -1.0817747116088867
    3. '               ' → logprob: -4.081774711608887
    4. '           ' → logprob: -5.831774711608887
    5. '#' (adapté à ' #') → logprob: -5.956774711608887
    6. ' if' → logprob: -6.206774711608887
    7. 'curr' → logprob: -6.206774711608887
    8. 'dir' → logprob: -7.956774711608887
    9. 'current' → logprob: -9.081774711608887
    10. ' stack' → logprob: -9.081774711608887

Token 2229: ' '.'' (ID: 64762)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019465118646621704
    2. 'stack' → logprob: -4.14446496963501
    3. '               ' → logprob: -6.26946496963501
    4. '#' → logprob: -7.64446496963501
    5. ' if' → logprob: -7.64446496963501
    6. '           ' → logprob: -7.64446496963501
    7. 'If' → logprob: -11.394465446472168
    8. '   ' → logprob: -11.644465446472168
    9. '       ' → logprob: -11.644465446472168
    10. 'result' → logprob: -11.894465446472168

Token 2230: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23491883277893066
    2. 'stack' → logprob: -2.1099188327789307
    3. '           ' → logprob: -2.6099188327789307
    4. '.append' → logprob: -5.234918594360352
    5. ' stack' → logprob: -6.234918594360352
    6. '.stack' → logprob: -6.984918594360352
    7. ')' → logprob: -7.359918594360352
    8. '                ' → logprob: -7.359918594360352
    9. '_stack' → logprob: -7.484918594360352
    10. '                
' → logprob: -7.484918594360352

Token 2231: ' normal' (ID: 6078)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.7971317768096924
    2. 'd' → logprob: -0.9221317768096924
    3. 'not' → logprob: -2.9221317768096924
    4. '.' → logprob: -2.9221317768096924
    5. 'treated' → logprob: -4.422131538391113
    6. 'a' → logprob: -4.547131538391113
    7. 'normal' → logprob: -4.797131538391113
    8. 'stack' → logprob: -5.297131538391113
    9. '.'.' → logprob: -7.422131538391113
    10. 'directory' → logprob: -7.547131538391113

Token 2232: ' directory' (ID: 12552)
  Prédit: 'directory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'directory' → logprob: -0.08485469222068787
    2. '               ' → logprob: -3.3348546028137207
    3. 'segment' → logprob: -3.9598546028137207
    4. ' directory' → logprob: -3.9598546028137207
    5. 'dirname' → logprob: -5.834854602813721
    6. 'd' → logprob: -6.834854602813721
    7. 'dir' → logprob: -6.959854602813721
    8. ' segment' → logprob: -7.334854602813721
    9. '                   ' → logprob: -7.834854602813721
    10. '           ' → logprob: -8.084855079650879

Token 2233: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.35138317942619324
    2. ' name' → logprob: -1.3513832092285156
    3. '               ' → logprob: -3.6013832092285156
    4. '           ' → logprob: -5.226383209228516
    5. '                
' → logprob: -6.351383209228516
    6. '_name' → logprob: -7.601383209228516
    7. '```' → logprob: -7.851383209228516
    8. '            
' → logprob: -8.101383209228516
    9. 'segment' → logprob: -8.351383209228516
    10. '                   ' → logprob: -8.351383209228516

Token 2234: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009980954229831696
    2. '           ' → logprob: -4.759981155395508
    3. ',' → logprob: -7.634981155395508
    4. 'stack' → logprob: -7.759981155395508
    5. ' stack' → logprob: -9.009981155395508
    6. '                   ' → logprob: -9.509981155395508
    7. '(stack' → logprob: -9.759981155395508
    8. ' and' → logprob: -10.134981155395508
    9. '                ' → logprob: -10.259981155395508
    10. '                
' → logprob: -10.384981155395508

Token 2235: ' must' (ID: 2804)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0027520956937223673
    2. '               ' → logprob: -7.377752304077148
    3. 'should' → logprob: -7.377752304077148
    4. 'added' → logprob: -7.752752304077148
    5. 'not' → logprob: -8.252752304077148
    6. 'treated' → logprob: -8.877752304077148
    7. 'can' → logprob: -9.252752304077148
    8. ' stack' → logprob: -9.252752304077148
    9. 'allowed' → logprob: -9.627752304077148
    10. 'must' → logprob: -9.627752304077148

Token 2236: ' exist' (ID: 4310)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.13428696990013123
    2. 'be' → logprob: -2.259286880493164
    3. 'not' → logprob: -3.884286880493164
    4. 'always' → logprob: -8.509286880493164
    5. ' be' → logprob: -9.009286880493164
    6. ' stack' → logprob: -9.384286880493164
    7. 'append' → logprob: -9.509286880493164
    8. 'continue' → logprob: -9.884286880493164
    9. 'exist' → logprob: -10.259286880493164
    10. '           ' → logprob: -10.259286880493164

Token 2237: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17995433509349823
    2. '           ' → logprob: -1.8049542903900146
    3. 'if' → logprob: -9.554954528808594
    4. ' if' → logprob: -10.304954528808594
    5. '            ' → logprob: -10.804954528808594
    6. '              ' → logprob: -10.804954528808594
    7. ',' → logprob: -11.304954528808594
    8. '<|end|>' → logprob: -11.679954528808594
    9. '          ' → logprob: -11.804954528808594
    10. '                ' → logprob: -11.804954528808594

Token 2238: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06201361492276192
    2. '           ' → logprob: -2.812013626098633
    3. '            
' → logprob: -12.062013626098633
    4. '            ' → logprob: -12.187013626098633
    5. '              ' → logprob: -12.312013626098633
    6. '       ' → logprob: -12.437013626098633
    7. ' if' → logprob: -12.562013626098633
    8. '                
' → logprob: -12.687013626098633
    9. '<|end|>' → logprob: -12.812013626098633
    10. '                ' → logprob: -12.937013626098633

Token 2239: ' stack' (ID: 10825)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0014840320218354464
    2. '               ' → logprob: -6.626483917236328
    3. 'stack' (adapté à ' stack') → logprob: -10.001483917236328
    4. '           ' → logprob: -10.251483917236328
    5. '#' → logprob: -10.376483917236328
    6. ' if' → logprob: -10.876483917236328
    7. 'curr' → logprob: -11.251483917236328
    8. 'current' → logprob: -12.126483917236328
    9. 'dir' → logprob: -13.751483917236328
    10. 'cur' → logprob: -14.501483917236328

Token 2240: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.688212614681106e-05
    2. 'append' → logprob: -11.125017166137695
    3. '.' → logprob: -13.250017166137695
    4. '_append' → logprob: -15.750017166137695
    5. 'Append' → logprob: -16.750017166137695
    6. '.push' → logprob: -16.750017166137695
    7. '           ' → logprob: -17.125017166137695
    8. '               ' → logprob: -17.250017166137695
    9. 'stack' → logprob: -18.375017166137695
    10. '.app' → logprob: -18.875017166137695

Token 2241: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.001502598519437015
    2. 'd' → logprob: -6.501502513885498
    3. '(' → logprob: -16.376502990722656
    4. '           ' → logprob: -16.876502990722656
    5. '               ' → logprob: -17.001502990722656
    6. ' d' → logprob: -17.126502990722656
    7. '                   ' → logprob: -17.751502990722656
    8. '[d' → logprob: -18.626502990722656
    9. '	d' → logprob: -18.751502990722656
    10. '(
' → logprob: -19.126502990722656

Token 2242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7023593187332153
    2. ')
' → logprob: -0.7023593187332153
    3. '           ' → logprob: -4.702359199523926
    4. '               ' → logprob: -9.577359199523926
    5. ')
' → logprob: -11.202359199523926
    6. ')`
' → logprob: -12.702359199523926
    7. '       ' → logprob: -13.077359199523926
    8. ')

' → logprob: -13.202359199523926
    9. ' )
' → logprob: -14.202359199523926
    10. ')`' → logprob: -14.327359199523926

Token 2243: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001023758901283145
    2. '
' → logprob: -7.126023769378662
    3. '       ' → logprob: -9.251023292541504
    4. '               ' → logprob: -10.376023292541504
    5. 'if' → logprob: -10.501023292541504
    6. '            
' → logprob: -11.126023292541504
    7. '	       ' → logprob: -11.251023292541504
    8. '```' → logprob: -11.376023292541504
    9. '		' → logprob: -11.626023292541504
    10. ' if' → logprob: -12.501023292541504

Token 2244: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7047572135925293
    2. 'for' → logprob: -0.7047572135925293
    3. 'curr' → logprob: -4.704757213592529
    4. ' for' → logprob: -6.454757213592529
    5. 'current' → logprob: -7.329757213592529
    6. 'if' → logprob: -9.329757690429688
    7. '   ' → logprob: -10.079757690429688
    8. '```' → logprob: -10.204757690429688
    9. ' curr' → logprob: -10.454757690429688
    10. 'For' → logprob: -11.329757690429688

Token 2245: ' verify' (ID: 14866)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00976387970149517
    2. 'curr' → logprob: -5.009763717651367
    3. '#' → logprob: -6.759763717651367
    4. '       ' → logprob: -6.884763717651367
    5. 'if' → logprob: -7.634763717651367
    6. 'current' → logprob: -8.009763717651367
    7. 'For' → logprob: -10.759763717651367
    8. ' for' → logprob: -11.509763717651367
    9. 'cur' → logprob: -12.759763717651367
    10. 'return' → logprob: -13.009763717651367

Token 2246: ' existence' (ID: 24140)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03328082337975502
    2. 'curr' → logprob: -4.158280849456787
    3. '       ' → logprob: -4.408280849456787
    4. ' for' → logprob: -6.033280849456787
    5. 'current' → logprob: -6.783280849456787
    6. 'if' → logprob: -6.783280849456787
    7. ' curr' → logprob: -9.033280372619629
    8. 'prev' → logprob: -9.283280372619629
    9. '``' → logprob: -11.533280372619629
    10. 'cur' → logprob: -11.658280372619629

Token 2247: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003132976416964084
    2. 'for' → logprob: -8.250313758850098
    3. ' for' → logprob: -10.000313758850098
    4. 'current' → logprob: -13.250313758850098
    5. ',' → logprob: -13.375313758850098
    6. '   ' → logprob: -13.875313758850098
    7. '           ' → logprob: -14.750313758850098
    8. '        
' → logprob: -14.875313758850098
    9. 'prev' → logprob: -15.375313758850098
    10. '```' → logprob: -15.375313758850098

Token 2248: ' fs' (ID: 16105)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1381130963563919
    2. 'stack' → logprob: -2.138113021850586
    3. 'the' → logprob: -5.513113021850586
    4. 'for' → logprob: -5.638113021850586
    5. '       ' → logprob: -5.888113021850586
    6. '   ' → logprob: -9.138113021850586
    7. 'curr' → logprob: -9.138113021850586
    8. 'current' → logprob: -9.263113021850586
    9. ' self' → logprob: -9.888113021850586
    10. ' stack' → logprob: -10.138113021850586

Token 2249: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.0590548703912646e-05
    2. 'for' → logprob: -11.250030517578125
    3. 'if' → logprob: -11.375030517578125
    4. '
' → logprob: -12.875030517578125
    5. '        
' → logprob: -13.875030517578125
    6. '```' → logprob: -13.875030517578125
    7. ' for' → logprob: -14.250030517578125
    8. ' if' → logprob: -15.125030517578125
    9. '   ' → logprob: -15.250030517578125
    10. '#' → logprob: -16.125030517578125

Token 2250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.380904672667384e-05
    2. 'for' → logprob: -10.625033378601074
    3. '
' → logprob: -12.625033378601074
    4. ' for' → logprob: -13.125033378601074
    5. '   ' → logprob: -13.875033378601074
    6. '        
' → logprob: -14.000033378601074
    7. '```' → logprob: -14.375033378601074
    8. ',' → logprob: -14.500033378601074
    9. 'current' → logprob: -15.000033378601074
    10. '           ' → logprob: -15.125033378601074

Token 2251: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04625816270709038
    2. '       ' → logprob: -3.2962582111358643
    3. 'for' → logprob: -5.046257972717285
    4. 'current' → logprob: -6.796257972717285
    5. 'curr' → logprob: -7.421257972717285
    6. '```' → logprob: -10.796257972717285
    7. ' if' → logprob: -11.796257972717285
    8. '   ' → logprob: -13.171257972717285
    9. 'cur' → logprob: -14.046257972717285
    10. '``' → logprob: -14.546257972717285

Token 2252: ' self' (ID: 1051)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0007685328018851578
    2. ' not' → logprob: -7.250768661499023
    3. '   ' → logprob: -10.375768661499023
    4. 'self' → logprob: -10.875768661499023
    5. '       ' → logprob: -12.125768661499023
    6. 'len' → logprob: -13.500768661499023
    7. '
' → logprob: -14.375768661499023
    8. '           ' → logprob: -14.500768661499023
    9. '(not' → logprob: -15.250768661499023
    10. 'all' → logprob: -15.375768661499023

Token 2253: '.fs' (ID: 82179)
  Prédit: '.fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fs' → logprob: -0.7532476186752319
    2. '.file' → logprob: -1.128247618675232
    3. '.directory' → logprob: -1.628247618675232
    4. 'directory' → logprob: -5.1282477378845215
    5. 'fs' → logprob: -6.5032477378845215
    6. 'file' → logprob: -6.8782477378845215
    7. '   ' → logprob: -8.753247261047363
    8. 'filesystem' → logprob: -9.378247261047363
    9. '.' → logprob: -9.503247261047363
    10. '_fs' → logprob: -9.503247261047363

Token 2254: '.directory' (ID: 131587)
  Prédit: '.directory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.directory' → logprob: -0.039049264043569565
    2. 'directory' → logprob: -3.2890491485595703
    3. '.exists' → logprob: -8.66404914855957
    4. '
' → logprob: -8.78904914855957
    5. '   ' → logprob: -9.16404914855957
    6. '.has' → logprob: -9.28904914855957
    7. '.file' → logprob: -9.66404914855957
    8. '       ' → logprob: -10.03904914855957
    9. 'for' → logprob: -10.16404914855957
    10. ':' → logprob: -10.28904914855957

Token 2255: '_exists' (ID: 23519)
  Prédit: '_exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exists' → logprob: -7.3458322731312364e-06
    2. 'exists' → logprob: -11.875007629394531
    3. '.exists' → logprob: -15.500007629394531
    4. '_EXISTS' → logprob: -16.12500762939453
    5. '_contains' → logprob: -17.37500762939453
    6. '   ' → logprob: -17.37500762939453
    7. 'Exists' → logprob: -17.75000762939453
    8. 's' → logprob: -17.75000762939453
    9. '_exist' → logprob: -17.87500762939453
    10. '_has' → logprob: -18.25000762939453

Token 2256: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -3.8889261304575484e-06
    2. ' (' → logprob: -13.500003814697266
    3. '(st' → logprob: -13.750003814697266
    4. 'stack' → logprob: -14.125003814697266
    5. '(tuple' → logprob: -15.500003814697266
    6. '       ' → logprob: -15.875003814697266
    7. '(' → logprob: -16.125003814697266
    8. '(list' → logprob: -17.250003814697266
    9. '(
' → logprob: -17.375003814697266
    10. '(Stack' → logprob: -17.500003814697266

Token 2257: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22231724858283997
    2. '):' → logprob: -1.7223172187805176
    3. ')' → logprob: -4.097317218780518
    4. '       ' → logprob: -5.722317218780518
    5. ')==' → logprob: -7.347317218780518
    6. '           ' → logprob: -10.222317695617676
    7. '):
' → logprob: -10.222317695617676
    8. ' ):
' → logprob: -10.597317695617676
    9. ' ):' → logprob: -11.347317695617676
    10. '          ' → logprob: -12.222317695617676

Token 2258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004148561041802168
    2. '==' → logprob: -5.754148483276367
    3. ' ==' → logprob: -7.504148483276367
    4. '=False' → logprob: -9.379148483276367
    5. ':' → logprob: -9.629148483276367
    6. ':
' → logprob: -9.629148483276367
    7. ' is' → logprob: -9.754148483276367
    8. 'False' → logprob: -10.504148483276367
    9. '=True' → logprob: -11.004148483276367
    10. '       ' → logprob: -11.129148483276367

Token 2259: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00861669983714819
    2. 'return' (adapté à ' return') → logprob: -4.758616924285889
    3. ' return' → logprob: -13.75861644744873
    4. '               ' → logprob: -14.13361644744873
    5. '       ' → logprob: -15.50861644744873
    6. '   ' → logprob: -16.258617401123047
    7. '		' → logprob: -17.008617401123047
    8. '          ' → logprob: -18.008617401123047
    9. '```' → logprob: -18.133617401123047
    10. '        ' → logprob: -18.258617401123047

Token 2260: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0007099286303855479
    2. ' stack' → logprob: -7.2507100105285645
    3. '	stack' → logprob: -18.875709533691406
    4. '(stack' → logprob: -19.625709533691406
    5. '       ' → logprob: -20.000709533691406
    6. '   ' → logprob: -20.750709533691406
    7. '           ' → logprob: -21.750709533691406
    8. 'list' → logprob: -22.000709533691406
    9. 'Stack' → logprob: -22.750709533691406
    10. '_stack' → logprob: -22.875709533691406

Token 2261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05422508716583252
    2. ' else' → logprob: -3.429224967956543
    3. 'else' → logprob: -3.929224967956543
    4. '           ' → logprob: -8.554224967956543
    5. '
' → logprob: -9.054224967956543
    6. '        
' → logprob: -9.179224967956543
    7. '<|end|>' → logprob: -9.304224967956543
    8. '	else' → logprob: -10.054224967956543
    9. '	' → logprob: -10.429224967956543
    10. '```' → logprob: -10.554224967956543

Token 2262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.088138227118179e-05
    2. '
' → logprob: -10.250070571899414
    3. 'return' → logprob: -11.250070571899414
    4. 'else' → logprob: -11.875070571899414
    5. '<|end|>' → logprob: -12.125070571899414
    6. '           ' → logprob: -12.625070571899414
    7. '        
' → logprob: -12.875070571899414
    8. '```' → logprob: -13.750070571899414
    9. '	' → logprob: -14.000070571899414
    10. '   ' → logprob: -15.000070571899414

Token 2263: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015559245366603136
    2. 'else' (adapté à ' else') → logprob: -6.626555919647217
    3. '
' → logprob: -8.626556396484375
    4. ' else' → logprob: -10.626556396484375
    5. 'return' → logprob: -11.126556396484375
    6. '           ' → logprob: -11.876556396484375
    7. '	' → logprob: -13.376556396484375
    8. '   ' → logprob: -13.876556396484375
    9. '               ' → logprob: -14.126556396484375
    10. '        
' → logprob: -14.376556396484375

Token 2264: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07162568718194962
    2. ':
' → logprob: -2.9466257095336914
    3. '               ' → logprob: -4.196625709533691
    4. ':' → logprob: -6.571625709533691
    5. ':return' → logprob: -9.446625709533691
    6. 'return' → logprob: -10.446625709533691
    7. ' None' → logprob: -11.446625709533691
    8. ' return' → logprob: -11.571625709533691
    9. 'None' → logprob: -12.196625709533691
    10. '       ' → logprob: -12.321625709533691

Token 2265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.6789137084269896e-05
    2. 'return' → logprob: -10.37503719329834
    3. '               ' → logprob: -12.25003719329834
    4. ' return' → logprob: -15.37503719329834
    5. '       ' → logprob: -15.62503719329834
    6. '		' → logprob: -16.125036239624023
    7. '```' → logprob: -16.375036239624023
    8. '          ' → logprob: -16.500036239624023
    9. '   ' → logprob: -18.625036239624023
    10. '                       ' → logprob: -18.625036239624023

Token 2266: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018648630008101463
    2. '           ' → logprob: -4.018648624420166
    3. ' return' → logprob: -7.768648624420166
    4. '               ' → logprob: -9.518649101257324
    5. '   ' → logprob: -14.018649101257324
    6. '	return' → logprob: -14.518649101257324
    7. '       ' → logprob: -15.143649101257324
    8. 'None' → logprob: -15.268649101257324
    9. '```' → logprob: -15.768649101257324
    10. ' ' → logprob: -16.518648147583008

Token 2267: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.88418151892256e-05
    2. ' None' → logprob: -9.750059127807617
    3. 'False' → logprob: -15.000059127807617
    4. '   ' → logprob: -16.625059127807617
    5. '           ' → logprob: -17.375059127807617
    6. '[]' → logprob: -18.375059127807617
    7. '       ' → logprob: -19.125059127807617
    8. '               ' → logprob: -19.250059127807617
    9. '(None' → logprob: -19.625059127807617
    10. '_None' → logprob: -20.125059127807617

Token 2268: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2269: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2270: ' Web' (ID: 4899)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.23073172569274902
    2. 'Solution' → logprob: -3.230731725692749
    3. 'URL' → logprob: -3.855731725692749
    4. 'Url' → logprob: -3.980731725692749
    5. 'Normalizer' → logprob: -4.355731964111328
    6. 'Input' → logprob: -4.355731964111328
    7. 'Web' → logprob: -4.480731964111328
    8. 'File' → logprob: -4.480731964111328
    9. 'Query' → logprob: -4.730731964111328
    10. 'Resolver' → logprob: -4.730731964111328

Token 2271: 'Page' (ID: 3325)
  Prédit: 'Page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Page' → logprob: -0.07243897765874863
    2. 'Path' → logprob: -2.822438955307007
    3. 'App' → logprob: -5.947439193725586
    4. 'page' → logprob: -6.322439193725586
    5. 'Server' → logprob: -6.947439193725586
    6. 'Handler' → logprob: -7.322439193725586
    7. 'Site' → logprob: -7.322439193725586
    8. 'Link' → logprob: -7.572439193725586
    9. 'site' → logprob: -7.697439193725586
    10. 'Router' → logprob: -7.822439193725586

Token 2272: 'Registry' (ID: 17911)
  Prédit: 'Normalizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Normalizer' → logprob: -0.834023654460907
    2. 'Path' → logprob: -1.4590237140655518
    3. 'Reference' → logprob: -2.7090237140655518
    4. ':' → logprob: -2.8340237140655518
    5. 'Resolver' → logprob: -3.0840237140655518
    6. 'Redirect' → logprob: -3.4590237140655518
    7. 'Link' → logprob: -3.5840237140655518
    8. 'Url' → logprob: -3.7090237140655518
    9. 'Request' → logprob: -3.8340237140655518
    10. 'URL' → logprob: -4.334023475646973

Token 2273: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017287296941503882
    2. ':
' → logprob: -6.376728534698486
    3. '```' → logprob: -11.251729011535645
    4. '<|end|>' → logprob: -12.626729011535645
    5. '):' → logprob: -13.001729011535645
    6. '(' → logprob: -13.251729011535645
    7. '(object' → logprob: -13.751729011535645
    8. '   ' → logprob: -13.751729011535645
    9. '():' → logprob: -13.876729011535645
    10. ':def' → logprob: -14.251729011535645

Token 2274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04305148497223854
    2. 'class' → logprob: -3.1680514812469482
    3. '```' → logprob: -10.918051719665527
    4. ':' → logprob: -11.543051719665527
    5. 'def' → logprob: -11.793051719665527
    6. '):
' → logprob: -12.418051719665527
    7. '(' → logprob: -12.543051719665527
    8. ':
' → logprob: -13.418051719665527
    9. '<|end|>' → logprob: -13.543051719665527
    10. '
' → logprob: -13.543051719665527

Token 2275: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026602741330862045
    2. 'class' → logprob: -3.9016027450561523
    3. 'def' → logprob: -5.151602745056152
    4. '```' → logprob: -9.401602745056152
    5. '__' → logprob: -9.526602745056152
    6. ' def' → logprob: -10.526602745056152
    7. '(' → logprob: -11.151602745056152
    8. '    ' → logprob: -11.776602745056152
    9. '    
' → logprob: -11.776602745056152
    10. '	def' → logprob: -12.151602745056152

Token 2276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004496346693485975
    2. '"""
' → logprob: -6.1294965744018555
    3. '
' → logprob: -6.6294965744018555
    4. 'class' → logprob: -7.5044965744018555
    5. '```' → logprob: -8.379496574401855
    6. '  ' → logprob: -9.754496574401855
    7. '       ' → logprob: -10.379496574401855
    8. '    ' → logprob: -10.504496574401855
    9. '    
' → logprob: -10.754496574401855
    10. '``' → logprob: -11.129496574401855

Token 2277: ' Man' (ID: 3265)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07500433176755905
    2. '   ' → logprob: -2.8250043392181396
    3. '"""
' → logprob: -5.0750041007995605
    4. 'def' → logprob: -5.0750041007995605
    5. '__' → logprob: -7.9500041007995605
    6. '
' → logprob: -10.325004577636719
    7. '```' → logprob: -10.325004577636719
    8. '"""' → logprob: -11.700004577636719
    9. 'from' → logprob: -12.575004577636719
    10. '``' → logprob: -12.825004577636719

Token 2278: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.006709686014801264
    2. 'class' → logprob: -5.631709575653076
    3. 'aged' → logprob: -6.131709575653076
    4. 'ual' → logprob: -8.256710052490234
    5. 'ager' → logprob: -8.756710052490234
    6. 't' → logprob: -9.131710052490234
    7. 'agers' → logprob: -9.256710052490234
    8. 'age' → logprob: -9.381710052490234
    9. 'ains' → logprob: -10.256710052490234
    10. '   ' → logprob: -10.256710052490234

Token 2279: ' all' (ID: 722)
  Prédit: 'registered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'registered' → logprob: -0.805335521697998
    2. 'class' → logprob: -1.430335521697998
    3. '   ' → logprob: -2.305335521697998
    4. 'the' → logprob: -3.055335521697998
    5. '
' → logprob: -3.305335521697998
    6. 'known' → logprob: -3.555335521697998
    7. 'web' → logprob: -3.805335521697998
    8. '"""
' → logprob: -4.555335521697998
    9. 'valid' → logprob: -4.680335521697998
    10. 'pages' → logprob: -5.055335521697998

Token 2280: ' known' (ID: 5542)
  Prédit: 'registered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'registered' → logprob: -1.1608566045761108
    2. 'known' → logprob: -1.9108566045761108
    3. '   ' → logprob: -2.2858567237854004
    4. 'pages' → logprob: -2.5358567237854004
    5. 'valid' → logprob: -2.6608567237854004
    6. 'normalized' → logprob: -2.7858567237854004
    7. 'web' → logprob: -3.0358567237854004
    8. '"""
' → logprob: -3.4108567237854004
    9. 'paths' → logprob: -3.5358567237854004
    10. 'def' → logprob: -3.9108567237854004

Token 2281: ' web' (ID: 1880)
  Prédit: 'pages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pages' → logprob: -1.3841254711151123
    2. '   ' → logprob: -2.0091254711151123
    3. 'paths' → logprob: -2.1341254711151123
    4. 'registered' → logprob: -2.5091254711151123
    5. 'known' → logprob: -2.5091254711151123
    6. 'class' → logprob: -2.8841254711151123
    7. 'valid' → logprob: -3.0091254711151123
    8. 'web' → logprob: -3.0091254711151123
    9. ' known' → logprob: -3.8841254711151123
    10. ' pages' → logprob: -3.8841254711151123

Token 2282: ' pages' (ID: 8537)
  Prédit: 'pages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pages' → logprob: -0.07973948121070862
    2. 'page' → logprob: -2.704739570617676
    3. ' pages' → logprob: -5.454739570617676
    4. '_pages' → logprob: -6.204739570617676
    5. '_page' → logprob: -7.079739570617676
    6. 'Page' → logprob: -7.079739570617676
    7. 'sites' → logprob: -7.329739570617676
    8. 'paths' → logprob: -7.454739570617676
    9. '   ' → logprob: -8.704739570617676
    10. 'site' → logprob: -9.204739570617676

Token 2283: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14284154772758484
    2. ':
' → logprob: -2.5178415775299072
    3. ':' → logprob: -3.2678415775299072
    4. ' and' → logprob: -6.142841339111328
    5. '```' → logprob: -6.142841339111328
    6. '
' → logprob: -6.267841339111328
    7. 'and' → logprob: -6.517841339111328
    8. 'class' → logprob: -6.517841339111328
    9. 'from' → logprob: -6.767841339111328
    10. '(' → logprob: -7.392841339111328

Token 2284: ' allows' (ID: 7927)
  Prédit: 'their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'their' → logprob: -0.8801850080490112
    2. 'provid' → logprob: -1.5051850080490112
    3. 'supports' → logprob: -2.380185127258301
    4. ' their' → logprob: -2.630185127258301
    5. 'per' → logprob: -2.755185127258301
    6. 'res' → logprob: -3.880185127258301
    7. ' provides' → logprob: -4.130185127258301
    8. 'def' → logprob: -4.130185127258301
    9. 'normal' → logprob: -4.255185127258301
    10. 'handles' → logprob: -4.630185127258301

Token 2285: ' matching' (ID: 20238)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.4094906747341156
    2. 'lookup' → logprob: -2.1594905853271484
    3. 'path' → logprob: -2.7844905853271484
    4. ' normalization' → logprob: -3.0344905853271484
    5. 'checking' → logprob: -3.2844905853271484
    6. 'normalized' → logprob: -4.034490585327148
    7. 'canonical' → logprob: -4.409490585327148
    8. ' normal' → logprob: -4.534490585327148
    9. 'resolution' → logprob: -4.534490585327148
    10. ' lookup' → logprob: -5.034490585327148

Token 2286: ' normalized' (ID: 59625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6454513669013977
    2. '(
' → logprob: -1.645451307296753
    3. 'def' → logprob: -1.770451307296753
    4. 'paths' → logprob: -3.645451307296753
    5. '_path' → logprob: -3.770451307296753
    6. 'path' → logprob: -4.270451545715332
    7. ' def' → logprob: -5.270451545715332
    8. ' paths' → logprob: -5.395451545715332
    9. ' to' → logprob: -5.395451545715332
    10. '{
' → logprob: -5.520451545715332

Token 2287: ' paths' (ID: 23373)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.3118053376674652
    2. 'path' → logprob: -1.4368053674697876
    3. ' paths' → logprob: -4.436805248260498
    4. '_path' → logprob: -4.686805248260498
    5. 'normalized' → logprob: -6.061805248260498
    6. '_paths' → logprob: -6.061805248260498
    7. ' path' → logprob: -7.061805248260498
    8. 'pathname' → logprob: -7.436805248260498
    9. 'requested' → logprob: -7.686805248260498
    10. 'and' → logprob: -7.936805248260498

Token 2288: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9236035943031311
    2. ':' → logprob: -1.0486035346984863
    3. ':
' → logprob: -1.4236035346984863
    4. 'class' → logprob: -5.548603534698486
    5. '.' → logprob: -6.423603534698486
    6. '(
' → logprob: -6.798603534698486
    7. '(' → logprob: -6.923603534698486
    8. 'def' → logprob: -7.173603534698486
    9. '```' → logprob: -7.548603534698486
    10. ',' → logprob: -8.173604011535645

Token 2289: ' pages' (ID: 8537)
  Prédit: 'their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'their' → logprob: -0.7972012162208557
    2. 'page' → logprob: -1.797201156616211
    3. 'registered' → logprob: -2.422201156616211
    4. 'web' → logprob: -2.922201156616211
    5. ' their' → logprob: -2.922201156616211
    6. 'original' → logprob: -3.172201156616211
    7. 'canonical' → logprob: -3.172201156616211
    8. 'pages' → logprob: -3.547201156616211
    9. 'the' → logprob: -4.172201156616211
    10. 'known' → logprob: -4.297201156616211

Token 2290: '.
' (ID: 558)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4108760952949524
    2. '   ' → logprob: -1.1608760356903076
    3. ':' → logprob: -4.535876274108887
    4. '.
' → logprob: -5.035876274108887
    5. 'class' → logprob: -6.285876274108887
    6. '
' → logprob: -6.660876274108887
    7. 'and' → logprob: -7.410876274108887
    8. '.' → logprob: -7.410876274108887
    9. '):
' → logprob: -7.410876274108887
    10. '```' → logprob: -7.660876274108887

Token 2291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028514713048934937
    2. '```' → logprob: -6.252851486206055
    3. 'class' → logprob: -8.002851486206055
    4. '
' → logprob: -8.377851486206055
    5. '_' → logprob: -9.127851486206055
    6. '    ' → logprob: -9.502851486206055
    7. ')' → logprob: -10.252851486206055
    8. '#' → logprob: -10.627851486206055
    9. '    
' → logprob: -10.877851486206055
    10. '``' → logprob: -11.377851486206055

Token 2292: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1470210701227188
    2. 'class' → logprob: -2.0220210552215576
    3. '```' → logprob: -5.647021293640137
    4. '
' → logprob: -7.272021293640137
    5. ' class' → logprob: -10.147021293640137
    6. '    
' → logprob: -10.522021293640137
    7. '``' → logprob: -11.522021293640137
    8. ')' → logprob: -11.897021293640137
    9. 'from' → logprob: -12.147021293640137
    10. '    ' → logprob: -12.272021293640137

Token 2293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08073536306619644
    2. 'class' → logprob: -2.580735445022583
    3. '```' → logprob: -6.330735206604004
    4. ' class' → logprob: -10.455735206604004
    5. '
' → logprob: -11.705735206604004
    6. 'def' → logprob: -11.830735206604004
    7. '__' → logprob: -12.455735206604004
    8. '    ' → logprob: -12.580735206604004
    9. '`' → logprob: -12.830735206604004
    10. ' ' → logprob: -13.330735206604004

Token 2294: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.558798611164093
    2. 'class' → logprob: -1.4337985515594482
    3. 'def' (adapté à ' def') → logprob: -2.0587985515594482
    4. '__' → logprob: -2.8087985515594482
    5. '```' → logprob: -6.683798789978027
    6. ' def' → logprob: -7.933798789978027
    7. '
' → logprob: -9.183798789978027
    8. '``' → logprob: -10.308798789978027
    9. 'from' → logprob: -11.558798789978027
    10. ' __' → logprob: -11.808798789978027

Token 2295: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.3178192675113678
    2. '__' → logprob: -1.3178192377090454
    3. ' __' → logprob: -5.817819118499756
    4. '_init' → logprob: -7.442819118499756
    5. 'def' → logprob: -8.067819595336914
    6. '.__' → logprob: -8.442819595336914
    7. '___' → logprob: -9.317819595336914
    8. 'classmethod' → logprob: -9.317819595336914
    9. '```' → logprob: -9.442819595336914
    10. 'class' → logprob: -9.942819595336914

Token 2296: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.06454778462648392
    2. 'slots' → logprob: -2.8145477771759033
    3. 'dict' → logprob: -6.064548015594482
    4. 'slot' → logprob: -8.814547538757324
    5. '_slots' → logprob: -10.564547538757324
    6. 'Dict' → logprob: -10.564547538757324
    7. 'code' → logprob: -11.064547538757324
    8. '_init' → logprob: -11.939547538757324
    9. 'class' → logprob: -12.064547538757324
    10. '```' → logprob: -12.439547538757324

Token 2297: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -1.3663626305060461e-05
    2. '(self' → logprob: -11.87501335144043
    3. '__' → logprob: -12.37501335144043
    4. '__(
' → logprob: -13.25001335144043
    5. '_(' → logprob: -14.25001335144043
    6. 'self' → logprob: -18.87501335144043
    7. '```' → logprob: -19.12501335144043
    8. '__((' → logprob: -19.12501335144043
    9. '<>(' → logprob: -19.25001335144043
    10. '   ' → logprob: -19.37501335144043

Token 2298: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008074867073446512
    2. '):
' → logprob: -7.250807285308838
    3. ')' → logprob: -9.375807762145996
    4. '):' → logprob: -11.875807762145996
    5. ' self' → logprob: -13.375807762145996
    6. '):

' → logprob: -13.750807762145996
    7. '
' → logprob: -13.875807762145996
    8. '(self' → logprob: -14.125807762145996
    9. '   ' → logprob: -14.750807762145996
    10. '):
' → logprob: -14.875807762145996

Token 2299: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9574628472328186
    2. '(self' → logprob: -1.3324627876281738
    3. 'self' → logprob: -1.7074627876281738
    4. '):
' → logprob: -2.207462787628174
    5. '():' → logprob: -3.582462787628174
    6. ')' → logprob: -4.332462787628174
    7. '()' → logprob: -4.957462787628174
    8. ',' → logprob: -5.207462787628174
    9. '():
' → logprob: -5.957462787628174
    10. '(' → logprob: -5.957462787628174

Token 2300: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07217472791671753
    2. '       ' → logprob: -2.6971747875213623
    3. ' self' → logprob: -7.322174549102783
    4. 'def' → logprob: -7.447174549102783
    5. '
' → logprob: -7.822174549102783
    6. '   ' → logprob: -8.447175025939941
    7. '[]' → logprob: -9.322175025939941
    8. '```' → logprob: -9.322175025939941
    9. ')' → logprob: -9.822175025939941
    10. '        
' → logprob: -10.072175025939941

Token 2301: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00029613598599098623
    2. '{}' → logprob: -8.625296592712402
    3. '       ' → logprob: -9.125296592712402
    4. 'set' → logprob: -12.250296592712402
    5. ' self' → logprob: -13.750296592712402
    6. '{}
' → logprob: -14.375296592712402
    7. '{' → logprob: -14.625296592712402
    8. '   ' → logprob: -15.000296592712402
    9. '(self' → logprob: -15.875296592712402
    10. '[]' → logprob: -16.500295639038086

Token 2302: '.page' (ID: 19611)
  Prédit: '_pages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pages' → logprob: -0.15227504074573517
    2. 'pages' → logprob: -2.9022750854492188
    3. '._' → logprob: -3.1522750854492188
    4. '.pages' → logprob: -3.2772750854492188
    5. '   ' → logprob: -6.402275085449219
    6. '_web' → logprob: -7.027275085449219
    7. '_p' → logprob: -7.277275085449219
    8. '_paths' → logprob: -7.402275085449219
    9. '_page' → logprob: -7.652275085449219
    10. '_known' → logprob: -8.277275085449219

Token 2303: '_to' (ID: 5089)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004276650492101908
    2. '_map' → logprob: -5.754276752471924
    3. '_paths' → logprob: -7.129276752471924
    4. '_set' → logprob: -8.754276275634766
    5. '_to' → logprob: -9.129276275634766
    6. 'paths' → logprob: -11.754276275634766
    7. '_dict' → logprob: -12.379276275634766
    8. '_names' → logprob: -12.629276275634766
    9. '_ids' → logprob: -12.629276275634766
    10. '_path' → logprob: -13.004276275634766

Token 2304: '_id' (ID: 1537)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7060545086860657
    2. 'canonical' → logprob: -1.956054449081421
    3. 'normalized' → logprob: -2.206054449081421
    4. 'id' → logprob: -2.331054449081421
    5. 'segments' → logprob: -3.206054449081421
    6. 'norm' → logprob: -3.581054449081421
    7. 'file' → logprob: -3.831054449081421
    8. 'page' → logprob: -4.5810546875
    9. 'info' → logprob: -4.5810546875
    10. 'index' → logprob: -5.3310546875

Token 2305: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05052490532398224
    2. ':' → logprob: -3.550524950027466
    3. '=' → logprob: -3.925524950027466
    4. ' ' → logprob: -8.300524711608887
    5. '[' → logprob: -8.550524711608887
    6. '.setdefault' → logprob: -9.550524711608887
    7. '['' → logprob: -9.675524711608887
    8. '   ' → logprob: -10.175524711608887
    9. '  ' → logprob: -10.175524711608887
    10. 's' → logprob: -10.175524711608887

Token 2306: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.0015309321461245418
    2. 'dict' → logprob: -6.50153112411499
    3. ' Dict' → logprob: -10.626530647277832
    4. '{}' → logprob: -12.626530647277832
    5. 'List' → logprob: -14.251530647277832
    6. '_dict' → logprob: -15.751530647277832
    7. '   ' → logprob: -16.00153160095215
    8. '{' → logprob: -16.12653160095215
    9. ' dict' → logprob: -16.50153160095215
    10. '```' → logprob: -17.87653160095215

Token 2307: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0011948712635785341
    2. '[int' → logprob: -6.751194953918457
    3. '[' → logprob: -10.626194953918457
    4. 'str' → logprob: -15.751194953918457
    5. '[
' → logprob: -16.37619400024414
    6. '   ' → logprob: -17.87619400024414
    7. '[List' → logprob: -17.87619400024414
    8. '=str' → logprob: -18.00119400024414
    9. '```' → logprob: -18.25119400024414
    10. 'int' → logprob: -18.87619400024414

Token 2308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4531639814376831
    2. ']' → logprob: -1.203163981437683
    3. '[str' → logprob: -3.0781641006469727
    4. ',str' → logprob: -4.328164100646973
    5. '[int' → logprob: -5.578164100646973
    6. ',int' → logprob: -7.703164100646973
    7. ',List' → logprob: -8.703164100646973
    8. ' ,' → logprob: -9.203164100646973
    9. ']int' → logprob: -9.453164100646973
    10. ']=' → logprob: -9.453164100646973

Token 2309: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002542132046073675
    2. 'str' → logprob: -6.002542018890381
    3. 'List' → logprob: -10.002542495727539
    4. 'Set' → logprob: -11.502542495727539
    5. ' int' → logprob: -12.002542495727539
    6. 'Tuple' → logprob: -13.502542495727539
    7. '[int' → logprob: -13.752542495727539
    8. 'set' → logprob: -14.627542495727539
    9. 'Optional' → logprob: -15.002542495727539
    10. 'bool' → logprob: -15.377542495727539

Token 2310: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01344749890267849
    2. ']=' → logprob: -5.138447284698486
    3. '=' → logprob: -5.263447284698486
    4. '']' → logprob: -7.388447284698486
    5. ',' → logprob: -7.513447284698486
    6. ' =' → logprob: -8.263447761535645
    7. '[' → logprob: -8.638447761535645
    8. ' ]' → logprob: -9.013447761535645
    9. ')' → logprob: -9.263447761535645
    10. '<|end|>' → logprob: -9.263447761535645

Token 2311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17975427210330963
    2. '=' → logprob: -1.8047542572021484
    3. '={}' → logprob: -13.054754257202148
    4. '<|end|>' → logprob: -13.179754257202148
    5. ' ' → logprob: -13.679754257202148
    6. '[' → logprob: -14.054754257202148
    7. ')' → logprob: -14.429754257202148
    8. '   ' → logprob: -14.679754257202148
    9. '={'' → logprob: -14.804754257202148
    10. '.setdefault' → logprob: -15.054754257202148

Token 2312: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.843177233240567e-05
    2. '{}
' → logprob: -11.000018119812012
    3. 'dict' → logprob: -13.750018119812012
    4. '{}

' → logprob: -14.750018119812012
    5. '{})' → logprob: -15.500018119812012
    6. '={}' → logprob: -17.375019073486328
    7. ' {}' → logprob: -17.500019073486328
    8. '{' → logprob: -17.750019073486328
    9. '{},' → logprob: -17.750019073486328
    10. '{}.' → logprob: -20.250019073486328

Token 2313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4596031904220581
    2. 'self' → logprob: -1.334603190422058
    3. '   ' → logprob: -2.3346033096313477
    4. 'def' → logprob: -5.459603309631348
    5. ' self' → logprob: -6.084603309631348
    6. '
' → logprob: -7.084603309631348
    7. ' ' → logprob: -8.334603309631348
    8. '```' → logprob: -8.709603309631348
    9. '<|end|>' → logprob: -8.834603309631348
    10. 'Next' → logprob: -8.834603309631348

Token 2314: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12757563591003418
    2. '       ' → logprob: -2.127575635910034
    3. 'def' → logprob: -8.252575874328613
    4. '   ' → logprob: -8.252575874328613
    5. ' self' → logprob: -9.502575874328613
    6. '
' → logprob: -10.252575874328613
    7. ' ' → logprob: -12.002575874328613
    8. '	self' → logprob: -12.252575874328613
    9. '           ' → logprob: -13.877575874328613
    10. '        
' → logprob: -14.377575874328613

Token 2315: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -0.15176111459732056
    2. 'id' → logprob: -2.151761054992676
    3. '.next' → logprob: -4.401761054992676
    4. '_id' → logprob: -5.526761054992676
    5. 'counter' → logprob: -5.901761054992676
    6. 'next' → logprob: -6.776761054992676
    7. '.counter' → logprob: -6.776761054992676
    8. 'path' → logprob: -7.401761054992676
    9. 'normalized' → logprob: -7.526761054992676
    10. '._' → logprob: -7.526761054992676

Token 2316: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.018693095073103905
    2. '_counter' → logprob: -4.018692970275879
    3. '_map' → logprob: -7.893692970275879
    4. ':' → logprob: -10.018692970275879
    5. 's' → logprob: -10.893692970275879
    6. '=' → logprob: -11.268692970275879
    7. 'counter' → logprob: -11.393692970275879
    8. 'To' → logprob: -11.393692970275879
    9. '_count' → logprob: -11.518692970275879
    10. 'to' → logprob: -11.768692970275879

Token 2317: '_page' (ID: 13263)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.5428473353385925
    2. 'str' → logprob: -1.0428473949432373
    3. 'path' → logprob: -3.1678473949432373
    4. '_page' → logprob: -4.792847156524658
    5. 'name' → logprob: -5.417847156524658
    6. '_str' → logprob: -5.542847156524658
    7. '_path' → logprob: -5.667847156524658
    8. 'int' → logprob: -6.042847156524658
    9. 'url' → logprob: -7.917847156524658
    10. '_url' → logprob: -8.042847633361816

Token 2318: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018474860116839409
    2. ' =' → logprob: -6.501847267150879
    3. '=' → logprob: -8.126847267150879
    4. '{' → logprob: -11.251847267150879
    5. '{}' → logprob: -11.251847267150879
    6. ' :' → logprob: -12.001847267150879
    7. '={}' → logprob: -12.126847267150879
    8. ':{}' → logprob: -12.626847267150879
    9. '   ' → logprob: -13.251847267150879
    10. '```' → logprob: -13.751847267150879

Token 2319: ' List' (ID: 2655)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.008667164482176304
    2. 'List' → logprob: -4.7586669921875
    3. 'dict' → logprob: -10.3836669921875
    4. ' Dict' → logprob: -11.2586669921875
    5. '{}' → logprob: -12.0086669921875
    6. '   ' → logprob: -14.0086669921875
    7. '{' → logprob: -14.3836669921875
    8. '{}
' → logprob: -14.6336669921875
    9. 'list' → logprob: -14.8836669921875
    10. '[List' → logprob: -14.8836669921875

Token 2320: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.981667537620524e-06
    2. 'str' → logprob: -13.750001907348633
    3. '[' → logprob: -14.000001907348633
    4. '=str' → logprob: -19.000001907348633
    5. '[int' → logprob: -19.375001907348633
    6. 'Str' → logprob: -20.625001907348633
    7. '[
' → logprob: -21.125001907348633
    8. '(str' → logprob: -21.500001907348633
    9. 'Optional' → logprob: -21.625001907348633
    10. '   ' → logprob: -21.875001907348633

Token 2321: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00035083942930214107
    2. ']=' → logprob: -8.000350952148438
    3. '=' → logprob: -11.875350952148438
    4. '()]' → logprob: -13.250350952148438
    5. ')' → logprob: -13.500350952148438
    6. '[]' → logprob: -13.625350952148438
    7. '[' → logprob: -13.750350952148438
    8. ']()' → logprob: -14.250350952148438
    9. '()' → logprob: -14.375350952148438
    10. '   ' → logprob: -14.875350952148438

Token 2322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.089253731071949
    2. ' =' → logprob: -2.4642536640167236
    3. '   ' → logprob: -8.339253425598145
    4. '.append' → logprob: -10.589253425598145
    5. '=[]' → logprob: -10.964253425598145
    6. '[]' → logprob: -11.089253425598145
    7. '[' → logprob: -12.339253425598145
    8. '=[]
' → logprob: -12.964253425598145
    9. '       ' → logprob: -13.089253425598145
    10. '(' → logprob: -13.589253425598145

Token 2323: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0004375830467324704
    2. '[]
' → logprob: -7.7504377365112305
    3. '[]

' → logprob: -12.12543773651123
    4. '[])' → logprob: -14.12543773651123
    5. '[]"' → logprob: -15.12543773651123
    6. '[]}' → logprob: -15.25043773651123
    7. 'list' → logprob: -16.500436782836914
    8. ' []' → logprob: -16.750436782836914
    9. '[]>' → logprob: -17.375436782836914
    10. '[],' → logprob: -17.500436782836914

Token 2324: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03306598588824272
    2. 'def' → logprob: -3.5330660343170166
    3. '
' → logprob: -6.1580657958984375
    4. '       ' → logprob: -7.4080657958984375
    5. ' def' → logprob: -8.158065795898438
    6. '    
' → logprob: -8.283065795898438
    7. '```' → logprob: -11.033065795898438
    8. '        
' → logprob: -11.158065795898438
    9. 'self' → logprob: -11.783065795898438
    10. ' ' → logprob: -12.408065795898438

Token 2325: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12708349525928497
    2. '   ' → logprob: -2.1270835399627686
    3. ' def' → logprob: -9.627083778381348
    4. '       ' → logprob: -10.252083778381348
    5. 'self' (adapté à ' self') → logprob: -10.502083778381348
    6. '
' → logprob: -10.627083778381348
    7. '    
' → logprob: -13.752083778381348
    8. '	def' → logprob: -13.877083778381348
    9. '```' → logprob: -15.627083778381348
    10. '        
' → logprob: -16.25208282470703

Token 2326: '.next' (ID: 6689)
  Prédit: '_counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -1.1492598056793213
    2. '_next' → logprob: -1.6492598056793213
    3. 'next' → logprob: -1.7742598056793213
    4. 'counter' → logprob: -2.0242598056793213
    5. '.next' → logprob: -2.6492598056793213
    6. 'def' → logprob: -3.3992598056793213
    7. '._' → logprob: -3.7742598056793213
    8. '_count' → logprob: -4.149259567260742
    9. '.counter' → logprob: -4.274259567260742
    10. '_path' → logprob: -4.899259567260742

Token 2327: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0645793080329895
    2. '_token' → logprob: -2.8145792484283447
    3. '_' → logprob: -6.439579486846924
    4. ' _' → logprob: -7.939579486846924
    5. '_page' → logprob: -8.064579010009766
    6. '_int' → logprob: -9.439579010009766
    7. '_index' → logprob: -9.814579010009766
    8. ' =' → logprob: -10.064579010009766
    9. '_idx' → logprob: -10.439579010009766
    10. '_i' → logprob: -10.439579010009766

Token 2328: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12719613313674927
    2. ' =' → logprob: -2.1271960735321045
    3. '_' → logprob: -8.377196311950684
    4. '_=' → logprob: -11.502196311950684
    5. ' +=' → logprob: -11.752196311950684
    6. '+=' → logprob: -11.752196311950684
    7. ' ' → logprob: -12.627196311950684
    8. '   ' → logprob: -12.877196311950684
    9. ':' → logprob: -13.627196311950684
    10. '<|end|>' → logprob: -13.877196311950684

Token 2329: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.629921436891891e-05
    2. ' ' → logprob: -10.75002670288086
    3. '1' → logprob: -12.25002670288086
    4. '   ' → logprob: -19.75002670288086
    5. '=' → logprob: -20.87502670288086
    6. '  ' → logprob: -21.00002670288086
    7. '
' → logprob: -21.62502670288086
    8. ' =' → logprob: -21.87502670288086
    9. '۰' → logprob: -21.87502670288086
    10. '2' → logprob: -22.25002670288086

Token 2330: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010329303331673145
    2. '1' → logprob: -6.876032829284668
    3. ' ' → logprob: -16.251033782958984
    4. '=' → logprob: -19.251033782958984
    5. '```' → logprob: -20.063533782958984
    6. '   ' → logprob: -20.376033782958984
    7. '[' → logprob: -20.376033782958984
    8. '(' → logprob: -20.813533782958984
    9. '０' → logprob: -20.876033782958984
    10. '
' → logprob: -20.876033782958984

Token 2331: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3108394145965576
    2. '   ' → logprob: -1.4358394145965576
    3. '    
' → logprob: -3.5608394145965576
    4. 'def' → logprob: -7.310839653015137
    5. '        
' → logprob: -9.560839653015137
    6. ' def' → logprob: -9.935839653015137
    7. ' 
' → logprob: -11.435839653015137
    8. '<|end|>' → logprob: -11.435839653015137
    9. '  
' → logprob: -11.560839653015137
    10. '```' → logprob: -12.185839653015137

Token 2332: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014354701852425933
    2. ' def' → logprob: -7.126435279846191
    3. '   ' → logprob: -7.376435279846191
    4. '
' → logprob: -12.751435279846191
    5. '	def' → logprob: -13.376435279846191
    6. ' ' → logprob: -15.501435279846191
    7. '```' → logprob: -16.001436233520508
    8. 'Def' → logprob: -16.376436233520508
    9. '    
' → logprob: -16.876436233520508
    10. '       ' → logprob: -17.626436233520508

Token 2333: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.200166469876422e-06
    2. ' def' → logprob: -12.250004768371582
    3. '   ' → logprob: -14.750004768371582
    4. '	def' → logprob: -17.3750057220459
    5. 'Def' → logprob: -18.5000057220459
    6. '
' → logprob: -19.3750057220459
    7. '```' → logprob: -19.6250057220459
    8. '    
' → logprob: -20.2500057220459
    9. '@property' → logprob: -20.8750057220459
    10. '`' → logprob: -21.3750057220459

Token 2334: ' add' (ID: 1147)
  Prédit: 'register'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'register' → logprob: -0.07353361696004868
    2. 'add' → logprob: -2.823533535003662
    3. 'get' → logprob: -4.573533535003662
    4. ' register' → logprob: -7.198533535003662
    5. 'assign' → logprob: -8.82353401184082
    6. ' add' → logprob: -8.94853401184082
    7. 'def' → logprob: -9.07353401184082
    8. ' get' → logprob: -11.44853401184082
    9. 'insert' → logprob: -11.69853401184082
    10. 'has' → logprob: -11.94853401184082

Token 2335: '_page' (ID: 13263)
  Prédit: '_page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_page' → logprob: -0.002722610253840685
    2. '(self' → logprob: -6.25272274017334
    3. '(' → logprob: -7.25272274017334
    4. '_' → logprob: -10.25272274017334
    5. '_path' → logprob: -10.37772274017334
    6. '(
' → logprob: -11.50272274017334
    7. '_p' → logprob: -12.62772274017334
    8. '(_' → logprob: -13.87772274017334
    9. '_(' → logprob: -14.12772274017334
    10. '_pages' → logprob: -14.12772274017334

Token 2336: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5256913304328918
    2. '(self' → logprob: -0.9006913304328918
    3. '_token' → logprob: -6.650691509246826
    4. '(
' → logprob: -7.025691509246826
    5. '(token' → logprob: -8.900691032409668
    6. ' (' → logprob: -9.650691032409668
    7. '_' → logprob: -9.775691032409668
    8. 'token' → logprob: -10.650691032409668
    9. '(s' → logprob: -10.650691032409668
    10. 'self' → logprob: -10.775691032409668

Token 2337: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011196601204574108
    2. '(' → logprob: -4.511196613311768
    3. '(
' → logprob: -9.38619613647461
    4. ' (' → logprob: -11.01119613647461
    5. 'self' → logprob: -11.13619613647461
    6. '_token' → logprob: -12.01119613647461
    7. ')(' → logprob: -12.26119613647461
    8. '(token' → logprob: -12.63619613647461
    9. '_' → logprob: -12.88619613647461
    10. '(`' → logprob: -13.01119613647461

Token 2338: ' canonical' (ID: 91323)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.1406034380197525
    2. 'page' → logprob: -2.265603542327881
    3. ' path' → logprob: -4.515603542327881
    4. 'normalized' → logprob: -4.640603542327881
    5. 'canonical' → logprob: -5.515603542327881
    6. ' page' → logprob: -6.390603542327881
    7. 'pathname' → logprob: -8.015603065490723
    8. ' normalized' → logprob: -8.515603065490723
    9. '   ' → logprob: -8.640603065490723
    10. ' canonical' → logprob: -8.640603065490723

Token 2339: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0018418944673612714
    2. '_token' → logprob: -6.376842021942139
    3. '_name' → logprob: -9.62684154510498
    4. '('_' → logprob: -10.75184154510498
    5. '_url' → logprob: -11.12684154510498
    6. ')_' → logprob: -12.25184154510498
    7. '_' → logprob: -12.62684154510498
    8. '(' → logprob: -12.62684154510498
    9. '```' → logprob: -12.62684154510498
    10. '_p' → logprob: -12.75184154510498

Token 2340: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3849332928657532
    2. '):
' → logprob: -2.2599332332611084
    3. '(self' → logprob: -2.7599332332611084
    4. '(' → logprob: -3.2599332332611084
    5. ')' → logprob: -3.2599332332611084
    6. ',' → logprob: -3.7599332332611084
    7. ':' → logprob: -4.0099334716796875
    8. '('' → logprob: -5.0099334716796875
    9. '   ' → logprob: -5.1349334716796875
    10. '(
' → logprob: -5.5099334716796875

Token 2341: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00939076766371727
    2. ' str' → logprob: -4.759390830993652
    3. ')' → logprob: -7.259390830993652
    4. '[str' → logprob: -9.759390830993652
    5. '   ' → logprob: -11.884390830993652
    6. '(str' → logprob: -12.509390830993652
    7. ':str' → logprob: -13.009390830993652
    8. '	str' → logprob: -15.384390830993652
    9. '       ' → logprob: -15.634390830993652
    10. '):
' → logprob: -15.634390830993652

Token 2342: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2066832184791565
    2. '):
' → logprob: -1.7066831588745117
    3. '):' → logprob: -5.331683158874512
    4. '   ' → logprob: -8.331683158874512
    5. '       ' → logprob: -9.331683158874512
    6. '):
' → logprob: -10.206683158874512
    7. ')->' → logprob: -10.706683158874512
    8. ':' → logprob: -10.706683158874512
    9. ' )' → logprob: -12.706683158874512
    10. ')`' → logprob: -13.706683158874512

Token 2343: ' ->' (ID: 2747)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16394981741905212
    2. ':' → logprob: -2.163949728012085
    3. '       ' → logprob: -3.913949728012085
    4. '   ' → logprob: -4.288949966430664
    5. '):
' → logprob: -6.788949966430664
    6. '():
' → logprob: -7.288949966430664
    7. '->' → logprob: -7.788949966430664
    8. ' ->' → logprob: -8.788949966430664
    9. ' :
' → logprob: -10.413949966430664
    10. ')' → logprob: -10.663949966430664

Token 2344: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1472419600977446e-06
    2. 'None' → logprob: -14.250000953674316
    3. ' int' → logprob: -15.375000953674316
    4. 'Optional' → logprob: -16.250001907348633
    5. '[int' → logprob: -16.250001907348633
    6. '(int' → logprob: -17.375001907348633
    7. '<int' → logprob: -18.375001907348633
    8. ''int' → logprob: -18.875001907348633
    9. '	int' → logprob: -19.750001907348633
    10. '   ' → logprob: -20.625001907348633

Token 2345: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.662754476070404
    2. ':
' → logprob: -1.0377545356750488
    3. '():
' → logprob: -2.912754535675049
    4. '       ' → logprob: -2.912754535675049
    5. '():' → logprob: -4.287754535675049
    6. '   ' → logprob: -6.037754535675049
    7. '):
' → logprob: -6.287754535675049
    8. '(self' → logprob: -6.537754535675049
    9. '{' → logprob: -7.037754535675049
    10. '):' → logprob: -7.912754535675049

Token 2346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045402501709759235
    2. ' if' → logprob: -6.00454044342041
    3. 'if' → logprob: -6.25454044342041
    4. '```' → logprob: -9.62954044342041
    5. 'self' → logprob: -9.87954044342041
    6. ' self' → logprob: -11.37954044342041
    7. '   ' → logprob: -12.87954044342041
    8. '#' → logprob: -13.37954044342041
    9. ':' → logprob: -13.37954044342041
    10. '​' → logprob: -14.12954044342041

Token 2347: ' """
' (ID: 7037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6278347969055176
    2. '       ' → logprob: -0.8778347969055176
    3. ' if' → logprob: -3.0028347969055176
    4. '```' → logprob: -7.127834796905518
    5. 'token' → logprob: -10.00283432006836
    6. 'self' → logprob: -10.25283432006836
    7. ':' → logprob: -12.12783432006836
    8. 't' → logprob: -12.25283432006836
    9. '   ' → logprob: -12.50283432006836
    10. '	if' → logprob: -12.62783432006836

Token 2348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21225467324256897
    2. 'if' → logprob: -1.8372546434402466
    3. ' if' → logprob: -3.462254762649536
    4. 'self' → logprob: -8.837254524230957
    5. 'path' → logprob: -8.962254524230957
    6. 'p' → logprob: -9.212254524230957
    7. 'key' → logprob: -9.712254524230957
    8. '   ' → logprob: -10.087254524230957
    9. 'k' → logprob: -10.712254524230957
    10. 'c' → logprob: -10.712254524230957

Token 2349: ' Add' (ID: 4063)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05811484903097153
    2. '       ' → logprob: -3.308114767074585
    3. ' if' → logprob: -4.058115005493164
    4. 'key' → logprob: -6.183115005493164
    5. '```' → logprob: -8.808115005493164
    6. 'token' → logprob: -9.058115005493164
    7. 'path' → logprob: -9.433115005493164
    8. 'If' → logprob: -10.308115005493164
    9. '   ' → logprob: -10.558115005493164
    10. ' key' → logprob: -11.183115005493164

Token 2350: ' a' (ID: 261)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.041980668902397156
    2. ' canonical' → logprob: -3.291980743408203
    3. '(' → logprob: -6.666980743408203
    4. 'self' → logprob: -6.791980743408203
    5. '(
' → logprob: -7.416980743408203
    6. 'c' → logprob: -8.166980743408203
    7. '(c' → logprob: -8.166980743408203
    8. 'canon' → logprob: -9.166980743408203
    9. '
' → logprob: -10.041980743408203
    10. '       ' → logprob: -10.291980743408203

Token 2351: ' canonical' (ID: 91323)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.1562710404396057
    2. ' page' → logprob: -2.531270980834961
    3. 'canonical' → logprob: -3.031270980834961
    4. 'space' → logprob: -4.906270980834961
    5. ' canonical' → logprob: -5.156270980834961
    6. 'new' → logprob: -6.156270980834961
    7. ' new' → logprob: -7.031270980834961
    8. '_page' → logprob: -7.906270980834961
    9. 'token' → logprob: -9.531270980834961
    10. '
' → logprob: -9.906270980834961

Token 2352: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.11939319223165512
    2. '_' → logprob: -2.2443931102752686
    3. '_page' → logprob: -5.244393348693848
    4. ' _' → logprob: -7.119393348693848
    5. ' path' → logprob: -8.244393348693848
    6. 'path' → logprob: -10.369393348693848
    7. ' page' → logprob: -10.369393348693848
    8. '```' → logprob: -10.494393348693848
    9. '_url' → logprob: -10.994393348693848
    10. '_p' → logprob: -10.994393348693848

Token 2353: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2849582433700562
    2. '_token' → logprob: -1.9099582433700562
    3. '(token' → logprob: -2.0349583625793457
    4. '(
' → logprob: -2.0349583625793457
    5. '[' → logprob: -2.5349583625793457
    6. 'token' → logprob: -2.7849583625793457
    7. '       ' → logprob: -3.4099583625793457
    8. '[token' → logprob: -3.6599583625793457
    9. ')' → logprob: -4.284958362579346
    10. '(' → logprob: -4.534958362579346

Token 2354: ' a' (ID: 261)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -1.5318293571472168
    2. 'canonical' → logprob: -1.5318293571472168
    3. 'the' → logprob: -1.7818293571472168
    4. ' the' → logprob: -2.406829357147217
    5. 'self' → logprob: -2.531829357147217
    6. ' page' → logprob: -2.656829357147217
    7. ' a' → logprob: -2.781829357147217
    8. 'a' → logprob: -3.031829357147217
    9. ' canonical' → logprob: -3.281829357147217
    10. ' self' → logprob: -5.406829357147217

Token 2355: ' page' (ID: 3011)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.35698819160461426
    2. 'web' → logprob: -1.7319881916046143
    3. ' page' → logprob: -2.6069881916046143
    4. ' web' → logprob: -3.1069881916046143
    5. 'new' → logprob: -6.606987953186035
    6. ')' → logprob: -6.981987953186035
    7. ' new' → logprob: -7.731987953186035
    8. 'known' → logprob: -7.856987953186035
    9. 'def' → logprob: -8.356987953186035
    10. 'existing' → logprob: -8.731987953186035

Token 2356: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3896462023258209
    2. '(self' → logprob: -2.639646291732788
    3. ' if' → logprob: -2.889646291732788
    4. ':' → logprob: -3.514646291732788
    5. ',' → logprob: -3.639646291732788
    6. '(
' → logprob: -3.639646291732788
    7. ':
' → logprob: -3.764646291732788
    8. '   ' → logprob: -4.389646053314209
    9. ' and' → logprob: -4.389646053314209
    10. ' (' → logprob: -4.639646053314209

Token 2357: ' registry' (ID: 33798)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.024440240114927292
    2. 'id' → logprob: -3.774440288543701
    3. 'the' → logprob: -8.024439811706543
    4. 'return' → logprob: -8.274439811706543
    5. ' self' → logprob: -8.524439811706543
    6. '_id' → logprob: -8.774439811706543
    7. 'int' → logprob: -8.774439811706543
    8. 'add' → logprob: -10.899439811706543
    9. 'be' → logprob: -10.899439811706543
    10. '`' → logprob: -10.899439811706543

Token 2358: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5417264699935913
    2. '(self' → logprob: -0.9167264699935913
    3. '(' → logprob: -5.041726589202881
    4. ',' → logprob: -5.666726589202881
    5. 'self' → logprob: -6.291726589202881
    6. '   ' → logprob: -6.666726589202881
    7. '(
' → logprob: -6.791726589202881
    8. ':' → logprob: -7.041726589202881
    9. ' if' → logprob: -7.041726589202881
    10. 'if' → logprob: -7.166726589202881

Token 2359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11016403138637543
    2. ' if' → logprob: -2.985163927078247
    3. 'if' → logprob: -3.360163927078247
    4. '   ' → logprob: -4.985164165496826
    5. '```' → logprob: -4.985164165496826
    6. 'token' → logprob: -7.110164165496826
    7. '"""' → logprob: -7.360164165496826
    8. 'tokens' → logprob: -7.360164165496826
    9. '        
' → logprob: -7.485164165496826
    10. '"' → logprob: -7.860164165496826

Token 2360: ' Returns' (ID: 9609)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5817072987556458
    2. '       ' → logprob: -1.206707239151001
    3. 'if' → logprob: -1.956707239151001
    4. 'token' → logprob: -8.456707000732422
    5. '   ' → logprob: -9.581707000732422
    6. '
' → logprob: -9.956707000732422
    7. 'tokens' → logprob: -10.206707000732422
    8. 'space' → logprob: -10.581707000732422
    9. 'If' → logprob: -10.706707000732422
    10. ' token' → logprob: -11.081707000732422

Token 2361: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1269301027059555
    2. ' self' → logprob: -2.126929998397827
    3. '(self' → logprob: -14.626930236816406
    4. '0' → logprob: -14.751930236816406
    5. '_self' → logprob: -15.251930236816406
    6. '       ' → logprob: -15.751930236816406
    7. '[self' → logprob: -15.876930236816406
    8. '	self' → logprob: -16.001930236816406
    9. ')' → logprob: -16.376930236816406
    10. '   ' → logprob: -16.376930236816406

Token 2362: ' page' (ID: 3011)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.4807663559913635
    2. 'next' → logprob: -1.2307662963867188
    3. 'self' → logprob: -2.4807662963867188
    4. ' self' → logprob: -5.230766296386719
    5. 'id' → logprob: -8.480766296386719
    6. ' id' → logprob: -8.605766296386719
    7. 'existing' → logprob: -9.605766296386719
    8. 'page' → logprob: -10.105766296386719
    9. 'token' → logprob: -10.730766296386719
    10. ' existing' → logprob: -11.230766296386719

Token 2363: ' id' (ID: 1211)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -8.661626634420827e-05
    2. ' _' → logprob: -10.125086784362793
    3. 'id' → logprob: -10.625086784362793
    4. 'Id' → logprob: -11.875086784362793
    5. ' id' → logprob: -12.000086784362793
    6. '_ids' → logprob: -13.125086784362793
    7. 'ID' → logprob: -13.375086784362793
    8. '_token' → logprob: -13.875086784362793
    9. ''_' → logprob: -14.000086784362793
    10. '_' → logprob: -14.125086784362793

Token 2364: '.
' (ID: 558)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.06210022792220116
    2. '(' → logprob: -2.9371001720428467
    3. '       ' → logprob: -5.937100410461426
    4. '(self' → logprob: -6.562100410461426
    5. '   ' → logprob: -7.187100410461426
    6. '('' → logprob: -7.187100410461426
    7. ',' → logprob: -7.437100410461426
    8. '(c' → logprob: -7.687100410461426
    9. 'self' → logprob: -9.312100410461426
    10. ' (
' → logprob: -9.437100410461426

Token 2365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013696423266083002
    2. ' if' → logprob: -7.626369476318359
    3. '   ' → logprob: -7.876369476318359
    4. '```' → logprob: -8.12636947631836
    5. ' tokens' → logprob: -10.50136947631836
    6. 'token' → logprob: -10.62636947631836
    7. 'if' → logprob: -10.62636947631836
    8. ' token' → logprob: -11.12636947631836
    9. '        
' → logprob: -11.12636947631836
    10. '           ' → logprob: -11.50136947631836

Token 2366: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.264242947101593
    2. 'if' → logprob: -1.5142428874969482
    3. ' if' → logprob: -4.514243125915527
    4. 'key' → logprob: -7.264243125915527
    5. 'token' → logprob: -8.139243125915527
    6. '   ' → logprob: -8.639243125915527
    7. 'self' → logprob: -10.139243125915527
    8. ' key' → logprob: -10.264243125915527
    9. 'space' → logprob: -11.389243125915527
    10. 'code' → logprob: -11.889243125915527

Token 2367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008867349475622177
    2. ' if' → logprob: -5.383867263793945
    3. 'if' → logprob: -5.508867263793945
    4. '```' → logprob: -9.258867263793945
    5. '   ' → logprob: -9.758867263793945
    6. 'token' → logprob: -11.883867263793945
    7. '           ' → logprob: -12.258867263793945
    8. '        
' → logprob: -12.258867263793945
    9. 'self' → logprob: -12.383867263793945
    10. '``' → logprob: -13.383867263793945

Token 2368: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00027015688829123974
    2. '       ' → logprob: -8.250269889831543
    3. ' if' → logprob: -11.875269889831543
    4. 'key' → logprob: -13.375269889831543
    5. 'token' → logprob: -15.125269889831543
    6. 'existing' → logprob: -17.25027084350586
    7. '```' → logprob: -17.50027084350586
    8. '   ' → logprob: -18.62527084350586
    9. '	if' → logprob: -18.75027084350586
    10. 'If' → logprob: -19.50027084350586

Token 2369: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.12692904472351074
    2. ' canonical' → logprob: -2.1269290447235107
    3. 'canon' → logprob: -14.62692928314209
    4. 'can' → logprob: -15.37692928314209
    5. ' canon' → logprob: -15.87692928314209
    6. 'c' → logprob: -16.251928329467773
    7. 'not' → logprob: -17.626928329467773
    8. 'self' → logprob: -17.751928329467773
    9. '       ' → logprob: -18.001928329467773
    10. 'Canonical' → logprob: -18.251928329467773

Token 2370: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0001294030516874045
    2. '_' → logprob: -10.125129699707031
    3. '_paths' → logprob: -10.500129699707031
    4. 'path' → logprob: -11.625129699707031
    5. '_token' → logprob: -11.750129699707031
    6. ''_' → logprob: -11.875129699707031
    7. 'Path' → logprob: -12.125129699707031
    8. '_pat' → logprob: -12.250129699707031
    9. '```' → logprob: -12.375129699707031
    10. '
' → logprob: -12.750129699707031

Token 2371: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3258781433105469
    2. ' not' → logprob: -1.5758781433105469
    3. 'in' → logprob: -2.825878143310547
    4. 'not' → logprob: -4.450878143310547
    5. ')' → logprob: -8.825878143310547
    6. ' ' → logprob: -9.825878143310547
    7. '   ' → logprob: -10.075878143310547
    8. ' )' → logprob: -10.950878143310547
    9. '[' → logprob: -11.075878143310547
    10. 'n' → logprob: -11.075878143310547

Token 2372: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20179004967212677
    2. 'in' → logprob: -1.7017900943756104
    3. 'self' → logprob: -8.076789855957031
    4. ')' → logprob: -11.201789855957031
    5. ' self' → logprob: -11.451789855957031
    6. '.' → logprob: -11.701789855957031
    7. ',' → logprob: -11.826789855957031
    8. '       ' → logprob: -11.951789855957031
    9. '[' → logprob: -12.326789855957031
    10. 'space' → logprob: -12.576789855957031

Token 2373: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.935296834039036e-06
    2. ' self' → logprob: -12.75000286102295
    3. '
' → logprob: -20.250003814697266
    4. '[self' → logprob: -22.500003814697266
    5. '(self' → logprob: -22.625003814697266
    6. '       ' → logprob: -22.625003814697266
    7. '```' → logprob: -23.250003814697266
    8. '   ' → logprob: -23.250003814697266
    9. 'this' → logprob: -23.500003814697266
    10. '=self' → logprob: -23.625003814697266

Token 2374: '.page' (ID: 19611)
  Prédit: '.page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.page' → logprob: -2.4034345187828876e-05
    2. 'page' → logprob: -10.75002384185791
    3. '.' → logprob: -13.50002384185791
    4. ' .' → logprob: -14.50002384185791
    5. '.user' → logprob: -15.62502384185791
    6. '._' → logprob: -16.250024795532227
    7. '	page' → logprob: -16.875024795532227
    8. '_page' → logprob: -17.000024795532227
    9. ' page' → logprob: -17.250024795532227
    10. '.pages' → logprob: -17.625024795532227

Token 2375: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.15441757265944e-05
    2. 's' → logprob: -11.375031471252441
    3. '_paths' → logprob: -11.375031471252441
    4. '_path' → logprob: -12.750031471252441
    5. '_ids' → logprob: -13.000031471252441
    6. '_map' → logprob: -14.375031471252441
    7. '_' → logprob: -14.375031471252441
    8. '_
' → logprob: -14.500031471252441
    9. '_id' → logprob: -14.750031471252441
    10. '_t' → logprob: -15.375031471252441

Token 2376: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.6469160318374634
    2. '_' → logprob: -1.3969160318374634
    3. '_add' → logprob: -1.7719160318374634
    4. '_page' → logprob: -3.271915912628174
    5. '_map' → logprob: -5.146915912628174
    6. ' _' → logprob: -6.021915912628174
    7. '_url' → logprob: -6.146915912628174
    8. '_p' → logprob: -6.521915912628174
    9. '_ids' → logprob: -6.521915912628174
    10. '_path' → logprob: -6.646915912628174

Token 2377: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05730445310473442
    2. ':
' → logprob: -3.0573043823242188
    3. '[' → logprob: -5.057304382324219
    4. '       ' → logprob: -7.807304382324219
    5. ']' → logprob: -7.932304382324219
    6. ')' → logprob: -7.932304382324219
    7. '   ' → logprob: -8.307304382324219
    8. '):' → logprob: -8.557304382324219
    9. '.keys' → logprob: -9.432304382324219
    10. '.' → logprob: -9.682304382324219

Token 2378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25729984045028687
    2. '       ' → logprob: -2.5072999000549316
    3. ':
' → logprob: -2.6322999000549316
    4. ' =' → logprob: -3.1322999000549316
    5. ':' → logprob: -4.132299900054932
    6. '=' → logprob: -5.007299900054932
    7. 'self' → logprob: -6.632299900054932
    8. '               ' → logprob: -6.757299900054932
    9. '[' → logprob: -7.007299900054932
    10. ' self' → logprob: -7.257299900054932

Token 2379: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0016639928799122572
    2. '           ' → logprob: -7.001664161682129
    3. ' self' → logprob: -7.876664161682129
    4. 'pid' → logprob: -8.251664161682129
    5. 'page' → logprob: -9.876664161682129
    6. '       ' → logprob: -10.626664161682129
    7. '   ' → logprob: -10.876664161682129
    8. 'id' → logprob: -11.626664161682129
    9. 'idx' → logprob: -12.376664161682129
    10. 'cid' → logprob: -14.376664161682129

Token 2380: '.page' (ID: 19611)
  Prédit: '.page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.page' → logprob: -0.00013440960901789367
    2. ' .' → logprob: -10.250134468078613
    3. '_page' → logprob: -10.375134468078613
    4. 'page' → logprob: -10.375134468078613
    5. '.' → logprob: -11.125134468078613
    6. '._' → logprob: -11.375134468078613
    7. '.next' → logprob: -13.250134468078613
    8. '$page' → logprob: -13.750134468078613
    9. '   ' → logprob: -14.125134468078613
    10. '.space' → logprob: -14.500134468078613

Token 2381: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -12.875006675720215
    3. 'To' → logprob: -13.125006675720215
    4. '_tokens' → logprob: -14.625006675720215
    5. ' _' → logprob: -14.875006675720215
    6. ')_' → logprob: -16.3750057220459
    7. '"_' → logprob: -16.6250057220459
    8. ''_' → logprob: -16.6250057220459
    9. '_TO' → logprob: -16.8750057220459
    10. '}_' → logprob: -16.8750057220459

Token 2382: '_id' (ID: 1537)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -9.014684110297821e-06
    2. '_id' → logprob: -11.625008583068848
    3. 'int' → logprob: -17.000009536743164
    4. 'add' → logprob: -17.500009536743164
    5. ' id' → logprob: -18.875009536743164
    6. 'page' → logprob: -19.000009536743164
    7. 'i' → logprob: -21.000009536743164
    8. 'idf' → logprob: -21.000009536743164
    9. '
' → logprob: -21.500009536743164
    10. '	id' → logprob: -22.375009536743164

Token 2383: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '[self' → logprob: -14.12500286102295
    3. ' [' → logprob: -14.37500286102295
    4. '   ' → logprob: -15.00000286102295
    5. '['' → logprob: -15.37500286102295
    6. '[
' → logprob: -15.87500286102295
    7. '       ' → logprob: -16.000003814697266
    8. '[token' → logprob: -16.250003814697266
    9. '[f' → logprob: -16.375003814697266
    10. '__[' → logprob: -16.875003814697266

Token 2384: 'canonical' (ID: 177826)
  Prédit: 'canonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.001037214300595224
    2. ' canonical' → logprob: -6.876037120819092
    3. '[' → logprob: -12.75103759765625
    4. 'can' → logprob: -14.25103759765625
    5. '{' → logprob: -14.62603759765625
    6. 'canon' → logprob: -15.62603759765625
    7. '   ' → logprob: -16.00103759765625
    8. ' ' → logprob: -16.37603759765625
    9. '{
' → logprob: -17.50103759765625
    10. '
' → logprob: -18.00103759765625

Token 2385: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0046515571884810925
    2. 'path' → logprob: -5.3796515464782715
    3. '_paths' → logprob: -11.37965202331543
    4. '   ' → logprob: -11.75465202331543
    5. 'Path' → logprob: -13.12965202331543
    6. ' path' → logprob: -13.75465202331543
    7. '```' → logprob: -13.75465202331543
    8. 'spath' → logprob: -14.12965202331543
    9. 'import' → logprob: -14.25465202331543
    10. 'token' → logprob: -14.25465202331543

Token 2386: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576744019985199
    2. '=' → logprob: -0.826744019985199
    3. ']' → logprob: -7.201744079589844
    4. ']=' → logprob: -9.951744079589844
    5. '   ' → logprob: -12.326744079589844
    6. '       ' → logprob: -13.326744079589844
    7. ' ]' → logprob: -13.326744079589844
    8. '    ' → logprob: -13.701744079589844
    9. '           ' → logprob: -14.326744079589844
    10. ' ' → logprob: -14.326744079589844

Token 2387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029765645042061806
    2. ' =' → logprob: -3.5297656059265137
    3. '[' → logprob: -11.654766082763672
    4. ']=' → logprob: -12.529766082763672
    5. '[self' → logprob: -13.904766082763672
    6. ']' → logprob: -14.029766082763672
    7. '=
' → logprob: -14.654766082763672
    8. '           ' → logprob: -16.029766082763672
    9. '[token' → logprob: -16.029766082763672
    10. '       ' → logprob: -16.279766082763672

Token 2388: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.615255839889869e-05
    2. ' self' → logprob: -9.250096321105957
    3. '(self' → logprob: -19.00009536743164
    4. '           ' → logprob: -20.00009536743164
    5. '       ' → logprob: -20.25009536743164
    6. '0' → logprob: -20.75009536743164
    7. '	self' → logprob: -21.12509536743164
    8. '[self' → logprob: -21.37509536743164
    9. '   ' → logprob: -22.00009536743164
    10. '
' → logprob: -22.12509536743164

Token 2389: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.005241821985691786
    2. 'next' → logprob: -5.255241870880127
    3. '[next' → logprob: -12.130241394042969
    4. ' next' → logprob: -14.380241394042969
    5. '_next' → logprob: -14.755241394042969
    6. 'self' → logprob: -15.005241394042969
    7. '       ' → logprob: -15.130241394042969
    8. '.' → logprob: -15.255241394042969
    9. '   ' → logprob: -15.630241394042969
    10. '	next' → logprob: -15.755241394042969

Token 2390: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.001709209755063057
    2. '_token' → logprob: -7.001708984375
    3. '_' → logprob: -7.251708984375
    4. '_code' → logprob: -11.251708984375
    5. ' _' → logprob: -11.376708984375
    6. '_idx' → logprob: -11.626708984375
    7. '_i' → logprob: -11.751708984375
    8. '`' → logprob: -11.876708984375
    9. '```' → logprob: -12.001708984375
    10. '__' → logprob: -12.626708984375

Token 2391: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7575557231903076
    2. '       ' → logprob: -1.0075557231903076
    3. '
' → logprob: -2.5075557231903076
    4. '<|end|>' → logprob: -3.2575557231903076
    5. '               ' → logprob: -3.8825557231903076
    6. '   ' → logprob: -5.007555961608887
    7. '```' → logprob: -5.507555961608887
    8. ',' → logprob: -6.382555961608887
    9. '<|end|>' → logprob: -6.382555961608887
    10. ')' → logprob: -6.507555961608887

Token 2392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006885395850986242
    2. '       ' → logprob: -5.006885528564453
    3. '               ' → logprob: -9.256885528564453
    4. '   ' → logprob: -10.256885528564453
    5. '                   ' → logprob: -11.006885528564453
    6. 'self' → logprob: -12.381885528564453
    7. '		' → logprob: -12.631885528564453
    8. '
' → logprob: -12.881885528564453
    9. ',' → logprob: -13.006885528564453
    10. '     ' → logprob: -13.256885528564453

Token 2393: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005043004639446735
    2. '           ' → logprob: -7.750504493713379
    3. '       ' → logprob: -9.875504493713379
    4. ' self' → logprob: -10.750504493713379
    5. '   ' → logprob: -14.250504493713379
    6. '               ' → logprob: -18.000503540039062
    7. '	self' → logprob: -18.000503540039062
    8. ' ' → logprob: -18.875503540039062
    9. '  ' → logprob: -19.125503540039062
    10. '0' → logprob: -19.750503540039062

Token 2394: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -0.0008361928048543632
    2. 'id' → logprob: -7.625836372375488
    3. '_id' → logprob: -8.625836372375488
    4. '.next' → logprob: -8.875836372375488
    5. 'next' → logprob: -11.250836372375488
    6. '_next' → logprob: -11.375836372375488
    7. '_.' → logprob: -13.500836372375488
    8. '._' → logprob: -14.125836372375488
    9. 'Next' → logprob: -14.125836372375488
    10. '.' → logprob: -15.125836372375488

Token 2395: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.259079363080673e-05
    2. 'to' → logprob: -12.125012397766113
    3. '_next' → logprob: -12.625012397766113
    4. 'To' → logprob: -13.250012397766113
    5. '_tokens' → logprob: -15.000012397766113
    6. '+' → logprob: -15.125012397766113
    7. '+=' → logprob: -15.375012397766113
    8. '_' → logprob: -15.500012397766113
    9. '```' → logprob: -15.625012397766113
    10. '++' → logprob: -15.750012397766113

Token 2396: '_page' (ID: 13263)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.005100695416331291
    2. 'append' → logprob: -5.380100727081299
    3. '_page' → logprob: -8.13010025024414
    4. 'next' → logprob: -8.75510025024414
    5. '.append' → logprob: -11.13010025024414
    6. 'path' → logprob: -13.00510025024414
    7. ' page' → logprob: -13.00510025024414
    8. '
' → logprob: -13.63010025024414
    9. '_append' → logprob: -14.00510025024414
    10. '[next' → logprob: -14.25510025024414

Token 2397: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.088346359931165e-07
    2. '.extend' → logprob: -15.125000953674316
    3. 'append' → logprob: -15.250000953674316
    4. '.' → logprob: -15.375000953674316
    5. ' .' → logprob: -16.875
    6. '.insert' → logprob: -17.75
    7. '_append' → logprob: -18.375
    8. '.app' → logprob: -18.375
    9. '.Append' → logprob: -19.25
    10. '   ' → logprob: -19.375

Token 2398: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.005237668287009001
    2. 'canonical' → logprob: -5.255237579345703
    3. ' canonical' → logprob: -13.255237579345703
    4. 'c' → logprob: -14.130237579345703
    5. '	c' → logprob: -14.380237579345703
    6. 'Canonical' → logprob: -15.005237579345703
    7. 'canon' → logprob: -15.255237579345703
    8. '(' → logprob: -16.380237579345703
    9. '(can' → logprob: -16.505237579345703
    10. '   ' → logprob: -17.005237579345703

Token 2399: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -0.00010330478107789531
    2. 'an' → logprob: -9.500102996826172
    3. 'canonical' → logprob: -11.000102996826172
    4. 'anical' → logprob: -12.750102996826172
    5. '[' → logprob: -13.000102996826172
    6. 'a' → logprob: -13.250102996826172
    7. '```' → logprob: -13.375102996826172
    8. 'on' → logprob: -13.875102996826172
    9. '_' → logprob: -14.250102996826172
    10. 'anon' → logprob: -15.625102996826172

Token 2400: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -8.470901229884475e-05
    2. 'path' → logprob: -9.50008487701416
    3. 'Path' → logprob: -11.75008487701416
    4. '_paths' → logprob: -14.25008487701416
    5. '_pat' → logprob: -14.87508487701416
    6. '_' → logprob: -15.50008487701416
    7. '
' → logprob: -15.62508487701416
    8. '_PATH' → logprob: -16.000083923339844
    9. '_p' → logprob: -16.125083923339844
    10. ')' → logprob: -16.125083923339844

Token 2401: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6334572434425354
    2. ')' → logprob: -0.8834572434425354
    3. '           ' → logprob: -3.3834571838378906
    4. ')
' → logprob: -4.133457183837891
    5. '<|end|>' → logprob: -6.008457183837891
    6. '   ' → logprob: -6.883457183837891
    7. '
' → logprob: -7.633457183837891
    8. '```' → logprob: -7.758457183837891
    9. '               ' → logprob: -8.13345718383789
    10. ',' → logprob: -8.38345718383789

Token 2402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.664371848164592e-05
    2. '       ' → logprob: -11.375016212463379
    3. '               ' → logprob: -12.625016212463379
    4. 'self' → logprob: -13.500016212463379
    5. '                   ' → logprob: -15.625016212463379
    6. ',' → logprob: -15.750016212463379
    7. '		' → logprob: -16.625017166137695
    8. '   ' → logprob: -16.875017166137695
    9. '          ' → logprob: -17.375017166137695
    10. '            
' → logprob: -18.000017166137695

Token 2403: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004329341172706336
    2. '           ' → logprob: -7.750432968139648
    3. ' self' → logprob: -13.250432968139648
    4. '       ' → logprob: -15.000432968139648
    5. '
' → logprob: -16.37543296813965
    6. 'return' → logprob: -17.50043296813965
    7. '   ' → logprob: -17.62543296813965
    8. '               ' → logprob: -19.87543296813965
    9. '	self' → logprob: -20.50043296813965
    10. 's' → logprob: -21.00043296813965

Token 2404: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0052377874962985516
    2. 'next' → logprob: -5.255237579345703
    3. '
' → logprob: -13.255237579345703
    4. ' next' → logprob: -13.380237579345703
    5. '_next' → logprob: -15.130237579345703
    6. '	next' → logprob: -15.255237579345703
    7. '.' → logprob: -15.880237579345703
    8. '[next' → logprob: -17.630237579345703
    9. 'Next' → logprob: -17.755237579345703
    10. ' .' → logprob: -18.630237579345703

Token 2405: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -5.2166411478538066e-05
    2. '_token' → logprob: -9.875052452087402
    3. '```' → logprob: -15.875052452087402
    4. 'token' → logprob: -16.250051498413086
    5. 'id' → logprob: -16.500051498413086
    6. 'self' → logprob: -16.750051498413086
    7. '   ' → logprob: -17.000051498413086
    8. '__' → logprob: -17.375051498413086
    9. '_tokens' → logprob: -17.500051498413086
    10. '++' → logprob: -17.625051498413086

Token 2406: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3868899643421173
    2. '+=' → logprob: -1.136889934539795
    3. '+' → logprob: -11.261890411376953
    4. '=' → logprob: -13.136890411376953
    5. ')' → logprob: -13.511890411376953
    6. '   ' → logprob: -13.761890411376953
    7. ']+=' → logprob: -14.011890411376953
    8. '+="' → logprob: -15.761890411376953
    9. '[' → logprob: -15.886890411376953
    10. '+='' → logprob: -16.011890411376953

Token 2407: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -22.375
    4. '```' → logprob: -22.875
    5. '۱' → logprob: -24.375
    6. '
' → logprob: -24.75
    7. '１' → logprob: -24.875
    8. '0' → logprob: -25.25
    9. '  ' → logprob: -25.375
    10. '`' → logprob: -25.6875

Token 2408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '```' → logprob: -23.875
    4. '１' → logprob: -24.125
    5. '   ' → logprob: -24.75
    6. '
' → logprob: -24.75
    7. '۱' → logprob: -25.375
    8. '`' → logprob: -25.75
    9. '0' → logprob: -26.0
    10. 'int' → logprob: -26.125

Token 2409: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007786900736391544
    2. 'return' → logprob: -5.507786750793457
    3. '           ' → logprob: -5.882786750793457
    4. ' return' → logprob: -8.632786750793457
    5. '   ' → logprob: -8.757786750793457
    6. '\' → logprob: -9.257786750793457
    7. ':return' → logprob: -9.382786750793457
    8. '	' → logprob: -9.882786750793457
    9. '<|end|>' → logprob: -9.882786750793457
    10. '               ' → logprob: -10.132786750793457

Token 2410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043537791818380356
    2. '           ' → logprob: -3.1685378551483154
    3. 'return' → logprob: -7.543537616729736
    4. ' return' → logprob: -12.668538093566895
    5. '   ' → logprob: -13.543538093566895
    6. '               ' → logprob: -13.793538093566895
    7. '```' → logprob: -13.793538093566895
    8. '          ' → logprob: -15.168538093566895
    9. '{return' → logprob: -15.168538093566895
    10. '[' → logprob: -15.418538093566895

Token 2411: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10071122646331787
    2. 'return' (adapté à ' return') → logprob: -2.3507113456726074
    3. ' return' → logprob: -7.975711345672607
    4. '           ' → logprob: -8.85071086883545
    5. '   ' → logprob: -11.22571086883545
    6. '
' → logprob: -12.97571086883545
    7. '	return' → logprob: -14.10071086883545
    8. '{return' → logprob: -15.10071086883545
    9. ':return' → logprob: -15.22571086883545
    10. '               ' → logprob: -15.85071086883545

Token 2412: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '	self' → logprob: -20.751502990722656
    4. '(self' → logprob: -21.126502990722656
    5. '[self' → logprob: -21.626502990722656
    6. '       ' → logprob: -22.376502990722656
    7. 'Self' → logprob: -24.376502990722656
    8. '   ' → logprob: -24.501502990722656
    9. '_self' → logprob: -24.626502990722656
    10. '
' → logprob: -24.751502990722656

Token 2413: '.page' (ID: 19611)
  Prédit: '.page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.page' → logprob: -6.20603168499656e-05
    2. '.next' → logprob: -9.750061988830566
    3. 'page' → logprob: -13.875061988830566
    4. ' .' → logprob: -14.375061988830566
    5. '.' → logprob: -14.875061988830566
    6. '$page' → logprob: -14.875061988830566
    7. '.path' → logprob: -15.375061988830566
    8. 'next' → logprob: -15.875061988830566
    9. '\.' → logprob: -16.125062942504883
    10. '.point' → logprob: -16.125062942504883

Token 2414: '_to' (ID: 5089)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.004335645120590925
    2. '_to' → logprob: -5.754335880279541
    3. '_token' → logprob: -6.879335880279541
    4. 'id' → logprob: -10.129335403442383
    5. '_ids' → logprob: -10.879335403442383
    6. '_tokens' → logprob: -11.129335403442383
    7. '[' → logprob: -11.629335403442383
    8. 'token' → logprob: -12.004335403442383
    9. 'To' → logprob: -12.129335403442383
    10. '_path' → logprob: -12.254335403442383

Token 2415: '_id' (ID: 1537)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0008290443220175803
    2. 'int' → logprob: -7.125829219818115
    3. '_id' → logprob: -11.000828742980957
    4. '1' → logprob: -13.000828742980957
    5. 'i' → logprob: -13.250828742980957
    6. 'ight' → logprob: -14.500828742980957
    7. 'ind' → logprob: -14.500828742980957
    8. 'idt' → logprob: -14.625828742980957
    9. 'add' → logprob: -14.875828742980957
    10. ' id' → logprob: -15.500828742980957

Token 2416: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. 'canonical' → logprob: -12.875003814697266
    3. '[c' → logprob: -14.875003814697266
    4. '[
' → logprob: -15.750003814697266
    5. ' [' → logprob: -16.125003814697266
    6. ' canonical' → logprob: -16.875003814697266
    7. '\[' → logprob: -16.875003814697266
    8. '[...]' → logprob: -17.250003814697266
    9. '```' → logprob: -17.500003814697266
    10. '_[' → logprob: -17.625003814697266

Token 2417: 'canonical' (ID: 177826)
  Prédit: 'canonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -9.615255839889869e-05
    2. ' canonical' → logprob: -9.250096321105957
    3. 'c' → logprob: -18.12509536743164
    4. 'can' → logprob: -18.25009536743164
    5. 'canon' → logprob: -18.87509536743164
    6. '   ' → logprob: -19.75009536743164
    7. ' ' → logprob: -20.37509536743164
    8. '```' → logprob: -21.25009536743164
    9. '{' → logprob: -21.50009536743164
    10. '[' → logprob: -21.75009536743164

Token 2418: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -3.4285862057004124e-05
    2. 'path' → logprob: -10.37503433227539
    3. '_paths' → logprob: -13.75003433227539
    4. '_' → logprob: -14.87503433227539
    5. 'Path' → logprob: -14.87503433227539
    6. '_PATH' → logprob: -15.75003433227539
    7. ']' → logprob: -15.75003433227539
    8. '```' → logprob: -15.87503433227539
    9. ')' → logprob: -16.12503433227539
    10. '_pat' → logprob: -16.50003433227539

Token 2419: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02038959041237831
    2. ']' → logprob: -4.270389556884766
    3. '}' → logprob: -5.520389556884766
    4. '<|end|>' → logprob: -6.520389556884766
    5. '[' → logprob: -7.395389556884766
    6. ')
' → logprob: -10.645389556884766
    7. '[
' → logprob: -11.020389556884766
    8. '   ' → logprob: -11.145389556884766
    9. '<|end|>' → logprob: -11.395389556884766
    10. '
' → logprob: -11.645389556884766

Token 2420: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2421: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27338504791259766
    2. '   ' → logprob: -1.5233850479125977
    3. '
' → logprob: -4.648385047912598
    4. ' def' → logprob: -5.023385047912598
    5. '```' → logprob: -6.273385047912598
    6. '<|end|>' → logprob: -6.398385047912598
    7. '    
' → logprob: -7.773385047912598
    8. '	def' → logprob: -7.773385047912598
    9. ' ' → logprob: -9.523385047912598
    10. '@' → logprob: -9.523385047912598

Token 2422: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.652451464906335e-05
    2. ' def' → logprob: -11.375016212463379
    3. '   ' → logprob: -12.250016212463379
    4. '
' → logprob: -16.000017166137695
    5. '```' → logprob: -16.250017166137695
    6. 'de' → logprob: -18.625017166137695
    7. '	def' → logprob: -18.750017166137695
    8. 'd' → logprob: -19.500017166137695
    9. 'Def' → logprob: -20.250017166137695
    10. '`' → logprob: -20.750017166137695

Token 2423: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0014271405525505543
    2. ' get' → logprob: -6.751427173614502
    3. 'lookup' → logprob: -8.751426696777344
    4. 'find' → logprob: -9.501426696777344
    5. 'has' → logprob: -11.126426696777344
    6. 'resolve' → logprob: -12.501426696777344
    7. 'query' → logprob: -13.126426696777344
    8. 'match' → logprob: -13.876426696777344
    9. 'def' → logprob: -14.001426696777344
    10. 'remove' → logprob: -15.001426696777344

Token 2424: '_id' (ID: 1537)
  Prédit: '_page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_page' → logprob: -0.002577559556812048
    2. '_id' → logprob: -6.002577781677246
    3. '_path' → logprob: -9.877577781677246
    4. 'page' → logprob: -10.502577781677246
    5. '_by' → logprob: -12.127577781677246
    6. '_pages' → logprob: -12.252577781677246
    7. 'id' → logprob: -12.502577781677246
    8. '_url' → logprob: -12.877577781677246
    9. 'Page' → logprob: -13.377577781677246
    10. '_count' → logprob: -14.127577781677246

Token 2425: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008038705214858055
    2. '(
' → logprob: -5.383038520812988
    3. '(self' → logprob: -6.008038520812988
    4. '<|end|>' → logprob: -7.758038520812988
    5. '('' → logprob: -8.133038520812988
    6. ' (' → logprob: -9.508038520812988
    7. '(token' → logprob: -10.633038520812988
    8. '(`' → logprob: -11.008038520812988
    9. '   ' → logprob: -11.258038520812988
    10. ' ' → logprob: -11.383038520812988

Token 2426: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011794435791671276
    2. '(
' → logprob: -4.636794567108154
    3. ')' → logprob: -7.136794567108154
    4. '(self' → logprob: -8.136794090270996
    5. '('' → logprob: -8.511794090270996
    6. ',' → logprob: -8.761794090270996
    7. '<|end|>' → logprob: -9.386794090270996
    8. ' (' → logprob: -9.511794090270996
    9. '(token' → logprob: -9.886794090270996
    10. '(`' → logprob: -10.136794090270996

Token 2427: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.033819735050201416
    2. 'self' → logprob: -3.5338196754455566
    3. 'path' → logprob: -5.658819675445557
    4. 'page' → logprob: -8.033820152282715
    5. ' canonical' → logprob: -8.533820152282715
    6. 'key' → logprob: -10.033820152282715
    7. ')' → logprob: -12.908820152282715
    8. 'url' → logprob: -13.158820152282715
    9. ' self' → logprob: -13.533820152282715
    10. 'pathname' → logprob: -13.908820152282715

Token 2428: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.00021176543668843806
    2. '_' → logprob: -8.750211715698242
    3. '_p' → logprob: -11.000211715698242
    4. '_paths' → logprob: -11.500211715698242
    5. '_pat' → logprob: -11.875211715698242
    6. ')_' → logprob: -12.000211715698242
    7. '_pa' → logprob: -13.125211715698242
    8. ')' → logprob: -13.250211715698242
    9. '_PATH' → logprob: -13.250211715698242
    10. 'Path' → logprob: -13.500211715698242

Token 2429: ':' (ID: 25)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.46604108810424805
    2. ',' → logprob: -1.091041088104248
    3. '   ' → logprob: -4.716041088104248
    4. ')' → logprob: -4.716041088104248
    5. '(self' → logprob: -4.966041088104248
    6. '       ' → logprob: -5.841041088104248
    7. '(c' → logprob: -6.466041088104248
    8. '(' → logprob: -6.591041088104248
    9. '):' → logprob: -6.716041088104248
    10. 'get' → logprob: -6.841041088104248

Token 2430: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.007628988474607468
    2. ' str' → logprob: -5.507628917694092
    3. 'canonical' → logprob: -6.007628917694092
    4. 'Optional' → logprob: -7.507628917694092
    5. ')' → logprob: -8.25762939453125
    6. ' Optional' → logprob: -8.75762939453125
    7. '[str' → logprob: -9.50762939453125
    8. ' canonical' → logprob: -10.25762939453125
    9. 'optional' → logprob: -13.00762939453125
    10. '   ' → logprob: -13.13262939453125

Token 2431: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45265188813209534
    2. '):' → logprob: -1.202651858329773
    3. '.get' → logprob: -3.2026519775390625
    4. '[' → logprob: -4.7026519775390625
    5. ':' → logprob: -4.9526519775390625
    6. '):
' → logprob: -5.7026519775390625
    7. '   ' → logprob: -6.8276519775390625
    8. ',' → logprob: -7.4526519775390625
    9. '.' → logprob: -7.9526519775390625
    10. '[token' → logprob: -8.077651977539062

Token 2432: ' ->' (ID: 2747)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.11875834316015244
    2. '(self' → logprob: -2.4937584400177
    3. '(
' → logprob: -4.743758201599121
    4. '(' → logprob: -4.993758201599121
    5. '[' → logprob: -5.243758201599121
    6. '       ' → logprob: -6.243758201599121
    7. '   ' → logprob: -6.493758201599121
    8. 'self' → logprob: -6.993758201599121
    9. '[self' → logprob: -6.993758201599121
    10. '.' → logprob: -7.118758201599121

Token 2433: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -4.334533878136426e-05
    2. 'int' → logprob: -10.500042915344238
    3. ' Optional' → logprob: -11.250042915344238
    4. 'Union' → logprob: -13.000042915344238
    5. '(Optional' → logprob: -14.625042915344238
    6. 'optional' → logprob: -17.500043869018555
    7. '_optional' → logprob: -17.500043869018555
    8. 'None' → logprob: -18.750043869018555
    9. '	Optional' → logprob: -18.875043869018555
    10. '   ' → logprob: -19.750043869018555

Token 2434: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.20149607956409454
    2. '[str' → logprob: -1.7014961242675781
    3. 'int' → logprob: -10.076496124267578
    4. '[' → logprob: -10.201496124267578
    5. '[Int' → logprob: -13.076496124267578
    6. '[
' → logprob: -14.326496124267578
    7. 'str' → logprob: -14.951496124267578
    8. '(int' → logprob: -16.201496124267578
    9. '<int' → logprob: -16.701496124267578
    10. '[List' → logprob: -16.701496124267578

Token 2435: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9345601797103882
    2. ':' → logprob: -1.1845601797103882
    3. '):
' → logprob: -2.0595602989196777
    4. ')' → logprob: -3.0595602989196777
    5. '[' → logprob: -3.1845602989196777
    6. '   ' → logprob: -3.8095602989196777
    7. '.' → logprob: -4.059560298919678
    8. ']:' → logprob: -4.309560298919678
    9. ']' → logprob: -4.434560298919678
    10. ':
' → logprob: -4.809560298919678

Token 2436: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6131781935691833
    2. '(' → logprob: -1.6131782531738281
    3. '(
' → logprob: -2.113178253173828
    4. '       ' → logprob: -2.363178253173828
    5. '(c' → logprob: -3.738178253173828
    6. 'self' → logprob: -4.488178253173828
    7. 'return' → logprob: -5.488178253173828
    8. '   ' → logprob: -5.613178253173828
    9. ' (' → logprob: -7.613178253173828
    10. ' return' → logprob: -8.613178253173828

Token 2437: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19053973257541656
    2. ' return' → logprob: -3.065539836883545
    3. '(
' → logprob: -3.065539836883545
    4. '(' → logprob: -3.190539836883545
    5. 'self' → logprob: -4.440539836883545
    6. '(c' → logprob: -4.940539836883545
    7. '(self' → logprob: -5.065539836883545
    8. '       ' → logprob: -5.565539836883545
    9. '   ' → logprob: -5.565539836883545
    10. '(return' → logprob: -6.065539836883545

Token 2438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30806875228881836
    2. 'return' → logprob: -1.5580687522888184
    3. ' return' → logprob: -3.0580687522888184
    4. 'self' → logprob: -4.933068752288818
    5. '   ' → logprob: -8.308069229125977
    6. ' self' → logprob: -9.183069229125977
    7. '      ' → logprob: -11.683069229125977
    8. '[self' → logprob: -11.683069229125977
    9. '[' → logprob: -11.808069229125977
    10. '           ' → logprob: -12.058069229125977

Token 2439: ' Get' (ID: 2942)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02533676289021969
    2. '       ' → logprob: -3.775336742401123
    3. 'return' → logprob: -6.525336742401123
    4. '
' → logprob: -8.150337219238281
    5. '   ' → logprob: -8.400337219238281
    6. ' def' → logprob: -9.525337219238281
    7. 'Return' → logprob: -10.525337219238281
    8. 'Get' (adapté à ' Get') → logprob: -12.150337219238281
    9. ' return' → logprob: -13.775337219238281
    10. '           ' → logprob: -14.150337219238281

Token 2440: ' page' (ID: 3011)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22378242015838623
    2. 'canonical' → logprob: -1.8487824201583862
    3. ' self' → logprob: -3.598782539367676
    4. ' canonical' → logprob: -4.223782539367676
    5. 'Optional' → logprob: -8.598782539367676
    6. '[
' → logprob: -9.223782539367676
    7. '[self' → logprob: -9.348782539367676
    8. 'c' → logprob: -9.473782539367676
    9. '[str' → logprob: -9.473782539367676
    10. ' the' → logprob: -9.598782539367676

Token 2441: ' id' (ID: 1211)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.35313794016838074
    2. '_to' → logprob: -1.2281379699707031
    3. 'id' → logprob: -6.228137969970703
    4. '_token' → logprob: -7.353137969970703
    5. 'Id' → logprob: -8.103137969970703
    6. 'To' → logprob: -8.353137969970703
    7. '_path' → logprob: -8.478137969970703
    8. '   ' → logprob: -9.103137969970703
    9. '_ids' → logprob: -9.103137969970703
    10. '_view' → logprob: -9.228137969970703

Token 2442: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35535261034965515
    2. '(
' → logprob: -2.1053526401519775
    3. '(self' → logprob: -2.7303526401519775
    4. '(c' → logprob: -3.2303526401519775
    5. '       ' → logprob: -3.7303526401519775
    6. '[' → logprob: -3.9803526401519775
    7. '   ' → logprob: -4.605352401733398
    8. '('' → logprob: -5.355352401733398
    9. 'self' → logprob: -5.605352401733398
    10. '.get' → logprob: -5.980352401733398

Token 2443: ' exists' (ID: 13031)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.47410470247268677
    2. ' canonical' → logprob: -0.9741047024726868
    3. 'exists' → logprob: -11.349104881286621
    4. ' exists' → logprob: -12.349104881286621
    5. ' present' → logprob: -13.349104881286621
    6. 'self' → logprob: -13.724104881286621
    7. 'possible' → logprob: -13.724104881286621
    8. ' canon' → logprob: -13.974104881286621
    9. 'present' → logprob: -14.224104881286621
    10. 'canon' → logprob: -14.349104881286621

Token 2444: '.
' (ID: 558)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.019836600869894028
    2. '       ' → logprob: -4.76983642578125
    3. '(
' → logprob: -5.14483642578125
    4. '(' → logprob: -6.01983642578125
    5. 'self' → logprob: -6.76983642578125
    6. '.get' → logprob: -7.01983642578125
    7. '   ' → logprob: -7.89483642578125
    8. ',' → logprob: -8.89483642578125
    9. '[' → logprob: -9.51983642578125
    10. ' (' → logprob: -10.14483642578125

Token 2445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012075258418917656
    2. 'self' → logprob: -5.262075424194336
    3. 'def' → logprob: -5.762075424194336
    4. '(self' → logprob: -6.512075424194336
    5. '   ' → logprob: -7.137075424194336
    6. ' def' → logprob: -7.637075424194336
    7. '
' → logprob: -8.012075424194336
    8. ' self' → logprob: -8.512075424194336
    9. 'return' → logprob: -8.762075424194336
    10. '           ' → logprob: -9.137075424194336

Token 2446: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1065719723701477
    2. '(self' → logprob: -3.106571912765503
    3. 'self' → logprob: -3.731571912765503
    4. 'return' → logprob: -3.981571912765503
    5. '   ' → logprob: -4.856572151184082
    6. '(
' → logprob: -5.981572151184082
    7. '(' → logprob: -6.606572151184082
    8. 'def' → logprob: -6.981572151184082
    9. ' return' → logprob: -7.731572151184082
    10. ' (' → logprob: -8.356572151184082

Token 2447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00881523173302412
    2. 'return' → logprob: -4.758815288543701
    3. ' return' → logprob: -8.633814811706543
    4. '   ' → logprob: -10.883814811706543
    5. '           ' → logprob: -13.508814811706543
    6. 'if' → logprob: -13.633814811706543
    7. '```' → logprob: -14.383814811706543
    8. '      ' → logprob: -15.383814811706543
    9. ' if' → logprob: -15.633814811706543
    10. 'def' → logprob: -16.00881576538086

Token 2448: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00012713817704934627
    2. '       ' → logprob: -9.000126838684082
    3. ' return' → logprob: -12.500126838684082
    4. 'if' → logprob: -19.2501277923584
    5. '   ' → logprob: -19.3751277923584
    6. 'result' → logprob: -20.1251277923584
    7. 'self' → logprob: -20.5001277923584
    8. '	return' → logprob: -21.2501277923584
    9. '```' → logprob: -21.6251277923584
    10. '
' → logprob: -22.0001277923584

Token 2449: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078401252627373
    2. ' self' → logprob: -5.504078388214111
    3. 'None' → logprob: -20.004077911376953
    4. '(self' → logprob: -20.379077911376953
    5. '
' → logprob: -21.254077911376953
    6. '	self' → logprob: -22.129077911376953
    7. '[self' → logprob: -22.129077911376953
    8. '=self' → logprob: -22.754077911376953
    9. '       ' → logprob: -23.254077911376953
    10. ' None' → logprob: -23.629077911376953

Token 2450: '.page' (ID: 19611)
  Prédit: '.page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.page' → logprob: -7.107425062713446e-06
    2. '.user' → logprob: -12.250006675720215
    3. '.' → logprob: -13.625006675720215
    4. ' .' → logprob: -14.875006675720215
    5. '.file' → logprob: -15.875006675720215
    6. '.pag' → logprob: -16.75000762939453
    7. '.Page' → logprob: -17.00000762939453
    8. '.p' → logprob: -17.00000762939453
    9. '.code' → logprob: -17.00000762939453
    10. '.pages' → logprob: -17.50000762939453

Token 2451: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.2617008400848135e-05
    2. '.get' → logprob: -10.375032424926758
    3. '_get' → logprob: -14.125032424926758
    4. '._' → logprob: -15.000032424926758
    5. 'get' → logprob: -15.875032424926758
    6. '_path' → logprob: -17.750032424926758
    7. 'To' → logprob: -17.750032424926758
    8. '_id' → logprob: -18.000032424926758
    9. '_for' → logprob: -18.375032424926758
    10. '   ' → logprob: -18.500032424926758

Token 2452: '_id' (ID: 1537)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.009545580483973026
    2. 'd' → logprob: -4.759545803070068
    3. '_id' → logprob: -7.384545803070068
    4. 'get' → logprob: -9.25954532623291
    5. 'dict' → logprob: -9.38454532623291
    6. 'int' → logprob: -9.75954532623291
    7. 'None' → logprob: -10.88454532623291
    8. 'key' → logprob: -11.50954532623291
    9. 'n' → logprob: -11.75954532623291
    10. 'nt' → logprob: -11.88454532623291

Token 2453: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.5451681974809617e-05
    2. '.' → logprob: -11.125015258789062
    3. 'get' → logprob: -14.625015258789062
    4. ' .' → logprob: -15.500015258789062
    5. '[' → logprob: -18.625015258789062
    6. '   ' → logprob: -19.125015258789062
    7. '.setdefault' → logprob: -20.000015258789062
    8. '       ' → logprob: -20.250015258789062
    9. '_get' → logprob: -20.625015258789062
    10. '
' → logprob: -20.750015258789062

Token 2454: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0003392767102923244
    2. '(' → logprob: -8.00033950805664
    3. 'canonical' → logprob: -12.62533950805664
    4. '(
' → logprob: -15.00033950805664
    5. ' canonical' → logprob: -16.50033950805664
    6. ' (' → logprob: -16.62533950805664
    7. '(can' → logprob: -17.37533950805664
    8. '('' → logprob: -17.37533950805664
    9. '	c' → logprob: -18.12533950805664
    10. 'Canonical' → logprob: -18.50033950805664

Token 2455: 'anonical' (ID: 143898)
  Prédit: 'anonical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anonical' → logprob: -6.265633419388905e-05
    2. 'canonical' → logprob: -9.750062942504883
    3. 'an' → logprob: -12.750062942504883
    4. 'anical' → logprob: -14.125062942504883
    5. '[' → logprob: -15.625062942504883
    6. 'a' → logprob: -16.000062942504883
    7. 'anon' → logprob: -16.000062942504883
    8. ' canonical' → logprob: -16.375062942504883
    9. 'on' → logprob: -16.750062942504883
    10. 'Canonical' → logprob: -17.500062942504883

Token 2456: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -1.0802738870552275e-05
    2. 'path' → logprob: -11.50001049041748
    3. ')' → logprob: -14.62501049041748
    4. 'Path' → logprob: -16.625011444091797
    5. '_PATH' → logprob: -17.500011444091797
    6. '_paths' → logprob: -17.750011444091797
    7. '_pat' → logprob: -17.750011444091797
    8. '._' → logprob: -18.000011444091797
    9. '   ' → logprob: -18.125011444091797
    10. '-path' → logprob: -18.375011444091797

Token 2457: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043984793592244387
    2. ',' → logprob: -8.125439643859863
    3. '[' → logprob: -9.125439643859863
    4. '   ' → logprob: -11.375439643859863
    5. ')
' → logprob: -11.500439643859863
    6. '       ' → logprob: -12.375439643859863
    7. '')' → logprob: -13.125439643859863
    8. '[
' → logprob: -13.750439643859863
    9. ']' → logprob: -13.875439643859863
    10. ' )' → logprob: -14.000439643859863

Token 2458: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13000348210334778
    2. '   ' → logprob: -2.2550034523010254
    3. '```' → logprob: -4.130003452301025
    4. '    
' → logprob: -8.130003929138184
    5. '
' → logprob: -8.505003929138184
    6. ' def' → logprob: -9.005003929138184
    7. '<|end|>' → logprob: -9.130003929138184
    8. '	def' → logprob: -9.755003929138184
    9. 'class' → logprob: -10.255003929138184
    10. '\' → logprob: -10.630003929138184

Token 2459: ' Pathfinder' (ID: 190091)
  Prédit: 'Link'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Link' → logprob: -1.560463309288025
    2. 'URL' → logprob: -1.685463309288025
    3. 'Path' → logprob: -1.810463309288025
    4. 'Page' → logprob: -2.1854634284973145
    5. 'Redirect' → logprob: -2.1854634284973145
    6. 'Url' → logprob: -2.5604634284973145
    7. 'Web' → logprob: -3.5604634284973145
    8. 'Request' → logprob: -3.5604634284973145
    9. 'Solution' → logprob: -4.1854634284973145
    10. 'Router' → logprob: -4.1854634284973145

Token 2460: 'Agent' (ID: 18086)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012781442143023014
    2. ':
' → logprob: -4.512781620025635
    3. 'Path' → logprob: -7.262781620025635
    4. '(' → logprob: -7.387781620025635
    5. '{' → logprob: -8.137781143188477
    6. '.' → logprob: -10.512781143188477
    7. '():' → logprob: -11.387781143188477
    8. '(
' → logprob: -11.512781143188477
    9. '(Path' → logprob: -11.512781143188477
    10. 'Normalizer' → logprob: -12.137781143188477

Token 2461: 'Software' (ID: 32140)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024934951215982437
    2. ':
' → logprob: -6.002493381500244
    3. '(' → logprob: -11.127493858337402
    4. ':

' → logprob: -13.752493858337402
    5. ' :' → logprob: -14.252493858337402
    6. ':def' → logprob: -14.877493858337402
    7. '{' → logprob: -15.252493858337402
    8. '):' → logprob: -15.752493858337402
    9. '(
' → logprob: -15.877493858337402
    10. '():' → logprob: -16.252492904663086

Token 2462: 'Module' (ID: 5300)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014389235293492675
    2. ':
' → logprob: -6.626439094543457
    3. '(' → logprob: -9.251439094543457
    4. '):' → logprob: -13.126439094543457
    5. ':def' → logprob: -13.376439094543457
    6. ':

' → logprob: -13.501439094543457
    7. '.' → logprob: -13.501439094543457
    8. '(
' → logprob: -13.501439094543457
    9. '<|end|>' → logprob: -13.626439094543457
    10. ' :' → logprob: -13.876439094543457

Token 2463: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002078409306704998
    2. ':
' → logprob: -6.252078533172607
    3. '(' → logprob: -9.00207805633545
    4. '(
' → logprob: -12.25207805633545
    5. 'class' → logprob: -12.37707805633545
    6. ':def' → logprob: -12.50207805633545
    7. 'def' → logprob: -12.62707805633545
    8. '.' → logprob: -13.37707805633545
    9. '   ' → logprob: -13.75207805633545
    10. '():' → logprob: -13.87707805633545

Token 2464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016469959169626236
    2. 'class' → logprob: -4.141469955444336
    3. '	class' → logprob: -9.016469955444336
    4. '
' → logprob: -9.516469955444336
    5. '    
' → logprob: -9.641469955444336
    6. ' class' → logprob: -9.891469955444336
    7. ':' → logprob: -10.141469955444336
    8. '```' → logprob: -10.516469955444336
    9. '(' → logprob: -10.641469955444336
    10. ':
' → logprob: -11.516469955444336

Token 2465: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.348898321390152
    2. 'class' → logprob: -1.2238982915878296
    3. 'def' → logprob: -8.723897933959961
    4. '__' → logprob: -8.848897933959961
    5. ' class' → logprob: -10.598897933959961
    6. '
' → logprob: -10.598897933959961
    7. '    
' → logprob: -10.973897933959961
    8. '	class' → logprob: -10.973897933959961
    9. '"""
' (adapté à ' """
') → logprob: -11.098897933959961
    10. '```' → logprob: -11.723897933959961

Token 2466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09221599996089935
    2. 'class' → logprob: -2.4672160148620605
    3. 'def' → logprob: -6.2172160148620605
    4. '__' → logprob: -7.5922160148620605
    5. '    ' → logprob: -7.8422160148620605
    6. '"""
' → logprob: -8.842215538024902
    7. '  ' → logprob: -9.842215538024902
    8. '```' → logprob: -9.842215538024902
    9. ' def' → logprob: -10.467215538024902
    10. '    
' → logprob: -10.717215538024902

Token 2467: ' Main' (ID: 7956)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.029924385249614716
    2. '   ' → logprob: -3.5299243927001953
    3. 'def' → logprob: -9.529924392700195
    4. '"""
' → logprob: -10.029924392700195
    5. '```' → logprob: -10.404924392700195
    6. '
' → logprob: -11.279924392700195
    7. ' class' → logprob: -12.404924392700195
    8. '__' → logprob: -12.404924392700195
    9. '"""' → logprob: -13.654924392700195
    10. '``' → logprob: -13.904924392700195

Token 2468: ' orchestr' (ID: 109873)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03821441903710365
    2. ' class' → logprob: -3.2882144451141357
    3. '   ' → logprob: -8.913214683532715
    4. 'def' → logprob: -11.163214683532715
    5. ' code' → logprob: -12.288214683532715
    6. '_class' → logprob: -12.538214683532715
    7. '
' → logprob: -12.913214683532715
    8. ' def' → logprob: -13.038214683532715
    9. '-class' → logprob: -13.163214683532715
    10. '```' → logprob: -13.288214683532715

Token 2469: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.286227822303772
    2. 'ation' → logprob: -1.411227822303772
    3. 'ates' → logprob: -5.411227703094482
    4. 'ating' → logprob: -8.41122817993164
    5. 'a' → logprob: -9.03622817993164
    6. '   ' → logprob: -9.53622817993164
    7. 'ater' → logprob: -10.16122817993164
    8. 'class' → logprob: -10.41122817993164
    9. '```' → logprob: -10.66122817993164
    10. 'at' → logprob: -11.03622817993164

Token 2470: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.04325266182422638
    2. '   ' → logprob: -4.043252468109131
    3. ' class' → logprob: -4.418252468109131
    4. ':' → logprob: -4.543252468109131
    5. ':
' → logprob: -6.668252468109131
    6. ' of' → logprob: -7.918252468109131
    7. 'def' → logprob: -8.668252944946289
    8. ' for' → logprob: -9.668252944946289
    9. '.' → logprob: -10.168252944946289
    10. '<|end|>' → logprob: -10.293252944946289

Token 2471: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.33849823474884033
    2. ':' → logprob: -1.9634982347488403
    3. '   ' → logprob: -2.463498115539551
    4. ':
' → logprob: -2.838498115539551
    5. '(
' → logprob: -6.838498115539551
    6. ' class' → logprob: -6.838498115539551
    7. '(' → logprob: -8.33849811553955
    8. '.' → logprob: -8.83849811553955
    9. '(class' → logprob: -9.08849811553955
    10. '```' → logprob: -9.21349811553955

Token 2472: ' problem' (ID: 4792)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.6183255910873413
    2. 'the' → logprob: -1.6183255910873413
    3. 'Path' → logprob: -2.243325710296631
    4. ' path' → logprob: -3.118325710296631
    5. 'normal' → logprob: -3.493325710296631
    6. ' the' → logprob: -3.493325710296631
    7. 'handling' → logprob: -4.243325710296631
    8. 'processing' → logprob: -4.868325710296631
    9. 'code' → logprob: -4.993325710296631
    10. ' handling' → logprob: -5.368325710296631

Token 2473: ' solution' (ID: 7578)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3096093237400055
    2. '.' → logprob: -2.4346094131469727
    3. '-solving' → logprob: -2.4346094131469727
    4. ':
' → logprob: -3.5596094131469727
    5. '
' → logprob: -4.309609413146973
    6. ':' → logprob: -4.684609413146973
    7. '"""
' → logprob: -5.309609413146973
    8. ' class' → logprob: -5.309609413146973
    9. '   ' → logprob: -5.559609413146973
    10. 'solution' → logprob: -5.809609413146973

Token 2474: '.
' (ID: 558)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09802738577127457
    2. '   ' → logprob: -2.848027467727661
    3. ':' → logprob: -3.473027467727661
    4. '):
' → logprob: -5.848027229309082
    5. 'class' → logprob: -6.848027229309082
    6. '
' → logprob: -8.348027229309082
    7. '```' → logprob: -9.473027229309082
    8. '):' → logprob: -10.473027229309082
    9. ',' → logprob: -10.848027229309082
    10. ' class' → logprob: -11.223027229309082

Token 2475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018763974076136947
    2. 'class' → logprob: -6.501876354217529
    3. '    
' → logprob: -8.251876831054688
    4. '
' → logprob: -9.251876831054688
    5. ' class' → logprob: -11.876876831054688
    6. '    ' → logprob: -12.751876831054688
    7. '```' → logprob: -12.751876831054688
    8. 'def' → logprob: -13.751876831054688
    9. '	class' → logprob: -14.876876831054688
    10. '  ' → logprob: -14.876876831054688

Token 2476: ' Parses' (ID: 179117)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002559753193054348
    2. 'def' → logprob: -9.250255584716797
    3. 'class' → logprob: -9.625255584716797
    4. '
' → logprob: -9.875255584716797
    5. '    
' → logprob: -10.375255584716797
    6. ' def' → logprob: -12.000255584716797
    7. '    ' → logprob: -13.000255584716797
    8. '```' → logprob: -13.875255584716797
    9. '	def' → logprob: -14.125255584716797
    10. '  ' → logprob: -15.375255584716797

Token 2477: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.48292917013168335
    2. ' input' → logprob: -1.7329292297363281
    3. 'and' → logprob: -2.732929229736328
    4. 'paths' → logprob: -2.857929229736328
    5. ' and' → logprob: -3.732929229736328
    6. 'inputs' → logprob: -3.982929229736328
    7. 'the' → logprob: -5.107929229736328
    8. ' paths' → logprob: -5.107929229736328
    9. 'import' → logprob: -5.232929229736328
    10. ' the' → logprob: -5.482929229736328

Token 2478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31977957487106323
    2. ' and' → logprob: -2.319779634475708
    3. 'and' → logprob: -3.069779634475708
    4. '   ' → logprob: -3.319779634475708
    5. 'paths' → logprob: -4.194779396057129
    6. 'data' → logprob: -4.444779396057129
    7. 'def' → logprob: -4.694779396057129
    8. '_paths' → logprob: -4.694779396057129
    9. '<|end|>' → logprob: -4.944779396057129
    10. '.' → logprob: -4.944779396057129

Token 2479: ' manages' (ID: 47891)
  Prédit: 'stores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stores' → logprob: -1.1845394372940063
    2. 'normal' → logprob: -1.3095394372940063
    3. 'build' → logprob: -1.5595394372940063
    4. ' normal' → logprob: -1.9345394372940063
    5. 'process' → logprob: -3.309539318084717
    6. ' stores' → logprob: -4.434539318084717
    7. ' processes' → logprob: -5.059539318084717
    8. '   ' → logprob: -5.559539318084717
    9. ' builds' → logprob: -5.559539318084717
    10. 'construct' → logprob: -5.934539318084717

Token 2480: ' filesystem' (ID: 105930)
  Prédit: ' normalization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' normalization' → logprob: -1.184204339981079
    2. 'filesystem' → logprob: -1.309204339981079
    3. 'normal' → logprob: -2.309204339981079
    4. ' data' → logprob: -2.809204339981079
    5. ' normal' → logprob: -3.059204339981079
    6. 'paths' → logprob: -3.184204339981079
    7. ' internal' → logprob: -3.184204339981079
    8. 'data' → logprob: -3.934204339981079
    9. 'internal' → logprob: -3.934204339981079
    10. ' file' → logprob: -4.1842041015625

Token 2481: ' model' (ID: 2359)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2649480998516083
    2. 'and' → logprob: -2.2649481296539307
    3. 'model' → logprob: -2.6399481296539307
    4. ',
' → logprob: -4.139947891235352
    5. 'state' → logprob: -4.389947891235352
    6. 'representation' → logprob: -4.889947891235352
    7. 'paths' → logprob: -4.889947891235352
    8. ' and' → logprob: -5.014947891235352
    9. 'structure' → logprob: -5.764947891235352
    10. '   ' → logprob: -6.639947891235352

Token 2482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062426403164863586
    2. 'and' → logprob: -2.9374263286590576
    3. '   ' → logprob: -5.562426567077637
    4. ' and' → logprob: -6.062426567077637
    5. ',
' → logprob: -6.687426567077637
    6. '
' → logprob: -10.562426567077637
    7. '<|end|>' → logprob: -11.312426567077637
    8. ' ,' → logprob: -11.562426567077637
    9. 'import' → logprob: -11.687426567077637
    10. 'class' → logprob: -11.687426567077637

Token 2483: ' normalization' (ID: 115461)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.059471067041158676
    2. ' normal' → logprob: -2.9344711303710938
    3. 'and' → logprob: -6.184471130371094
    4. 'handles' → logprob: -7.309471130371094
    5. 'stores' → logprob: -7.809471130371094
    6. 'per' → logprob: -8.184471130371094
    7. 'build' → logprob: -8.309471130371094
    8. 'matches' → logprob: -8.434471130371094
    9. ' and' → logprob: -8.809471130371094
    10. 'process' → logprob: -9.309471130371094

Token 2484: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1294160932302475
    2. 'and' → logprob: -2.129415988922119
    3. '   ' → logprob: -6.254415988922119
    4. ' and' → logprob: -7.754415988922119
    5. ',
' → logprob: -10.004416465759277
    6. '```' → logprob: -10.379416465759277
    7. ',and' → logprob: -10.379416465759277
    8. 'class' → logprob: -12.129416465759277
    9. 's' → logprob: -12.379416465759277
    10. '
' → logprob: -12.504416465759277

Token 2485: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.058565106242895126
    2. 'matching' → logprob: -3.433565139770508
    3. 'registry' → logprob: -4.433565139770508
    4. ' and' → logprob: -5.058565139770508
    5. 'mapping' → logprob: -5.933565139770508
    6. 'web' → logprob: -7.433565139770508
    7. 'matches' → logprob: -7.433565139770508
    8. 'lookup' → logprob: -7.808565139770508
    9. 'page' → logprob: -7.808565139770508
    10. 'path' → logprob: -7.933565139770508

Token 2486: ' queries' (ID: 32122)
  Prédit: 'matching'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matching' → logprob: -0.5201168060302734
    2. 'mapping' → logprob: -1.7701168060302734
    3. 'query' → logprob: -2.7701168060302734
    4. 'page' → logprob: -2.8951168060302734
    5. 'registry' → logprob: -3.1451168060302734
    6. 'web' → logprob: -3.8951168060302734
    7. 'path' → logprob: -4.270116806030273
    8. 'queries' → logprob: -4.395116806030273
    9. 'lookup' → logprob: -4.520116806030273
    10. 'resolution' → logprob: -5.270116806030273

Token 2487: ' answers' (ID: 14716)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.39769673347473145
    2. ',' → logprob: -1.6476967334747314
    3. '   ' → logprob: -3.0226967334747314
    4. 'and' → logprob: -3.5226967334747314
    5. 'class' → logprob: -3.6476967334747314
    6. '<|end|>' → logprob: -5.022696495056152
    7. '```' → logprob: -5.022696495056152
    8. '
' → logprob: -5.397696495056152
    9. 'def' → logprob: -5.647696495056152
    10. ' and' → logprob: -6.147696495056152

Token 2488: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009257075376808643
    2. '.' → logprob: -5.384256839752197
    3. ':' → logprob: -6.259256839752197
    4. ',' → logprob: -6.634256839752197
    5. ':
' → logprob: -7.259256839752197
    6. '
' → logprob: -8.384257316589355
    7. 'class' → logprob: -8.884257316589355
    8. '.
' → logprob: -9.134257316589355
    9. '```' → logprob: -9.259257316589355
    10. '    
' → logprob: -10.884257316589355

Token 2489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016472071874886751
    2. 'class' → logprob: -6.626646995544434
    3. '    
' → logprob: -9.126646995544434
    4. '
' → logprob: -9.126646995544434
    5. '```' → logprob: -9.376646995544434
    6. '    ' → logprob: -12.126646995544434
    7. '(' → logprob: -13.376646995544434
    8. 'import' → logprob: -13.751646995544434
    9. 'def' → logprob: -13.751646995544434
    10. ' class' → logprob: -13.876646995544434

Token 2490: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003792350646108389
    2. 'class' → logprob: -5.6287922859191895
    3. 'def' → logprob: -9.378792762756348
    4. '
' → logprob: -9.503792762756348
    5. '    
' → logprob: -11.128792762756348
    6. '```' → logprob: -11.503792762756348
    7. '    ' → logprob: -13.128792762756348
    8. ' class' → logprob: -13.253792762756348
    9. ' ' → logprob: -13.503792762756348
    10. ' def' → logprob: -13.878792762756348

Token 2491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023381279781460762
    2. 'def' → logprob: -3.898381233215332
    3. 'class' → logprob: -6.023381233215332
    4. ' def' → logprob: -8.023381233215332
    5. '```' → logprob: -9.773381233215332
    6. '
' → logprob: -12.023381233215332
    7. '    
' → logprob: -12.273381233215332
    8. '	def' → logprob: -12.273381233215332
    9. 'indent' → logprob: -12.398381233215332
    10. 'import' → logprob: -12.773381233215332

Token 2492: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06708985567092896
    2. '   ' → logprob: -2.942089796066284
    3. ' def' → logprob: -4.942090034484863
    4. 'class' → logprob: -5.442090034484863
    5. '__' → logprob: -7.442090034484863
    6. '```' → logprob: -10.067090034484863
    7. '
' → logprob: -11.442090034484863
    8. 'import' → logprob: -11.817090034484863
    9. '	def' → logprob: -12.442090034484863
    10. 'indent' → logprob: -12.817090034484863

Token 2493: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0792747512459755
    2. 'init' → logprob: -2.7042746543884277
    3. ' __' → logprob: -5.204274654388428
    4. 'def' → logprob: -5.829274654388428
    5. '_init' → logprob: -7.329274654388428
    6. '___' → logprob: -9.204275131225586
    7. '```' → logprob: -10.079275131225586
    8. '__
' → logprob: -11.079275131225586
    9. 'staticmethod' → logprob: -11.204275131225586
    10. 'classmethod' → logprob: -12.204275131225586

Token 2494: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.2617008400848135e-05
    2. '__' → logprob: -11.750032424926758
    3. '_init' → logprob: -11.750032424926758
    4. 'indent' → logprob: -12.500032424926758
    5. 'staticmethod' → logprob: -12.625032424926758
    6. 'code' → logprob: -12.875032424926758
    7. 'classmethod' → logprob: -13.375032424926758
    8. 'def' → logprob: -13.750032424926758
    9. 'tab' → logprob: -14.500032424926758
    10. '```' → logprob: -14.750032424926758

Token 2495: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00013131031300872564
    2. '__' → logprob: -9.375131607055664
    3. '(self' → logprob: -10.375131607055664
    4. '__(
' → logprob: -11.250131607055664
    5. '_(' → logprob: -13.125131607055664
    6. 'self' → logprob: -17.250131607055664
    7. '__('' → logprob: -17.250131607055664
    8. '__((' → logprob: -17.500131607055664
    9. '   ' → logprob: -17.750131607055664
    10. '(' → logprob: -18.000131607055664

Token 2496: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.630610641877865e-06
    2. ')' → logprob: -12.375006675720215
    3. ' self' → logprob: -13.125006675720215
    4. '):
' → logprob: -15.875006675720215
    5. '(self' → logprob: -16.7500057220459
    6. '
' → logprob: -17.2500057220459
    7. '   ' → logprob: -18.1250057220459
    8. ')
' → logprob: -18.3750057220459
    9. '),' → logprob: -18.8750057220459
    10. '	self' → logprob: -19.1250057220459

Token 2497: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5110355019569397
    2. 'self' → logprob: -1.511035442352295
    3. '__(' → logprob: -2.136035442352295
    4. ',' → logprob: -3.261035442352295
    5. '):
' → logprob: -4.261035442352295
    6. '__' → logprob: -6.011035442352295
    7. ')(' → logprob: -6.261035442352295
    8. ')' → logprob: -6.386035442352295
    9. '):' → logprob: -6.761035442352295
    10. '__(
' → logprob: -7.511035442352295

Token 2498: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006204526871442795
    2. '       ' → logprob: -5.256204605102539
    3. ' self' → logprob: -7.131204605102539
    4. '   ' → logprob: -8.756204605102539
    5. '
' → logprob: -11.756204605102539
    6. 'def' → logprob: -13.006204605102539
    7. '	self' → logprob: -13.256204605102539
    8. '(self' → logprob: -15.006204605102539
    9. '        
' → logprob: -15.506204605102539
    10. '```' → logprob: -15.881204605102539

Token 2499: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0031944699585437775
    2. '       ' → logprob: -5.753194332122803
    3. ' self' → logprob: -11.003194808959961
    4. '   ' → logprob: -16.87819480895996
    5. '#' → logprob: -18.12819480895996
    6. '	self' → logprob: -18.37819480895996
    7. '(self' → logprob: -18.50319480895996
    8. '
' → logprob: -18.75319480895996
    9. 'def' → logprob: -19.25319480895996
    10. 'super' → logprob: -19.75319480895996

Token 2500: '.fs' (ID: 82179)
  Prédit: '.fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fs' → logprob: -0.0001589618914294988
    2. ' .' → logprob: -10.62515926361084
    3. 'fs' → logprob: -10.62515926361084
    4. '.f' → logprob: -10.62515926361084
    5. '.file' → logprob: -10.75015926361084
    6. '._' → logprob: -10.75015926361084
    7. '.files' → logprob: -11.50015926361084
    8. '.root' → logprob: -11.75015926361084
    9. '.input' → logprob: -12.25015926361084
    10. '_fs' → logprob: -12.62515926361084

Token 2501: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41610273718833923
    2. '=' → logprob: -1.1661027669906616
    3. '_model' → logprob: -4.041102886199951
    4. '.' → logprob: -4.916102886199951
    5. 'Model' → logprob: -5.916102886199951
    6. 'model' → logprob: -8.541102409362793
    7. '.Model' → logprob: -8.916102409362793
    8. '.=' → logprob: -9.041102409362793
    9. '=None' → logprob: -9.041102409362793
    10. '_models' → logprob: -9.291102409362793

Token 2502: ' File' (ID: 5262)
  Prédit: 'File'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'File' → logprob: -1.0206720617134124e-05
    2. ' File' → logprob: -11.50001049041748
    3. 'Filesystem' → logprob: -21.000009536743164
    4. '	File' → logprob: -21.125009536743164
    5. '   ' → logprob: -22.750009536743164
    6. 'Fil' → logprob: -24.125009536743164
    7. '(File' → logprob: -24.250009536743164
    8. '_File' → logprob: -24.250009536743164
    9. '<File' → logprob: -25.500009536743164
    10. '_file' → logprob: -25.750009536743164

Token 2503: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -1.9743012671824545e-05
    2. 'ystem' → logprob: -11.000020027160645
    3. 'system' → logprob: -14.000020027160645
    4. '_system' → logprob: -14.125020027160645
    5. 'SYSTEM' → logprob: -15.125020027160645
    6. 'Systems' → logprob: -15.250020027160645
    7. '
' → logprob: -15.500020027160645
    8. 'Model' → logprob: -16.250019073486328
    9. '_System' → logprob: -16.625019073486328
    10. '   ' → logprob: -16.625019073486328

Token 2504: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -4.246537173457909e-06
    2. '	Model' → logprob: -14.125003814697266
    3. '   ' → logprob: -14.875003814697266
    4. '
' → logprob: -15.250003814697266
    5. '(Model' → logprob: -15.250003814697266
    6. '(' → logprob: -15.250003814697266
    7. ')' → logprob: -15.500003814697266
    8. 'Module' → logprob: -15.500003814697266
    9. '(
' → logprob: -15.625003814697266
    10. '()' → logprob: -15.750003814697266

Token 2505: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050763119012117386
    2. '
' → logprob: -3.3007631301879883
    3. '<|end|>' → logprob: -4.675763130187988
    4. 'self' → logprob: -6.300763130187988
    5. '   ' → logprob: -7.175763130187988
    6. ' ' → logprob: -8.925763130187988
    7. '        
' → logprob: -8.925763130187988
    8. '    
' → logprob: -9.300763130187988
    9. '<|end|>' → logprob: -9.800763130187988
    10. ' self' → logprob: -9.925763130187988

Token 2506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019567416980862617
    2. 'self' → logprob: -4.019567489624023
    3. ' self' → logprob: -7.019567489624023
    4. '   ' → logprob: -7.769567489624023
    5. '```' → logprob: -10.394567489624023
    6. '
' → logprob: -10.644567489624023
    7. 'def' → logprob: -11.144567489624023
    8. '           ' → logprob: -12.394567489624023
    9. ' ' → logprob: -12.644567489624023
    10. 's' → logprob: -12.644567489624023

Token 2507: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11893002688884735
    2. '       ' → logprob: -2.2439301013946533
    3. ' self' → logprob: -5.868929862976074
    4. '
' → logprob: -6.243929862976074
    5. 'def' → logprob: -6.743929862976074
    6. '   ' → logprob: -9.243929862976074
    7. '	self' → logprob: -10.993929862976074
    8. '        
' → logprob: -11.993929862976074
    9. 'class' → logprob: -12.368929862976074
    10. 's' → logprob: -12.993929862976074

Token 2508: '.registry' (ID: 101460)
  Prédit: '.normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.normal' → logprob: -0.005253322422504425
    2. '.path' → logprob: -6.005253314971924
    3. '.norm' → logprob: -6.255253314971924
    4. 'normal' → logprob: -7.505253314971924
    5. '.page' → logprob: -8.755253791809082
    6. '.reg' → logprob: -10.755253791809082
    7. '.normalize' → logprob: -11.130253791809082
    8. '._' → logprob: -11.255253791809082
    9. '.p' → logprob: -11.380253791809082
    10. '.web' → logprob: -11.630253791809082

Token 2509: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20323239266872406
    2. ' =' → logprob: -1.7032324075698853
    3. '.' → logprob: -6.578232288360596
    4. '_' → logprob: -8.453232765197754
    5. '   ' → logprob: -9.953232765197754
    6. ' ' → logprob: -10.453232765197754
    7. '<|end|>' → logprob: -10.578232765197754
    8. ':' → logprob: -10.703232765197754
    9. '=
' → logprob: -11.078232765197754
    10. '=None' → logprob: -11.203232765197754

Token 2510: ' Web' (ID: 4899)
  Prédit: 'Web'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Web' → logprob: -0.02324547804892063
    2. ' Web' → logprob: -3.7732455730438232
    3. '_Web' → logprob: -19.273244857788086
    4. '	Web' → logprob: -19.898244857788086
    5. '       ' → logprob: -19.898244857788086
    6. 'File' → logprob: -20.148244857788086
    7. '(Web' → logprob: -20.148244857788086
    8. '<Web' → logprob: -21.398244857788086
    9. '   ' → logprob: -21.648244857788086
    10. 'web' → logprob: -21.773244857788086

Token 2511: 'Page' (ID: 3325)
  Prédit: 'Page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Page' → logprob: -0.0004641544655896723
    2. 'Path' → logprob: -7.750463962554932
    3. '_Page' → logprob: -11.87546443939209
    4. '<Page' → logprob: -12.25046443939209
    5. '   ' → logprob: -12.75046443939209
    6. '	Page' → logprob: -12.87546443939209
    7. 'page' → logprob: -13.00046443939209
    8. '_page' → logprob: -13.75046443939209
    9. ' Page' → logprob: -14.00046443939209
    10. 'Registry' → logprob: -14.12546443939209

Token 2512: 'Registry' (ID: 17911)
  Prédit: 'Registry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Registry' → logprob: -4.6087021473795176e-05
    2. 'Reg' → logprob: -11.000045776367188
    3. '   ' → logprob: -12.000045776367188
    4. '
' → logprob: -12.625045776367188
    5. 'registry' → logprob: -12.625045776367188
    6. ' Registry' → logprob: -12.875045776367188
    7. 's' → logprob: -13.125045776367188
    8. '       ' → logprob: -13.500045776367188
    9. 'istry' → logprob: -13.875045776367188
    10. 'Registr' → logprob: -14.250045776367188

Token 2513: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01643783412873745
    2. '<|end|>' → logprob: -4.516438007354736
    3. '
' → logprob: -5.516438007354736
    4. 'self' → logprob: -7.016438007354736
    5. '   ' → logprob: -8.641437530517578
    6. ' self' → logprob: -9.016437530517578
    7. '        
' → logprob: -10.266437530517578
    8. '    
' → logprob: -10.766437530517578
    9. '        ' → logprob: -11.016437530517578
    10. ',' → logprob: -11.141437530517578

Token 2514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07536038756370544
    2. '   ' → logprob: -2.9503602981567383
    3. 'self' → logprob: -4.575360298156738
    4. '<|end|>' → logprob: -5.450360298156738
    5. 'def' → logprob: -5.825360298156738
    6. '
' → logprob: -7.075360298156738
    7. ' self' → logprob: -7.325360298156738
    8. '```' → logprob: -7.700360298156738
    9. '    
' → logprob: -8.325360298156738
    10. '	self' → logprob: -8.950360298156738

Token 2515: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1669519990682602
    2. '       ' → logprob: -2.041951894760132
    3. 'def' → logprob: -4.291952133178711
    4. '
' → logprob: -5.291952133178711
    5. ' self' → logprob: -5.416952133178711
    6. '   ' → logprob: -7.291952133178711
    7. '	self' → logprob: -10.041952133178711
    8. '```' → logprob: -10.291952133178711
    9. ' def' → logprob: -11.041952133178711
    10. '        
' → logprob: -11.166952133178711

Token 2516: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -0.0389799028635025
    2. '.path' → logprob: -3.413980007171631
    3. 'normal' → logprob: -5.913980007171631
    4. '.norm' → logprob: -6.413980007171631
    5. '.paths' → logprob: -8.163979530334473
    6. '._' → logprob: -9.038979530334473
    7. 'path' → logprob: -9.288979530334473
    8. '.normalize' → logprob: -9.663979530334473
    9. '.next' → logprob: -9.788979530334473
    10. '.current' → logprob: -9.913979530334473

Token 2517: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -3.292907877039397e-06
    2. '   ' → logprob: -13.12500286102295
    3. 'ize' → logprob: -14.75000286102295
    4. 'IZER' → logprob: -15.00000286102295
    5. '_' → logprob: -15.37500286102295
    6. '       ' → logprob: -16.000003814697266
    7. ' ' → logprob: -16.750003814697266
    8. 'izers' → logprob: -16.875003814697266
    9. 'izr' → logprob: -17.000003814697266
    10. 'ization' → logprob: -17.750003814697266

Token 2518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136381208896637
    2. '=' → logprob: -1.3136380910873413
    3. '_' → logprob: -8.313637733459473
    4. '.' → logprob: -9.313637733459473
    5. ' ' → logprob: -10.938637733459473
    6. '   ' → logprob: -12.063637733459473
    7. '_=' → logprob: -12.938637733459473
    8. ')' → logprob: -13.313637733459473
    9. ' =
' → logprob: -13.313637733459473
    10. '.=' → logprob: -13.688637733459473

Token 2519: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.005233763717114925
    2. ' Path' → logprob: -5.2552337646484375
    3. '	Path' → logprob: -18.380233764648438
    4. '   ' → logprob: -19.380233764648438
    5. '(Path' → logprob: -20.005233764648438
    6. 'PATH' → logprob: -21.755233764648438
    7. '_Path' → logprob: -21.880233764648438
    8. '@Path' → logprob: -22.255233764648438
    9. '<Path' → logprob: -23.005233764648438
    10. ' ' → logprob: -23.130233764648438

Token 2520: 'Normalizer' (ID: 188213)
  Prédit: 'Normalizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Normalizer' → logprob: 0.0
    2. 'ormal' → logprob: -17.5
    3. 'normal' → logprob: -18.25
    4. 'izer' → logprob: -19.0
    5. 'Normal' → logprob: -19.125
    6. 'Recognizer' → logprob: -19.625
    7. 'Normalize' → logprob: -20.125
    8. '   ' → logprob: -20.125
    9. 'Balancer' → logprob: -20.25
    10. 'inator' → logprob: -20.5

Token 2521: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005309910629875958
    2. '(' → logprob: -7.750531196594238
    3. 'self' → logprob: -9.875531196594238
    4. '(
' → logprob: -10.125531196594238
    5. '       ' → logprob: -12.500531196594238
    6. '()' → logprob: -13.250531196594238
    7. '(sys' → logprob: -13.750531196594238
    8. '()
' → logprob: -14.500531196594238
    9. '(fs' → logprob: -14.500531196594238
    10. ' (' → logprob: -15.500531196594238

Token 2522: '.fs' (ID: 82179)
  Prédit: '.fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fs' → logprob: -4.008129963040119e-06
    2. '.' → logprob: -13.125003814697266
    3. 'fs' → logprob: -13.625003814697266
    4. ' .' → logprob: -14.750003814697266
    5. '	fs' → logprob: -16.000003814697266
    6. '.f' → logprob: -16.250003814697266
    7. ').' → logprob: -16.375003814697266
    8. '.
' → logprob: -16.625003814697266
    9. '
' → logprob: -17.375003814697266
    10. '/fs' → logprob: -17.750003814697266

Token 2523: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012487331696320325
    2. '       ' → logprob: -9.87512493133545
    3. '   ' → logprob: -10.12512493133545
    4. ')
' → logprob: -10.37512493133545
    5. ' )' → logprob: -13.25012493133545
    6. '
' → logprob: -16.500123977661133
    7. '	' → logprob: -16.625123977661133
    8. '    ' → logprob: -17.250123977661133
    9. ' ' → logprob: -17.250123977661133
    10. '),' → logprob: -17.375123977661133

Token 2524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005773192271590233
    2. 'def' → logprob: -6.005773067474365
    3. '    
' → logprob: -6.005773067474365
    4. '
' → logprob: -7.130773067474365
    5. ' def' → logprob: -11.255773544311523
    6. '	def' → logprob: -12.130773544311523
    7. '        
' → logprob: -12.880773544311523
    8. '```' → logprob: -13.255773544311523
    9. '<|end|>' → logprob: -13.505773544311523
    10. ' 
' → logprob: -14.380773544311523

Token 2525: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006166259292513132
    2. '   ' → logprob: -5.256166458129883
    3. ' def' → logprob: -7.006166458129883
    4. '
' → logprob: -11.381166458129883
    5. '    
' → logprob: -11.881166458129883
    6. '	def' → logprob: -11.881166458129883
    7. '```' → logprob: -15.756166458129883
    8. '        
' → logprob: -16.756166458129883
    9. 'class' → logprob: -17.256166458129883
    10. ' ' → logprob: -18.256166458129883

Token 2526: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.2925017178058624
    2. 'load' → logprob: -2.54250168800354
    3. ' add' → logprob: -2.66750168800354
    4. 'process' → logprob: -3.04250168800354
    5. 'parse' → logprob: -3.66750168800354
    6. 'build' → logprob: -4.667501926422119
    7. 'register' → logprob: -5.042501926422119
    8. ' process' → logprob: -5.292501926422119
    9. ' load' → logprob: -5.292501926422119
    10. ' parse' → logprob: -6.167501926422119

Token 2527: '_web' (ID: 54968)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.010800083167850971
    2. '_' → logprob: -5.010799884796143
    3. '_page' → logprob: -5.510799884796143
    4. '_file' → logprob: -11.7608003616333
    5. ' _' → logprob: -12.1358003616333
    6. '_p' → logprob: -12.3858003616333
    7. '_
' → logprob: -12.6358003616333
    8. '_url' → logprob: -13.1358003616333
    9. '_input' → logprob: -13.3858003616333
    10. '_paths' → logprob: -13.8858003616333

Token 2528: '_pages' (ID: 52628)
  Prédit: '_page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_page' → logprob: -0.30137214064598083
    2. '_path' → logprob: -1.6763721704483032
    3. '_' → logprob: -3.3013720512390137
    4. 'page' → logprob: -3.4263720512390137
    5. 'path' → logprob: -5.926372051239014
    6. 'Page' → logprob: -8.176372528076172
    7. '   ' → logprob: -8.426372528076172
    8. ' _' → logprob: -8.426372528076172
    9. '_p' → logprob: -9.301372528076172
    10. 'site' → logprob: -9.551372528076172

Token 2529: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012576762586832047
    2. '(' → logprob: -4.387576580047607
    3. '(
' → logprob: -10.387577056884766
    4. 'self' → logprob: -11.637577056884766
    5. '   ' → logprob: -11.637577056884766
    6. ' (' → logprob: -12.387577056884766
    7. '_path' → logprob: -12.762577056884766
    8. '       ' → logprob: -12.762577056884766
    9. '_from' → logprob: -12.887577056884766
    10. '_' → logprob: -13.387577056884766

Token 2530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19324257969856262
    2. '(self' → logprob: -1.9432425498962402
    3. 'self' → logprob: -3.9432425498962402
    4. '):
' → logprob: -5.44324254989624
    5. '_path' → logprob: -5.81824254989624
    6. '       ' → logprob: -6.56824254989624
    7. '):' → logprob: -6.94324254989624
    8. '   ' → logprob: -7.06824254989624
    9. ')(' → logprob: -7.31824254989624
    10. 'path' → logprob: -7.44324254989624

Token 2531: ' pages' (ID: 8537)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.039945509284734726
    2. ' paths' → logprob: -3.664945602416992
    3. 'pages' → logprob: -5.289945602416992
    4. 'path' → logprob: -5.914945602416992
    5. 'self' → logprob: -6.414945602416992
    6. 'raw' → logprob: -6.539945602416992
    7. ' raw' → logprob: -7.164945602416992
    8. 'pathname' → logprob: -7.789945602416992
    9. 'page' → logprob: -7.914945602416992
    10. '   ' → logprob: -8.164945602416992

Token 2532: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044393956661224365
    2. ',' → logprob: -3.669394016265869
    3. '       ' → logprob: -4.794394016265869
    4. '):
' → logprob: -5.044394016265869
    5. 'self' → logprob: -6.669394016265869
    6. '   ' → logprob: -6.919394016265869
    7. '(self' → logprob: -7.794394016265869
    8. '):' → logprob: -8.044393539428711
    9. '_:' → logprob: -10.169393539428711
    10. '_path' → logprob: -10.294393539428711

Token 2533: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.03887028992176056
    2. ' List' → logprob: -3.288870334625244
    3. 'self' → logprob: -7.913870334625244
    4. ')' → logprob: -8.288869857788086
    5. 'Iterable' → logprob: -9.788869857788086
    6. '[List' → logprob: -9.913869857788086
    7. 'list' → logprob: -10.163869857788086
    8. '       ' → logprob: -10.663869857788086
    9. '):
' → logprob: -11.538869857788086
    10. '   ' → logprob: -11.663869857788086

Token 2534: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0006357124075293541
    2. '[List' → logprob: -8.000636100769043
    3. '[' → logprob: -8.875636100769043
    4. '):
' → logprob: -9.375636100769043
    5. ':' → logprob: -10.250636100769043
    6. '[
' → logprob: -11.125636100769043
    7. '):' → logprob: -11.250636100769043
    8. '   ' → logprob: -12.000636100769043
    9. '[int' → logprob: -13.375636100769043
    10. '       ' → logprob: -13.375636100769043

Token 2535: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.026446711272001266
    2. ')' → logprob: -3.90144681930542
    3. ']):
' → logprob: -5.65144681930542
    4. '       ' → logprob: -6.52644681930542
    5. '   ' → logprob: -7.65144681930542
    6. '):' → logprob: -8.026446342468262
    7. '])' → logprob: -9.651446342468262
    8. '):
' → logprob: -12.026446342468262
    9. ']):' → logprob: -12.151446342468262
    10. ']' → logprob: -12.151446342468262

Token 2536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -13.625001907348633
    3. 'for' → logprob: -15.250001907348633
    4. ' for' → logprob: -15.500001907348633
    5. '   ' → logprob: -15.750001907348633
    6. ':' → logprob: -16.375001907348633
    7. '):
' → logprob: -18.000001907348633
    8. '	' → logprob: -18.125001907348633
    9. '`' → logprob: -18.625001907348633
    10. '           ' → logprob: -18.875001907348633

Token 2537: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010002675466239452
    2. ' for' → logprob: -5.135002613067627
    3. 'for' → logprob: -5.510002613067627
    4. '```' → logprob: -11.260003089904785
    5. '   ' → logprob: -12.135003089904785
    6. '
' → logprob: -14.510003089904785
    7. '``' → logprob: -15.385003089904785
    8. '	for' → logprob: -15.760003089904785
    9. '      ' → logprob: -16.13500213623047
    10. '):
' → logprob: -16.76000213623047

Token 2538: ' add' (ID: 1147)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002052120165899396
    2. '       ' → logprob: -6.252052307128906
    3. ' for' → logprob: -9.002052307128906
    4. '   ' → logprob: -15.252052307128906
    5. '
' → logprob: -16.127052307128906
    6. '	for' → logprob: -17.502052307128906
    7. '```' → logprob: -17.752052307128906
    8. '#' → logprob: -18.502052307128906
    9. '``' → logprob: -20.252052307128906
    10. 'def' → logprob: -20.377052307128906

Token 2539: ' pages' (ID: 8537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6282318830490112
    2. 'page' → logprob: -1.6282318830490112
    3. ' for' → logprob: -1.7532318830490112
    4. '       ' → logprob: -3.253232002258301
    5. 'pages' → logprob: -3.878232002258301
    6. 'path' → logprob: -3.878232002258301
    7. ' page' → logprob: -5.003232002258301
    8. 'paths' → logprob: -6.003232002258301
    9. '_path' → logprob: -6.253232002258301
    10. 'pathname' → logprob: -6.503232002258301

Token 2540: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10712197422981262
    2. 'for' → logprob: -2.9821219444274902
    3. ' for' → logprob: -2.9821219444274902
    4. '```' → logprob: -9.357122421264648
    5. '   ' → logprob: -9.732122421264648
    6. 'self' → logprob: -11.232122421264648
    7. '(self' → logprob: -11.607122421264648
    8. ':' → logprob: -11.857122421264648
    9. '
' → logprob: -12.107122421264648
    10. 'from' → logprob: -12.107122421264648

Token 2541: ' filesystem' (ID: 105930)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03734981268644333
    2. 'pages' → logprob: -3.7873497009277344
    3. 'for' → logprob: -4.787349700927734
    4. ' self' → logprob: -6.037349700927734
    5. ' pages' → logprob: -7.162349700927734
    6. 'the' → logprob: -7.412349700927734
    7. '       ' → logprob: -7.412349700927734
    8. ' for' → logprob: -8.537349700927734
    9. '[self' → logprob: -8.787349700927734
    10. '   ' → logprob: -8.787349700927734

Token 2542: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7981730103492737
    2. '       ' → logprob: -1.298172950744629
    3. ' for' → logprob: -1.298172950744629
    4. '
' → logprob: -5.798172950744629
    5. '```' → logprob: -7.423172950744629
    6. ',' → logprob: -9.298172950744629
    7. ':' → logprob: -11.173172950744629
    8. '   ' → logprob: -11.298172950744629
    9. '):
' → logprob: -12.048172950744629
    10. ':
' → logprob: -12.048172950744629

Token 2543: ' registry' (ID: 33798)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13976910710334778
    2. 'register' → logprob: -2.1397690773010254
    3. 'normalize' → logprob: -4.514769077301025
    4. 'registry' → logprob: -7.514769077301025
    5. ' for' → logprob: -8.139769554138184
    6. 'self' → logprob: -8.264769554138184
    7. '       ' → logprob: -8.889769554138184
    8. 'add' → logprob: -9.264769554138184
    9. '
' → logprob: -9.264769554138184
    10. '#' → logprob: -9.514769554138184

Token 2544: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014625173062086105
    2. 'for' → logprob: -4.514625072479248
    3. ' for' → logprob: -5.639625072479248
    4. '   ' → logprob: -11.639625549316406
    5. '```' → logprob: -12.014625549316406
    6. '
' → logprob: -14.264625549316406
    7. '):
' → logprob: -15.139625549316406
    8. '	for' → logprob: -15.514625549316406
    9. ':' → logprob: -15.639625549316406
    10. '	' → logprob: -16.139625549316406

Token 2545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004235243541188538
    2. 'for' → logprob: -8.000423431396484
    3. ' for' → logprob: -9.875423431396484
    4. '   ' → logprob: -10.250423431396484
    5. '
' → logprob: -14.250423431396484
    6. '```' → logprob: -14.375423431396484
    7. '      ' → logprob: -17.000423431396484
    8. '	' → logprob: -17.625423431396484
    9. '           ' → logprob: -17.625423431396484
    10. '	for' → logprob: -17.750423431396484

Token 2546: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31625035405158997
    2. '       ' → logprob: -1.3162503242492676
    3. ' for' → logprob: -5.816250324249268
    4. '   ' → logprob: -12.316250801086426
    5. '```' → logprob: -14.316250801086426
    6. '	for' → logprob: -15.941250801086426
    7. ' ' → logprob: -16.19124984741211
    8. '``' → logprob: -16.81624984741211
    9. '           ' → logprob: -17.56624984741211
    10. '
' → logprob: -18.56624984741211

Token 2547: ' raw' (ID: 11428)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.08713472634553909
    2. 'raw' → logprob: -3.212134838104248
    3. 'path' → logprob: -3.712134838104248
    4. ' raw' → logprob: -4.462134838104248
    5. ' page' → logprob: -5.087134838104248
    6. 'p' → logprob: -7.087134838104248
    7. ' path' → logprob: -8.71213436126709
    8. ' p' → logprob: -11.08713436126709
    9. '   ' → logprob: -11.83713436126709
    10. 'pathname' → logprob: -12.21213436126709

Token 2548: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.009164116345345974
    2. '_page' → logprob: -5.259164333343506
    3. 'path' → logprob: -5.634164333343506
    4. 'page' → logprob: -8.134163856506348
    5. 'pathname' → logprob: -11.634163856506348
    6. '_p' → logprob: -11.884163856506348
    7. '_raw' → logprob: -12.009163856506348
    8. 'p' → logprob: -12.009163856506348
    9. '   ' → logprob: -12.259163856506348
    10. 'raw' → logprob: -12.384163856506348

Token 2549: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0033536863047629595
    2. 'in' → logprob: -5.753353595733643
    3. '       ' → logprob: -9.7533540725708
    4. ',' → logprob: -10.3783540725708
    5. '           ' → logprob: -10.8783540725708
    6. '_path' → logprob: -11.1283540725708
    7. '):
' → logprob: -11.5033540725708
    8. '_in' → logprob: -11.6283540725708
    9. ':
' → logprob: -12.6283540725708
    10. ':' → logprob: -12.6283540725708

Token 2550: ' pages' (ID: 8537)
  Prédit: 'pages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pages' → logprob: -0.0005569627974182367
    2. ' pages' → logprob: -7.500556945800781
    3. 'raw' → logprob: -13.500556945800781
    4. '   ' → logprob: -13.875556945800781
    5. '       ' → logprob: -14.500556945800781
    6. '.pages' → logprob: -14.750556945800781
    7. '
' → logprob: -15.125556945800781
    8. 'page' → logprob: -15.750556945800781
    9. 'self' → logprob: -16.37555694580078
    10. '           ' → logprob: -16.62555694580078

Token 2551: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28905928134918213
    2. ':
' → logprob: -1.4140592813491821
    3. ':' → logprob: -5.289059162139893
    4. '       ' → logprob: -6.664059162139893
    5. '):
' → logprob: -6.789059162139893
    6. ',' → logprob: -8.28905963897705
    7. '():
' → logprob: -10.53905963897705
    8. ' =' → logprob: -10.66405963897705
    9. '_path' → logprob: -10.78905963897705
    10. '	       ' → logprob: -11.41405963897705

Token 2552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020687808864749968
    2. 'path' → logprob: -9.00020694732666
    3. '       ' → logprob: -10.75020694732666
    4. 'self' → logprob: -11.00020694732666
    5. 'pathname' → logprob: -11.25020694732666
    6. ' path' → logprob: -11.87520694732666
    7. ' self' → logprob: -12.12520694732666
    8. '```' → logprob: -12.37520694732666
    9. '		' → logprob: -13.00020694732666
    10. '          ' → logprob: -13.37520694732666

Token 2553: ' path' (ID: 3104)
  Prédit: 'pathname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pathname' → logprob: -0.016613712534308434
    2. '           ' → logprob: -4.516613483428955
    3. ' pathname' → logprob: -5.891613483428955
    4. 'path' (adapté à ' path') → logprob: -6.016613483428955
    5. 'pn' → logprob: -8.641613960266113
    6. 'p' → logprob: -9.016613960266113
    7. '   ' → logprob: -10.891613960266113
    8. '               ' → logprob: -12.141613960266113
    9. 'pth' → logprob: -12.266613960266113
    10. ' path' → logprob: -12.516613960266113

Token 2554: ' =' (ID: 314)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.05099809542298317
    2. ' =' → logprob: -3.0509982109069824
    3. '=' → logprob: -6.425998210906982
    4. '   ' → logprob: -7.550998210906982
    5. '       ' → logprob: -8.425997734069824
    6. '           ' → logprob: -11.175997734069824
    7. '    ' → logprob: -11.800997734069824
    8. 'ame' → logprob: -12.425997734069824
    9. '_obj' → logprob: -12.800997734069824
    10. '     ' → logprob: -12.925997734069824

Token 2555: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.008620958775281906
    2. ' Path' → logprob: -4.758620738983154
    3. '	Path' → logprob: -12.008621215820312
    4. '           ' → logprob: -15.508621215820312
    5. '(Path' → logprob: -16.883621215820312
    6. '<Path' → logprob: -17.383621215820312
    7. '@Path' → logprob: -17.508621215820312
    8. '_Path' → logprob: -18.383621215820312
    9. '_path' → logprob: -19.383621215820312
    10. '.Path' → logprob: -19.383621215820312

Token 2556: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -7.600714161526412e-05
    2. 'Segment' → logprob: -9.500076293945312
    3. 'pathname' → logprob: -13.875076293945312
    4. 'path' → logprob: -16.750076293945312
    5. 'ame' → logprob: -17.375076293945312
    6. 'ename' → logprob: -17.750076293945312
    7. '(name' → logprob: -18.000076293945312
    8. 'Path' → logprob: -18.500076293945312
    9. 'Name' → logprob: -19.000076293945312
    10. 'NAME' → logprob: -19.125076293945312

Token 2557: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.750003814697266
    3. '(
' → logprob: -14.500003814697266
    4. 'raw' → logprob: -16.250003814697266
    5. '
' → logprob: -19.500003814697266
    6. ')' → logprob: -19.625003814697266
    7. '(root' → logprob: -20.250003814697266
    8. '((' → logprob: -20.375003814697266
    9. ' raw' → logprob: -20.500003814697266
    10. '	raw' → logprob: -20.625003814697266

Token 2558: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.007392583414912224
    2. '(raw' → logprob: -5.507392406463623
    3. 'path' → logprob: -5.882392406463623
    4. 'raw' → logprob: -8.132392883300781
    5. 'Path' → logprob: -8.632392883300781
    6. ')' → logprob: -11.257392883300781
    7. '_raw' → logprob: -12.007392883300781
    8. '   ' → logprob: -12.507392883300781
    9. '```' → logprob: -12.507392883300781
    10. '(path' → logprob: -12.632392883300781

Token 2559: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10031234472990036
    2. ')' → logprob: -2.3503122329711914
    3. '           ' → logprob: -9.600312232971191
    4. ')
' → logprob: -10.475312232971191
    5. '       ' → logprob: -12.100312232971191
    6. ')`
' → logprob: -13.350312232971191
    7. ')

' → logprob: -13.975312232971191
    8. '               ' → logprob: -14.850312232971191
    9. ' )
' → logprob: -14.975312232971191
    10. ')`' → logprob: -15.350312232971191

Token 2560: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006943239714019
    2. 'self' → logprob: -7.500694274902344
    3. ' self' → logprob: -8.875694274902344
    4. '       ' → logprob: -14.750694274902344
    5. '               ' → logprob: -15.000694274902344
    6. '   ' → logprob: -15.125694274902344
    7. '```' → logprob: -15.250694274902344
    8. '		' → logprob: -15.375694274902344
    9. '`' → logprob: -17.125694274902344
    10. '          ' → logprob: -17.625694274902344

Token 2561: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04111623764038086
    2. '           ' → logprob: -3.291116237640381
    3. ' self' → logprob: -5.791116237640381
    4. '   ' → logprob: -12.166116714477539
    5. '       ' → logprob: -12.541116714477539
    6. '               ' → logprob: -13.291116714477539
    7. '#' → logprob: -13.416116714477539
    8. 'if' → logprob: -14.041116714477539
    9. '
' → logprob: -14.666116714477539
    10. '	self' → logprob: -14.916116714477539

Token 2562: '.fs' (ID: 82179)
  Prédit: '.fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fs' → logprob: -0.04329341650009155
    2. 'fs' → logprob: -3.1682934761047363
    3. 'add' → logprob: -8.793292999267578
    4. '.add' → logprob: -10.168292999267578
    5. '
' → logprob: -10.543292999267578
    6. ' fs' → logprob: -10.918292999267578
    7. '	fs' → logprob: -11.543292999267578
    8. 'normal' → logprob: -11.543292999267578
    9. '   ' → logprob: -11.668292999267578
    10. '.' → logprob: -12.043292999267578

Token 2563: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.735893965815194e-05
    2. 'add' → logprob: -11.625017166137695
    3. '.' → logprob: -12.375017166137695
    4. '           ' → logprob: -12.500017166137695
    5. '       ' → logprob: -16.000017166137695
    6. '_add' → logprob: -16.000017166137695
    7. '   ' → logprob: -16.500017166137695
    8. ' .' → logprob: -17.375017166137695
    9. ':add' → logprob: -17.875017166137695
    10. ')add' → logprob: -17.875017166137695

Token 2564: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -4.320199877838604e-07
    2. 'path' → logprob: -15.125
    3. 'Path' → logprob: -16.875
    4. '_' → logprob: -18.875
    5. '   ' → logprob: -19.5
    6. '
' → logprob: -19.625
    7. '_file' → logprob: -19.75
    8. '_Path' → logprob: -19.875
    9. '_page' → logprob: -20.125
    10. ' path' → logprob: -20.25

Token 2565: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -1.2113979209971149e-05
    2. 'path' → logprob: -11.500012397766113
    3. '(' → logprob: -13.875012397766113
    4. '(Path' → logprob: -14.375012397766113
    5. '(
' → logprob: -15.250012397766113
    6. ' path' → logprob: -15.875012397766113
    7. '           ' → logprob: -17.750011444091797
    8. ' (' → logprob: -18.125011444091797
    9. ',path' → logprob: -18.500011444091797
    10. '[path' → logprob: -18.625011444091797

Token 2566: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010334034450352192
    2. '           ' → logprob: -7.126033306121826
    3. ')
' → logprob: -8.501033782958984
    4. '       ' → logprob: -10.876033782958984
    5. '<|end|>' → logprob: -12.876033782958984
    6. '               ' → logprob: -14.251033782958984
    7. ' )' → logprob: -14.501033782958984
    8. '   ' → logprob: -14.501033782958984
    9. '<|end|>' → logprob: -14.626033782958984
    10. ');' → logprob: -14.876033782958984

Token 2567: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3243471086025238
    2. '       ' → logprob: -1.8243471384048462
    3. '<|end|>' → logprob: -2.5743470191955566
    4. '
' → logprob: -3.5743470191955566
    5. '   ' → logprob: -4.824347019195557
    6. '```' → logprob: -6.449347019195557
    7. '<|end|>' → logprob: -6.574347019195557
    8. '    
' → logprob: -9.199347496032715
    9. '        
' → logprob: -9.949347496032715
    10. 'def' → logprob: -10.574347496032715

Token 2568: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009914840338751674
    2. ' for' → logprob: -7.875991344451904
    3. 'for' → logprob: -8.000991821289062
    4. '
' → logprob: -8.875991821289062
    5. '   ' → logprob: -9.250991821289062
    6. '<|end|>' → logprob: -11.250991821289062
    7. 'self' → logprob: -11.750991821289062
    8. '           ' → logprob: -11.750991821289062
    9. '        
' → logprob: -12.875991821289062
    10. '```' → logprob: -13.375991821289062

Token 2569: ' After' (ID: 6311)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03386363759636879
    2. '       ' → logprob: -3.6588635444641113
    3. '#' → logprob: -4.908863544464111
    4. '   ' → logprob: -9.90886402130127
    5. 'self' → logprob: -10.65886402130127
    6. 'normalized' → logprob: -10.78386402130127
    7. '           ' → logprob: -10.90886402130127
    8. ' for' → logprob: -10.90886402130127
    9. 'canonical' → logprob: -11.65886402130127
    10. 'all' → logprob: -13.03386402130127

Token 2570: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9689609408378601
    2. 'adding' → logprob: -0.9689609408378601
    3. 'building' → logprob: -2.843961000442505
    4. 'all' → logprob: -2.968961000442505
    5. ' adding' → logprob: -3.093961000442505
    6. '#' → logprob: -3.218961000442505
    7. ' for' → logprob: -3.593961000442505
    8. '       ' → logprob: -5.343960762023926
    9. ' building' → logprob: -5.718960762023926
    10. ' all' → logprob: -5.968960762023926

Token 2571: ' pages' (ID: 8537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3804428279399872
    2. 'pages' → logprob: -1.6304428577423096
    3. '       ' → logprob: -2.7554428577423096
    4. ' for' → logprob: -4.0054426193237305
    5. 'paths' → logprob: -4.0054426193237305
    6. ' pages' → logprob: -4.3804426193237305
    7. '           ' → logprob: -6.0054426193237305
    8. 'files' → logprob: -6.2554426193237305
    9. '#' → logprob: -6.3804426193237305
    10. 'added' → logprob: -7.2554426193237305

Token 2572: ' added' (ID: 5768)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010164240375161171
    2. 'for' → logprob: -5.135164260864258
    3. ' for' → logprob: -5.510164260864258
    4. ',' → logprob: -9.760164260864258
    5. '
' → logprob: -9.885164260864258
    6. '   ' → logprob: -10.010164260864258
    7. '#' → logprob: -11.385164260864258
    8. '           ' → logprob: -12.510164260864258
    9. ':' → logprob: -13.385164260864258
    10. ' are' → logprob: -13.635164260864258

Token 2573: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025528310798108578
    2. ' for' → logprob: -6.3775529861450195
    3. 'for' → logprob: -7.1275529861450195
    4. ',' → logprob: -10.62755298614502
    5. '
' → logprob: -11.37755298614502
    6. '   ' → logprob: -11.87755298614502
    7. '           ' → logprob: -13.50255298614502
    8. '#' → logprob: -13.50255298614502
    9. '        
' → logprob: -13.75255298614502
    10. ' to' → logprob: -15.50255298614502

Token 2574: ' register' (ID: 5929)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24068087339401245
    2. '#' → logprob: -2.2406809329986572
    3. '       ' → logprob: -2.2406809329986572
    4. ' for' → logprob: -6.865680694580078
    5. 'self' → logprob: -10.240680694580078
    6. ' #' → logprob: -10.490680694580078
    7. '   ' → logprob: -10.990680694580078
    8. '           ' → logprob: -12.615680694580078
    9. '
' → logprob: -12.740680694580078
    10. '```' → logprob: -12.865680694580078

Token 2575: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024906395003199577
    2. '       ' → logprob: -3.8999063968658447
    3. ' for' → logprob: -5.649906158447266
    4. 'all' → logprob: -8.024906158447266
    5. '#' → logprob: -8.274906158447266
    6. 'canonical' → logprob: -9.149906158447266
    7. '   ' → logprob: -9.649906158447266
    8. '           ' → logprob: -10.899906158447266
    9. '
' → logprob: -11.274906158447266
    10. 'normalized' → logprob: -11.649906158447266

Token 2576: ' canonical' (ID: 91323)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10635034739971161
    2. '       ' → logprob: -2.4813504219055176
    3. ' for' → logprob: -5.356350421905518
    4. 'pages' → logprob: -5.981350421905518
    5. 'canonical' → logprob: -6.106350421905518
    6. 'self' → logprob: -6.231350421905518
    7. 'paths' → logprob: -6.856350421905518
    8. 'files' → logprob: -6.981350421905518
    9. '#' → logprob: -6.981350421905518
    10. '           ' → logprob: -7.231350421905518

Token 2577: ' page' (ID: 3011)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.4882656931877136
    2. '_paths' → logprob: -0.9882656931877136
    3. 'pages' → logprob: -4.863265514373779
    4. '_pages' → logprob: -5.988265514373779
    5. 'for' → logprob: -6.113265514373779
    6. ' paths' → logprob: -7.613265514373779
    7. '   ' → logprob: -7.863265514373779
    8. '_path' → logprob: -7.988265514373779
    9. '       ' → logprob: -9.238265991210938
    10. '_page' → logprob: -9.488265991210938

Token 2578: ' paths' (ID: 23373)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.24904298782348633
    2. 's' → logprob: -2.2490429878234863
    3. 'for' → logprob: -2.3740429878234863
    4. '_paths' → logprob: -4.374042987823486
    5. ' for' → logprob: -5.874042987823486
    6. '   ' → logprob: -6.124042987823486
    7. ' paths' → logprob: -6.249042987823486
    8. '       ' → logprob: -6.374042987823486
    9. '
' → logprob: -8.874042510986328
    10. '_path' → logprob: -9.124042510986328

Token 2579: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026407750556245446
    2. ' for' → logprob: -8.625264167785645
    3. 'for' → logprob: -9.500264167785645
    4. '
' → logprob: -12.875264167785645
    5. '   ' → logprob: -13.000264167785645
    6. ',' → logprob: -13.375264167785645
    7. '           ' → logprob: -13.750264167785645
    8. '        
' → logprob: -14.250264167785645
    9. '#' → logprob: -14.875264167785645
    10. 'def' → logprob: -15.500264167785645

Token 2580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002546641044318676
    2. 'for' → logprob: -8.37525463104248
    3. ' for' → logprob: -11.12525463104248
    4. '   ' → logprob: -11.87525463104248
    5. '
' → logprob: -13.37525463104248
    6. '           ' → logprob: -14.62525463104248
    7. 'def' → logprob: -15.75025463104248
    8. '#' → logprob: -15.87525463104248
    9. 'from' → logprob: -17.375255584716797
    10. 'self' → logprob: -17.500255584716797

Token 2581: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20214881002902985
    2. 'for' → logprob: -1.7021487951278687
    3. ' for' → logprob: -7.327148914337158
    4. '   ' → logprob: -9.7021484375
    5. '#' (adapté à ' #') → logprob: -12.0771484375
    6. '           ' → logprob: -12.5771484375
    7. 'self' → logprob: -12.9521484375
    8. '	for' → logprob: -14.2021484375
    9. 'index' → logprob: -14.5771484375
    10. '	' → logprob: -14.5771484375

Token 2582: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16035988926887512
    2. 'for' → logprob: -1.9103598594665527
    3. '   ' → logprob: -9.660360336303711
    4. ' for' → logprob: -9.785360336303711
    5. '#' → logprob: -12.285360336303711
    6. 'self' → logprob: -12.535360336303711
    7. '           ' → logprob: -13.410360336303711
    8. '	' → logprob: -13.785360336303711
    9. 'from' → logprob: -14.160360336303711
    10. 'def' → logprob: -14.160360336303711

Token 2583: ' each' (ID: 2454)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.8682534694671631
    2. 'segment' → logprob: -0.9932534694671631
    3. 'raw' → logprob: -2.493253469467163
    4. 'path' → logprob: -2.743253469467163
    5. 'seg' → logprob: -3.493253469467163
    6. 'p' → logprob: -5.368253707885742
    7. 'file' → logprob: -5.618253707885742
    8. ' page' → logprob: -5.743253707885742
    9. ' segment' → logprob: -5.743253707885742
    10. 'dir' → logprob: -5.868253707885742

Token 2584: ' page' (ID: 3011)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.7200822830200195
    2. 'raw' → logprob: -1.2200822830200195
    3. 'path' → logprob: -2.3450822830200195
    4. 'file' → logprob: -2.3450822830200195
    5. 'filename' → logprob: -4.4700822830200195
    6. ' page' → logprob: -5.5950822830200195
    7. ' raw' → logprob: -6.0950822830200195
    8. 'filepath' → logprob: -6.3450822830200195
    9. 'pathname' → logprob: -6.7200822830200195
    10. 'root' → logprob: -7.2200822830200195

Token 2585: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27069011330604553
    2. ' for' → logprob: -2.1456902027130127
    3. 'for' → logprob: -2.2706902027130127
    4. '           ' → logprob: -4.645689964294434
    5. ',' → logprob: -6.020689964294434
    6. '   ' → logprob: -6.895689964294434
    7. '
' → logprob: -7.145689964294434
    8. '#' → logprob: -7.270689964294434
    9. 'with' → logprob: -7.770689964294434
    10. ' in' → logprob: -7.895689964294434

Token 2586: ' given' (ID: 4335)
  Prédit: 'pages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pages' → logprob: -0.4309965968132019
    2. 'self' → logprob: -1.0559966564178467
    3. ' pages' → logprob: -6.930996417999268
    4. ' self' → logprob: -7.930996417999268
    5. '
' → logprob: -8.555996894836426
    6. '#' → logprob: -9.055996894836426
    7. 'sys' → logprob: -9.180996894836426
    8. '[self' → logprob: -9.180996894836426
    9. '   ' → logprob: -9.805996894836426
    10. '       ' → logprob: -9.930996894836426

Token 2587: ' original' (ID: 4756)
  Prédit: 'pages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pages' → logprob: -0.642921507358551
    2. 'self' → logprob: -0.767921507358551
    3. 'raw' → logprob: -5.017921447753906
    4. ' pages' → logprob: -6.267921447753906
    5. ' self' → logprob: -7.267921447753906
    6. '
' → logprob: -9.017921447753906
    7. '_pages' → logprob: -9.142921447753906
    8. ' raw' → logprob: -9.517921447753906
    9. 'paths' → logprob: -9.517921447753906
    10. 'for' → logprob: -9.517921447753906

Token 2588: ' form' (ID: 1625)
  Prédit: 'pages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pages' → logprob: -0.5701180696487427
    2. 'paths' → logprob: -1.3201180696487427
    3. 'self' → logprob: -2.695117950439453
    4. ' pages' → logprob: -3.195117950439453
    5. '_pages' → logprob: -4.195117950439453
    6. '_paths' → logprob: -4.695117950439453
    7. 'path' → logprob: -4.820117950439453
    8. '_path' → logprob: -5.570117950439453
    9. ' paths' → logprob: -5.570117950439453
    10. 'for' → logprob: -5.695117950439453

Token 2589: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0891081690788269
    2. ' for' → logprob: -3.0891082286834717
    3. '           ' → logprob: -3.7141082286834717
    4. 'for' → logprob: -4.464107990264893
    5. ',' → logprob: -6.339107990264893
    6. '#' → logprob: -7.589107990264893
    7. '   ' → logprob: -7.589107990264893
    8. '<|end|>' → logprob: -8.46410846710205
    9. '<|end|>' → logprob: -8.58910846710205
    10. ':' → logprob: -9.33910846710205

Token 2590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008272562408819795
    2. 'for' → logprob: -7.375827312469482
    3. '           ' → logprob: -8.750826835632324
    4. ' for' → logprob: -10.250826835632324
    5. '   ' → logprob: -12.000826835632324
    6. '#' → logprob: -15.000826835632324
    7. '
' → logprob: -15.875826835632324
    8. '```' → logprob: -15.875826835632324
    9. 'def' → logprob: -16.62582778930664
    10. 'from' → logprob: -17.00082778930664

Token 2591: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2028033584356308
    2. 'for' → logprob: -1.702803373336792
    3. ' for' → logprob: -6.702803134918213
    4. '           ' → logprob: -9.452803611755371
    5. '   ' → logprob: -9.452803611755371
    6. '
' → logprob: -13.702803611755371
    7. 'self' → logprob: -13.952803611755371
    8. '#' (adapté à ' #') → logprob: -14.202803611755371
    9. '```' → logprob: -14.452803611755371
    10. '	for' → logprob: -14.952803611755371

Token 2592: ' canonical' (ID: 91323)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31851765513420105
    2. '       ' → logprob: -1.3185176849365234
    3. ' for' → logprob: -5.318517684936523
    4. '
' → logprob: -8.943517684936523
    5. '           ' → logprob: -9.443517684936523
    6. '   ' → logprob: -9.943517684936523
    7. '#' → logprob: -10.193517684936523
    8. '```' → logprob: -10.318517684936523
    9. 'self' → logprob: -12.068517684936523
    10. 'def' → logprob: -12.818517684936523

Token 2593: 'ize' (ID: 750)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.3847059905529022
    2. 'for' → logprob: -1.8847060203552246
    3. 'path' → logprob: -1.8847060203552246
    4. '_paths' → logprob: -4.884706020355225
    5. 'paths' → logprob: -5.134706020355225
    6. ' for' → logprob: -7.259706020355225
    7. 'form' → logprob: -7.884706020355225
    8. '       ' → logprob: -8.259705543518066
    9. 'raw' → logprob: -8.759705543518066
    10. '           ' → logprob: -8.884705543518066

Token 2594: ' paths' (ID: 23373)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.685666024684906
    2. ' for' → logprob: -0.810666024684906
    3. '           ' → logprob: -3.685666084289551
    4. 'path' → logprob: -4.310666084289551
    5. '       ' → logprob: -4.935666084289551
    6. ' path' → logprob: -6.560666084289551
    7. 'raw' → logprob: -6.685666084289551
    8. '_path' → logprob: -7.060666084289551
    9. ',' → logprob: -7.685666084289551
    10. ' raw' → logprob: -7.810666084289551

Token 2595: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012054694816470146
    2. ' for' → logprob: -7.1262054443359375
    3. 'for' → logprob: -8.001205444335938
    4. '           ' → logprob: -10.376205444335938
    5. ',' → logprob: -11.376205444335938
    6. '<|end|>' → logprob: -12.126205444335938
    7. '   ' → logprob: -12.501205444335938
    8. 'def' → logprob: -13.126205444335938
    9. '<|end|>' → logprob: -13.251205444335938
    10. '#' → logprob: -13.251205444335938

Token 2596: ' have' (ID: 679)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.27081334590911865
    2. 'ends' → logprob: -1.7708133459091187
    3. 'for' → logprob: -3.395813465118408
    4. 'start' → logprob: -4.895813465118408
    5. ' end' → logprob: -5.395813465118408
    6. ' ends' → logprob: -6.020813465118408
    7. ' for' → logprob: -6.395813465118408
    8. 'self' → logprob: -6.395813465118408
    9. 'have' → logprob: -6.395813465118408
    10. 'are' → logprob: -6.645813465118408

Token 2597: ' no' (ID: 860)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.8619524240493774
    2. 'files' → logprob: -2.611952304840088
    3. '_path' → logprob: -2.736952304840088
    4. 'raw' → logprob: -2.986952304840088
    5. 'last' → logprob: -3.111952304840088
    6. '_index' → logprob: -3.111952304840088
    7. 'a' → logprob: -3.236952304840088
    8. 'filename' → logprob: -3.236952304840088
    9. 'not' → logprob: -3.486952304840088
    10. '
' → logprob: -4.111952304840088

Token 2598: ' '.'' (ID: 64762)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.20729002356529236
    2. 'index' → logprob: -2.707289934158325
    3. 'duplicates' → logprob: -3.207289934158325
    4. ' trailing' → logprob: -3.457289934158325
    5. '`' → logprob: -4.832290172576904
    6. '.' → logprob: -5.207290172576904
    7. 'duplicate' → logprob: -5.332290172576904
    8. ''.' → logprob: -5.707290172576904
    9. ''' → logprob: -5.832290172576904
    10. '..' → logprob: -5.832290172576904

Token 2599: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2597637474536896
    2. '
' → logprob: -1.8847637176513672
    3. ' for' → logprob: -3.259763717651367
    4. '           ' → logprob: -4.384763717651367
    5. ' and' → logprob: -5.009763717651367
    6. 'for' → logprob: -5.134763717651367
    7. '        
' → logprob: -5.134763717651367
    8. '   ' → logprob: -6.009763717651367
    9. '.
' → logprob: -6.259763717651367
    10. ' or' → logprob: -7.259763717651367

Token 2600: ' '..' (ID: 107414)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03859780728816986
    2. '..' → logprob: -3.288597822189331
    3. ' '..' → logprob: -8.28859806060791
    4. ''/' → logprob: -8.91359806060791
    5. '..
' → logprob: -9.78859806060791
    6. '"' → logprob: -9.91359806060791
    7. '
' → logprob: -11.91359806060791
    8. ' ' → logprob: -11.91359806060791
    9. '"..' → logprob: -11.91359806060791
    10. ' ..' → logprob: -12.03859806060791

Token 2601: ''' (ID: 6)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29056066274642944
    2. '
' → logprob: -2.415560722351074
    3. ' for' → logprob: -2.415560722351074
    4. ' and' → logprob: -3.665560722351074
    5. 'for' → logprob: -4.290560722351074
    6. ':
' → logprob: -4.790560722351074
    7. ':' → logprob: -5.290560722351074
    8. ' in' → logprob: -5.415560722351074
    9. ',' → logprob: -5.790560722351074
    10. '           ' → logprob: -6.290560722351074

Token 2602: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038433659821748734
    2. 'for' → logprob: -3.53843355178833
    3. ' for' → logprob: -4.91343355178833
    4. '
' → logprob: -6.91343355178833
    5. '   ' → logprob: -9.038434028625488
    6. '           ' → logprob: -9.163434028625488
    7. '        
' → logprob: -10.663434028625488
    8. ',' → logprob: -10.788434028625488
    9. '#' → logprob: -11.538434028625488
    10. 'def' → logprob: -11.788434028625488

Token 2603: 'given' (ID: 82383)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.244297981262207
    2. ' for' → logprob: -1.369297981262207
    3. 'for' → logprob: -1.619297981262207
    4. 'and' → logprob: -2.244297981262207
    5. ' in' → logprob: -3.244297981262207
    6. ')' → logprob: -3.744297981262207
    7. ' or' → logprob: -3.994297981262207
    8. '#' → logprob: -4.244297981262207
    9. '       ' → logprob: -4.744297981262207
    10. '
' → logprob: -4.869297981262207

Token 2604: ' pages' (ID: 8537)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.756911039352417
    2. '       ' → logprob: -1.756911039352417
    3. 'in' → logprob: -2.631911039352417
    4. '           ' → logprob: -2.881911039352417
    5. ' and' → logprob: -3.131911039352417
    6. ')' → logprob: -3.131911039352417
    7. ' segments' → logprob: -3.256911039352417
    8. 'segments' → logprob: -4.006911277770996
    9. ' or' → logprob: -4.131911277770996
    10. 'and' → logprob: -4.756911277770996

Token 2605: ' guaranteed' (ID: 21862)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1972594261169434
    2. ')' → logprob: -1.3222594261169434
    3. ' for' → logprob: -1.8222594261169434
    4. '           ' → logprob: -2.5722594261169434
    5. ')
' → logprob: -3.1972594261169434
    6. ' in' → logprob: -3.5722594261169434
    7. 'for' → logprob: -3.6972594261169434
    8. '):
' → logprob: -4.322259426116943
    9. ',' → logprob: -4.447259426116943
    10. ' and' → logprob: -4.822259426116943

Token 2606: ' no' (ID: 860)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.09771239757537842
    2. 'to' → logprob: -3.222712516784668
    3. 'not' → logprob: -3.972712516784668
    4. ')' → logprob: -4.097712516784668
    5. ' not' → logprob: -4.597712516784668
    6. ' and' → logprob: -6.097712516784668
    7. ' without' → logprob: -6.722712516784668
    8. 'without' → logprob: -7.472712516784668
    9. 'no' → logprob: -7.597712516784668
    10. 'and' → logprob: -7.597712516784668

Token 2607: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.17244793474674225
    2. '.' → logprob: -2.422447919845581
    3. ' '.'' → logprob: -3.172447919845581
    4. 'special' → logprob: -4.29744815826416
    5. 'dots' → logprob: -5.67244815826416
    6. '```' → logprob: -6.29744815826416
    7. '`.`' → logprob: -6.54744815826416
    8. '`' → logprob: -6.67244815826416
    9. ' special' → logprob: -6.79744815826416
    10. ' '.',' → logprob: -7.54744815826416

Token 2608: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7334961891174316
    2. 'or' → logprob: -0.8584961891174316
    3. 'and' → logprob: -2.8584961891174316
    4. ' and' → logprob: -3.3584961891174316
    5. ')' → logprob: -5.858496189117432
    6. ',' → logprob: -7.733496189117432
    7. '<|end|>' → logprob: -8.608495712280273
    8. ' ' → logprob: -9.358495712280273
    9. ' nor' → logprob: -9.733495712280273
    10. '/' → logprob: -10.358495712280273

Token 2609: ' '..' (ID: 107414)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011111628264188766
    2. '..' → logprob: -6.876111030578613
    3. ' '..' → logprob: -9.876111030578613
    4. '   ' → logprob: -12.126111030578613
    5. '`' → logprob: -12.501111030578613
    6. '"' → logprob: -13.251111030578613
    7. '..
' → logprob: -13.251111030578613
    8. '..)' → logprob: -13.376111030578613
    9. ''''' → logprob: -13.501111030578613
    10. ' ' → logprob: -13.501111030578613

Token 2610: '')
' (ID: 2515)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0373133420944214
    2. ' segments' → logprob: -1.7873133420944214
    3. '')' → logprob: -2.412313461303711
    4. '')
' → logprob: -3.037313461303711
    5. 'segments' → logprob: -3.037313461303711
    6. ')' → logprob: -3.162313461303711
    7. ' and' → logprob: -3.162313461303711
    8. ' or' → logprob: -3.287313461303711
    9. '           ' → logprob: -3.412313461303711
    10. '       ' → logprob: -3.662313461303711

Token 2611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014133312506601214
    2. 'for' → logprob: -6.626413345336914
    3. ' for' → logprob: -10.001413345336914
    4. '
' → logprob: -10.876413345336914
    5. '   ' → logprob: -11.251413345336914
    6. '           ' → logprob: -11.876413345336914
    7. '```' → logprob: -13.001413345336914
    8. 'def' → logprob: -15.001413345336914
    9. '#' → logprob: -15.001413345336914
    10. 'self' → logprob: -15.751413345336914

Token 2612: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0048967888578772545
    2. 'for' → logprob: -5.379896640777588
    3. '
' → logprob: -8.754897117614746
    4. ' for' → logprob: -9.504897117614746
    5. '   ' → logprob: -10.129897117614746
    6. '           ' → logprob: -13.004897117614746
    7. '```' → logprob: -14.379897117614746
    8. 'def' → logprob: -14.754897117614746
    9. 'self' → logprob: -14.879897117614746
    10. '#' (adapté à ' #') → logprob: -15.004897117614746

Token 2613: ' And' (ID: 1958)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5797461867332458
    2. 'for' → logprob: -0.8297461867332458
    3. '           ' → logprob: -5.704746246337891
    4. ' for' → logprob: -7.954746246337891
    5. '   ' → logprob: -9.20474624633789
    6. '
' → logprob: -11.95474624633789
    7. '#' → logprob: -12.32974624633789
    8. '```' → logprob: -12.82974624633789
    9. 'def' → logprob: -13.82974624633789
    10. 'self' → logprob: -14.20474624633789

Token 2614: ' register' (ID: 5929)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08835767209529877
    2. ' for' → logprob: -3.33835768699646
    3. '
' → logprob: -3.83835768699646
    4. '       ' → logprob: -4.088357448577881
    5. '#' → logprob: -4.963357448577881
    6. '           ' → logprob: -6.588357448577881
    7. 'normalize' → logprob: -7.588357448577881
    8. '   ' → logprob: -7.838357448577881
    9. 'def' → logprob: -7.963357448577881
    10. 'add' → logprob: -8.213357925415039

Token 2615: ' canonical' (ID: 91323)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6596369743347168
    2. '           ' → logprob: -1.2846369743347168
    3. '       ' → logprob: -1.6596369743347168
    4. ' for' → logprob: -4.159636974334717
    5. '   ' → logprob: -8.284637451171875
    6. '
' → logprob: -9.659637451171875
    7. 'self' → logprob: -11.034637451171875
    8. '```' → logprob: -11.159637451171875
    9. 'with' → logprob: -11.659637451171875
    10. '               ' → logprob: -12.034637451171875

Token 2616: ' ones' (ID: 8104)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012361660599708557
    2. '       ' → logprob: -5.762361526489258
    3. ' for' → logprob: -5.762361526489258
    4. 'paths' → logprob: -5.887361526489258
    5. '
' → logprob: -6.887361526489258
    6. '   ' → logprob: -7.137361526489258
    7. '_path' → logprob: -7.262361526489258
    8. 'path' → logprob: -8.137361526489258
    9. '_paths' → logprob: -8.262361526489258
    10. '        
' → logprob: -10.012361526489258

Token 2617: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034630970912985504
    2. '           ' → logprob: -8.875346183776855
    3. '
' → logprob: -9.375346183776855
    4. 'for' → logprob: -9.750346183776855
    5. ' for' → logprob: -9.875346183776855
    6. '   ' → logprob: -11.500346183776855
    7. '```' → logprob: -14.250346183776855
    8. ',' → logprob: -14.875346183776855
    9. '        
' → logprob: -15.000346183776855
    10. 'def' → logprob: -15.250346183776855

Token 2618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009761215187609196
    2. '
' → logprob: -7.625976085662842
    3. 'for' → logprob: -8.1259765625
    4. '   ' → logprob: -8.8759765625
    5. ' for' → logprob: -10.3759765625
    6. '```' → logprob: -11.2509765625
    7. 'def' → logprob: -12.2509765625
    8. '           ' → logprob: -12.8759765625
    9. '
' → logprob: -15.1259765625
    10. '        
' → logprob: -15.6259765625

Token 2619: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39020487666130066
    2. 'for' → logprob: -1.140204906463623
    3. '   ' → logprob: -6.390204906463623
    4. ' for' → logprob: -6.515204906463623
    5. '
' → logprob: -8.765204429626465
    6. 'def' → logprob: -12.265204429626465
    7. '           ' → logprob: -13.015204429626465
    8. '```' → logprob: -13.140204429626465
    9. '	for' → logprob: -13.390204429626465
    10. '        
' → logprob: -13.765204429626465

Token 2620: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12743648886680603
    2. '       ' → logprob: -2.127436399459839
    3. ' for' → logprob: -7.627436637878418
    4. '   ' → logprob: -11.127436637878418
    5. '#' → logprob: -12.877436637878418
    6. '```' → logprob: -12.877436637878418
    7. '	for' → logprob: -14.627436637878418
    8. '           ' → logprob: -14.877436637878418
    9. '
' → logprob: -15.502436637878418
    10. '``' → logprob: -15.877436637878418

Token 2621: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6850101351737976
    2. ' for' → logprob: -1.0600101947784424
    3. '       ' → logprob: -2.4350101947784424
    4. '
' → logprob: -3.4350101947784424
    5. 'def' → logprob: -3.8100101947784424
    6. '   ' → logprob: -5.185009956359863
    7. '```' → logprob: -7.435009956359863
    8. ' ' → logprob: -8.310009956359863
    9. ' def' → logprob: -8.435009956359863
    10. '#' → logprob: -8.560009956359863

Token 2622: ' canonical' (ID: 91323)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36014318466186523
    2. ' for' → logprob: -1.3601431846618652
    3. '       ' → logprob: -3.1101431846618652
    4. '   ' → logprob: -7.860143184661865
    5. '```' → logprob: -8.110143661499023
    6. 'def' → logprob: -8.735143661499023
    7. '
' → logprob: -8.735143661499023
    8. 'not' → logprob: -9.860143661499023
    9. '#' → logprob: -10.485143661499023
    10. 'self' → logprob: -11.235143661499023

Token 2623: 'ization' (ID: 2860)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03765719383955002
    2. '       ' → logprob: -4.037657260894775
    3. '_paths' → logprob: -4.787657260894775
    4. 'paths' → logprob: -5.162657260894775
    5. '_path' → logprob: -6.537657260894775
    6. '   ' → logprob: -6.537657260894775
    7. ' for' → logprob: -7.162657260894775
    8. 'def' → logprob: -7.412657260894775
    9. '
' → logprob: -8.162656784057617
    10. 'path' → logprob: -8.912656784057617

Token 2624: ' knowing' (ID: 19578)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03233890235424042
    2. 'for' → logprob: -3.657338857650757
    3. ' for' → logprob: -5.157339096069336
    4. '   ' → logprob: -9.032339096069336
    5. '           ' → logprob: -9.532339096069336
    6. '
' → logprob: -10.657339096069336
    7. ',' → logprob: -11.282339096069336
    8. 'with' → logprob: -11.532339096069336
    9. 'def' → logprob: -12.282339096069336
    10. ' with' → logprob: -12.532339096069336

Token 2625: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.3022911250591278
    2. ' that' → logprob: -2.30229115486145
    3. '       ' → logprob: -2.42729115486145
    4. '#' → logprob: -3.55229115486145
    5. 'for' → logprob: -4.177290916442871
    6. '   ' → logprob: -4.802290916442871
    7. 'all' → logprob: -5.177290916442871
    8. 'these' → logprob: -5.802290916442871
    9. 'the' → logprob: -6.052290916442871
    10. 'pages' → logprob: -6.302290916442871

Token 2626: ' input' (ID: 3422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1254371553659439
    2. ' for' → logprob: -3.3754372596740723
    3. '#' → logprob: -3.6254372596740723
    4. 'all' → logprob: -4.250437259674072
    5. 'each' → logprob: -4.375437259674072
    6. 'raw' → logprob: -4.625437259674072
    7. 'not' → logprob: -5.375437259674072
    8. '
' → logprob: -5.500437259674072
    9. 'pages' → logprob: -5.875437259674072
    10. 'the' → logprob: -6.500437259674072

Token 2627: ' pages' (ID: 8537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.137086033821106
    2. 'paths' → logprob: -1.387086033821106
    3. 'pages' → logprob: -2.3870859146118164
    4. ' for' → logprob: -2.6370859146118164
    5. '       ' → logprob: -2.8870859146118164
    6. '_paths' → logprob: -3.1370859146118164
    7. '   ' → logprob: -3.6370859146118164
    8. ' pages' → logprob: -3.6370859146118164
    9. '           ' → logprob: -4.012085914611816
    10. '_path' → logprob: -4.137085914611816

Token 2628: ' have' (ID: 679)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.5732381939888
    2. '           ' → logprob: -2.1982381343841553
    3. 'have' → logprob: -2.1982381343841553
    4. ' do' → logprob: -2.1982381343841553
    5. '       ' → logprob: -3.8232381343841553
    6. 'are' → logprob: -4.073238372802734
    7. ' have' → logprob: -4.198238372802734
    8. ' are' → logprob: -4.573238372802734
    9. '   ' → logprob: -4.948238372802734
    10. 'always' → logprob: -5.198238372802734

Token 2629: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.008685247972607613
    2. ' no' → logprob: -4.758685111999512
    3. 'segments' → logprob: -10.383685111999512
    4. '
' → logprob: -11.758685111999512
    5. 'last' → logprob: -12.008685111999512
    6. 'raw' → logprob: -12.383685111999512
    7. '   ' → logprob: -12.758685111999512
    8. ' segments' → logprob: -12.758685111999512
    9. 'none' → logprob: -12.883685111999512
    10. '#' → logprob: -13.008685111999512

Token 2630: ' .' (ID: 887)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.1703685224056244
    2. ' '.'' → logprob: -2.5453684329986572
    3. '.' → logprob: -2.6703684329986572
    4. 'special' → logprob: -5.920368671417236
    5. ' special' → logprob: -6.670368671417236
    6. ''' → logprob: -7.045368671417236
    7. 'segments' → logprob: -7.545368671417236
    8. '`.`' → logprob: -7.545368671417236
    9. '```' → logprob: -7.920368671417236
    10. '`' → logprob: -8.170368194580078

Token 2631: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5793577432632446
    2. ' or' → logprob: -0.8293577432632446
    3. 'and' → logprob: -7.329357624053955
    4. '.' → logprob: -7.579357624053955
    5. ' and' → logprob: -7.829357624053955
    6. ',' → logprob: -8.079358100891113
    7. '..' → logprob: -8.204358100891113
    8. 'segments' → logprob: -8.204358100891113
    9. '   ' → logprob: -8.579358100891113
    10. '#' → logprob: -9.454358100891113

Token 2632: ' ..' (ID: 8548)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.00514623150229454
    2. '..
' → logprob: -5.380146026611328
    3. '.' → logprob: -8.005146026611328
    4. '..

' → logprob: -8.880146026611328
    5. ''' → logprob: -10.130146026611328
    6. '.
' → logprob: -12.255146026611328
    7. '/' → logprob: -12.755146026611328
    8. '..\' → logprob: -13.130146026611328
    9. ' ..' → logprob: -14.005146026611328
    10. '.

' → logprob: -14.130146026611328

Token 2633: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024846509099006653
    2. '
' → logprob: -4.02484655380249
    3. ' for' → logprob: -5.64984655380249
    4. 'for' → logprob: -6.39984655380249
    5. '           ' → logprob: -7.14984655380249
    6. ',' → logprob: -8.524846076965332
    7. '        
' → logprob: -8.774846076965332
    8. '   ' → logprob: -8.774846076965332
    9. ' and' → logprob: -9.524846076965332
    10. '```' → logprob: -10.149846076965332

Token 2634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004446378443390131
    2. '           ' → logprob: -5.504446506500244
    3. '#' → logprob: -8.754446029663086
    4. 'for' → logprob: -9.379446029663086
    5. '   ' → logprob: -9.754446029663086
    6. 'and' → logprob: -10.754446029663086
    7. ' for' → logprob: -11.129446029663086
    8. ' and' → logprob: -11.879446029663086
    9. '               ' → logprob: -12.254446029663086
    10. '
' → logprob: -12.754446029663086

Token 2635: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03752895072102547
    2. '#' (adapté à ' #') → logprob: -3.7875289916992188
    3. 'for' → logprob: -4.662528991699219
    4. '           ' → logprob: -5.537528991699219
    5. '   ' → logprob: -7.662528991699219
    6. 'and' → logprob: -8.662528991699219
    7. ' for' → logprob: -9.662528991699219
    8. '               ' → logprob: -10.662528991699219
    9. '
' → logprob: -11.162528991699219
    10. 'which' → logprob: -11.412528991699219

Token 2636: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5665877461433411
    2. 'for' → logprob: -1.3165876865386963
    3. '#' → logprob: -1.8165876865386963
    4. '   ' → logprob: -7.316587924957275
    5. ' for' → logprob: -7.691587924957275
    6. '
' → logprob: -8.316587448120117
    7. 'and' → logprob: -8.691587448120117
    8. '           ' → logprob: -8.691587448120117
    9. '```' → logprob: -9.441587448120117
    10. 'but' → logprob: -11.191587448120117

Token 2637: ' normal' (ID: 6078)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004392967559397221
    2. ' for' → logprob: -5.754393100738525
    3. '#' → logprob: -7.004393100738525
    4. '       ' → logprob: -8.379392623901367
    5. 'segments' → logprob: -10.004392623901367
    6. '
' → logprob: -11.004392623901367
    7. '           ' → logprob: -12.754392623901367
    8. '```' → logprob: -12.754392623901367
    9. '...' → logprob: -13.254392623901367
    10. 'from' → logprob: -13.379392623901367

Token 2638: 'izer' (ID: 4492)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.3402789533138275
    2. '       ' → logprob: -2.2152788639068604
    3. 'ized' → logprob: -2.8402788639068604
    4. '   ' → logprob: -3.0902788639068604
    5. 'ize' → logprob: -3.4652788639068604
    6. 'izer' → logprob: -3.7152788639068604
    7. 'for' → logprob: -4.9652791023254395
    8. 'izing' → logprob: -5.4652791023254395
    9. '
' → logprob: -5.9652791023254395
    10. 'izes' → logprob: -6.8402791023254395

Token 2639: ' will' (ID: 738)
  Prédit: '.normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.normalize' → logprob: -0.7637418508529663
    2. '_segments' → logprob: -2.388741970062256
    3. 'def' → logprob: -2.763741970062256
    4. '.se' → logprob: -2.888741970062256
    5. '
' → logprob: -3.013741970062256
    6. '   ' → logprob: -3.513741970062256
    7. '.normal' → logprob: -3.638741970062256
    8. 'segments' → logprob: -3.763741970062256
    9. '_paths' → logprob: -4.013741970062256
    10. 'can' → logprob: -4.138741970062256

Token 2640: ' not' (ID: 625)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0916503369808197
    2. 'normalize' → logprob: -2.8416502475738525
    3. ' return' → logprob: -4.966650485992432
    4. 'always' → logprob: -5.216650485992432
    5. 't' → logprob: -5.341650485992432
    6. 'accept' → logprob: -5.966650485992432
    7. 'handle' → logprob: -5.966650485992432
    8. 'process' → logprob: -6.591650485992432
    9. 'not' → logprob: -6.716650485992432
    10. 'def' → logprob: -6.966650485992432

Token 2641: ' fail' (ID: 7111)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.5912360548973083
    2. 'return' → logprob: -0.9662360548973083
    3. 'raise' → logprob: -3.591236114501953
    4. 'reject' → logprob: -4.716236114501953
    5. 'change' → logprob: -5.091236114501953
    6. 'skip' → logprob: -5.466236114501953
    7. ' fail' → logprob: -6.341236114501953
    8. ' return' → logprob: -6.341236114501953
    9. 'consider' → logprob: -6.591236114501953
    10. '   ' → logprob: -6.591236114501953

Token 2642: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004670068621635437
    2. ' for' → logprob: -5.879670143127441
    3. ',' → logprob: -7.379670143127441
    4. '   ' → logprob: -8.129670143127441
    5. '           ' → logprob: -8.129670143127441
    6. 'for' → logprob: -8.629670143127441
    7. ' and' → logprob: -8.879670143127441
    8. '
' → logprob: -9.129670143127441
    9. '```' → logprob: -10.004670143127441
    10. '.' → logprob: -10.254670143127441

Token 2643: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18105705082416534
    2. 'for' → logprob: -2.6810569763183594
    3. '       ' → logprob: -2.8060569763183594
    4. 'and' → logprob: -4.181056976318359
    5. ' for' → logprob: -4.556056976318359
    6. ' and' → logprob: -5.431056976318359
    7. '#' → logprob: -5.806056976318359
    8. '               ' → logprob: -6.806056976318359
    9. 'but' → logprob: -7.431056976318359
    10. '   ' → logprob: -7.681056976318359

Token 2644: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.773356020450592
    2. 'for' → logprob: -1.2733559608459473
    3. 'we' → logprob: -2.1483559608459473
    4. 'some' → logprob: -2.8983559608459473
    5. '
' → logprob: -4.523355960845947
    6. 'the' → logprob: -4.773355960845947
    7. 'may' → logprob: -4.898355960845947
    8. ' for' → logprob: -5.023355960845947
    9. 'they' → logprob: -5.023355960845947
    10. '...' → logprob: -5.148355960845947

Token 2645: ' must' (ID: 2804)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.7486112117767334
    2. 'can' → logprob: -2.2486112117767334
    3. 'continue' → logprob: -2.4986112117767334
    4. '#' → logprob: -2.8736112117767334
    5. 'should' → logprob: -2.9986112117767334
    6. '       ' → logprob: -2.9986112117767334
    7. 'need' → logprob: -3.2486112117767334
    8. '
' → logprob: -3.4986112117767334
    9. 'def' → logprob: -3.9986112117767334
    10. ' must' → logprob: -4.1236114501953125

Token 2646: ' carefully' (ID: 18455)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12351220846176147
    2. 'continue' → logprob: -2.8735122680664062
    3. 'process' → logprob: -4.498512268066406
    4. '#' → logprob: -4.623512268066406
    5. 'handle' → logprob: -4.623512268066406
    6. ' for' → logprob: -4.873512268066406
    7. '
' → logprob: -5.123512268066406
    8. 'add' → logprob: -5.373512268066406
    9. 'register' → logprob: -5.748512268066406
    10. 'ensure' → logprob: -6.748512268066406

Token 2647: ' use' (ID: 1199)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24746951460838318
    2. ' for' → logprob: -2.247469425201416
    3. '       ' → logprob: -3.122469425201416
    4. 'handle' → logprob: -3.622469425201416
    5. '
' → logprob: -4.372469425201416
    6. 'process' → logprob: -4.747469425201416
    7. 'continue' → logprob: -5.497469425201416
    8. 'add' → logprob: -5.622469425201416
    9. '           ' → logprob: -5.872469425201416
    10. 'def' → logprob: -6.372469425201416

Token 2648: ' normal' (ID: 6078)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9861822724342346
    2. 'the' → logprob: -1.2361822128295898
    3. 'raw' → logprob: -1.4861822128295898
    4. 'for' → logprob: -3.48618221282959
    5. 'path' → logprob: -3.86118221282959
    6. 'each' → logprob: -4.73618221282959
    7. 'normalize' → logprob: -4.86118221282959
    8. 'normal' → logprob: -5.36118221282959
    9. ' the' → logprob: -5.73618221282959
    10. '
' → logprob: -5.73618221282959

Token 2649: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.27810749411582947
    2. 'ize' → logprob: -1.5281075239181519
    3. '_path' → logprob: -4.153107643127441
    4. 'ized' → logprob: -5.153107643127441
    5. 'ization' → logprob: -6.028107643127441
    6. 'path' → logprob: -7.028107643127441
    7. 'er' → logprob: -8.653107643127441
    8. '_paths' → logprob: -9.153107643127441
    9. '   ' → logprob: -9.590607643127441
    10. 'IZER' → logprob: -9.778107643127441

Token 2650: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019946584943681955
    2. ' for' → logprob: -6.626994609832764
    3. '           ' → logprob: -7.876994609832764
    4. 'for' → logprob: -9.001995086669922
    5. '   ' → logprob: -9.876995086669922
    6. ',' → logprob: -10.376995086669922
    7. ' to' → logprob: -10.626995086669922
    8. '        
' → logprob: -11.376995086669922
    9. '<|end|>' → logprob: -11.626995086669922
    10. '.' → logprob: -11.751995086669922

Token 2651: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004599350038915873
    2. 'for' → logprob: -5.629599571228027
    3. '
' → logprob: -7.504599571228027
    4. ' for' → logprob: -8.254599571228027
    5. '   ' → logprob: -8.879599571228027
    6. '           ' → logprob: -10.754599571228027
    7. 'def' → logprob: -11.004599571228027
    8. '        
' → logprob: -12.129599571228027
    9. '```' → logprob: -12.629599571228027
    10. '#' → logprob: -14.254599571228027

Token 2652: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5832671523094177
    2. 'for' → logprob: -0.8332671523094177
    3. ' for' → logprob: -5.2082672119140625
    4. '   ' → logprob: -6.4582672119140625
    5. '
' → logprob: -8.958267211914062
    6. 'def' → logprob: -9.083267211914062
    7. 'self' → logprob: -12.583267211914062
    8. '#' (adapté à ' #') → logprob: -12.708267211914062
    9. '```' → logprob: -12.708267211914062
    10. '           ' → logprob: -12.833267211914062

Token 2653: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3141561448574066
    2. '       ' → logprob: -1.314156174659729
    3. ' for' → logprob: -7.3141560554504395
    4. '   ' → logprob: -8.689156532287598
    5. 'def' → logprob: -10.564156532287598
    6. '#' → logprob: -11.439156532287598
    7. '```' → logprob: -11.689156532287598
    8. '           ' → logprob: -12.064156532287598
    9. '
' → logprob: -13.064156532287598
    10. '	for' → logprob: -13.314156532287598

Token 2654: ' register' (ID: 5929)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.816361129283905
    2. 'for' → logprob: -0.816361129283905
    3. ' for' → logprob: -2.56636118888855
    4. '
' → logprob: -3.94136118888855
    5. '   ' → logprob: -4.816360950469971
    6. ' def' → logprob: -5.941360950469971
    7. '       ' → logprob: -6.316360950469971
    8. '```' → logprob: -6.566360950469971
    9. 'add' → logprob: -6.691360950469971
    10. 'continue' → logprob: -6.941360950469971

Token 2655: ' pages' (ID: 8537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02290894091129303
    2. '           ' → logprob: -4.022909164428711
    3. ' for' → logprob: -5.522909164428711
    4. '       ' → logprob: -7.522909164428711
    5. '   ' → logprob: -9.772909164428711
    6. '#' → logprob: -9.772909164428711
    7. 'def' → logprob: -10.772909164428711
    8. '
' → logprob: -10.772909164428711
    9. '```' → logprob: -11.397909164428711
    10. 'raw' → logprob: -11.647909164428711

Token 2656: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008432189002633095
    2. ' for' → logprob: -5.008432388305664
    3. 'for' → logprob: -6.883432388305664
    4. '   ' → logprob: -7.883432388305664
    5. '           ' → logprob: -8.633432388305664
    6. 'def' → logprob: -10.133432388305664
    7. ' =' → logprob: -10.883432388305664
    8. '
' → logprob: -11.383432388305664
    9. ' with' → logprob: -11.633432388305664
    10. '#' → logprob: -11.633432388305664

Token 2657: ' their' (ID: 1043)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02972271665930748
    2. ' for' → logprob: -3.7797226905822754
    3. 'raw' → logprob: -6.154722690582275
    4. 'canonical' → logprob: -6.654722690582275
    5. 'path' → logprob: -7.029722690582275
    6. '
' → logprob: -7.779722690582275
    7. 'self' → logprob: -7.904722690582275
    8. 'def' → logprob: -8.029723167419434
    9. '           ' → logprob: -9.029723167419434
    10. 'normalized' → logprob: -9.154723167419434

Token 2658: ' canonical' (ID: 91323)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.12615889310836792
    2. 'canonical' → logprob: -2.3761589527130127
    3. 'segments' → logprob: -4.501158714294434
    4. 'normalized' → logprob: -4.876158714294434
    5. '_raw' → logprob: -6.876158714294434
    6. '_path' → logprob: -7.126158714294434
    7. '_segments' → logprob: -7.376158714294434
    8. 'fs' → logprob: -7.501158714294434
    9. 'original' → logprob: -7.626158714294434
    10. '
' → logprob: -7.626158714294434

Token 2659: ' normalized' (ID: 59625)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.31817731261253357
    2. 'paths' → logprob: -2.0681772232055664
    3. '_paths' → logprob: -2.5681772232055664
    4. 'path' → logprob: -2.8181772232055664
    5. ' paths' → logprob: -6.193177223205566
    6. 'def' → logprob: -6.568177223205566
    7. 'raw' → logprob: -6.693177223205566
    8. '   ' → logprob: -6.943177223205566
    9. 'form' → logprob: -7.568177223205566
    10. 'normalized' → logprob: -7.693177223205566

Token 2660: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.6723995208740234
    2. 'paths' → logprob: -1.1723995208740234
    3. 'path' → logprob: -2.1723995208740234
    4. '_paths' → logprob: -2.9223995208740234
    5. 'form' → logprob: -4.672399520874023
    6. 'forms' → logprob: -6.547399520874023
    7. 'raw' → logprob: -7.297399520874023
    8. '_form' → logprob: -8.547399520874023
    9. '_raw' → logprob: -8.672399520874023
    10. '_forms' → logprob: -9.422399520874023

Token 2661: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044541265815496445
    2. 'for' → logprob: -3.544541358947754
    3. '
' → logprob: -4.919541358947754
    4. ' for' → logprob: -5.419541358947754
    5. '   ' → logprob: -6.419541358947754
    6. 'def' → logprob: -7.419541358947754
    7. '```' → logprob: -7.794541358947754
    8. '           ' → logprob: -8.794541358947754
    9. '        
' → logprob: -9.669541358947754
    10. '#' → logprob: -10.294541358947754

Token 2662: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012844024458900094
    2. 'for' → logprob: -6.876284599304199
    3. '
' → logprob: -9.0012845993042
    4. ' for' → logprob: -9.5012845993042
    5. '   ' → logprob: -10.1262845993042
    6. '```' → logprob: -12.1262845993042
    7. '           ' → logprob: -12.2512845993042
    8. 'def' → logprob: -12.7512845993042
    9. '
' → logprob: -16.001283645629883
    10. 'self' → logprob: -16.501283645629883

Token 2663: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044573310762643814
    2. 'for' (adapté à ' for') → logprob: -3.1695733070373535
    3. ' for' → logprob: -6.9195733070373535
    4. '           ' → logprob: -7.6695733070373535
    5. '   ' → logprob: -9.294573783874512
    6. '```' → logprob: -11.044573783874512
    7. '
' → logprob: -11.919573783874512
    8. 'def' → logprob: -13.794573783874512
    9. '	for' → logprob: -14.544573783874512
    10. 'self' → logprob: -14.919573783874512

Token 2664: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.026470286771655083
    2. ' raw' → logprob: -3.651470184326172
    3. '           ' → logprob: -8.901470184326172
    4. '	raw' → logprob: -11.651470184326172
    5. 'page' → logprob: -11.901470184326172
    6. '_raw' → logprob: -11.901470184326172
    7. '   ' → logprob: -12.151470184326172
    8. 'path' → logprob: -13.151470184326172
    9. '       ' → logprob: -13.526470184326172
    10. 'self' → logprob: -14.901470184326172

Token 2665: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -1.0564331205387134e-05
    2. 'path' → logprob: -12.37501049041748
    3. '_raw' → logprob: -12.87501049041748
    4. 'raw' → logprob: -14.37501049041748
    5. '_' → logprob: -14.62501049041748
    6. 'Path' → logprob: -14.75001049041748
    7. ' in' → logprob: -15.12501049041748
    8. '   ' → logprob: -15.25001049041748
    9. '_paths' → logprob: -15.37501049041748
    10. '_p' → logprob: -15.50001049041748

Token 2666: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026438701897859573
    2. 'in' → logprob: -3.6514387130737305
    3. '           ' → logprob: -9.77643871307373
    4. '        ' → logprob: -10.90143871307373
    5. '	in' → logprob: -11.15143871307373
    6. '_in' → logprob: -11.90143871307373
    7. '       ' → logprob: -11.90143871307373
    8. 'raw' → logprob: -12.15143871307373
    9. '            ' → logprob: -12.77643871307373
    10. '    ' → logprob: -12.90143871307373

Token 2667: ' pages' (ID: 8537)
  Prédit: 'pages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pages' → logprob: -0.0005592276575043797
    2. ' pages' → logprob: -7.500559329986572
    3. '   ' → logprob: -12.500558853149414
    4. '
' → logprob: -14.000558853149414
    5. '       ' → logprob: -14.625558853149414
    6. '.pages' → logprob: -15.000558853149414
    7. '           ' → logprob: -15.375558853149414
    8. 'self' → logprob: -16.375558853149414
    9. '/pages' → logprob: -16.500558853149414
    10. 'page' → logprob: -16.750558853149414

Token 2668: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28421550989151
    2. ':
' → logprob: -1.5342154502868652
    3. ':' → logprob: -3.5342154502868652
    4. ',' → logprob: -7.034215450286865
    5. '):
' → logprob: -7.534215450286865
    6. '       ' → logprob: -7.784215450286865
    7. ' =' → logprob: -9.159215927124023
    8. '	       ' → logprob: -9.284215927124023
    9. '<|end|>' → logprob: -9.534215927124023
    10. '		' → logprob: -9.534215927124023

Token 2669: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.252865731716156
    2. '       ' → logprob: -1.5028657913208008
    3. '```' → logprob: -8.2528657913208
    4. '	       ' → logprob: -8.5028657913208
    5. ',' → logprob: -9.6278657913208
    6. ':' → logprob: -9.7528657913208
    7. '   ' → logprob: -10.0028657913208
    8. 'self' → logprob: -10.2528657913208
    9. ':
' → logprob: -10.3778657913208
    10. '	   ' → logprob: -10.5028657913208

Token 2670: ' pn' (ID: 80046)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.3707815706729889
    2. '           ' → logprob: -1.2457815408706665
    3. ' path' → logprob: -3.870781660079956
    4. '       ' → logprob: -7.370781421661377
    5. 'self' → logprob: -8.620781898498535
    6. '   ' → logprob: -8.995781898498535
    7. '```' → logprob: -9.245781898498535
    8. '               ' → logprob: -9.620781898498535
    9. 'raw' → logprob: -10.120781898498535
    10. 'pathname' → logprob: -10.370781898498535

Token 2671: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.198792964220047
    2. 'ame' → logprob: -2.4487929344177246
    3. '=' → logprob: -3.3237929344177246
    4. 'ath' → logprob: -3.4487929344177246
    5. '   ' → logprob: -3.9487929344177246
    6. '       ' → logprob: -5.198792934417725
    7. 'path' → logprob: -8.573793411254883
    8. '_path' → logprob: -8.948793411254883
    9. 'th' → logprob: -9.073793411254883
    10. '           ' → logprob: -9.198793411254883

Token 2672: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.000553151941858232
    2. ' Path' → logprob: -7.500553131103516
    3. '	Path' → logprob: -15.625553131103516
    4. '   ' → logprob: -18.375553131103516
    5. 'self' → logprob: -18.875553131103516
    6. '@Path' → logprob: -18.875553131103516
    7. '       ' → logprob: -19.250553131103516
    8. '           ' → logprob: -19.375553131103516
    9. '<Path' → logprob: -19.875553131103516
    10. '(Path' → logprob: -19.875553131103516

Token 2673: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -1.5048530030981055e-06
    2. 'pathname' → logprob: -14.125001907348633
    3. 'Segment' → logprob: -14.500001907348633
    4. 'path' → logprob: -16.750001907348633
    5. '(name' → logprob: -17.250001907348633
    6. 'n' → logprob: -17.250001907348633
    7. 'ename' → logprob: -18.250001907348633
    8. 'na' → logprob: -18.500001907348633
    9. '(path' → logprob: -18.750001907348633
    10. 'ame' → logprob: -18.875001907348633

Token 2674: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -4.143808109802194e-05
    2. '(' → logprob: -10.250041007995605
    3. 'raw' → logprob: -12.250041007995605
    4. '(
' → logprob: -13.875041007995605
    5. ' raw' → logprob: -15.750041007995605
    6. '           ' → logprob: -16.750041961669922
    7. ')' → logprob: -17.125041961669922
    8. '	raw' → logprob: -17.625041961669922
    9. '(r' → logprob: -18.250041961669922
    10. ' (' → logprob: -18.250041961669922

Token 2675: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -9.102680633077398e-05
    2. 'path' → logprob: -9.750090599060059
    3. 'raw' → logprob: -10.875090599060059
    4. '(raw' → logprob: -12.125090599060059
    5. 'Path' → logprob: -12.375090599060059
    6. ')' → logprob: -13.375090599060059
    7. '_raw' → logprob: -14.125090599060059
    8. '```' → logprob: -14.625090599060059
    9. '(path' → logprob: -15.500090599060059
    10. '_PATH' → logprob: -15.500090599060059

Token 2676: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.019053511321544647
    2. ')' → logprob: -4.0190534591674805
    3. '           ' → logprob: -7.1440534591674805
    4. ')
' → logprob: -9.39405345916748
    5. '       ' → logprob: -10.89405345916748
    6. ').' → logprob: -13.26905345916748
    7. '):
' → logprob: -13.26905345916748
    8. ')`
' → logprob: -13.26905345916748
    9. ')

' → logprob: -13.89405345916748
    10. '               ' → logprob: -13.89405345916748

Token 2677: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.8497312895488e-05
    2. 'token' → logprob: -10.625068664550781
    3. 'canonical' → logprob: -11.250068664550781
    4. '       ' → logprob: -11.625068664550781
    5. 'can' → logprob: -11.875068664550781
    6. '```' → logprob: -13.000068664550781
    7. 'result' → logprob: -13.375068664550781
    8. 'tokens' → logprob: -13.375068664550781
    9. 't' → logprob: -13.500068664550781
    10. ' canonical' → logprob: -13.500068664550781

Token 2678: ' can' (ID: 665)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3261716365814209
    2. 'canonical' → logprob: -1.701171636581421
    3. 'can' (adapté à ' can') → logprob: -2.826171636581421
    4. 'canon' → logprob: -3.951171636581421
    5. 'normalized' → logprob: -4.951171875
    6. 'norm' → logprob: -5.451171875
    7. ' canonical' → logprob: -5.826171875
    8. 'c' → logprob: -6.951171875
    9. ' canon' → logprob: -7.201171875
    10. ' can' → logprob: -8.326171875

Token 2679: ' =' (ID: 314)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.7415657043457031
    2. '_path' → logprob: -1.6165657043457031
    3. 'path' → logprob: -1.8665657043457031
    4. 'anonical' → logprob: -2.616565704345703
    5. 'ical' → logprob: -3.241565704345703
    6. 'can' → logprob: -3.991565704345703
    7. 'onc' → logprob: -4.366565704345703
    8. 'canonical' → logprob: -5.241565704345703
    9. 'onic' → logprob: -5.741565704345703
    10. 'onal' → logprob: -5.991565704345703

Token 2680: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000915039679966867
    2. ' self' → logprob: -7.000915050506592
    3. '           ' → logprob: -12.625914573669434
    4. '(self' → logprob: -15.625914573669434
    5. '	self' → logprob: -17.37591552734375
    6. '=self' → logprob: -17.62591552734375
    7. '`' → logprob: -17.75091552734375
    8. '[self' → logprob: -17.75091552734375
    9. '               ' → logprob: -17.87591552734375
    10. '   ' → logprob: -19.00091552734375

Token 2681: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -0.005552354734390974
    2. 'normal' → logprob: -5.255552291870117
    3. 'ormal' → logprob: -8.755552291870117
    4. '.normalize' → logprob: -9.005552291870117
    5. '           ' → logprob: -11.755552291870117
    6. '_normal' → logprob: -12.005552291870117
    7. '(normal' → logprob: -12.630552291870117
    8. '.norm' → logprob: -12.755552291870117
    9. 'normalize' → logprob: -12.755552291870117
    10. '```' → logprob: -12.755552291870117

Token 2682: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.3392529785633087
    2. 'ormal' → logprob: -1.4642529487609863
    3. 'orm' → logprob: -2.9642529487609863
    4. 'ize' → logprob: -6.589252948760986
    5. 'normalize' → logprob: -7.089252948760986
    6. 'normal' → logprob: -7.214252948760986
    7. '   ' → logprob: -7.964252948760986
    8. 'al' → logprob: -8.089253425598145
    9. '```' → logprob: -8.214253425598145
    10. 'or' → logprob: -9.089253425598145

Token 2683: '.normalize' (ID: 92881)
  Prédit: '.normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normalize' → logprob: -0.008617881685495377
    2. 'normalize' → logprob: -4.758617877960205
    3. ' .' → logprob: -13.383618354797363
    4. '.' → logprob: -14.133618354797363
    5. '```' → logprob: -15.133618354797363
    6. '
' → logprob: -15.258618354797363
    7. ' normalize' → logprob: -15.508618354797363
    8. '._' → logprob: -15.883618354797363
    9. '.norm' → logprob: -16.758617401123047
    10. '.normal' → logprob: -17.258617401123047

Token 2684: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.935296834039036e-06
    2. 'pn' → logprob: -12.87500286102295
    3. ' (' → logprob: -16.625003814697266
    4. '(' → logprob: -16.750003814697266
    5. '(
' → logprob: -17.375003814697266
    6. '(P' → logprob: -17.625003814697266
    7. '       ' → logprob: -17.625003814697266
    8. '           ' → logprob: -17.875003814697266
    9. '   ' → logprob: -18.250003814697266
    10. 'p' → logprob: -18.250003814697266

Token 2685: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -17.25
    3. '
' → logprob: -17.375
    4. 'ath' → logprob: -17.375
    5. 'н' → logprob: -18.0
    6. '(' → logprob: -18.3125
    7. 'm' → logprob: -18.375
    8. 'pn' → logprob: -18.6875
    9. '(n' → logprob: -18.9375
    10. '```' → logprob: -19.0

Token 2686: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018251903355121613
    2. ')
' → logprob: -4.018251895904541
    3. ')`
' → logprob: -10.3932523727417
    4. '(p' → logprob: -10.8932523727417
    5. '           ' → logprob: -11.5182523727417
    6. '       ' → logprob: -11.7682523727417
    7. ')`' → logprob: -11.7682523727417
    8. ')
' → logprob: -12.1432523727417
    9. ' )' → logprob: -12.8932523727417
    10. '   ' → logprob: -13.0182523727417

Token 2687: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013536872575059533
    2. '<|end|>' → logprob: -7.376353740692139
    3. '		' → logprob: -8.50135326385498
    4. '               ' → logprob: -9.50135326385498
    5. '<|end|>' → logprob: -9.62635326385498
    6. '
' → logprob: -9.87635326385498
    7. ' if' → logprob: -9.87635326385498
    8. '	       ' → logprob: -10.25135326385498
    9. '       ' → logprob: -10.37635326385498
    10. ')' → logprob: -10.75135326385498

Token 2688: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0071721128188073635
    2. 'if' (adapté à ' if') → logprob: -5.007172107696533
    3. ' if' → logprob: -7.757172107696533
    4. '       ' → logprob: -11.132172584533691
    5. '               ' → logprob: -11.632172584533691
    6. '		' → logprob: -12.757172584533691
    7. '   ' → logprob: -13.507172584533691
    8. '	       ' → logprob: -14.632172584533691
    9. 'self' → logprob: -14.757172584533691
    10. '
' → logprob: -16.507171630859375

Token 2689: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.005233882926404476
    2. ' can' → logprob: -5.2552337646484375
    3. '	can' → logprob: -16.380233764648438
    4. '           ' → logprob: -18.630233764648438
    5. '(can' → logprob: -20.005233764648438
    6. '  ' → logprob: -20.505233764648438
    7. '   ' → logprob: -20.630233764648438
    8. 'not' → logprob: -20.630233764648438
    9. '_can' → logprob: -20.630233764648438
    10. ' ' → logprob: -21.880233764648438

Token 2690: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.029943007975816727
    2. 'is' → logprob: -3.5299429893493652
    3. '           ' → logprob: -9.654943466186523
    4. ' not' → logprob: -9.904943466186523
    5. ')' → logprob: -10.904943466186523
    6. '               ' → logprob: -11.279943466186523
    7. '          ' → logprob: -11.529943466186523
    8. '            ' → logprob: -11.904943466186523
    9. 'not' → logprob: -12.029943466186523
    10. '	is' → logprob: -12.154943466186523

Token 2691: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.31350472569465637
    2. ' not' → logprob: -1.313504695892334
    3. 'None' → logprob: -8.688505172729492
    4. '           ' → logprob: -9.813505172729492
    5. '   ' → logprob: -12.313505172729492
    6. ' None' → logprob: -12.438505172729492
    7. '	not' → logprob: -12.438505172729492
    8. 'Not' → logprob: -13.188505172729492
    9. '       ' → logprob: -13.563505172729492
    10. '               ' → logprob: -13.938505172729492

Token 2692: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.493430894101039e-05
    2. ' None' → logprob: -9.500075340270996
    3. '           ' → logprob: -17.87507438659668
    4. 'not' → logprob: -18.12507438659668
    5. '_None' → logprob: -18.25007438659668
    6. '   ' → logprob: -18.37507438659668
    7. 'No' → logprob: -18.87507438659668
    8. '(None' → logprob: -19.25007438659668
    9. '=None' → logprob: -19.37507438659668
    10. 'none' → logprob: -19.62507438659668

Token 2693: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0980931967496872
    2. ':
' → logprob: -2.473093271255493
    3. ':' → logprob: -4.848093032836914
    4. '           ' → logprob: -7.473093032836914
    5. ' and' → logprob: -8.723093032836914
    6. '):
' → logprob: -8.848093032836914
    7. '():
' → logprob: -9.473093032836914
    8. '<|end|>' → logprob: -9.598093032836914
    9. ',' → logprob: -9.723093032836914
    10. '                   ' → logprob: -10.473093032836914

Token 2694: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017220689915120602
    2. 'self' → logprob: -6.8767218589782715
    3. ' self' → logprob: -7.3767218589782715
    4. '           ' → logprob: -9.75172233581543
    5. '   ' → logprob: -13.00172233581543
    6. '                   ' → logprob: -13.25172233581543
    7. '	           ' → logprob: -15.25172233581543
    8. '              ' → logprob: -15.75172233581543
    9. '                       ' → logprob: -16.00172233581543
    10. '       ' → logprob: -16.37672233581543

Token 2695: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3947247266769409
    2. '               ' → logprob: -1.144724726676941
    3. ' self' → logprob: -5.1447248458862305
    4. 'id' → logprob: -6.8947248458862305
    5. '           ' → logprob: -7.0197248458862305
    6. '   ' → logprob: -10.26972484588623
    7. '_' → logprob: -11.39472484588623
    8. '                   ' → logprob: -11.76972484588623
    9. ' id' → logprob: -12.14472484588623
    10. 'page' → logprob: -12.26972484588623

Token 2696: ' always' (ID: 3324)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7577510476112366
    2. '               ' → logprob: -0.8827510476112366
    3. ' self' → logprob: -2.382750988006592
    4. '           ' → logprob: -3.882750988006592
    5. 'id' → logprob: -5.507750988006592
    6. ' id' → logprob: -8.00775146484375
    7. '   ' → logprob: -8.75775146484375
    8. '                   ' → logprob: -10.38275146484375
    9. '```' → logprob: -10.38275146484375
    10. '	           ' → logprob: -10.63275146484375

Token 2697: ' should' (ID: 1757)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5639519691467285
    2. ':' → logprob: -1.5639519691467285
    3. '           ' → logprob: -1.8139519691467285
    4. ':
' → logprob: -3.9389519691467285
    5. '```' → logprob: -4.4389519691467285
    6. '.' → logprob: -4.8139519691467285
    7. '<|end|>' → logprob: -5.6889519691467285
    8. 'and' → logprob: -6.0639519691467285
    9. '                       ' → logprob: -6.0639519691467285
    10. 'continue' → logprob: -6.3139519691467285

Token 2698: ' be' (ID: 413)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4121708571910858
    2. 'continue' → logprob: -1.5371708869934082
    3. '           ' → logprob: -3.037170886993408
    4. ':' → logprob: -3.787170886993408
    5. '.' → logprob: -4.287170886993408
    6. ' continue' → logprob: -4.537170886993408
    7. ':
' → logprob: -5.162170886993408
    8. '```' → logprob: -5.412170886993408
    9. ' be' → logprob: -5.787170886993408
    10. 'yield' → logprob: -6.037170886993408

Token 2699: ' not' (ID: 625)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.13944314420223236
    2. ' True' → logprob: -2.1394431591033936
    3. '           ' → logprob: -5.3894429206848145
    4. 'self' → logprob: -5.8894429206848145
    5. '               ' → logprob: -6.0144429206848145
    6. 'continue' → logprob: -6.7644429206848145
    7. ' continue' → logprob: -7.1394429206848145
    8. ' self' → logprob: -8.639443397521973
    9. 'true' → logprob: -9.514443397521973
    10. '1' → logprob: -9.514443397521973

Token 2700: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014165159314870834
    2. ' None' → logprob: -4.264164924621582
    3. 'none' → logprob: -13.889164924621582
    4. '_None' → logprob: -14.764164924621582
    5. '=None' → logprob: -15.764164924621582
    6. '
' → logprob: -16.5141658782959
    7. '_none' → logprob: -16.5141658782959
    8. '(None' → logprob: -17.2641658782959
    9. 'null' → logprob: -17.2641658782959
    10. '```' → logprob: -17.3891658782959

Token 2701: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008067715098150074
    2. '           ' → logprob: -8.12580680847168
    3. ':
' → logprob: -8.25080680847168
    4. ':' → logprob: -9.25080680847168
    5. ',' → logprob: -9.87580680847168
    6. 'self' → logprob: -10.87580680847168
    7. '):
' → logprob: -11.12580680847168
    8. '<|end|>' → logprob: -11.12580680847168
    9. ' self' → logprob: -11.75080680847168
    10. '                   ' → logprob: -12.00080680847168

Token 2702: ' input' (ID: 3422)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.48574158549308777
    2. 'pn' → logprob: -1.4857416152954102
    3. 'can' → logprob: -2.48574161529541
    4. 'pages' → logprob: -3.23574161529541
    5. 'self' → logprob: -4.73574161529541
    6. 'valid' → logprob: -4.98574161529541
    7. 'this' → logprob: -5.36074161529541
    8. ' raw' → logprob: -5.48574161529541
    9. ' pn' → logprob: -5.73574161529541
    10. ' pages' → logprob: -6.73574161529541

Token 2703: ' pages' (ID: 8537)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.810852587223053
    2. '               ' → logprob: -1.0608525276184082
    3. ':
' → logprob: -1.6858525276184082
    4. ':' → logprob: -3.935852527618408
    5. ',' → logprob: -7.435852527618408
    6. '):
' → logprob: -7.435852527618408
    7. '.' → logprob: -7.560852527618408
    8. ' and' → logprob: -7.560852527618408
    9. '```' → logprob: -8.310853004455566
    10. ')' → logprob: -8.310853004455566

Token 2704: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010039969347417355
    2. ':
' → logprob: -4.885039806365967
    3. ':' → logprob: -6.385039806365967
    4. '           ' → logprob: -7.760039806365967
    5. '):
' → logprob: -9.260040283203125
    6. ' and' → logprob: -9.260040283203125
    7. ',' → logprob: -9.635040283203125
    8. '	           ' → logprob: -11.635040283203125
    9. 'self' → logprob: -11.760040283203125
    10. ')' → logprob: -12.510040283203125

Token 2705: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032867982517927885
    2. '           ' → logprob: -5.753286838531494
    3. 'self' → logprob: -9.378286361694336
    4. ' self' → logprob: -11.003286361694336
    5. '                   ' → logprob: -13.128286361694336
    6. '       ' → logprob: -13.128286361694336
    7. '```' → logprob: -13.128286361694336
    8. '   ' → logprob: -14.503286361694336
    9. '              ' → logprob: -14.628286361694336
    10. '	           ' → logprob: -15.003286361694336

Token 2706: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.021170591935515404
    2. '               ' → logprob: -4.396170616149902
    3. ' self' → logprob: -5.021170616149902
    4. '                   ' → logprob: -6.521170616149902
    5. 'id' → logprob: -8.521170616149902
    6. '   ' → logprob: -9.021170616149902
    7. '_' → logprob: -9.271170616149902
    8. '           ' → logprob: -9.521170616149902
    9. ' _' → logprob: -11.146170616149902
    10. '_id' → logprob: -11.396170616149902

Token 2707: '.registry' (ID: 101460)
  Prédit: '.registry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.registry' → logprob: -0.16024281084537506
    2. 'registry' → logprob: -1.9102427959442139
    3. '
' → logprob: -11.660243034362793
    4. '.register' → logprob: -12.410243034362793
    5. '.reg' → logprob: -13.410243034362793
    6. '.registration' → logprob: -13.785243034362793
    7. '.' → logprob: -14.535243034362793
    8. 'Registry' → logprob: -14.785243034362793
    9. 'registr' → logprob: -14.910243034362793
    10. '_registry' → logprob: -15.035243034362793

Token 2708: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.007317567011341e-05
    2. 'add' → logprob: -9.500089645385742
    3. '.' → logprob: -11.250089645385742
    4. '   ' → logprob: -13.625089645385742
    5. '       ' → logprob: -15.375089645385742
    6. ' .' → logprob: -15.875089645385742
    7. '           ' → logprob: -16.125089645385742
    8. '.page' → logprob: -16.375089645385742
    9. '.get' → logprob: -16.875089645385742
    10. '_add' → logprob: -17.000089645385742

Token 2709: '_page' (ID: 13263)
  Prédit: '_page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_page' → logprob: -0.00013488641707226634
    2. 'page' → logprob: -9.250134468078613
    3. '_path' → logprob: -11.125134468078613
    4. 'Page' → logprob: -11.625134468078613
    5. '(page' → logprob: -13.500134468078613
    6. '(c' → logprob: -13.500134468078613
    7. '(' → logprob: -13.625134468078613
    8. 's' → logprob: -13.625134468078613
    9. 'can' → logprob: -14.375134468078613
    10. 'p' → logprob: -14.500134468078613

Token 2710: '(can' (ID: 165148)
  Prédit: '(can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(can' → logprob: -0.003183420980349183
    2. 'can' → logprob: -5.753183364868164
    3. ' can' → logprob: -12.628183364868164
    4. '(' → logprob: -13.503183364868164
    5. '	can' → logprob: -14.003183364868164
    6. '_can' → logprob: -17.003183364868164
    7. ' (' → logprob: -17.503183364868164
    8. '   ' → logprob: -17.503183364868164
    9. '(c' → logprob: -17.628183364868164
    10. '.can' → logprob: -18.128183364868164

Token 2711: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021903318702243268
    2. ')
' → logprob: -9.250219345092773
    3. '           ' → logprob: -9.625219345092773
    4. '               ' → logprob: -10.375219345092773
    5. '       ' → logprob: -10.875219345092773
    6. '   ' → logprob: -13.500219345092773
    7. ' )' → logprob: -14.125219345092773
    8. '()' → logprob: -14.125219345092773
    9. '())' → logprob: -14.125219345092773
    10. '<|end|>' → logprob: -14.250219345092773

Token 2712: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2713: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03852267935872078
    2. 'def' (adapté à ' def') → logprob: -3.288522720336914
    3. '
' → logprob: -7.788522720336914
    4. '    
' → logprob: -10.288522720336914
    5. ' def' → logprob: -10.788522720336914
    6. '```' → logprob: -11.538522720336914
    7. '	def' → logprob: -14.038522720336914
    8. '        
' → logprob: -14.413522720336914
    9. '<|end|>' → logprob: -15.413522720336914
    10. '       ' → logprob: -15.538522720336914

Token 2714: ' query' (ID: 5703)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.8671519756317139
    2. 'query' → logprob: -1.2421519756317139
    3. 'resolve' → logprob: -1.9921519756317139
    4. 'answer' → logprob: -3.242151975631714
    5. 'lookup' → logprob: -3.242151975631714
    6. ' query' → logprob: -3.992151975631714
    7. 'process' → logprob: -4.617152214050293
    8. 'match' → logprob: -4.617152214050293
    9. 'find' → logprob: -4.617152214050293
    10. ' normalize' → logprob: -5.117152214050293

Token 2715: '(self' (ID: 2402)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.05356723442673683
    2. '(self' → logprob: -3.0535671710968018
    3. '_normal' → logprob: -5.928567409515381
    4. '_url' → logprob: -6.928567409515381
    5. '(' → logprob: -7.553567409515381
    6. '_paths' → logprob: -7.678567409515381
    7. '_page' → logprob: -9.678566932678223
    8. '(
' → logprob: -9.803566932678223
    9. '_' → logprob: -10.428566932678223
    10. '_raw' → logprob: -10.553566932678223

Token 2716: ',' (ID: 11)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.35522177815437317
    2. '(self' → logprob: -1.4802217483520508
    3. '_paths' → logprob: -3.855221748352051
    4. ',' → logprob: -3.980221748352051
    5. 'self' → logprob: -4.230221748352051
    6. 'path' → logprob: -4.730221748352051
    7. ')(' → logprob: -6.105221748352051
    8. '_normal' → logprob: -6.480221748352051
    9. ')' → logprob: -7.105221748352051
    10. '(' → logprob: -7.230221748352051

Token 2717: ' p' (ID: 275)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -1.3577666282653809
    2. ' raw' → logprob: -1.6077666282653809
    3. 'path' → logprob: -1.6077666282653809
    4. 'raw' → logprob: -2.107766628265381
    5. ' query' → logprob: -2.357766628265381
    6. ' path' → logprob: -2.607766628265381
    7. 'paths' → logprob: -4.232766628265381
    8. 'input' → logprob: -5.107766628265381
    9. 'pathname' → logprob: -5.107766628265381
    10. ' paths' → logprob: -5.357766628265381

Token 2718: '1' (ID: 16)
  Prédit: 'ath'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ath' → logprob: -6.146429223008454e-05
    2. 'aths' → logprob: -10.00006103515625
    3. 'at' → logprob: -11.87506103515625
    4. 'a' → logprob: -13.37506103515625
    5. ' ath' → logprob: -13.62506103515625
    6. 'atho' → logprob: -13.75006103515625
    7. 'n' → logprob: -13.87506103515625
    8. 'pathname' → logprob: -14.12506103515625
    9. 'th' → logprob: -14.50006103515625
    10. ')' → logprob: -14.75006103515625

Token 2719: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30051761865615845
    2. '):
' → logprob: -1.9255175590515137
    3. '):' → logprob: -2.4255175590515137
    4. ',' → logprob: -4.425517559051514
    5. ')' → logprob: -5.300517559051514
    6. '_' → logprob: -6.175517559051514
    7. '[' → logprob: -6.800517559051514
    8. ' :' → logprob: -6.925517559051514
    9. '_token' → logprob: -7.300517559051514
    10. '   ' → logprob: -7.550517559051514

Token 2720: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.021924162283539772
    2. 'Path' → logprob: -4.396924018859863
    3. ' str' → logprob: -5.146924018859863
    4. ')' → logprob: -6.521924018859863
    5. '[str' → logprob: -7.896924018859863
    6. ' Path' → logprob: -8.021924018859863
    7. ':str' → logprob: -8.271924018859863
    8. 'p' → logprob: -8.271924018859863
    9. '):
' → logprob: -8.396924018859863
    10. 'Str' → logprob: -8.896924018859863

Token 2721: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13754113018512726
    2. '):
' → logprob: -2.2625410556793213
    3. ':' → logprob: -4.3875412940979
    4. ',' → logprob: -4.7625412940979
    5. '       ' → logprob: -6.1375412940979
    6. '   ' → logprob: -7.0125412940979
    7. '):' → logprob: -8.262540817260742
    8. '")' → logprob: -10.762540817260742
    9. ')->' → logprob: -10.887540817260742
    10. ' )' → logprob: -11.262540817260742

Token 2722: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02054831013083458
    2. ' p' → logprob: -3.8955483436584473
    3. '   ' → logprob: -12.520547866821289
    4. '    ' → logprob: -13.895547866821289
    5. ' ' → logprob: -14.395547866821289
    6. '  ' → logprob: -14.645547866821289
    7. '       ' → logprob: -14.770547866821289
    8. '      ' → logprob: -16.02054786682129
    9. '     ' → logprob: -16.39554786682129
    10. '
' → logprob: -16.89554786682129

Token 2723: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. 'ath' → logprob: -11.250015258789062
    3. 'n' → logprob: -14.000015258789062
    4. 'p' → logprob: -14.875015258789062
    5. 'aths' → logprob: -16.000015258789062
    6. '２' → logprob: -16.625015258789062
    7. 't' → logprob: -16.875015258789062
    8. 'q' → logprob: -17.000015258789062
    9. 's' → logprob: -17.125015258789062
    10. '۲' → logprob: -17.500015258789062

Token 2724: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054057952016592026
    2. ')' → logprob: -3.1790578365325928
    3. '):' → logprob: -4.804058074951172
    4. '):
' → logprob: -5.929058074951172
    5. '   ' → logprob: -9.929058074951172
    6. '')' → logprob: -10.679058074951172
    7. '")' → logprob: -11.179058074951172
    8. ',' → logprob: -11.304058074951172
    9. ' :' → logprob: -11.804058074951172
    10. '':' → logprob: -11.929058074951172

Token 2725: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.1002146452665329
    2. ' str' → logprob: -2.350214719772339
    3. ')' → logprob: -12.975214958190918
    4. 's' → logprob: -13.350214958190918
    5. '[str' → logprob: -13.600214958190918
    6. '   ' → logprob: -14.100214958190918
    7. 'p' → logprob: -14.225214958190918
    8. '	str' → logprob: -14.725214958190918
    9. ' ' → logprob: -15.100214958190918
    10. '(str' → logprob: -15.475214958190918

Token 2726: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03858484327793121
    2. '):
' → logprob: -3.2885849475860596
    3. '):' → logprob: -8.03858470916748
    4. '   ' → logprob: -9.28858470916748
    5. '       ' → logprob: -10.16358470916748
    6. ':' → logprob: -10.16358470916748
    7. ')->' → logprob: -11.16358470916748
    8. '")' → logprob: -11.78858470916748
    9. ',' → logprob: -12.03858470916748
    10. '')' → logprob: -12.03858470916748

Token 2727: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5860912799835205
    2. '       ' → logprob: -0.9610912799835205
    3. ')' → logprob: -3.9610912799835205
    4. '):
' → logprob: -4.711091041564941
    5. '(
' → logprob: -5.086091041564941
    6. '(p' → logprob: -5.211091041564941
    7. ':' → logprob: -5.211091041564941
    8. '(' → logprob: -5.211091041564941
    9. ':
' → logprob: -5.461091041564941
    10. ')->' → logprob: -5.961091041564941

Token 2728: ' str' (ID: 989)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.015489296056330204
    2. 'int' → logprob: -5.140489101409912
    3. 'Optional' → logprob: -5.140489101409912
    4. 'str' → logprob: -5.640489101409912
    5. ' bool' → logprob: -9.89048957824707
    6. 'Union' → logprob: -10.14048957824707
    7. ''' → logprob: -12.26548957824707
    8. ' Optional' → logprob: -12.76548957824707
    9. 'List' → logprob: -13.14048957824707
    10. '"' → logprob: -13.14048957824707

Token 2729: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07085994631052017
    2. '       ' → logprob: -2.820859909057617
    3. '(' → logprob: -5.570859909057617
    4. '```' → logprob: -6.070859909057617
    5. '   ' → logprob: -6.570859909057617
    6. '(
' → logprob: -7.320859909057617
    7. 'self' → logprob: -8.445859909057617
    8. ' (' → logprob: -9.695859909057617
    9. '	self' → logprob: -10.195859909057617
    10. ':' → logprob: -10.320859909057617

Token 2730: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010714695788919926
    2. '```' → logprob: -5.385714530944824
    3. '(' → logprob: -6.010714530944824
    4. '"""' → logprob: -7.135714530944824
    5. '"' → logprob: -7.510714530944824
    6. '	' → logprob: -7.760714530944824
    7. ''' → logprob: -8.010714530944824
    8. '        
' → logprob: -8.510714530944824
    9. '"""
' → logprob: -8.635714530944824
    10. ':' → logprob: -8.635714530944824

Token 2731: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00377669301815331
    2. 'p' → logprob: -6.378776550292969
    3. '```' → logprob: -6.503776550292969
    4. '#' → logprob: -8.628776550292969
    5. '`' → logprob: -9.378776550292969
    6. 'path' → logprob: -9.503776550292969
    7. '``' → logprob: -10.253776550292969
    8. '"' → logprob: -10.503776550292969
    9. 'self' → logprob: -10.753776550292969
    10. '(p' → logprob: -10.878776550292969

Token 2732: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2045532464981079
    2. 'p' → logprob: -1.954553246498108
    3. '```' → logprob: -3.9545531272888184
    4. 'path' → logprob: -4.454553127288818
    5. 'try' → logprob: -5.204553127288818
    6. '#' → logprob: -6.329553127288818
    7. '``' → logprob: -6.329553127288818
    8. '`' → logprob: -7.454553127288818
    9. '"' → logprob: -7.454553127288818
    10. 'pn' → logprob: -7.454553127288818

Token 2733: ' Given' (ID: 29844)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33634358644485474
    2. 'p' → logprob: -1.46134352684021
    3. '#' → logprob: -3.08634352684021
    4. 'path' → logprob: -5.836343765258789
    5. '"""
' → logprob: -6.586343765258789
    6. 'if' → logprob: -7.211343765258789
    7. 'Can' → logprob: -7.461343765258789
    8. '"""' → logprob: -7.711343765258789
    9. 'try' → logprob: -8.211343765258789
    10. 'Normalize' → logprob: -8.586343765258789

Token 2734: ' two' (ID: 1920)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6957463622093201
    2. ' p' → logprob: -0.6957463622093201
    3. 'path' → logprob: -7.445746421813965
    4. ' raw' → logprob: -8.070746421813965
    5. 'self' → logprob: -8.070746421813965
    6. ' path' → logprob: -8.195746421813965
    7. ' self' → logprob: -8.445746421813965
    8. ' a' → logprob: -8.570746421813965
    9. '       ' → logprob: -8.570746421813965
    10. 'raw' → logprob: -8.820746421813965

Token 2735: ' raw' (ID: 11428)
  Prédit: ' paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' paths' → logprob: -0.45818087458610535
    2. ' normalized' → logprob: -2.2081809043884277
    3. 'paths' → logprob: -2.4581809043884277
    4. ' canonical' → logprob: -3.4581809043884277
    5. 'path' → logprob: -3.7081809043884277
    6. ' path' → logprob: -3.7081809043884277
    7. '_path' → logprob: -3.8331809043884277
    8. 'normalized' → logprob: -3.9581809043884277
    9. ' 
' → logprob: -4.458180904388428
    10. 'canonical' → logprob: -4.833180904388428

Token 2736: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.9645904898643494
    2. ' ' → logprob: -1.2145905494689941
    3. ' paths' → logprob: -1.4645905494689941
    4. ' path' → logprob: -3.339590549468994
    5. '_' → logprob: -3.714590549468994
    6. '_paths' → logprob: -3.964590549468994
    7. ' _' → logprob: -5.464590549468994
    8. 'path' → logprob: -5.714590549468994
    9. ' p' → logprob: -6.714590549468994
    10. 'paths' → logprob: -6.839590549468994

Token 2737: 'names' (ID: 23354)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04375050589442253
    2. 'names' → logprob: -3.918750524520874
    3. 'name' → logprob: -4.293750286102295
    4. ' s' → logprob: -5.918750286102295
    5. '_' → logprob: -5.918750286102295
    6. '1' → logprob: -6.168750286102295
    7. 'n' → logprob: -7.418750286102295
    8. ')' → logprob: -8.168750762939453
    9. ' strings' → logprob: -8.418750762939453
    10. '):
' → logprob: -8.918750762939453

Token 2738: ' strings' (ID: 18279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.799469530582428
    2. ':' → logprob: -1.6744694709777832
    3. '(p' → logprob: -1.9244694709777832
    4. ':
' → logprob: -2.424469470977783
    5. '1' → logprob: -2.549469470977783
    6. '       ' → logprob: -4.424469470977783
    7. '):
' → logprob: -4.424469470977783
    8. 's' → logprob: -5.299469470977783
    9. ' (' → logprob: -5.674469470977783
    10. '_' → logprob: -5.799469470977783

Token 2739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8193470239639282
    2. '       ' → logprob: -1.6943470239639282
    3. '(p' → logprob: -1.6943470239639282
    4. ':
' → logprob: -2.0693469047546387
    5. '):
' → logprob: -4.194346904754639
    6. ':' → logprob: -4.319346904754639
    7. ' (' → logprob: -5.319346904754639
    8. ',
' → logprob: -5.569346904754639
    9. '   ' → logprob: -5.944346904754639
    10. ')' → logprob: -6.069346904754639

Token 2740: ' determine' (ID: 11433)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06342052668333054
    2. '
' → logprob: -3.938420534133911
    3. 'p' → logprob: -4.313420295715332
    4. 'path' → logprob: -4.688420295715332
    5. ' p' → logprob: -4.813420295715332
    6. '#' → logprob: -6.063420295715332
    7. ' path' → logprob: -6.313420295715332
    8. '        
' → logprob: -6.563420295715332
    9. '"""
' → logprob: -7.063420295715332
    10. 'token' → logprob: -7.438420295715332

Token 2741: ' relations' (ID: 5523)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4990159869194031
    2. ' whether' → logprob: -1.3740160465240479
    3. 'whether' → logprob: -3.249016046524048
    4. 'if' → logprob: -3.249016046524048
    5. '"' → logprob: -3.499016046524048
    6. ''' → logprob: -3.624016046524048
    7. ' the' → logprob: -5.624015808105469
    8. ' their' → logprob: -7.374015808105469
    9. ' which' → logprob: -8.249015808105469
    10. 'w' → logprob: -8.624015808105469

Token 2742: ' ("' (ID: 7109)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44706296920776367
    2. '(
' → logprob: -2.1970629692077637
    3. '(self' → logprob: -2.4470629692077637
    4. ' between' → logprob: -2.8220629692077637
    5. ':' → logprob: -4.072062969207764
    6. ':
' → logprob: -4.197062969207764
    7. ''' → logprob: -4.322062969207764
    8. ' (' → logprob: -4.697062969207764
    9. '_' → logprob: -4.822062969207764
    10. '   ' → logprob: -4.822062969207764

Token 2743: 'yes' (ID: 6763)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.3102583587169647
    2. 'E' → logprob: -2.060258388519287
    3. '"' → logprob: -2.435258388519287
    4. 'same' → logprob: -4.810258388519287
    5. 'Equal' → logprob: -5.060258388519287
    6. ' equal' → logprob: -5.060258388519287
    7. ''' → logprob: -5.060258388519287
    8. 'SUB' → logprob: -6.060258388519287
    9. 'equ' → logprob: -6.185258388519287
    10. 'equals' → logprob: -6.310258388519287

Token 2744: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.11907745897769928
    2. '"' → logprob: -2.244077444076538
    3. '","' → logprob: -6.119077682495117
    4. ' ",' → logprob: -6.119077682495117
    5. '",
' → logprob: -7.244077682495117
    6. '\n' → logprob: -7.994077682495117
    7. '")' → logprob: -8.994077682495117
    8. ' "' → logprob: -8.994077682495117
    9. '   ' → logprob: -9.119077682495117
    10. '/' → logprob: -9.744077682495117

Token 2745: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0027108420617878437
    2. ' "' → logprob: -6.002710819244385
    3. ' no' → logprob: -9.252711296081543
    4. 'no' → logprob: -9.877711296081543
    5. '```' → logprob: -10.377711296081543
    6. ''' → logprob: -10.877711296081543
    7. '"""' → logprob: -11.627711296081543
    8. '   ' → logprob: -12.377711296081543
    9. ' ' → logprob: -12.627711296081543
    10. '"""
' → logprob: -12.627711296081543

Token 2746: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.11457925289869308
    2. ' no' → logprob: -2.239579200744629
    3. 'maybe' → logprob: -7.864579200744629
    4. 'equal' → logprob: -8.239579200744629
    5. 'same' → logprob: -8.614579200744629
    6. '"' → logprob: -8.739579200744629
    7. 'yes' → logprob: -9.364579200744629
    8. ' maybe' → logprob: -9.739579200744629
    9. 'sub' → logprob: -9.989579200744629
    10. ' ' → logprob: -10.114579200744629

Token 2747: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.10007552802562714
    2. '")' → logprob: -2.4750754833221436
    3. '"' → logprob: -4.600075721740723
    4. '")
' → logprob: -7.725075721740723
    5. ',' → logprob: -8.350075721740723
    6. '"):
' → logprob: -9.100075721740723
    7. ' ",' → logprob: -9.975075721740723
    8. ')' → logprob: -9.975075721740723
    9. ' or' → logprob: -10.100075721740723
    10. '"):' → logprob: -10.475075721740723

Token 2748: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004344071727246046
    2. ' "' → logprob: -6.0043439865112305
    3. ' or' → logprob: -7.1293439865112305
    4. '")' → logprob: -8.00434398651123
    5. '",' → logprob: -8.75434398651123
    6. '```' → logprob: -9.12934398651123
    7. '"\' → logprob: -9.25434398651123
    8. ')' → logprob: -9.37934398651123
    9. '"
' → logprob: -9.87934398651123
    10. '"""' → logprob: -9.87934398651123

Token 2749: 'not' (ID: 2878)
  Prédit: 'maybe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maybe' → logprob: -0.5270993709564209
    2. 'unknown' → logprob: -1.902099370956421
    3. '")' → logprob: -2.777099370956421
    4. '?' → logprob: -2.777099370956421
    5. '?"' → logprob: -3.277099370956421
    6. '"' → logprob: -3.402099370956421
    7. 'same' → logprob: -4.277099609375
    8. '?")
' → logprob: -5.027099609375
    9. '"?' → logprob: -5.277099609375
    10. ' maybe' → logprob: -5.527099609375

Token 2750: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.711958646774292
    2. 'found' → logprob: -1.711958646774292
    3. ' sure' → logprob: -2.586958646774292
    4. ' applicable' → logprob: -2.711958646774292
    5. '_app' → logprob: -3.586958646774292
    6. '_' → logprob: -3.711958646774292
    7. '_found' → logprob: -3.836958646774292
    8. 'app' → logprob: -3.961958646774292
    9. 'sure' → logprob: -4.586958885192871
    10. ' ")' → logprob: -4.836958885192871

Token 2751: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -1.0854116678237915
    2. '",' → logprob: -1.2104116678237915
    3. '"):
' → logprob: -1.7104116678237915
    4. '")' → logprob: -2.085411548614502
    5. '"' → logprob: -2.960411548614502
    6. '"):' → logprob: -5.710411548614502
    7. ')' → logprob: -7.335411548614502
    8. '")
' → logprob: -7.335411548614502
    9. '```' → logprob: -7.335411548614502
    10. '"):
' → logprob: -8.08541202545166

Token 2752: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13845381140708923
    2. '(self' → logprob: -2.513453722000122
    3. '(
' → logprob: -4.013453960418701
    4. '"' → logprob: -4.638453960418701
    5. '(' → logprob: -5.388453960418701
    6. '):
' → logprob: -5.638453960418701
    7. ''' → logprob: -6.263453960418701
    8. '"""
' → logprob: -6.638453960418701
    9. '   ' → logprob: -6.763453960418701
    10. '('' → logprob: -6.763453960418701

Token 2753: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007445832248777151
    2. '):
' → logprob: -5.757445812225342
    3. '```' → logprob: -6.507445812225342
    4. ')' → logprob: -7.882445812225342
    5. '
' → logprob: -7.882445812225342
    6. '"' → logprob: -8.3824462890625
    7. '        
' → logprob: -8.5074462890625
    8. ':' → logprob: -8.5074462890625
    9. '"""
' (adapté à ' """
') → logprob: -8.6324462890625
    10. '(' → logprob: -8.8824462890625

Token 2754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009511926211416721
    2. '```' → logprob: -4.759511947631836
    3. '        
' → logprob: -7.509511947631836
    4. '``' → logprob: -8.884511947631836
    5. '`' → logprob: -9.259511947631836
    6. '`
' → logprob: -10.759511947631836
    7. '    
' → logprob: -11.259511947631836
    8. '
' → logprob: -11.384511947631836
    9. ',' → logprob: -11.884511947631836
    10. '   ' → logprob: -12.009511947631836

Token 2755: ' pn' (ID: 80046)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14900535345077515
    2. 'p' → logprob: -2.02400541305542
    3. '```' → logprob: -5.39900541305542
    4. '#' → logprob: -7.39900541305542
    5. 'path' → logprob: -8.274004936218262
    6. ' p' → logprob: -8.524004936218262
    7. '        
' → logprob: -8.649004936218262
    8. '
' → logprob: -9.024004936218262
    9. '``' → logprob: -9.524004936218262
    10. 'try' → logprob: -9.524004936218262

Token 2756: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016600342467427254
    2. '_' → logprob: -4.141600131988525
    3. ' =' → logprob: -7.766600131988525
    4. '_p' → logprob: -9.141600608825684
    5. '=' → logprob: -10.891600608825684
    6. 'p' → logprob: -12.516600608825684
    7. '_=' → logprob: -13.016600608825684
    8. '2' → logprob: -13.266600608825684
    9. ' _' → logprob: -13.266600608825684
    10. '=_' → logprob: -13.641600608825684

Token 2757: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868725895881653
    2. ' =' → logprob: -1.1368725299835205
    3. '1' → logprob: -15.136872291564941
    4. ',' → logprob: -15.636872291564941
    5. '=
' → logprob: -15.636872291564941
    6. ')' → logprob: -15.636872291564941
    7. '   ' → logprob: -15.761872291564941
    8. '＝' → logprob: -16.511873245239258
    9. '=p' → logprob: -16.761873245239258
    10. '	' → logprob: -17.011873245239258

Token 2758: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -2.7610454708337784e-05
    2. ' Path' → logprob: -10.500027656555176
    3. '	Path' → logprob: -18.00002670288086
    4. '@Path' → logprob: -21.12502670288086
    5. '       ' → logprob: -21.25002670288086
    6. '   ' → logprob: -21.25002670288086
    7. 'self' → logprob: -21.50002670288086
    8. 'Pat' → logprob: -21.87502670288086
    9. '<Path' → logprob: -22.12502670288086
    10. '_Path' → logprob: -22.12502670288086

Token 2759: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -1.9361264946837764e-07
    2. 'pathname' → logprob: -16.625
    3. 'path' → logprob: -17.5
    4. 'Segment' → logprob: -18.0
    5. '(name' → logprob: -18.125
    6. 'Name' → logprob: -19.375
    7. 'ename' → logprob: -19.875
    8. 'NAME' → logprob: -19.875
    9. 'ame' → logprob: -20.0
    10. 'Path' → logprob: -20.75

Token 2760: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00022773505770601332
    2. '(' → logprob: -8.625227928161621
    3. 'p' → logprob: -10.000227928161621
    4. '('' → logprob: -13.375227928161621
    5. '(
' → logprob: -14.250227928161621
    6. '()' → logprob: -16.125226974487305
    7. ' (' → logprob: -16.250226974487305
    8. '((' → logprob: -16.250226974487305
    9. ' p' → logprob: -16.750226974487305
    10. '("' → logprob: -16.875226974487305

Token 2761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1557283111615106e-05
    2. 'p' → logprob: -10.125041961669922
    3. '(p' → logprob: -13.625041961669922
    4. ' p' → logprob: -16.375041961669922
    5. 'n' → logprob: -16.625041961669922
    6. 'r' → logprob: -17.625041961669922
    7. ')' → logprob: -18.625041961669922
    8. ')p' → logprob: -18.750041961669922
    9. '2' → logprob: -18.875041961669922
    10. '```' → logprob: -18.875041961669922

Token 2762: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759887099266052
    2. ')
' → logprob: -0.8259887099266052
    3. ')
' → logprob: -10.20098876953125
    4. '       ' → logprob: -11.95098876953125
    5. '   ' → logprob: -13.70098876953125
    6. ' )
' → logprob: -14.20098876953125
    7. '),' → logprob: -14.45098876953125
    8. ')#' → logprob: -14.45098876953125
    9. ')

' → logprob: -14.82598876953125
    10. ');' → logprob: -14.95098876953125

Token 2763: '       ' (ID: 309)
  Prédit: 'pn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pn' → logprob: -0.03586796671152115
    2. '       ' → logprob: -3.660867929458618
    3. ' pn' → logprob: -4.660868167877197
    4. 'p' → logprob: -10.160867691040039
    5. '```' → logprob: -10.910867691040039
    6. 'self' → logprob: -12.910867691040039
    7. '	p' → logprob: -13.660867691040039
    8. 'cn' → logprob: -14.410867691040039
    9. '
' → logprob: -14.660867691040039
    10. '`' → logprob: -14.910867691040039

Token 2764: ' pn' (ID: 80046)
  Prédit: 'pn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pn' (adapté à ' pn') → logprob: -1.1994775377388578e-05
    2. 'can' → logprob: -11.750012397766113
    3. '       ' → logprob: -12.500012397766113
    4. ' pn' → logprob: -15.500012397766113
    5. '
' → logprob: -17.125011444091797
    6. 'p' → logprob: -17.750011444091797
    7. '           ' → logprob: -18.625011444091797
    8. '   ' → logprob: -18.625011444091797
    9. 'cn' → logprob: -18.750011444091797
    10. 'self' → logprob: -18.875011444091797

Token 2765: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00041518008220009506
    2. '1' → logprob: -8.125414848327637
    3. '.normalize' → logprob: -9.625414848327637
    4. '.' → logprob: -11.000414848327637
    5. '._' → logprob: -11.000414848327637
    6. '_' → logprob: -12.000414848327637
    7. '   ' → logprob: -12.750414848327637
    8. '_normal' → logprob: -13.125414848327637
    9. '       ' → logprob: -13.750414848327637
    10. '=' → logprob: -13.750414848327637

Token 2766: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17165634036064148
    2. ' =' → logprob: -2.046656370162964
    3. ')' → logprob: -3.671656370162964
    4. '.' → logprob: -6.421656131744385
    5. ').' → logprob: -7.921656131744385
    6. ')=' → logprob: -8.171656608581543
    7. '=
' → logprob: -8.546656608581543
    8. '<|end|>' → logprob: -8.796656608581543
    9. ').__' → logprob: -9.796656608581543
    10. '(' → logprob: -9.796656608581543

Token 2767: ' Path' (ID: 14027)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -1.6240566083070007e-06
    2. ' Path' → logprob: -13.500001907348633
    3. '	Path' → logprob: -16.125001907348633
    4. '@Path' → logprob: -18.500001907348633
    5. '(Path' → logprob: -18.750001907348633
    6. '<Path' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '       ' → logprob: -19.875001907348633
    9. 'path' → logprob: -20.250001907348633
    10. '.Path' → logprob: -21.250001907348633

Token 2768: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.4770830571651459
    2. 'Path' → logprob: -0.9770830869674683
    3. 'Name' → logprob: -6.477083206176758
    4. 'pathname' → logprob: -7.227083206176758
    5. '(Path' → logprob: -7.977083206176758
    6. 'ath' → logprob: -9.227083206176758
    7. 'path' → logprob: -9.477083206176758
    8. '<Path' → logprob: -9.602083206176758
    9. '@Path' → logprob: -10.227083206176758
    10. 'ame' → logprob: -10.602083206176758

Token 2769: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.04900335147976875
    2. 'Path' → logprob: -3.0490033626556396
    3. 'p' → logprob: -8.424003601074219
    4. '(Path' → logprob: -8.674003601074219
    5. 'pn' → logprob: -10.799003601074219
    6. ' Path' → logprob: -13.424003601074219
    7. '(path' → logprob: -14.799003601074219
    8. 'path' → logprob: -14.799003601074219
    9. '(P' → logprob: -14.924003601074219
    10. '_Path' → logprob: -14.924003601074219

Token 2770: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9266199160483666e-05
    2. 'p' → logprob: -10.875019073486328
    3. 'n' → logprob: -17.250019073486328
    4. '(p' → logprob: -17.375019073486328
    5. ' ' → logprob: -17.375019073486328
    6. 's' → logprob: -17.875019073486328
    7. ')' → logprob: -18.125019073486328
    8. '(' → logprob: -18.375019073486328
    9. '   ' → logprob: -18.500019073486328
    10. 'r' → logprob: -18.500019073486328

Token 2771: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06228281185030937
    2. ')' → logprob: -2.8122828006744385
    3. '       ' → logprob: -8.18728256225586
    4. ')
' → logprob: -10.56228256225586
    5. '   ' → logprob: -11.56228256225586
    6. ')

' → logprob: -14.68728256225586
    7. ')`
' → logprob: -14.93728256225586
    8. ' )
' → logprob: -15.68728256225586
    9. ').' → logprob: -16.06228256225586
    10. ' ' → logprob: -16.18728256225586

Token 2772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06224103271961212
    2. 'can' → logprob: -3.0622410774230957
    3. '
' → logprob: -5.062241077423096
    4. '```' → logprob: -5.312241077423096
    5. 'n' → logprob: -7.562241077423096
    6. ' can' → logprob: -7.937241077423096
    7. 'p' → logprob: -8.437240600585938
    8. 'c' → logprob: -8.687240600585938
    9. '_can' → logprob: -9.062240600585938
    10. '#' → logprob: -9.187240600585938

Token 2773: ' c' (ID: 274)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.008652388118207455
    2. 'norm' → logprob: -4.883652210235596
    3. 'c' (adapté à ' c') → logprob: -7.508652210235596
    4. 'n' → logprob: -8.133652687072754
    5. 'np' → logprob: -9.633652687072754
    6. 'canon' → logprob: -10.383652687072754
    7. 'normalized' → logprob: -10.758652687072754
    8. '   ' → logprob: -10.883652687072754
    9. 'cn' → logprob: -11.258652687072754
    10. 'canonical' → logprob: -11.258652687072754

Token 2774: '1' (ID: 16)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.006138649303466082
    2. '1' → logprob: -5.506138801574707
    3. 'can' → logprob: -6.256138801574707
    4. 'anon' → logprob: -10.131138801574707
    5. '_can' → logprob: -10.381138801574707
    6. 'anonical' → logprob: -11.131138801574707
    7. 'a' → logprob: -11.881138801574707
    8. 'n' → logprob: -12.006138801574707
    9. 'ann' → logprob: -12.131138801574707
    10. 'c' → logprob: -12.131138801574707

Token 2775: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6511838436126709
    2. 'an' → logprob: -1.026183843612671
    3. '1' → logprob: -2.776183843612671
    4. '_can' → logprob: -3.776183843612671
    5. '=' → logprob: -4.02618408203125
    6. '_path' → logprob: -4.52618408203125
    7. 'can' → logprob: -6.52618408203125
    8. '_' → logprob: -6.65118408203125
    9. '_id' → logprob: -6.90118408203125
    10. 'c' → logprob: -7.52618408203125

Token 2776: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.493430894101039e-05
    2. ' self' → logprob: -9.500075340270996
    3. '(self' → logprob: -17.62507438659668
    4. '       ' → logprob: -18.87507438659668
    5. '[self' → logprob: -19.00007438659668
    6. '	self' → logprob: -19.37507438659668
    7. '=self' → logprob: -19.50007438659668
    8. 'None' → logprob: -20.12507438659668
    9. '
' → logprob: -22.12507438659668
    10. '$self' → logprob: -22.37507438659668

Token 2777: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -0.008156129159033298
    2. '.registry' → logprob: -5.1331562995910645
    3. 'registry' → logprob: -7.0081562995910645
    4. 'normal' → logprob: -7.0081562995910645
    5. '.normalize' → logprob: -9.133155822753906
    6. '.' → logprob: -9.633155822753906
    7. ' .' → logprob: -9.758155822753906
    8. '_normal' → logprob: -10.133155822753906
    9. 'Registry' → logprob: -10.758155822753906
    10. '.reg' → logprob: -10.758155822753906

Token 2778: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.0008276138687506318
    2. 'ize' → logprob: -7.125827789306641
    3. 'ormal' → logprob: -11.50082778930664
    4. 'ized' → logprob: -13.00082778930664
    5. 'IZER' → logprob: -13.25082778930664
    6. 'orm' → logprob: -13.62582778930664
    7. '_normal' → logprob: -13.87582778930664
    8. '_' → logprob: -14.25082778930664
    9. '```' → logprob: -14.25082778930664
    10. '   ' → logprob: -14.37582778930664

Token 2779: '.normalize' (ID: 92881)
  Prédit: '.normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normalize' → logprob: -0.0008124859305098653
    2. 'normalize' → logprob: -7.375812530517578
    3. '.' → logprob: -8.875812530517578
    4. ' .' → logprob: -11.125812530517578
    5. '```' → logprob: -11.750812530517578
    6. '`.' → logprob: -12.000812530517578
    7. '._' → logprob: -12.125812530517578
    8. '   ' → logprob: -13.500812530517578
    9. '.normal' → logprob: -13.625812530517578
    10. ''.' → logprob: -13.625812530517578

Token 2780: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -12.37501049041748
    3. 'pn' → logprob: -12.87501049041748
    4. '(
' → logprob: -13.00001049041748
    5. ' (' → logprob: -14.12501049041748
    6. 'p' → logprob: -15.75001049041748
    7. '(c' → logprob: -15.87501049041748
    8. ' pn' → logprob: -16.125011444091797
    9. '(n' → logprob: -16.125011444091797
    10. '(P' → logprob: -16.875011444091797

Token 2781: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006045639514923096
    2. 'pn' → logprob: -5.131045818328857
    3. ' pn' → logprob: -9.1310453414917
    4. '
' → logprob: -13.2560453414917
    5. '```' → logprob: -13.3810453414917
    6. ')' → logprob: -14.2560453414917
    7. '       ' → logprob: -14.5060453414917
    8. ')
' → logprob: -14.5060453414917
    9. '   ' → logprob: -14.5060453414917
    10. 'p' → logprob: -14.6310453414917

Token 2782: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004972120281308889
    2. 'n' → logprob: -5.629971981048584
    3. '2' → logprob: -6.754971981048584
    4. ')' → logprob: -10.129972457885742
    5. 'ath' → logprob: -10.254972457885742
    6. '```' → logprob: -10.754972457885742
    7. '   ' → logprob: -11.004972457885742
    8. '
' → logprob: -11.379972457885742
    9. 'hn' → logprob: -11.629972457885742
    10. ')
' → logprob: -11.754972457885742

Token 2783: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.127254918217659
    2. ')
' → logprob: -2.1272549629211426
    3. '       ' → logprob: -9.252254486083984
    4. ' )
' → logprob: -9.252254486083984
    5. ' )' → logprob: -9.377254486083984
    6. ',' → logprob: -11.002254486083984
    7. '   ' → logprob: -12.002254486083984
    8. ')#' → logprob: -12.252254486083984
    9. ')
' → logprob: -12.377254486083984
    10. ')c' → logprob: -12.502254486083984

Token 2784: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6691195964813232
    2. ' if' → logprob: -0.7941195964813232
    3. 'if' → logprob: -3.4191195964813232
    4. '<|end|>' → logprob: -6.669119834899902
    5. '[' → logprob: -7.544119834899902
    6. ')' → logprob: -7.669119834899902
    7. 'If' → logprob: -9.169119834899902
    8. '        
' → logprob: -9.669119834899902
    9. ',' → logprob: -9.669119834899902
    10. '<|end|>' → logprob: -9.919119834899902

Token 2785: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.05523045361042023
    2. 'if' → logprob: -3.0552303791046143
    3. ' if' → logprob: -5.180230617523193
    4. ' c' → logprob: -7.555230617523193
    5. '       ' → logprob: -7.680230617523193
    6. '        
' → logprob: -12.930230140686035
    7. '        ' → logprob: -13.555230140686035
    8. '	c' → logprob: -13.555230140686035
    9. '`' → logprob: -14.055230140686035
    10. ' 
' → logprob: -14.180230140686035

Token 2786: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012510471045970917
    2. '1' → logprob: -4.387510299682617
    3. 'c' → logprob: -14.637510299682617
    4. 'r' → logprob: -16.012510299682617
    5. 'n' → logprob: -16.637510299682617
    6. '
' → logprob: -16.887510299682617
    7. 'None' → logprob: -17.137510299682617
    8. ' =' → logprob: -17.762510299682617
    9. '```' → logprob: -17.762510299682617
    10. ' ' → logprob: -17.887510299682617

Token 2787: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4056464731693268
    2. ' =' → logprob: -1.1556464433670044
    3. ' ==' → logprob: -4.905646324157715
    4. '==' → logprob: -4.905646324157715
    5. ')' → logprob: -6.405646324157715
    6. '<|end|>' → logprob: -7.280646324157715
    7. '[' → logprob: -8.280646324157715
    8. '_' → logprob: -8.405646324157715
    9. '.' → logprob: -8.530646324157715
    10. '       ' → logprob: -8.905646324157715

Token 2788: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033593899570405483
    2. ' self' → logprob: -8.000335693359375
    3. '       ' → logprob: -15.125335693359375
    4. '(self' → logprob: -16.125335693359375
    5. 'Path' → logprob: -17.250335693359375
    6. '           ' → logprob: -17.375335693359375
    7. '=self' → logprob: -17.750335693359375
    8. '	self' → logprob: -18.000335693359375
    9. '[self' → logprob: -18.000335693359375
    10. '   ' → logprob: -19.125335693359375

Token 2789: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -0.04073449596762657
    2. 'normal' → logprob: -3.2907345294952393
    3. '.normalize' → logprob: -6.41573429107666
    4. '.' → logprob: -7.41573429107666
    5. 'normalize' → logprob: -8.66573429107666
    6. '_normal' → logprob: -9.29073429107666
    7. 'Normalizer' → logprob: -9.66573429107666
    8. 'ormal' → logprob: -10.41573429107666
    9. ' .' → logprob: -10.41573429107666
    10. '._' → logprob: -11.41573429107666

Token 2790: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.5575330853462219
    2. 'ormal' → logprob: -1.1825330257415771
    3. '_path' → logprob: -2.932533025741577
    4. 'c' → logprob: -4.057533264160156
    5. 'normalize' → logprob: -4.182533264160156
    6. 'orm' → logprob: -4.307533264160156
    7. 'or' → logprob: -4.932533264160156
    8. 'ize' → logprob: -5.307533264160156
    9. 'normal' → logprob: -6.182533264160156
    10. '(normal' → logprob: -6.682533264160156

Token 2791: '.normalize' (ID: 92881)
  Prédit: '.normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normalize' → logprob: -0.00045724798110313714
    2. 'normalize' → logprob: -7.750457286834717
    3. '._' → logprob: -11.500456809997559
    4. ' .' → logprob: -11.750456809997559
    5. '   ' → logprob: -12.625456809997559
    6. '_normal' → logprob: -13.500456809997559
    7. '_.' → logprob: -13.875456809997559
    8. '.' → logprob: -14.500456809997559
    9. '
' → logprob: -14.750456809997559
    10. '```' → logprob: -14.875456809997559

Token 2792: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.1269804984331131
    2. 'pn' → logprob: -2.1269805431365967
    3. ' pn' → logprob: -10.501980781555176
    4. 'p' → logprob: -11.876980781555176
    5. 'Path' → logprob: -12.001980781555176
    6. '[p' → logprob: -12.376980781555176
    7. 'PN' → logprob: -12.376980781555176
    8. 'Pn' → logprob: -13.001980781555176
    9. '(
' → logprob: -14.751980781555176
    10. '(c' → logprob: -15.626980781555176

Token 2793: 'n' (ID: 77)
  Prédit: 'pn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pn' → logprob: -0.0021792887710034847
    2. 'n' → logprob: -6.252179145812988
    3. '2' → logprob: -9.127179145812988
    4. ' pn' → logprob: -9.377179145812988
    5. 'p' → logprob: -10.002179145812988
    6. 'cn' → logprob: -12.502179145812988
    7. 'hn' → logprob: -13.877179145812988
    8. '1' → logprob: -14.002179145812988
    9. 'Pn' → logprob: -14.002179145812988
    10. 'Path' → logprob: -14.252179145812988

Token 2794: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9623810658231378e-05
    2. 'n' → logprob: -10.875020027160645
    3. 'ath' → logprob: -15.625020027160645
    4. 'm' → logprob: -16.250019073486328
    5. '
' → logprob: -16.500019073486328
    6. 'c' → logprob: -17.375019073486328
    7. '   ' → logprob: -17.500019073486328
    8. '```' → logprob: -17.875019073486328
    9. ')' → logprob: -18.125019073486328
    10. 'w' → logprob: -18.125019073486328

Token 2795: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44820863008499146
    2. ')
' → logprob: -1.1982085704803467
    3. '       ' → logprob: -2.8232085704803467
    4. ' if' → logprob: -10.948208808898926
    5. '   ' → logprob: -11.323208808898926
    6. 'if' → logprob: -11.698208808898926
    7. '           ' → logprob: -11.823208808898926
    8. ')
' → logprob: -11.948208808898926
    9. '):
' → logprob: -12.323208808898926
    10. ')`
' → logprob: -12.823208808898926

Token 2796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013704766752198339
    2. '   ' → logprob: -7.876370429992676
    3. 'if' → logprob: -8.126370429992676
    4. ' if' → logprob: -8.251370429992676
    5. '
' → logprob: -8.751370429992676
    6. ':
' → logprob: -9.126370429992676
    7. '        
' → logprob: -10.126370429992676
    8. '           ' → logprob: -10.251370429992676
    9. '[' → logprob: -11.501370429992676
    10. '```' → logprob: -11.501370429992676

Token 2797: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1283189058303833
    2. '       ' → logprob: -2.1283187866210938
    3. ' if' → logprob: -6.753318786621094
    4. '
' → logprob: -8.878318786621094
    5. '```' → logprob: -9.878318786621094
    6. '   ' → logprob: -10.503318786621094
    7. 'If' → logprob: -13.753318786621094
    8. '	if' → logprob: -14.128318786621094
    9. '        
' → logprob: -14.253318786621094
    10. '           ' → logprob: -14.378318786621094

Token 2798: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.038042180240154266
    2. ' c' → logprob: -3.2880420684814453
    3. 'None' → logprob: -15.288042068481445
    4. '   ' → logprob: -15.788042068481445
    5. ' None' → logprob: -15.788042068481445
    6. '	c' → logprob: -16.413042068481445
    7. '       ' → logprob: -16.413042068481445
    8. '(c' → logprob: -17.788042068481445
    9. '_c' → logprob: -17.913042068481445
    10. ' ' → logprob: -17.913042068481445

Token 2799: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004878723411820829
    2. '_' → logprob: -7.875487804412842
    3. '2' → logprob: -9.37548828125
    4. '_c' → logprob: -11.62548828125
    5. 'c' → logprob: -11.87548828125
    6. ' is' → logprob: -12.75048828125
    7. '==' → logprob: -13.75048828125
    8. '```' → logprob: -14.12548828125
    9. ' _' → logprob: -14.37548828125
    10. ' ==' → logprob: -14.87548828125

Token 2800: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07303399592638016
    2. 'is' → logprob: -2.6980340480804443
    3. '==' → logprob: -5.948033809661865
    4. ' ==' → logprob: -7.698033809661865
    5. 'and' → logprob: -10.698034286499023
    6. ' and' → logprob: -13.698034286499023
    7. '===' → logprob: -14.073034286499023
    8. 'in' → logprob: -14.448034286499023
    9. 'Is' → logprob: -14.698034286499023
    10. ')' → logprob: -14.698034286499023

Token 2801: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.003183420980349183
    2. ' None' → logprob: -5.753183364868164
    3. 'not' → logprob: -12.378183364868164
    4. '   ' → logprob: -14.253183364868164
    5. '       ' → logprob: -15.378183364868164
    6. ' not' → logprob: -15.503183364868164
    7. 'c' → logprob: -15.878183364868164
    8. '=None' → logprob: -16.378183364868164
    9. '(None' → logprob: -17.253183364868164
    10. 'Not' → logprob: -17.378183364868164

Token 2802: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2625989317893982
    2. '           ' → logprob: -1.512598991394043
    3. ' and' → logprob: -5.387598991394043
    4. ':' → logprob: -5.887598991394043
    5. ':
' → logprob: -6.762598991394043
    6. 'and' → logprob: -7.512598991394043
    7. '          ' → logprob: -7.762598991394043
    8. '       ' → logprob: -8.137598991394043
    9. 'or' → logprob: -8.262598991394043
    10. '               ' → logprob: -8.512598991394043

Token 2803: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16022950410842896
    2. ' c' → logprob: -1.9102294445037842
    3. '           ' → logprob: -12.660229682922363
    4. '       ' → logprob: -13.785229682922363
    5. '        ' → logprob: -15.285229682922363
    6. '   ' → logprob: -15.410229682922363
    7. '               ' → logprob: -16.160228729248047
    8. '          ' → logprob: -16.160228729248047
    9. '    ' → logprob: -16.285228729248047
    10. '	c' → logprob: -16.410228729248047

Token 2804: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006184740923345089
    2. '_' → logprob: -5.7561845779418945
    3. 'c' → logprob: -5.8811845779418945
    4. ' c' → logprob: -9.256184577941895
    5. '_c' → logprob: -9.506184577941895
    6. '₂' → logprob: -11.256184577941895
    7. ' ' → logprob: -11.631184577941895
    8. ' _' → logprob: -12.256184577941895
    9. '```' → logprob: -12.506184577941895
    10. '1' → logprob: -12.756184577941895

Token 2805: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07679964601993561
    2. '==' → logprob: -3.2017996311187744
    3. ' ==' → logprob: -3.7017996311187744
    4. 'is' → logprob: -4.9517998695373535
    5. ')' → logprob: -7.2017998695373535
    6. ' !=' → logprob: -8.826799392700195
    7. '<|end|>' → logprob: -9.076799392700195
    8. ' ' → logprob: -9.201799392700195
    9. '==
' → logprob: -9.326799392700195
    10. '!=' → logprob: -9.576799392700195

Token 2806: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00020425561524461955
    2. ' None' → logprob: -8.500204086303711
    3. '_None' → logprob: -14.750204086303711
    4. '=None' → logprob: -15.125204086303711
    5. '(None' → logprob: -16.37520408630371
    6. '_none' → logprob: -18.12520408630371
    7. 'none' → logprob: -18.37520408630371
    8. '   ' → logprob: -19.50020408630371
    9. '.None' → logprob: -19.87520408630371
    10. ',None' → logprob: -20.00020408630371

Token 2807: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9954873323440552
    2. ':
' → logprob: -0.9954873323440552
    3. ':' → logprob: -1.3704873323440552
    4. '       ' → logprob: -5.870487213134766
    5. ' or' → logprob: -6.370487213134766
    6. ':return' → logprob: -6.370487213134766
    7. '               ' → logprob: -8.245487213134766
    8. '   ' → logprob: -9.870487213134766
    9. '):
' → logprob: -9.870487213134766
    10. '          ' → logprob: -9.995487213134766

Token 2808: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015542630571871996
    2. 'return' → logprob: -6.751554489135742
    3. '		' → logprob: -8.501554489135742
    4. '
' → logprob: -9.501554489135742
    5. ' return' → logprob: -10.001554489135742
    6. '       ' → logprob: -11.251554489135742
    7. '   ' → logprob: -11.376554489135742
    8. '	       ' → logprob: -11.501554489135742
    9. '               ' → logprob: -11.876554489135742
    10. '\n' → logprob: -13.251554489135742

Token 2809: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08103002607822418
    2. 'return' (adapté à ' return') → logprob: -2.5810301303863525
    3. ' return' → logprob: -6.456029891967773
    4. '		' → logprob: -8.081029891967773
    5. '	return' → logprob: -9.581029891967773
    6. '               ' → logprob: -9.831029891967773
    7. '   ' → logprob: -10.081029891967773
    8. '
' → logprob: -10.331029891967773
    9. '          ' → logprob: -11.456029891967773
    10. '	       ' → logprob: -11.456029891967773

Token 2810: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0017257531872019172
    2. ''' → logprob: -6.751725673675537
    3. ' "' → logprob: -7.501725673675537
    4. '`' → logprob: -13.876726150512695
    5. '   ' → logprob: -14.501726150512695
    6. '       ' → logprob: -14.501726150512695
    7. ' '' → logprob: -14.751726150512695
    8. '	' → logprob: -14.876726150512695
    9. 'not' → logprob: -15.626726150512695
    10. ' not' → logprob: -16.126726150512695

Token 2811: 'not' (ID: 2878)
  Prédit: 'not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -9.841743303695694e-05
    2. '"' → logprob: -9.25009822845459
    3. 'no' → logprob: -13.37509822845459
    4. ' not' → logprob: -14.50009822845459
    5. '
' → logprob: -17.250099182128906
    6. '	not' → logprob: -17.375099182128906
    7. ''' → logprob: -17.625099182128906
    8. 'n' → logprob: -18.125099182128906
    9. '   ' → logprob: -18.500099182128906
    10. '""' → logprob: -18.750099182128906

Token 2812: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.018856072798371315
    2. 'found' → logprob: -4.018856048583984
    3. '_found' → logprob: -7.268856048583984
    4. ' Found' → logprob: -12.518856048583984
    5. '	found' → logprob: -12.643856048583984
    6. '_FOUND' → logprob: -14.393856048583984
    7. ' ' → logprob: -15.143856048583984
    8. 'Found' → logprob: -15.268856048583984
    9. ' valid' → logprob: -15.393856048583984
    10. ' ")' → logprob: -15.893856048583984

Token 2813: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4757913053035736
    2. '"
' → logprob: -0.975791335105896
    3. '"

' → logprob: -6.7257914543151855
    4. '"
' → logprob: -8.100790977478027
    5. '       ' → logprob: -9.600790977478027
    6. '")' → logprob: -9.975790977478027
    7. '\"' → logprob: -10.350790977478027
    8. '"`
' → logprob: -10.350790977478027
    9. '"

' → logprob: -11.975790977478027
    10. '")
' → logprob: -11.975790977478027

Token 2814: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002383141778409481
    2. '
' → logprob: -6.252383232116699
    3. '        
' → logprob: -8.1273832321167
    4. '```' → logprob: -10.1273832321167
    5. 'elif' → logprob: -10.5023832321167
    6. '   ' → logprob: -10.5023832321167
    7. '    
' → logprob: -10.7523832321167
    8. 'if' → logprob: -11.5023832321167
    9. '\n' → logprob: -11.7523832321167
    10. '  
' → logprob: -12.0023832321167

Token 2815: ' id' (ID: 1211)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10107775032520294
    2. 'if' → logprob: -2.6010777950286865
    3. ' if' → logprob: -4.351077556610107
    4. '
' → logprob: -4.726077556610107
    5. '   ' → logprob: -9.476078033447266
    6. '        
' → logprob: -9.726078033447266
    7. '    
' → logprob: -11.101078033447266
    8. 'elif' → logprob: -11.476078033447266
    9. '           ' → logprob: -11.851078033447266
    10. '```' → logprob: -12.101078033447266

Token 2816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28740590810775757
    2. '_' → logprob: -1.4124059677124023
    3. ' =' → logprob: -5.162405967712402
    4. 's' → logprob: -8.162405967712402
    5. '=' → logprob: -9.787405967712402
    6. '_to' → logprob: -10.162405967712402
    7. '_c' → logprob: -10.662405967712402
    8. '_token' → logprob: -10.787405967712402
    9. '2' → logprob: -11.412405967712402
    10. ' ' → logprob: -11.912405967712402

Token 2817: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19819094240665436
    2. '=' → logprob: -1.9481909275054932
    3. ' ==' → logprob: -3.448190927505493
    4. '==' → logprob: -5.823191165924072
    5. ' ' → logprob: -7.323191165924072
    6. ',' → logprob: -7.698191165924072
    7. '[' → logprob: -8.323190689086914
    8. '1' → logprob: -8.323190689086914
    9. '   ' → logprob: -8.323190689086914
    10. ')' → logprob: -8.823190689086914

Token 2818: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005530327325686812
    2. ' self' → logprob: -7.500553131103516
    3. '(self' → logprob: -17.750553131103516
    4. '       ' → logprob: -18.750553131103516
    5. '[self' → logprob: -18.750553131103516
    6. '	self' → logprob: -19.625553131103516
    7. '=self' → logprob: -20.250553131103516
    8. '   ' → logprob: -20.625553131103516
    9. '           ' → logprob: -21.250553131103516
    10. 'Self' → logprob: -22.000553131103516

Token 2819: '.registry' (ID: 101460)
  Prédit: '.registry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.registry' → logprob: -0.3878664970397949
    2. 'registry' → logprob: -1.137866497039795
    3. 'get' → logprob: -7.887866497039795
    4. '.get' → logprob: -8.137866973876953
    5. 'normal' → logprob: -9.012866973876953
    6. '.normal' → logprob: -9.387866973876953
    7. '.' → logprob: -9.762866973876953
    8. ' .' → logprob: -11.887866973876953
    9. 'id' → logprob: -11.887866973876953
    10. '.repository' → logprob: -12.012866973876953

Token 2820: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.542320191860199
    2. 'get' → logprob: -0.917320191860199
    3. '_get' → logprob: -4.292320251464844
    4. '.' → logprob: -5.792320251464844
    5. '._' → logprob: -6.417320251464844
    6. '_to' → logprob: -8.792320251464844
    7. '_' → logprob: -8.792320251464844
    8. ' get' → logprob: -9.042320251464844
    9. 'page' → logprob: -9.292320251464844
    10. ' .' → logprob: -10.542320251464844

Token 2821: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.18123486638069153
    2. '(c' → logprob: -2.181234836578369
    3. '_' → logprob: -3.806234836578369
    4. 'id' → logprob: -4.306234836578369
    5. 'c' → logprob: -5.681234836578369
    6. '('_' → logprob: -5.931234836578369
    7. ''_' → logprob: -6.556234836578369
    8. '`' → logprob: -6.556234836578369
    9. '(' → logprob: -7.056234836578369
    10. '_c' → logprob: -7.056234836578369

Token 2822: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.13364993035793304
    2. '(' → logprob: -2.1336498260498047
    3. '(
' → logprob: -5.008649826049805
    4. '('' → logprob: -11.133649826049805
    5. '(

' → logprob: -13.133649826049805
    6. ' (' → logprob: -14.008649826049805
    7. 'c' → logprob: -14.758649826049805
    8. '((' → logprob: -14.883649826049805
    9. '("("' → logprob: -15.133649826049805
    10. '(
' → logprob: -15.633649826049805

Token 2823: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014346610754728317
    2. '2' → logprob: -4.889346599578857
    3. 'c' → logprob: -5.264346599578857
    4. '(c' → logprob: -6.764346599578857
    5. '[c' → logprob: -8.639347076416016
    6. '_c' → logprob: -9.764347076416016
    7. '_path' → logprob: -10.639347076416016
    8. 'p' → logprob: -10.639347076416016
    9. ' c' → logprob: -10.639347076416016
    10. '_' → logprob: -11.014347076416016

Token 2824: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010981203056871891
    2. '[' → logprob: -5.01098108291626
    3. '       ' → logprob: -7.01098108291626
    4. '(' → logprob: -7.51098108291626
    5. '[
' → logprob: -7.63598108291626
    6. '(
' → logprob: -7.76098108291626
    7. ')
' → logprob: -7.76098108291626
    8. '   ' → logprob: -8.010981559753418
    9. ',' → logprob: -8.010981559753418
    10. '1' → logprob: -8.760981559753418

Token 2825: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02463751845061779
    2. 'if' → logprob: -3.899637460708618
    3. '       ' → logprob: -5.774637699127197
    4. '```' → logprob: -8.274637222290039
    5. '           ' → logprob: -9.399637222290039
    6. '   ' → logprob: -9.399637222290039
    7. '[' → logprob: -9.399637222290039
    8. ' or' → logprob: -9.774637222290039
    9. ' and' → logprob: -10.149637222290039
    10. '`' → logprob: -10.149637222290039

Token 2826: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.4097066819667816
    2. ' id' → logprob: -1.909706711769104
    3. ' if' → logprob: -2.1597065925598145
    4. 'if' → logprob: -2.7847065925598145
    5. '       ' → logprob: -4.5347065925598145
    6. '        ' → logprob: -9.659707069396973
    7. '        
' → logprob: -10.909707069396973
    8. '_id' → logprob: -11.159707069396973
    9. ' ' → logprob: -11.284707069396973
    10. '	id' → logprob: -11.409707069396973

Token 2827: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3319124011322856e-05
    2. '1' → logprob: -10.875022888183594
    3. '_' → logprob: -12.875022888183594
    4. '```' → logprob: -14.625022888183594
    5. ' ' → logprob: -14.750022888183594
    6. '
' → logprob: -15.000022888183594
    7. '_
' → logprob: -15.625022888183594
    8. '[' → logprob: -16.250022888183594
    9. '[
' → logprob: -16.625022888183594
    10. ')' → logprob: -16.750022888183594

Token 2828: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13113625347614288
    2. ' =' → logprob: -3.631136178970337
    3. '[
' → logprob: -4.006136417388916
    4. '=' → logprob: -4.256136417388916
    5. ' ==' → logprob: -4.381136417388916
    6. '<|end|>' → logprob: -4.381136417388916
    7. '==' → logprob: -5.131136417388916
    8. ')' → logprob: -5.131136417388916
    9. '.get' → logprob: -5.256136417388916
    10. '[id' → logprob: -5.381136417388916

Token 2829: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009148012613877654
    2. ' self' → logprob: -7.000914573669434
    3. '       ' → logprob: -12.750914573669434
    4. '           ' → logprob: -15.375914573669434
    5. '[self' → logprob: -16.12591552734375
    6. '(self' → logprob: -16.62591552734375
    7. '=self' → logprob: -17.37591552734375
    8. '   ' → logprob: -17.62591552734375
    9. '	self' → logprob: -17.62591552734375
    10. '```' → logprob: -18.62591552734375

Token 2830: '.registry' (ID: 101460)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.03546075522899628
    2. '.registry' → logprob: -3.7854607105255127
    3. 'registry' → logprob: -4.660460948944092
    4. 'get' → logprob: -6.410460948944092
    5. '_registry' → logprob: -7.160460948944092
    6. '.' → logprob: -9.410460472106934
    7. 'Registry' → logprob: -9.535460472106934
    8. '2' → logprob: -9.785460472106934
    9. ' .' → logprob: -11.410460472106934
    10. '._' → logprob: -11.660460472106934

Token 2831: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -7.791440293658525e-05
    2. '.' → logprob: -10.125078201293945
    3. 'get' → logprob: -10.250078201293945
    4. ' .' → logprob: -13.750078201293945
    5. '   ' → logprob: -14.750078201293945
    6. '.
' → logprob: -15.125078201293945
    7. '[' → logprob: -16.250078201293945
    8. '```' → logprob: -16.250078201293945
    9. '._' → logprob: -16.500078201293945
    10. ')' → logprob: -16.750078201293945

Token 2832: '_id' (ID: 1537)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.41050371527671814
    2. 'id' → logprob: -1.1605037450790405
    3. 'c' → logprob: -4.41050386428833
    4. '.get' → logprob: -5.28550386428833
    5. 'get' → logprob: -5.41050386428833
    6. '_id' → logprob: -7.66050386428833
    7. ')' → logprob: -7.78550386428833
    8. '(c' → logprob: -8.035503387451172
    9. 'd' → logprob: -10.160503387451172
    10. '
' → logprob: -10.285503387451172

Token 2833: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0007609111489728093
    2. '(id' → logprob: -7.375761032104492
    3. '(' → logprob: -9.000761032104492
    4. '(
' → logprob: -12.125761032104492
    5. ' (' → logprob: -12.250761032104492
    6. 'c' → logprob: -14.750761032104492
    7. ' ' → logprob: -15.250761032104492
    8. '`' → logprob: -17.125761032104492
    9. '('' → logprob: -17.125761032104492
    10. ')' → logprob: -17.125761032104492

Token 2834: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018506382184568793
    2. 'c' → logprob: -8.625185012817383
    3. '1' → logprob: -13.250185012817383
    4. ')' → logprob: -13.250185012817383
    5. 'id' → logprob: -13.625185012817383
    6. 's' → logprob: -14.750185012817383
    7. 'd' → logprob: -16.500185012817383
    8. ' c' → logprob: -16.625185012817383
    9. 'o' → logprob: -16.875185012817383
    10. '_' → logprob: -17.250185012817383

Token 2835: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038529320154339075
    2. ')
' → logprob: -6.253852844238281
    3. '       ' → logprob: -7.003852844238281
    4. '[' → logprob: -8.128852844238281
    5. ' )' → logprob: -9.128852844238281
    6. '')' → logprob: -9.378852844238281
    7. '   ' → logprob: -9.878852844238281
    8. '           ' → logprob: -10.128852844238281
    9. ']' → logprob: -10.128852844238281
    10. ')>
' → logprob: -10.128852844238281

Token 2836: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16673295199871063
    2. ' if' → logprob: -1.916732907295227
    3. 'if' → logprob: -5.6667327880859375
    4. '           ' → logprob: -7.2917327880859375
    5. '   ' → logprob: -7.2917327880859375
    6. '        ' → logprob: -8.291732788085938
    7. ':
' → logprob: -8.416732788085938
    8. '<|end|>' → logprob: -8.416732788085938
    9. 'If' → logprob: -8.541732788085938
    10. '               ' → logprob: -9.291732788085938

Token 2837: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004016903229057789
    2. 'if' (adapté à ' if') → logprob: -5.754016876220703
    3. ' if' → logprob: -7.504016876220703
    4. '```' → logprob: -8.629016876220703
    5. '   ' → logprob: -9.879016876220703
    6. '	' → logprob: -10.754016876220703
    7. '           ' → logprob: -11.129016876220703
    8. '               ' → logprob: -12.004016876220703
    9. '	if' → logprob: -12.754016876220703
    10. 'If' → logprob: -12.879016876220703

Token 2838: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.029751067981123924
    2. ' id' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.40475082397461
    4. '(id' → logprob: -16.02975082397461
    5. '    ' → logprob: -16.40475082397461
    6. '	id' → logprob: -16.40475082397461
    7. '       ' → logprob: -17.02975082397461
    8. ' ' → logprob: -17.15475082397461
    9. '        ' → logprob: -18.90475082397461
    10. '     ' → logprob: -19.27975082397461

Token 2839: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.051066520740278e-05
    2. '2' → logprob: -9.875060081481934
    3. '_' → logprob: -11.875060081481934
    4. '
' → logprob: -14.125060081481934
    5. ' ' → logprob: -14.500060081481934
    6. '```' → logprob: -15.125060081481934
    7. ' _' → logprob: -16.56256103515625
    8. '_
' → logprob: -16.62506103515625
    9. '"' → logprob: -16.68756103515625
    10. 's' → logprob: -17.06256103515625

Token 2840: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13043999671936035
    2. '==' → logprob: -2.1304399967193604
    3. ' !=' → logprob: -6.130439758300781
    4. ' is' → logprob: -6.880439758300781
    5. '!=' → logprob: -8.630439758300781
    6. '=' → logprob: -10.130439758300781
    7. '==
' → logprob: -10.380439758300781
    8. ' ==
' → logprob: -10.880439758300781
    9. ' ' → logprob: -12.130439758300781
    10. ')' → logprob: -12.255439758300781

Token 2841: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.9670290350914001
    2. 'not' → logprob: -1.092029094696045
    3. ' not' → logprob: -1.842029094696045
    4. ' None' → logprob: -2.092029094696045
    5. '0' → logprob: -6.217029094696045
    6. 'id' → logprob: -9.092028617858887
    7. ' id' → logprob: -9.717028617858887
    8. 'Not' → logprob: -10.342028617858887
    9. ' ' → logprob: -10.467028617858887
    10. '=None' → logprob: -10.467028617858887

Token 2842: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7989128828048706
    2. ' or' → logprob: -1.2989128828048706
    3. '==' → logprob: -1.6739128828048706
    4. '          ' → logprob: -3.42391300201416
    5. ' ==' → logprob: -3.92391300201416
    6. '       ' → logprob: -5.42391300201416
    7. ' is' → logprob: -5.42391300201416
    8. '!=' → logprob: -5.54891300201416
    9. '<|end|>' → logprob: -5.79891300201416
    10. 'or' → logprob: -5.92391300201416

Token 2843: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.575939953327179
    2. ' id' → logprob: -0.825939953327179
    3. ' ' → logprob: -15.575940132141113
    4. '	id' → logprob: -16.450939178466797
    5. '(id' → logprob: -16.825939178466797
    6. '        ' → logprob: -16.950939178466797
    7. 'None' → logprob: -17.325939178466797
    8. '"id' → logprob: -17.450939178466797
    9. '       ' → logprob: -17.700939178466797
    10. 'not' → logprob: -17.950939178466797

Token 2844: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '
' → logprob: -16.625
    4. 'id' → logprob: -17.5
    5. '   ' → logprob: -17.625
    6. '  ' → logprob: -18.25
    7. '_' → logprob: -18.75
    8. '1' → logprob: -18.75
    9. '(id' → logprob: -18.75
    10. 'd' → logprob: -19.5

Token 2845: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3405182957649231
    2. '==' → logprob: -1.8405182361602783
    3. 'is' → logprob: -2.8405182361602783
    4. ' ==' → logprob: -2.8405182361602783
    5. '<|end|>' → logprob: -5.090518474578857
    6. ')' → logprob: -6.090518474578857
    7. '==
' → logprob: -6.715518474578857
    8. '[' → logprob: -6.715518474578857
    9. ' !=' → logprob: -7.965518474578857
    10. '!=' → logprob: -8.2155179977417

Token 2846: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6934787631034851
    2. 'None' → logprob: -0.6934787631034851
    3. '_None' → logprob: -8.81847858428955
    4. ' not' → logprob: -9.19347858428955
    5. 'not' → logprob: -10.06847858428955
    6. '=None' → logprob: -10.69347858428955
    7. '(None' → logprob: -11.81847858428955
    8. '_none' → logprob: -12.19347858428955
    9. ',None' → logprob: -14.31847858428955
    10. ' ' → logprob: -14.31847858428955

Token 2847: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9637816548347473
    2. ':
' → logprob: -0.9637816548347473
    3. ':' → logprob: -1.5887815952301025
    4. ' or' → logprob: -3.9637815952301025
    5. '          ' → logprob: -5.213781833648682
    6. ':return' → logprob: -5.838781833648682
    7. '               ' → logprob: -6.588781833648682
    8. '       ' → logprob: -6.713781833648682
    9. '==' → logprob: -7.463781833648682
    10. ',' → logprob: -8.088781356811523

Token 2848: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015223604859784245
    2. '               ' → logprob: -8.001522064208984
    3. ':
' → logprob: -8.376522064208984
    4. 'return' → logprob: -8.376522064208984
    5. '		' → logprob: -9.001522064208984
    6. '                       ' → logprob: -9.251522064208984
    7. '       ' → logprob: -9.376522064208984
    8. ' or' → logprob: -9.501522064208984
    9. ' return' → logprob: -9.751522064208984
    10. '   ' → logprob: -9.876522064208984

Token 2849: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48697254061698914
    2. 'return' (adapté à ' return') → logprob: -0.9869725704193115
    3. ' return' → logprob: -4.486972332000732
    4. '               ' → logprob: -7.486972332000732
    5. '		' → logprob: -7.986972332000732
    6. '	return' → logprob: -8.11197280883789
    7. '   ' → logprob: -9.23697280883789
    8. '       ' → logprob: -9.36197280883789
    9. '	       ' → logprob: -9.48697280883789
    10. '                   ' → logprob: -10.61197280883789

Token 2850: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0012811839114874601
    2. ' "' → logprob: -6.751281261444092
    3. 'not' → logprob: -9.876280784606934
    4. ''' → logprob: -10.376280784606934
    5. ' not' → logprob: -11.001280784606934
    6. '   ' → logprob: -12.126280784606934
    7. '	' → logprob: -13.126280784606934
    8. '       ' → logprob: -13.376280784606934
    9. ' ' → logprob: -13.751280784606934
    10. '`' → logprob: -14.376280784606934

Token 2851: 'not' (ID: 2878)
  Prédit: 'not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.014215687289834023
    2. '"' → logprob: -4.264215469360352
    3. 'no' → logprob: -9.889215469360352
    4. ' not' → logprob: -13.764215469360352
    5. ''' → logprob: -16.01421546936035
    6. '	not' → logprob: -16.38921546936035
    7. '```' → logprob: -17.38921546936035
    8. '   ' → logprob: -17.38921546936035
    9. 'n' → logprob: -17.63921546936035
    10. '`' → logprob: -17.76421546936035

Token 2852: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.5760671496391296
    2. ' found' → logprob: -0.8260671496391296
    3. '_found' → logprob: -9.326066970825195
    4. '
' → logprob: -11.076066970825195
    5. '```' → logprob: -11.701066970825195
    6. '	found' → logprob: -11.826066970825195
    7. ' ' → logprob: -12.701066970825195
    8. 'Found' → logprob: -14.076066970825195
    9. ' 
' → logprob: -14.576066970825195
    10. ' ' → logprob: -14.826066970825195

Token 2853: '"
' (ID: 1092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028750229626893997
    2. '"
' → logprob: -3.90375018119812
    3. '"' → logprob: -5.403750419616699
    4. '\n' → logprob: -5.903750419616699
    5. '           ' → logprob: -7.528750419616699
    6. ')
' → logprob: -9.1537504196167
    7. '
' → logprob: -9.2787504196167
    8. '   ' → logprob: -9.5287504196167
    9. '               ' → logprob: -10.1537504196167
    10. ')' → logprob: -10.7787504196167

Token 2854: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043234970420598984
    2. '           ' → logprob: -4.043234825134277
    3. '	' → logprob: -5.418234825134277
    4. '   ' → logprob: -5.543234825134277
    5. '
' → logprob: -5.668234825134277
    6. '               ' → logprob: -6.043234825134277
    7. '		' → logprob: -6.293234825134277
    8. '        
' → logprob: -6.418234825134277
    9. '\n' → logprob: -6.418234825134277
    10. '	       ' → logprob: -6.918234825134277

Token 2855: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034728605300188065
    2. 'if' → logprob: -3.659728527069092
    3. ' if' → logprob: -5.034728527069092
    4. '   ' → logprob: -7.034728527069092
    5. '           ' → logprob: -7.909728527069092
    6. '
' → logprob: -8.40972900390625
    7. '```' → logprob: -9.03472900390625
    8. 'return' (adapté à ' return') → logprob: -9.40972900390625
    9. '{
' → logprob: -9.53472900390625
    10. ':
' → logprob: -10.78472900390625

Token 2856: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31440645456314087
    2. ' "' → logprob: -1.314406394958496
    3. ''' → logprob: -7.314406394958496
    4. '"id' → logprob: -8.439406394958496
    5. '   ' → logprob: -9.064406394958496
    6. ' '' → logprob: -9.689406394958496
    7. '("' → logprob: -9.814406394958496
    8. ' ' → logprob: -11.564406394958496
    9. ' ("' → logprob: -11.939406394958496
    10. '       ' → logprob: -12.814406394958496

Token 2857: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.10021906346082687
    2. '"' → logprob: -2.3502190113067627
    3. ''' → logprob: -11.600218772888184
    4. ' yes' → logprob: -13.350218772888184
    5. 'no' → logprob: -14.225218772888184
    6. '"id' → logprob: -15.600218772888184
    7. '   ' → logprob: -15.850218772888184
    8. 'YES' → logprob: -16.2252197265625
    9. 'Yes' → logprob: -16.2252197265625
    10. '""' → logprob: -16.6002197265625

Token 2858: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.2948405128554441e-05
    2. ' if' → logprob: -12.12501335144043
    3. '\n' → logprob: -12.37501335144043
    4. 'if' → logprob: -13.25001335144043
    5. '"
' → logprob: -14.12501335144043
    6. ' "' → logprob: -15.00001335144043
    7. '"""' → logprob: -16.25001335144043
    8. 's' → logprob: -16.50001335144043
    9. ''' → logprob: -16.75001335144043
    10. '   ' → logprob: -17.37501335144043

Token 2859: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1431885063648224
    2. 'if' → logprob: -2.0181884765625
    3. '       ' → logprob: -8.1431884765625
    4. 'elif' → logprob: -9.8931884765625
    5. ':' → logprob: -10.1431884765625
    6. '"' → logprob: -10.3931884765625
    7. '```' → logprob: -11.0181884765625
    8. '	if' → logprob: -11.2681884765625
    9. '<|end|>' → logprob: -11.5181884765625
    10. ' ' → logprob: -11.6431884765625

Token 2860: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.5759437084197998
    2. ' id' → logprob: -0.8259437084197998
    3. 'c' → logprob: -12.825943946838379
    4. ' c' → logprob: -13.950943946838379
    5. ' ' → logprob: -15.200943946838379
    6. '(id' → logprob: -15.200943946838379
    7. '	id' → logprob: -15.950943946838379
    8. ' ' → logprob: -17.450942993164062
    9. '"id' → logprob: -17.450942993164062
    10. '_id' → logprob: -18.700942993164062

Token 2861: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '2' → logprob: -13.125001907348633
    3. '```' → logprob: -16.250001907348633
    4. '_' → logprob: -17.625001907348633
    5. '[' → logprob: -18.000001907348633
    6. ' ' → logprob: -18.875001907348633
    7. '[
' → logprob: -19.375001907348633
    8. '``' → logprob: -19.375001907348633
    9. '
' → logprob: -19.625001907348633
    10. ')' → logprob: -19.812501907348633

Token 2862: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25226670503616333
    2. '==' → logprob: -1.5022666454315186
    3. '=' → logprob: -8.127266883850098
    4. '==
' → logprob: -10.877266883850098
    5. ' =' → logprob: -11.752266883850098
    6. ' ==
' → logprob: -12.502266883850098
    7. '<|end|>' → logprob: -12.877266883850098
    8. ')' → logprob: -13.002266883850098
    9. ' ' → logprob: -13.377266883850098
    10. '===' → logprob: -13.877266883850098

Token 2863: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.001170225441455841
    2. ' id' → logprob: -6.7511701583862305
    3. '	id' → logprob: -17.876171112060547
    4. '   ' → logprob: -19.001171112060547
    5. '(id' → logprob: -20.001171112060547
    6. ' ' → logprob: -20.376171112060547
    7. '"id' → logprob: -21.126171112060547
    8. '=id' → logprob: -21.126171112060547
    9. '?id' → logprob: -21.501171112060547
    10. '
' → logprob: -21.501171112060547

Token 2864: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021569548698607832
    2. '1' → logprob: -9.000215530395508
    3. '_' → logprob: -10.625215530395508
    4. ' ' → logprob: -10.750215530395508
    5. 'else' → logprob: -11.125215530395508
    6. '   ' → logprob: -12.250215530395508
    7. ' else' → logprob: -12.375215530395508
    8. ')' → logprob: -12.375215530395508
    9. '  ' → logprob: -12.750215530395508
    10. ' or' → logprob: -12.750215530395508

Token 2865: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.01605149731040001
    2. 'else' → logprob: -4.141051292419434
    3. '	else' → logprob: -11.641051292419434
    4. '       ' → logprob: -13.141051292419434
    5. ' ' → logprob: -13.766051292419434
    6. '        ' → logprob: -14.266051292419434
    7. ' ' → logprob: -14.266051292419434
    8. '   ' → logprob: -14.391051292419434
    9. '<|end|>' → logprob: -14.391051292419434
    10. '"' → logprob: -14.641051292419434

Token 2866: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00030578780570067465
    2. ' "' → logprob: -8.125306129455566
    3. ''' → logprob: -11.750306129455566
    4. '"No' → logprob: -13.500306129455566
    5. ' ' → logprob: -15.375306129455566
    6. ' no' → logprob: -16.25030517578125
    7. '	' → logprob: -16.87530517578125
    8. ' ' → logprob: -17.37530517578125
    9. '`' → logprob: -17.75030517578125
    10. '
' → logprob: -18.00030517578125

Token 2867: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.00020449401927180588
    2. ' no' → logprob: -8.500204086303711
    3. '"' → logprob: -13.875204086303711
    4. 'n' → logprob: -19.37520408630371
    5. '	no' → logprob: -19.62520408630371
    6. 'No' → logprob: -20.50020408630371
    7. '_no' → logprob: -22.25020408630371
    8. 'NO' → logprob: -22.50020408630371
    9. '"No' → logprob: -22.62520408630371
    10. 'not' → logprob: -23.37520408630371

Token 2868: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2869: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2870: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6770877838134766
    2. ' __' → logprob: -0.9270877838134766
    3. '__' → logprob: -3.1770877838134766
    4. ' _' → logprob: -3.4270877838134766
    5. '_main' → logprob: -4.677087783813477
    6. 'main' → logprob: -5.552087783813477
    7. ' def' → logprob: -5.677087783813477
    8. '_' → logprob: -5.802087783813477
    9. 'def' → logprob: -7.302087783813477
    10. ' ' → logprob: -8.052087783813477

Token 2871: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0052456180565059185
    2. '():
' → logprob: -5.255245685577393
    3. '()' → logprob: -11.755245208740234
    4. ' ():' → logprob: -12.880245208740234
    5. '():
' → logprob: -14.130245208740234
    6. '(' → logprob: -14.880245208740234
    7. '():

' → logprob: -15.630245208740234
    8. '_' → logprob: -17.005245208740234
    9. ':' → logprob: -17.380245208740234
    10. '().' → logprob: -17.505245208740234

Token 2872: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1199931651353836
    2. 'import' → logprob: -2.369993209838867
    3. '```' → logprob: -4.619993209838867
    4. 'def' → logprob: -4.744993209838867
    5. '	import' → logprob: -8.244993209838867
    6. ' import' → logprob: -8.244993209838867
    7. 'input' → logprob: -9.244993209838867
    8. ' lines' → logprob: -10.119993209838867
    9. '	lines' → logprob: -10.119993209838867
    10. '    
' → logprob: -10.244993209838867

Token 2873: ' input' (ID: 3422)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4852786362171173
    2. '   ' → logprob: -0.9852786064147949
    3. ' import' → logprob: -4.860278606414795
    4. 'n' → logprob: -5.860278606414795
    5. ' n' → logprob: -8.235279083251953
    6. 'input' (adapté à ' input') → logprob: -8.735279083251953
    7. '```' → logprob: -9.985279083251953
    8. '	import' → logprob: -10.860279083251953
    9. 'lines' → logprob: -11.485279083251953
    10. ' lines' → logprob: -11.735279083251953

Token 2874: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006962466053664684
    2. '(' → logprob: -6.256962299346924
    3. '_line' → logprob: -6.506962299346924
    4. '_' → logprob: -6.881962299346924
    5. ' =' → logprob: -7.256962299346924
    6. '=' → logprob: -8.006962776184082
    7. '_lines' → logprob: -8.006962776184082
    8. '()
' → logprob: -8.131962776184082
    9. '_tokens' → logprob: -8.881962776184082
    10. '_data' → logprob: -9.006962776184082

Token 2875: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5805270671844482
    2. '   ' → logprob: -1.8305270671844482
    3. '=' → logprob: -1.9555270671844482
    4. '()' → logprob: -2.5805270671844482
    5. '[' → logprob: -3.7055270671844482
    6. '[]' → logprob: -4.080527305603027
    7. '[
' → logprob: -5.830527305603027
    8. '```' → logprob: -5.830527305603027
    9. '=[]' → logprob: -6.080527305603027
    10. '.readline' → logprob: -6.080527305603027

Token 2876: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02983217127621174
    2. ' sys' → logprob: -3.529832124710083
    3. '[' → logprob: -9.654831886291504
    4. ' [' → logprob: -11.404831886291504
    5. '(sys' → logprob: -13.529831886291504
    6. '=sys' → logprob: -13.654831886291504
    7. '[]
' → logprob: -13.779831886291504
    8. '[]' → logprob: -14.029831886291504
    9. '   ' → logprob: -14.529831886291504
    10. '	sys' → logprob: -14.654831886291504

Token 2877: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0008388153510168195
    2. '.' → logprob: -7.125838756561279
    3. 'stdin' → logprob: -10.875839233398438
    4. '.stdout' → logprob: -12.125839233398438
    5. '.argv' → logprob: -12.500839233398438
    6. '.readline' → logprob: -13.250839233398438
    7. '().' → logprob: -13.250839233398438
    8. '.std' → logprob: -13.500839233398438
    9. '(stdin' → logprob: -14.875839233398438
    10. '.
' → logprob: -15.250839233398438

Token 2878: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0027637446764856577
    2. '.' → logprob: -6.127763748168945
    3. '().' → logprob: -7.877763748168945
    4. '()' → logprob: -9.627763748168945
    5. 'read' → logprob: -10.252763748168945
    6. '.readlines' → logprob: -10.502763748168945
    7. ' =' → logprob: -10.627763748168945
    8. '.read' → logprob: -11.002763748168945
    9. ' readline' → logprob: -11.627763748168945
    10. '   ' → logprob: -12.502763748168945

Token 2879: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005780545179732144
    2. '()' → logprob: -7.500577926635742
    3. 'split' → logprob: -11.750577926635742
    4. '.split' → logprob: -12.000577926635742
    5. '()
' → logprob: -12.125577926635742
    6. 'lines' → logprob: -13.250577926635742
    7. 'line' → logprob: -14.000577926635742
    8. '```' → logprob: -14.125577926635742
    9. '()\' → logprob: -14.500577926635742
    10. '   ' → logprob: -15.375577926635742

Token 2880: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3308529555797577
    2. 'strip' → logprob: -1.33085298538208
    3. 'read' → logprob: -4.08085298538208
    4. 'decode' → logprob: -7.70585298538208
    5. 'rstrip' → logprob: -9.455852508544922
    6. 'lines' → logprob: -11.080852508544922
    7. ' split' → logprob: -16.080852508544922
    8. '(split' → logprob: -16.330852508544922
    9. 'replace' → logprob: -16.705852508544922
    10. '_lines' → logprob: -17.205852508544922

Token 2881: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.234323650598526
    2. '()' → logprob: -1.7343236207962036
    3. '('\' → logprob: -3.484323740005493
    4. '()
' → logprob: -6.734323501586914
    5. '()\' → logprob: -7.609323501586914
    6. '()[' → logprob: -12.109323501586914
    7. '("\' → logprob: -12.734323501586914
    8. '()

' → logprob: -13.234323501586914
    9. ''\' → logprob: -13.484323501586914
    10. '()`' → logprob: -14.484323501586914

Token 2882: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018498663557693362
    2. '```' → logprob: -6.62684965133667
    3. 'n' → logprob: -8.751850128173828
    4. 'i' → logprob: -10.001850128173828
    5. 'input' → logprob: -10.001850128173828
    6. 'num' → logprob: -10.126850128173828
    7. 'idx' → logprob: -10.251850128173828
    8. '(n' → logprob: -10.376850128173828
    9. '
' → logprob: -10.501850128173828
    10. 'for' → logprob: -10.501850128173828

Token 2883: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4774795174598694
    2. 'n' → logprob: -0.9774795174598694
    3. ' n' → logprob: -6.227479457855225
    4. 'N' → logprob: -7.352479457855225
    5. 'num' → logprob: -7.352479457855225
    6. '```' → logprob: -9.602479934692383
    7. 'i' → logprob: -10.227479934692383
    8. 'idx' → logprob: -11.477479934692383
    9. '	n' → logprob: -11.602479934692383
    10. '    
' → logprob: -11.852479934692383

Token 2884: ' idx' (ID: 14016)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03237583488225937
    2. '   ' → logprob: -3.5323758125305176
    3. 'num' → logprob: -6.657375812530518
    4. 'N' → logprob: -7.282375812530518
    5. 'idx' (adapté à ' idx') → logprob: -7.532375812530518
    6. 'i' → logprob: -9.407376289367676
    7. ' n' → logprob: -11.032376289367676
    8. '```' → logprob: -12.907376289367676
    9. 'ptr' → logprob: -13.032376289367676
    10. 'index' → logprob: -13.032376289367676

Token 2885: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4040553867816925
    2. ' =' → logprob: -1.1540553569793701
    3. ' +=' → logprob: -5.279055595397949
    4. '_' → logprob: -5.279055595397949
    5. '+=' → logprob: -5.529055595397949
    6. '_tokens' → logprob: -7.779055595397949
    7. '_token' → logprob: -7.904055595397949
    8. '```' → logprob: -7.904055595397949
    9. '   ' → logprob: -8.27905559539795
    10. ')' → logprob: -8.52905559539795

Token 2886: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038479414070025086
    2. '1' → logprob: -8.250384330749512
    3. ' ' → logprob: -9.000384330749512
    4. '   ' → logprob: -16.250385284423828
    5. '    ' → logprob: -17.750385284423828
    6. ' 
' → logprob: -18.125385284423828
    7. '=' → logprob: -18.500385284423828
    8. '```' → logprob: -18.500385284423828
    9. '<|end|>' → logprob: -18.750385284423828
    10. '  ' → logprob: -19.125385284423828

Token 2887: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004909569397568703
    2. '1' → logprob: -7.625491142272949
    3. ' ' → logprob: -12.75049114227295
    4. '   ' → logprob: -18.375490188598633
    5. 'int' → logprob: -18.500490188598633
    6. 'idx' → logprob: -18.625490188598633
    7. '#' → logprob: -19.000490188598633
    8. 'len' → logprob: -19.625490188598633
    9. '=' → logprob: -19.750490188598633
    10. 'input' → logprob: -20.875490188598633

Token 2888: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1940212994813919
    2. '   ' → logprob: -1.9440213441848755
    3. 'N' → logprob: -3.444021224975586
    4. 'num' → logprob: -6.944021224975586
    5. ' n' → logprob: -8.194021224975586
    6. '
' → logprob: -10.569021224975586
    7. '```' → logprob: -10.819021224975586
    8. ' N' → logprob: -12.569021224975586
    9. 't' → logprob: -13.069021224975586
    10. 'T' → logprob: -13.694021224975586

Token 2889: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04377926141023636
    2. 'N' → logprob: -3.5437793731689453
    3. '   ' → logprob: -4.543779373168945
    4. 'num' → logprob: -5.793779373168945
    5. '```' → logprob: -8.543779373168945
    6. ' n' → logprob: -10.918779373168945
    7. 'T' → logprob: -10.918779373168945
    8. '
' → logprob: -11.293779373168945
    9. 't' → logprob: -12.543779373168945
    10. '_n' → logprob: -13.668779373168945

Token 2890: ' while' (ID: 2049)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.617124080657959
    2. 'n' → logprob: -1.367124080657959
    3. 't' → logprob: -1.867124080657959
    4. '   ' → logprob: -3.367124080657959
    5. 'N' → logprob: -4.617124080657959
    6. 'num' → logprob: -5.242124080657959
    7. '
' → logprob: -7.367124080657959
    8. 'while' (adapté à ' while') → logprob: -7.617124080657959
    9. ' T' → logprob: -8.617124557495117
    10. ' t' → logprob: -9.992124557495117

Token 2891: ' True' (ID: 6432)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.07957423478364944
    2. ' idx' → logprob: -2.5795743465423584
    3. ' True' → logprob: -7.454574108123779
    4. 'True' → logprob: -10.079574584960938
    5. 'len' → logprob: -10.829574584960938
    6. '   ' → logprob: -11.329574584960938
    7. 'input' → logprob: -11.954574584960938
    8. '
' → logprob: -11.954574584960938
    9. '	idx' → logprob: -12.204574584960938
    10. ' ' → logprob: -12.329574584960938

Token 2892: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10326097905635834
    2. '   ' → logprob: -3.3532609939575195
    3. ' if' → logprob: -3.6032609939575195
    4. 'if' → logprob: -3.9782609939575195
    5. ':' → logprob: -4.6032609939575195
    6. ':
' → logprob: -5.6032609939575195
    7. '           ' → logprob: -7.1032609939575195
    8. ',' → logprob: -7.3532609939575195
    9. ' and' → logprob: -7.8532609939575195
    10. '<|end|>' → logprob: -8.47826099395752

Token 2893: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12463807314634323
    2. ' if' → logprob: -2.749638080596924
    3. 'if' → logprob: -2.999638080596924
    4. '       ' → logprob: -5.749638080596924
    5. 'n' → logprob: -8.874637603759766
    6. ' n' → logprob: -9.999637603759766
    7. '```' → logprob: -10.999637603759766
    8. '	if' → logprob: -11.124637603759766
    9. ' ' → logprob: -11.999637603759766
    10. '    
' → logprob: -12.499637603759766

Token 2894: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.28138887882232666
    2. 'n' → logprob: -1.5313888788223267
    3. ' if' → logprob: -3.906388759613037
    4. '   ' → logprob: -4.906388759613037
    5. ' n' → logprob: -6.781388759613037
    6. '       ' → logprob: -8.906389236450195
    7. 'line' → logprob: -9.531389236450195
    8. 'num' → logprob: -9.531389236450195
    9. '```' → logprob: -10.531389236450195
    10. ' line' → logprob: -11.031389236450195

Token 2895: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.038398899137973785
    2. ' idx' → logprob: -3.2883989810943604
    3. '   ' → logprob: -8.038398742675781
    4. '	idx' → logprob: -11.288398742675781
    5. ' not' → logprob: -11.663398742675781
    6. 'not' → logprob: -11.913398742675781
    7. ' ' → logprob: -12.288398742675781
    8. '(idx' → logprob: -14.663398742675781
    9. '_idx' → logprob: -14.788398742675781
    10. '
' → logprob: -15.038398742675781

Token 2896: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7498719096183777
    2. '>=' → logprob: -0.7498719096183777
    3. ' ==' → logprob: -3.9998719692230225
    4. '<' → logprob: -4.374871730804443
    5. ' <' → logprob: -4.499871730804443
    6. '==' → logprob: -4.624871730804443
    7. '<len' → logprob: -6.124871730804443
    8. '```' → logprob: -8.124872207641602
    9. '[' → logprob: -8.374872207641602
    10. '+' → logprob: -9.249872207641602

Token 2897: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.848420551046729e-05
    2. ' len' → logprob: -9.7500581741333
    3. 'input' → logprob: -16.750059127807617
    4. '
' → logprob: -16.875059127807617
    5. '(len' → logprob: -17.500059127807617
    6. ',len' → logprob: -18.750059127807617
    7. 'int' → logprob: -19.375059127807617
    8. '[len' → logprob: -19.500059127807617
    9. '   ' → logprob: -19.625059127807617
    10. '<len' → logprob: -19.625059127807617

Token 2898: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11888028681278229
    2. '(input' → logprob: -2.493880271911621
    3. ' input' → logprob: -3.618880271911621
    4. '   ' → logprob: -7.743880271911621
    5. '<input' → logprob: -7.993880271911621
    6. ' (' → logprob: -8.243880271911621
    7. ':' → logprob: -8.493880271911621
    8. ' ' → logprob: -8.618880271911621
    9. '(' → logprob: -8.743880271911621
    10. '  ' → logprob: -9.118880271911621

Token 2899: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.01023869588971138
    2. '_' → logprob: -4.6352386474609375
    3. '):
' → logprob: -9.135238647460938
    4. '_
' → logprob: -9.510238647460938
    5. '   ' → logprob: -10.385238647460938
    6. '_line' → logprob: -10.385238647460938
    7. ')' → logprob: -10.385238647460938
    8. '():
' → logprob: -10.510238647460938
    9. 'Lines' → logprob: -10.760238647460938
    10. '):' → logprob: -10.885238647460938

Token 2900: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0589591264724731
    2. ' or' → logprob: -1.3089591264724731
    3. ' and' → logprob: -1.6839591264724731
    4. '       ' → logprob: -2.3089590072631836
    5. '           ' → logprob: -2.9339590072631836
    6. ':' → logprob: -3.4339590072631836
    7. 'and' → logprob: -5.058959007263184
    8. '+' → logprob: -6.433959007263184
    9. '   ' → logprob: -7.058959007263184
    10. '):
' → logprob: -7.183959007263184

Token 2901: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008916903752833605
    2. ' break' → logprob: -8.12589168548584
    3. 'break' → logprob: -8.25089168548584
    4. '       ' → logprob: -9.12589168548584
    5. '   ' → logprob: -9.25089168548584
    6. ':
' → logprob: -10.25089168548584
    7. '               ' → logprob: -10.87589168548584
    8. '		' → logprob: -11.12589168548584
    9. ',' → logprob: -11.87589168548584
    10. '            
' → logprob: -12.00089168548584

Token 2902: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48148614168167114
    2. 'break' (adapté à ' break') → logprob: -0.9814861416816711
    3. ' break' → logprob: -5.4814863204956055
    4. '       ' → logprob: -6.1064863204956055
    5. 'return' → logprob: -7.6064863204956055
    6. '   ' → logprob: -8.231486320495605
    7. '	break' → logprob: -8.981486320495605
    8. '               ' → logprob: -10.231486320495605
    9. '		' → logprob: -10.356486320495605
    10. ' ' → logprob: -11.106486320495605

Token 2903: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014099215157330036
    2. ' line' → logprob: -5.76409912109375
    3. '        
' → logprob: -6.01409912109375
    4. 'line' → logprob: -6.38909912109375
    5. '```' → logprob: -6.38909912109375
    6. ' if' → logprob: -6.51409912109375
    7. '
' → logprob: -6.63909912109375
    8. '   ' → logprob: -6.76409912109375
    9. 'if' → logprob: -7.88909912109375
    10. '    
' → logprob: -8.51409912109375

Token 2904: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001217974815517664
    2. '```' → logprob: -7.876217842102051
    3. 'line' → logprob: -8.37621784210205
    4. ' if' → logprob: -8.50121784210205
    5. '   ' → logprob: -9.00121784210205
    6. 'if' → logprob: -9.25121784210205
    7. ' line' → logprob: -9.37621784210205
    8. 'n' → logprob: -10.25121784210205
    9. '        
' → logprob: -10.75121784210205
    10. '           ' → logprob: -11.37621784210205

Token 2905: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.247221440076828
    2. 'line' (adapté à ' line') → logprob: -2.1222214698791504
    3. ' n' → logprob: -3.3722214698791504
    4. '       ' → logprob: -3.7472214698791504
    5. '   ' → logprob: -3.9972214698791504
    6. 'if' → logprob: -4.62222146987915
    7. ' line' → logprob: -4.99722146987915
    8. 't' → logprob: -6.12222146987915
    9. 'num' → logprob: -6.74722146987915
    10. 'N' → logprob: -6.74722146987915

Token 2906: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01868431456387043
    2. '=' → logprob: -4.018684387207031
    3. '=line' → logprob: -8.143684387207031
    4. '       ' → logprob: -9.143684387207031
    5. '.strip' → logprob: -10.393684387207031
    6. '   ' → logprob: -10.768684387207031
    7. ' ' → logprob: -10.768684387207031
    8. 'tokens' → logprob: -11.518684387207031
    9. '_tokens' → logprob: -11.768684387207031
    10. ' if' → logprob: -12.143684387207031

Token 2907: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009115827269852161
    2. ' input' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.500911712646484
    4. 'line' → logprob: -18.250911712646484
    5. '(input' → logprob: -18.500911712646484
    6. '=input' → logprob: -20.000911712646484
    7. '<input' → logprob: -20.375911712646484
    8. ' ' → logprob: -20.375911712646484
    9. '       ' → logprob: -20.500911712646484
    10. '	input' → logprob: -20.500911712646484

Token 2908: '_lines' (ID: 42980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3712935149669647
    2. ' =' → logprob: -1.871293544769287
    3. '.strip' → logprob: -2.746293544769287
    4. '[idx' → logprob: -3.121293544769287
    5. '=line' → logprob: -3.371293544769287
    6. 'idx' → logprob: -5.996293544769287
    7. '[line' → logprob: -6.121293544769287
    8. 'strip' → logprob: -6.121293544769287
    9. '.' → logprob: -7.121293544769287
    10. '```' → logprob: -7.121293544769287

Token 2909: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0070285312831401825
    2. ' =' → logprob: -5.882028579711914
    3. '   ' → logprob: -6.757028579711914
    4. '=' → logprob: -6.757028579711914
    5. 'idx' → logprob: -7.007028579711914
    6. '```' → logprob: -8.007028579711914
    7. '       ' → logprob: -8.507028579711914
    8. '[
' → logprob: -9.257028579711914
    9. '=
' → logprob: -10.007028579711914
    10. '[line' → logprob: -10.132028579711914

Token 2910: '].' (ID: 1651)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.5353389978408813
    2. '       ' → logprob: -1.4103389978408813
    3. '
' → logprob: -1.9103389978408813
    4. '        
' → logprob: -4.910338878631592
    5. '.rstrip' → logprob: -5.535338878631592
    6. '           ' → logprob: -6.285338878631592
    7. ' =' → logprob: -6.535338878631592
    8. '.readline' → logprob: -6.535338878631592
    9. '().' → logprob: -6.910338878631592
    10. '=' → logprob: -7.035338878631592

Token 2911: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'rstrip' → logprob: -16.25
    3. ' strip' → logprob: -20.125
    4. '_strip' → logprob: -20.25
    5. 'split' → logprob: -20.375
    6. '.strip' → logprob: -20.875
    7. '(strip' → logprob: -22.5
    8. 'startswith' → logprob: -23.0
    9. 'str' → logprob: -23.25
    10. 'trim' → logprob: -23.375

Token 2912: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.287558913230896
    2. 'if' → logprob: -1.412558913230896
    3. ' if' → logprob: -5.6625590324401855
    4. '```' → logprob: -7.0375590324401855
    5. '           ' → logprob: -7.6625590324401855
    6. '
' → logprob: -8.162558555603027
    7. 'idx' → logprob: -8.162558555603027
    8. 'and' → logprob: -8.912558555603027
    9. '<|end|>' → logprob: -9.162558555603027
    10. '   ' → logprob: -9.162558555603027

Token 2913: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.160915806889534
    2. '       ' → logprob: -1.9109158515930176
    3. ' if' → logprob: -7.535915851593018
    4. '```' → logprob: -9.41091537475586
    5. '   ' → logprob: -10.28591537475586
    6. 'idx' → logprob: -10.53591537475586
    7. '           ' → logprob: -12.28591537475586
    8. '	if' → logprob: -12.53591537475586
    9. 'If' → logprob: -13.03591537475586
    10. '<|end|>' → logprob: -14.16091537475586

Token 2914: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0011786778923124075
    2. 'idx' (adapté à ' idx') → logprob: -6.751178741455078
    3. ' if' → logprob: -12.376178741455078
    4. '       ' → logprob: -12.376178741455078
    5. '	if' → logprob: -16.626178741455078
    6. '   ' → logprob: -17.376178741455078
    7. '```' → logprob: -18.251178741455078
    8. '[idx' → logprob: -18.751178741455078
    9. '        
' → logprob: -18.751178741455078
    10. '           ' → logprob: -19.001178741455078

Token 2915: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3890603482723236
    2. '==' → logprob: -1.139060378074646
    3. ' +=' → logprob: -6.6390604972839355
    4. '==
' → logprob: -8.139060020446777
    5. ' ==' → logprob: -8.389060020446777
    6. '=' → logprob: -8.889060020446777
    7. '```' → logprob: -9.639060020446777
    8. '===' → logprob: -9.764060020446777
    9. '       ' → logprob: -9.889060020446777
    10. 'if' → logprob: -11.514060020446777

Token 2916: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000633566698525101
    2. '0' → logprob: -7.375633716583252
    3. ' ' → logprob: -12.250633239746094
    4. '
' → logprob: -13.500633239746094
    5. 'int' → logprob: -14.375633239746094
    6. 'if' → logprob: -15.250633239746094
    7. '#' → logprob: -18.250633239746094
    8. 'len' → logprob: -18.250633239746094
    9. '`' → logprob: -18.625633239746094
    10. '   ' → logprob: -18.625633239746094

Token 2917: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038046084344387054
    2. '0' → logprob: -3.28804612159729
    3. ' ' → logprob: -13.038045883178711
    4. '
' → logprob: -13.538045883178711
    5. 'int' → logprob: -13.913045883178711
    6. 'if' → logprob: -16.91304588317871
    7. 'line' → logprob: -17.03804588317871
    8. 'continue' → logprob: -17.41304588317871
    9. '   ' → logprob: -17.66304588317871
    10. '```' → logprob: -17.66304588317871

Token 2918: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004508562386035919
    2. '       ' → logprob: -5.7545084953308105
    3. ' if' → logprob: -6.6295084953308105
    4. 'n' → logprob: -12.629508972167969
    5. '```' → logprob: -12.879508972167969
    6. '   ' → logprob: -13.379508972167969
    7. '	if' → logprob: -13.504508972167969
    8. 'If' → logprob: -16.25450897216797
    9. 'num' → logprob: -16.37950897216797
    10. '           ' → logprob: -16.62950897216797

Token 2919: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006801106035709381
    2. '       ' → logprob: -5.006801128387451
    3. ' if' → logprob: -9.631800651550293
    4. 'n' → logprob: -10.881800651550293
    5. '   ' → logprob: -14.506800651550293
    6. '	if' → logprob: -15.256800651550293
    7. '```' → logprob: -15.506800651550293
    8. 'try' → logprob: -15.756800651550293
    9. 'num' → logprob: -15.756800651550293
    10. 'while' → logprob: -16.00680160522461

Token 2920: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000331055314745754
    2. '       ' → logprob: -8.125330924987793
    3. 'n' → logprob: -10.625330924987793
    4. ' if' → logprob: -11.500330924987793
    5. '#' → logprob: -15.750330924987793
    6. 'num' → logprob: -16.25033187866211
    7. '   ' → logprob: -16.37533187866211
    8. 'try' → logprob: -16.37533187866211
    9. '
' → logprob: -16.87533187866211
    10. '	if' → logprob: -17.12533187866211

Token 2921: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.028160713613033295
    2. 'not' → logprob: -4.278160572052002
    3. ' line' → logprob: -4.528160572052002
    4. ' not' → logprob: -5.778160572052002
    5. '#line' → logprob: -13.40316104888916
    6. '   ' → logprob: -13.52816104888916
    7. '(line' → logprob: -14.15316104888916
    8. '	line' → logprob: -14.77816104888916
    9. 'len' → logprob: -15.15316104888916
    10. ' ' → logprob: -15.15316104888916

Token 2922: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.048774491995573044
    2. ' ==' → logprob: -3.048774480819702
    3. '()==' → logprob: -9.048774719238281
    4. '==
' → logprob: -10.673774719238281
    5. '```' → logprob: -11.048774719238281
    6. '===' → logprob: -11.298774719238281
    7. '=' → logprob: -12.048774719238281
    8. '=='' → logprob: -12.548774719238281
    9. ')==' → logprob: -12.923774719238281
    10. '.startswith' → logprob: -13.423774719238281

Token 2923: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3953770697116852
    2. '''' → logprob: -1.1453770399093628
    3. '"' → logprob: -4.895377159118652
    4. '""' → logprob: -7.770377159118652
    5. '0' → logprob: -8.145377159118652
    6. '"":' → logprob: -9.645377159118652
    7. ''#' → logprob: -9.645377159118652
    8. '''
' → logprob: -10.520377159118652
    9. ''T' → logprob: -10.895377159118652
    10. ''end' → logprob: -10.895377159118652

Token 2924: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03706933930516243
    2. ''' → logprob: -3.912069320678711
    3. '':' → logprob: -4.537069320678711
    4. '':
' → logprob: -5.662069320678711
    5. '''' → logprob: -6.287069320678711
    6. ''):
' → logprob: -8.912069320678711
    7. 'def' → logprob: -9.912069320678711
    8. '')' → logprob: -10.787069320678711
    9. ''''' → logprob: -10.787069320678711
    10. '#' → logprob: -11.037069320678711

Token 2925: ' ' (ID: 220)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.12109583616256714
    2. '':' → logprob: -2.246095895767212
    3. ''' → logprob: -5.246095657348633
    4. '':
' → logprob: -6.121095657348633
    5. ''):
' → logprob: -7.996095657348633
    6. ' '' → logprob: -8.871095657348633
    7. '\n' → logprob: -8.871095657348633
    8. '       ' → logprob: -9.746095657348633
    9. '0' → logprob: -10.871095657348633
    10. '<|end|>' → logprob: -11.121095657348633

Token 2926: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009002620354294777
    2. ''' → logprob: -8.250900268554688
    3. ''):
' → logprob: -8.375900268554688
    4. '')' → logprob: -9.125900268554688
    5. '<|end|>' → logprob: -9.500900268554688
    6. '<|end|>' → logprob: -9.625900268554688
    7. ''>' → logprob: -9.875900268554688
    8. 'n' → logprob: -10.625900268554688
    9. ''):' → logprob: -10.625900268554688
    10. ' ' → logprob: -11.500900268554688

Token 2927: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.11233722418546677
    2. '\n' → logprob: -2.362337112426758
    3. '':' → logprob: -4.487337112426758
    4. '':
' → logprob: -7.862337112426758
    5. ''' → logprob: -8.487337112426758
    6. '       ' → logprob: -9.862337112426758
    7. '0' → logprob: -9.862337112426758
    8. ' '' → logprob: -10.112337112426758
    9. '\r' → logprob: -10.237337112426758
    10. ''):
' → logprob: -11.237337112426758

Token 2928: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010483506135642529
    2. ':
' → logprob: -5.385483741760254
    3. ':' → logprob: -6.260483741760254
    4. 'continue' → logprob: -6.385483741760254
    5. '		' → logprob: -6.760483741760254
    6. ' continue' → logprob: -7.510483741760254
    7. '       ' → logprob: -8.385483741760254
    8. '               ' → logprob: -9.885483741760254
    9. '	       ' → logprob: -10.010483741760254
    10. '	continue' → logprob: -10.260483741760254

Token 2929: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.12113110721111298
    2. '           ' → logprob: -2.371131181716919
    3. '       ' → logprob: -4.12113094329834
    4. ' break' → logprob: -5.49613094329834
    5. '	break' → logprob: -8.37113094329834
    6. 'continue' → logprob: -9.74613094329834
    7. '               ' → logprob: -10.12113094329834
    8. '		' → logprob: -10.87113094329834
    9. '   ' → logprob: -11.62113094329834
    10. '```' → logprob: -11.62113094329834

Token 2930: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3251676559448242
    2. '       ' → logprob: -1.3251676559448242
    3. 'num' → logprob: -4.575167655944824
    4. ' n' → logprob: -6.950167655944824
    5. 'if' → logprob: -8.700167655944824
    6. '```' → logprob: -8.825167655944824
    7. '   ' → logprob: -10.200167655944824
    8. '        
' → logprob: -10.325167655944824
    9. 'count' → logprob: -10.450167655944824
    10. 'N' → logprob: -10.450167655944824

Token 2931: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010281884111464024
    2. 'n' → logprob: -4.760282039642334
    3. 'num' → logprob: -6.760282039642334
    4. '```' → logprob: -8.010281562805176
    5. '   ' → logprob: -9.510281562805176
    6. ' n' → logprob: -9.635281562805176
    7. '        
' → logprob: -11.385281562805176
    8. 'count' → logprob: -12.885281562805176
    9. '           ' → logprob: -13.010281562805176
    10. 't' → logprob: -13.010281562805176

Token 2932: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01281734462827444
    2. 'num' → logprob: -5.3878173828125
    3. 'N' → logprob: -5.6378173828125
    4. '       ' → logprob: -5.7628173828125
    5. 'parts' → logprob: -7.3878173828125
    6. ' n' → logprob: -7.8878173828125
    7. 'pages' → logprob: -9.3878173828125
    8. 'np' → logprob: -9.5128173828125
    9. 'nums' → logprob: -9.8878173828125
    10. 'ns' → logprob: -10.5128173828125

Token 2933: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.44537848234176636
    2. ' line' → logprob: -1.8203785419464111
    3. 'line' → logprob: -1.9453785419464111
    4. 'not' → logprob: -2.945378541946411
    5. ''' → logprob: -6.820378303527832
    6. '   ' → logprob: -8.195378303527832
    7. '       ' → logprob: -8.570378303527832
    8. ' '' → logprob: -8.945378303527832
    9. 'len' → logprob: -9.445378303527832
    10. '#line' → logprob: -9.820378303527832

Token 2934: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01416350994259119
    2. ' line' → logprob: -4.264163494110107
    3. '(line' → logprob: -18.139163970947266
    4. '	line' → logprob: -18.264163970947266
    5. ' ' → logprob: -18.514163970947266
    6. '   ' → logprob: -19.139163970947266
    7. '
' → logprob: -19.639163970947266
    8. '#line' → logprob: -20.264163970947266
    9. 'len' → logprob: -20.639163970947266
    10. '[line' → logprob: -21.389163970947266

Token 2935: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.35582754015922546
    2. '.startswith' → logprob: -1.7308275699615479
    3. ':
' → logprob: -2.605827569961548
    4. ':' → logprob: -3.855827569961548
    5. '.' → logprob: -4.230827331542969
    6. '.endswith' → logprob: -5.480827331542969
    7. '.split' → logprob: -5.480827331542969
    8. '   ' → logprob: -6.105827331542969
    9. '       ' → logprob: -6.480827331542969
    10. ' or' → logprob: -8.730827331542969

Token 2936: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031771177891641855
    2. ' continue' → logprob: -6.378177165985107
    3. 'continue' → logprob: -6.878177165985107
    4. '       ' → logprob: -8.37817668914795
    5. ' continues' → logprob: -10.25317668914795
    6. '	       ' → logprob: -10.25317668914795
    7. ',' → logprob: -10.75317668914795
    8. '		' → logprob: -11.12817668914795
    9. '<|end|>' → logprob: -11.12817668914795
    10. ':' → logprob: -11.37817668914795

Token 2937: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.16154423356056213
    2. '           ' → logprob: -1.9115442037582397
    3. ' continue' → logprob: -6.661544322967529
    4. '	continue' → logprob: -11.161543846130371
    5. '               ' → logprob: -12.036543846130371
    6. '_continue' → logprob: -12.161543846130371
    7. '       ' → logprob: -12.536543846130371
    8. '```' → logprob: -12.661543846130371
    9. '		' → logprob: -12.786543846130371
    10. '   ' → logprob: -12.911543846130371

Token 2938: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.232493564719334e-05
    2. 'n' → logprob: -10.625082015991211
    3. ' parts' → logprob: -11.500082015991211
    4. ' n' → logprob: -11.875082015991211
    5. '        
' → logprob: -11.875082015991211
    6. '```' → logprob: -11.875082015991211
    7. 'tokens' → logprob: -12.000082015991211
    8. 'num' → logprob: -12.000082015991211
    9. 'parts' → logprob: -12.250082015991211
    10. '   ' → logprob: -13.375082015991211

Token 2939: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26108625531196594
    2. '       ' → logprob: -1.5110862255096436
    3. '```' → logprob: -5.386086463928223
    4. 'num' → logprob: -5.636086463928223
    5. 'N' → logprob: -7.511086463928223
    6. ' n' → logprob: -9.011086463928223
    7. 'parts' → logprob: -9.261086463928223
    8. 'count' → logprob: -9.761086463928223
    9. '   ' → logprob: -11.011086463928223
    10. 't' → logprob: -11.261086463928223

Token 2940: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019948789849877357
    2. 'N' (adapté à ' N') → logprob: -4.394948959350586
    3. 'num' → logprob: -5.394948959350586
    4. 'parts' → logprob: -6.269948959350586
    5. '       ' → logprob: -8.144948959350586
    6. 'ns' → logprob: -8.894948959350586
    7. 'np' → logprob: -8.894948959350586
    8. 'nums' → logprob: -9.019948959350586
    9. 'nt' → logprob: -10.144948959350586
    10. 'pages' → logprob: -10.269948959350586

Token 2941: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1090235486626625
    2. ' ,' → logprob: -2.9840235710144043
    3. '=' → logprob: -3.8590235710144043
    4. ' =' → logprob: -4.609023571014404
    5. '       ' → logprob: -4.984023571014404
    6. ' ' → logprob: -5.734023571014404
    7. ')' → logprob: -6.234023571014404
    8. 'tokens' → logprob: -6.359023571014404
    9. '   ' → logprob: -6.609023571014404
    10. '    ' → logprob: -7.234023571014404

Token 2942: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.2016657441854477
    2. ' M' → logprob: -1.7016657590866089
    3. 'Q' → logprob: -8.701665878295898
    4. 'K' → logprob: -10.201665878295898
    5. ' ' → logprob: -10.576665878295898
    6. ' Q' → logprob: -11.576665878295898
    7. ' K' → logprob: -12.076665878295898
    8. 'space' → logprob: -12.951665878295898
    9. 'm' → logprob: -13.576665878295898
    10. 'k' → logprob: -13.951665878295898

Token 2943: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141693949699402
    2. ' =' → logprob: -1.7014169692993164
    3. ',' → logprob: -13.326416969299316
    4. '=line' → logprob: -14.326416969299316
    5. ' ' → logprob: -15.326416969299316
    6. '   ' → logprob: -15.451416969299316
    7. '=int' → logprob: -15.576416969299316
    8. '       ' → logprob: -15.701416969299316
    9. '    ' → logprob: -15.701416969299316
    10. '=
' → logprob: -16.451416015625

Token 2944: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.39171546697616577
    2. 'map' → logprob: -1.1417155265808105
    3. 'line' → logprob: -6.0167155265808105
    4. ' line' → logprob: -6.3917155265808105
    5. ' [' → logprob: -8.641715049743652
    6. '[line' → logprob: -8.766715049743652
    7. '[' → logprob: -9.016715049743652
    8. '[int' → logprob: -9.141715049743652
    9. 'int' → logprob: -9.266715049743652
    10. '(map' → logprob: -10.766715049743652

Token 2945: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0719604343175888
    2. '(str' → logprob: -2.82196044921875
    3. '(lambda' → logprob: -5.19696044921875
    4. 'int' → logprob: -5.82196044921875
    5. 'str' → logprob: -7.07196044921875
    6. '[int' → logprob: -8.07196044921875
    7. '(' → logprob: -8.94696044921875
    8. 'lambda' → logprob: -9.07196044921875
    9. '[str' → logprob: -11.07196044921875
    10. '()' → logprob: -11.69696044921875

Token 2946: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.011347719468176365
    2. 'line' → logprob: -5.136347770690918
    3. ')' → logprob: -6.136347770690918
    4. '=line' → logprob: -6.636347770690918
    5. '[line' → logprob: -6.761347770690918
    6. '(' → logprob: -8.011347770690918
    7. '#line' → logprob: -8.511347770690918
    8. ' line' → logprob: -8.761347770690918
    9. ',line' → logprob: -10.886347770690918
    10. ',' → logprob: -11.011347770690918

Token 2947: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00012356207298580557
    2. ' line' → logprob: -9.000123977661133
    3. '(line' → logprob: -17.500123977661133
    4. 'str' → logprob: -18.125123977661133
    5. '[line' → logprob: -19.000123977661133
    6. '   ' → logprob: -19.500123977661133
    7. '=line' → logprob: -19.500123977661133
    8. '           ' → logprob: -19.625123977661133
    9. 'input' → logprob: -19.750123977661133
    10. '	line' → logprob: -20.000123977661133

Token 2948: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.006889777258038521
    2. '.strip' → logprob: -6.131889820098877
    3. '().' → logprob: -6.256889820098877
    4. '.readline' → logprob: -7.006889820098877
    5. '.' → logprob: -7.131889820098877
    6. ' .' → logprob: -8.006889343261719
    7. 'split' → logprob: -8.381889343261719
    8. '   ' → logprob: -9.006889343261719
    9. '(split' → logprob: -9.631889343261719
    10. '[' → logprob: -9.756889343261719

Token 2949: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015177739784121513
    2. '()' → logprob: -4.7651777267456055
    3. '('' → logprob: -5.5151777267456055
    4. '())
' → logprob: -6.1401777267456055
    5. ')' → logprob: -8.140177726745605
    6. '()[' → logprob: -10.515177726745605
    7. '(' → logprob: -10.890177726745605
    8. '()
' → logprob: -11.140177726745605
    9. '()]' → logprob: -13.640177726745605
    10. '());' → logprob: -13.640177726745605

Token 2950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006718571297824383
    2. 'pages' → logprob: -5.131718635559082
    3. '```' → logprob: -7.756718635559082
    4. '   ' → logprob: -8.256718635559082
    5. ' pages' → logprob: -10.006718635559082
    6. '        
' → logprob: -10.756718635559082
    7. 'web' → logprob: -11.381718635559082
    8. 'page' → logprob: -12.381718635559082
    9. 'for' → logprob: -12.506718635559082
    10. '``' → logprob: -12.881718635559082

Token 2951: ' web' (ID: 1880)
  Prédit: 'pages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pages' → logprob: -0.013037511147558689
    2. '       ' → logprob: -4.38803768157959
    3. 'web' (adapté à ' web') → logprob: -7.76303768157959
    4. ' pages' → logprob: -9.51303768157959
    5. '   ' → logprob: -11.51303768157959
    6. 'page' → logprob: -11.76303768157959
    7. '```' → logprob: -12.76303768157959
    8. 'raw' → logprob: -12.88803768157959
    9. '_pages' → logprob: -13.88803768157959
    10. 'paths' → logprob: -14.38803768157959

Token 2952: '_pages' (ID: 52628)
  Prédit: '_pages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pages' → logprob: -0.013308928348124027
    2. 'pages' → logprob: -4.388309001922607
    3. '_paths' → logprob: -7.638309001922607
    4. '   ' → logprob: -9.01330852508545
    5. '_' → logprob: -10.01330852508545
    6. '_page' → logprob: -10.63830852508545
    7. 'Pages' → logprob: -10.76330852508545
    8. ' pages' → logprob: -10.88830852508545
    9. '_p' → logprob: -11.26330852508545
    10. '```' → logprob: -11.26330852508545

Token 2953: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12834963202476501
    2. '=' → logprob: -2.128349542617798
    3. '   ' → logprob: -7.628349781036377
    4. '       ' → logprob: -7.878349781036377
    5. '=[]' → logprob: -8.503349304199219
    6. '.append' → logprob: -8.628349304199219
    7. ',' → logprob: -10.628349304199219
    8. '=[]
' → logprob: -10.753349304199219
    9. '.' → logprob: -11.128349304199219
    10. '    ' → logprob: -11.253349304199219

Token 2954: ' []
' (ID: 8911)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014831667765974998
    2. ' input' → logprob: -4.51483154296875
    3. '[input' → logprob: -5.76483154296875
    4. '[]
' → logprob: -7.88983154296875
    5. '[]' → logprob: -8.26483154296875
    6. ' []
' → logprob: -12.13983154296875
    7. '   ' → logprob: -14.01483154296875
    8. ' []' → logprob: -14.38983154296875
    9. '[' → logprob: -14.38983154296875
    10. '<input' → logprob: -14.63983154296875

Token 2955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10101126879453659
    2. 'for' → logprob: -2.351011276245117
    3. ' for' → logprob: -7.601011276245117
    4. 'while' → logprob: -8.476011276245117
    5. '   ' → logprob: -9.976011276245117
    6. '	for' → logprob: -10.476011276245117
    7. '```' → logprob: -11.851011276245117
    8. '	' → logprob: -12.226011276245117
    9. '           ' → logprob: -12.476011276245117
    10. '<|end|>' → logprob: -13.101011276245117

Token 2956: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00036037206882610917
    2. '       ' → logprob: -8.000360488891602
    3. ' for' → logprob: -11.375360488891602
    4. 'while' → logprob: -11.375360488891602
    5. '	for' → logprob: -13.500360488891602
    6. '   ' → logprob: -14.625360488891602
    7. '           ' → logprob: -16.2503604888916
    8. '```' → logprob: -17.6253604888916
    9. '
' → logprob: -17.7503604888916
    10. '        
' → logprob: -18.5003604888916

Token 2957: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00219557574018836
    2. '_i' → logprob: -6.252195358276367
    3. '_in' → logprob: -8.627195358276367
    4. '_next' → logprob: -11.627195358276367
    5. '_j' → logprob: -12.002195358276367
    6. '_token' → logprob: -12.002195358276367
    7. '_step' → logprob: -12.252195358276367
    8. '_iter' → logprob: -12.752195358276367
    9. '_page' → logprob: -13.002195358276367
    10. '_tokens' → logprob: -13.127195358276367

Token 2958: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005267907399684191
    2. 'in' → logprob: -5.255268096923828
    3. 'i' → logprob: -10.380268096923828
    4. '_' → logprob: -13.255268096923828
    5. '_in' → logprob: -14.255268096923828
    6. ' ' → logprob: -15.255268096923828
    7. ' _' → logprob: -15.755268096923828
    8. 'range' → logprob: -16.255268096923828
    9. ' i' → logprob: -16.380268096923828
    10. '_i' → logprob: -16.630268096923828

Token 2959: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.841743303695694e-05
    2. ' range' → logprob: -9.62509822845459
    3. '_' → logprob: -10.87509822845459
    4. '_range' → logprob: -11.37509822845459
    5. '   ' → logprob: -13.50009822845459
    6. 'in' → logprob: -15.75009822845459
    7. '0' → logprob: -16.000099182128906
    8. 'r' → logprob: -16.250099182128906
    9. '_in' → logprob: -16.625099182128906
    10. '_r' → logprob: -17.250099182128906

Token 2960: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00012749579036608338
    2. '(N' → logprob: -9.000127792358398
    3. ' N' → logprob: -12.500127792358398
    4. 'M' → logprob: -16.1251277923584
    5. '   ' → logprob: -16.1251277923584
    6. '	N' → logprob: -16.7501277923584
    7. '_N' → logprob: -16.8751277923584
    8. '       ' → logprob: -17.3751277923584
    9. '(M' → logprob: -19.1251277923584
    10. '0' → logprob: -19.1251277923584

Token 2961: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6999242901802063
    2. '           ' → logprob: -0.8249242901802063
    3. '       ' → logprob: -3.5749242305755615
    4. ':
' → logprob: -3.8249242305755615
    5. '):' → logprob: -5.324924468994141
    6. '   ' → logprob: -5.824924468994141
    7. ':' → logprob: -6.199924468994141
    8. '		' → logprob: -6.824924468994141
    9. '<|end|>' → logprob: -7.074924468994141
    10. ',' → logprob: -7.699924468994141

Token 2962: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001965627772733569
    2. '	       ' → logprob: -7.126965522766113
    3. '   ' → logprob: -7.376965522766113
    4. '		   ' → logprob: -8.501965522766113
    5. '    	   ' → logprob: -9.126965522766113
    6. '		' → logprob: -9.626965522766113
    7. '	   ' → logprob: -10.001965522766113
    8. 'web' → logprob: -10.126965522766113
    9. '		           ' → logprob: -10.876965522766113
    10. '	           ' → logprob: -11.251965522766113

Token 2963: ' web' (ID: 1880)
  Prédit: 'web'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'web' (adapté à ' web') → logprob: -0.0026541322004050016
    2. 'raw' → logprob: -6.002654075622559
    3. '	web' → logprob: -9.752654075622559
    4. ' web' → logprob: -10.002654075622559
    5. '           ' → logprob: -10.252654075622559
    6. 'line' → logprob: -11.252654075622559
    7. '               ' → logprob: -11.377654075622559
    8. '   ' → logprob: -11.627654075622559
    9. ' raw' → logprob: -13.252654075622559
    10. 'pages' → logprob: -13.627654075622559

Token 2964: '_pages' (ID: 52628)
  Prédit: '_pages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pages' → logprob: -0.00016432604752480984
    2. '_page' → logprob: -8.875164031982422
    3. 'page' → logprob: -11.750164031982422
    4. '_lines' → logprob: -12.125164031982422
    5. '_path' → logprob: -12.875164031982422
    6. '_p' → logprob: -12.875164031982422
    7. '_pag' → logprob: -13.500164031982422
    8. 'pages' → logprob: -13.625164031982422
    9. '_' → logprob: -14.125164031982422
    10. '_paths' → logprob: -14.375164031982422

Token 2965: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.4034345187828876e-05
    2. '.' → logprob: -11.62502384185791
    3. 'append' → logprob: -11.75002384185791
    4. '           ' → logprob: -12.62502384185791
    5. '+=' → logprob: -13.62502384185791
    6. ' .' → logprob: -14.37502384185791
    7. '_line' → logprob: -14.62502384185791
    8. ' +=' → logprob: -14.62502384185791
    9. '.extend' → logprob: -14.87502384185791
    10. '.readline' → logprob: -15.62502384185791

Token 2966: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -8.180258191714529e-06
    2. ' input' → logprob: -11.750008583068848
    3. '           ' → logprob: -15.875008583068848
    4. '(input' → logprob: -17.37500762939453
    5. '               ' → logprob: -17.62500762939453
    6. '                   ' → logprob: -18.75000762939453
    7. '   ' → logprob: -18.87500762939453
    8. '<input' → logprob: -20.37500762939453
    9. 'sys' → logprob: -20.62500762939453
    10. '	input' → logprob: -21.25000762939453

Token 2967: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.005229494534432888
    2. '()' → logprob: -6.380229473114014
    3. '()[' → logprob: -6.630229473114014
    4. '())' → logprob: -7.130229473114014
    5. '_segments' → logprob: -7.880229473114014
    6. '```' → logprob: -8.630229949951172
    7. '())
' → logprob: -9.005229949951172
    8. '()
' → logprob: -9.130229949951172
    9. '_line' → logprob: -9.130229949951172
    10. '_paths' → logprob: -9.255229949951172

Token 2968: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0011722482740879059
    2. 'idx' → logprob: -6.751172065734863
    3. '
' → logprob: -14.501172065734863
    4. '   ' → logprob: -14.626172065734863
    5. '       ' → logprob: -15.126172065734863
    6. ' idx' → logprob: -15.251172065734863
    7. '	idx' → logprob: -15.251172065734863
    8. '```' → logprob: -15.501172065734863
    9. '           ' → logprob: -17.25117301940918
    10. '                   ' → logprob: -17.50117301940918

Token 2969: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05567740276455879
    2. '[idx' → logprob: -3.6806774139404297
    3. '])' → logprob: -3.6806774139404297
    4. '])
' → logprob: -5.80567741394043
    5. 'idx' → logprob: -8.68067741394043
    6. '.strip' → logprob: -8.93067741394043
    7. ']' → logprob: -9.05567741394043
    8. '][' → logprob: -9.43067741394043
    9. '(idx' → logprob: -9.68067741394043
    10. '           ' → logprob: -10.43067741394043

Token 2970: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0003368926409166306
    2. 'rstrip' → logprob: -8.000336647033691
    3. '_strip' → logprob: -14.375336647033691
    4. 'idx' → logprob: -14.500336647033691
    5. 'pop' → logprob: -15.625336647033691
    6. ' strip' → logprob: -16.125337600708008
    7. '.strip' → logprob: -17.500337600708008
    8. 'split' → logprob: -18.500337600708008
    9. '
' → logprob: -18.750337600708008
    10. '```' → logprob: -19.000337600708008

Token 2971: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.2205996960401535
    2. ')
' → logprob: -2.47059965133667
    3. '())' → logprob: -2.59559965133667
    4. ')' → logprob: -3.34559965133667
    5. '[idx' → logprob: -6.22059965133667
    6. '(idx' → logprob: -7.59559965133667
    7. '()' → logprob: -7.72059965133667
    8. '       ' → logprob: -8.470600128173828
    9. '()
' → logprob: -9.095600128173828
    10. '           ' → logprob: -9.220600128173828

Token 2972: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6226911544799805
    2. '       ' → logprob: -1.1226911544799805
    3. 'idx' → logprob: -1.9976911544799805
    4. '	       ' → logprob: -7.3726911544799805
    5. '	idx' → logprob: -7.4976911544799805
    6. '```' → logprob: -7.8726911544799805
    7. '   ' → logprob: -8.49769115447998
    8. '	   ' → logprob: -8.74769115447998
    9. '[idx' → logprob: -8.74769115447998
    10. '               ' → logprob: -9.74769115447998

Token 2973: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.00011009939044015482
    2. '           ' → logprob: -9.250109672546387
    3. '	idx' → logprob: -11.875109672546387
    4. '       ' → logprob: -12.750109672546387
    5. ' idx' → logprob: -13.375109672546387
    6. '```' → logprob: -14.000109672546387
    7. '_idx' → logprob: -14.250109672546387
    8. '[idx' → logprob: -15.250109672546387
    9. '   ' → logprob: -15.875109672546387
    10. '		' → logprob: -16.375110626220703

Token 2974: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0001907855912577361
    2. ' +=' → logprob: -9.250190734863281
    3. '```' → logprob: -9.875190734863281
    4. ']+=' → logprob: -11.000190734863281
    5. 'idx' → logprob: -11.125190734863281
    6. '=' → logprob: -12.375190734863281
    7. '++' → logprob: -12.875190734863281
    8. '[idx' → logprob: -13.375190734863281
    9. '+' → logprob: -13.875190734863281
    10. '==' → logprob: -14.750190734863281

Token 2975: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -21.875
    4. '
' → logprob: -22.375
    5. '```' → logprob: -22.75
    6. '１' → logprob: -22.875
    7. '+' → logprob: -22.875
    8. '۱' → logprob: -23.75
    9. 'N' → logprob: -24.75
    10. '(' → logprob: -24.875

Token 2976: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '１' → logprob: -22.25
    4. '```' → logprob: -22.625
    5. '   ' → logprob: -23.0
    6. '
' → logprob: -23.0
    7. '۱' → logprob: -24.125
    8. '#' → logprob: -24.5
    9. 'int' → logprob: -24.5
    10. '+' → logprob: -24.625

Token 2977: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2352385965641588e-05
    2. 'for' → logprob: -12.875012397766113
    3. '```' → logprob: -12.875012397766113
    4. '
' → logprob: -13.125012397766113
    5. '        
' → logprob: -13.500012397766113
    6. '   ' → logprob: -13.500012397766113
    7. 'queries' → logprob: -14.375012397766113
    8. 'query' → logprob: -14.500012397766113
    9. 's' → logprob: -14.625012397766113
    10. '           ' → logprob: -14.875012397766113

Token 2978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022692051716148853
    2. 'queries' → logprob: -6.752269268035889
    3. '```' → logprob: -8.12726879119873
    4. 'for' → logprob: -8.37726879119873
    5. '           ' → logprob: -8.50226879119873
    6. 'query' → logprob: -8.62726879119873
    7. '   ' → logprob: -9.50226879119873
    8. '
' → logprob: -10.50226879119873
    9. 'M' → logprob: -10.75226879119873
    10. '``' → logprob: -10.87726879119873

Token 2979: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' (adapté à ' queries') → logprob: -0.09540779143571854
    2. 'query' → logprob: -3.345407724380493
    3. '       ' → logprob: -3.845407724380493
    4. 'path' → logprob: -3.970407724380493
    5. 'agent' → logprob: -5.095407962799072
    6. 'module' → logprob: -5.220407962799072
    7. '   ' → logprob: -6.345407962799072
    8. 'paths' → logprob: -7.970407962799072
    9. 'q' → logprob: -8.095407485961914
    10. ' queries' → logprob: -8.720407485961914

Token 2980: '_raw' (ID: 36128)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43228310346603394
    2. '=' → logprob: -1.0572831630706787
    3. '=[]' → logprob: -6.1822829246521
    4. '       ' → logprob: -7.4322829246521
    5. '   ' → logprob: -7.9322829246521
    6. '=[]
' → logprob: -8.057283401489258
    7. 'for' → logprob: -9.932283401489258
    8. '.append' → logprob: -10.182283401489258
    9. '=
' → logprob: -10.432283401489258
    10. '.' → logprob: -11.182283401489258

Token 2981: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1609523445367813
    2. ' =' → logprob: -1.9109523296356201
    3. '   ' → logprob: -7.910952568054199
    4. '       ' → logprob: -8.5359525680542
    5. '.append' → logprob: -9.6609525680542
    6. '=[]
' → logprob: -10.2859525680542
    7. '_lines' → logprob: -10.9109525680542
    8. '=[]' → logprob: -11.4109525680542
    9. 'for' → logprob: -12.1609525680542
    10. '           ' → logprob: -12.1609525680542

Token 2982: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.016826480627059937
    2. '[input' → logprob: -4.516826629638672
    3. 'input' → logprob: -5.266826629638672
    4. '[]' → logprob: -7.516826629638672
    5. ' []
' → logprob: -10.266826629638672
    6. '[' → logprob: -11.391826629638672
    7. '[]

' → logprob: -11.766826629638672
    8. '[
' → logprob: -12.641826629638672
    9. ' input' → logprob: -14.891826629638672
    10. '   ' → logprob: -15.016826629638672

Token 2983: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06271138042211533
    2. 'for' → logprob: -2.812711477279663
    3. ' for' → logprob: -7.437711238861084
    4. '           ' → logprob: -9.062711715698242
    5. '```' → logprob: -11.187711715698242
    6. '   ' → logprob: -11.437711715698242
    7. '	for' → logprob: -11.937711715698242
    8. '	' → logprob: -12.937711715698242
    9. '[' → logprob: -13.062711715698242
    10. '               ' → logprob: -14.062711715698242

Token 2984: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011798698687925935
    2. '       ' → logprob: -6.7511796951293945
    3. ' for' → logprob: -11.751179695129395
    4. '```' → logprob: -14.126179695129395
    5. '   ' → logprob: -14.751179695129395
    6. '	for' → logprob: -14.876179695129395
    7. 'queries' → logprob: -16.12618064880371
    8. '           ' → logprob: -16.25118064880371
    9. '``' → logprob: -17.12618064880371
    10. '
' → logprob: -17.62618064880371

Token 2985: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00011093381908722222
    2. ' _' → logprob: -9.125110626220703
    3. '_i' → logprob: -14.250110626220703
    4. '_
' → logprob: -14.750110626220703
    5. '_j' → logprob: -15.625110626220703
    6. '_in' → logprob: -15.625110626220703
    7. 'i' → logprob: -15.875110626220703
    8. '_=' → logprob: -16.500110626220703
    9. '
' → logprob: -16.625110626220703
    10. ' in' → logprob: -17.125110626220703

Token 2986: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00030304977553896606
    2. ' in' → logprob: -8.125303268432617
    3. ' _' → logprob: -12.500303268432617
    4. '_in' → logprob: -13.500303268432617
    5. 'in' → logprob: -14.375303268432617
    6. '_
' → logprob: -14.625303268432617
    7. 'In' → logprob: -15.875303268432617
    8. '_range' → logprob: -16.125303268432617
    9. '_=' → logprob: -16.125303268432617
    10. 'i' → logprob: -16.375303268432617

Token 2987: ' range' (ID: 3352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3081469237804413
    2. 'range' → logprob: -1.8081469535827637
    3. ' range' → logprob: -2.3081469535827637
    4. ' in' → logprob: -7.058146953582764
    5. '_range' → logprob: -7.058146953582764
    6. 'in' → logprob: -10.058146476745605
    7. '_in' → logprob: -11.308146476745605
    8. '(range' → logprob: -11.683146476745605
    9. '	range' → logprob: -13.183146476745605
    10. ' _' → logprob: -13.433146476745605

Token 2988: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00024989593657664955
    2. '(M' → logprob: -8.625249862670898
    3. ' M' → logprob: -9.625249862670898
    4. '   ' → logprob: -13.250249862670898
    5. '_M' → logprob: -13.500249862670898
    6. '           ' → logprob: -15.125249862670898
    7. '       ' → logprob: -15.250249862670898
    8. ' ' → logprob: -15.750249862670898
    9. '                   ' → logprob: -16.0002498626709
    10. '               ' → logprob: -16.3752498626709

Token 2989: '*' (ID: 9)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5047959089279175
    2. '           ' → logprob: -1.6297959089279175
    3. '):
' → logprob: -1.8797959089279175
    4. '       ' → logprob: -3.379796028137207
    5. '   ' → logprob: -5.629796028137207
    6. ':' → logprob: -5.629796028137207
    7. '():
' → logprob: -5.879796028137207
    8. ',' → logprob: -7.504796028137207
    9. '):' → logprob: -7.504796028137207
    10. '               ' → logprob: -7.879796028137207

Token 2990: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.049995727837085724
    2. '2' → logprob: -4.7999958992004395
    3. '   ' → logprob: -4.7999958992004395
    4. ' ' → logprob: -5.0499958992004395
    5. '           ' → logprob: -5.1749958992004395
    6. '):
' → logprob: -5.4249958992004395
    7. '       ' → logprob: -5.6749958992004395
    8. ')' → logprob: -5.9249958992004395
    9. 'int' → logprob: -5.9249958992004395
    10. ',' → logprob: -6.9249958992004395

Token 2991: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20341789722442627
    2. '):
' → logprob: -2.3284177780151367
    3. '           ' → logprob: -3.0784177780151367
    4. '       ' → logprob: -3.3284177780151367
    5. ':' → logprob: -5.953417778015137
    6. '   ' → logprob: -6.953417778015137
    7. ',' → logprob: -8.328417778015137
    8. '):' → logprob: -8.578417778015137
    9. '.' → logprob: -9.453417778015137
    10. '():
' → logprob: -9.453417778015137

Token 2992: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002682496269699186
    2. '   ' → logprob: -8.50026798248291
    3. 'queries' → logprob: -10.37526798248291
    4. '       ' → logprob: -11.62526798248291
    5. '               ' → logprob: -12.12526798248291
    6. '	       ' → logprob: -12.25026798248291
    7. '                   ' → logprob: -12.62526798248291
    8. ' queries' → logprob: -13.50026798248291
    9. '<|end|>' → logprob: -13.50026798248291
    10. '         ' → logprob: -13.87526798248291

Token 2993: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' (adapté à ' queries') → logprob: -0.0014902232214808464
    2. '           ' → logprob: -6.626490116119385
    3. '               ' → logprob: -9.501490592956543
    4. ' queries' → logprob: -9.876490592956543
    5. 'query' → logprob: -10.876490592956543
    6. '   ' → logprob: -11.501490592956543
    7. '       ' → logprob: -12.251490592956543
    8. '_queries' → logprob: -13.251490592956543
    9. ' ' → logprob: -14.376490592956543
    10. 'questions' → logprob: -14.501490592956543

Token 2994: '_raw' (ID: 36128)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013246455928310752
    2. '_raw' → logprob: -6.876324653625488
    3. '_queries' → logprob: -9.376324653625488
    4. '=' → logprob: -10.001324653625488
    5. '.' → logprob: -10.251324653625488
    6. '_line' → logprob: -10.751324653625488
    7. ' =' → logprob: -11.001324653625488
    8. '   ' → logprob: -11.126324653625488
    9. '_lines' → logprob: -11.251324653625488
    10. 'queries' → logprob: -11.376324653625488

Token 2995: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010153028415516019
    2. '.' → logprob: -7.0010151863098145
    3. '           ' → logprob: -10.251015663146973
    4. ' .' → logprob: -10.751015663146973
    5. '=' → logprob: -11.501015663146973
    6. 'queries' → logprob: -11.501015663146973
    7. 'append' → logprob: -11.751015663146973
    8. '+=' → logprob: -12.501015663146973
    9. '       ' → logprob: -12.751015663146973
    10. ' =' → logprob: -13.001015663146973

Token 2996: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.008129963040119e-06
    2. ' input' → logprob: -12.500003814697266
    3. '(input' → logprob: -15.500003814697266
    4. '           ' → logprob: -17.125003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '<input' → logprob: -19.000003814697266
    7. 'inputs' → logprob: -20.000003814697266
    8. '	input' → logprob: -20.125003814697266
    9. '       ' → logprob: -20.875003814697266
    10. '               ' → logprob: -21.125003814697266

Token 2997: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0010834212880581617
    2. '[idx' → logprob: -7.6260833740234375
    3. '()[' → logprob: -8.001083374023438
    4. '()' → logprob: -9.376083374023438
    5. '[' → logprob: -10.626083374023438
    6. ')' → logprob: -10.626083374023438
    7. '_LINES' → logprob: -11.251083374023438
    8. 'Lines' → logprob: -11.501083374023438
    9. '_raw' → logprob: -11.751083374023438
    10. '())' → logprob: -11.876083374023438

Token 2998: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.2200749754119897e-06
    2. 'idx' → logprob: -13.375001907348633
    3. '```' → logprob: -15.250001907348633
    4. '
' → logprob: -15.500001907348633
    5. '   ' → logprob: -16.625001907348633
    6. ')[' → logprob: -17.250001907348633
    7. '(idx' → logprob: -17.375001907348633
    8. ' idx' → logprob: -17.875001907348633
    9. '[
' → logprob: -18.125001907348633
    10. '	idx' → logprob: -18.125001907348633

Token 2999: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5019606947898865
    2. '[idx' → logprob: -1.3769607543945312
    3. '.strip' → logprob: -2.0019607543945312
    4. '])' → logprob: -6.376960754394531
    5. ']' → logprob: -6.501960754394531
    6. '.readline' → logprob: -7.376960754394531
    7. ').' → logprob: -7.626960754394531
    8. '.' → logprob: -7.751960754394531
    9. '[' → logprob: -8.001960754394531
    10. ')' → logprob: -8.126960754394531

Token 3000: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.1637164789135568e-05
    2. 'rstrip' → logprob: -11.375011444091797
    3. ' strip' → logprob: -16.250011444091797
    4. '_strip' → logprob: -17.750011444091797
    5. '.strip' → logprob: -17.875011444091797
    6. 'split' → logprob: -19.625011444091797
    7. '(strip' → logprob: -19.625011444091797
    8. 'read' → logprob: -20.500011444091797
    9. '-strip' → logprob: -20.750011444091797
    10. 'Strip' → logprob: -20.875011444091797

Token 3001: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7228201031684875
    2. ')' → logprob: -1.0978200435638428
    3. '())
' → logprob: -1.8478200435638428
    4. ')
' → logprob: -3.9728200435638428
    5. '()' → logprob: -5.597820281982422
    6. '           ' → logprob: -7.597820281982422
    7. '()
' → logprob: -8.722820281982422
    8. '       ' → logprob: -9.097820281982422
    9. '```' → logprob: -10.472820281982422
    10. '   ' → logprob: -10.722820281982422

Token 3002: '           ' (ID: 352)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03838777169585228
    2. '           ' → logprob: -3.4133877754211426
    3. '       ' → logprob: -5.788387775421143
    4. '```' → logprob: -7.413387775421143
    5. '	idx' → logprob: -7.788387775421143
    6. '   ' → logprob: -8.413387298583984
    7. '[idx' → logprob: -8.788387298583984
    8. ' idx' → logprob: -8.788387298583984
    9. '_idx' → logprob: -11.038387298583984
    10. '(idx' → logprob: -11.038387298583984

Token 3003: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -3.8889261304575484e-06
    2. '           ' → logprob: -12.750003814697266
    3. '       ' → logprob: -14.625003814697266
    4. ' idx' → logprob: -15.125003814697266
    5. '	idx' → logprob: -15.875003814697266
    6. '_idx' → logprob: -16.875003814697266
    7. '
' → logprob: -17.625003814697266
    8. '```' → logprob: -18.000003814697266
    9. '[idx' → logprob: -18.250003814697266
    10. '               ' → logprob: -18.750003814697266

Token 3004: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0006377388490363955
    2. ' +=' → logprob: -7.500637531280518
    3. '```' → logprob: -10.000638008117676
    4. ']+=' → logprob: -11.000638008117676
    5. '           ' → logprob: -11.625638008117676
    6. '=' → logprob: -11.875638008117676
    7. '==' → logprob: -13.250638008117676
    8. '       ' → logprob: -13.625638008117676
    9. '   ' → logprob: -14.375638008117676
    10. '#' → logprob: -14.375638008117676

Token 3005: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '2' → logprob: -16.375009536743164
    4. '   ' → logprob: -16.625009536743164
    5. '```' → logprob: -16.750009536743164
    6. '
' → logprob: -18.125009536743164
    7. '           ' → logprob: -19.500009536743164
    8. '       ' → logprob: -20.250009536743164
    9. '１' → logprob: -20.750009536743164
    10. '``' → logprob: -20.937509536743164

Token 3006: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '2' → logprob: -19.25
    4. '   ' → logprob: -19.625
    5. '
' → logprob: -20.0
    6. '```' → logprob: -20.5
    7. '           ' → logprob: -20.75
    8. '１' → logprob: -21.375
    9. '       ' → logprob: -22.3125
    10. '0' → logprob: -22.3125

Token 3007: '
' (ID: 198)
  Prédit: 'agent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'agent' → logprob: -0.8552557826042175
    2. 'pf' → logprob: -1.3552558422088623
    3. '   ' → logprob: -1.6052558422088623
    4. 'module' → logprob: -2.8552558422088623
    5. 'mod' → logprob: -3.6052558422088623
    6. 'pm' → logprob: -4.980255603790283
    7. '       ' → logprob: -5.355255603790283
    8. 'pam' → logprob: -5.480255603790283
    9. 'p' → logprob: -5.730255603790283
    10. 'software' → logprob: -6.105255603790283

Token 3008: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7485044002532959
    2. 'agent' → logprob: -0.7485044002532959
    3. 'pf' → logprob: -4.248504638671875
    4. 'pm' → logprob: -4.623504638671875
    5. 'module' → logprob: -4.623504638671875
    6. 'software' → logprob: -5.498504638671875
    7. 'path' → logprob: -5.748504638671875
    8. 'mod' → logprob: -5.748504638671875
    9. 'p' → logprob: -5.998504638671875
    10. '       ' → logprob: -6.873504638671875

Token 3009: ' software' (ID: 4305)
  Prédit: 'agent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agent' → logprob: -0.6746121644973755
    2. '   ' → logprob: -1.2996121644973755
    3. 'pf' → logprob: -2.049612045288086
    4. 'module' → logprob: -3.674612045288086
    5. 'mod' → logprob: -4.049612045288086
    6. 'software' (adapté à ' software') → logprob: -4.549612045288086
    7. 'p' → logprob: -4.799612045288086
    8. 'pm' → logprob: -5.049612045288086
    9. 'fsm' → logprob: -5.799612045288086
    10. 'solver' → logprob: -5.799612045288086

Token 3010: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5315651297569275
    2. '   ' → logprob: -1.6565651893615723
    3. '_module' → logprob: -2.0315651893615723
    4. 'Module' → logprob: -3.2815651893615723
    5. '=' → logprob: -3.6565651893615723
    6. '       ' → logprob: -4.406565189361572
    7. '.' → logprob: -6.031565189361572
    8. '().' → logprob: -6.156565189361572
    9. '```' → logprob: -6.656565189361572
    10. '_agent' → logprob: -7.031565189361572

Token 3011: ' Pathfinder' (ID: 190091)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -8.895480277715251e-06
    2. ' Pathfinder' → logprob: -11.750008583068848
    3. ' Path' → logprob: -13.875008583068848
    4. 'path' → logprob: -17.500009536743164
    5. '@Path' → logprob: -17.500009536743164
    6. 'Pat' → logprob: -17.625009536743164
    7. '	Path' → logprob: -18.375009536743164
    8. '_Path' → logprob: -19.000009536743164
    9. '   ' → logprob: -19.250009536743164
    10. '<Path' → logprob: -19.875009536743164

Token 3012: 'Agent' (ID: 18086)
  Prédit: 'Agent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Agent' → logprob: -0.00019662656995933503
    2. 'A' → logprob: -8.75019645690918
    3. 'Software' → logprob: -11.25019645690918
    4. 'software' → logprob: -11.75019645690918
    5. 'agent' → logprob: -12.25019645690918
    6. 'Ag' → logprob: -13.00019645690918
    7. '_agent' → logprob: -13.25019645690918
    8. 'Module' → logprob: -13.62519645690918
    9. ' Agent' → logprob: -13.62519645690918
    10. 'Agents' → logprob: -13.75019645690918

Token 3013: 'Software' (ID: 32140)
  Prédit: 'Software'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Software' → logprob: -3.011373155459296e-05
    2. 'software' → logprob: -11.375030517578125
    3. ' software' → logprob: -12.000030517578125
    4. 'S' → logprob: -12.125030517578125
    5. ' Software' → logprob: -12.875030517578125
    6. 'Soft' → logprob: -13.375030517578125
    7. '(' → logprob: -14.375030517578125
    8. 'Module' → logprob: -14.500030517578125
    9. 'So' → logprob: -15.000030517578125
    10. '```' → logprob: -15.250030517578125

Token 3014: 'Module' (ID: 5300)
  Prédit: 'Module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Module' → logprob: -1.688212614681106e-05
    2. 'module' → logprob: -12.000017166137695
    3. 'Software' → logprob: -12.625017166137695
    4. 'Mod' → logprob: -12.625017166137695
    5. 'M' → logprob: -14.000017166137695
    6. '   ' → logprob: -14.750017166137695
    7. 'Mo' → logprob: -14.875017166137695
    8. '_Module' → logprob: -14.875017166137695
    9. 'Modules' → logprob: -15.000017166137695
    10. ' Module' → logprob: -15.125017166137695

Token 3015: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05024062469601631
    2. 'for' → logprob: -3.1752405166625977
    3. '   ' → logprob: -5.425240516662598
    4. ' for' → logprob: -6.675240516662598
    5. '<|end|>' → logprob: -6.925240516662598
    6. '
' → logprob: -8.675240516662598
    7. '        
' → logprob: -9.050240516662598
    8. 'def' → logprob: -9.550240516662598
    9. '	for' → logprob: -9.675240516662598
    10. '```' → logprob: -10.800240516662598

Token 3016: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5779550671577454
    2. '       ' → logprob: -0.8279550671577454
    3. 'software' → logprob: -6.57795524597168
    4. '   ' → logprob: -7.95295524597168
    5. ' for' → logprob: -8.70295524597168
    6. '```' → logprob: -9.32795524597168
    7. '
' → logprob: -12.70295524597168
    8. '``' → logprob: -12.95295524597168
    9. '	for' → logprob: -13.07795524597168
    10. '           ' → logprob: -13.07795524597168

Token 3017: ' software' (ID: 4305)
  Prédit: 'software'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'software' (adapté à ' software') → logprob: -0.0003989720717072487
    2. 'for' → logprob: -7.875399112701416
    3. '       ' → logprob: -11.125398635864258
    4. '   ' → logprob: -12.625398635864258
    5. 'web' → logprob: -15.375398635864258
    6. ' software' → logprob: -15.375398635864258
    7. '
' → logprob: -15.625398635864258
    8. '           ' → logprob: -16.500398635864258
    9. 'soft' → logprob: -16.625398635864258
    10. '```' → logprob: -16.750398635864258

Token 3018: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.531315314830863e-06
    2. '.' → logprob: -13.125003814697266
    3. 'add' → logprob: -14.875003814697266
    4. '   ' → logprob: -15.125003814697266
    5. ').' → logprob: -15.375003814697266
    6. '>.' → logprob: -15.875003814697266
    7. ')add' → logprob: -16.250003814697266
    8. '       ' → logprob: -16.875003814697266
    9. '].' → logprob: -17.000003814697266
    10. '.setdefault' → logprob: -17.125003814697266

Token 3019: '_web' (ID: 54968)
  Prédit: '_web'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_web' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -14.12500286102295
    3. '
' → logprob: -14.62500286102295
    4. '_w' → logprob: -14.75000286102295
    5. '_we' → logprob: -14.87500286102295
    6. '_pages' → logprob: -15.50000286102295
    7. '_page' → logprob: -15.75000286102295
    8. '\web' → logprob: -16.250003814697266
    9. '\' → logprob: -16.375003814697266
    10. 'web' → logprob: -16.500003814697266

Token 3020: '_pages' (ID: 52628)
  Prédit: '_pages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pages' → logprob: -6.704273118884885e-07
    2. 'pages' → logprob: -14.875000953674316
    3. '_page' → logprob: -16.125
    4. '_web' → logprob: -16.25
    5. '_paths' → logprob: -17.25
    6. '```' → logprob: -17.875
    7. '_p' → logprob: -18.5
    8. '_' → logprob: -18.75
    9. '_lines' → logprob: -18.875
    10. '_files' → logprob: -19.25

Token 3021: '(web' (ID: 72196)
  Prédit: '(web'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(web' → logprob: -0.0002619318547658622
    2. 'web' → logprob: -8.250262260437012
    3. '(' → logprob: -14.250262260437012
    4. ' web' → logprob: -17.125261306762695
    5. '	web' → logprob: -17.125261306762695
    6. '\web' → logprob: -18.500261306762695
    7. '(w' → logprob: -18.875261306762695
    8. '       ' → logprob: -20.125261306762695
    9. '   ' → logprob: -20.125261306762695
    10. ' (' → logprob: -21.625261306762695

Token 3022: '_pages' (ID: 52628)
  Prédit: '_pages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pages' → logprob: -0.00018041854491457343
    2. 'pages' → logprob: -8.7501802444458
    3. '```' → logprob: -11.6251802444458
    4. '_paths' → logprob: -12.8751802444458
    5. 'ages' → logprob: -13.2501802444458
    6. 'Pages' → logprob: -13.3751802444458
    7. '   ' → logprob: -13.5001802444458
    8. ')' → logprob: -13.7501802444458
    9. '_lines' → logprob: -14.7501802444458
    10. '       ' → logprob: -15.2501802444458

Token 3023: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007578118238598108
    2. 'for' → logprob: -7.875757694244385
    3. '
' → logprob: -8.375758171081543
    4. ' for' → logprob: -10.000758171081543
    5. ')' → logprob: -10.375758171081543
    6. '        
' → logprob: -10.750758171081543
    7. '<|end|>' → logprob: -10.750758171081543
    8. ')
' → logprob: -11.500758171081543
    9. '   ' → logprob: -12.250758171081543
    10. ',' → logprob: -12.500758171081543

Token 3024: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030953913927078247
    2. 'for' → logprob: -3.530953884124756
    3. '   ' → logprob: -7.030953884124756
    4. '```' → logprob: -8.155954360961914
    5. ' for' → logprob: -10.655954360961914
    6. '
' → logprob: -11.905954360961914
    7. '``' → logprob: -14.405954360961914
    8. '	for' → logprob: -14.905954360961914
    9. '        
' → logprob: -16.155954360961914
    10. '           ' → logprob: -16.530954360961914

Token 3025: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.9875325708417222e-05
    2. '       ' → logprob: -10.500029563903809
    3. ' for' → logprob: -13.500029563903809
    4. 'print' → logprob: -14.750029563903809
    5. '   ' → logprob: -15.750029563903809
    6. 'results' → logprob: -16.125030517578125
    7. '```' → logprob: -16.250030517578125
    8. 'output' → logprob: -16.750030517578125
    9. '	for' → logprob: -17.000030517578125
    10. '
' → logprob: -17.500030517578125

Token 3026: ' q' (ID: 2335)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5314693450927734
    2. ' i' → logprob: -1.6564693450927734
    3. 'q' → logprob: -1.7814693450927734
    4. ' q' → logprob: -3.0314693450927734
    5. 'query' → logprob: -6.156469345092773
    6. '_q' → logprob: -7.281469345092773
    7. ' query' → logprob: -7.906469345092773
    8. '_i' → logprob: -7.906469345092773
    9. '   ' → logprob: -8.281469345092773
    10. 'qi' → logprob: -8.406469345092773

Token 3027: '_i' (ID: 10853)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1435149908065796
    2. 'i' → logprob: -2.893515110015869
    3. '_i' → logprob: -2.893515110015869
    4. 'in' → logprob: -4.518515110015869
    5. '_idx' → logprob: -5.268515110015869
    6. ' i' → logprob: -5.518515110015869
    7. '_' → logprob: -6.143515110015869
    8. 'idx' → logprob: -8.518514633178711
    9. '_in' → logprob: -8.643514633178711
    10. '_index' → logprob: -9.143514633178711

Token 3028: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07294534146785736
    2. 'in' → logprob: -2.6979453563690186
    3. 'n' → logprob: -6.8229451179504395
    4. '   ' → logprob: -7.5729451179504395
    5. '       ' → logprob: -8.322945594787598
    6. '_' → logprob: -8.447945594787598
    7. 'dx' → logprob: -8.947945594787598
    8. 'nd' → logprob: -9.572945594787598
    9. 'x' → logprob: -9.697945594787598
    10. 'i' → logprob: -9.697945594787598

Token 3029: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25194549560546875
    2. ' range' → logprob: -1.5019454956054688
    3. ' in' → logprob: -11.626945495605469
    4. 'in' → logprob: -12.251945495605469
    5. '(range' → logprob: -13.501945495605469
    6. '	range' → logprob: -14.876945495605469
    7. ' ' → logprob: -15.376945495605469
    8. '   ' → logprob: -15.626945495605469
    9. 'queries' → logprob: -15.751945495605469
    10. '_range' → logprob: -15.876945495605469

Token 3030: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5287675857543945
    2. '0' → logprob: -1.2787675857543945
    3. '(' → logprob: -2.2787675857543945
    4. '(M' → logprob: -3.5287675857543945
    5. ' M' → logprob: -7.7787675857543945
    6. ' (' → logprob: -10.153767585754395
    7. '   ' → logprob: -11.028767585754395
    8. ' ' → logprob: -11.278767585754395
    9. '           ' → logprob: -11.403767585754395
    10. 'q' → logprob: -11.403767585754395

Token 3031: '):
' (ID: 1883)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07735003530979156
    2. '):
' → logprob: -2.82735013961792
    3. ' *' → logprob: -4.32735013961792
    4. '       ' → logprob: -7.32735013961792
    5. '<<' → logprob: -7.32735013961792
    6. '           ' → logprob: -7.82735013961792
    7. '   ' → logprob: -8.202349662780762
    8. '):' → logprob: -11.327349662780762
    9. ',' → logprob: -11.452349662780762
    10. '```' → logprob: -11.452349662780762

Token 3032: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033466797322034836
    2. '   ' → logprob: -3.9084668159484863
    3. '	       ' → logprob: -4.658466815948486
    4. '	   ' → logprob: -6.408466815948486
    5. '       ' → logprob: -7.033466815948486
    6. '		   ' → logprob: -8.158466339111328
    7. '    	   ' → logprob: -9.158466339111328
    8. '		' → logprob: -9.408466339111328
    9. '    	' → logprob: -9.908466339111328
    10. '	           ' → logprob: -10.408466339111328

Token 3033: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0026828988920897245
    2. '           ' → logprob: -6.127682685852051
    3. 'res' → logprob: -8.37768268585205
    4. ' p' → logprob: -9.75268268585205
    5. 'path' → logprob: -9.87768268585205
    6. 'print' → logprob: -10.50268268585205
    7. 'answer' → logprob: -10.75268268585205
    8. 'q' → logprob: -10.75268268585205
    9. 'a' → logprob: -10.87768268585205
    10. 'left' → logprob: -11.50268268585205

Token 3034: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00032235344406217337
    2. ' =' → logprob: -9.000322341918945
    3. 's' → logprob: -9.375322341918945
    4. 'r' → logprob: -10.250322341918945
    5. '=' → logprob: -10.250322341918945
    6. '_' → logprob: -11.250322341918945
    7. 'os' → logprob: -11.500322341918945
    8. 'airs' → logprob: -12.375322341918945
    9. '   ' → logprob: -12.625322341918945
    10. '       ' → logprob: -13.125322341918945

Token 3035: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03135129064321518
    2. '=' → logprob: -3.531351327896118
    3. ',' → logprob: -6.531351089477539
    4. ' =
' → logprob: -10.156351089477539
    5. '=
' → logprob: -10.781351089477539
    6. '           ' → logprob: -11.031351089477539
    7. ' ' → logprob: -11.531351089477539
    8. '    ' → logprob: -11.781351089477539
    9. '=query' → logprob: -11.781351089477539
    10. ')' → logprob: -12.281351089477539

Token 3036: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.000158842682139948
    2. ' queries' → logprob: -8.75015926361084
    3. 'questions' → logprob: -14.75015926361084
    4. 'query' → logprob: -17.750158309936523
    5. 'requests' → logprob: -17.875158309936523
    6. '           ' → logprob: -19.500158309936523
    7. 'answers' → logprob: -20.375158309936523
    8. 'quer' → logprob: -20.625158309936523
    9. '               ' → logprob: -21.750158309936523
    10. 'quests' → logprob: -22.000158309936523

Token 3037: '_raw' (ID: 36128)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1486314535140991
    2. 's' → logprob: -1.1486314535140991
    3. ' =' → logprob: -1.5236314535140991
    4. 'queries' → logprob: -3.2736315727233887
    5. '[' → logprob: -3.5236315727233887
    6. '[q' → logprob: -3.7736315727233887
    7. '_queries' → logprob: -4.023631572723389
    8. '`' → logprob: -4.898631572723389
    9. '```' → logprob: -4.898631572723389
    10. '       ' → logprob: -5.148631572723389

Token 3038: '[' (ID: 58)
  Prédit: '[q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.03982362151145935
    2. 'q' → logprob: -3.289823532104492
    3. '           ' → logprob: -8.039823532104492
    4. '2' → logprob: -8.039823532104492
    5. '[M' → logprob: -8.164823532104492
    6. '[' → logprob: -8.164823532104492
    7. '   ' → logprob: -9.539823532104492
    8. 'M' → logprob: -9.539823532104492
    9. '(q' → logprob: -9.539823532104492
    10. '```' → logprob: -9.664823532104492

Token 3039: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3132748603820801
    2. 'q' → logprob: -1.31327486038208
    3. ' q' → logprob: -11.938274383544922
    4. '(q' → logprob: -13.563274383544922
    5. '(' → logprob: -13.688274383544922
    6. '   ' → logprob: -13.813274383544922
    7. ' ' → logprob: -13.813274383544922
    8. '{' → logprob: -15.188274383544922
    9. '[q' → logprob: -15.188274383544922
    10. '$q' → logprob: -15.313274383544922

Token 3040: '*q' (ID: 136288)
  Prédit: '*q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*q' → logprob: -0.009179708547890186
    2. '*' → logprob: -5.009179592132568
    3. 'q' → logprob: -6.259179592132568
    4. ' *' → logprob: -7.509179592132568
    5. ' q' → logprob: -15.009180068969727
    6. '*
' → logprob: -17.259180068969727
    7. '*(' → logprob: -17.634180068969727
    8. ' ' → logprob: -18.009180068969727
    9. '[q' → logprob: -18.259180068969727
    10. '*i' → logprob: -18.634180068969727

Token 3041: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5655748248100281
    2. 'i' → logprob: -1.1905748844146729
    3. ']' → logprob: -2.440574884414673
    4. '+' → logprob: -3.690574884414673
    5. 'q' → logprob: -4.815574645996094
    6. '][' → logprob: -6.440574645996094
    7. '+
' → logprob: -6.565574645996094
    8. '1' → logprob: -6.815574645996094
    9. '   ' → logprob: -7.190574645996094
    10. ']+' → logprob: -7.440574645996094

Token 3042: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1360299289226532
    2. ']' → logprob: -2.2610299587249756
    3. 'p' → logprob: -4.3860297203063965
    4. '           ' → logprob: -5.5110297203063965
    5. '+' → logprob: -5.8860297203063965
    6. '2' → logprob: -7.3860297203063965
    7. '].' → logprob: -7.7610297203063965
    8. '][' → logprob: -7.8860297203063965
    9. '[' → logprob: -8.636030197143555
    10. '0' → logprob: -8.636030197143555

Token 3043: '           ' (ID: 352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.24510493874549866
    2. '           ' → logprob: -1.6201049089431763
    3. ' p' → logprob: -4.245104789733887
    4. '<|end|>' → logprob: -6.870104789733887
    5. '            ' → logprob: -7.370104789733887
    6. ',' → logprob: -7.495104789733887
    7. ',p' → logprob: -7.620104789733887
    8. '       ' → logprob: -8.495104789733887
    9. '            
' → logprob: -8.495104789733887
    10. ' ' → logprob: -8.620104789733887

Token 3044: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6875976324081421
    2. 'p' (adapté à ' p') → logprob: -0.8125976324081421
    3. '           ' → logprob: -2.9375977516174316
    4. '            ' → logprob: -7.687597751617432
    5. '               ' → logprob: -11.562597274780273
    6. '```' → logprob: -11.812597274780273
    7. '          ' → logprob: -12.437597274780273
    8. '             ' → logprob: -12.562597274780273
    9. '                   ' → logprob: -12.562597274780273
    10. '        ' → logprob: -12.562597274780273

Token 3045: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06305751204490662
    2. 'p' → logprob: -2.8130574226379395
    3. ' p' → logprob: -6.9380574226379395
    4. '1' → logprob: -9.438057899475098
    5. ' ' → logprob: -10.938057899475098
    6. ' =' → logprob: -11.813057899475098
    7. '           ' → logprob: -12.063057899475098
    8. '
' → logprob: -13.688057899475098
    9. '   ' → logprob: -13.688057899475098
    10. '=' → logprob: -14.188057899475098

Token 3046: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327635049819946
    2. '=' → logprob: -1.3132762908935547
    3. '<|end|>' → logprob: -12.438276290893555
    4. ' =
' → logprob: -12.688276290893555
    5. ')' → logprob: -12.813276290893555
    6. '=
' → logprob: -12.938276290893555
    7. '            ' → logprob: -14.438276290893555
    8. '           ' → logprob: -14.438276290893555
    9. '<|end|>' → logprob: -15.313276290893555
    10. ',' → logprob: -15.313276290893555

Token 3047: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.002475777640938759
    2. ' queries' → logprob: -6.002475738525391
    3. 'query' → logprob: -16.25247573852539
    4. 'questions' → logprob: -17.00247573852539
    5. 'requests' → logprob: -18.00247573852539
    6. '           ' → logprob: -19.37747573852539
    7. 'quer' → logprob: -20.12747573852539
    8. '               ' → logprob: -20.75247573852539
    9. 'quests' → logprob: -20.75247573852539
    10. '```' → logprob: -21.12747573852539

Token 3048: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -0.0015043864259496331
    2. 'Raw' → logprob: -6.501504421234131
    3. 'raw' → logprob: -13.501503944396973
    4. '_RAW' → logprob: -15.501503944396973
    5. '[' → logprob: -15.626503944396973
    6. 'aw' → logprob: -16.00150489807129
    7. '```' → logprob: -16.75150489807129
    8. 'RAW' → logprob: -17.50150489807129
    9. '`' → logprob: -17.62650489807129
    10. '
' → logprob: -17.75150489807129

Token 3049: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003546502848621458
    2. '2' → logprob: -8.750354766845703
    3. ''' → logprob: -9.625354766845703
    4. '               ' → logprob: -9.875354766845703
    5. '           ' → logprob: -10.375354766845703
    6. '                   ' → logprob: -11.250354766845703
    7. '   ' → logprob: -11.375354766845703
    8. ' ' → logprob: -12.500354766845703
    9. '       ' → logprob: -12.500354766845703
    10. '
' → logprob: -12.875354766845703

Token 3050: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.50000286102295
    4. '               ' → logprob: -16.000003814697266
    5. '           ' → logprob: -16.125003814697266
    6. '(' → logprob: -16.250003814697266
    7. '                   ' → logprob: -16.875003814697266
    8. '         ' → logprob: -16.875003814697266
    9. '       ' → logprob: -16.875003814697266
    10. '     ' → logprob: -17.125003814697266

Token 3051: '*q' (ID: 136288)
  Prédit: '*q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*q' → logprob: -0.20144160091876984
    2. 'q' → logprob: -1.7014416456222534
    3. ' *' → logprob: -11.451441764831543
    4. '(' → logprob: -12.326441764831543
    5. '*' → logprob: -12.576441764831543
    6. '(q' → logprob: -12.701441764831543
    7. ''q' → logprob: -13.451441764831543
    8. 'qw' → logprob: -13.951441764831543
    9. '_q' → logprob: -14.201441764831543
    10. '   ' → logprob: -14.326441764831543

Token 3052: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0017149277264252305
    2. 'i' → logprob: -6.376714706420898
    3. 'q' → logprob: -11.876714706420898
    4. '_q' → logprob: -12.126714706420898
    5. '   ' → logprob: -16.3767147064209
    6. '+' → logprob: -16.3767147064209
    7. '1' → logprob: -16.5017147064209
    8. 'iq' → logprob: -17.3767147064209
    9. '+i' → logprob: -18.0017147064209
    10. '*i' → logprob: -18.1267147064209

Token 3053: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010018963366746902
    2. ' +' → logprob: -4.635018825531006
    3. ']' → logprob: -8.260019302368164
    4. '1' → logprob: -13.635019302368164
    5. ']
' → logprob: -13.635019302368164
    6. '+]' → logprob: -13.885019302368164
    7. '+
' → logprob: -14.260019302368164
    8. '   ' → logprob: -16.260019302368164
    9. '[' → logprob: -16.385019302368164
    10. '```' → logprob: -16.760019302368164

Token 3054: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '   ' → logprob: -20.125
    4. '```' → logprob: -21.0
    5. 'q' → logprob: -22.0
    6. '
' → logprob: -23.25
    7. '2' → logprob: -24.125
    8. '`' → logprob: -24.5
    9. '``' → logprob: -24.625
    10. '0' → logprob: -24.875

Token 3055: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6875137090682983
    2. '           ' → logprob: -0.8125137090682983
    3. ')' → logprob: -3.062513828277588
    4. '       ' → logprob: -5.562513828277588
    5. '):
' → logprob: -6.062513828277588
    6. '   ' → logprob: -9.31251335144043
    7. '")' → logprob: -9.68751335144043
    8. ':
' → logprob: -9.68751335144043
    9. '")
' → logprob: -9.93751335144043
    10. '```' → logprob: -10.06251335144043

Token 3056: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005199087900109589
    2. 'print' → logprob: -7.750519752502441
    3. '```' → logprob: -10.375519752502441
    4. '       ' → logprob: -10.875519752502441
    5. '               ' → logprob: -11.375519752502441
    6. '   ' → logprob: -11.875519752502441
    7. ' print' → logprob: -12.000519752502441
    8. '	       ' → logprob: -12.250519752502441
    9. '
' → logprob: -13.125519752502441
    10. 'result' → logprob: -13.125519752502441

Token 3057: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5765613317489624
    2. '           ' → logprob: -0.8265613317489624
    3. ' print' → logprob: -7.951561450958252
    4. 'result' → logprob: -8.451560974121094
    5. 'answer' → logprob: -10.326560974121094
    6. 'output' → logprob: -11.576560974121094
    7. 'res' → logprob: -12.701560974121094
    8. '               ' → logprob: -12.701560974121094
    9. '		' → logprob: -13.201560974121094
    10. '   ' → logprob: -13.326560974121094

Token 3058: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07546739280223846
    2. '=' → logprob: -2.825467348098755
    3. '           ' → logprob: -4.325467586517334
    4. '            ' → logprob: -9.825467109680176
    5. '.append' → logprob: -10.575467109680176
    6. '               ' → logprob: -10.700467109680176
    7. ' +=' → logprob: -10.825467109680176
    8. '       ' → logprob: -11.075467109680176
    9. '          ' → logprob: -11.700467109680176
    10. '		' → logprob: -12.325467109680176

Token 3059: ' software' (ID: 4305)
  Prédit: 'software'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'software' → logprob: -0.1269369274377823
    2. ' software' → logprob: -2.126936912536621
    3. '           ' → logprob: -11.876936912536621
    4. 'self' → logprob: -13.501936912536621
    5. 'soft' → logprob: -15.501936912536621
    6. ' self' → logprob: -15.876936912536621
    7. '软件' → logprob: -16.376937866210938
    8. '            ' → logprob: -18.376937866210938
    9. '               ' → logprob: -18.501937866210938
    10. '"' → logprob: -18.501937866210938

Token 3060: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.005627512466162443
    2. '.' → logprob: -5.255627632141113
    3. 'query' → logprob: -7.880627632141113
    4. '=query' → logprob: -11.755627632141113
    5. ' query' → logprob: -13.255627632141113
    6. '	query' → logprob: -13.380627632141113
    7. '_query' → logprob: -13.880627632141113
    8. '.q' → logprob: -14.005627632141113
    9. '(query' → logprob: -14.255627632141113
    10. '.
' → logprob: -14.755627632141113

Token 3061: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0004044554370921105
    2. 'p' → logprob: -8.750404357910156
    3. '(ans' → logprob: -8.875404357910156
    4. '           ' → logprob: -9.250404357910156
    5. '(' → logprob: -12.500404357910156
    6. '(q' → logprob: -13.000404357910156
    7. 'ans' → logprob: -13.625404357910156
    8. ' p' → logprob: -13.750404357910156
    9. '(
' → logprob: -14.000404357910156
    10. ' (' → logprob: -14.625404357910156

Token 3062: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. 'p' → logprob: -12.87500286102295
    3. '(p' → logprob: -14.50000286102295
    4. ' p' → logprob: -17.750003814697266
    5. 'r' → logprob: -18.500003814697266
    6. '```' → logprob: -18.625003814697266
    7. 's' → logprob: -19.125003814697266
    8. 'a' → logprob: -19.625003814697266
    9. 'ath' → logprob: -19.750003814697266
    10. ')p' → logprob: -19.875003814697266

Token 3063: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002370416419580579
    2. ',p' → logprob: -6.127370357513428
    3. '           ' → logprob: -9.127370834350586
    4. 'p' → logprob: -10.752370834350586
    5. ' ,' → logprob: -10.752370834350586
    6. '(p' → logprob: -11.502370834350586
    7. ')' → logprob: -11.877370834350586
    8. ')
' → logprob: -12.127370834350586
    9. ',q' → logprob: -12.252370834350586
    10. '               ' → logprob: -13.252370834350586

Token 3064: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00033546582562848926
    2. ' p' → logprob: -8.000335693359375
    3. '           ' → logprob: -17.625335693359375
    4. '   ' → logprob: -20.625335693359375
    5. '       ' → logprob: -20.625335693359375
    6. 'q' → logprob: -21.125335693359375
    7. '          ' → logprob: -21.250335693359375
    8. ')p' → logprob: -21.250335693359375
    9. '	p' → logprob: -21.875335693359375
    10. '            ' → logprob: -21.875335693359375

Token 3065: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -21.5
    3. ' ' → logprob: -22.25
    4. '_' → logprob: -22.25
    5. '4' → logprob: -22.625
    6. '5' → logprob: -22.875
    7. '1' → logprob: -22.875
    8. '₂' → logprob: -23.375
    9. '２' → logprob: -23.625
    10. '``' → logprob: -23.75

Token 3066: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0975838452577591
    2. ')
' → logprob: -2.472583770751953
    3. ')' → logprob: -4.972583770751953
    4. '
' → logprob: -6.597583770751953
    5. '```' → logprob: -9.722583770751953
    6. '            
' → logprob: -9.972583770751953
    7. 'print' → logprob: -10.222583770751953
    8. '\n' → logprob: -10.472583770751953
    9. '               ' → logprob: -10.597583770751953
    10. '()
' → logprob: -11.097583770751953

Token 3067: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008662313222885132
    2. 'print' → logprob: -4.758662223815918
    3. '```' → logprob: -10.008662223815918
    4. ' print' → logprob: -13.133662223815918
    5. '       ' → logprob: -15.383662223815918
    6. '#print' → logprob: -16.008663177490234
    7. '               ' → logprob: -16.258663177490234
    8. '``' → logprob: -16.383663177490234
    9. '   ' → logprob: -16.883663177490234
    10. '		' → logprob: -17.008663177490234

Token 3068: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018163753673434258
    2. '           ' → logprob: -4.018163681030273
    3. ' print' → logprob: -11.268163681030273
    4. '```' → logprob: -14.018163681030273
    5. '       ' → logprob: -15.893163681030273
    6. '
' → logprob: -17.143163681030273
    7. '#print' → logprob: -17.393163681030273
    8. '   ' → logprob: -17.518163681030273
    9. '	print' → logprob: -17.643163681030273
    10. '               ' → logprob: -18.393163681030273

Token 3069: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.001170225441455841
    2. 'ans' → logprob: -6.7511701583862305
    3. '	ans' → logprob: -19.251171112060547
    4. ' ans' → logprob: -20.001171112060547
    5. '(' → logprob: -20.501171112060547
    6. '(answer' → logprob: -21.376171112060547
    7. '(
' → logprob: -21.751171112060547
    8. 'ANS' → logprob: -22.251171112060547
    9. '_ans' → logprob: -22.876171112060547
    10. '(f' → logprob: -23.751171112060547

Token 3070: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -13.625003814697266
    3. '())' → logprob: -14.375003814697266
    4. '       ' → logprob: -14.625003814697266
    5. '")' → logprob: -15.000003814697266
    6. '')' → logprob: -15.000003814697266
    7. '   ' → logprob: -15.000003814697266
    8. '()' → logprob: -15.625003814697266
    9. '`)' → logprob: -15.875003814697266
    10. ' )' → logprob: -16.375003814697266

Token 3071: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00770304212346673
    2. '```' → logprob: -5.132702827453613
    3. '<|end|>' → logprob: -6.882702827453613
    4. '#' → logprob: -7.507702827453613
    5. ' if' → logprob: -8.632702827453613
    6. '...' → logprob: -12.882702827453613
    7. '__' → logprob: -12.882702827453613
    8. '
' → logprob: -12.882702827453613
    9. '#if' → logprob: -13.132702827453613
    10. '<|end|>' → logprob: -13.257702827453613

Token 3072: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0031821096781641245
    2. ' __' → logprob: -5.7531819343566895
    3. 'name' → logprob: -12.503182411193848
    4. '```' → logprob: -15.503182411193848
    5. 'if' → logprob: -15.753182411193848
    6. '_name' → logprob: -16.50318145751953
    7. 'True' → logprob: -16.50318145751953
    8. '/__' → logprob: -16.62818145751953
    9. '.__' → logprob: -17.25318145751953
    10. 'Name' → logprob: -17.50318145751953

Token 3073: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01552288606762886
    2. '==' → logprob: -4.5155229568481445
    3. ' ==' → logprob: -6.5155229568481445
    4. 'name' → logprob: -6.6405229568481445
    5. 'if' → logprob: -6.8905229568481445
    6. '=="' → logprob: -8.515522956848145
    7. '```' → logprob: -9.015522956848145
    8. '=='' → logprob: -9.265522956848145
    9. '__.__' → logprob: -9.890522956848145
    10. '.__' → logprob: -9.890522956848145

Token 3074: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1398757123970427e-05
    2. '__.__' → logprob: -12.125011444091797
    3. '==' → logprob: -12.750011444091797
    4. '__":
' → logprob: -14.500011444091797
    5. '__
' → logprob: -14.625011444091797
    6. '____' → logprob: -14.875011444091797
    7. ' ==' → logprob: -15.000011444091797
    8. '__('' → logprob: -15.250011444091797
    9. '__.' → logprob: -15.750011444091797
    10. '___' → logprob: -15.875011444091797

Token 3075: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0513194277882576
    2. '==' → logprob: -3.0513193607330322
    3. '=="' → logprob: -6.801319599151611
    4. '=='' → logprob: -7.051319599151611
    5. ' ==' → logprob: -7.301319599151611
    6. '==
' → logprob: -9.926319122314453
    7. '__.__' → logprob: -11.801319122314453
    8. '```' → logprob: -12.176319122314453
    9. '__
' → logprob: -12.676319122314453
    10. '=' → logprob: -13.301319122314453

Token 3076: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47412651777267456
    2. ''' → logprob: -0.9741265177726746
    3. '__' → logprob: -9.974126815795898
    4. ' "__' → logprob: -13.099126815795898
    5. ' '__' → logprob: -14.224126815795898
    6. '('__' → logprob: -16.4741268157959
    7. '   ' → logprob: -17.5991268157959
    8. 'main' → logprob: -17.7241268157959
    9. '("__' → logprob: -17.9741268157959
    10. '"<?' → logprob: -18.0991268157959

Token 3077: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00248909555375576
    2. '__' → logprob: -6.00248908996582
    3. 'name' → logprob: -11.25248908996582
    4. ' main' → logprob: -15.25248908996582
    5. '_main' → logprob: -16.62748908996582
    6. 'built' → logprob: -17.37748908996582
    7. '___' → logprob: -18.37748908996582
    8. '__':
' → logprob: -18.50248908996582
    9. '(main' → logprob: -18.62748908996582
    10. 'python' → logprob: -18.62748908996582

Token 3078: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.022020487114787102
    2. '__' → logprob: -3.8970205783843994
    3. '__":
' → logprob: -6.52202033996582
    4. '__
' → logprob: -13.64702033996582
    5. '__.' → logprob: -13.89702033996582
    6. '('__' → logprob: -13.89702033996582
    7. '__:' → logprob: -13.89702033996582
    8. '_' → logprob: -14.52202033996582
    9. '():
' → logprob: -14.89702033996582
    10. '__.__' → logprob: -15.14702033996582

Token 3079: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0009264685213565826
    2. '   ' → logprob: -7.000926494598389
    3. '	main' → logprob: -11.62592601776123
    4. ' main' → logprob: -12.12592601776123
    5. '```' → logprob: -15.12592601776123
    6. '(main' → logprob: -16.000926971435547
    7. '_main' → logprob: -16.125926971435547
    8. 'import' → logprob: -17.375926971435547
    9. 'Main' → logprob: -18.250926971435547
    10. '  ' → logprob: -18.250926971435547

Token 3080: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.0
    3. '   ' → logprob: -18.5
    4. '	main' → logprob: -20.5
    5. '_main' → logprob: -24.5
    6. 'import' → logprob: -25.0
    7. '(main' → logprob: -25.5
    8. '.main' → logprob: -25.625
    9. '```' → logprob: -25.75
    10. '
' → logprob: -27.375

Token 3081: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3079
Tokens correctement prédits (1ère position, stricte): 1039
Tokens correctement prédits (1ère position, avec adaptation): 1157
Tokens correctement prédits (top 10): 2256
Précision stricte (1ère position): 33.74%
Précision adaptée (1ère position): 37.58%
Précision (top 10): 73.27%
================================================================================
