================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def count_brackets(line):
    # Count open and close brackets of each type in the line
    ro = line.count('(')
    rc = line.count(')')
    co = line.count('{')
    cc = line.count('}')
    so = line.count('[')
    sc = line.count(']')
    return ro, rc, co, cc, so, sc

def solve():
    import sys
    input = sys.stdin.readline
    while True:
        p, q = map(int, input().split())
        if p == 0 and q == 0:
            break

        P = [input().rstrip('\n') for _ in range(p)]
        Q = [input().rstrip('\n') for _ in range(q)]

        # Parse the P program lines:
        # For each line, record:
        # - indentation level (number of leading periods)
        # - incremental bracket counts (open and close)
        indent_levels = []
        ro_cum = [0]  # cumulative counts of open round brackets
        rc_cum = [0]  # cumulative counts of close round brackets
        co_cum = [0]  # cumulative counts of open curly brackets
        cc_cum = [0]  # cumulative counts of close curly brackets
        so_cum = [0]  # cumulative counts of open square brackets
        sc_cum = [0]  # cumulative counts of close square brackets

        for line in P:
            # count leading periods (indentation)
            indent = 0
            for ch in line:
                if ch == '.':
                    indent += 1
                else:
                    break
            indent_levels.append(indent)

            # count brackets in line
            ro, rc, co, cc, so, sc = count_brackets(line)
            ro_cum.append(ro_cum[-1] + ro)
            rc_cum.append(rc_cum[-1] + rc)
            co_cum.append(co_cum[-1] + co)
            cc_cum.append(cc_cum[-1] + cc)
            so_cum.append(so_cum[-1] + so)
            sc_cum.append(sc_cum[-1] + sc)

        # The first line has zero indentation in well-indented programs
        # Use the indentation formula:
        # indentation[line i] = R*(ro[i-1] - rc[i-1]) + C*(co[i-1] - cc[i-1]) + S*(so[i-1] - sc[i-1])
        # for i in 1..p-1 (0-based indexing; ro[i-1] means cumulative before line i)

        # We know indent_levels[i] for i in [0,p-1]
        # We want to find all possible triples (R,C,S) in [1..20]^3 that satisfy:
        # for i in range 1..p-1:
        #   indent_levels[i] == R*(ro_cum[i] - rc_cum[i]) + C*(co_cum[i] - cc_cum[i]) + S*(so_cum[i] - sc_cum[i])
        # First line indent_levels[0] == 0 must be satisfied by definition.

        candidates = []
        # Generate all possible triples of R,C,S in [1..20]
        for R in range(1, 21):
            for C in range(1, 21):
                for S in range(1, 21):
                    ok = True
                    for i in range(1, p):
                        expected = R*(ro_cum[i] - rc_cum[i]) + C*(co_cum[i] - cc_cum[i]) + S*(so_cum[i] - sc_cum[i])
                        if indent_levels[i] != expected:
                            ok = False
                            break
                    if ok:
                        candidates.append((R, C, S))

        # Now apply these candidates to Q lines:
        # For Q lines, compute cumulative brackets counts similarly,
        # then for each Q line i, calculate indentation candidates:
        # indentation_q[i] = R*(roq[i-1] - rcq[i-1]) + C*(coq[i-1] - ccq[i-1]) + S*(soq[i-1] - scq[i-1])
        #
        # If multiple candidate triples produce different indentation values for a given line, print -1 for that line
        # else print the unique indentation

        roq_cum = [0]
        rcq_cum = [0]
        coq_cum = [0]
        ccq_cum = [0]
        soq_cum = [0]
        scq_cum = [0]

        for line in Q:
            ro, rc, co, cc, so, sc = count_brackets(line)
            roq_cum.append(roq_cum[-1] + ro)
            rcq_cum.append(rcq_cum[-1] + rc)
            coq_cum.append(coq_cum[-1] + co)
            ccq_cum.append(ccq_cum[-1] + cc)
            soq_cum.append(soq_cum[-1] + so)
            scq_cum.append(scq_cum[-1] + sc)

        results = []
        for i in range(1, q+1):
            values = set()
            for R, C, S in candidates:
                indent_val = R*(roq_cum[i-1] - rcq_cum[i-1]) + C*(coq_cum[i-1] - ccq_cum[i-1]) + S*(soq_cum[i-1] - scq_cum[i-1])
                values.add(indent_val)
            if len(values) == 1:
                results.append(str(values.pop()))
            else:
                results.append(str(-1))

        print(' '.join(results))

if __name__ == '__main__':
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' count' (ID: 3605)
  → Token d'amorce (pas de prédiction)

Token 2: '_br' (ID: 33624)
  → Token d'amorce (pas de prédiction)

Token 3: 'ackets' (ID: 42290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07645813375711441
    2. 'ackets' → logprob: -2.701458215713501
    3. '_a' → logprob: -6.076457977294922
    4. 'aces' → logprob: -6.076457977294922
    5. '_' → logprob: -7.076457977294922
    6. '```' → logprob: -7.576457977294922
    7. 'e' → logprob: -8.201457977294922
    8. '(' → logprob: -9.826457977294922
    9. 'anches' → logprob: -9.826457977294922
    10. 'acket' → logprob: -10.201457977294922

Token 4: '(line' (ID: 18178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001958371140062809
    2. '_' → logprob: -7.25195837020874
    3. '(:' → logprob: -7.50195837020874
    4. '```' → logprob: -8.126958847045898
    5. ':' → logprob: -9.001958847045898
    6. '():' → logprob: -9.251958847045898
    7. '(_:' → logprob: -9.626958847045898
    8. '_:' → logprob: -11.001958847045898
    9. '('' → logprob: -11.126958847045898
    10. '(":' → logprob: -11.501958847045898

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019832506775856018
    2. ')' → logprob: -4.019832611083984
    3. ':' → logprob: -7.144832611083984
    4. '[' → logprob: -7.269832611083984
    5. '```' → logprob: -9.769832611083984
    6. '():' → logprob: -10.269832611083984
    7. '[]):' → logprob: -10.644832611083984
    8. ''):' → logprob: -10.894832611083984
    9. '(' → logprob: -11.394832611083984
    10. '):
' → logprob: -12.019832611083984

Token 6: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2317495197057724
    2. ':' → logprob: -1.9817495346069336
    3. '   ' → logprob: -2.8567495346069336
    4. '(:' → logprob: -5.231749534606934
    5. '():' → logprob: -6.106749534606934
    6. '```' → logprob: -6.856749534606934
    7. ''' → logprob: -7.231749534606934
    8. '"' → logprob: -8.106749534606934
    9. '":' → logprob: -8.356749534606934
    10. '):' → logprob: -8.481749534606934

Token 7: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035266511142253876
    2. '(' → logprob: -4.410266399383545
    3. '```' → logprob: -4.535266399383545
    4. '       ' → logprob: -5.285266399383545
    5. '    ' → logprob: -6.160266399383545
    6. 'i' → logprob: -7.035266399383545
    7. ' ' → logprob: -7.160266399383545
    8. '`' → logprob: -7.660266399383545
    9. 'count' → logprob: -8.035266876220703
    10. 'n' → logprob: -8.410266876220703

Token 8: ' Count' (ID: 6789)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44619888067245483
    2. 'open' → logprob: -1.6961989402770996
    3. 'count' → logprob: -2.5711989402770996
    4. ' count' → logprob: -3.6961989402770996
    5. 'return' → logprob: -4.1961989402771
    6. '(' → logprob: -4.4461989402771
    7. ' open' → logprob: -4.9461989402771
    8. ' ' → logprob: -4.9461989402771
    9. 'space' → logprob: -5.1961989402771
    10. ' (' → logprob: -5.4461989402771

Token 9: ' open' (ID: 2494)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2252136468887329
    2. ' (' → logprob: -1.725213646888733
    3. ' ' → logprob: -4.100213527679443
    4. 's' → logprob: -5.475213527679443
    5. '_' → logprob: -7.100213527679443
    6. 'space' → logprob: -7.350213527679443
    7. '_spaces' → logprob: -8.725214004516602
    8. '_space' → logprob: -8.975214004516602
    9. 'spaces' → logprob: -9.100214004516602
    10. '('' → logprob: -9.100214004516602

Token 10: ' and' (ID: 326)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36255204677581787
    2. 's' → logprob: -1.7375520467758179
    3. '_' → logprob: -2.1125521659851074
    4. '_parent' → logprob: -5.737552165985107
    5. ' (' → logprob: -6.487552165985107
    6. ''' → logprob: -7.237552165985107
    7. ')' → logprob: -7.362552165985107
    8. ' parentheses' → logprob: -9.23755168914795
    9. '_count' → logprob: -9.36255168914795
    10. 'parent' → logprob: -9.36255168914795

Token 11: ' close' (ID: 5263)
  Prédit: ' close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' close' → logprob: -0.3636868894100189
    2. 'close' → logprob: -1.2386869192123413
    3. 'closed' → logprob: -4.988687038421631
    4. ' closed' → logprob: -4.988687038421631
    5. ' closing' → logprob: -6.863687038421631
    6. 'closing' → logprob: -8.363686561584473
    7. ' ' → logprob: -9.613686561584473
    8. ')' → logprob: -9.988686561584473
    9. '_close' → logprob: -9.988686561584473
    10. '  ' → logprob: -11.113686561584473

Token 12: ' brackets' (ID: 73008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37135782837867737
    2. '_' → logprob: -1.621357798576355
    3. 's' → logprob: -2.4963579177856445
    4. ' (' → logprob: -4.4963579177856445
    5. ' parentheses' → logprob: -4.9963579177856445
    6. '_parent' → logprob: -5.3713579177856445
    7. ' ' → logprob: -5.9963579177856445
    8. '   ' → logprob: -7.2463579177856445
    9. 'parent' → logprob: -7.6213579177856445
    10. '```' → logprob: -7.8713579177856445

Token 13: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7645386457443237
    2. '   ' → logprob: -0.7645386457443237
    3. ':' → logprob: -3.5145387649536133
    4. '(
' → logprob: -5.014538764953613
    5. '    ' → logprob: -5.014538764953613
    6. '```' → logprob: -5.264538764953613
    7. ' ' → logprob: -5.764538764953613
    8. ' (' → logprob: -6.014538764953613
    9. ' :' → logprob: -6.389538764953613
    10. 's' → logprob: -6.514538764953613

Token 14: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.5335953235626221
    2. 'each' → logprob: -1.033595323562622
    3. ' the' → logprob: -4.283595085144043
    4. ' all' → logprob: -4.783595085144043
    5. ''' → logprob: -4.908595085144043
    6. '"' → logprob: -5.533595085144043
    7. 'the' → logprob: -5.658595085144043
    8. ' every' → logprob: -5.658595085144043
    9. ' both' → logprob: -5.783595085144043
    10. ' a' → logprob: -6.033595085144043

Token 15: ' type' (ID: 1490)
  Prédit: ' type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.8917804956436157
    2. '_' → logprob: -1.5167804956436157
    3. 'type' → logprob: -1.8917804956436157
    4. ' ' → logprob: -1.8917804956436157
    5. ' _' → logprob: -4.016780376434326
    6. '(' → logprob: -5.141780376434326
    7. ' (' → logprob: -5.266780376434326
    8. '_type' → logprob: -5.641780376434326
    9. ' )' → logprob: -5.641780376434326
    10. 'space' → logprob: -5.641780376434326

Token 16: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2643536925315857
    2. '(' → logprob: -2.0143537521362305
    3. '```' → logprob: -2.8893537521362305
    4. '`' → logprob: -4.3893537521362305
    5. ''' → logprob: -4.6393537521362305
    6. ':' → logprob: -4.7643537521362305
    7. '    ' → logprob: -6.3893537521362305
    8. '``' → logprob: -6.5143537521362305
    9. ' ' → logprob: -6.8893537521362305
    10. ' (' → logprob: -6.8893537521362305

Token 17: ' the' (ID: 290)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.26845404505729675
    2. ' the' → logprob: -1.5184540748596191
    3. 'the' → logprob: -5.018454074859619
    4. 'line' → logprob: -5.768454074859619
    5. ')' → logprob: -6.018454074859619
    6. ' ' → logprob: -7.018454074859619
    7. ' a' → logprob: -7.268454074859619
    8. ' )' → logprob: -7.393454074859619
    9. '(line' → logprob: -7.768454074859619
    10. '"' → logprob: -8.018453598022461

Token 18: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0027786085847765207
    2. 'line' → logprob: -6.87777853012085
    3. ' string' → logprob: -7.75277853012085
    4. ' input' → logprob: -8.002779006958008
    5. ')' → logprob: -8.252779006958008
    6. 'def' → logprob: -8.877779006958008
    7. ' ' → logprob: -9.002779006958008
    8. '(line' → logprob: -9.127779006958008
    9. 'string' → logprob: -9.502779006958008
    10. '   ' → logprob: -9.877779006958008

Token 19: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07234562188386917
    2. '```' → logprob: -2.822345733642578
    3. ':' → logprob: -5.947345733642578
    4. '`' → logprob: -6.322345733642578
    5. '(' → logprob: -6.447345733642578
    6. '``' → logprob: -6.822345733642578
    7. '    
' → logprob: -7.072345733642578
    8. ''' → logprob: -7.447345733642578
    9. '       ' → logprob: -7.947345733642578
    10. '    ' → logprob: -7.947345733642578

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054179124534130096
    2. '```' → logprob: -3.3041791915893555
    3. ':' → logprob: -5.0541791915893555
    4. '`' → logprob: -5.6791791915893555
    5. '``' → logprob: -6.1791791915893555
    6. '(' → logprob: -7.0541791915893555
    7. ''' → logprob: -7.5541791915893555
    8. '    
' → logprob: -7.8041791915893555
    9. '    ' → logprob: -8.054179191589355
    10. '\' → logprob: -8.304179191589355

Token 21: ' ro' (ID: 974)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016635870561003685
    2. '```' → logprob: -4.641635894775391
    3. '    ' → logprob: -6.391635894775391
    4. 'open' → logprob: -6.891635894775391
    5. '`' → logprob: -7.141635894775391
    6. '       ' → logprob: -7.391635894775391
    7. ' open' → logprob: -7.891635894775391
    8. '``' → logprob: -8.01663589477539
    9. ' counts' → logprob: -8.14163589477539
    10. '(' → logprob: -8.26663589477539

Token 22: ' =' (ID: 314)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'und' → logprob: -0.5791417956352234
    2. 'unded' → logprob: -1.2041418552398682
    3. 'unds' → logprob: -2.329141855239868
    4. 'unding' → logprob: -3.454141855239868
    5. 'u' → logprob: -5.829141616821289
    6. '=' → logprob: -6.829141616821289
    7. 'un' → logprob: -6.954141616821289
    8. 'ugh' → logprob: -7.204141616821289
    9. 'ut' → logprob: -7.329141616821289
    10. 'unt' → logprob: -7.704141616821289

Token 23: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9435373544692993
    2. 'line' → logprob: -1.5685373544692993
    3. '{' → logprob: -2.0685372352600098
    4. '0' → logprob: -2.3185372352600098
    5. ' {' → logprob: -2.5685372352600098
    6. ' ' → logprob: -2.6935372352600098
    7. ' {'' → logprob: -4.19353723526001
    8. '{'' → logprob: -4.44353723526001
    9. '{"' → logprob: -6.06853723526001
    10. '{
' → logprob: -6.81853723526001

Token 24: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0010958074126392603
    2. '.' → logprob: -6.876095771789551
    3. 'count' → logprob: -11.12609577178955
    4. '   ' → logprob: -11.50109577178955
    5. '.replace' → logprob: -11.62609577178955
    6. ' .' → logprob: -11.62609577178955
    7. '.Count' → logprob: -11.75109577178955
    8. ''.' → logprob: -12.37609577178955
    9. ' count' → logprob: -13.50109577178955
    10. '_count' → logprob: -13.75109577178955

Token 25: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16100390255451202
    2. '("("' → logprob: -1.9110039472579956
    3. '(' → logprob: -7.286004066467285
    4. '("' → logprob: -10.286004066467285
    5. ''' → logprob: -10.911004066467285
    6. '('(' → logprob: -11.036004066467285
    7. '("(' → logprob: -11.286004066467285
    8. '(('' → logprob: -12.536004066467285
    9. ' '('' → logprob: -13.161004066467285
    10. '"' → logprob: -13.286004066467285

Token 26: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00047416388406418264
    2. '(' → logprob: -8.500473976135254
    3. '{' → logprob: -8.625473976135254
    4. '['' → logprob: -9.375473976135254
    5. ')' → logprob: -13.250473976135254
    6. ' (' → logprob: -13.875473976135254
    7. '(',' → logprob: -14.000473976135254
    8. '[' → logprob: -14.250473976135254
    9. '')' → logprob: -14.250473976135254
    10. '{'' → logprob: -15.125473976135254

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5358694731257856e-05
    2. ' )' → logprob: -10.750035285949707
    3. '')' → logprob: -12.000035285949707
    4. ')
' → logprob: -12.125035285949707
    5. ')+' → logprob: -14.375035285949707
    6. '),' → logprob: -14.875035285949707
    7. '))' → logprob: -14.875035285949707
    8. '   ' → logprob: -15.250035285949707
    9. ')

' → logprob: -16.000036239624023
    10. '()' → logprob: -16.375036239624023

Token 28: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.506927490234375
    2. '+' → logprob: -1.381927490234375
    3. ' +' → logprob: -2.131927490234375
    4. ' -' → logprob: -4.506927490234375
    5. '-' → logprob: -5.506927490234375
    6. '   ' → logprob: -5.631927490234375
    7. 'r' → logprob: -5.756927490234375
    8. ' )' → logprob: -6.006927490234375
    9. ')+' → logprob: -6.881927490234375
    10. '+r' → logprob: -7.131927490234375

Token 29: ' rc' (ID: 23309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5852510333061218
    2. 'r' → logprob: -1.4602510929107666
    3. '+' → logprob: -1.9602510929107666
    4. 'c' → logprob: -3.8352510929107666
    5. '   ' → logprob: -4.2102508544921875
    6. 'p' → logprob: -5.4602508544921875
    7. ' )' → logprob: -5.5852508544921875
    8. ' c' → logprob: -5.5852508544921875
    9. '  ' → logprob: -6.2102508544921875
    10. 'o' → logprob: -6.2102508544921875

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36040371656417847
    2. 'ount' → logprob: -1.7354037761688232
    3. ')' → logprob: -2.6104037761688232
    4. '.' → logprob: -3.1104037761688232
    5. ' =' → logprob: -4.985403537750244
    6. '')' → logprob: -7.860403537750244
    7. '.=' → logprob: -8.485404014587402
    8. 'ont' → logprob: -8.610404014587402
    9. 'ounter' → logprob: -9.735404014587402
    10. '.count' → logprob: -9.735404014587402

Token 31: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5854172706604004
    2. 'line' → logprob: -0.8354172706604004
    3. ')' → logprob: -4.8354172706604
    4. '')' → logprob: -6.5854172706604
    5. ' ')'' → logprob: -10.335416793823242
    6. ' )' → logprob: -10.460416793823242
    7. '	line' → logprob: -11.085416793823242
    8. ' ' → logprob: -11.960416793823242
    9. '   ' → logprob: -12.210416793823242
    10. '  ' → logprob: -12.335416793823242

Token 32: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.00043353010551072657
    2. '.' → logprob: -7.750433444976807
    3. 'count' → logprob: -13.125433921813965
    4. '.Count' → logprob: -15.250433921813965
    5. ' .' → logprob: -15.500433921813965
    6. ').' → logprob: -15.625433921813965
    7. '.replace' → logprob: -16.25043296813965
    8. '	count' → logprob: -17.00043296813965
    9. ')' → logprob: -17.37543296813965
    10. '.')' → logprob: -17.75043296813965

Token 33: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.750006675720215
    3. '')' → logprob: -12.875006675720215
    4. '(('' → logprob: -14.750006675720215
    5. '('.')' → logprob: -15.125006675720215
    6. '(',' → logprob: -15.375006675720215
    7. '('/')' → logprob: -16.37500762939453
    8. '['' → logprob: -16.50000762939453
    9. ')' → logprob: -16.62500762939453
    10. '('\' → logprob: -17.25000762939453

Token 34: ')')
' (ID: 80616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03808050975203514
    2. '')' → logprob: -3.2880804538726807
    3. '('' → logprob: -10.788080215454102
    4. '(' → logprob: -11.538080215454102
    5. ''' → logprob: -11.788080215454102
    6. ')'' → logprob: -14.663080215454102
    7. '()' → logprob: -15.038080215454102
    8. ')")' → logprob: -15.413080215454102
    9. '")' → logprob: -16.6630802154541
    10. ')'),' → logprob: -16.9130802154541

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07323254644870758
    2. '    
' → logprob: -3.073232650756836
    3. '
' → logprob: -4.073232650756836
    4. '```' → logprob: -6.448232650756836
    5. 'n' → logprob: -6.573232650756836
    6. ')' → logprob: -6.823232650756836
    7. '   
' → logprob: -7.073232650756836
    8. '  
' → logprob: -7.573232650756836
    9. ',' → logprob: -7.823232650756836
    10. '<|end|>' → logprob: -8.448232650756836

Token 36: ' co' (ID: 1407)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1260536015033722
    2. '    
' → logprob: -2.50105357170105
    3. '
' → logprob: -3.75105357170105
    4. '```' → logprob: -5.751053810119629
    5. '\n' → logprob: -6.376053810119629
    6. '  
' → logprob: -6.876053810119629
    7. '   
' → logprob: -7.001053810119629
    8. '    ' → logprob: -7.251053810119629
    9. '  ' → logprob: -7.376053810119629
    10. 'n' → logprob: -7.376053810119629

Token 37: ' =' (ID: 314)
  Prédit: 'unt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unt' → logprob: -0.6451758742332458
    2. 'l' → logprob: -1.1451759338378906
    3. 'unts' → logprob: -2.8951759338378906
    4. 'm' → logprob: -3.5201759338378906
    5. 'unting' → logprob: -4.270175933837891
    6. 'unter' → logprob: -4.895175933837891
    7. 'unted' → logprob: -5.020175933837891
    8. 'u' → logprob: -5.145175933837891
    9. ' =' → logprob: -5.270175933837891
    10. 'w' → logprob: -5.770175933837891

Token 38: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.003936156164854765
    2. ''' → logprob: -6.128936290740967
    3. ' line' → logprob: -6.378936290740967
    4. '[line' → logprob: -10.378935813903809
    5. ' '['' → logprob: -12.003935813903809
    6. '	line' → logprob: -12.503935813903809
    7. '']' → logprob: -12.753935813903809
    8. '(line' → logprob: -13.378935813903809
    9. 'lin' → logprob: -13.628935813903809
    10. '')' → logprob: -13.878935813903809

Token 39: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0019881133921444416
    2. '.' → logprob: -6.376987934112549
    3. ''.' → logprob: -8.251988410949707
    4. 'count' → logprob: -11.251988410949707
    5. '('.')' → logprob: -12.751988410949707
    6. '.find' → logprob: -13.126988410949707
    7. '.'.' → logprob: -13.251988410949707
    8. ' .' → logprob: -13.751988410949707
    9. '('.' → logprob: -14.126988410949707
    10. '.Count' → logprob: -14.126988410949707

Token 40: '('{' (ID: 79246)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.006004283204674721
    2. '('{' → logprob: -5.131004333496094
    3. '(' → logprob: -10.506004333496094
    4. '('[' → logprob: -10.881004333496094
    5. ''' → logprob: -11.131004333496094
    6. '('<' → logprob: -12.131004333496094
    7. '(',' → logprob: -13.006004333496094
    8. '('.')' → logprob: -13.631004333496094
    9. '(':' → logprob: -14.006004333496094
    10. ' ('' → logprob: -14.631004333496094

Token 41: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.8162737488746643
    2. '}')' → logprob: -1.1912736892700195
    3. '}' → logprob: -2.0662736892700195
    4. ')' → logprob: -2.1912736892700195
    5. '{' → logprob: -4.3162736892700195
    6. ''}' → logprob: -6.3162736892700195
    7. ''' → logprob: -8.56627368927002
    8. ''})' → logprob: -9.31627368927002
    9. '   ' → logprob: -9.56627368927002
    10. '}'' → logprob: -10.06627368927002

Token 42: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.809626042842865
    2. '}' → logprob: -1.1846261024475098
    3. '   ' → logprob: -1.4346261024475098
    4. '<|end|>' → logprob: -5.30962610244751
    5. '')' → logprob: -6.55962610244751
    6. ''}' → logprob: -6.80962610244751
    7. 'c' → logprob: -6.93462610244751
    8. ' ' → logprob: -7.68462610244751
    9. ')}' → logprob: -7.68462610244751
    10. '  ' → logprob: -7.80962610244751

Token 43: ' cc' (ID: 22988)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.024085713550448418
    2. ''}' → logprob: -3.899085760116577
    3. '   ' → logprob: -6.524085521697998
    4. ')' → logprob: -6.524085521697998
    5. '')' → logprob: -8.524085998535156
    6. '}')' → logprob: -8.524085998535156
    7. ' ' → logprob: -9.899085998535156
    8. '  ' → logprob: -10.524085998535156
    9. 'c' → logprob: -10.774085998535156
    10. '})' → logprob: -11.024085998535156

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00041005798266269267
    2. ')' → logprob: -7.875410079956055
    3. ' =' → logprob: -10.625410079956055
    4. '=
' → logprob: -13.125410079956055
    5. '')' → logprob: -13.250410079956055
    6. '=line' → logprob: -14.000410079956055
    7. '=}' → logprob: -15.375410079956055
    8. '='' → logprob: -15.500410079956055
    9. ')=' → logprob: -16.000410079956055
    10. '=

' → logprob: -16.125410079956055

Token 45: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4741179645061493
    2. 'line' → logprob: -0.9741179943084717
    3. ')' → logprob: -11.59911823272705
    4. '')' → logprob: -11.72411823272705
    5. '	line' → logprob: -12.09911823272705
    6. '(line' → logprob: -12.72411823272705
    7. '=line' → logprob: -12.72411823272705
    8. ' ' → logprob: -12.84911823272705
    9. ''' → logprob: -12.84911823272705
    10. '}' → logprob: -13.22411823272705

Token 46: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0004387750814203173
    2. '.' → logprob: -7.750438690185547
    3. ' .' → logprob: -12.625438690185547
    4. ''.' → logprob: -12.875438690185547
    5. 'count' → logprob: -14.000438690185547
    6. ').' → logprob: -15.000438690185547
    7. '.Count' → logprob: -15.125438690185547
    8. '.cont' → logprob: -15.750438690185547
    9. '   ' → logprob: -16.000438690185547
    10. ')' → logprob: -16.000438690185547

Token 47: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00016671013145241886
    2. ''}' → logprob: -9.500166893005371
    3. '('{' → logprob: -9.625166893005371
    4. '(' → logprob: -10.875166893005371
    5. '}' → logprob: -12.000166893005371
    6. ' ('' → logprob: -15.875166893005371
    7. '("' → logprob: -16.125165939331055
    8. '}'' → logprob: -16.250165939331055
    9. '}')' → logprob: -16.250165939331055
    10. '   ' → logprob: -16.500165939331055

Token 48: '}')
' (ID: 70168)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.20459921658039093
    2. '}')' → logprob: -1.7045992612838745
    3. '}'' → logprob: -5.954599380493164
    4. '}' → logprob: -7.829599380493164
    5. ''})' → logprob: -8.704599380493164
    6. '')' → logprob: -11.329599380493164
    7. '"}' → logprob: -12.954599380493164
    8. ' '}' → logprob: -13.204599380493164
    9. '('' → logprob: -13.329599380493164
    10. '}")' → logprob: -13.454599380493164

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017672087997198105
    2. '    
' → logprob: -4.767672061920166
    3. 'return' → logprob: -5.892672061920166
    4. '```' → logprob: -6.517672061920166
    5. '
' → logprob: -7.267672061920166
    6. ' return' → logprob: -7.392672061920166
    7. ')' → logprob: -7.392672061920166
    8. 'so' → logprob: -7.892672061920166
    9. '  
' → logprob: -8.142672538757324
    10. '  ' → logprob: -8.267672538757324

Token 50: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2645973563194275
    2. 'return' → logprob: -2.1395974159240723
    3. ' return' → logprob: -3.2645974159240723
    4. 'so' (adapté à ' so') → logprob: -4.264597415924072
    5. '	return' → logprob: -4.639597415924072
    6. 'sq' → logprob: -4.639597415924072
    7. 's' → logprob: -4.764597415924072
    8. ' ' → logprob: -4.889597415924072
    9. '    
' → logprob: -5.264597415924072
    10. '```' → logprob: -5.389597415924072

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0633520558476448
    2. ' =' → logprob: -2.813352108001709
    3. 'u' → logprob: -7.688352108001709
    4. 'o' → logprob: -7.938352108001709
    5. '	' → logprob: -9.31335163116455
    6. '=open' → logprob: -9.43835163116455
    7. 'f' → logprob: -9.56335163116455
    8. '[]' → logprob: -9.68835163116455
    9. '   ' → logprob: -9.93835163116455
    10. '_' → logprob: -10.31335163116455

Token 52: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4298687279224396
    2. ' line' → logprob: -1.0548686981201172
    3. '[line' → logprob: -6.929868698120117
    4. 's' → logprob: -10.054868698120117
    5. '	line' → logprob: -10.304868698120117
    6. ''s' → logprob: -10.554868698120117
    7. '=line' → logprob: -10.554868698120117
    8. ''' → logprob: -11.304868698120117
    9. '[' → logprob: -11.429868698120117
    10. ' '['' → logprob: -11.804868698120117

Token 53: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -9.960946772480384e-05
    2. '.' → logprob: -9.250099182128906
    3. ' .' → logprob: -13.625099182128906
    4. '.find' → logprob: -14.000099182128906
    5. 'count' → logprob: -14.500099182128906
    6. ''.' → logprob: -14.625099182128906
    7. '.index' → logprob: -15.625099182128906
    8. '   ' → logprob: -16.625099182128906
    9. '.findall' → logprob: -16.750099182128906
    10. '.Count' → logprob: -16.875099182128906

Token 54: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.762356209335849e-05
    2. ''' → logprob: -10.87503719329834
    3. '(' → logprob: -11.87503719329834
    4. '('[' → logprob: -11.87503719329834
    5. '("[' → logprob: -14.00003719329834
    6. '('{' → logprob: -14.25003719329834
    7. ''s' → logprob: -14.87503719329834
    8. '['' → logprob: -15.00003719329834
    9. '('.')' → logprob: -15.00003719329834
    10. '('<' → logprob: -15.50003719329834

Token 55: '['' (ID: 1181)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002679463941603899
    2. '']' → logprob: -6.002679347991943
    3. '')' → logprob: -8.627679824829102
    4. '['' → logprob: -10.752679824829102
    5. ''s' → logprob: -13.877679824829102
    6. ']' → logprob: -14.002679824829102
    7. ')' → logprob: -14.377679824829102
    8. '('' → logprob: -14.752679824829102
    9. ''S' → logprob: -15.877679824829102
    10. ''[' → logprob: -16.2526798248291

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007501212880015373
    2. ']' → logprob: -5.007501125335693
    3. '])' → logprob: -7.757501125335693
    4. '']' → logprob: -8.632501602172852
    5. '')' → logprob: -9.632501602172852
    6. '   ' → logprob: -9.757501602172852
    7. ')]' → logprob: -10.757501602172852
    8. ')
' → logprob: -10.882501602172852
    9. '[' → logprob: -12.007501602172852
    10. '）' → logprob: -12.882501602172852

Token 57: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5828314423561096
    2. '   ' → logprob: -1.4578313827514648
    3. ' ' → logprob: -2.082831382751465
    4. 's' → logprob: -3.207831382751465
    5. '']' → logprob: -4.207831382751465
    6. ')' → logprob: -4.832831382751465
    7. '  ' → logprob: -5.082831382751465
    8. '  
' → logprob: -5.582831382751465
    9. ' ]' → logprob: -5.707831382751465
    10. '<|end|>' → logprob: -5.707831382751465

Token 58: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' (adapté à ' sc') → logprob: -0.13355304300785065
    2. 's' → logprob: -2.1335530281066895
    3. ']' → logprob: -5.3835530281066895
    4. 'ss' → logprob: -6.7585530281066895
    5. ''s' → logprob: -8.008553504943848
    6. ' sc' → logprob: -8.508553504943848
    7. '']' → logprob: -9.008553504943848
    8. 'sq' → logprob: -9.133553504943848
    9. ' s' → logprob: -10.508553504943848
    10. ' ]' → logprob: -11.383553504943848

Token 59: ' =' (ID: 314)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12347764521837234
    2. '=' → logprob: -2.2484776973724365
    3. 'ount' → logprob: -5.373477458953857
    4. '']' → logprob: -5.998477458953857
    5. ']=' → logprob: -6.123477458953857
    6. 's' → logprob: -7.873477458953857
    7. ' =' → logprob: -7.873477458953857
    8. ')' → logprob: -7.998477458953857
    9. '_' → logprob: -10.373477935791016
    10. '.' → logprob: -10.873477935791016

Token 60: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.31331703066825867
    2. 'line' → logprob: -1.313317060470581
    3. ']' → logprob: -10.18831729888916
    4. '[line' → logprob: -11.68831729888916
    5. '']' → logprob: -12.68831729888916
    6. '	line' → logprob: -13.43831729888916
    7. '(line' → logprob: -13.68831729888916
    8. '=line' → logprob: -14.06331729888916
    9. ' ]' → logprob: -14.31331729888916
    10. ' ' → logprob: -14.43831729888916

Token 61: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0004390134708955884
    2. '.' → logprob: -7.750439167022705
    3. ''.' → logprob: -12.750438690185547
    4. ' .' → logprob: -13.625438690185547
    5. ').' → logprob: -14.000438690185547
    6. 'count' → logprob: -14.000438690185547
    7. '.sc' → logprob: -14.750438690185547
    8. '.find' → logprob: -14.875438690185547
    9. '.index' → logprob: -15.125438690185547
    10. '.Count' → logprob: -15.500438690185547

Token 62: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.625016212463379
    3. ''' → logprob: -12.000016212463379
    4. '']' → logprob: -13.875016212463379
    5. '('[' → logprob: -15.375016212463379
    6. ']' → logprob: -16.875017166137695
    7. ''s' → logprob: -16.875017166137695
    8. ''S' → logprob: -17.250017166137695
    9. '('.')' → logprob: -17.500017166137695
    10. '(',' → logprob: -17.750017166137695

Token 63: ']')
' (ID: 145172)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.008615872822701931
    2. ']' → logprob: -4.758615970611572
    3. ']'' → logprob: -14.383615493774414
    4. '"]' → logprob: -14.633615493774414
    5. ''' → logprob: -15.008615493774414
    6. '')' → logprob: -16.508615493774414
    7. ''])' → logprob: -18.008615493774414
    8. ')' → logprob: -18.383615493774414
    9. ''s' → logprob: -18.383615493774414
    10. ' ']' → logprob: -18.508615493774414

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01320011354982853
    2. '
' → logprob: -4.763200283050537
    3. '    
' → logprob: -6.138200283050537
    4. '<|end|>' → logprob: -7.513200283050537
    5. ')' → logprob: -7.763200283050537
    6. '\n' → logprob: -8.013199806213379
    7. ' return' → logprob: -8.013199806213379
    8. '  
' → logprob: -8.263199806213379
    9. 'return' → logprob: -9.263199806213379
    10. '	return' → logprob: -9.388199806213379

Token 65: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11232923716306686
    2. '
' → logprob: -2.7373292446136475
    3. 'return' (adapté à ' return') → logprob: -3.9873292446136475
    4. '    
' → logprob: -4.612329006195068
    5. ' return' → logprob: -4.737329006195068
    6. '<|end|>' → logprob: -6.862329006195068
    7. '  
' → logprob: -7.112329006195068
    8. ' ' → logprob: -7.737329006195068
    9. ' 
' → logprob: -7.987329006195068
    10. '```' → logprob: -8.362329483032227

Token 66: ' ro' (ID: 974)
  Prédit: '(ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ro' → logprob: -0.33135655522346497
    2. ' ro' → logprob: -1.4563565254211426
    3. ' (' → logprob: -3.3313565254211426
    4. 'ro' → logprob: -4.456356525421143
    5. '(' → logprob: -6.706356525421143
    6. ' {'' → logprob: -9.3313570022583
    7. ' ' → logprob: -9.4563570022583
    8. '{'' → logprob: -9.5813570022583
    9. '   ' → logprob: -10.2063570022583
    10. '_ro' → logprob: -10.2063570022583

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19152887165546417
    2. ' ,' → logprob: -2.316528797149658
    3. '+' → logprob: -2.816528797149658
    4. ' +' → logprob: -4.441528797149658
    5. ' ' → logprob: -5.941528797149658
    6. ' -' → logprob: -7.566528797149658
    7. '  ' → logprob: -8.316529273986816
    8. '<|end|>' → logprob: -8.566529273986816
    9. '-' → logprob: -8.691529273986816
    10. ')' → logprob: -9.691529273986816

Token 68: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.3868737816810608
    2. ' rc' → logprob: -1.136873722076416
    3. '(rc' → logprob: -13.011874198913574
    4. '	rc' → logprob: -15.511874198913574
    5. '_rc' → logprob: -15.761874198913574
    6. ' ' → logprob: -15.761874198913574
    7. '.rc' → logprob: -17.261873245239258
    8. ' ' → logprob: -18.011873245239258
    9. 'Rc' → logprob: -18.886873245239258
    10. 'rpc' → logprob: -19.761873245239258

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029589756741188467
    2. ',
' → logprob: -8.875295639038086
    3. '<|end|>' → logprob: -9.250295639038086
    4. ' ,' → logprob: -10.125295639038086
    5. ')' → logprob: -12.375295639038086
    6. ',...' → logprob: -13.375295639038086
    7. ',line' → logprob: -13.625295639038086
    8. ',None' → logprob: -13.750295639038086
    9. '+' → logprob: -14.000295639038086
    10. ',r' → logprob: -14.000295639038086

Token 70: ' co' (ID: 1407)
  Prédit: ' co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' co' → logprob: -0.04858827963471413
    2. 'co' → logprob: -3.048588275909424
    3. '(co' → logprob: -14.423588752746582
    4. ' ' → logprob: -15.173588752746582
    5. '_co' → logprob: -18.173587799072266
    6. '   ' → logprob: -18.298587799072266
    7. '  ' → logprob: -18.423587799072266
    8. ' ' → logprob: -18.548587799072266
    9. 'c' → logprob: -18.798587799072266
    10. '.co' → logprob: -19.173587799072266

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.269565634895116e-05
    2. ' ,' → logprob: -9.625092506408691
    3. ',c' → logprob: -11.000092506408691
    4. '<|end|>' → logprob: -12.375092506408691
    5. ',s' → logprob: -13.625092506408691
    6. '`,' → logprob: -14.125092506408691
    7. '‌,' → logprob: -14.750092506408691
    8. ')' → logprob: -15.125092506408691
    9. ',None' → logprob: -15.125092506408691
    10. '```' → logprob: -15.250092506408691

Token 72: ' cc' (ID: 22988)
  Prédit: ' cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.014167741872370243
    2. 'cc' → logprob: -4.264167785644531
    3. '	cc' → logprob: -13.139167785644531
    4. '(cc' → logprob: -13.514167785644531
    5. '_cc' → logprob: -15.139167785644531
    6. ' ' → logprob: -15.139167785644531
    7. ' ' → logprob: -16.13916778564453
    8. ' c' → logprob: -16.51416778564453
    9. 'c' → logprob: -16.51416778564453
    10. ' CC' → logprob: -17.26416778564453

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.317247167928144e-05
    2. ' ,' → logprob: -10.625093460083008
    3. ',
' → logprob: -10.875093460083008
    4. ',s' → logprob: -11.500093460083008
    5. '`,' → logprob: -11.625093460083008
    6. '',' → logprob: -12.000093460083008
    7. ',\
' → logprob: -12.250093460083008
    8. '','' → logprob: -12.625093460083008
    9. '```' → logprob: -12.750093460083008
    10. '   ' → logprob: -12.875093460083008

Token 74: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.02324605919420719
    2. 'so' → logprob: -3.7732460498809814
    3. 's' → logprob: -15.023245811462402
    4. '_so' → logprob: -15.648245811462402
    5. ' ' → logprob: -16.27324676513672
    6. ' ' → logprob: -16.64824676513672
    7. ' soi' → logprob: -18.02324676513672
    8. 'So' → logprob: -18.14824676513672
    9. ' sc' → logprob: -18.39824676513672
    10. '```' → logprob: -18.52324676513672

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012676131445914507
    2. ' ,' → logprob: -6.876267433166504
    3. ' sc' → logprob: -9.126267433166504
    4. 'sc' → logprob: -9.376267433166504
    5. ',s' → logprob: -11.626267433166504
    6. '(sc' → logprob: -12.001267433166504
    7. '_sc' → logprob: -12.376267433166504
    8. ')' → logprob: -12.376267433166504
    9. '.sc' → logprob: -12.876267433166504
    10. '`,' → logprob: -13.126267433166504

Token 76: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.038042984902858734
    2. ' sc' → logprob: -3.2880430221557617
    3. '(sc' → logprob: -13.663043022155762
    4. '_sc' → logprob: -15.663043022155762
    5. '	sc' → logprob: -16.288042068481445
    6. '=sc' → logprob: -17.788042068481445
    7. '.sc' → logprob: -17.788042068481445
    8. 'scp' → logprob: -17.913042068481445
    9. ' ' → logprob: -18.413042068481445
    10. '-sc' → logprob: -18.913042068481445

Token 77: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08219737559556961
    2. '<|end|>' → logprob: -2.957197427749634
    3. '```' → logprob: -5.082197189331055
    4. '#' → logprob: -5.457197189331055
    5. '' → logprob: -5.832197189331055
    6. 'def' → logprob: -5.832197189331055
    7. '\n' → logprob: -6.207197189331055
    8. 'newline' → logprob: -6.332197189331055
    9. ' 
' → logprob: -6.457197189331055
    10. '\' → logprob: -6.582197189331055

Token 79: ' solve' (ID: 17722)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.0622812509536743
    2. ' check' → logprob: -1.1872812509536743
    3. ' balance' → logprob: -2.0622811317443848
    4. ' balanced' → logprob: -2.6872811317443848
    5. ' process' → logprob: -3.3122811317443848
    6. ' is' → logprob: -3.6872811317443848
    7. ' parse' → logprob: -3.8122811317443848
    8. ' space' → logprob: -4.062281131744385
    9. ' analyze' → logprob: -4.187281131744385
    10. ' find' → logprob: -4.812281131744385

Token 80: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011526623740792274
    2. '_' → logprob: -5.011526584625244
    3. '(line' → logprob: -6.011526584625244
    4. '():' → logprob: -6.511526584625244
    5. '```' → logprob: -8.636527061462402
    6. '(_' → logprob: -9.636527061462402
    7. '_(' → logprob: -9.761527061462402
    8. '(:' → logprob: -10.011527061462402
    9. '('' → logprob: -10.261527061462402
    10. ' (' → logprob: -10.261527061462402

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008787579834461212
    2. ' line' → logprob: -5.758787631988525
    3. '    ' → logprob: -7.008787631988525
    4. ' n' → logprob: -7.133787631988525
    5. ' ' → logprob: -7.258787631988525
    6. ' input' → logprob: -7.383787631988525
    7. ' readline' → logprob: -7.383787631988525
    8. 'n' → logprob: -7.508787631988525
    9. '    
' → logprob: -8.258787155151367
    10. ' import' → logprob: -8.883787155151367

Token 82: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8697424530982971
    2. '   ' → logprob: -1.3697423934936523
    3. ' import' → logprob: -1.6197423934936523
    4. ' line' → logprob: -2.6197423934936523
    5. 'n' → logprob: -4.369742393493652
    6. ' input' → logprob: -4.369742393493652
    7. ' lines' → logprob: -4.494742393493652
    8. 'import' (adapté à ' import') → logprob: -4.744742393493652
    9. ' open' → logprob: -6.619742393493652
    10. ' total' → logprob: -6.744742393493652

Token 83: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0005750744021497667
    2. 'sys' → logprob: -7.500575065612793
    3. '	sys' → logprob: -11.625575065612793
    4. '=sys' → logprob: -11.625575065612793
    5. ' ' → logprob: -13.500575065612793
    6. ' math' → logprob: -13.625575065612793
    7. '_' → logprob: -14.750575065612793
    8. '(sys' → logprob: -15.125575065612793
    9. ' itertools' → logprob: -15.250575065612793
    10. 's' → logprob: -15.375575065612793

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04899744316935539
    2. '    
' → logprob: -3.423997402191162
    3. '
' → logprob: -4.423997402191162
    4. '.readline' → logprob: -7.423997402191162
    5. ' for' → logprob: -7.798997402191162
    6. ' readline' → logprob: -7.798997402191162
    7. 'data' → logprob: -8.17399787902832
    8. '\n' → logprob: -8.17399787902832
    9. 'for' → logprob: -8.54899787902832
    10. ' line' → logprob: -8.67399787902832

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042600384913384914
    2. '    
' → logprob: -5.879260063171387
    3. '
' → logprob: -7.004260063171387
    4. 'n' → logprob: -8.379260063171387
    5. 'for' → logprob: -9.129260063171387
    6. ' for' → logprob: -9.754260063171387
    7. 'data' → logprob: -10.754260063171387
    8. '    ' → logprob: -10.754260063171387
    9. ' line' → logprob: -10.879260063171387
    10. ' lines' → logprob: -11.004260063171387

Token 86: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006615311373025179
    2. '    
' → logprob: -6.506615161895752
    3. ' lines' → logprob: -6.631615161895752
    4. '
' → logprob: -7.131615161895752
    5. 'n' → logprob: -7.256615161895752
    6. 'for' → logprob: -7.381615161895752
    7. 'input' (adapté à ' input') → logprob: -7.631615161895752
    8. 'lines' → logprob: -8.38161563873291
    9. ' input' → logprob: -8.50661563873291
    10. 'total' → logprob: -9.00661563873291

Token 87: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02668793313205242
    2. '_line' → logprob: -4.776688098907471
    3. '_lines' → logprob: -4.901688098907471
    4. '.' → logprob: -6.026688098907471
    5. '().' → logprob: -6.151688098907471
    6. ' =' → logprob: -6.276688098907471
    7. '_data' → logprob: -6.401688098907471
    8. '=' → logprob: -6.651688098907471
    9. '.readline' → logprob: -8.401687622070312
    10. '(' → logprob: -8.526687622070312

Token 88: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.006722233723849058
    2. 'sys' → logprob: -5.006722450256348
    3. '	sys' → logprob: -12.631722450256348
    4. '=sys' → logprob: -12.631722450256348
    5. '(sys' → logprob: -15.506722450256348
    6. ' ' → logprob: -16.63172149658203
    7. 'input' → logprob: -18.38172149658203
    8. ' input' → logprob: -18.50672149658203
    9. '_sys' → logprob: -18.63172149658203
    10. '/sys' → logprob: -19.75672149658203

Token 89: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.1626599133014679
    2. '.' → logprob: -1.9126598834991455
    3. '.readline' → logprob: -6.662660121917725
    4. '.stdout' → logprob: -7.037660121917725
    5. '.argv' → logprob: -9.162659645080566
    6. '.std' → logprob: -9.537659645080566
    7. ' .' → logprob: -10.787659645080566
    8. '.input' → logprob: -11.037659645080566
    9. 'stdin' → logprob: -11.162659645080566
    10. '._' → logprob: -11.287659645080566

Token 90: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00222721416503191
    2. '.read' → logprob: -6.752227306365967
    3. '.readlines' → logprob: -7.752227306365967
    4. 'read' → logprob: -7.877227306365967
    5. '.' → logprob: -8.502226829528809
    6. 'reader' → logprob: -10.752226829528809
    7. 'buffer' → logprob: -11.752226829528809
    8. '_reader' → logprob: -12.127226829528809
    9. '.buffer' → logprob: -12.877226829528809
    10. '_read' → logprob: -13.002226829528809

Token 91: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006298468913882971
    2. '    
' → logprob: -5.131298542022705
    3. '()' → logprob: -8.756298065185547
    4. 'n' → logprob: -9.756298065185547
    5. '
' → logprob: -10.256298065185547
    6. ' n' → logprob: -10.631298065185547
    7. '(' → logprob: -10.881298065185547
    8. '  
' → logprob: -11.256298065185547
    9. ' while' → logprob: -11.506298065185547
    10. '(n' → logprob: -11.881298065185547

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033138059079647064
    2. 'n' → logprob: -3.9081380367279053
    3. '    
' → logprob: -4.533138275146484
    4. '
' → logprob: -6.783138275146484
    5. ' n' → logprob: -8.033138275146484
    6. '(n' → logprob: -8.908138275146484
    7. '	n' → logprob: -9.658138275146484
    8. '  
' → logprob: -10.908138275146484
    9. '   
' → logprob: -11.533138275146484
    10. 'while' → logprob: -11.658138275146484

Token 93: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3001973330974579
    2. 'n' → logprob: -2.0501973628997803
    3. ' n' → logprob: -2.0501973628997803
    4. ' t' → logprob: -7.300197124481201
    5. 't' → logprob: -7.675197124481201
    6. ' T' → logprob: -8.30019760131836
    7. '    
' → logprob: -8.42519760131836
    8. '	n' → logprob: -9.67519760131836
    9. '    ' → logprob: -10.05019760131836
    10. 'T' → logprob: -10.17519760131836

Token 94: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03412692993879318
    2. 'True' → logprob: -3.4091269969940186
    3. '(True' → logprob: -7.6591267585754395
    4. ' ' → logprob: -12.409127235412598
    5. ' line' → logprob: -13.284127235412598
    6. '=True' → logprob: -13.659127235412598
    7. ' Tru' → logprob: -13.909127235412598
    8. '1' → logprob: -14.909127235412598
    9. ' (' → logprob: -15.034127235412598
    10. '  ' → logprob: -15.909127235412598

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01841283217072487
    2. '():' → logprob: -4.018413066864014
    3. '):' → logprob: -9.143412590026855
    4. ':
' → logprob: -9.893412590026855
    5. ' :' → logprob: -10.018412590026855
    6. ',' → logprob: -10.643412590026855
    7. '(' → logprob: -11.143412590026855
    8. '():
' → logprob: -11.643412590026855
    9. '   ' → logprob: -12.268412590026855
    10. ':**' → logprob: -12.893412590026855

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003767424263060093
    2. '   ' → logprob: -6.128767490386963
    3. '    ' → logprob: -6.753767490386963
    4. ' ' → logprob: -9.003767013549805
    5. '      ' → logprob: -9.503767013549805
    6. '        
' → logprob: -10.253767013549805
    7. '  ' → logprob: -10.253767013549805
    8. '     ' → logprob: -10.628767013549805
    9. '<|end|>' → logprob: -10.628767013549805
    10. '    
' → logprob: -11.128767013549805

Token 97: ' p' (ID: 275)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.15013962984085083
    2. '       ' → logprob: -2.025139570236206
    3. 'line' → logprob: -5.275139808654785
    4. '   ' → logprob: -6.275139808654785
    5. ' l' → logprob: -8.275139808654785
    6. '	line' → logprob: -10.150139808654785
    7. '    ' → logprob: -10.400139808654785
    8. ' ' → logprob: -11.150139808654785
    9. '(line' → logprob: -11.275139808654785
    10. '        ' → logprob: -11.400139808654785

Token 98: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3748084008693695
    2. 'ar' → logprob: -2.2498083114624023
    3. '=' → logprob: -2.4998083114624023
    4. '=line' → logprob: -2.4998083114624023
    5. 'line' → logprob: -3.9998083114624023
    6. 'r' → logprob: -4.874808311462402
    7. '_line' → logprob: -5.124808311462402
    8. 'art' → logprob: -5.249808311462402
    9. 'l' → logprob: -6.499808311462402
    10. 'Line' → logprob: -7.374808311462402

Token 99: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0251175165176392
    2. 'l' → logprob: -1.4001175165176392
    3. ' q' → logprob: -2.0251173973083496
    4. ' l' → logprob: -2.7751173973083496
    5. 's' → logprob: -3.0251173973083496
    6. ' ' → logprob: -3.6501173973083496
    7. 't' → logprob: -4.02511739730835
    8. ' s' → logprob: -4.15011739730835
    9. ' t' → logprob: -4.27511739730835
    10. 'n' → logprob: -4.65011739730835

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12702375650405884
    2. '=' → logprob: -2.127023696899414
    3. ',' → logprob: -9.377023696899414
    4. '=line' → logprob: -12.127023696899414
    5. '=input' → logprob: -13.002023696899414
    6. ' ' → logprob: -13.252023696899414
    7. 'p' → logprob: -14.877023696899414
    8. '    ' → logprob: -15.002023696899414
    9. '   ' → logprob: -15.127023696899414
    10. '  ' → logprob: -15.752023696899414

Token 101: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5580354928970337
    2. ' map' → logprob: -1.4330354928970337
    3. 'input' → logprob: -2.058035373687744
    4. 'map' → logprob: -2.808035373687744
    5. ' ' → logprob: -7.933035373687744
    6. ' list' → logprob: -7.933035373687744
    7. 'list' → logprob: -8.433035850524902
    8. ' [' → logprob: -10.558035850524902
    9. '(input' → logprob: -10.558035850524902
    10. '[' → logprob: -11.058035850524902

Token 102: '(int' (ID: 2742)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6454511284828186
    2. '(' → logprob: -0.7704511284828186
    3. '(int' → logprob: -4.520451068878174
    4. '<|end|>' → logprob: -6.770451068878174
    5. '(str' → logprob: -9.020451545715332
    6. '(
' → logprob: -9.020451545715332
    7. '(p' → logprob: -9.395451545715332
    8. ' (' → logprob: -9.645451545715332
    9. '(lambda' → logprob: -9.645451545715332
    10. '(user' → logprob: -9.645451545715332

Token 103: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005592898931354284
    2. '(' → logprob: -5.8805928230285645
    3. ',input' → logprob: -6.3805928230285645
    4. ')' → logprob: -7.3805928230285645
    5. 'input' → logprob: -8.505593299865723
    6. ',' → logprob: -8.630593299865723
    7. ' (' → logprob: -10.880593299865723
    8. '=input' → logprob: -11.255593299865723
    9. '(
' → logprob: -11.630593299865723
    10. '<|end|>' → logprob: -11.630593299865723

Token 104: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47413548827171326
    2. ' input' → logprob: -0.9741355180740356
    3. ')' → logprob: -10.099135398864746
    4. '(input' → logprob: -11.724135398864746
    5. ',input' → logprob: -11.974135398864746
    6. '=input' → logprob: -13.349135398864746
    7. ' ' → logprob: -14.849135398864746
    8. '	input' → logprob: -14.974135398864746
    9. '[input' → logprob: -15.849135398864746
    10. '_input' → logprob: -15.849135398864746

Token 105: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011796315666288137
    2. '()' → logprob: -6.7511796951293945
    3. '('' → logprob: -12.751179695129395
    4. ' ().' → logprob: -13.001179695129395
    5. '().'' → logprob: -13.626179695129395
    6. '())' → logprob: -14.376179695129395
    7. ')' → logprob: -14.376179695129395
    8. '(' → logprob: -14.751179695129395
    9. ' ' → logprob: -15.001179695129395
    10. '()
' → logprob: -15.001179695129395

Token 106: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3927361071109772
    2. 'split' → logprob: -1.1427360773086548
    3. 'rstrip' → logprob: -5.142735958099365
    4. 'read' → logprob: -12.392736434936523
    5. 'decode' → logprob: -14.017736434936523
    6. ' strip' → logprob: -14.767736434936523
    7. '(split' → logprob: -15.517736434936523
    8. ' split' → logprob: -15.767736434936523
    9. '(strip' → logprob: -16.017736434936523
    10. 'replace' → logprob: -16.267736434936523

Token 107: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0051858508959412575
    2. '()' → logprob: -5.505186080932617
    3. ')' → logprob: -7.130186080932617
    4. '())
' → logprob: -8.755186080932617
    5. '()))' → logprob: -9.755186080932617
    6. '('' → logprob: -9.880186080932617
    7. '(' → logprob: -10.755186080932617
    8. ' ())' → logprob: -12.380186080932617
    9. '(','' → logprob: -12.630186080932617
    10. '())

' → logprob: -12.755186080932617

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25624778866767883
    2. '<|end|>' → logprob: -1.5062477588653564
    3. ' ' → logprob: -6.5062479972839355
    4. '<|end|>' → logprob: -6.7562479972839355
    5. '
' → logprob: -7.3812479972839355
    6. '        
' → logprob: -8.506247520446777
    7. '   ' → logprob: -8.506247520446777
    8. ' if' → logprob: -9.256247520446777
    9. ')' → logprob: -9.506247520446777
    10. '    ' → logprob: -9.631247520446777

Token 109: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04035605117678642
    2. '<|end|>' → logprob: -3.665356159210205
    3. ' if' → logprob: -4.540356159210205
    4. ' ' → logprob: -6.290356159210205
    5. 'if' (adapté à ' if') → logprob: -7.415356159210205
    6. '   ' → logprob: -8.665355682373047
    7. '<|end|>' → logprob: -8.915355682373047
    8. '        ' → logprob: -9.165355682373047
    9. '  ' → logprob: -9.540355682373047
    10. '      ' → logprob: -9.540355682373047

Token 110: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.10032356530427933
    2. 'p' → logprob: -2.3503236770629883
    3. '(p' → logprob: -9.350323677062988
    4. ' (' → logprob: -10.725323677062988
    5. '(' → logprob: -12.225323677062988
    6. ' ' → logprob: -12.850323677062988
    7. ' not' → logprob: -15.600323677062988
    8. ' ' → logprob: -15.850323677062988
    9. '	p' → logprob: -16.725322723388672
    10. '   ' → logprob: -17.475322723388672

Token 111: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12708044052124023
    2. '==' → logprob: -2.1270804405212402
    3. ' ' → logprob: -9.377080917358398
    4. ' <' → logprob: -10.127080917358398
    5. '<' → logprob: -11.502080917358398
    6. ' <=' → logprob: -12.252080917358398
    7. '=' → logprob: -12.752080917358398
    8. ' p' → logprob: -13.002080917358398
    9. ' =' → logprob: -13.377080917358398
    10. '<=' → logprob: -13.502080917358398

Token 112: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018930566729977727
    2. ' ' → logprob: -6.751893043518066
    3. 'q' → logprob: -7.251893043518066
    4. ' q' → logprob: -11.626893043518066
    5. '-' → logprob: -13.251893043518066
    6. 'and' → logprob: -14.001893043518066
    7. '   ' → logprob: -15.189393043518066
    8. ' -' → logprob: -15.439393043518066
    9. '

' → logprob: -15.751893043518066
    10. '=' → logprob: -15.814393043518066

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004801240866072476
    2. 'q' → logprob: -7.7504801750183105
    3. ' ' → logprob: -10.125479698181152
    4. '-' → logprob: -12.000479698181152
    5. 'and' → logprob: -13.375479698181152
    6. ' q' → logprob: -14.500479698181152
    7. ' -' → logprob: -15.250479698181152
    8. '   ' → logprob: -15.875479698181152
    9. '1' → logprob: -16.06298065185547
    10. ' and' → logprob: -16.87548065185547

Token 114: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018156498670578003
    2. 'and' → logprob: -4.0181565284729
    3. ' ' → logprob: -12.018156051635742
    4. '<|end|>' → logprob: -15.143156051635742
    5. '	and' → logprob: -16.268156051635742
    6. ' a' → logprob: -16.768156051635742
    7. '   ' → logprob: -16.893156051635742
    8. ' ' → logprob: -17.143156051635742
    9. '  ' → logprob: -18.018156051635742
    10. '    ' → logprob: -18.518156051635742

Token 115: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.47407791018486023
    2. ' q' → logprob: -0.9740779399871826
    3. '	q' → logprob: -14.224078178405762
    4. ' ' → logprob: -16.474077224731445
    5. '<|end|>' → logprob: -16.849077224731445
    6. ' ' → logprob: -17.224077224731445
    7. '0' → logprob: -18.224077224731445
    8. '    ' → logprob: -18.349077224731445
    9. '  ' → logprob: -18.724077224731445
    10. '&q' → logprob: -18.849077224731445

Token 116: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12740647792816162
    2. '==' → logprob: -2.127406597137451
    3. '<|end|>' → logprob: -7.752406597137451
    4. '<|end|>' → logprob: -11.252406120300293
    5. ')==' → logprob: -11.377406120300293
    6. ' ' → logprob: -11.627406120300293
    7. ')' → logprob: -12.502406120300293
    8. ']==' → logprob: -13.002406120300293
    9. ' =' → logprob: -13.002406120300293
    10. '=' → logprob: -13.502406120300293

Token 117: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026300758123397827
    2. ' ' → logprob: -3.6513006687164307
    3. '  ' → logprob: -15.526300430297852
    4. '   ' → logprob: -15.651300430297852
    5. '<|end|>' → logprob: -16.27630043029785
    6. ' ' → logprob: -17.08880043029785
    7. '۰' → logprob: -17.15130043029785
    8. 'o' → logprob: -17.90130043029785
    9. '    ' → logprob: -18.08880043029785
    10. '<|end|>' → logprob: -18.21380043029785

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -17.12548828125
    4. '  ' → logprob: -17.31298828125
    5. '۰' → logprob: -17.56298828125
    6. '<|end|>' → logprob: -17.75048828125
    7. 'o' → logprob: -18.25048828125
    8. ')' → logprob: -18.50048828125
    9. '```' → logprob: -18.81298828125
    10. '<|end|>' → logprob: -18.93798828125

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008579704910516739
    2. '           ' → logprob: -5.508579730987549
    3. ':
' → logprob: -5.508579730987549
    4. '       ' → logprob: -7.758579730987549
    5. ':return' → logprob: -12.25857925415039
    6. '   ' → logprob: -13.38357925415039
    7. ',' → logprob: -13.38357925415039
    8. '.' → logprob: -13.88357925415039
    9. '          ' → logprob: -14.50857925415039
    10. ' :' → logprob: -14.63357925415039

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003544118662830442
    2. '       ' → logprob: -8.625354766845703
    3. ':' → logprob: -9.125354766845703
    4. '		' → logprob: -11.250354766845703
    5. ':
' → logprob: -11.500354766845703
    6. '<|end|>' → logprob: -11.750354766845703
    7. '	       ' → logprob: -11.875354766845703
    8. ',' → logprob: -11.875354766845703
    9. '
' → logprob: -12.500354766845703
    10. '<|end|>' → logprob: -12.500354766845703

Token 121: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0447106771171093
    2. 'break' (adapté à ' break') → logprob: -3.419710636138916
    3. ' break' → logprob: -4.544710636138916
    4. 'return' → logprob: -9.044711112976074
    5. '       ' → logprob: -9.044711112976074
    6. '               ' → logprob: -9.169711112976074
    7. '	break' → logprob: -10.919711112976074
    8. ' return' → logprob: -12.169711112976074
    9. '   ' → logprob: -12.294711112976074
    10. '
' → logprob: -12.419711112976074

Token 122: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1922444999217987
    2. '
' → logprob: -1.817244529724121
    3. '        
' → logprob: -4.567244529724121
    4. '<|end|>' → logprob: -6.817244529724121
    5. '```' → logprob: -8.942244529724121
    6. '\n' → logprob: -9.442244529724121
    7. 'newline' → logprob: -9.567244529724121
    8. '<|end|>' → logprob: -9.567244529724121
    9. '  
' → logprob: -9.817244529724121
    10. '        ' → logprob: -9.942244529724121

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20361901819705963
    2. '
' → logprob: -1.7036190032958984
    3. '        
' → logprob: -6.203619003295898
    4. '
' → logprob: -9.078619003295898
    5. '```' → logprob: -10.328619003295898
    6. '   ' → logprob: -11.828619003295898
    7. '<|end|>' → logprob: -12.078619003295898
    8. '            
' → logprob: -12.703619003295898
    9. '    
' → logprob: -13.078619003295898
    10. '' → logprob: -13.328619003295898

Token 124: ' P' (ID: 398)
  Prédit: 'balance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'balance' → logprob: -0.9805682301521301
    2. 'stack' → logprob: -1.4805681705474854
    3. 'code' → logprob: -2.4805681705474854
    4. 'open' → logprob: -2.6055681705474854
    5. 'lines' → logprob: -2.8555681705474854
    6. 'depth' → logprob: -3.6055681705474854
    7. 'indent' → logprob: -3.7305681705474854
    8. 'buffer' → logprob: -3.7305681705474854
    9. 'total' → logprob: -4.1055684089660645
    10. 'br' → logprob: -4.2305684089660645

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2505329847335815
    2. '_lines' → logprob: -1.2505329847335815
    3. '=' → logprob: -2.375533103942871
    4. '_br' → logprob: -2.500533103942871
    5. '_stack' → logprob: -2.875533103942871
    6. '_count' → logprob: -3.375533103942871
    7. 'count' → logprob: -4.000533103942871
    8. 'lines' → logprob: -4.250533103942871
    9. '_line' → logprob: -4.500533103942871
    10. 'open' → logprob: -4.500533103942871

Token 126: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2608289420604706
    2. '[p' → logprob: -1.760828971862793
    3. '[' → logprob: -3.635828971862793
    4. '['' → logprob: -4.635828971862793
    5. '[]
' → logprob: -5.135828971862793
    6. '[P' → logprob: -5.135828971862793
    7. ' []' → logprob: -5.635828971862793
    8. '[q' → logprob: -6.135828971862793
    9. ' [' → logprob: -6.510828971862793
    10. '["' → logprob: -6.635828971862793

Token 127: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00018077615823131055
    2. ' input' → logprob: -8.875181198120117
    3. '(input' → logprob: -11.500181198120117
    4. ']' → logprob: -11.625181198120117
    5. '[]' → logprob: -12.000181198120117
    6. 'list' → logprob: -12.625181198120117
    7. '   ' → logprob: -13.000181198120117
    8. '[input' → logprob: -13.000181198120117
    9. '""' → logprob: -13.125181198120117
    10. ')' → logprob: -13.750181198120117

Token 128: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00038169484469108284
    2. '()' → logprob: -7.8753814697265625
    3. ' ().' → logprob: -13.625381469726562
    4. 'rstrip' → logprob: -15.875381469726562
    5. '()
' → logprob: -16.500381469726562
    6. '(' → logprob: -16.625381469726562
    7. '.rstrip' → logprob: -17.000381469726562
    8. ')' → logprob: -18.125381469726562
    9. '())' → logprob: -18.250381469726562
    10. '("").' → logprob: -18.375381469726562

Token 129: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.006715370807796717
    2. 'strip' → logprob: -5.006715297698975
    3. '.rstrip' → logprob: -18.256715774536133
    4. 'r' → logprob: -18.381715774536133
    5. 'rs' → logprob: -19.506715774536133
    6. ' strip' → logprob: -20.381715774536133
    7. 'replace' → logprob: -21.506715774536133
    8. 'read' → logprob: -22.006715774536133
    9. 'rst' → logprob: -22.381715774536133
    10. 'str' → logprob: -22.756715774536133

Token 130: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03875241056084633
    2. '('\' → logprob: -3.288752317428589
    3. '()\' → logprob: -8.163752555847168
    4. '())' → logprob: -8.788752555847168
    5. '()]' → logprob: -8.913752555847168
    6. '()
' → logprob: -9.413752555847168
    7. ')' → logprob: -10.913752555847168
    8. '('' → logprob: -11.288752555847168
    9. ''\' → logprob: -11.788752555847168
    10. ' ()' → logprob: -12.038752555847168

Token 131: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003357006062287837
    2. '\n' → logprob: -8.000335693359375
    3. 'r' → logprob: -15.500335693359375
    4. ')' → logprob: -17.625335693359375
    5. '')' → logprob: -17.625335693359375
    6. ')\' → logprob: -18.000335693359375
    7. '
' → logprob: -18.000335693359375
    8. 't' → logprob: -20.125335693359375
    9. ')n' → logprob: -20.125335693359375
    10. '\r' → logprob: -20.750335693359375

Token 132: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3265456557273865
    2. ')' → logprob: -1.3265457153320312
    3. '')]' → logprob: -4.576545715332031
    4. ')]' → logprob: -5.951545715332031
    5. '()' → logprob: -8.576545715332031
    6. ')\' → logprob: -10.326545715332031
    7. ']' → logprob: -11.201545715332031
    8. '']' → logprob: -11.451545715332031
    9. '')
' → logprob: -11.701545715332031
    10. ')'' → logprob: -11.701545715332031

Token 133: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25602513551712036
    2. 'for' → logprob: -1.5060250759124756
    3. ')' → logprob: -5.881025314331055
    4. '	for' → logprob: -7.381025314331055
    5. '()' → logprob: -8.256025314331055
    6. ' ' → logprob: -8.756025314331055
    7. '   ' → logprob: -9.006025314331055
    8. ']' → logprob: -9.256025314331055
    9. '
' → logprob: -11.631025314331055
    10. '    ' → logprob: -12.131025314331055

Token 134: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7344614863395691
    2. ' _' → logprob: -1.2344615459442139
    3. ' range' → logprob: -1.4844615459442139
    4. '_range' → logprob: -6.734461307525635
    5. 'range' → logprob: -6.734461307525635
    6. ' in' → logprob: -8.859461784362793
    7. ' ' → logprob: -9.859461784362793
    8. ' i' → logprob: -10.234461784362793
    9. ' xrange' → logprob: -11.984461784362793
    10. ' _
' → logprob: -14.109461784362793

Token 135: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001729444949887693
    2. ' range' → logprob: -6.501729488372803
    3. 'in' → logprob: -9.126729011535645
    4. ' in' → logprob: -9.501729011535645
    5. 'ange' → logprob: -11.126729011535645
    6. '(range' → logprob: -12.126729011535645
    7. '   ' → logprob: -12.376729011535645
    8. '_' → logprob: -12.376729011535645
    9. ' ' → logprob: -12.501729011535645
    10. '  ' → logprob: -12.501729011535645

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008617172949016094
    2. ' range' → logprob: -4.758617401123047
    3. '   ' → logprob: -13.383617401123047
    4. ' ' → logprob: -14.633617401123047
    5. '(range' → logprob: -15.258617401123047
    6. '  ' → logprob: -15.758617401123047
    7. '	range' → logprob: -16.633617401123047
    8. '    ' → logprob: -17.258617401123047
    9. 'p' → logprob: -17.633617401123047
    10. '`' → logprob: -18.133617401123047

Token 137: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.843177233240567e-05
    2. '(' → logprob: -11.125018119812012
    3. ' (' → logprob: -12.750018119812012
    4. '(q' → logprob: -15.375018119812012
    5. ' p' → logprob: -15.500018119812012
    6. '   ' → logprob: -15.875018119812012
    7. 'p' → logprob: -15.875018119812012
    8. '(P' → logprob: -17.250019073486328
    9. '	p' → logprob: -18.125019073486328
    10. ' ' → logprob: -18.625019073486328

Token 138: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.313314952421933e-05
    2. ')' → logprob: -10.000062942504883
    3. ')]
' → logprob: -11.375062942504883
    4. ']' → logprob: -13.000062942504883
    5. ' )' → logprob: -13.625062942504883
    6. ')]
' → logprob: -13.875062942504883
    7. '       ' → logprob: -15.000062942504883
    8. ')]

' → logprob: -15.000062942504883
    9. '   ' → logprob: -15.250062942504883
    10. '))' → logprob: -15.750062942504883

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016580400988459587
    2. '        
' → logprob: -6.626657962799072
    3. 'Q' → logprob: -9.25165843963623
    4. '      ' → logprob: -9.62665843963623
    5. '   ' → logprob: -9.87665843963623
    6. '        ' → logprob: -10.87665843963623
    7. '
' → logprob: -11.37665843963623
    8. '    ' → logprob: -11.62665843963623
    9. ' ' → logprob: -11.75165843963623
    10. '<|end|>' → logprob: -11.75165843963623

Token 140: ' Q' (ID: 1486)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.7271214723587036
    2. 'Q' (adapté à ' Q') → logprob: -1.9771214723587036
    3. 'balance' → logprob: -1.9771214723587036
    4. 'S' → logprob: -2.602121353149414
    5. '   ' → logprob: -3.602121353149414
    6. 'balanced' → logprob: -4.102121353149414
    7. 'open' → logprob: -4.352121353149414
    8. 'result' → logprob: -4.477121353149414
    9. 'answer' → logprob: -4.727121353149414
    10. '       ' → logprob: -4.727121353149414

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029752222821116447
    2. '=' → logprob: -3.529752254486084
    3. ' ' → logprob: -13.779751777648926
    4. '   ' → logprob: -16.154752731323242
    5. ')' → logprob: -16.529752731323242
    6. ' =
' → logprob: -16.654752731323242
    7. ' ' → logprob: -16.654752731323242
    8. ',' → logprob: -16.654752731323242
    9. '=[]' → logprob: -17.217252731323242
    10. '[' → logprob: -17.279752731323242

Token 142: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.24661080539226532
    2. '[input' → logprob: -1.8716107606887817
    3. '[' → logprob: -2.7466108798980713
    4. '[int' → logprob: -7.996610641479492
    5. '[line' → logprob: -9.121610641479492
    6. '[ind' → logprob: -10.996610641479492
    7. '[q' → logprob: -11.246610641479492
    8. '[p' → logprob: -11.621610641479492
    9. '[in' → logprob: -11.746610641479492
    10. '[i' → logprob: -12.121610641479492

Token 143: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.000492268183734268
    2. ' input' → logprob: -7.625492095947266
    3. '(input' → logprob: -13.000492095947266
    4. '[input' → logprob: -14.375492095947266
    5. '<input' → logprob: -15.000492095947266
    6. '   ' → logprob: -15.250492095947266
    7. '
' → logprob: -15.375492095947266
    8. ' ' → logprob: -15.750492095947266
    9. 'int' → logprob: -16.500492095947266
    10. '=input' → logprob: -16.750492095947266

Token 144: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.069664333248511e-05
    2. '()' → logprob: -11.000020980834961
    3. ' ().' → logprob: -12.750020980834961
    4. '.rstrip' → logprob: -15.250020980834961
    5. '(' → logprob: -15.375020980834961
    6. '.' → logprob: -16.25002098083496
    7. '()].' → logprob: -16.25002098083496
    8. '().'' → logprob: -16.50002098083496
    9. '.readline' → logprob: -16.75002098083496
    10. '.strip' → logprob: -17.00002098083496

Token 145: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -1.981667537620524e-06
    2. '.rstrip' → logprob: -13.250001907348633
    3. 'strip' → logprob: -15.750001907348633
    4. 'rl' → logprob: -19.250001907348633
    5. 'rcode' → logprob: -19.500001907348633
    6. 'rst' → logprob: -20.125001907348633
    7. 'rs' → logprob: -20.375001907348633
    8. 'r' → logprob: -20.625001907348633
    9. 'rr' → logprob: -20.750001907348633
    10. '```' → logprob: -20.875001907348633

Token 146: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -3.786196975852363e-05
    2. ''\' → logprob: -10.250038146972656
    3. '('' → logprob: -13.750038146972656
    4. '='\' → logprob: -14.625038146972656
    5. '(' → logprob: -15.500038146972656
    6. '("\' → logprob: -15.750038146972656
    7. '()' → logprob: -16.375038146972656
    8. '\n' → logprob: -16.500038146972656
    9. '+'\' → logprob: -16.500038146972656
    10. ' ('' → logprob: -17.000038146972656

Token 147: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011343709047650918
    2. '\n' → logprob: -9.125113487243652
    3. ''n' → logprob: -12.375113487243652
    4. '
' → logprob: -16.625112533569336
    5. '_n' → logprob: -17.750112533569336
    6. '(n' → logprob: -17.750112533569336
    7. ''\' → logprob: -18.000112533569336
    8. 'n't' → logprob: -18.375112533569336
    9. '	n' → logprob: -18.375112533569336
    10. '-n' → logprob: -18.750112533569336

Token 148: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.001195467310026288
    2. ')' → logprob: -6.751195430755615
    3. '\n' → logprob: -11.001195907592773
    4. ''' → logprob: -12.626195907592773
    5. ''\' → logprob: -13.751195907592773
    6. '")' → logprob: -14.126195907592773
    7. '')]' → logprob: -14.251195907592773
    8. '   ' → logprob: -14.376195907592773
    9. '')
' → logprob: -14.626195907592773
    10. 'for' → logprob: -15.251195907592773

Token 149: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7706590294837952
    2. 'for' → logprob: -1.1456589698791504
    3. ' for' → logprob: -1.6456589698791504
    4. '')' → logprob: -3.8956589698791504
    5. '()' → logprob: -6.14565896987915
    6. ''' → logprob: -6.77065896987915
    7. '   ' → logprob: -7.02065896987915
    8. ' ' → logprob: -7.14565896987915
    9. ''\' → logprob: -7.39565896987915
    10. '	for' → logprob: -8.895659446716309

Token 150: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5297533273696899
    2. '_' → logprob: -1.15475332736969
    3. ' _' → logprob: -2.7797532081604004
    4. 'range' → logprob: -3.4047532081604004
    5. '_range' → logprob: -7.2797532081604
    6. ' q' → logprob: -9.529753684997559
    7. '(range' → logprob: -9.904753684997559
    8. '_q' → logprob: -10.654753684997559
    9. '    ' → logprob: -13.654753684997559
    10. ' for' → logprob: -14.029753684997559

Token 151: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.030102653428912163
    2. ' range' → logprob: -3.5301027297973633
    3. '(range' → logprob: -8.030102729797363
    4. 'ange' → logprob: -11.405102729797363
    5. '_range' → logprob: -12.030102729797363
    6. '_' → logprob: -12.030102729797363
    7. '	range' → logprob: -13.030102729797363
    8. '(' → logprob: -15.280102729797363
    9. '   ' → logprob: -15.780102729797363
    10. 'for' → logprob: -15.780102729797363

Token 152: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026332346722483635
    2. ' range' → logprob: -3.651332378387451
    3. '(range' → logprob: -10.776331901550293
    4. 'for' → logprob: -11.776331901550293
    5. '   ' → logprob: -14.401331901550293
    6. '	range' → logprob: -14.526331901550293
    7. 'ange' → logprob: -14.776331901550293
    8. '       ' → logprob: -14.901331901550293
    9. '_' → logprob: -15.276331901550293
    10. ')' → logprob: -15.776331901550293

Token 153: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.11316834390163422
    2. 'q' → logprob: -2.238168239593506
    3. '(' → logprob: -8.988168716430664
    4. ' (' → logprob: -9.238168716430664
    5. ' q' → logprob: -10.238168716430664
    6. ')' → logprob: -10.738168716430664
    7. '
' → logprob: -10.988168716430664
    8. '   ' → logprob: -11.363168716430664
    9. ''q' → logprob: -11.863168716430664
    10. '	q' → logprob: -12.238168716430664

Token 154: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0012029698118567467
    2. ']' → logprob: -7.3762030601501465
    3. ')' → logprob: -7.8762030601501465
    4. ')]
' → logprob: -9.001202583312988
    5. '')]' → logprob: -9.876202583312988
    6. '   ' → logprob: -12.001202583312988
    7. ')]

' → logprob: -12.626202583312988
    8. '       ' → logprob: -12.876202583312988
    9. ')]
' → logprob: -12.876202583312988
    10. ' )' → logprob: -13.001202583312988

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0177466943860054
    2. '        
' → logprob: -4.142746925354004
    3. '
' → logprob: -7.142746925354004
    4. '<|end|>' → logprob: -7.642746925354004
    5. '        ' → logprob: -8.767746925354004
    6. '       
' → logprob: -10.017746925354004
    7. '        
        
' → logprob: -10.142746925354004
    8. ' cumulative' → logprob: -10.142746925354004
    9. '      ' → logprob: -10.267746925354004
    10. '        

' → logprob: -11.017746925354004

Token 156: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6238257884979248
    2. 'counts' → logprob: -1.7488257884979248
    3. 'count' → logprob: -2.748825788497925
    4. 'result' → logprob: -2.873825788497925
    5. 'indent' → logprob: -2.873825788497925
    6. 'br' → logprob: -2.998825788497925
    7. 'dp' → logprob: -2.998825788497925
    8. 'open' → logprob: -3.123825788497925
    9. 'res' → logprob: -3.498825788497925
    10. 'cnt' → logprob: -3.998825788497925

Token 157: ' Parse' (ID: 26701)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6738075017929077
    2. 'counts' → logprob: -1.9238075017929077
    3. 'br' → logprob: -2.2988076210021973
    4. 'ro' → logprob: -2.2988076210021973
    5. 'open' → logprob: -2.4238076210021973
    6. '#' → logprob: -2.5488076210021973
    7. 'count' → logprob: -3.0488076210021973
    8. 'indent' → logprob: -3.7988076210021973
    9. 'dp' → logprob: -4.048807621002197
    10. 'cnt' → logprob: -4.298807621002197

Token 158: ' the' (ID: 290)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.3527021408081055
    2. ' bracket' → logprob: -1.3527021408081055
    3. ' brackets' → logprob: -2.2277021408081055
    4. ' ro' → logprob: -2.7277021408081055
    5. ' indent' → logprob: -3.1027021408081055
    6. ' indentation' → logprob: -3.4777021408081055
    7. 'indent' → logprob: -3.4777021408081055
    8. ' counts' → logprob: -3.7277021408081055
    9. 'ro' → logprob: -4.1027021408081055
    10. ' stack' → logprob: -4.1027021408081055

Token 159: ' P' (ID: 398)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.29496797919273376
    2. ' brackets' → logprob: -2.4199678897857666
    3. ' P' → logprob: -2.5449678897857666
    4. 'P' → logprob: -3.4199678897857666
    5. ' code' → logprob: -4.919968128204346
    6. ' bracket' → logprob: -5.044968128204346
    7. 'counts' → logprob: -5.044968128204346
    8. 'code' → logprob: -5.294968128204346
    9. ' counts' → logprob: -5.419968128204346
    10. 'open' → logprob: -6.294968128204346

Token 160: ' program' (ID: 2193)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.49749937653541565
    2. 'lines' → logprob: -1.2474993467330933
    3. '_lines' → logprob: -4.247499465942383
    4. ' code' → logprob: -4.247499465942383
    5. ' array' → logprob: -4.872499465942383
    6. ' to' → logprob: -4.997499465942383
    7. ' list' → logprob: -4.997499465942383
    8. ' =' → logprob: -5.122499465942383
    9. 'strings' → logprob: -5.122499465942383
    10. ' bracket' → logprob: -5.372499465942383

Token 161: ' lines' (ID: 8698)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.109818235039711
    2. '
' → logprob: -3.23481822013855
    3. '        
' → logprob: -3.23481822013855
    4. 'counts' → logprob: -4.734818458557129
    5. 'stack' → logprob: -6.484818458557129
    6. ' counts' → logprob: -6.484818458557129
    7. '   ' → logprob: -6.609818458557129
    8. 'br' → logprob: -6.859818458557129
    9. ',' → logprob: -6.859818458557129
    10. 'indent' → logprob: -6.984818458557129

Token 162: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07413305342197418
    2. '        
' → logprob: -3.3241331577301025
    3. '
' → logprob: -3.4491331577301025
    4. ' counts' → logprob: -7.324132919311523
    5. '        ' → logprob: -7.574132919311523
    6. ',' → logprob: -7.699132919311523
    7. 'counts' → logprob: -7.824132919311523
    8. ' and' → logprob: -8.449132919311523
    9. '   ' → logprob: -8.449132919311523
    10. '    
' → logprob: -8.949132919311523

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23724211752414703
    2. 'indent' → logprob: -2.8622422218322754
    3. 'br' → logprob: -2.9872422218322754
    4. 'open' → logprob: -3.2372422218322754
    5. 'counts' → logprob: -4.362242221832275
    6. 'depth' → logprob: -4.737242221832275
    7. 'ro' → logprob: -5.237242221832275
    8. 'ind' → logprob: -5.362242221832275
    9. '   ' → logprob: -5.737242221832275
    10. 'brace' → logprob: -5.862242221832275

Token 164: ' #' (ID: 1069)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -1.27210533618927
    2. 'br' → logprob: -1.39710533618927
    3. 'p' → logprob: -1.52210533618927
    4. 'ro' → logprob: -2.6471052169799805
    5. 'stack' → logprob: -3.5221052169799805
    6. 'indent' → logprob: -3.6471052169799805
    7. 'depth' → logprob: -4.0221052169799805
    8. 'balance' → logprob: -4.6471052169799805
    9. 'P' → logprob: -4.6471052169799805
    10. 'po' → logprob: -4.7721052169799805

Token 165: ' For' (ID: 2214)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -1.5024720430374146
    2. 'stack' → logprob: -1.6274720430374146
    3. 'br' → logprob: -2.127471923828125
    4. 'indent' → logprob: -2.252471923828125
    5. 'depth' → logprob: -2.502471923828125
    6. 'ro' → logprob: -2.752471923828125
    7. 'balance' → logprob: -3.752471923828125
    8. ' bracket' → logprob: -4.127471923828125
    9. ' ro' → logprob: -4.252471923828125
    10. 'p' → logprob: -4.377471923828125

Token 166: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6350302696228027
    2. ' each' → logprob: -0.8850302696228027
    3. 'each' → logprob: -4.135030269622803
    4. ' p' → logprob: -4.260030269622803
    5. ' line' → logprob: -4.510030269622803
    6. ' _' → logprob: -4.635030269622803
    7. ' idx' → logprob: -6.885030269622803
    8. 'i' → logprob: -7.010030269622803
    9. '_each' → logprob: -7.135030269622803
    10. ' every' → logprob: -7.510030269622803

Token 167: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7698977589607239
    2. 'line' → logprob: -0.8948977589607239
    3. 'i' → logprob: -2.519897699356079
    4. ' i' → logprob: -3.394897699356079
    5. ' p' → logprob: -5.394897937774658
    6. 'p' → logprob: -5.769897937774658
    7. ' P' → logprob: -7.519897937774658
    8. ' indentation' → logprob: -7.519897937774658
    9. 'indent' → logprob: -7.519897937774658
    10. 'level' → logprob: -7.644897937774658

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047198425978422165
    2. '       ' → logprob: -3.172198534011841
    3. ' ,' → logprob: -6.422198295593262
    4. '   ' → logprob: -7.547198295593262
    5. '           ' → logprob: -7.797198295593262
    6. ':' → logprob: -8.047198295593262
    7. '        ' → logprob: -8.672198295593262
    8. ' in' → logprob: -8.797198295593262
    9. ' and' → logprob: -8.922198295593262
    10. 'tokens' → logprob: -9.422198295593262

Token 169: ' record' (ID: 3704)
  Prédit: ' ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ro' → logprob: -0.8981574773788452
    2. 'ro' → logprob: -2.0231575965881348
    3. '       ' → logprob: -2.1481575965881348
    4. ' open' → logprob: -2.3981575965881348
    5. 'br' → logprob: -3.1481575965881348
    6. 'open' → logprob: -3.5231575965881348
    7. ' brackets' → logprob: -3.7731575965881348
    8. '   ' → logprob: -4.023157596588135
    9. ' store' → logprob: -4.273157596588135
    10. ' indent' → logprob: -4.273157596588135

Token 170: ':
' (ID: 734)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.13785338401794434
    2. ' ro' → logprob: -2.5128533840179443
    3. '   ' → logprob: -4.512853622436523
    4. ' counts' → logprob: -4.637853622436523
    5. 'ro' → logprob: -4.762853622436523
    6. 'the' → logprob: -5.387853622436523
    7. ' its' → logprob: -5.637853622436523
    8. ' open' → logprob: -5.762853622436523
    9. ' their' → logprob: -6.637853622436523
    10. ' cumulative' → logprob: -6.637853622436523

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07806915789842606
    2. '        ' → logprob: -4.07806921005249
    3. ' tokens' → logprob: -4.45306921005249
    4. ' open' → logprob: -4.70306921005249
    5. ' indentation' → logprob: -4.82806921005249
    6. ' line' → logprob: -5.07806921005249
    7. ' lines' → logprob: -5.32806921005249
    8. ' counts' → logprob: -5.45306921005249
    9. ' (' → logprob: -6.45306921005249
    10. ' counters' → logprob: -6.70306921005249

Token 172: ' #' (ID: 1069)
  Prédit: ' ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ro' → logprob: -0.8100358843803406
    2. ' open' → logprob: -1.5600359439849854
    3. '       ' → logprob: -2.4350359439849854
    4. ' indentation' → logprob: -3.0600359439849854
    5. ' indent' → logprob: -3.3100359439849854
    6. '   ' → logprob: -3.5600359439849854
    7. ' br' → logprob: -3.6850359439849854
    8. ' counts' → logprob: -4.060035705566406
    9. ' ind' → logprob: -4.560035705566406
    10. '        ' → logprob: -4.935035705566406

Token 173: ' -' (ID: 533)
  Prédit: ' ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ro' → logprob: -0.7452277541160583
    2. '   ' → logprob: -2.370227813720703
    3. 'br' → logprob: -2.495227813720703
    4. ' open' → logprob: -2.495227813720703
    5. ' br' → logprob: -2.870227813720703
    6. 'ro' → logprob: -3.370227813720703
    7. 'open' → logprob: -3.620227813720703
    8. ' brackets' → logprob: -3.620227813720703
    9. '       ' → logprob: -3.995227813720703
    10. ' bracket' → logprob: -4.245227813720703

Token 174: ' indentation' (ID: 170733)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3563556671142578
    2. ' ro' → logprob: -2.231355667114258
    3. ' indentation' → logprob: -3.231355667114258
    4. ' open' → logprob: -3.356355667114258
    5. ' The' → logprob: -4.106355667114258
    6. ' its' → logprob: -4.106355667114258
    7. 'the' → logprob: -4.231355667114258
    8. ' indent' → logprob: -4.731355667114258
    9. ' counts' → logprob: -4.981355667114258
    10. ' total' → logprob: -5.231355667114258

Token 175: ' level' (ID: 3211)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.5431967377662659
    2. ' levels' → logprob: -2.043196678161621
    3. ' level' → logprob: -2.293196678161621
    4. '_level' → logprob: -2.543196678161621
    5. 'levels' → logprob: -2.668196678161621
    6. 'level' → logprob: -3.543196678161621
    7. ' =' → logprob: -5.543196678161621
    8. ',' → logprob: -5.918196678161621
    9. 's' → logprob: -6.043196678161621
    10. '_counts' → logprob: -7.918196678161621

Token 176: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1600819826126099
    2. ' =' → logprob: -1.2850819826126099
    3. ',' → logprob: -1.9100819826126099
    4. 'levels' → logprob: -2.5350818634033203
    5. ' levels' → logprob: -3.0350818634033203
    6. '_levels' → logprob: -3.1600818634033203
    7. ' (' → logprob: -3.2850818634033203
    8. 's' → logprob: -4.03508186340332
    9. '   ' → logprob: -4.78508186340332
    10. '        ' → logprob: -4.91008186340332

Token 177: 'number' (ID: 8096)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7561193704605103
    2. ' P' → logprob: -1.7561193704605103
    3. 'line' → logprob: -1.8811193704605103
    4. 'count' → logprob: -2.3811192512512207
    5. 'sum' → logprob: -2.5061192512512207
    6. 'P' → logprob: -2.8811192512512207
    7. 'len' → logprob: -2.8811192512512207
    8. ')' → logprob: -3.0061192512512207
    9. ' count' → logprob: -3.5061192512512207
    10. ' line' → logprob: -3.6311192512512207

Token 178: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.44406217336654663
    2. '=' → logprob: -1.8190622329711914
    3. ' of' → logprob: -1.9440622329711914
    4. '_of' → logprob: -3.1940622329711914
    5. ')' → logprob: -4.819062232971191
    6. '   ' → logprob: -6.944062232971191
    7. ' =' → logprob: -7.069062232971191
    8. 'Of' → logprob: -7.444062232971191
    9. '       ' → logprob: -7.944062232971191
    10. '=len' → logprob: -8.944062232971191

Token 179: ' leading' (ID: 8117)
  Prédit: 'leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leading' → logprob: -0.40185245871543884
    2. ' leading' → logprob: -1.2768524885177612
    3. '   ' → logprob: -3.7768523693084717
    4. 'spaces' → logprob: -5.026852607727051
    5. ')' → logprob: -5.276852607727051
    6. '.' → logprob: -5.526852607727051
    7. 'tabs' → logprob: -5.526852607727051
    8. 'dots' → logprob: -5.651852607727051
    9. ''' → logprob: -7.026852607727051
    10. '	' → logprob: -7.276852607727051

Token 180: ' periods' (ID: 27925)
  Prédit: ' spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spaces' → logprob: -1.0131094455718994
    2. 'spaces' → logprob: -1.1381094455718994
    3. 'tabs' → logprob: -2.1381094455718994
    4. ' tabs' → logprob: -2.5131094455718994
    5. ' dots' → logprob: -3.2631094455718994
    6. '   ' → logprob: -3.3881094455718994
    7. ''' → logprob: -4.38810920715332
    8. 'dots' → logprob: -5.01310920715332
    9. ''\' → logprob: -5.51310920715332
    10. '\t' → logprob: -5.76310920715332

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07760520279407501
    2. ''.' → logprob: -3.5776052474975586
    3. ' '.')' → logprob: -3.8276052474975586
    4. ')
' → logprob: -5.077605247497559
    5. '.)' → logprob: -5.452605247497559
    6. ' )' → logprob: -5.952605247497559
    7. '('.')' → logprob: -5.952605247497559
    8. ' '.'' → logprob: -6.077605247497559
    9. '('.' → logprob: -6.327605247497559
    10. '       ' → logprob: -6.952605247497559

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029784177895635366
    2. '<|end|>' → logprob: -6.252978324890137
    3. ',' → logprob: -7.877978324890137
    4. '        
' → logprob: -8.127978324890137
    5. '
' → logprob: -8.752978324890137
    6. '<|end|>' → logprob: -9.877978324890137
    7. '        ' → logprob: -9.877978324890137
    8. ')' → logprob: -10.377978324890137
    9. ' (' → logprob: -11.252978324890137
    10. '   ' → logprob: -11.502978324890137

Token 183: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012921433662995696
    2. 'def' → logprob: -7.3762922286987305
    3. '<|end|>' → logprob: -8.50129222869873
    4. ',' → logprob: -9.25129222869873
    5. '<|end|>' → logprob: -9.37629222869873
    6. '        ' → logprob: -9.87629222869873
    7. '        
' → logprob: -10.00129222869873
    8. '#' (adapté à ' #') → logprob: -10.12629222869873
    9. ')' → logprob: -10.62629222869873
    10. '   ' → logprob: -10.75129222869873

Token 184: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4538041055202484
    2. ' for' → logprob: -2.7038040161132812
    3. ' indentation' → logprob: -2.8288040161132812
    4. '#' → logprob: -2.9538040161132812
    5. '        ' → logprob: -2.9538040161132812
    6. 'indent' → logprob: -3.7038040161132812
    7. ' #' → logprob: -3.9538040161132812
    8. ' indent' → logprob: -4.453804016113281
    9. ' -' → logprob: -4.453804016113281
    10. 'for' → logprob: -4.578804016113281

Token 185: ' incremental' (ID: 101067)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.351726770401001
    2. ' bracket' → logprob: -2.476726770401001
    3. ' brackets' → logprob: -2.476726770401001
    4. ' counts' → logprob: -2.976726770401001
    5. 'counts' → logprob: -3.976726770401001
    6. 'open' → logprob: -4.226726531982422
    7. ' open' → logprob: -5.476726531982422
    8. 'ro' → logprob: -5.476726531982422
    9. ' ro' → logprob: -5.476726531982422
    10. ' the' → logprob: -5.601726531982422

Token 186: ' bracket' (ID: 59422)
  Prédit: '_br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_br' → logprob: -0.9607945680618286
    2. ' counts' → logprob: -1.7107945680618286
    3. '_counts' → logprob: -1.9607945680618286
    4. '_' → logprob: -3.335794448852539
    5. 'counts' → logprob: -3.460794448852539
    6. ' ro' → logprob: -3.835794448852539
    7. ' indentation' → logprob: -4.085794448852539
    8. '_spaces' → logprob: -4.085794448852539
    9. '_count' → logprob: -4.210794448852539
    10. ' brackets' → logprob: -4.210794448852539

Token 187: ' counts' (ID: 28991)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.7116340398788452
    2. 'counts' → logprob: -0.9616340398788452
    3. 's' → logprob: -2.8366341590881348
    4. 'count' → logprob: -3.2116341590881348
    5. ' counts' → logprob: -4.211634159088135
    6. '_count' → logprob: -4.586634159088135
    7. '_changes' → logprob: -7.586634159088135
    8. 'diff' → logprob: -7.961634159088135
    9. '_' → logprob: -8.086633682250977
    10. '_diff' → logprob: -8.211633682250977

Token 188: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0782313346862793
    2. '<|end|>' → logprob: -2.8282313346862793
    3. '
' → logprob: -5.328231334686279
    4. 'levels' → logprob: -6.078231334686279
    5. ',' → logprob: -6.453231334686279
    6. '<|end|>' → logprob: -6.703231334686279
    7. 'def' → logprob: -7.203231334686279
    8. ' levels' → logprob: -7.328231334686279
    9. 'ind' → logprob: -7.328231334686279
    10. 'indices' → logprob: -7.578231334686279

Token 189: 'open' (ID: 3843)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7684063911437988
    2. 'ro' → logprob: -1.1434063911437988
    3. '[' → logprob: -2.893406391143799
    4. '),' → logprob: -4.018406391143799
    5. 'count' → logprob: -4.143406391143799
    6. '(ro' → logprob: -4.268406391143799
    7. 'open' → logprob: -4.643406391143799
    8. ' ro' → logprob: -4.643406391143799
    9. '(' → logprob: -4.643406391143799
    10. '[],' → logprob: -4.893406391143799

Token 190: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4391133487224579
    2. 's' → logprob: -2.1891133785247803
    3. '_par' → logprob: -2.4391133785247803
    4. ' and' → logprob: -2.6891133785247803
    5. '_,' → logprob: -4.064113140106201
    6. '_count' → logprob: -4.064113140106201
    7. '_br' → logprob: -4.314113140106201
    8. '_counts' → logprob: -4.564113140106201
    9. '_parent' → logprob: -4.939113140106201
    10. '=' → logprob: -5.314113140106201

Token 191: ' close' (ID: 5263)
  Prédit: 'close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'close' → logprob: -0.128409281373024
    2. ' close' → logprob: -2.1284093856811523
    3. 'closed' → logprob: -6.753409385681152
    4. ' closed' → logprob: -9.003409385681152
    5. 'closing' → logprob: -9.503409385681152
    6. ' ' → logprob: -9.753409385681152
    7. ' closing' → logprob: -10.628409385681152
    8. ')' → logprob: -11.628409385681152
    9. '	close' → logprob: -11.753409385681152
    10. '  ' → logprob: -12.253409385681152

Token 192: ')
' (ID: 446)
  Prédit: ' parentheses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parentheses' → logprob: -0.5283613204956055
    2. ')' → logprob: -1.6533613204956055
    3. ' brackets' → logprob: -2.0283613204956055
    4. ' counts' → logprob: -3.0283613204956055
    5. ' and' → logprob: -4.6533613204956055
    6. 'counts' → logprob: -5.4033613204956055
    7. ' of' → logprob: -5.4033613204956055
    8. ' )' → logprob: -5.5283613204956055
    9. ' tokens' → logprob: -5.7783613204956055
    10. ' ones' → logprob: -6.4033613204956055

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004947323817759752
    2. '<|end|>' → logprob: -6.004947185516357
    3. '
' → logprob: -6.879947185516357
    4. ',' → logprob: -7.629947185516357
    5. '        
' → logprob: -8.629947662353516
    6. 'def' → logprob: -9.129947662353516
    7. ' lines' → logprob: -9.379947662353516
    8. ' for' → logprob: -9.379947662353516
    9. '<|end|>' → logprob: -9.504947662353516
    10. ' and' → logprob: -9.504947662353516

Token 194: ' indent' (ID: 37655)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02722635120153427
    2. ' indentation' → logprob: -4.777226448059082
    3. 'ind' → logprob: -5.277226448059082
    4. ' ind' → logprob: -5.402226448059082
    5. 'indent' (adapté à ' indent') → logprob: -5.777226448059082
    6. '
' → logprob: -6.152226448059082
    7. '        
' → logprob: -6.402226448059082
    8. ' indent' → logprob: -7.652226448059082
    9. 'levels' → logprob: -7.777226448059082
    10. '   ' → logprob: -8.652226448059082

Token 195: '_levels' (ID: 96899)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1232595220208168
    2. '_levels' → logprob: -2.4982595443725586
    3. ' =' → logprob: -3.4982595443725586
    4. 'ations' → logprob: -6.373259544372559
    5. '_level' → logprob: -6.998259544372559
    6. 'ation' → logprob: -7.873259544372559
    7. '_' → logprob: -8.498259544372559
    8. '=' → logprob: -8.748259544372559
    9. ',' → logprob: -10.748259544372559
    10. '   ' → logprob: -10.873259544372559

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008687375113368034
    2. '=' → logprob: -4.758687496185303
    3. ',' → logprob: -9.758687019348145
    4. '=[]' → logprob: -11.508687019348145
    5. '[]' → logprob: -13.883687019348145
    6. '[' → logprob: -13.883687019348145
    7. ' ,' → logprob: -14.133687019348145
    8. ' ' → logprob: -14.133687019348145
    9. '   ' → logprob: -15.133687019348145
    10. 's' → logprob: -15.258687019348145

Token 197: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006223124917596579
    2. '[' → logprob: -5.256223201751709
    3. ' []' → logprob: -7.006223201751709
    4. '[]
' → logprob: -10.63122272491455
    5. '[len' → logprob: -10.75622272491455
    6. '[int' → logprob: -11.50622272491455
    7. ' [' → logprob: -12.13122272491455
    8. '[p' → logprob: -12.38122272491455
    9. '[line' → logprob: -12.38122272491455
    10. '[list' → logprob: -12.50622272491455

Token 198: '       ' (ID: 309)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.6158178448677063
    2. '       ' → logprob: -1.4908177852630615
    3. ' bracket' → logprob: -1.7408177852630615
    4. ' for' → logprob: -4.615818023681641
    5. 'increment' → logprob: -4.865818023681641
    6. ' brackets' → logprob: -4.990818023681641
    7. 'for' → logprob: -4.990818023681641
    8. '   ' → logprob: -5.115818023681641
    9. 'increments' → logprob: -5.240818023681641
    10. ' increments' → logprob: -5.615818023681641

Token 199: ' ro' (ID: 974)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.050638578832149506
    2. 'indent' → logprob: -4.050638675689697
    3. 'increment' → logprob: -5.050638675689697
    4. 'c' → logprob: -5.050638675689697
    5. 'open' → logprob: -5.300638675689697
    6. ' bracket' → logprob: -6.050638675689697
    7. 'current' → logprob: -6.300638675689697
    8. 'for' → logprob: -6.425638675689697
    9. 'increments' → logprob: -7.050638675689697
    10. 'balance' → logprob: -7.175638675689697

Token 200: '_c' (ID: 1303)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0606865882873535
    2. '=' → logprob: -1.0606865882873535
    3. ' =' → logprob: -1.3106865882873535
    4. 's' → logprob: -3.8106865882873535
    5. '=[]' → logprob: -4.5606865882873535
    6. '_counts' → logprob: -6.8106865882873535
    7. '_levels' → logprob: -6.8106865882873535
    8. 'levels' → logprob: -7.5606865882873535
    9. ' ,' → logprob: -7.8106865882873535
    10. 'counts' → logprob: -7.8106865882873535

Token 201: 'um' (ID: 394)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.19448257982730865
    2. 'nts' → logprob: -2.8194825649261475
    3. '=' → logprob: -3.3194825649261475
    4. ' =' → logprob: -3.5694825649261475
    5. ',' → logprob: -3.8194825649261475
    6. 'nt' → logprob: -4.694482803344727
    7. 'ur' → logprob: -5.569482803344727
    8. 'ts' → logprob: -5.569482803344727
    9. 'um' → logprob: -5.944482803344727
    10. 'unts' → logprob: -6.444482803344727

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36671772599220276
    2. '=' → logprob: -1.6167176961898804
    3. 'um' → logprob: -3.11671781539917
    4. ',' → logprob: -3.36671781539917
    5. 'ount' → logprob: -3.86671781539917
    6. 'umsum' → logprob: -5.86671781539917
    7. 'umulative' → logprob: -6.74171781539917
    8. '   ' → logprob: -6.86671781539917
    9. '=[]' → logprob: -7.11671781539917
    10. 's' → logprob: -7.24171781539917

Token 203: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41871190071105957
    2. '0' → logprob: -1.4187119007110596
    3. '[]' → logprob: -2.4187119007110596
    4. 'rc' → logprob: -4.5437116622924805
    5. '[]
' → logprob: -8.79371166229248
    6. ' ' → logprob: -9.79371166229248
    7. ' [' → logprob: -10.16871166229248
    8. '[r' → logprob: -10.54371166229248
    9. ' []' → logprob: -11.04371166229248
    10. '[c' → logprob: -11.16871166229248

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ']' → logprob: -11.125024795532227
    3. ' ' → logprob: -11.625024795532227
    4. ')' → logprob: -15.625024795532227
    5. '[' → logprob: -16.125024795532227
    6. '[]' → logprob: -17.250024795532227
    7. '])' → logprob: -17.500024795532227
    8. '۰' → logprob: -17.500024795532227
    9. ')]' → logprob: -17.500024795532227
    10. ',' → logprob: -18.000024795532227

Token 205: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03811287134885788
    2. ']
' → logprob: -3.2881128787994385
    3. ']

' → logprob: -10.41311264038086
    4. ' ]' → logprob: -10.78811264038086
    5. ',' → logprob: -11.78811264038086
    6. ']
' → logprob: -12.03811264038086
    7. ' ]
' → logprob: -13.78811264038086
    8. '
' → logprob: -14.03811264038086
    9. '0' → logprob: -14.16311264038086
    10. ']*' → logprob: -14.16311264038086

Token 206: ' ' (ID: 220)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5605012774467468
    2. ',' → logprob: -1.4355013370513916
    3. '<|end|>' → logprob: -2.1855013370513916
    4. '
' → logprob: -3.4355013370513916
    5. 'for' → logprob: -3.5605013370513916
    6. '<|end|>' → logprob: -5.4355010986328125
    7. 'def' → logprob: -6.3105010986328125
    8. '[' → logprob: -6.5605010986328125
    9. '0' → logprob: -6.5605010986328125
    10. ')' → logprob: -6.6855010986328125

Token 207: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05473704636096954
    2. '#' → logprob: -4.304737091064453
    3. ',' → logprob: -4.304737091064453
    4. '<|end|>' → logprob: -4.804737091064453
    5. 'for' → logprob: -5.054737091064453
    6. 'while' → logprob: -5.429737091064453
    7. ']' → logprob: -5.554737091064453
    8. '<|end|>' → logprob: -6.554737091064453
    9. ';' → logprob: -7.429737091064453
    10. '[' → logprob: -7.929737091064453

Token 208: ' cumulative' (ID: 75628)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006732303183525801
    2. ']' → logprob: -5.13173246383667
    3. ')' → logprob: -8.006731986999512
    4. 'for' → logprob: -8.756731986999512
    5. '[' → logprob: -9.381731986999512
    6. 'def' → logprob: -9.881731986999512
    7. ' ' → logprob: -10.006731986999512
    8. 'ro' → logprob: -10.006731986999512
    9. '[]' → logprob: -10.756731986999512
    10. ' for' → logprob: -11.006731986999512

Token 209: ' counts' (ID: 28991)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.9452822804450989
    2. 'open' → logprob: -0.9452822804450989
    3. 'counts' → logprob: -2.820282220840454
    4. '_ro' → logprob: -3.445282220840454
    5. 'count' → logprob: -3.695282220840454
    6. 'r' → logprob: -4.070282459259033
    7. '(' → logprob: -4.570282459259033
    8. ')' → logprob: -4.695282459259033
    9. 'rop' → logprob: -4.820282459259033
    10. '(
' → logprob: -4.945282459259033

Token 210: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1505190134048462
    2. '<|end|>' → logprob: -1.4005190134048462
    3. ' of' → logprob: -1.7755190134048462
    4. 'of' → logprob: -3.2755188941955566
    5. '<|end|>' → logprob: -3.2755188941955566
    6. '       ' → logprob: -3.5255188941955566
    7. 'for' → logprob: -3.6505188941955566
    8. ' for' → logprob: -3.6505188941955566
    9. '[' → logprob: -3.6505188941955566
    10. '   ' → logprob: -3.7755188941955566

Token 211: ' open' (ID: 2494)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.6387156844139099
    2. ''' → logprob: -0.8887156844139099
    3. 'ro' → logprob: -3.8887157440185547
    4. ' '('' → logprob: -4.013715744018555
    5. 'open' → logprob: -4.513715744018555
    6. '(' → logprob: -5.388715744018555
    7. 'opening' → logprob: -6.638715744018555
    8. ' round' → logprob: -6.763715744018555
    9. '('' → logprob: -6.888715744018555
    10. 'rounded' → logprob: -7.638715744018555

Token 212: ' round' (ID: 7353)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.8443739414215088
    2. 'paren' → logprob: -0.8443739414215088
    3. 'par' → logprob: -3.219373941421509
    4. 'br' → logprob: -3.844373941421509
    5. '(' → logprob: -4.09437370300293
    6. 'ro' → logprob: -4.46937370300293
    7. 'round' → logprob: -4.59437370300293
    8. 'and' → logprob: -4.84437370300293
    9. '(
' → logprob: -4.96937370300293
    10. '_parent' → logprob: -5.21937370300293

Token 213: ' brackets' (ID: 73008)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.5895834565162659
    2. ' and' → logprob: -2.214583396911621
    3. 'parent' → logprob: -2.464583396911621
    4. 'paren' → logprob: -2.714583396911621
    5. ' brackets' → logprob: -2.714583396911621
    6. ' parentheses' → logprob: -2.839583396911621
    7. 'and' → logprob: -3.839583396911621
    8. ',' → logprob: -4.339583396911621
    9. '_br' → logprob: -4.964583396911621
    10. '_parent' → logprob: -5.714583396911621

Token 214: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6700095534324646
    2. ',' → logprob: -0.7950095534324646
    3. ',
' → logprob: -4.545009613037109
    4. '_ro' → logprob: -4.920009613037109
    5. '       ' → logprob: -5.045009613037109
    6. '<|end|>' → logprob: -6.045009613037109
    7. '
' → logprob: -6.170009613037109
    8. ')' → logprob: -6.420009613037109
    9. '[' → logprob: -6.920009613037109
    10. ' =' → logprob: -7.295009613037109

Token 216: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' (adapté à ' rc') → logprob: -0.0014169036876410246
    2. '   ' → logprob: -6.6264166831970215
    3. ' rc' → logprob: -10.12641716003418
    4. '       ' → logprob: -10.75141716003418
    5. '(rc' → logprob: -12.12641716003418
    6. '	rc' → logprob: -12.75141716003418
    7. 'rp' → logprob: -12.87641716003418
    8. 'rs' → logprob: -12.87641716003418
    9. '  ' → logprob: -13.25141716003418
    10. '0' → logprob: -13.37641716003418

Token 217: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.028307663276791573
    2. ' =' → logprob: -3.6533076763153076
    3. '=' → logprob: -6.4033074378967285
    4. '_' → logprob: -8.278307914733887
    5. ' _' → logprob: -10.403307914733887
    6. ' ' → logprob: -10.653307914733887
    7. '[' → logprob: -11.028307914733887
    8. ')' → logprob: -11.778307914733887
    9. '=[' → logprob: -13.403307914733887
    10. ']' → logprob: -13.528307914733887

Token 218: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.008967655710875988
    2. '[' → logprob: -4.883967876434326
    3. '=' → logprob: -7.258967876434326
    4. ' =' → logprob: -8.133967399597168
    5. 'cum' → logprob: -9.008967399597168
    6. '=[' → logprob: -9.383967399597168
    7. 'c' → logprob: -10.383967399597168
    8. '   ' → logprob: -10.758967399597168
    9. 'umsum' → logprob: -10.883967399597168
    10. 'umulative' → logprob: -11.133967399597168

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.348476380109787
    2. '=' → logprob: -1.2234764099121094
    3. ' ' → logprob: -11.34847640991211
    4. '[' → logprob: -12.47347640991211
    5. '=[' → logprob: -12.72347640991211
    6. '_c' → logprob: -12.97347640991211
    7. '  ' → logprob: -13.09847640991211
    8. ',' → logprob: -13.34847640991211
    9. ' =[' → logprob: -13.47347640991211
    10. '   ' → logprob: -13.59847640991211

Token 220: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010329303331673145
    2. ' [' → logprob: -6.876032829284668
    3. '0' → logprob: -15.876032829284668
    4. '   ' → logprob: -17.251033782958984
    5. '([' → logprob: -18.126033782958984
    6. ' ' → logprob: -18.251033782958984
    7. 's' → logprob: -18.876033782958984
    8. '{' → logprob: -19.501033782958984
    9. '=[' → logprob: -19.501033782958984
    10. ']' → logprob: -19.751033782958984

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '۰' → logprob: -20.125001907348633
    5. '  ' → logprob: -20.375001907348633
    6. '     ' → logprob: -21.062501907348633
    7. ']' → logprob: -21.125001907348633
    8. '[' → logprob: -21.187501907348633
    9. '    ' → logprob: -21.312501907348633
    10. '=' → logprob: -21.437501907348633

Token 222: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011955472640693188
    2. ')' → logprob: -4.511955261230469
    3. ' ]' → logprob: -7.136955261230469
    4. ',' → logprob: -9.886955261230469
    5. ')]' → logprob: -10.636955261230469
    6. ' )' → logprob: -11.386955261230469
    7. '   ' → logprob: -11.886955261230469
    8. ' ' → logprob: -11.886955261230469
    9. '])' → logprob: -12.386955261230469
    10. '<|end|>' → logprob: -13.011955261230469

Token 223: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1899513006210327
    2. '   ' → logprob: -1.1899513006210327
    3. ' ' → logprob: -1.6899513006210327
    4. ']' → logprob: -2.1899514198303223
    5. ')' → logprob: -2.8149514198303223
    6. '#' → logprob: -4.314951419830322
    7. '  ' → logprob: -4.939951419830322
    8. ',' → logprob: -5.564951419830322
    9. '<|end|>' → logprob: -5.814951419830322
    10. '0' → logprob: -6.689951419830322

Token 225: ' cumulative' (ID: 75628)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009308716980740428
    2. ' ' → logprob: -7.0009307861328125
    3. '[' → logprob: -10.875930786132812
    4. '   ' → logprob: -15.625930786132812
    5. ' [' → logprob: -15.625930786132812
    6. ']' → logprob: -16.625930786132812
    7. '[]' → logprob: -17.000930786132812
    8. '  ' → logprob: -18.000930786132812
    9. '       ' → logprob: -18.125930786132812
    10. '=' → logprob: -18.500930786132812

Token 226: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.3652355670928955
    2. 'counts' → logprob: -1.2402355670928955
    3. 'close' → logprob: -4.990235328674316
    4. '_counts' → logprob: -5.240235328674316
    5. ' close' → logprob: -5.615235328674316
    6. '_close' → logprob: -8.615235328674316
    7. 'closed' → logprob: -8.615235328674316
    8. ')' → logprob: -8.990235328674316
    9. ' of' → logprob: -9.615235328674316
    10. 'round' → logprob: -9.865235328674316

Token 227: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.579947292804718
    2. 'of' → logprob: -0.829947292804718
    3. '   ' → logprob: -6.204947471618652
    4. '=' → logprob: -7.079947471618652
    5. '	of' → logprob: -8.329947471618652
    6. ' =' → logprob: -8.704947471618652
    7. '[' → logprob: -8.704947471618652
    8. 'def' → logprob: -8.954947471618652
    9. '       ' → logprob: -9.329947471618652
    10. ')' → logprob: -9.579947471618652

Token 228: ' close' (ID: 5263)
  Prédit: 'close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'close' → logprob: -0.004901293199509382
    2. ' close' → logprob: -6.00490140914917
    3. 'closed' → logprob: -6.25490140914917
    4. ')' → logprob: -8.129900932312012
    5. 'open' → logprob: -9.254900932312012
    6. 'round' → logprob: -9.629900932312012
    7. ' closed' → logprob: -10.879900932312012
    8. 'rc' → logprob: -11.504900932312012
    9. ']' → logprob: -11.754900932312012
    10. ')]' → logprob: -13.629900932312012

Token 229: ' round' (ID: 7353)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.41883501410484314
    2. ' round' → logprob: -1.2938350439071655
    3. '_round' → logprob: -3.043834924697876
    4. ' parentheses' → logprob: -5.043835163116455
    5. ')' → logprob: -5.293835163116455
    6. 'paren' → logprob: -6.293835163116455
    7. 'tokens' → logprob: -6.293835163116455
    8. '_tokens' → logprob: -6.918835163116455
    9. 'parent' → logprob: -7.293835163116455
    10. '(round' → logprob: -7.418835163116455

Token 230: ' brackets' (ID: 73008)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.061245180666446686
    2. ')' → logprob: -3.5612452030181885
    3. '_br' → logprob: -4.186244964599609
    4. ' brackets' → logprob: -4.311244964599609
    5. 'round' → logprob: -7.686244964599609
    6. ']' → logprob: -8.06124496459961
    7. '	br' → logprob: -8.18624496459961
    8. ' ' → logprob: -8.81124496459961
    9. '```' → logprob: -8.93624496459961
    10. ' bracket' → logprob: -9.06124496459961

Token 231: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013716085813939571
    2. '       ' → logprob: -4.388716220855713
    3. ')' → logprob: -8.263715744018555
    4. '    
' → logprob: -8.263715744018555
    5. '  ' → logprob: -8.513715744018555
    6. '    ' → logprob: -9.013715744018555
    7. ',' → logprob: -9.263715744018555
    8. '<|end|>' → logprob: -9.638715744018555
    9. 'rc' → logprob: -10.263715744018555
    10. ' ' → logprob: -10.263715744018555

Token 232: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033214520663022995
    2. '       ' → logprob: -3.908214569091797
    3. ' co' → logprob: -4.783214569091797
    4. 'co' → logprob: -5.908214569091797
    5. ' ' → logprob: -7.658214569091797
    6. 'rc' → logprob: -7.658214569091797
    7. '     ' → logprob: -8.908214569091797
    8. ',' → logprob: -9.158214569091797
    9. '  ' → logprob: -9.283214569091797
    10. '    ' → logprob: -9.533214569091797

Token 233: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' (adapté à ' co') → logprob: -8.2994620242971e-06
    2. ' co' → logprob: -12.500008583068848
    3. '       ' → logprob: -13.250008583068848
    4. '   ' → logprob: -13.375008583068848
    5. 'r' → logprob: -14.500008583068848
    6. 'coe' → logprob: -15.125008583068848
    7. ' ' → logprob: -15.750008583068848
    8. 'cco' → logprob: -16.37500762939453
    9. 'cc' → logprob: -17.12500762939453
    10. '     ' → logprob: -17.37500762939453

Token 234: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -5.319370302458992e-06
    2. ' =' → logprob: -12.375005722045898
    3. '=' → logprob: -14.750005722045898
    4. '_' → logprob: -14.750005722045898
    5. '   ' → logprob: -16.6250057220459
    6. 's' → logprob: -16.7500057220459
    7. ' _' → logprob: -17.2500057220459
    8. '=[]' → logprob: -17.6250057220459
    9. 'cum' → logprob: -17.8750057220459
    10. 'c' → logprob: -18.0000057220459

Token 235: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0002036595979006961
    2. 'cum' → logprob: -9.500204086303711
    3. '[' → logprob: -9.625204086303711
    4. '_c' → logprob: -10.750204086303711
    5. 'c' → logprob: -10.875204086303711
    6. '_um' → logprob: -12.000204086303711
    7. 'umulative' → logprob: -12.750204086303711
    8. 'u' → logprob: -12.875204086303711
    9. '=' → logprob: -13.500204086303711
    10. 'm' → logprob: -13.750204086303711

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329140067100525
    2. '=' → logprob: -1.3132914304733276
    3. '=[' → logprob: -10.688291549682617
    4. '[' → logprob: -12.688291549682617
    5. ' =[' → logprob: -13.688291549682617
    6. ' ' → logprob: -13.813291549682617
    7. '   ' → logprob: -14.688291549682617
    8. ' [' → logprob: -14.813291549682617
    9. '  ' → logprob: -15.188291549682617
    10. '=[]' → logprob: -15.438291549682617

Token 237: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017023178515955806
    2. ' [' → logprob: -6.376702308654785
    3. '0' → logprob: -16.3767032623291
    4. ' ' → logprob: -17.7517032623291
    5. '=[' → logprob: -17.8767032623291
    6. '   ' → logprob: -17.8767032623291
    7. '([' → logprob: -18.8767032623291
    8. 's' → logprob: -19.3767032623291
    9. '=' → logprob: -19.7517032623291
    10. '       ' → logprob: -19.8767032623291

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197071075439453
    2. '[' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.186970710754395
    4. ' [' → logprob: -13.686970710754395
    5. '   ' → logprob: -17.186969757080078
    6. ']' → logprob: -17.311969757080078
    7. '(' → logprob: -17.436969757080078
    8. '=' → logprob: -17.936969757080078
    9. '{' → logprob: -19.311969757080078
    10. '  ' → logprob: -19.811969757080078

Token 239: ']' (ID: 60)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8207282423973083
    2. '[' → logprob: -1.4457283020019531
    3. ']' → logprob: -1.8207283020019531
    4. '=' → logprob: -1.9457283020019531
    5. '(' → logprob: -4.695728302001953
    6. ' =' → logprob: -5.320728302001953
    7. ' ' → logprob: -6.070728302001953
    8. ',' → logprob: -6.570728302001953
    9. ' [' → logprob: -6.945728302001953
    10. ']=' → logprob: -8.445728302001953

Token 240: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.622049868106842
    2. '[' → logprob: -1.3720498085021973
    3. '=' → logprob: -1.6220498085021973
    4. ' [' → logprob: -4.622049808502197
    5. '=[' → logprob: -6.747049808502197
    6. '       ' → logprob: -7.872049808502197
    7. '   ' → logprob: -8.497050285339355
    8. '0' → logprob: -8.622050285339355
    9. ' ' → logprob: -9.122050285339355
    10. '        ' → logprob: -9.997050285339355

Token 241: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10657122731208801
    2. '[' → logprob: -2.3565711975097656
    3. ' =' → logprob: -5.106571197509766
    4. '0' → logprob: -9.106571197509766
    5. '=[' → logprob: -9.106571197509766
    6. ' [' → logprob: -10.231571197509766
    7. '(' → logprob: -11.981571197509766
    8. ' ' → logprob: -12.481571197509766
    9. '       ' → logprob: -12.481571197509766
    10. ',' → logprob: -12.731571197509766

Token 242: ' cumulative' (ID: 75628)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -7.362307223957032e-05
    2. '[' → logprob: -9.875073432922363
    3. ' ' → logprob: -10.750073432922363
    4. '(' → logprob: -14.625073432922363
    5. ' [' → logprob: -16.12507438659668
    6. '   ' → logprob: -17.62507438659668
    7. ']' → logprob: -17.62507438659668
    8. '=' → logprob: -18.50007438659668
    9. '[]' → logprob: -18.50007438659668
    10. ')' → logprob: -19.00007438659668

Token 243: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.19556105136871338
    2. '_counts' → logprob: -2.195560932159424
    3. ' counts' → logprob: -3.195560932159424
    4. 'c' → logprob: -4.945560932159424
    5. '_c' → logprob: -5.195560932159424
    6. '(' → logprob: -5.570560932159424
    7. 'open' → logprob: -5.945560932159424
    8. 'count' → logprob: -6.195560932159424
    9. ')' → logprob: -7.070560932159424
    10. 'br' → logprob: -7.445560932159424

Token 244: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8243948817253113
    2. 'of' → logprob: -0.8243948817253113
    3. '[' → logprob: -2.699394941329956
    4. '=' → logprob: -3.074394941329956
    5. ' =' → logprob: -5.199394702911377
    6. '       ' → logprob: -6.824394702911377
    7. '(' → logprob: -7.324394702911377
    8. '   ' → logprob: -7.699394702911377
    9. '=[' → logprob: -7.949394702911377
    10. '([' → logprob: -8.324395179748535

Token 245: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.0020851893350481987
    2. 'cur' → logprob: -6.377085208892822
    3. 'close' → logprob: -8.627084732055664
    4. ' open' → logprob: -8.877084732055664
    5. '{' → logprob: -10.002084732055664
    6. '(open' → logprob: -12.377084732055664
    7. '0' → logprob: -12.502084732055664
    8. 'co' → logprob: -12.877084732055664
    9. 'closed' → logprob: -13.002084732055664
    10. '[' → logprob: -13.002084732055664

Token 246: ' curly' (ID: 106394)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -7.636475493200123e-05
    2. 'curl' → logprob: -10.125076293945312
    3. '_cur' → logprob: -10.500076293945312
    4. 'brace' → logprob: -12.250076293945312
    5. ' curly' → logprob: -13.500076293945312
    6. 'curve' → logprob: -13.625076293945312
    7. '(cur' → logprob: -14.250076293945312
    8. '{' → logprob: -15.375076293945312
    9. 'c' → logprob: -16.125076293945312
    10. '{}' → logprob: -16.875076293945312

Token 247: ' brackets' (ID: 73008)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.780234158039093
    2. '_c' → logprob: -1.0302340984344482
    3. '_br' → logprob: -2.1552340984344482
    4. ' brackets' → logprob: -3.2802340984344482
    5. '{' → logprob: -4.405234336853027
    6. ' braces' → logprob: -5.030234336853027
    7. 'brace' → logprob: -5.280234336853027
    8. ')' → logprob: -6.280234336853027
    9. 'c' → logprob: -6.280234336853027
    10. '_b' → logprob: -7.155234336853027

Token 248: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006104522035457194
    2. '[' → logprob: -8.0006103515625
    3. '
' → logprob: -9.6256103515625
    4. '[]' → logprob: -10.1256103515625
    5. '[]
' → logprob: -10.2506103515625
    6. ']' → logprob: -10.5006103515625
    7. ')' → logprob: -10.6256103515625
    8. '        
' → logprob: -11.3756103515625
    9. '```' → logprob: -11.3756103515625
    10. 'co' → logprob: -11.6256103515625

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023518609814345837
    2. '[' → logprob: -6.252351760864258
    3. '   ' → logprob: -8.377351760864258
    4. ')' → logprob: -9.877351760864258
    5. '      ' → logprob: -10.252351760864258
    6. '[]' → logprob: -10.252351760864258
    7. '
' → logprob: -11.252351760864258
    8. ']' → logprob: -11.627351760864258
    9. '           ' → logprob: -12.002351760864258
    10. '     ' → logprob: -12.002351760864258

Token 250: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -0.002643437124788761
    2. ' cc' → logprob: -6.002643585205078
    3. 'co' → logprob: -9.502643585205078
    4. '   ' → logprob: -10.127643585205078
    5. 'c' → logprob: -11.252643585205078
    6. '[' → logprob: -11.377643585205078
    7. '	cc' → logprob: -11.502643585205078
    8. '_cc' → logprob: -11.877643585205078
    9. '       ' → logprob: -12.627643585205078
    10. '  ' → logprob: -13.127643585205078

Token 251: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -8.41866585687967e-06
    2. ' =' → logprob: -11.875008583068848
    3. '=' → logprob: -14.875008583068848
    4. '[' → logprob: -15.000008583068848
    5. '=[' → logprob: -15.375008583068848
    6. '   ' → logprob: -15.625008583068848
    7. ' _' → logprob: -16.25000762939453
    8. '_' → logprob: -16.37500762939453
    9. '.append' → logprob: -17.00000762939453
    10. ' =[' → logprob: -17.87500762939453

Token 252: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.04347559064626694
    2. 'cum' → logprob: -3.54347562789917
    3. '[' → logprob: -4.66847562789917
    4. '_c' → logprob: -5.91847562789917
    5. 'c' → logprob: -6.66847562789917
    6. 'm' → logprob: -9.918475151062012
    7. '=' → logprob: -10.293475151062012
    8. 'umsum' → logprob: -10.793475151062012
    9. 'umul' → logprob: -10.918475151062012
    10. 'u' → logprob: -11.043475151062012

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05559542402625084
    2. '=' → logprob: -2.9305953979492188
    3. '=[' → logprob: -7.555595397949219
    4. '[' → logprob: -9.055595397949219
    5. ' =[' → logprob: -10.430595397949219
    6. '   ' → logprob: -10.805595397949219
    7. ' [' → logprob: -11.430595397949219
    8. '.append' → logprob: -12.055595397949219
    9. ' ' → logprob: -12.680595397949219
    10. '  ' → logprob: -14.055595397949219

Token 254: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010338802821934223
    2. ' [' → logprob: -6.876033782958984
    3. '0' → logprob: -13.751033782958984
    4. ' ' → logprob: -17.126033782958984
    5. '   ' → logprob: -18.251033782958984
    6. ' ' → logprob: -19.251033782958984
    7. '[-' → logprob: -19.751033782958984
    8. '[
' → logprob: -19.751033782958984
    9. '(' → logprob: -20.001033782958984
    10. '{' → logprob: -20.001033782958984

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. '[' → logprob: -14.625001907348633
    4. ']' → logprob: -16.000001907348633
    5. ')' → logprob: -19.500001907348633
    6. '   ' → logprob: -19.625001907348633
    7. 'cc' → logprob: -19.875001907348633
    8. '(' → logprob: -20.250001907348633
    9. '
' → logprob: -20.250001907348633
    10. '

' → logprob: -20.875001907348633

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003670971840620041
    2. '0' → logprob: -5.753671169281006
    3. '[' → logprob: -7.878671169281006
    4. '   ' → logprob: -10.003670692443848
    5. ' ]' → logprob: -10.503670692443848
    6. ']
' → logprob: -11.378670692443848
    7. ' ' → logprob: -11.378670692443848
    8. ')' → logprob: -11.753670692443848
    9. '       ' → logprob: -12.628670692443848
    10. ' [' → logprob: -13.253670692443848

Token 257: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44230079650878906
    2. ' =' → logprob: -1.442300796508789
    3. '=' → logprob: -2.317300796508789
    4. ' [' → logprob: -3.817300796508789
    5. '=[' → logprob: -8.317300796508789
    6. '0' → logprob: -9.067300796508789
    7. ' ' → logprob: -9.567300796508789
    8. '   ' → logprob: -9.942300796508789
    9. ' =[' → logprob: -11.192300796508789
    10. '(' → logprob: -11.192300796508789

Token 258: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024843595921993256
    2. '0' → logprob: -3.899843692779541
    3. '=' → logprob: -6.024843692779541
    4. ' =' → logprob: -7.274843692779541
    5. '(' → logprob: -7.524843692779541
    6. ' [' → logprob: -7.899843692779541
    7. ']' → logprob: -9.149843215942383
    8. '   ' → logprob: -9.649843215942383
    9. ' ' → logprob: -9.649843215942383
    10. ')' → logprob: -11.149843215942383

Token 259: ' cumulative' (ID: 75628)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000356199947418645
    2. '[' → logprob: -8.000356674194336
    3. ' ' → logprob: -10.875356674194336
    4. ' [' → logprob: -13.500356674194336
    5. '   ' → logprob: -15.500356674194336
    6. '[c' → logprob: -16.750356674194336
    7. ']' → logprob: -17.375356674194336
    8. '
' → logprob: -17.625356674194336
    9. 'c' → logprob: -17.750356674194336
    10. '[]' → logprob: -17.875356674194336

Token 260: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.08182363212108612
    2. ' counts' → logprob: -3.4568235874176025
    3. '[' → logprob: -3.7068235874176025
    4. '_counts' → logprob: -3.9568235874176025
    5. ' [' → logprob: -6.456823825836182
    6. '_c' → logprob: -7.081823825836182
    7. 'levels' → logprob: -7.831823825836182
    8. ' brackets' → logprob: -8.831823348999023
    9. 'c' → logprob: -9.581823348999023
    10. '[count' → logprob: -9.706823348999023

Token 261: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05110468715429306
    2. ' =' → logprob: -3.801104784011841
    3. '[' → logprob: -3.926104784011841
    4. 'of' → logprob: -5.301104545593262
    5. '=[' → logprob: -6.801104545593262
    6. ' of' → logprob: -6.801104545593262
    7. '   ' → logprob: -7.926104545593262
    8. ']' → logprob: -9.926104545593262
    9. '       ' → logprob: -9.926104545593262
    10. ')' → logprob: -11.051104545593262

Token 262: ' close' (ID: 5263)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005086106713861227
    2. '[' → logprob: -5.8800859451293945
    3. 'cc' → logprob: -6.3800859451293945
    4. 'cur' → logprob: -8.630085945129395
    5. ']' → logprob: -8.880085945129395
    6. ' ' → logprob: -9.505085945129395
    7. '[c' → logprob: -9.755085945129395
    8. '[cur' → logprob: -9.880085945129395
    9. 'closed' → logprob: -10.880085945129395
    10. ' cc' → logprob: -11.130085945129395

Token 263: ' curly' (ID: 106394)
  Prédit: '_cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.9095416069030762
    2. '_c' → logprob: -1.2845416069030762
    3. 'cur' → logprob: -1.2845416069030762
    4. '_' → logprob: -3.284541606903076
    5. ')' → logprob: -6.159541606903076
    6. ' curly' → logprob: -6.159541606903076
    7. 'c' → logprob: -7.784541606903076
    8. 'curl' → logprob: -7.909541606903076
    9. ']' → logprob: -8.534542083740234
    10. '_)' → logprob: -8.909542083740234

Token 264: ' brackets' (ID: 73008)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.6648709177970886
    2. 'br' → logprob: -1.5398709774017334
    3. '_br' → logprob: -1.9148709774017334
    4. ' brackets' → logprob: -2.1648709774017334
    5. 'c' → logprob: -5.914870738983154
    6. ')' → logprob: -6.164870738983154
    7. '_b' → logprob: -6.539870738983154
    8. ']' → logprob: -7.039870738983154
    9. '_' → logprob: -7.039870738983154
    10. '```' → logprob: -7.914870738983154

Token 265: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24094395339488983
    2. '[' → logprob: -1.6159439086914062
    3. '   ' → logprob: -4.740943908691406
    4. ' [' → logprob: -6.115943908691406
    5. 'sc' → logprob: -7.615943908691406
    6. ' =' → logprob: -7.615943908691406
    7. ')' → logprob: -7.740943908691406
    8. ']' → logprob: -7.865943908691406
    9. '      ' → logprob: -8.115943908691406
    10. ' ' → logprob: -8.115943908691406

Token 266: '       ' (ID: 309)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.3256118595600128
    2. '       ' → logprob: -1.4506118297576904
    3. '   ' → logprob: -3.3256118297576904
    4. ' so' → logprob: -5.5756120681762695
    5. 'sc' → logprob: -5.8256120681762695
    6. '     ' → logprob: -8.07561206817627
    7. ' ' → logprob: -8.95061206817627
    8. '      ' → logprob: -8.95061206817627
    9. ' sc' → logprob: -9.82561206817627
    10. '    ' → logprob: -10.20061206817627

Token 267: ' so' (ID: 813)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' (adapté à ' so') → logprob: -0.029985470697283745
    2. 'sc' → logprob: -3.5299854278564453
    3. '   ' → logprob: -9.154985427856445
    4. '       ' → logprob: -9.279985427856445
    5. ' so' → logprob: -10.404985427856445
    6. ' ' → logprob: -12.779985427856445
    7. '     ' → logprob: -13.779985427856445
    8. ' sc' → logprob: -14.029985427856445
    9. '  ' → logprob: -14.779985427856445
    10. '    ' → logprob: -16.154985427856445

Token 268: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.759734732331708e-05
    2. '_' → logprob: -11.625017166137695
    3. ' =' → logprob: -12.000017166137695
    4. '=' → logprob: -13.500017166137695
    5. ' _' → logprob: -14.375017166137695
    6. '=_' → logprob: -16.000017166137695
    7. '_s' → logprob: -16.625017166137695
    8. '=[]' → logprob: -16.875017166137695
    9. '[' → logprob: -17.000017166137695
    10. '=[' → logprob: -17.250017166137695

Token 269: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00029470553272403777
    2. 'cum' → logprob: -8.62529468536377
    3. '[' → logprob: -9.62529468536377
    4. 'c' → logprob: -11.75029468536377
    5. 'u' → logprob: -11.87529468536377
    6. 'ум' → logprob: -12.75029468536377
    7. 'm' → logprob: -12.75029468536377
    8. '   ' → logprob: -13.00029468536377
    9. '#' → logprob: -13.18779468536377
    10. 'Cum' → logprob: -13.25029468536377

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759932994842529
    2. ' =' → logprob: -0.8259932994842529
    3. '=[' → logprob: -9.950993537902832
    4. '[' → logprob: -12.700993537902832
    5. ' =[' → logprob: -13.450993537902832
    6. ' ' → logprob: -14.575993537902832
    7. ' [' → logprob: -14.700993537902832
    8. '   ' → logprob: -14.825993537902832
    9. '=[]' → logprob: -15.825993537902832
    10. '  ' → logprob: -16.575992584228516

Token 271: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000553151941858232
    2. ' [' → logprob: -7.500553131103516
    3. '=[' → logprob: -16.500553131103516
    4. '0' → logprob: -17.250553131103516
    5. '   ' → logprob: -17.875553131103516
    6. '=' → logprob: -18.125553131103516
    7. ' ' → logprob: -18.125553131103516
    8. ' =' → logprob: -18.250553131103516
    9. '       ' → logprob: -19.000553131103516
    10. '([' → logprob: -19.875553131103516

Token 272: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020557772368192673
    2. '[' → logprob: -3.8955578804016113
    3. ' ' → logprob: -11.270557403564453
    4. ' [' → logprob: -12.895557403564453
    5. 'sc' → logprob: -15.645557403564453
    6. '   ' → logprob: -16.020557403564453
    7. '=' → logprob: -16.395557403564453
    8. ']' → logprob: -16.395557403564453
    9. '(' → logprob: -17.145557403564453
    10. '  ' → logprob: -17.645557403564453

Token 273: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023655613767914474
    2. ' ]' → logprob: -8.750236511230469
    3. ')' → logprob: -9.750236511230469
    4. ']=' → logprob: -12.375236511230469
    5. '       ' → logprob: -12.625236511230469
    6. '[' → logprob: -12.750236511230469
    7. ']
' → logprob: -12.875236511230469
    8. '0' → logprob: -12.875236511230469
    9. '   ' → logprob: -13.625236511230469
    10. ',' → logprob: -14.375236511230469

Token 274: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07920592278242111
    2. '=' → logprob: -2.5792059898376465
    3. '=[' → logprob: -8.454205513000488
    4. '       ' → logprob: -10.454205513000488
    5. ' =[' → logprob: -10.454205513000488
    6. '[' → logprob: -10.954205513000488
    7. '   ' → logprob: -11.579205513000488
    8. ' ' → logprob: -12.204205513000488
    9. ' [' → logprob: -12.329205513000488
    10. '        ' → logprob: -12.829205513000488

Token 275: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05058826506137848
    2. ' =' → logprob: -3.675588369369507
    3. '[' → logprob: -3.800588369369507
    4. '0' → logprob: -6.675588130950928
    5. '       ' → logprob: -9.300588607788086
    6. '=[' → logprob: -9.425588607788086
    7. ' [' → logprob: -9.425588607788086
    8. '   ' → logprob: -10.550588607788086
    9. ' ' → logprob: -10.800588607788086
    10. ']' → logprob: -10.800588607788086

Token 276: ' cumulative' (ID: 75628)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045625608414411545
    2. '[' → logprob: -3.670625686645508
    3. ' ' → logprob: -4.045625686645508
    4. ' [' → logprob: -6.795625686645508
    5. ']' → logprob: -8.795625686645508
    6. '(' → logprob: -9.545625686645508
    7. ' =' → logprob: -9.795625686645508
    8. ')' → logprob: -9.795625686645508
    9. '=' → logprob: -9.920625686645508
    10. '[]' → logprob: -10.045625686645508

Token 277: ' counts' (ID: 28991)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.12200253456830978
    2. '_br' → logprob: -3.497002601623535
    3. '_tokens' → logprob: -3.622002601623535
    4. '_' → logprob: -3.872002601623535
    5. '[' → logprob: -4.622002601623535
    6. '_sc' → logprob: -4.747002601623535
    7. '_s' → logprob: -5.497002601623535
    8. '_counts' → logprob: -5.872002601623535
    9. ')' → logprob: -5.997002601623535
    10. '[]' → logprob: -6.122002601623535

Token 278: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5022556781768799
    2. ' =' → logprob: -1.3772556781768799
    3. 'of' → logprob: -2.37725567817688
    4. ' of' → logprob: -3.62725567817688
    5. '=[' → logprob: -4.127255439758301
    6. '[' → logprob: -5.627255439758301
    7. '       ' → logprob: -6.877255439758301
    8. '   ' → logprob: -7.002255439758301
    9. '_of' → logprob: -8.2522554397583
    10. '.append' → logprob: -8.3772554397583

Token 279: ' open' (ID: 2494)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0383712500333786
    2. '[' → logprob: -3.2883713245391846
    3. ' ' → logprob: -8.413371086120605
    4. '(' → logprob: -9.663371086120605
    5. ']' → logprob: -10.538371086120605
    6. ' [' → logprob: -11.663371086120605
    7. 'sc' → logprob: -12.913371086120605
    8. 'open' → logprob: -13.413371086120605
    9. '   ' → logprob: -14.163371086120605
    10. '[]' → logprob: -14.288371086120605

Token 280: ' square' (ID: 13749)
  Prédit: ' square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' square' → logprob: -0.4780915379524231
    2. 'square' → logprob: -0.9780915379524231
    3. '_square' → logprob: -5.603091716766357
    4. '_s' → logprob: -9.4780912399292
    5. '_' → logprob: -10.1030912399292
    6. ' round' → logprob: -10.4780912399292
    7. 'round' → logprob: -10.6030912399292
    8. 's' → logprob: -10.7280912399292
    9. 'quare' → logprob: -10.7280912399292
    10. '(square' → logprob: -10.8530912399292

Token 281: ' brackets' (ID: 73008)
  Prédit: '_br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_br' → logprob: -0.23672811686992645
    2. ' brackets' → logprob: -2.1117281913757324
    3. '_c' → logprob: -2.4867281913757324
    4. 'br' → logprob: -5.736728191375732
    5. '_' → logprob: -6.236728191375732
    6. '_b' → logprob: -7.486728191375732
    7. ')_' → logprob: -8.486727714538574
    8. ' _' → logprob: -8.861727714538574
    9. ']_' → logprob: -8.861727714538574
    10. ')' → logprob: -9.111727714538574

Token 282: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035738153383135796
    2. '[' → logprob: -5.878573894500732
    3. ')' → logprob: -8.503573417663574
    4. ']' → logprob: -8.753573417663574
    5. '=' → logprob: -9.128573417663574
    6. '<|end|>' → logprob: -9.628573417663574
    7. '```' → logprob: -9.753573417663574
    8. ' =' → logprob: -9.753573417663574
    9. '      ' → logprob: -10.253573417663574
    10. '   ' → logprob: -11.003573417663574

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16945061087608337
    2. '[' → logprob: -2.169450521469116
    3. ' =' → logprob: -3.669450521469116
    4. '   ' → logprob: -5.044450759887695
    5. '=' → logprob: -6.169450759887695
    6. '```' → logprob: -6.169450759887695
    7. '     ' → logprob: -6.544450759887695
    8. '      ' → logprob: -6.794450759887695
    9. ' [' → logprob: -7.544450759887695
    10. '=[' → logprob: -7.794450759887695

Token 284: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' (adapté à ' sc') → logprob: -0.10028775036334991
    2. ' sc' → logprob: -2.350287675857544
    3. '_sc' → logprob: -10.475287437438965
    4. '   ' → logprob: -10.975287437438965
    5. '	sc' → logprob: -11.100287437438965
    6. '       ' → logprob: -11.350287437438965
    7. '(sc' → logprob: -12.600287437438965
    8. '=sc' → logprob: -12.975287437438965
    9. ' ' → logprob: -14.225287437438965
    10. '     ' → logprob: -14.350287437438965

Token 285: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.625
    3. ' =' → logprob: -17.0
    4. '=' → logprob: -17.5
    5. '=_' → logprob: -17.75
    6. ' _' → logprob: -17.75
    7. '```' → logprob: -18.125
    8. '[_' → logprob: -18.375
    9. '[' → logprob: -19.0
    10. '\' → logprob: -19.0

Token 286: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00038705902989022434
    2. '[' → logprob: -8.000387191772461
    3. 'cum' → logprob: -10.125387191772461
    4. '=' → logprob: -12.875387191772461
    5. '_um' → logprob: -13.500387191772461
    6. '=[' → logprob: -13.875387191772461
    7. '_' → logprob: -13.875387191772461
    8. 'umulative' → logprob: -14.125387191772461
    9. 'ум' → logprob: -14.250387191772461
    10. 'umsum' → logprob: -14.250387191772461

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20148496329784393
    2. ' =' → logprob: -1.7014849185943604
    3. '=[' → logprob: -9.701484680175781
    4. '[' → logprob: -11.701484680175781
    5. ' =[' → logprob: -13.951484680175781
    6. ' ' → logprob: -14.326484680175781
    7. '.append' → logprob: -15.201484680175781
    8. '   ' → logprob: -16.07648468017578
    9. ' [' → logprob: -16.20148468017578
    10. '  ' → logprob: -16.70148468017578

Token 288: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.623244553338736e-05
    2. ' [' → logprob: -9.625065803527832
    3. '0' → logprob: -16.00006675720215
    4. '   ' → logprob: -18.87506675720215
    5. '=' → logprob: -19.62506675720215
    6. '=[' → logprob: -19.75006675720215
    7. '       ' → logprob: -20.25006675720215
    8. ' ' → logprob: -20.37506675720215
    9. '([' → logprob: -20.75006675720215
    10. '{' → logprob: -21.62506675720215

Token 289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3663626305060461e-05
    2. '[' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.50001335144043
    4. 'sc' → logprob: -14.12501335144043
    5. ']' → logprob: -17.87501335144043
    6. ' [' → logprob: -18.62501335144043
    7. '   ' → logprob: -18.62501335144043
    8. ' sc' → logprob: -19.37501335144043
    9. ')' → logprob: -19.87501335144043
    10. 'SC' → logprob: -20.50001335144043

Token 290: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016343588940799236
    2. '0' → logprob: -6.501634120941162
    3. '[' → logprob: -9.25163459777832
    4. '=' → logprob: -11.00163459777832
    5. ')' → logprob: -12.12663459777832
    6. ']=' → logprob: -12.12663459777832
    7. '   ' → logprob: -12.75163459777832
    8. ' ]' → logprob: -13.00163459777832
    9. ' ' → logprob: -13.50163459777832
    10. '][' → logprob: -14.37663459777832

Token 291: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21891772747039795
    2. '=' → logprob: -2.0939178466796875
    3. '[' → logprob: -2.7189178466796875
    4. '   ' → logprob: -5.7189178466796875
    5. ' [' → logprob: -5.8439178466796875
    6. '0' → logprob: -7.9689178466796875
    7. ']' → logprob: -8.343917846679688
    8. ' ' → logprob: -8.843917846679688
    9. '=[' → logprob: -8.843917846679688
    10. ')' → logprob: -9.093917846679688

Token 292: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10043354332447052
    2. '=' → logprob: -2.725433588027954
    3. '0' → logprob: -3.600433588027954
    4. ' =' → logprob: -6.100433349609375
    5. '(' → logprob: -8.475433349609375
    6. ' [' → logprob: -9.475433349609375
    7. '=[' → logprob: -9.600433349609375
    8. ']' → logprob: -10.100433349609375
    9. ' ' → logprob: -10.350433349609375
    10. '   ' → logprob: -10.600433349609375

Token 293: ' cumulative' (ID: 75628)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018319791182875633
    2. '[' → logprob: -4.018319606781006
    3. ' ' → logprob: -9.268320083618164
    4. ' [' → logprob: -9.768320083618164
    5. 'sc' → logprob: -11.268320083618164
    6. '   ' → logprob: -13.143320083618164
    7. ' sc' → logprob: -14.018320083618164
    8. '       ' → logprob: -14.518320083618164
    9. '(' → logprob: -15.018320083618164
    10. '           ' → logprob: -15.143320083618164

Token 294: ' counts' (ID: 28991)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.3351602256298065
    2. ' counts' → logprob: -1.835160255432129
    3. 'counts' → logprob: -2.335160255432129
    4. '_levels' → logprob: -4.585160255432129
    5. ' =' → logprob: -4.835160255432129
    6. '=' → logprob: -5.960160255432129
    7. '.append' → logprob: -6.085160255432129
    8. ' levels' → logprob: -6.335160255432129
    9. '_' → logprob: -6.710160255432129
    10. 'levels' → logprob: -7.210160255432129

Token 295: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29787352681159973
    2. ' =' → logprob: -1.4228734970092773
    3. 'of' → logprob: -5.422873497009277
    4. '   ' → logprob: -5.672873497009277
    5. '=[' → logprob: -5.672873497009277
    6. ' of' → logprob: -6.047873497009277
    7. '[' → logprob: -6.922873497009277
    8. '.append' → logprob: -6.922873497009277
    9. '       ' → logprob: -7.797873497009277
    10. '_of' → logprob: -8.922873497009277

Token 296: ' close' (ID: 5263)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009583894861862063
    2. 'sc' → logprob: -7.250958442687988
    3. '[' → logprob: -9.125958442687988
    4. ']' → logprob: -9.875958442687988
    5. ' sc' → logprob: -10.000958442687988
    6. ' ' → logprob: -10.125958442687988
    7. 'closed' → logprob: -13.375958442687988
    8. 'close' → logprob: -14.625958442687988
    9. '(sc' → logprob: -15.500958442687988
    10. ' [' → logprob: -15.750958442687988

Token 297: ' square' (ID: 13749)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.4452143907546997
    2. ' square' → logprob: -1.0702143907546997
    3. '_square' → logprob: -5.07021427154541
    4. '_' → logprob: -5.57021427154541
    5. ' brackets' → logprob: -6.44521427154541
    6. 'br' → logprob: -6.69521427154541
    7. '_s' → logprob: -7.07021427154541
    8. 's' → logprob: -7.19521427154541
    9. ']' → logprob: -7.69521427154541
    10. '```' → logprob: -7.94521427154541

Token 298: ' brackets' (ID: 73008)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.0451242923736572
    2. '_br' → logprob: -1.1701242923736572
    3. ']' → logprob: -1.5451242923736572
    4. ')' → logprob: -3.0451242923736572
    5. ' brackets' → logprob: -3.1701242923736572
    6. '_' → logprob: -3.6701242923736572
    7. '   ' → logprob: -5.920124053955078
    8. '_c' → logprob: -5.920124053955078
    9. ']_' → logprob: -6.920124053955078
    10. '	br' → logprob: -7.295124053955078

Token 299: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28233078122138977
    2. '
' → logprob: -1.5323307514190674
    3. '   ' → logprob: -4.4073309898376465
    4. 'for' → logprob: -4.9073309898376465
    5. '        
' → logprob: -5.2823309898376465
    6. ' for' → logprob: -5.5323309898376465
    7. '    
' → logprob: -7.9073309898376465
    8. 'def' → logprob: -7.9073309898376465
    9. '<|end|>' → logprob: -9.032330513000488
    10. ',' → logprob: -9.407330513000488

Token 300: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.382556289434433
    2. ' for' → logprob: -1.3825563192367554
    3. '       ' → logprob: -3.507556200027466
    4. '   ' → logprob: -3.757556200027466
    5. '
' → logprob: -4.382556438446045
    6. '```' → logprob: -7.507556438446045
    7. '	for' → logprob: -8.757555961608887
    8. '        
' → logprob: -8.882555961608887
    9. '<|end|>' → logprob: -9.132555961608887
    10. '    
' → logprob: -9.507555961608887

Token 301: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013542831875383854
    2. '       ' → logprob: -6.751354217529297
    3. ' for' → logprob: -9.001354217529297
    4. '   ' → logprob: -10.126354217529297
    5. 'prev' → logprob: -11.126354217529297
    6. 'def' → logprob: -12.751354217529297
    7. 'indent' → logprob: -13.626354217529297
    8. 'current' → logprob: -13.876354217529297
    9. '```' → logprob: -14.751354217529297
    10. '
' → logprob: -15.001354217529297

Token 302: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.01489192433655262
    2. ' i' → logprob: -4.264892101287842
    3. 'line' → logprob: -7.389892101287842
    4. 'i' → logprob: -9.264891624450684
    5. ' idx' → logprob: -11.889891624450684
    6. ' p' → logprob: -13.889891624450684
    7. ' linen' → logprob: -13.889891624450684
    8. '(line' → logprob: -14.014891624450684
    9. '_line' → logprob: -14.139891624450684
    10. '	line' → logprob: -14.139891624450684

Token 303: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03100419230759144
    2. 'in' → logprob: -3.5310041904449463
    3. '_' → logprob: -7.406004428863525
    4. '_in' → logprob: -7.531004428863525
    5. '   ' → logprob: -9.656003952026367
    6. '_idx' → logprob: -10.781003952026367
    7. ' _' → logprob: -12.531003952026367
    8. '_line' → logprob: -12.656003952026367
    9. ' ' → logprob: -13.031003952026367
    10. ')' → logprob: -13.031003952026367

Token 304: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0025039594620466232
    2. ' P' → logprob: -6.002503871917725
    3. 'range' → logprob: -10.877504348754883
    4. ' range' → logprob: -11.627504348754883
    5. ' ' → logprob: -15.752504348754883
    6. '   ' → logprob: -16.252504348754883
    7. '[P' → logprob: -16.752504348754883
    8. 'p' → logprob: -17.002504348754883
    9. '.P' → logprob: -17.252504348754883
    10. ')' → logprob: -17.252504348754883

Token 305: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14290985465049744
    2. ':
' → logprob: -2.0179097652435303
    3. '       ' → logprob: -9.14291000366211
    4. '           ' → logprob: -9.89291000366211
    5. '):
' → logprob: -10.39291000366211
    6. '[' → logprob: -11.51791000366211
    7. ':
' → logprob: -11.76791000366211
    8. ',' → logprob: -11.89291000366211
    9. '   ' → logprob: -12.26791000366211
    10. '):' → logprob: -12.64291000366211

Token 306: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11164359748363495
    2. '   ' → logprob: -2.4866435527801514
    3. '       ' → logprob: -3.8616435527801514
    4. '
' → logprob: -6.9866437911987305
    5. 'indent' → logprob: -8.61164379119873
    6. 'n' → logprob: -9.86164379119873
    7. ' indent' → logprob: -9.98664379119873
    8. ' ind' → logprob: -9.98664379119873
    9. '```' → logprob: -10.23664379119873
    10. 'ind' → logprob: -10.48664379119873

Token 307: ' #' (ID: 1069)
  Prédit: ' indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indent' → logprob: -0.8445802927017212
    2. 'indent' → logprob: -1.0945802927017212
    3. ' i' → logprob: -2.4695801734924316
    4. 'i' → logprob: -3.0945801734924316
    5. '           ' → logprob: -3.4695801734924316
    6. ' ind' → logprob: -3.5945801734924316
    7. 'ind' → logprob: -4.469580173492432
    8. 'count' → logprob: -5.094580173492432
    9. 'idx' → logprob: -5.344580173492432
    10. ' idx' → logprob: -5.469580173492432

Token 308: ' count' (ID: 3605)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.8533325791358948
    2. 'idx' → logprob: -1.72833251953125
    3. 'i' → logprob: -2.35333251953125
    4. 'ind' → logprob: -2.60333251953125
    5. ' indent' → logprob: -2.85333251953125
    6. 'count' → logprob: -2.97833251953125
    7. '           ' → logprob: -3.35333251953125
    8. ' ind' → logprob: -4.35333251953125
    9. ' idx' → logprob: -4.47833251953125
    10. ' i' → logprob: -4.60333251953125

Token 309: ' leading' (ID: 8117)
  Prédit: '_br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_br' → logprob: -0.5876399874687195
    2. '   ' → logprob: -2.3376400470733643
    3. '_indent' → logprob: -2.5876400470733643
    4. '           ' → logprob: -2.9626400470733643
    5. '_ind' → logprob: -3.0876400470733643
    6. 'br' → logprob: -3.4626400470733643
    7. '(' → logprob: -3.5876400470733643
    8. ' (' → logprob: -4.337639808654785
    9. '_open' → logprob: -4.462639808654785
    10. '_' → logprob: -4.587639808654785

Token 310: ' periods' (ID: 27925)
  Prédit: 'period'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'period' → logprob: -0.24432440102100372
    2. 'dots' → logprob: -1.7443244457244873
    3. '.' → logprob: -3.2443244457244873
    4. ' periods' → logprob: -6.494324207305908
    5. '   ' → logprob: -7.244324207305908
    6. ' dots' → logprob: -8.494324684143066
    7. 'points' → logprob: -9.369324684143066
    8. '.
' → logprob: -9.744324684143066
    9. 'pos' → logprob: -9.869324684143066
    10. 'i' → logprob: -9.994324684143066

Token 311: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6059911847114563
    2. 'i' → logprob: -1.2309911251068115
    3. ' i' → logprob: -2.4809911251068115
    4. 'count' → logprob: -2.9809911251068115
    5. 'n' → logprob: -5.230991363525391
    6. 'idx' → logprob: -5.230991363525391
    7. '       ' → logprob: -5.605991363525391
    8. 'indent' → logprob: -5.730991363525391
    9. 'ind' → logprob: -6.230991363525391
    10. '   ' → logprob: -6.230991363525391

Token 312: 'indent' (ID: 74638)
  Prédit: 'indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.6237114071846008
    2. 'i' → logprob: -1.373711347579956
    3. 'len' → logprob: -2.623711347579956
    4. 'ind' → logprob: -3.123711347579956
    5. 'line' → logprob: -3.498711347579956
    6. '           ' → logprob: -4.123711585998535
    7. 'idx' → logprob: -4.248711585998535
    8. ' indent' → logprob: -4.748711585998535
    9. 'count' → logprob: -4.998711585998535
    10. 'period' → logprob: -5.123711585998535

Token 313: 'ation' (ID: 387)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7371301651000977
    2. 'ation' → logprob: -0.9871301651000977
    3. '   ' → logprob: -2.6121301651000977
    4. ')
' → logprob: -2.8621301651000977
    5. '       ' → logprob: -5.487130165100098
    6. ' =' → logprob: -5.612130165100098
    7. '=' → logprob: -5.987130165100098
    8. '           ' → logprob: -6.487130165100098
    9. 's' → logprob: -6.612130165100098
    10. '):
' → logprob: -7.237130165100098

Token 314: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016304029151797295
    2. ' =' → logprob: -4.641304016113281
    3. '   ' → logprob: -6.266304016113281
    4. '=' → logprob: -6.391304016113281
    5. ')
' → logprob: -6.641304016113281
    6. 's' → logprob: -7.141304016113281
    7. '_level' → logprob: -8.266304016113281
    8. '_' → logprob: -9.391304016113281
    9. '_count' → logprob: -9.641304016113281
    10. '       ' → logprob: -9.891304016113281

Token 315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09143397212028503
    2. '       ' → logprob: -2.8414340019226074
    3. 'i' → logprob: -4.341434001922607
    4. '   ' → logprob: -5.091434001922607
    5. ' i' → logprob: -5.091434001922607
    6. 'indent' → logprob: -6.341434001922607
    7. 'count' → logprob: -7.216434001922607
    8. ' indent' → logprob: -7.466434001922607
    9. 'ind' → logprob: -8.34143352508545
    10. ' ind' → logprob: -9.21643352508545

Token 316: ' indent' (ID: 37655)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' (adapté à ' indent') → logprob: -0.5668537616729736
    2. ' indent' → logprob: -1.3168537616729736
    3. 'i' → logprob: -3.0668537616729736
    4. 'ind' → logprob: -3.4418537616729736
    5. ' i' → logprob: -3.5668537616729736
    6. '           ' → logprob: -3.9418537616729736
    7. ' ind' → logprob: -4.1918535232543945
    8. 'count' → logprob: -4.4418535232543945
    9. 'idx' → logprob: -6.0668535232543945
    10. ' count' → logprob: -6.1918535232543945

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.573576033115387
    2. '_' → logprob: -1.4485759735107422
    3. '_level' → logprob: -1.6985759735107422
    4. '=' → logprob: -4.573575973510742
    5. '_count' → logprob: -5.823575973510742
    6. '_len' → logprob: -5.948575973510742
    7. '_=' → logprob: -7.323575973510742
    8. '_lvl' → logprob: -7.323575973510742
    9. '   ' → logprob: -8.073575973510742
    10. '_levels' → logprob: -8.323575973510742

Token 318: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40889811515808105
    2. 'line' → logprob: -1.408898115158081
    3. 'len' → logprob: -2.408898115158081
    4. ' line' → logprob: -7.15889835357666
    5. ' ' → logprob: -8.15889835357666
    6. ' len' → logprob: -8.40889835357666
    7. 'sum' → logprob: -13.03389835357666
    8. '(line' → logprob: -14.28389835357666
    9. '[line' → logprob: -14.65889835357666
    10. '   ' → logprob: -15.03389835357666

Token 319: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6941157579421997
    2. '0' → logprob: -0.9441157579421997
    3. 'line' → logprob: -2.19411563873291
    4. ' len' → logprob: -13.19411563873291
    5. ' ' → logprob: -13.81911563873291
    6. ' line' → logprob: -14.56911563873291
    7. 'sum' → logprob: -15.94411563873291
    8. '(len' → logprob: -17.694116592407227
    9. '(line' → logprob: -18.569116592407227
    10. '	len' → logprob: -18.569116592407227

Token 320: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4412904381752014
    2. 'while' → logprob: -1.4412903785705566
    3. '           ' → logprob: -2.4412903785705566
    4. '       ' → logprob: -3.5662903785705566
    5. '
' → logprob: -6.316290378570557
    6. '   ' → logprob: -6.691290378570557
    7. '	while' → logprob: -6.691290378570557
    8. '            
' → logprob: -9.191290855407715
    9. '          ' → logprob: -9.566290855407715
    10. '               ' → logprob: -9.816290855407715

Token 321: '           ' (ID: 352)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6392560601234436
    2. ' while' → logprob: -1.1392560005187988
    3. '           ' → logprob: -1.8892560005187988
    4. '       ' → logprob: -7.264256000518799
    5. '   ' → logprob: -8.139256477355957
    6. '	while' → logprob: -9.639256477355957
    7. '               ' → logprob: -12.514256477355957
    8. '
' → logprob: -12.764256477355957
    9. ' for' → logprob: -13.264256477355957
    10. 'for' → logprob: -13.389256477355957

Token 322: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.47704917192459106
    2. ' while' → logprob: -0.9770491719245911
    3. '           ' → logprob: -5.977049350738525
    4. '       ' → logprob: -8.227048873901367
    5. '   ' → logprob: -8.977048873901367
    6. '	while' → logprob: -10.852048873901367
    7. 'for' (adapté à ' for') → logprob: -11.477048873901367
    8. ' for' → logprob: -12.102048873901367
    9. 'if' → logprob: -13.727048873901367
    10. ' ' → logprob: -14.977048873901367

Token 323: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.34847474098205566
    2. 'c' → logprob: -1.8484747409820557
    3. ' ch' → logprob: -2.0984747409820557
    4. ' c' → logprob: -4.598474502563477
    5. 'char' → logprob: -5.598474502563477
    6. ' char' → logprob: -7.973474502563477
    7. '	ch' → logprob: -15.848474502563477
    8. 'i' → logprob: -16.098474502563477
    9. ' ' → logprob: -16.598474502563477
    10. '   ' → logprob: -16.973474502563477

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002810344099998474
    2. 'in' → logprob: -5.877810478210449
    3. ' ' → logprob: -12.87781047821045
    4. '	in' → logprob: -14.37781047821045
    5. 'import' → logprob: -14.62781047821045
    6. 'i' → logprob: -14.75281047821045
    7. ' i' → logprob: -14.75281047821045
    8. '   ' → logprob: -15.00281047821045
    9. '           ' → logprob: -15.87781047821045
    10. '  ' → logprob: -16.127809524536133

Token 325: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00671584764495492
    2. ' line' → logprob: -5.006715774536133
    3. ' ' → logprob: -16.131715774536133
    4. '   ' → logprob: -16.381715774536133
    5. '(line' → logprob: -16.381715774536133
    6. '	line' → logprob: -16.381715774536133
    7. '[line' → logprob: -17.506715774536133
    8. '=line' → logprob: -17.881715774536133
    9. '#line' → logprob: -18.756715774536133
    10. '.line' → logprob: -18.881715774536133

Token 326: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43793150782585144
    2. ':' → logprob: -1.0629315376281738
    3. ' if' → logprob: -6.062931537628174
    4. '               ' → logprob: -6.187931537628174
    5. '           ' → logprob: -6.437931537628174
    6. '   ' → logprob: -6.562931537628174
    7. 'if' → logprob: -7.687931537628174
    8. ' :
' → logprob: -8.187931060791016
    9. '       ' → logprob: -8.312931060791016
    10. ' :' → logprob: -8.937931060791016

Token 327: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08350920677185059
    2. ' if' → logprob: -2.5835092067718506
    3. 'if' → logprob: -6.08350944519043
    4. '.' → logprob: -6.70850944519043
    5. '           ' → logprob: -7.58350944519043
    6. '            ' → logprob: -8.58350944519043
    7. '   ' → logprob: -9.33350944519043
    8. '                
' → logprob: -10.08350944519043
    9. ' .' → logprob: -10.20850944519043
    10. ':
' → logprob: -10.20850944519043

Token 328: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.032934725284576416
    2. '               ' → logprob: -4.032934665679932
    3. 'if' (adapté à ' if') → logprob: -4.282934665679932
    4. '            ' → logprob: -7.532934665679932
    5. '                ' → logprob: -9.28293514251709
    6. '           ' → logprob: -9.28293514251709
    7. ' ' → logprob: -9.28293514251709
    8. '   ' → logprob: -10.78293514251709
    9. '    ' → logprob: -11.28293514251709
    10. '                
' → logprob: -12.15793514251709

Token 329: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.00861456897109747
    2. ' ch' → logprob: -4.758614540100098
    3. '	ch' → logprob: -17.508615493774414
    4. ' ' → logprob: -19.758615493774414
    5. '(ch' → logprob: -20.383615493774414
    6. '[ch' → logprob: -20.508615493774414
    7. '_ch' → logprob: -20.633615493774414
    8. '   ' → logprob: -21.008615493774414
    9. '.ch' → logprob: -21.758615493774414
    10. 'Ch' → logprob: -21.883615493774414

Token 330: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2629850208759308
    2. '==' → logprob: -1.5129849910736084
    3. '.' → logprob: -4.5129852294921875
    4. '=' → logprob: -11.262985229492188
    5. '=='' → logprob: -11.512985229492188
    6. ' !=' → logprob: -13.637985229492188
    7. ')==' → logprob: -13.762985229492188
    8. ' .' → logprob: -14.262985229492188
    9. '!=' → logprob: -14.637985229492188
    10. '=="' → logprob: -14.762985229492188

Token 331: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.006744496989995241
    2. '.' → logprob: -5.006744384765625
    3. ' '.'' → logprob: -11.006744384765625
    4. '.'.' → logprob: -12.506744384765625
    5. '".' → logprob: -12.756744384765625
    6. '"."' → logprob: -12.756744384765625
    7. ' '.' → logprob: -13.756744384765625
    8. 'period' → logprob: -13.881744384765625
    9. '('.')' → logprob: -14.131744384765625
    10. '.period' → logprob: -15.756744384765625

Token 332: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.5453504323959351
    2. '':' → logprob: -1.670350432395935
    3. '.' → logprob: -1.795350432395935
    4. ''' → logprob: -3.5453505516052246
    5. ''):
' → logprob: -3.7953505516052246
    6. ':
' → logprob: -5.045350551605225
    7. '):
' → logprob: -5.670350551605225
    8. '':
' → logprob: -6.920350551605225
    9. '')' → logprob: -7.295350551605225
    10. ''):' → logprob: -7.420350551605225

Token 333: '                   ' (ID: 699)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.17877914011478424
    2. ' indent' → logprob: -1.928779125213623
    3. '               ' → logprob: -4.303779125213623
    4. '                   ' → logprob: -5.428779125213623
    5. '(indent' → logprob: -8.303779602050781
    6. '   ' → logprob: -9.178779602050781
    7. '                    
' → logprob: -10.428779602050781
    8. '                
' → logprob: -10.428779602050781
    9. '_indent' → logprob: -10.678779602050781
    10. '
' → logprob: -11.178779602050781

Token 334: ' indent' (ID: 37655)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' (adapté à ' indent') → logprob: -0.0009206312242895365
    2. ' indent' → logprob: -7.00092077255249
    3. '               ' → logprob: -12.000920295715332
    4. '                   ' → logprob: -13.125920295715332
    5. '(indent' → logprob: -14.375920295715332
    6. 'ind' → logprob: -15.375920295715332
    7. '_indent' → logprob: -15.500920295715332
    8. 'increment' → logprob: -17.00092124938965
    9. '-indent' → logprob: -17.75092124938965
    10. '           ' → logprob: -17.75092124938965

Token 335: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004121380392462015
    2. ' +=' → logprob: -5.50412130355835
    3. '+' → logprob: -10.129121780395508
    4. '=' → logprob: -13.379121780395508
    5. 'indent' → logprob: -14.504121780395508
    6. 'increment' → logprob: -14.754121780395508
    7. ']+=' → logprob: -15.004121780395508
    8. '+='' → logprob: -16.629121780395508
    9. '               ' → logprob: -16.754121780395508
    10. '(indent' → logprob: -17.129121780395508

Token 336: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -22.25
    4. '```' → logprob: -24.375
    5. '           ' → logprob: -25.0
    6. '.' → logprob: -26.125
    7. '１' → logprob: -26.625
    8. '۱' → logprob: -26.75
    9. '+' → logprob: -27.0
    10. '       ' → logprob: -27.0

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -21.5
    4. '.' → logprob: -22.125
    5. '```' → logprob: -22.75
    6. '       ' → logprob: -24.875
    7. '１' → logprob: -24.875
    8. '-' → logprob: -25.125
    9. '۱' → logprob: -25.125
    10. '+' → logprob: -25.5

Token 338: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000192812061868608
    2. 'else' → logprob: -8.625192642211914
    3. ' else' → logprob: -11.375192642211914
    4. ',' → logprob: -14.625192642211914
    5. 'elif' → logprob: -14.625192642211914
    6. '```' → logprob: -15.875192642211914
    7. '			' → logprob: -16.000192642211914
    8. '		       ' → logprob: -16.250192642211914
    9. '.' → logprob: -16.375192642211914
    10. '	           ' → logprob: -16.375192642211914

Token 339: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006881130393594503
    2. 'else' → logprob: -5.006881237030029
    3. ' else' → logprob: -8.756880760192871
    4. 'elif' → logprob: -12.131880760192871
    5. '```' → logprob: -14.381880760192871
    6. '		       ' → logprob: -14.506880760192871
    7. '			' → logprob: -14.756880760192871
    8. '	           ' → logprob: -15.006880760192871
    9. '           ' → logprob: -15.131880760192871
    10. '                
' → logprob: -15.756880760192871

Token 340: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1651974618434906
    2. '               ' → logprob: -1.915197491645813
    3. ' else' → logprob: -5.540197372436523
    4. 'elif' → logprob: -6.915197372436523
    5. '           ' → logprob: -11.040197372436523
    6. '                
' → logprob: -11.665197372436523
    7. '	else' → logprob: -11.915197372436523
    8. ' elif' → logprob: -13.040197372436523
    9. '			' → logprob: -13.290197372436523
    10. '	           ' → logprob: -13.665197372436523

Token 341: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005896099028177559
    2. ':' → logprob: -8.875589370727539
    3. '   ' → logprob: -9.250589370727539
    4. '               ' → logprob: -9.375589370727539
    5. '		           ' → logprob: -9.500589370727539
    6. ':
' → logprob: -10.125589370727539
    7. 'break' → logprob: -10.125589370727539
    8. '	               ' → logprob: -10.375589370727539
    9. '				' → logprob: -10.625589370727539
    10. '	break' → logprob: -11.500589370727539

Token 342: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0023668475914746523
    2. 'break' → logprob: -6.12736701965332
    3. '               ' → logprob: -9.75236701965332
    4. '		           ' → logprob: -10.37736701965332
    5. '	               ' → logprob: -10.62736701965332
    6. '   ' → logprob: -10.87736701965332
    7. ' break' → logprob: -11.12736701965332
    8. '	break' → logprob: -11.50236701965332
    9. '				' → logprob: -11.62736701965332
    10. '           ' → logprob: -12.37736701965332

Token 343: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.580008864402771
    2. 'break' (adapté à ' break') → logprob: -0.830008864402771
    3. ' break' → logprob: -5.7050089836120605
    4. '	break' → logprob: -7.4550089836120605
    5. '               ' → logprob: -9.205008506774902
    6. '   ' → logprob: -10.705008506774902
    7. '	               ' → logprob: -11.955008506774902
    8. '				' → logprob: -12.080008506774902
    9. '           ' → logprob: -12.205008506774902
    10. '                       ' → logprob: -12.455008506774902

Token 344: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14800553023815155
    2. '
' → logprob: -2.023005485534668
    3. '<|end|>' → logprob: -6.398005485534668
    4. '            
' → logprob: -6.648005485534668
    5. '       ' → logprob: -7.523005485534668
    6. '        
' → logprob: -7.648005485534668
    7. '<|end|>' → logprob: -8.023005485534668
    8. '    
' → logprob: -8.523005485534668
    9. '	       ' → logprob: -9.023005485534668
    10. '  
' → logprob: -9.148005485534668

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041750334203243256
    2. '
' → logprob: -6.379175186157227
    3. '            
' → logprob: -7.129175186157227
    4. '       ' → logprob: -7.254175186157227
    5. '+' → logprob: -9.129175186157227
    6. '    
' → logprob: -9.379175186157227
    7. '        
' → logprob: -9.504175186157227
    8. ')' → logprob: -9.504175186157227
    9. '  
' → logprob: -9.754175186157227
    10. '<|end|>' → logprob: -9.754175186157227

Token 346: ' indent' (ID: 37655)
  Prédit: ' ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ro' → logprob: -0.37680456042289734
    2. 'ro' → logprob: -1.3768045902252197
    3. '       ' → logprob: -3.6268045902252197
    4. '           ' → logprob: -3.7518045902252197
    5. 'br' → logprob: -5.751804351806641
    6. '(ro' → logprob: -5.876804351806641
    7. 'open' → logprob: -6.876804351806641
    8. 'indent' (adapté à ' indent') → logprob: -7.126804351806641
    9. ' br' → logprob: -7.376804351806641
    10. 'tokens' → logprob: -7.626804351806641

Token 347: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -1.1041145626222715e-05
    2. 's' → logprob: -12.250011444091797
    3. '_' → logprob: -12.875011444091797
    4. '.append' → logprob: -13.875011444091797
    5. 'levels' → logprob: -14.125011444091797
    6. '=' → logprob: -14.625011444091797
    7. ' =' → logprob: -14.875011444091797
    8. ' _' → logprob: -15.875011444091797
    9. '=_' → logprob: -15.875011444091797
    10. '\' → logprob: -16.125011444091797

Token 348: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.625005722045898
    3. 'append' → logprob: -13.375005722045898
    4. '.app' → logprob: -15.125005722045898
    5. '.ap' → logprob: -16.6250057220459
    6. '_append' → logprob: -18.3750057220459
    7. ' .' → logprob: -18.7500057220459
    8. '.Append' → logprob: -18.8750057220459
    9. ' append' → logprob: -19.6250057220459
    10. 'Append' → logprob: -19.8750057220459

Token 349: '(indent' (ID: 184205)
  Prédit: '(indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indent' → logprob: -9.662937372922897e-05
    2. 'indent' → logprob: -9.250096321105957
    3. '(ind' → logprob: -15.000096321105957
    4. ' indent' → logprob: -17.000097274780273
    5. '(' → logprob: -17.375097274780273
    6. 'Indent' → logprob: -18.875097274780273
    7. '(intent' → logprob: -19.375097274780273
    8. '_indent' → logprob: -19.750097274780273
    9. ' (' → logprob: -20.875097274780273
    10. '(i' → logprob: -21.250097274780273

Token 350: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026547012850642204
    2. ')
' → logprob: -3.6515469551086426
    3. ' )' → logprob: -9.1515474319458
    4. '
' → logprob: -9.9015474319458
    5. ')

' → logprob: -10.0265474319458
    6. '       ' → logprob: -11.2765474319458
    7. ')
' → logprob: -11.6515474319458
    8. ' )
' → logprob: -11.7765474319458
    9. '           ' → logprob: -12.4015474319458
    10. '   ' → logprob: -12.5265474319458

Token 351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2329545021057129
    2. 'ro' → logprob: -2.107954502105713
    3. '
' → logprob: -3.232954502105713
    4. 'br' → logprob: -3.857954502105713
    5. 'r' → logprob: -4.482954502105713
    6. ' ro' → logprob: -5.232954502105713
    7. '       ' → logprob: -5.482954502105713
    8. '            
' → logprob: -6.482954502105713
    9. '(ro' → logprob: -6.982954502105713
    10. ',' → logprob: -7.482954502105713

Token 352: ' #' (ID: 1069)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.07906867563724518
    2. 'r' → logprob: -2.704068660736084
    3. 'rb' → logprob: -5.204068660736084
    4. 'br' → logprob: -6.204068660736084
    5. '           ' → logprob: -7.329068660736084
    6. '(ro' → logprob: -7.454068660736084
    7. 'bro' → logprob: -9.704069137573242
    8. '       ' → logprob: -10.454069137573242
    9. '   ' → logprob: -10.579069137573242
    10. 'rop' → logprob: -10.704069137573242

Token 353: ' count' (ID: 3605)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.13439640402793884
    2. 'r' → logprob: -2.1343963146209717
    3. 'obr' → logprob: -5.884396553039551
    4. 'rb' → logprob: -6.384396553039551
    5. 'br' → logprob: -6.634396553039551
    6. '(ro' → logprob: -7.384396553039551
    7. 'ror' → logprob: -8.25939655303955
    8. 'o' → logprob: -8.63439655303955
    9. 'or' → logprob: -9.13439655303955
    10. '(r' → logprob: -9.38439655303955

Token 354: ' brackets' (ID: 73008)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.03997551649808884
    2. 'br' → logprob: -3.91497540473938
    3. '(ro' → logprob: -5.164975643157959
    4. 'o' → logprob: -5.414975643157959
    5. 'r' → logprob: -5.914975643157959
    6. 'op' → logprob: -6.414975643157959
    7. 'open' → logprob: -6.664975643157959
    8. '   ' → logprob: -7.289975643157959
    9. '_ro' → logprob: -7.289975643157959
    10. 'rop' → logprob: -7.664975643157959

Token 355: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047119397670030594
    2. '(ro' → logprob: -4.172119617462158
    3. 'ro' → logprob: -4.547119617462158
    4. ',' → logprob: -4.547119617462158
    5. '_ro' → logprob: -6.547119617462158
    6. ' ro' → logprob: -6.547119617462158
    7. '            
' → logprob: -6.672119617462158
    8. ' (' → logprob: -6.797119617462158
    9. ' =' → logprob: -7.172119617462158
    10. 'tokens' → logprob: -7.172119617462158

Token 356: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.029815874993801117
    2. ' line' → logprob: -3.529815912246704
    3. 'count' → logprob: -10.404815673828125
    4. '   ' → logprob: -11.029815673828125
    5. '(line' → logprob: -11.904815673828125
    6. ' ' → logprob: -13.029815673828125
    7. 'the' → logprob: -13.404815673828125
    8. '           ' → logprob: -13.529815673828125
    9. 'ch' → logprob: -13.654815673828125
    10. '	line' → logprob: -13.904815673828125

Token 357: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021882878616452217
    2. '
' → logprob: -4.646883010864258
    3. '            
' → logprob: -6.021883010864258
    4. 'ro' → logprob: -6.271883010864258
    5. ',' → logprob: -6.771883010864258
    6. '(ro' → logprob: -7.021883010864258
    7. 'tokens' → logprob: -7.021883010864258
    8. '    
' → logprob: -7.146883010864258
    9. '   ' → logprob: -7.521883010864258
    10. '_ro' → logprob: -7.771883010864258

Token 358: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05766775831580162
    2. 'ro' → logprob: -3.6826677322387695
    3. ',' → logprob: -4.4326677322387695
    4. ' ro' → logprob: -5.1826677322387695
    5. '(ro' → logprob: -5.4326677322387695
    6. 'r' → logprob: -6.0576677322387695
    7. '   ' → logprob: -6.4326677322387695
    8. 'br' → logprob: -7.0576677322387695
    9. 'open' → logprob: -7.4326677322387695
    10. '_ro' → logprob: -7.5576677322387695

Token 359: ' ro' (ID: 974)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' (adapté à ' ro') → logprob: -0.1448897272348404
    2. 'r' → logprob: -3.1448898315429688
    3. ' ro' → logprob: -3.1448898315429688
    4. '(ro' → logprob: -3.1448898315429688
    5. '           ' → logprob: -6.144889831542969
    6. ' (' → logprob: -6.769889831542969
    7. ' r' → logprob: -7.644889831542969
    8. '_ro' → logprob: -8.144889831542969
    9. 'o' → logprob: -8.519889831542969
    10. '(r' → logprob: -8.644889831542969

Token 360: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7301146388053894
    2. '=' → logprob: -1.4801146984100342
    3. ',' → logprob: -1.6051146984100342
    4. ' +=' → logprob: -2.480114698410034
    5. '+=' → logprob: -6.105114459991455
    6. ' ,' → logprob: -6.230114459991455
    7. '_' → logprob: -7.980114459991455
    8. ')' → logprob: -8.105114936828613
    9. ',line' → logprob: -8.230114936828613
    10. '=line' → logprob: -8.355114936828613

Token 361: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.16030150651931763
    2. ' rc' → logprob: -1.9103014469146729
    3. '_rc' → logprob: -10.035301208496094
    4. '(rc' → logprob: -11.535301208496094
    5. '	rc' → logprob: -11.785301208496094
    6. '<|end|>' → logprob: -12.285301208496094
    7. ' sc' → logprob: -12.785301208496094
    8. 'rcode' → logprob: -12.910301208496094
    9. 'count' → logprob: -13.035301208496094
    10. 'sc' → logprob: -13.160301208496094

Token 362: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47417688369750977
    2. ' =' → logprob: -0.9741768836975098
    3. '=line' → logprob: -9.349176406860352
    4. '=count' → logprob: -11.974176406860352
    5. ',' → logprob: -12.099176406860352
    6. ' ' → logprob: -15.099176406860352
    7. '<|end|>' → logprob: -16.22417640686035
    8. ')' → logprob: -16.47417640686035
    9. '   ' → logprob: -16.47417640686035
    10. ' ' → logprob: -16.97417640686035

Token 363: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.17872251570224762
    2. 'sc' → logprob: -2.053722620010376
    3. ' sc' → logprob: -4.178722381591797
    4. ' co' → logprob: -4.303722381591797
    5. 'so' → logprob: -5.678722381591797
    6. '=sc' → logprob: -6.553722381591797
    7. ' =' → logprob: -6.803722381591797
    8. '=' → logprob: -8.053722381591797
    9. 'rc' → logprob: -9.553722381591797
    10. ' so' → logprob: -9.928722381591797

Token 364: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06536374241113663
    2. ' =' → logprob: -2.940363645553589
    3. ',' → logprob: -4.565363883972168
    4. '=count' → logprob: -12.065363883972168
    5. '=line' → logprob: -12.315363883972168
    6. '<|end|>' → logprob: -12.440363883972168
    7. ' ,' → logprob: -13.065363883972168
    8. ')' → logprob: -14.065363883972168
    9. ' ' → logprob: -14.565363883972168
    10. '<|end|>' → logprob: -14.690363883972168

Token 365: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.01416798122227192
    2. ' cc' → logprob: -4.264167785644531
    3. '	cc' → logprob: -13.014167785644531
    4. 'sc' → logprob: -14.389167785644531
    5. ' ' → logprob: -14.514167785644531
    6. 'c' → logprob: -15.139167785644531
    7. '_cc' → logprob: -15.389167785644531
    8. 'rc' → logprob: -15.889167785644531
    9. '(cc' → logprob: -16.01416778564453
    10. ' sc' → logprob: -16.13916778564453

Token 366: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02330324426293373
    2. ' =' → logprob: -3.773303270339966
    3. '=line' → logprob: -9.773303031921387
    4. ',' → logprob: -14.523303031921387
    5. '=count' → logprob: -15.898303031921387
    6. ' line' → logprob: -16.398303985595703
    7. 'line' → logprob: -16.523303985595703
    8. ' ' → logprob: -17.148303985595703
    9. ',line' → logprob: -17.523303985595703
    10. '(line' → logprob: -17.773303985595703

Token 367: ' so' (ID: 813)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.005929982289671898
    2. ' so' → logprob: -5.130929946899414
    3. ',' → logprob: -14.255929946899414
    4. 'sc' → logprob: -15.005929946899414
    5. ' ' → logprob: -15.630929946899414
    6. '  ' → logprob: -16.505929946899414
    7. 'So' → logprob: -16.880929946899414
    8. 's' → logprob: -17.255929946899414
    9. '   ' → logprob: -17.380929946899414
    10. '_so' → logprob: -17.380929946899414

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031255509704351425
    2. '=' → logprob: -3.5312554836273193
    3. ' =' → logprob: -6.531255722045898
    4. ' ,' → logprob: -10.281255722045898
    5. '=sc' → logprob: -11.781255722045898
    6. ',s' → logprob: -14.031255722045898
    7. '<|end|>' → logprob: -14.031255722045898
    8. ' ' → logprob: -14.406255722045898
    9. '_,' → logprob: -14.531255722045898
    10. ',c' → logprob: -14.906255722045898

Token 369: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -9.615255839889869e-05
    2. ' sc' → logprob: -9.250096321105957
    3. '(sc' → logprob: -16.75009536743164
    4. '=sc' → logprob: -17.50009536743164
    5. '	sc' → logprob: -18.25009536743164
    6. '_sc' → logprob: -18.87509536743164
    7. '=' → logprob: -20.50009536743164
    8. 'Sc' → logprob: -20.75009536743164
    9. '.sc' → logprob: -21.00009536743164
    10. '
' → logprob: -21.00009536743164

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06237298250198364
    2. ' =' → logprob: -2.812372922897339
    3. '=line' → logprob: -7.812373161315918
    4. '(line' → logprob: -15.562373161315918
    5. '=count' → logprob: -15.937373161315918
    6. ' line' → logprob: -16.0623722076416
    7. 'line' → logprob: -16.1873722076416
    8. ')' → logprob: -17.3123722076416
    9. ')=' → logprob: -17.5623722076416
    10. '   ' → logprob: -17.9373722076416

Token 371: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2014133334159851
    2. ' count' → logprob: -1.7014133930206299
    3. '(count' → logprob: -17.076414108276367
    4. '	count' → logprob: -17.326414108276367
    5. '           ' → logprob: -18.326414108276367
    6. '[count' → logprob: -18.451414108276367
    7. '.count' → logprob: -18.826414108276367
    8. '   ' → logprob: -19.326414108276367
    9. ' ' → logprob: -19.576414108276367
    10. '=count' → logprob: -19.576414108276367

Token 372: '_br' (ID: 33624)
  Prédit: '_br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_br' → logprob: -0.00044437398901209235
    2. 'br' → logprob: -8.500444412231445
    3. '(line' → logprob: -8.750444412231445
    4. '_' → logprob: -9.625444412231445
    5. 'line' → logprob: -12.000444412231445
    6. '(br' → logprob: -12.875444412231445
    7. '```' → logprob: -13.500444412231445
    8. '(' → logprob: -13.750444412231445
    9. 'Br' → logprob: -14.375444412231445
    10. ')' → logprob: -14.375444412231445

Token 373: 'ackets' (ID: 42290)
  Prédit: 'ackets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ackets' → logprob: -1.9981420336989686e-05
    2. 'ack' → logprob: -11.250020027160645
    3. '```' → logprob: -13.500020027160645
    4. 'acket' → logprob: -13.625020027160645
    5. 'r' → logprob: -13.750020027160645
    6. 'ackers' → logprob: -14.250020027160645
    7. 'a' → logprob: -14.750020027160645
    8. 'ck' → logprob: -14.875020027160645
    9. 'e' → logprob: -15.000020027160645
    10. 'ockets' → logprob: -15.250020027160645

Token 374: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00014120421838015318
    2. 'line' → logprob: -9.125141143798828
    3. '(' → logprob: -10.500141143798828
    4. ' line' → logprob: -12.375141143798828
    5. '('' → logprob: -15.875141143798828
    6. ' (' → logprob: -15.875141143798828
    7. '[line' → logprob: -16.000141143798828
    8. '   ' → logprob: -17.125141143798828
    9. '#line' → logprob: -17.125141143798828
    10. '(
' → logprob: -17.500141143798828

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02753477543592453
    2. ')
' → logprob: -3.6525347232818604
    3. '           ' → logprob: -6.9025349617004395
    4. ')
' → logprob: -8.777534484863281
    5. ')

' → logprob: -10.027534484863281
    6. '[' → logprob: -11.652534484863281
    7. '       ' → logprob: -12.527534484863281
    8. '")' → logprob: -12.902534484863281
    9. '')' → logprob: -13.152534484863281
    10. '   ' → logprob: -13.277534484863281

Token 376: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09333321452140808
    2. '           ' → logprob: -2.4683332443237305
    3. '       ' → logprob: -5.5933332443237305
    4. '   ' → logprob: -8.46833324432373
    5. '
' → logprob: -8.96833324432373
    6. ' ro' → logprob: -9.09333324432373
    7. '            
' → logprob: -9.34333324432373
    8. 'ro' → logprob: -10.21833324432373
    9. '        
' → logprob: -10.59333324432373
    10. '  
' → logprob: -11.21833324432373

Token 377: ' ro' (ID: 974)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8479140996932983
    2. ' ro' → logprob: -1.2229140996932983
    3. 'ro' (adapté à ' ro') → logprob: -1.9729140996932983
    4. '
' → logprob: -2.222914218902588
    5. '           ' → logprob: -3.722914218902588
    6. '   ' → logprob: -5.222914218902588
    7. '_ro' → logprob: -8.72291374206543
    8. '
' → logprob: -9.59791374206543
    9. '     ' → logprob: -10.59791374206543
    10. ' ' → logprob: -10.59791374206543

Token 378: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -9.253090865968261e-06
    2. ' =' → logprob: -12.500009536743164
    3. '_' → logprob: -13.000009536743164
    4. '.append' → logprob: -13.500009536743164
    5. '=' → logprob: -14.375009536743164
    6. '_append' → logprob: -15.875009536743164
    7. '_ro' → logprob: -16.000009536743164
    8. '_count' → logprob: -16.125009536743164
    9. '=_' → logprob: -16.250009536743164
    10. 'cum' → logprob: -16.375009536743164

Token 379: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.2283203899860382
    2. 'um' → logprob: -1.6033203601837158
    3. 'cum' → logprob: -5.978320598602295
    4. '.append' → logprob: -9.353320121765137
    5. 'c' → logprob: -9.603320121765137
    6. '_' → logprob: -9.603320121765137
    7. 'm' → logprob: -10.728320121765137
    8. '[-' → logprob: -10.978320121765137
    9. 'umulative' → logprob: -11.103320121765137
    10. 'umul' → logprob: -11.353320121765137

Token 380: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.306760805164231e-05
    2. '.' → logprob: -12.25001335144043
    3. '[-' → logprob: -12.25001335144043
    4. 'append' → logprob: -13.12501335144043
    5. ' .' → logprob: -13.87501335144043
    6. '_append' → logprob: -15.25001335144043
    7. '.app' → logprob: -15.50001335144043
    8. '.ap' → logprob: -16.37501335144043
    9. '_ro' → logprob: -18.87501335144043
    10. 'Append' → logprob: -19.00001335144043

Token 381: '(ro' (ID: 193804)
  Prédit: '(ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ro' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -13.125003814697266
    3. 'ro' → logprob: -13.500003814697266
    4. ' ro' → logprob: -17.125003814697266
    5. '_ro' → logprob: -18.000003814697266
    6. '(rot' → logprob: -18.875003814697266
    7. ' (' → logprob: -19.875003814697266
    8. '.ro' → logprob: -20.500003814697266
    9. '(
' → logprob: -20.750003814697266
    10. '(r' → logprob: -21.125003814697266

Token 382: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5148736834526062
    2. '+' → logprob: -1.264873743057251
    3. ' +' → logprob: -2.389873743057251
    4. '_ro' → logprob: -3.639873743057251
    5. 'c' → logprob: -6.514873504638672
    6. '+c' → logprob: -8.139873504638672
    7. '_' → logprob: -8.889873504638672
    8. ')' → logprob: -8.889873504638672
    9. '_r' → logprob: -9.764873504638672
    10. 'ro' → logprob: -9.889873504638672

Token 383: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.30210068821907043
    2. '_c' → logprob: -1.927100658416748
    3. 'c' → logprob: -2.427100658416748
    4. 'm' → logprob: -4.302100658416748
    5. 'uml' → logprob: -5.427100658416748
    6. 'cum' → logprob: -5.552100658416748
    7. '[' → logprob: -6.802100658416748
    8. '+' → logprob: -7.552100658416748
    9. '+c' → logprob: -7.802100658416748
    10. 'umulative' → logprob: -8.052101135253906

Token 384: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -17.125
    3. '[' → logprob: -17.875
    4. ' [-' → logprob: -18.0
    5. '[len' → logprob: -19.25
    6. '+' → logprob: -20.375
    7. '][-' → logprob: -20.5
    8. '   ' → logprob: -21.25
    9. '```' → logprob: -21.5
    10. '
' → logprob: -22.625

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.500000953674316
    3. ']' → logprob: -15.500000953674316
    4. '()' → logprob: -17.125
    5. ']+' → logprob: -17.25
    6. '0' → logprob: -17.5
    7. '+' → logprob: -17.75
    8. '```' → logprob: -18.0
    9. '   ' → logprob: -18.5
    10. 'len' → logprob: -18.5

Token 386: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868715465068817
    2. '+' → logprob: -1.136871576309204
    3. ')' → logprob: -15.636871337890625
    4. ')+' → logprob: -16.261871337890625
    5. ' +
' → logprob: -16.636871337890625
    6. ' ' → logprob: -16.636871337890625
    7. '+
' → logprob: -16.886871337890625
    8. ' ' → logprob: -17.136871337890625
    9. ' plus' → logprob: -17.386871337890625
    10. '+r' → logprob: -17.386871337890625

Token 387: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931476593017578
    2. ' +' → logprob: -0.6931476593017578
    3. ')' → logprob: -16.568147659301758
    4. ' ' → logprob: -16.568147659301758
    5. '+r' → logprob: -16.693147659301758
    6. '+
' → logprob: -16.818147659301758
    7. ' ' → logprob: -16.818147659301758
    8. ' +
' → logprob: -16.943147659301758
    9. '＋' → logprob: -17.193147659301758
    10. ' plus' → logprob: -17.193147659301758

Token 388: ' ro' (ID: 974)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -3.2020991056924686e-05
    2. ' ro' → logprob: -10.375032424926758
    3. '(ro' → logprob: -14.250032424926758
    4. ' ' → logprob: -17.125032424926758
    5. '_ro' → logprob: -17.250032424926758
    6. ')' → logprob: -17.750032424926758
    7. 'rop' → logprob: -18.500032424926758
    8. '   ' → logprob: -18.625032424926758
    9. '  ' → logprob: -18.750032424926758
    10. '
' → logprob: -19.250032424926758

Token 389: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038077641278505325
    2. ')
' → logprob: -3.2880775928497314
    3. ' )' → logprob: -10.538077354431152
    4. ' )
' → logprob: -12.413077354431152
    5. ')
' → logprob: -12.788077354431152
    6. ')

' → logprob: -13.788077354431152
    7. '),' → logprob: -13.913077354431152
    8. '       ' → logprob: -15.538077354431152
    9. '   ' → logprob: -15.663077354431152
    10. '           ' → logprob: -16.28807830810547

Token 390: '           ' (ID: 352)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.04153991490602493
    2. ' rc' → logprob: -3.2915399074554443
    3. ')' → logprob: -6.791540145874023
    4. '       ' → logprob: -6.916540145874023
    5. '_rc' → logprob: -7.291540145874023
    6. '(rc' → logprob: -8.666540145874023
    7. '           ' → logprob: -8.916540145874023
    8. '.rc' → logprob: -9.041540145874023
    9. '   ' → logprob: -9.291540145874023
    10. '	rc' → logprob: -9.666540145874023

Token 391: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' (adapté à ' rc') → logprob: -0.0004319804720580578
    2. ' rc' → logprob: -7.750432014465332
    3. '_rc' → logprob: -14.500432014465332
    4. '.rc' → logprob: -14.750432014465332
    5. '	rc' → logprob: -15.750432014465332
    6. '(rc' → logprob: -16.125431060791016
    7. '       ' → logprob: -16.875431060791016
    8. '           ' → logprob: -18.500431060791016
    9. '   ' → logprob: -18.625431060791016
    10. '  ' → logprob: -19.875431060791016

Token 392: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1472419600977446e-06
    2. '.append' → logprob: -13.875000953674316
    3. '._' → logprob: -17.250001907348633
    4. 'c' → logprob: -17.375001907348633
    5. ')_' → logprob: -17.375001907348633
    6. ' _' → logprob: -17.500001907348633
    7. '           ' → logprob: -17.875001907348633
    8. '[' → logprob: -18.250001907348633
    9. '_' → logprob: -18.625001907348633
    10. '[_' → logprob: -18.625001907348633

Token 393: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.002675537718459964
    2. 'um' → logprob: -6.002675533294678
    3. 'cum' → logprob: -9.127676010131836
    4. '.append' → logprob: -9.752676010131836
    5. 'uml' → logprob: -11.252676010131836
    6. 'umul' → logprob: -12.002676010131836
    7. 'c' → logprob: -12.127676010131836
    8. 'umulative' → logprob: -13.002676010131836
    9. 'umsum' → logprob: -13.002676010131836
    10. 'ump' → logprob: -14.252676010131836

Token 394: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.491498531133402e-06
    2. ' .' → logprob: -12.750009536743164
    3. '.' → logprob: -12.875009536743164
    4. '_c' → logprob: -13.250009536743164
    5. '[-' → logprob: -13.625009536743164
    6. 'append' → logprob: -14.750009536743164
    7. '_append' → logprob: -15.125009536743164
    8. '._' → logprob: -15.375009536743164
    9. '.extend' → logprob: -16.250009536743164
    10. 'c' → logprob: -17.000009536743164

Token 395: '(rc' (ID: 83646)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.10126768797636032
    2. '(rc' → logprob: -2.3512675762176514
    3. ' rc' → logprob: -6.8512678146362305
    4. '	rc' → logprob: -13.60126781463623
    5. '.rc' → logprob: -13.97626781463623
    6. '_rc' → logprob: -15.97626781463623
    7. 'ro' → logprob: -16.351266860961914
    8. 'sc' → logprob: -16.976266860961914
    9. '(' → logprob: -17.351266860961914
    10. '   ' → logprob: -18.226266860961914

Token 396: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0015259294304996729
    2. '[-' → logprob: -6.50152587890625
    3. 'c' → logprob: -11.50152587890625
    4. '_rc' → logprob: -12.00152587890625
    5. '[_' → logprob: -12.25152587890625
    6. '[' → logprob: -14.12652587890625
    7. ')' → logprob: -14.62652587890625
    8. '+' → logprob: -14.87652587890625
    9. '_cc' → logprob: -15.25152587890625
    10. '_sc' → logprob: -15.25152587890625

Token 397: 'um' (ID: 394)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.06437656283378601
    2. '_c' → logprob: -2.8143765926361084
    3. 'c' → logprob: -6.064376354217529
    4. '_sc' → logprob: -10.439376831054688
    5. 'sc' → logprob: -11.064376831054688
    6. '[' → logprob: -11.439376831054688
    7. '[_' → logprob: -11.689376831054688
    8. 'C' → logprob: -12.564376831054688
    9. '_' → logprob: -12.814376831054688
    10. 'm' → logprob: -13.189376831054688

Token 398: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '[' → logprob: -19.0
    3. ' [-' → logprob: -21.125
    4. ')' → logprob: -21.25
    5. '][-' → logprob: -21.625
    6. '[
' → logprob: -22.125
    7. '[:-' → logprob: -22.875
    8. '
' → logprob: -23.0
    9. '...' → logprob: -23.125
    10. '```' → logprob: -23.25

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -15.125000953674316
    3. 'rc' → logprob: -15.500000953674316
    4. '[-' → logprob: -15.500000953674316
    5. ' ' → logprob: -15.812500953674316
    6. '-' → logprob: -16.812501907348633
    7. '```' → logprob: -16.812501907348633
    8. '0' → logprob: -17.250001907348633
    9. '
' → logprob: -17.625001907348633
    10. 'last' → logprob: -17.812501907348633

Token 400: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.02633873000741005
    2. '+' → logprob: -3.651338815689087
    3. ')' → logprob: -10.526338577270508
    4. '[' → logprob: -11.776338577270508
    5. ' ' → logprob: -13.026338577270508
    6. ')+' → logprob: -14.276338577270508
    7. '(' → logprob: -14.401338577270508
    8. '()' → logprob: -16.026338577270508
    9. '(rc' → logprob: -16.526338577270508
    10. '()+' → logprob: -16.901338577270508

Token 401: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018165510147809982
    2. '+' → logprob: -4.018165588378906
    3. ')' → logprob: -11.643165588378906
    4. ' ' → logprob: -13.143165588378906
    5. '(rc' → logprob: -13.143165588378906
    6. ')+' → logprob: -14.518165588378906
    7. '(' → logprob: -14.518165588378906
    8. ' +
' → logprob: -14.643165588378906
    9. '()+' → logprob: -15.518165588378906
    10. ' ' → logprob: -15.643165588378906

Token 402: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.0002615742268972099
    2. ' rc' → logprob: -8.250261306762695
    3. '(rc' → logprob: -15.250261306762695
    4. '	rc' → logprob: -17.750261306762695
    5. 'sc' → logprob: -17.750261306762695
    6. '.rc' → logprob: -19.375261306762695
    7. '_rc' → logprob: -20.125261306762695
    8. ')' → logprob: -21.125261306762695
    9. '1' → logprob: -21.250261306762695
    10. ' ' → logprob: -21.375261306762695

Token 403: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.555064857006073
    2. ')' → logprob: -1.0550649166107178
    3. '           ' → logprob: -2.5550649166107178
    4. '       ' → logprob: -10.180065155029297
    5. ')
' → logprob: -10.430065155029297
    6. '          ' → logprob: -11.555065155029297
    7. '               ' → logprob: -11.805065155029297
    8. '   ' → logprob: -12.305065155029297
    9. 'co' → logprob: -12.430065155029297
    10. '(co' → logprob: -12.805065155029297

Token 404: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17789068818092346
    2. 'co' → logprob: -1.927890658378601
    3. '       ' → logprob: -4.302890777587891
    4. ' co' → logprob: -5.677890777587891
    5. '               ' → logprob: -8.80289077758789
    6. '          ' → logprob: -9.05289077758789
    7. '         ' → logprob: -9.55289077758789
    8. '   ' → logprob: -9.67789077758789
    9. '     ' → logprob: -10.42789077758789
    10. '```' → logprob: -10.42789077758789

Token 405: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' (adapté à ' co') → logprob: -0.0004307884373702109
    2. ' co' → logprob: -7.750430583953857
    3. '(co' → logprob: -18.250431060791016
    4. '       ' → logprob: -18.625431060791016
    5. '   ' → logprob: -19.000431060791016
    6. ' ' → logprob: -19.375431060791016
    7. '           ' → logprob: -19.625431060791016
    8. '_co' → logprob: -19.875431060791016
    9. 'so' → logprob: -19.875431060791016
    10. '.co' → logprob: -20.750431060791016

Token 406: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.128163257315464e-07
    2. 'c' → logprob: -15.625
    3. 'cum' → logprob: -16.625
    4. '_co' → logprob: -17.5
    5. '[' → logprob: -17.75
    6. '.append' → logprob: -18.75
    7. '<|end|>' → logprob: -19.125
    8. '	c' → logprob: -20.0
    9. 'co' → logprob: -20.125
    10. '
' → logprob: -20.125

Token 407: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.02359367348253727
    2. 'cum' → logprob: -4.523593902587891
    3. 'um' → logprob: -4.773593902587891
    4. 'c' → logprob: -5.523593902587891
    5. 'm' → logprob: -12.27359390258789
    6. '[' → logprob: -12.64859390258789
    7. '.append' → logprob: -12.89859390258789
    8. 'umul' → logprob: -13.14859390258789
    9. 'umsum' → logprob: -13.14859390258789
    10. 'Cum' → logprob: -13.52359390258789

Token 408: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.41866585687967e-06
    2. 'append' → logprob: -12.125008583068848
    3. '.' → logprob: -13.875008583068848
    4. 'c' → logprob: -14.125008583068848
    5. ' .' → logprob: -14.250008583068848
    6. '[' → logprob: -15.750008583068848
    7. 'co' → logprob: -15.875008583068848
    8. 'app' → logprob: -16.25000762939453
    9. '_c' → logprob: -16.75000762939453
    10. 'Append' → logprob: -17.50000762939453

Token 409: '(co' (ID: 41772)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.005238856188952923
    2. '(co' → logprob: -5.255239009857178
    3. ' co' → logprob: -12.25523853302002
    4. '[' → logprob: -15.50523853302002
    5. 'cc' → logprob: -17.505239486694336
    6. '   ' → logprob: -18.005239486694336
    7. 'c' → logprob: -18.755239486694336
    8. '/co' → logprob: -19.005239486694336
    9. '
' → logprob: -19.255239486694336
    10. '.co' → logprob: -19.505239486694336

Token 410: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.07388785481452942
    2. 'co' → logprob: -3.323887825012207
    3. 'cum' → logprob: -3.823887825012207
    4. 'c' → logprob: -4.323887825012207
    5. '[' → logprob: -9.948887825012207
    6. '_co' → logprob: -10.948887825012207
    7. 'cc' → logprob: -11.073887825012207
    8. '[-' → logprob: -11.198887825012207
    9. '
' → logprob: -11.823887825012207
    10. 'C' → logprob: -12.448887825012207

Token 411: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.03804045543074608
    2. 'c' → logprob: -3.4130403995513916
    3. '[-' → logprob: -5.663040637969971
    4. 'cum' → logprob: -8.038040161132812
    5. 'co' → logprob: -8.413040161132812
    6. 'om' → logprob: -8.788040161132812
    7. 'um' → logprob: -9.788040161132812
    8. 'C' → logprob: -9.913040161132812
    9. 'm' → logprob: -10.288040161132812
    10. '[' → logprob: -10.663040161132812

Token 412: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00026729601086117327
    2. 'co' → logprob: -8.500267028808594
    3. '[' → logprob: -9.750267028808594
    4. '.append' → logprob: -13.125267028808594
    5. 'c' → logprob: -13.625267028808594
    6. '[:-' → logprob: -14.375267028808594
    7. ' co' → logprob: -15.125267028808594
    8. '_co' → logprob: -15.375267028808594
    9. '[len' → logprob: -15.500267028808594
    10. '.co' → logprob: -15.500267028808594

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019814051687717438
    2. 'co' → logprob: -4.0198140144348145
    3. '-' → logprob: -6.6448140144348145
    4. '[-' → logprob: -8.769814491271973
    5. 'cc' → logprob: -9.144814491271973
    6. '0' → logprob: -9.519814491271973
    7. ' co' → logprob: -11.644814491271973
    8. '
' → logprob: -13.144814491271973
    9. '[' → logprob: -13.269814491271973
    10. ' -' → logprob: -13.519814491271973

Token 414: ']' (ID: 60)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.10443200916051865
    2. ' +' → logprob: -3.3544321060180664
    3. '+' → logprob: -3.6044321060180664
    4. 'co' → logprob: -4.229432106018066
    5. '[' → logprob: -4.354432106018066
    6. ')' → logprob: -4.979432106018066
    7. '(co' → logprob: -6.479432106018066
    8. ' co' → logprob: -7.729432106018066
    9. ']' → logprob: -8.229432106018066
    10. '           ' → logprob: -8.854432106018066

Token 415: ' +' (ID: 659)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.24348382651805878
    2. '[' → logprob: -2.243483781814575
    3. '[-' → logprob: -3.368483781814575
    4. '+' → logprob: -3.368483781814575
    5. '(co' → logprob: -3.868483781814575
    6. ' +' → logprob: -4.493484020233154
    7. '.append' → logprob: -5.743484020233154
    8. 'cc' → logprob: -6.243484020233154
    9. ' co' → logprob: -6.243484020233154
    10. ')' → logprob: -7.243484020233154

Token 416: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.0028410146478563547
    2. ' co' → logprob: -5.877840995788574
    3. 'cc' → logprob: -10.877840995788574
    4. '(co' → logprob: -11.002840995788574
    5. 'cco' → logprob: -16.37784194946289
    6. 'c' → logprob: -16.37784194946289
    7. ' cc' → logprob: -16.50284194946289
    8. '   ' → logprob: -16.50284194946289
    9. '
' → logprob: -16.87784194946289
    10. ')' → logprob: -16.87784194946289

Token 417: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2593453526496887
    2. '           ' → logprob: -1.884345293045044
    3. 'cc' → logprob: -3.009345293045044
    4. ')' → logprob: -4.259345531463623
    5. 'co' → logprob: -4.884345531463623
    6. '       ' → logprob: -5.259345531463623
    7. '               ' → logprob: -9.509345054626465
    8. ' co' → logprob: -9.759345054626465
    9. ' cc' → logprob: -10.259345054626465
    10. '          ' → logprob: -10.634345054626465

Token 418: '           ' (ID: 352)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.5836899876594543
    2. '           ' → logprob: -0.8336899876594543
    3. 'co' → logprob: -5.458690166473389
    4. '       ' → logprob: -5.708690166473389
    5. ' cc' → logprob: -9.95868968963623
    6. '          ' → logprob: -10.08368968963623
    7. '               ' → logprob: -11.20868968963623
    8. '         ' → logprob: -11.33368968963623
    9. '   ' → logprob: -12.08368968963623
    10. '	cc' → logprob: -12.20868968963623

Token 419: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -0.00020830852736253291
    2. ' cc' → logprob: -8.500207901000977
    3. 'co' → logprob: -12.500207901000977
    4. '	cc' → logprob: -14.750207901000977
    5. '       ' → logprob: -15.000207901000977
    6. '           ' → logprob: -15.750207901000977
    7. '   ' → logprob: -16.250207901000977
    8. 'cco' → logprob: -16.875207901000977
    9. '_cc' → logprob: -17.875207901000977
    10. '               ' → logprob: -18.125207901000977

Token 420: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.2127087504486553e-05
    2. '.append' → logprob: -11.000021934509277
    3. '_cc' → logprob: -13.125021934509277
    4. 'cc' → logprob: -13.250021934509277
    5. 'c' → logprob: -13.500021934509277
    6. 'append' → logprob: -16.250022888183594
    7. 'cum' → logprob: -17.375022888183594
    8. '[' → logprob: -17.375022888183594
    9. '_co' → logprob: -18.375022888183594
    10. 'app' → logprob: -18.625022888183594

Token 421: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.3173319399356842
    2. 'c' → logprob: -1.9423319101333618
    3. 'cum' → logprob: -2.6923320293426514
    4. 'cc' → logprob: -2.8173320293426514
    5. '_cc' → logprob: -8.06733226776123
    6. '.append' → logprob: -8.56733226776123
    7. 'sc' → logprob: -8.69233226776123
    8. 'co' → logprob: -8.81733226776123
    9. 'um' → logprob: -9.19233226776123
    10. 'uc' → logprob: -9.44233226776123

Token 422: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.2352385965641588e-05
    2. 'append' → logprob: -12.000012397766113
    3. 'cc' → logprob: -12.750012397766113
    4. 'c' → logprob: -13.375012397766113
    5. ' .' → logprob: -14.625012397766113
    6. '.' → logprob: -15.000012397766113
    7. 'app' → logprob: -15.375012397766113
    8. '_c' → logprob: -15.625012397766113
    9. '_cc' → logprob: -15.625012397766113
    10. '.extend' → logprob: -15.750012397766113

Token 423: '(cc' (ID: 70624)
  Prédit: '(cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cc' → logprob: -0.31397294998168945
    2. 'cc' → logprob: -1.3139729499816895
    3. ' cc' → logprob: -7.3139729499816895
    4. '[' → logprob: -10.563972473144531
    5. '	cc' → logprob: -11.688972473144531
    6. '_cc' → logprob: -12.438972473144531
    7. 'sc' → logprob: -13.563972473144531
    8. '.cc' → logprob: -13.813972473144531
    9. '           ' → logprob: -13.938972473144531
    10. 'co' → logprob: -14.938972473144531

Token 424: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0007591230678372085
    2. 'c' → logprob: -7.250759124755859
    3. '[-' → logprob: -10.37575912475586
    4. '_cc' → logprob: -11.75075912475586
    5. 'cc' → logprob: -12.37575912475586
    6. 'cum' → logprob: -12.87575912475586
    7. '[' → logprob: -13.50075912475586
    8. 'C' → logprob: -13.62575912475586
    9. 'um' → logprob: -15.50075912475586
    10. 'uc' → logprob: -16.00075912475586

Token 425: 'um' (ID: 394)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3622726798057556
    2. '_c' → logprob: -1.6122727394104004
    3. 'cc' → logprob: -2.3622727394104004
    4. 'cum' → logprob: -4.9872727394104
    5. '[-' → logprob: -5.8622727394104
    6. '[' → logprob: -8.237272262573242
    7. '_cc' → logprob: -9.112272262573242
    8. 'um' → logprob: -9.362272262573242
    9. 'cm' → logprob: -9.487272262573242
    10. 'co' → logprob: -11.112272262573242

Token 426: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. 'cc' → logprob: -16.125
    3. '[' → logprob: -17.75
    4. '.append' → logprob: -18.125
    5. '       ' → logprob: -18.375
    6. '           ' → logprob: -18.375
    7. ' [-' → logprob: -19.375
    8. '        ' → logprob: -20.25
    9. '
' → logprob: -20.875
    10. '[
' → logprob: -21.125

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03485628962516785
    2. 'cc' → logprob: -3.7848563194274902
    3. '-' → logprob: -4.53485631942749
    4. '[-' → logprob: -7.40985631942749
    5. '0' → logprob: -9.034855842590332
    6. ' cc' → logprob: -10.284855842590332
    7. '(cc' → logprob: -11.409855842590332
    8. '_cc' → logprob: -11.784855842590332
    9. 'last' → logprob: -12.534855842590332
    10. '(-' → logprob: -12.534855842590332

Token 428: ']' (ID: 60)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.003982346970587969
    2. ']' → logprob: -6.3789825439453125
    3. 'cc' → logprob: -6.8789825439453125
    4. ')' → logprob: -7.6289825439453125
    5. '[' → logprob: -7.8789825439453125
    6. '_cc' → logprob: -9.253982543945312
    7. '+' → logprob: -9.628982543945312
    8. '           ' → logprob: -9.753982543945312
    9. '(cc' → logprob: -10.003982543945312
    10. ' cc' → logprob: -10.503982543945312

Token 429: ' +' (ID: 659)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002108118060277775
    2. 'cc' → logprob: -8.750210762023926
    3. '.append' → logprob: -11.125210762023926
    4. '[' → logprob: -11.750210762023926
    5. '           ' → logprob: -11.750210762023926
    6. '(cc' → logprob: -12.000210762023926
    7. '       ' → logprob: -12.875210762023926
    8. ')' → logprob: -12.875210762023926
    9. ' cc' → logprob: -13.250210762023926
    10. 'c' → logprob: -13.375210762023926

Token 430: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.002485884353518486
    2. ' cc' → logprob: -6.002485752105713
    3. 'sc' → logprob: -11.877486228942871
    4. '(cc' → logprob: -13.752486228942871
    5. 'c' → logprob: -14.002486228942871
    6. '	cc' → logprob: -14.502486228942871
    7. '_cc' → logprob: -14.877486228942871
    8. '           ' → logprob: -16.252485275268555
    9. '.cc' → logprob: -16.377485275268555
    10. ' sc' → logprob: -16.377485275268555

Token 431: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006008075084537268
    2. 'cc' → logprob: -6.256008148193359
    3. ')' → logprob: -6.881008148193359
    4. '[-' → logprob: -6.881008148193359
    5. 'co' → logprob: -7.256008148193359
    6. '          ' → logprob: -8.00600814819336
    7. '[' → logprob: -8.63100814819336
    8. 'sc' → logprob: -8.75600814819336
    9. '       ' → logprob: -8.75600814819336
    10. '.append' → logprob: -8.88100814819336

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2243470400571823
    2. 'so' → logprob: -1.9743469953536987
    3. '       ' → logprob: -2.8493471145629883
    4. '   ' → logprob: -5.849347114562988
    5. '          ' → logprob: -7.974347114562988
    6. '               ' → logprob: -8.224347114562988
    7. '         ' → logprob: -8.474347114562988
    8. 'sc' → logprob: -9.099347114562988
    9. '     ' → logprob: -9.349347114562988
    10. ' so' → logprob: -9.599347114562988

Token 433: ' so' (ID: 813)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' (adapté à ' so') → logprob: -2.7610454708337784e-05
    2. ' so' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.00002670288086
    4. ' ' → logprob: -18.62502670288086
    5. '  ' → logprob: -19.25002670288086
    6. 'sc' → logprob: -20.75002670288086
    7. '```' → logprob: -21.62502670288086
    8. '       ' → logprob: -22.25002670288086
    9. 'co' → logprob: -22.50002670288086
    10. '    ' → logprob: -23.00002670288086

Token 434: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.128163257315464e-07
    2. '_sc' → logprob: -16.0
    3. '_so' → logprob: -16.125
    4. 'c' → logprob: -18.0
    5. '_s' → logprob: -18.5
    6. '\' → logprob: -19.0
    7. 's' → logprob: -19.125
    8. '```' → logprob: -19.125
    9. '._' → logprob: -19.25
    10. ' _' → logprob: -19.25

Token 435: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.002566383685916662
    2. 'cum' → logprob: -6.752566337585449
    3. 'c' → logprob: -7.002566337585449
    4. 'um' → logprob: -8.00256633758545
    5. '[' → logprob: -10.37756633758545
    6. 'm' → logprob: -10.75256633758545
    7. 'umulative' → logprob: -10.75256633758545
    8. 'umul' → logprob: -11.00256633758545
    9. 'sc' → logprob: -11.37756633758545
    10. 'so' → logprob: -11.50256633758545

Token 436: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.531315314830863e-06
    2. 'append' → logprob: -12.750003814697266
    3. '.' → logprob: -15.250003814697266
    4. '[' → logprob: -15.750003814697266
    5. '[-' → logprob: -16.750003814697266
    6. ' .' → logprob: -16.875003814697266
    7. 'Append' → logprob: -17.000003814697266
    8. '_append' → logprob: -17.375003814697266
    9. '.Append' → logprob: -18.250003814697266
    10. '=' → logprob: -18.625003814697266

Token 437: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0788951888680458
    2. 'so' → logprob: -2.578895092010498
    3. ' so' → logprob: -12.828895568847656
    4. '[' → logprob: -12.953895568847656
    5. '(sc' → logprob: -15.828895568847656
    6. 'sc' → logprob: -16.828895568847656
    7. ' (' → logprob: -16.828895568847656
    8. '   ' → logprob: -16.828895568847656
    9. '_so' → logprob: -17.703895568847656
    10. '(
' → logprob: -18.703895568847656

Token 438: 'so' (ID: 786)
  Prédit: 'so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -8.061054359131958e-06
    2. ' so' → logprob: -11.750007629394531
    3. 'sc' → logprob: -16.62500762939453
    4. '   ' → logprob: -18.75000762939453
    5. '(' → logprob: -18.87500762939453
    6. '  ' → logprob: -18.87500762939453
    7. 's' → logprob: -19.75000762939453
    8. 'So' → logprob: -20.12500762939453
    9. ' ' → logprob: -20.25000762939453
    10. '[' → logprob: -20.25000762939453

Token 439: '_c' (ID: 1303)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.039613962173461914
    2. '_c' → logprob: -3.414613962173462
    3. '_so' → logprob: -6.164613723754883
    4. '[' → logprob: -6.539613723754883
    5. 'sc' → logprob: -6.914613723754883
    6. '[-' → logprob: -7.414613723754883
    7. ' so' → logprob: -8.164613723754883
    8. 'c' → logprob: -8.539613723754883
    9. 's' → logprob: -9.039613723754883
    10. ')' → logprob: -10.539613723754883

Token 440: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.320901483297348
    2. 'c' → logprob: -2.070901393890381
    3. 'm' → logprob: -2.570901393890381
    4. 'cum' → logprob: -3.320901393890381
    5. 'so' → logprob: -3.820901393890381
    6. 'sc' → logprob: -5.570901393890381
    7. '[' → logprob: -5.695901393890381
    8. 'um' → logprob: -5.820901393890381
    9. 'Cum' → logprob: -6.695901393890381
    10. '[-' → logprob: -6.695901393890381

Token 441: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. '
' → logprob: -19.25
    4. '[
' → logprob: -19.375
    5. '[:-' → logprob: -19.625
    6. 's' → logprob: -20.75
    7. '```' → logprob: -21.0
    8. '#' → logprob: -21.625
    9. 'so' → logprob: -21.75
    10. '   ' → logprob: -21.875

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00042209390085190535
    2. '[-' → logprob: -8.250422477722168
    3. 'sc' → logprob: -9.000422477722168
    4. '-' → logprob: -11.250422477722168
    5. 's' → logprob: -12.250422477722168
    6. '_c' → logprob: -12.500422477722168
    7. '][-' → logprob: -12.625422477722168
    8. 'c' → logprob: -12.750422477722168
    9. '
' → logprob: -13.500422477722168
    10. 'last' → logprob: -13.750422477722168

Token 443: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.048650387674570084
    2. '+' → logprob: -3.0486505031585693
    3. '[' → logprob: -10.298650741577148
    4. ')' → logprob: -10.548650741577148
    5. ' ' → logprob: -13.548650741577148
    6. ')+' → logprob: -14.423650741577148
    7. '(' → logprob: -15.923650741577148
    8. ' +
' → logprob: -16.04865074157715
    9. '           ' → logprob: -16.17365074157715
    10. '```' → logprob: -16.29865074157715

Token 444: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3133084774017334
    2. '+' → logprob: -1.3133084774017334
    3. '[' → logprob: -10.063308715820312
    4. ')' → logprob: -13.313308715820312
    5. ' ' → logprob: -13.813308715820312
    6. ')+' → logprob: -14.563308715820312
    7. '＋' → logprob: -15.813308715820312
    8. '       ' → logprob: -16.313308715820312
    9. '```' → logprob: -16.313308715820312
    10. '   ' → logprob: -16.313308715820312

Token 445: ' so' (ID: 813)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.0004764287732541561
    2. ' so' → logprob: -8.000476837158203
    3. 'sc' → logprob: -8.875476837158203
    4. 's' → logprob: -15.375476837158203
    5. '
' → logprob: -15.500476837158203
    6. '   ' → logprob: -15.750476837158203
    7. ' sc' → logprob: -16.000476837158203
    8. ' ' → logprob: -16.375476837158203
    9. '```' → logprob: -16.500476837158203
    10. ' ' → logprob: -16.625476837158203

Token 446: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02726173587143421
    2. ')' → logprob: -3.777261734008789
    3. '           ' → logprob: -5.527261734008789
    4. ')
' → logprob: -11.027261734008789
    5. '       ' → logprob: -12.027261734008789
    6. '          ' → logprob: -12.527261734008789
    7. ' )
' → logprob: -12.902261734008789
    8. '         ' → logprob: -14.402261734008789
    9. '   ' → logprob: -14.902261734008789
    10. '               ' → logprob: -15.027261734008789

Token 447: '           ' (ID: 352)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.005175524391233921
    2. '           ' → logprob: -5.505175590515137
    3. '       ' → logprob: -7.130175590515137
    4. '         ' → logprob: -8.630175590515137
    5. '	sc' → logprob: -9.505175590515137
    6. ' sc' → logprob: -11.880175590515137
    7. '(sc' → logprob: -12.005175590515137
    8. '   ' → logprob: -12.005175590515137
    9. '```' → logprob: -12.005175590515137
    10. '          ' → logprob: -12.255175590515137

Token 448: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' (adapté à ' sc') → logprob: -0.006716079078614712
    2. ' sc' → logprob: -5.006716251373291
    3. '_sc' → logprob: -14.631715774536133
    4. '(sc' → logprob: -15.631715774536133
    5. '	sc' → logprob: -15.881715774536133
    6. '.sc' → logprob: -17.756715774536133
    7. '=sc' → logprob: -18.631715774536133
    8. 'Sc' → logprob: -19.006715774536133
    9. '-sc' → logprob: -19.131715774536133
    10. ' ' → logprob: -20.881715774536133

Token 449: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -16.75
    3. '_sc' → logprob: -17.125
    4. '._' → logprob: -17.5
    5. 'c' → logprob: -17.75
    6. '[_' → logprob: -17.875
    7. ' _' → logprob: -18.25
    8. '```' → logprob: -18.25
    9. '_' → logprob: -18.875
    10. '\' → logprob: -19.0

Token 450: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0005078765680082142
    2. 'cum' → logprob: -7.750507831573486
    3. 'c' → logprob: -10.125508308410645
    4. '_c' → logprob: -10.750508308410645
    5. '[' → logprob: -12.125508308410645
    6. 'u' → logprob: -13.125508308410645
    7. '_um' → logprob: -13.125508308410645
    8. 'uml' → logprob: -13.500508308410645
    9. 'umul' → logprob: -14.000508308410645
    10. 'uc' → logprob: -14.125508308410645

Token 451: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.896309739408025e-07
    2. 'append' → logprob: -14.625000953674316
    3. '[-' → logprob: -15.500000953674316
    4. '.' → logprob: -17.0
    5. ' .' → logprob: -17.25
    6. '_append' → logprob: -17.5
    7. 'app' → logprob: -18.0
    8. '.Append' → logprob: -18.0
    9. 'Append' → logprob: -18.125
    10. '[' → logprob: -18.375

Token 452: '(sc' (ID: 31442)
  Prédit: '(sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sc' → logprob: -0.0016563748940825462
    2. 'sc' → logprob: -6.501656532287598
    3. 'so' → logprob: -9.001656532287598
    4. '(' → logprob: -10.501656532287598
    5. '=sc' → logprob: -13.751656532287598
    6. '	sc' → logprob: -13.876656532287598
    7. ' sc' → logprob: -14.751656532287598
    8. '   ' → logprob: -15.251656532287598
    9. '(s' → logprob: -15.876656532287598
    10. '[' → logprob: -16.37665557861328

Token 453: '_c' (ID: 1303)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.1279841512441635
    2. '_c' → logprob: -2.502984046936035
    3. '[-' → logprob: -4.127984046936035
    4. '_sc' → logprob: -4.252984046936035
    5. 'c' → logprob: -5.252984046936035
    6. '[' → logprob: -6.627984046936035
    7. 's' → logprob: -6.877984046936035
    8. ' sc' → logprob: -8.627984046936035
    9. 'cum' → logprob: -10.502984046936035
    10. '	sc' → logprob: -10.627984046936035

Token 454: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.03730732202529907
    2. '[-' → logprob: -3.9123072624206543
    3. '[' → logprob: -4.662307262420654
    4. 'sc' → logprob: -5.787307262420654
    5. 'm' → logprob: -6.162307262420654
    6. '_c' → logprob: -6.787307262420654
    7. 'c' → logprob: -7.537307262420654
    8. 'cum' → logprob: -9.787307739257812
    9. '-' → logprob: -10.162307739257812
    10. '_sc' → logprob: -10.287307739257812

Token 455: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. '[
' → logprob: -17.375
    4. ' ' → logprob: -18.625
    5. '#' → logprob: -19.0
    6. '[:-' → logprob: -19.0
    7. '       ' → logprob: -19.125
    8. '   ' → logprob: -19.25
    9. ' [-' → logprob: -19.375
    10. '
' → logprob: -19.375

Token 456: '1' (ID: 16)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.00771357724443078
    2. '1' → logprob: -5.382713794708252
    3. '-' → logprob: -5.882713794708252
    4. '[-' → logprob: -8.882713317871094
    5. '_sc' → logprob: -9.882713317871094
    6. '-sc' → logprob: -10.007713317871094
    7. '(sc' → logprob: -10.382713317871094
    8. ' sc' → logprob: -10.757713317871094
    9. '(-' → logprob: -12.507713317871094
    10. '0' → logprob: -12.632713317871094

Token 457: ']' (ID: 60)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0013480921043083072
    2. '+' → logprob: -7.50134801864624
    3. '[' → logprob: -7.87634801864624
    4. ' +' → logprob: -8.376348495483398
    5. ')' → logprob: -9.626348495483398
    6. '           ' → logprob: -10.126348495483398
    7. ']' → logprob: -10.501348495483398
    8. '       ' → logprob: -11.251348495483398
    9. '`' → logprob: -11.751348495483398
    10. '-' → logprob: -11.876348495483398

Token 458: ' +' (ID: 659)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00015240935317706317
    2. '+' → logprob: -9.125152587890625
    3. '[' → logprob: -10.750152587890625
    4. ' +' → logprob: -11.000152587890625
    5. ')' → logprob: -13.500152587890625
    6. 'sc' → logprob: -13.750152587890625
    7. ' [-' → logprob: -14.625152587890625
    8. '
' → logprob: -15.125152587890625
    9. ' ' → logprob: -15.125152587890625
    10. '...' → logprob: -15.375152587890625

Token 459: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.0002627662615850568
    2. ' sc' → logprob: -8.250263214111328
    3. '(sc' → logprob: -13.625263214111328
    4. '	sc' → logprob: -16.500263214111328
    5. '_sc' → logprob: -17.500263214111328
    6. ' ' → logprob: -18.125263214111328
    7. '
' → logprob: -18.750263214111328
    8. '   ' → logprob: -19.125263214111328
    9. ' ' → logprob: -19.250263214111328
    10. '.sc' → logprob: -19.250263214111328

Token 460: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035052672028541565
    2. '
' → logprob: -4.16005277633667
    3. 'for' → logprob: -4.16005277633667
    4. '        
' → logprob: -6.53505277633667
    5. '```' → logprob: -6.78505277633667
    6. ' for' → logprob: -8.035052299499512
    7. '   ' → logprob: -9.660052299499512
    8. 'next' → logprob: -9.910052299499512
    9. '#' → logprob: -10.410052299499512
    10. '           ' → logprob: -10.535052299499512

Token 462: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01978880539536476
    2. 'for' → logprob: -4.26978874206543
    3. 'answers' → logprob: -6.14478874206543
    4. '        
' → logprob: -6.89478874206543
    5. 'indent' → logprob: -7.14478874206543
    6. 'results' → logprob: -7.64478874206543
    7. ' for' → logprob: -8.51978874206543
    8. 'ind' → logprob: -8.51978874206543
    9. 'result' → logprob: -9.01978874206543
    10. '   ' → logprob: -9.01978874206543

Token 463: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47338247299194336
    2. 'answers' → logprob: -1.7233824729919434
    3. 'indent' → logprob: -2.9733824729919434
    4. 'results' → logprob: -2.9733824729919434
    5. '#' → logprob: -3.9733824729919434
    6. 'def' → logprob: -4.098382472991943
    7. 'result' → logprob: -4.098382472991943
    8. 'res' → logprob: -4.723382472991943
    9. 'correct' → logprob: -5.223382472991943
    10. 'expected' → logprob: -5.473382472991943

Token 464: ' first' (ID: 1577)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8990454077720642
    2. 'for' → logprob: -1.399045467376709
    3. ' for' → logprob: -2.274045467376709
    4. 'expected' → logprob: -3.024045467376709
    5. 'def' → logprob: -3.149045467376709
    6. ' #' → logprob: -3.774045467376709
    7. 'result' → logprob: -4.149045467376709
    8. 'max' → logprob: -4.399045467376709
    9. 'correct' → logprob: -4.524045467376709
    10. 'answer' → logprob: -4.899045467376709

Token 465: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5249128341674805
    2. 'for' → logprob: -1.5249128341674805
    3. 'token' → logprob: -3.3999128341674805
    4. 'def' → logprob: -3.7749128341674805
    5. 'step' → logprob: -4.0249128341674805
    6. 'answer' → logprob: -4.3999128341674805
    7. ' line' → logprob: -4.3999128341674805
    8. ' for' → logprob: -4.6499128341674805
    9. 'indent' → logprob: -4.7749128341674805
    10. '#' → logprob: -4.8999128341674805

Token 466: ' has' (ID: 853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5730669498443604
    2. 'has' → logprob: -2.0730669498443604
    3. 'is' → logprob: -3.1980669498443604
    4. '#' → logprob: -3.3230669498443604
    5. 'of' → logprob: -3.3230669498443604
    6. 'for' → logprob: -3.3230669498443604
    7. 'indent' → logprob: -3.5730669498443604
    8. ' has' → logprob: -3.9480669498443604
    9. ' of' → logprob: -3.9480669498443604
    10. ' is' → logprob: -4.698066711425781

Token 467: ' zero' (ID: 12421)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.0021214729640632868
    2. '0' → logprob: -7.377121448516846
    3. 'no' → logprob: -7.752121448516846
    4. 'expected' → logprob: -8.002121925354004
    5. 'correct' → logprob: -8.002121925354004
    6. ' indentation' → logprob: -9.252121925354004
    7. 'ind' → logprob: -9.627121925354004
    8. ' indent' → logprob: -10.127121925354004
    9. 'an' → logprob: -10.627121925354004
    10. '   ' → logprob: -10.627121925354004

Token 468: ' indentation' (ID: 170733)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.347563773393631
    2. 'expected' → logprob: -2.5975637435913086
    3. ' indentation' → logprob: -2.7225637435913086
    4. '#' → logprob: -3.0975637435913086
    5. 'ind' → logprob: -3.4725637435913086
    6. 'based' → logprob: -3.7225637435913086
    7. 'correct' → logprob: -4.847563743591309
    8. ',' → logprob: -4.972563743591309
    9. 'base' → logprob: -4.972563743591309
    10. ' indent' → logprob: -5.347563743591309

Token 469: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006107131950557232
    2. '        
' → logprob: -5.631107330322266
    3. '<|end|>' → logprob: -7.506107330322266
    4. 'for' → logprob: -7.881107330322266
    5. '.' → logprob: -8.381107330322266
    6. '
' → logprob: -8.506107330322266
    7. ',' → logprob: -8.506107330322266
    8. ' for' → logprob: -8.631107330322266
    9. '        ' → logprob: -8.881107330322266
    10. '      ' → logprob: -9.006107330322266

Token 470: ' well' (ID: 1775)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8482178449630737
    2. 'P' → logprob: -1.0982178449630737
    3. '#' → logprob: -1.8482178449630737
    4. 'this' → logprob: -4.098217964172363
    5. 'indent' → logprob: -4.723217964172363
    6. 'our' → logprob: -4.848217964172363
    7. ' the' → logprob: -4.848217964172363
    8. ' P' → logprob: -5.098217964172363
    9. 'correct' → logprob: -5.098217964172363
    10. 'code' → logprob: -5.348217964172363

Token 471: '-ind' (ID: 26698)
  Prédit: 'formatted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'formatted' → logprob: -1.0087136030197144
    2. '   ' → logprob: -2.008713722229004
    3. 'defined' → logprob: -2.008713722229004
    4. 'formed' → logprob: -2.133713722229004
    5. '-' → logprob: -2.508713722229004
    6. '-defined' → logprob: -2.633713722229004
    7. 'indent' → logprob: -2.758713722229004
    8. 'ind' → logprob: -4.258713722229004
    9. 'written' → logprob: -5.008713722229004
    10. 'structured' → logprob: -6.133713722229004

Token 472: 'ented' (ID: 23537)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.22068944573402405
    2. 'ented' → logprob: -1.7206894159317017
    3. 'entation' → logprob: -4.095689296722412
    4. 'def' → logprob: -6.220689296722412
    5. '```' → logprob: -9.47068977355957
    6. 't' → logprob: -9.47068977355957
    7. '   ' → logprob: -9.84568977355957
    8. 'ention' → logprob: -10.09568977355957
    9. 'ded' → logprob: -10.34568977355957
    10. 'end' → logprob: -10.72068977355957

Token 473: ' programs' (ID: 8094)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.07463202625513077
    2. 'program' → logprob: -2.824631929397583
    3. ' code' → logprob: -4.824632167816162
    4. 'codes' → logprob: -6.074632167816162
    5. 'P' → logprob: -7.449632167816162
    6. 'style' → logprob: -7.949632167816162
    7. '#' → logprob: -8.074631690979004
    8. 'lines' → logprob: -8.574631690979004
    9. 'source' → logprob: -8.949631690979004
    10. 'correct' → logprob: -9.074631690979004

Token 474: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020118331536650658
    2. '        
' → logprob: -4.395118236541748
    3. '<|end|>' → logprob: -5.645118236541748
    4. '
' → logprob: -6.020118236541748
    5. 'for' → logprob: -7.895118236541748
    6. ',' → logprob: -8.270118713378906
    7. '.' → logprob: -8.270118713378906
    8. ' for' → logprob: -8.270118713378906
    9. '        ' → logprob: -9.395118713378906
    10. '#' → logprob: -9.395118713378906

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014999383129179478
    2. 'for' → logprob: -5.1399993896484375
    3. ' for' → logprob: -5.1399993896484375
    4. '        
' → logprob: -6.7649993896484375
    5. '
' → logprob: -7.6399993896484375
    6. ',' → logprob: -8.264999389648438
    7. '#' → logprob: -8.264999389648438
    8. '```' → logprob: -8.514999389648438
    9. '<|end|>' → logprob: -8.639999389648438
    10. ' and' → logprob: -9.264999389648438

Token 476: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04496563971042633
    2. '       ' → logprob: -3.5449657440185547
    3. ' for' → logprob: -5.169965744018555
    4. 'expected' → logprob: -6.044965744018555
    5. 'stack' → logprob: -6.294965744018555
    6. 'prev' → logprob: -6.669965744018555
    7. '#' (adapté à ' #') → logprob: -6.794965744018555
    8. 'indent' → logprob: -7.294965744018555
    9. 'correct' → logprob: -7.544965744018555
    10. 'assert' → logprob: -7.544965744018555

Token 477: ' Use' (ID: 7649)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4425668716430664
    2. 'assert' → logprob: -1.3175668716430664
    3. '       ' → logprob: -3.3175668716430664
    4. 'if' → logprob: -4.317566871643066
    5. 'correct' → logprob: -4.567566871643066
    6. '#' → logprob: -4.817566871643066
    7. 'prev' → logprob: -4.817566871643066
    8. 'stack' → logprob: -5.192566871643066
    9. ' for' → logprob: -5.942566871643066
    10. 'expected' → logprob: -6.317566871643066

Token 478: ' the' (ID: 290)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -1.7632606029510498
    2. ' indent' → logprob: -2.01326060295105
    3. 'indent' → logprob: -2.13826060295105
    4. ' for' → logprob: -2.13826060295105
    5. 'stack' → logprob: -2.76326060295105
    6. ' a' → logprob: -2.76326060295105
    7. 'for' → logprob: -3.13826060295105
    8. 'prev' → logprob: -3.26326060295105
    9. 'a' → logprob: -3.38826060295105
    10. ' prev' → logprob: -3.76326060295105

Token 479: ' indentation' (ID: 170733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5286608338356018
    2. 'indent' → logprob: -1.903660774230957
    3. ' for' → logprob: -2.153660774230957
    4. 'correct' → logprob: -3.028660774230957
    5. 'previous' → logprob: -4.528660774230957
    6. 'def' → logprob: -4.903660774230957
    7. 'import' → logprob: -5.028660774230957
    8. 'ind' → logprob: -5.153660774230957
    9. 'prev' → logprob: -5.153660774230957
    10. 'assert' → logprob: -5.153660774230957

Token 480: ' formula' (ID: 20690)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.3613443672657013
    2. '_stack' → logprob: -2.486344337463379
    3. 'for' → logprob: -2.861344337463379
    4. ' stack' → logprob: -2.861344337463379
    5. '_levels' → logprob: -3.736344337463379
    6. 'levels' → logprob: -3.986344337463379
    7. ' for' → logprob: -4.611344337463379
    8. 'to' → logprob: -4.986344337463379
    9. 'map' → logprob: -5.111344337463379
    10. 'diff' → logprob: -5.361344337463379

Token 481: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34129369258880615
    2. ' for' → logprob: -1.4662936925888062
    3. '       ' → logprob: -3.2162938117980957
    4. 'correct' → logprob: -6.091293811798096
    5. 'indent' → logprob: -6.091293811798096
    6. '=' → logprob: -6.341293811798096
    7. 'formula' → logprob: -6.341293811798096
    8. ' =' → logprob: -6.591293811798096
    9. ':' → logprob: -7.091293811798096
    10. 'def' → logprob: -7.341293811798096

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6980376243591309
    2. ' for' → logprob: -0.9480376243591309
    3. 'for' → logprob: -2.573037624359131
    4. ' correct' → logprob: -4.073037624359131
    5. ' indentation' → logprob: -5.073037624359131
    6. ' result' → logprob: -6.198037624359131
    7. ' formula' → logprob: -6.448037624359131
    8. ' ind' → logprob: -6.573037624359131
    9. 'indent' → logprob: -6.823037624359131
    10. ' answers' → logprob: -6.823037624359131

Token 483: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7399177551269531
    2. '       ' → logprob: -1.8649177551269531
    3. 'weights' → logprob: -1.9899177551269531
    4. 'indent' → logprob: -2.114917755126953
    5. 'ind' → logprob: -2.489917755126953
    6. '#' (adapté à ' #') → logprob: -3.239917755126953
    7. 'mult' → logprob: -3.989917755126953
    8. 'spaces' → logprob: -3.989917755126953
    9. 'levels' → logprob: -4.114917755126953
    10. 'multip' → logprob: -4.114917755126953

Token 484: ' indentation' (ID: 170733)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indent' → logprob: -1.3183096647262573
    2. 'for' → logprob: -1.6933096647262573
    3. 'base' → logprob: -2.318309783935547
    4. 'ind' → logprob: -2.568309783935547
    5. 'br' → logprob: -2.818309783935547
    6. 'weights' → logprob: -2.943309783935547
    7. '#' → logprob: -3.568309783935547
    8. 'levels' → logprob: -3.818309783935547
    9. 'formula' → logprob: -4.318309783935547
    10. 'spaces' → logprob: -4.443309783935547

Token 485: '[line' (ID: 129099)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3835788071155548
    2. '_levels' → logprob: -1.8835787773132324
    3. '_level' → logprob: -2.8835787773132324
    4. '=' → logprob: -3.0085787773132324
    5. 'levels' → logprob: -4.133578777313232
    6. 'level' → logprob: -4.383578777313232
    7. '_weights' → logprob: -5.133578777313232
    8. '_values' → logprob: -5.633578777313232
    9. 's' → logprob: -6.133578777313232
    10. '[i' → logprob: -6.258578777313232

Token 486: ' i' (ID: 575)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015061495825648308
    2. '_levels' → logprob: -5.765061378479004
    3. '_level' → logprob: -6.140061378479004
    4. 's' → logprob: -6.140061378479004
    5. ' -' → logprob: -6.765061378479004
    6. '-' → logprob: -6.890061378479004
    7. ' ]' → logprob: -7.390061378479004
    8. '[i' → logprob: -7.515061378479004
    9. ' =' → logprob: -7.515061378479004
    10. '_idx' → logprob: -7.890061378479004

Token 487: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032424782402813435
    2. ' ]' → logprob: -6.503242492675781
    3. '-' → logprob: -7.378242492675781
    4. '[i' → logprob: -8.003242492675781
    5. ' -' → logprob: -8.128242492675781
    6. '']' → logprob: -9.253242492675781
    7. ']=' → logprob: -9.378242492675781
    8. ']==' → logprob: -9.628242492675781
    9. '   ' → logprob: -10.003242492675781
    10. '[' → logprob: -10.003242492675781

Token 488: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5434563159942627
    2. '=' → logprob: -1.0434563159942627
    3. '[i' → logprob: -3.5434563159942627
    4. ' ==' → logprob: -4.543456077575684
    5. '==' → logprob: -5.043456077575684
    6. 'for' → logprob: -5.543456077575684
    7. '[' → logprob: -5.543456077575684
    8. ' for' → logprob: -5.668456077575684
    9. '       ' → logprob: -6.418456077575684
    10. '   ' → logprob: -6.668456077575684

Token 489: ' R' (ID: 460)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0290945768356323
    2. 'ro' → logprob: -1.5290945768356323
    3. 'a' → logprob: -1.7790945768356323
    4. 'R' → logprob: -2.154094696044922
    5. '(ro' → logprob: -3.654094696044922
    6. 'indent' → logprob: -4.029094696044922
    7. '(' → logprob: -4.279094696044922
    8. 'A' → logprob: -4.404094696044922
    9. ' a' → logprob: -4.779094696044922
    10. ' (' → logprob: -4.904094696044922

Token 490: '*(' (ID: 14793)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5510811805725098
    2. 'o' → logprob: -1.5510811805725098
    3. '[i' → logprob: -1.8010811805725098
    4. ',' → logprob: -2.0510811805725098
    5. 'i' → logprob: -3.0510811805725098
    6. '_levels' → logprob: -3.3010811805725098
    7. ' =' → logprob: -3.4260811805725098
    8. 's' → logprob: -3.4260811805725098
    9. '[ind' → logprob: -3.8010811805725098
    10. ')' → logprob: -4.80108118057251

Token 491: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.18022137880325317
    2. 'r' → logprob: -1.9302213191986084
    3. ' ro' → logprob: -5.3052215576171875
    4. 'R' → logprob: -5.8052215576171875
    5. 'round' → logprob: -5.8052215576171875
    6. ')' → logprob: -6.4302215576171875
    7. '(ro' → logprob: -6.8052215576171875
    8. 'i' → logprob: -6.9302215576171875
    9. 'rop' → logprob: -7.1802215576171875
    10. 'Ro' → logprob: -8.055221557617188

Token 492: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3564818799495697
    2. '_c' → logprob: -1.856481909751892
    3. '_i' → logprob: -2.6064817905426025
    4. 'i' → logprob: -2.9814817905426025
    5. 'c' → logprob: -5.231482028961182
    6. ')' → logprob: -5.231482028961182
    7. '_diff' → logprob: -6.106482028961182
    8. 'diff' → logprob: -6.981482028961182
    9. '[' → logprob: -6.981482028961182
    10. '_count' → logprob: -7.231482028961182

Token 493: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07629622519016266
    2. ']-' → logprob: -2.826296329498291
    3. '[i' → logprob: -5.076296329498291
    4. '-' → logprob: -5.201296329498291
    5. 'i' → logprob: -6.951296329498291
    6. ' -' → logprob: -7.326296329498291
    7. '[' → logprob: -8.326295852661133
    8. ' ]' → logprob: -9.076295852661133
    9. '(i' → logprob: -9.451295852661133
    10. '_i' → logprob: -9.451295852661133

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9772585034370422
    2. 'c' → logprob: -1.3522584438323975
    3. '-' → logprob: -1.8522584438323975
    4. 'i' → logprob: -2.1022584438323975
    5. ']' → logprob: -2.6022584438323975
    6. '_c' → logprob: -4.977258682250977
    7. '0' → logprob: -6.602258682250977
    8. ' -' → logprob: -7.477258682250977
    9. '])' → logprob: -7.727258682250977
    10. '_i' → logprob: -7.727258682250977

Token 495: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37391215562820435
    2. '-' → logprob: -1.3739120960235596
    3. ']-' → logprob: -3.8739120960235596
    4. ' -' → logprob: -4.123912334442139
    5. '_c' → logprob: -4.873912334442139
    6. ']+' → logprob: -5.123912334442139
    7. ')' → logprob: -5.748912334442139
    8. '])' → logprob: -6.498912334442139
    9. 'c' → logprob: -7.123912334442139
    10. '+' → logprob: -7.873912334442139

Token 496: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5542446374893188
    2. '-' → logprob: -0.9292446374893188
    3. ')' → logprob: -4.679244518280029
    4. '+' → logprob: -4.804244518280029
    5. ' +' → logprob: -5.179244518280029
    6. '[i' → logprob: -6.054244518280029
    7. ' ' → logprob: -6.429244518280029
    8. '```' → logprob: -7.054244518280029
    9. '   ' → logprob: -7.304244518280029
    10. '[' → logprob: -8.429244995117188

Token 497: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.00026336227892898023
    2. ' rc' → logprob: -8.250263214111328
    3. '	rc' → logprob: -14.500263214111328
    4. '   ' → logprob: -14.625263214111328
    5. '(rc' → logprob: -14.875263214111328
    6. '  ' → logprob: -15.500263214111328
    7. '       ' → logprob: -15.875263214111328
    8. ' ' → logprob: -15.875263214111328
    9. '_rc' → logprob: -16.375263214111328
    10. 'lc' → logprob: -17.125263214111328

Token 498: '[i' (ID: 1768)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.36936691403388977
    2. '[i' → logprob: -1.3693668842315674
    3. ']' → logprob: -4.1193671226501465
    4. ']_' → logprob: -4.3693671226501465
    5. '[_' → logprob: -4.7443671226501465
    6. '][' → logprob: -5.8693671226501465
    7. 'i' → logprob: -5.9943671226501465
    8. '[' → logprob: -5.9943671226501465
    9. '_i' → logprob: -6.2443671226501465
    10. 's' → logprob: -6.2443671226501465

Token 499: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00013369438238441944
    2. '])' → logprob: -9.875133514404297
    3. ' -' → logprob: -9.875133514404297
    4. ']' → logprob: -10.500133514404297
    5. 'i' → logprob: -14.000133514404297
    6. ']-' → logprob: -14.250133514404297
    7. '[-' → logprob: -15.125133514404297
    8. '```' → logprob: -15.250133514404297
    9. '   ' → logprob: -15.375133514404297
    10. '_minus' → logprob: -15.625133514404297

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.375005722045898
    3. '-' → logprob: -14.125005722045898
    4. '   ' → logprob: -14.375005722045898
    5. ']' → logprob: -15.750005722045898
    6. '```' → logprob: -16.1250057220459
    7. 'prev' → logprob: -16.5000057220459
    8. 'i' → logprob: -16.7500057220459
    9. '  ' → logprob: -18.0000057220459
    10. '2' → logprob: -18.0000057220459

Token 501: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003974512219429016
    2. '])' → logprob: -5.628974437713623
    3. ' )' → logprob: -9.378974914550781
    4. ']' → logprob: -9.753974914550781
    5. ')`' → logprob: -9.878974914550781
    6. ')+' → logprob: -10.128974914550781
    7. '`)' → logprob: -10.503974914550781
    8. '```' → logprob: -10.628974914550781
    9. ')
' → logprob: -11.003974914550781
    10. '[' → logprob: -11.253974914550781

Token 502: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6664168238639832
    2. '       ' → logprob: -0.9164168238639832
    3. '+' → logprob: -3.416416883468628
    4. ' *' → logprob: -4.291416645050049
    5. ',' → logprob: -4.916416645050049
    6. '[' → logprob: -5.166416645050049
    7. '*' → logprob: -5.166416645050049
    8. '        ' → logprob: -5.791416645050049
    9. '#' → logprob: -5.916416645050049
    10. ')' → logprob: -6.291416645050049

Token 503: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6010408997535706
    2. 'S' → logprob: -1.3510408401489258
    3. ' C' → logprob: -2.101040840148926
    4. ' S' → logprob: -2.976040840148926
    5. 'L' → logprob: -4.851040840148926
    6. '   ' → logprob: -6.226040840148926
    7. ' ' → logprob: -6.476040840148926
    8. 'Q' → logprob: -6.601040840148926
    9. ' L' → logprob: -6.601040840148926
    10. 'co' → logprob: -6.851040840148926

Token 504: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5215978622436523
    2. '*(' → logprob: -1.0215978622436523
    3. ' *' → logprob: -3.2715978622436523
    4. '#' → logprob: -6.646597862243652
    5. '_' → logprob: -6.896597862243652
    6. '(' → logprob: -7.271597862243652
    7. 'R' → logprob: -7.521597862243652
    8. '[' → logprob: -7.521597862243652
    9. '*[' → logprob: -7.646597862243652
    10. 'o' → logprob: -7.896597862243652

Token 505: 'co' (ID: 1191)
  Prédit: 'co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.670911431312561
    2. 'so' → logprob: -0.920911431312561
    3. ' co' → logprob: -2.7959113121032715
    4. ' so' → logprob: -3.5459113121032715
    5. ')' → logprob: -9.10841178894043
    6. '(co' → logprob: -9.54591178894043
    7. ' ' → logprob: -9.60841178894043
    8. '   ' → logprob: -9.67091178894043
    9. '```' → logprob: -9.73341178894043
    10. 'sc' → logprob: -10.23341178894043

Token 506: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012749903835356236
    2. '_c' → logprob: -4.387749671936035
    3. '[_' → logprob: -8.887749671936035
    4. '[' → logprob: -10.387749671936035
    5. 'c' → logprob: -10.637749671936035
    6. ')' → logprob: -11.262749671936035
    7. ')[' → logprob: -11.762749671936035
    8. '_i' → logprob: -12.262749671936035
    9. '[c' → logprob: -12.637749671936035
    10. '   ' → logprob: -12.762749671936035

Token 507: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00022713904036208987
    2. ']' → logprob: -8.625226974487305
    3. ' -' → logprob: -11.250226974487305
    4. '_c' → logprob: -11.500226974487305
    5. ']-' → logprob: -11.750226974487305
    6. '][-' → logprob: -12.000226974487305
    7. '][' → logprob: -12.500226974487305
    8. '[-' → logprob: -13.500226974487305
    9. '])' → logprob: -13.875226974487305
    10. 'c' → logprob: -14.000226974487305

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11352043598890305
    2. '-' → logprob: -2.238520383834839
    3. 'i' → logprob: -7.988520622253418
    4. ']' → logprob: -8.488520622253418
    5. '```' → logprob: -10.113520622253418
    6. '])' → logprob: -10.613520622253418
    7. 'prev' → logprob: -10.613520622253418
    8. '   ' → logprob: -10.613520622253418
    9. ' ' → logprob: -11.363520622253418
    10. ' -' → logprob: -11.738520622253418

Token 509: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5930128693580627
    2. ')' → logprob: -0.8430128693580627
    3. '-' → logprob: -4.593012809753418
    4. '[i' → logprob: -6.093012809753418
    5. '[' → logprob: -6.843012809753418
    6. '```' → logprob: -7.093012809753418
    7. '])' → logprob: -7.468012809753418
    8. '           ' → logprob: -7.843012809753418
    9. ']-' → logprob: -7.843012809753418
    10. ' -' → logprob: -7.968012809753418

Token 510: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.588900089263916
    2. '-' → logprob: -1.088900089263916
    3. ' -' → logprob: -2.338900089263916
    4. '[-' → logprob: -5.713900089263916
    5. '[' → logprob: -5.838900089263916
    6. '[i' → logprob: -6.088900089263916
    7. '```' → logprob: -6.838900089263916
    8. ' ' → logprob: -7.588900089263916
    9. '           ' → logprob: -7.838900089263916
    10. ')-' → logprob: -7.963900089263916

Token 511: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.014743118546903133
    2. ' cc' → logprob: -4.639743328094482
    3. 'sc' → logprob: -5.389743328094482
    4. ' sc' → logprob: -8.514742851257324
    5. 'rc' → logprob: -8.889742851257324
    6. '	cc' → logprob: -10.639742851257324
    7. 'pc' → logprob: -11.764742851257324
    8. '   ' → logprob: -11.889742851257324
    9. 'cci' → logprob: -12.264742851257324
    10. ' ' → logprob: -12.264742851257324

Token 512: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.196732960641384e-05
    2. ')[' → logprob: -10.625082015991211
    3. '[_' → logprob: -11.000082015991211
    4. '[' → logprob: -11.125082015991211
    5. 'i' → logprob: -12.000082015991211
    6. '[-' → logprob: -12.000082015991211
    7. '_i' → logprob: -13.000082015991211
    8. '_c' → logprob: -13.125082015991211
    9. '][' → logprob: -13.375082015991211
    10. '_prev' → logprob: -13.375082015991211

Token 513: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.269565634895116e-05
    2. '])' → logprob: -9.875092506408691
    3. '_c' → logprob: -10.375092506408691
    4. ' -' → logprob: -12.750092506408691
    5. '][-' → logprob: -13.375092506408691
    6. ']' → logprob: -13.625092506408691
    7. '[-' → logprob: -13.750092506408691
    8. '_prev' → logprob: -14.000092506408691
    9. 'c' → logprob: -14.375092506408691
    10. '_minus' → logprob: -15.250092506408691

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22671343386173248
    2. 'i' → logprob: -1.6017134189605713
    3. 'prev' → logprob: -7.47671365737915
    4. '-' → logprob: -8.351713180541992
    5. ' i' → logprob: -8.726713180541992
    6. '[i' → logprob: -8.976713180541992
    7. '_prev' → logprob: -9.976713180541992
    8. '```' → logprob: -10.101713180541992
    9. ' ' → logprob: -10.851713180541992
    10. '<|end|>' → logprob: -11.101713180541992

Token 515: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01762407086789608
    2. '])' → logprob: -4.5176239013671875
    3. '[i' → logprob: -5.1426239013671875
    4. '       ' → logprob: -7.5176239013671875
    5. '[])' → logprob: -10.267623901367188
    6. ']' → logprob: -10.517623901367188
    7. ' )' → logprob: -10.642623901367188
    8. '`)' → logprob: -10.892623901367188
    9. '           ' → logprob: -11.517623901367188
    10. '')' → logprob: -12.017623901367188

Token 516: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7706019878387451
    2. ')' → logprob: -1.5206019878387451
    3. '       ' → logprob: -1.7706019878387451
    4. '_' → logprob: -3.145601987838745
    5. '*' → logprob: -3.770601987838745
    6. ' +' → logprob: -4.145602226257324
    7. '#' → logprob: -4.770602226257324
    8. ' ' → logprob: -4.770602226257324
    9. '_s' → logprob: -5.145602226257324
    10. '           ' → logprob: -5.520602226257324

Token 517: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12761466205120087
    2. ' S' → logprob: -2.127614736557007
    3. '   ' → logprob: -8.002614974975586
    4. ' ' → logprob: -8.752614974975586
    5. '       ' → logprob: -9.502614974975586
    6. '  ' → logprob: -10.502614974975586
    7. '    ' → logprob: -11.377614974975586
    8. '     ' → logprob: -11.502614974975586
    9. '	S' → logprob: -11.502614974975586
    10. 'so' → logprob: -11.877614974975586

Token 518: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7222165465354919
    2. '*(' → logprob: -0.7222165465354919
    3. ' *' → logprob: -3.5972166061401367
    4. '<|end|>' → logprob: -8.847216606140137
    5. '*_' → logprob: -8.847216606140137
    6. '`' → logprob: -9.097216606140137
    7. '*[' → logprob: -9.222216606140137
    8. '   ' → logprob: -9.472216606140137
    9. '**' → logprob: -9.722216606140137
    10. '(' → logprob: -9.972216606140137

Token 519: 'so' (ID: 786)
  Prédit: 'so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.000856193364597857
    2. ' so' → logprob: -7.500856399536133
    3. '(' → logprob: -8.250856399536133
    4. ')' → logprob: -11.375856399536133
    5. '   ' → logprob: -11.375856399536133
    6. '```' → logprob: -12.250856399536133
    7. '       ' → logprob: -13.250856399536133
    8. ' (' → logprob: -13.625856399536133
    9. ')(' → logprob: -13.625856399536133
    10. ' ' → logprob: -13.875856399536133

Token 520: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08213499188423157
    2. '_c' → logprob: -2.707134962081909
    3. '[' → logprob: -5.332135200500488
    4. ')' → logprob: -6.082135200500488
    5. ')[' → logprob: -6.832135200500488
    6. '[_' → logprob: -6.957135200500488
    7. '```' → logprob: -7.332135200500488
    8. 'c' → logprob: -7.957135200500488
    9. '   ' → logprob: -7.957135200500488
    10. '[line' → logprob: -8.582135200500488

Token 521: '-' (ID: 12)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.07158786058425903
    2. '-' → logprob: -2.6965878009796143
    3. '_i' → logprob: -7.946588039398193
    4. '[i' → logprob: -7.946588039398193
    5. 'i' → logprob: -8.196587562561035
    6. '   ' → logprob: -8.321587562561035
    7. ' -' → logprob: -8.821587562561035
    8. '-_' → logprob: -9.821587562561035
    9. 'c' → logprob: -10.196587562561035
    10. ']' → logprob: -10.196587562561035

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03831011429429054
    2. 'i' → logprob: -3.2883100509643555
    3. '-' → logprob: -8.788310050964355
    4. 'sc' → logprob: -10.538310050964355
    5. '```' → logprob: -10.538310050964355
    6. 'c' → logprob: -11.163310050964355
    7. '   ' → logprob: -11.413310050964355
    8. 'prev' → logprob: -11.663310050964355
    9. '[i' → logprob: -11.913310050964355
    10. ']' → logprob: -12.538310050964355

Token 523: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.349760502576828
    2. ')' → logprob: -1.3497605323791504
    3. '[i' → logprob: -3.7247605323791504
    4. '])' → logprob: -5.72476053237915
    5. '-' → logprob: -5.84976053237915
    6. '```' → logprob: -6.22476053237915
    7. '[' → logprob: -7.47476053237915
    8. ' -' → logprob: -7.72476053237915
    9. '[-' → logprob: -7.72476053237915
    10. '           ' → logprob: -7.97476053237915

Token 524: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6173195838928223
    2. '-' → logprob: -0.9923195838928223
    3. ')' → logprob: -2.8673195838928223
    4. '[' → logprob: -4.242319583892822
    5. '[i' → logprob: -4.242319583892822
    6. ' ' → logprob: -6.867319583892822
    7. '```' → logprob: -7.617319583892822
    8. '[-' → logprob: -7.867319583892822
    9. '           ' → logprob: -8.117319107055664
    10. '
' → logprob: -8.367319107055664

Token 525: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.004638622514903545
    2. ' sc' → logprob: -5.379638671875
    3. '   ' → logprob: -11.754638671875
    4. '           ' → logprob: -13.004638671875
    5. '       ' → logprob: -13.254638671875
    6. '_sc' → logprob: -14.004638671875
    7. ' ' → logprob: -14.004638671875
    8. '     ' → logprob: -14.129638671875
    9. '(sc' → logprob: -14.129638671875
    10. '	sc' → logprob: -14.129638671875

Token 526: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005270573310554028
    2. '_c' → logprob: -8.375527381896973
    3. ')[' → logprob: -8.375527381896973
    4. 'i' → logprob: -10.750527381896973
    5. '][' → logprob: -11.125527381896973
    6. '[' → logprob: -11.250527381896973
    7. '_i' → logprob: -12.125527381896973
    8. '[_' → logprob: -12.375527381896973
    9. 'c' → logprob: -13.375527381896973
    10. '```' → logprob: -13.625527381896973

Token 527: '-' (ID: 12)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0351310595870018
    2. '-' → logprob: -3.4101309776306152
    3. '])' → logprob: -7.535130977630615
    4. '[-' → logprob: -8.285131454467773
    5. '[i' → logprob: -8.535131454467773
    6. 'c' → logprob: -9.535131454467773
    7. ']' → logprob: -9.660131454467773
    8. '_i' → logprob: -9.660131454467773
    9. ' -' → logprob: -9.660131454467773
    10. '   ' → logprob: -9.910131454467773

Token 528: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6515523195266724
    2. 'i' → logprob: -0.7765523195266724
    3. '1' → logprob: -4.026552200317383
    4. '[i' → logprob: -8.151552200317383
    5. ']' → logprob: -9.276552200317383
    6. ' i' → logprob: -9.401552200317383
    7. ' -' → logprob: -9.526552200317383
    8. 'sc' → logprob: -9.526552200317383
    9. '[-' → logprob: -9.526552200317383
    10. '])' → logprob: -9.901552200317383

Token 529: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35111987590789795
    2. '])' → logprob: -1.226119875907898
    3. ']' → logprob: -7.1011199951171875
    4. '       ' → logprob: -8.226119995117188
    5. ')
' → logprob: -8.601119995117188
    6. '[i' → logprob: -8.726119995117188
    7. '`)' → logprob: -8.851119995117188
    8. ')])' → logprob: -8.851119995117188
    9. 'def' → logprob: -9.101119995117188
    10. ')]' → logprob: -9.101119995117188

Token 530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10280440002679825
    2. '
' → logprob: -2.35280442237854
    3. '        
' → logprob: -6.727804183959961
    4. ' for' → logprob: -7.602804183959961
    5. ' R' → logprob: -8.477804183959961
    6. '   ' → logprob: -9.227804183959961
    7. 'for' → logprob: -9.477804183959961
    8. 'R' → logprob: -9.727804183959961
    9. ',' → logprob: -9.852804183959961
    10. ',
' → logprob: -10.102804183959961

Token 531: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008770088665187359
    2. 'for' → logprob: -5.508769989013672
    3. 'from' → logprob: -6.258769989013672
    4. ' for' → logprob: -7.008769989013672
    5. 'possible' → logprob: -7.633769989013672
    6. 'import' → logprob: -7.758769989013672
    7. '        
' → logprob: -8.008769989013672
    8. '#' (adapté à ' #') → logprob: -9.133769989013672
    9. 'R' → logprob: -9.133769989013672
    10. ' from' → logprob: -9.508769989013672

Token 532: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6820041537284851
    2. 'for' → logprob: -1.1820042133331299
    3. 'R' → logprob: -1.9320042133331299
    4. 'possible' → logprob: -4.057003974914551
    5. 'from' → logprob: -4.057003974914551
    6. '#' → logprob: -6.307003974914551
    7. ' for' → logprob: -6.307003974914551
    8. 'coeff' → logprob: -7.057003974914551
    9. ' R' → logprob: -7.182003974914551
    10. 'import' → logprob: -7.307003974914551

Token 533: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14436404407024384
    2. 'R' → logprob: -2.64436411857605
    3. ' i' → logprob: -3.39436411857605
    4. 'r' → logprob: -4.519363880157471
    5. ' R' → logprob: -4.769363880157471
    6. 'j' → logprob: -6.269363880157471
    7. 'line' → logprob: -6.394363880157471
    8. ' line' → logprob: -6.644363880157471
    9. ' r' → logprob: -7.769363880157471
    10. '_R' → logprob: -7.769363880157471

Token 534: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017697617411613464
    2. 'in' → logprob: -4.642697811126709
    3. 'n' → logprob: -5.767697811126709
    4. ' =' → logprob: -6.017697811126709
    5. '=' → logprob: -6.892697811126709
    6. '   ' → logprob: -7.392697811126709
    7. '       ' → logprob: -8.39269733428955
    8. ' ' → logprob: -8.51769733428955
    9. ' n' → logprob: -9.01769733428955
    10. '    ' → logprob: -10.64269733428955

Token 535: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.251930296421051
    2. ' range' → logprob: -1.5019302368164062
    3. ' in' → logprob: -14.626930236816406
    4. '1' → logprob: -15.251930236816406
    5. 'in' → logprob: -15.876930236816406
    6. '(range' → logprob: -15.876930236816406
    7. '   ' → logprob: -16.126930236816406
    8. ' ' → logprob: -16.376930236816406
    9. '	range' → logprob: -17.376930236816406
    10. '[' → logprob: -17.376930236816406

Token 536: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031802060548216105
    2. ' range' → logprob: -5.753180027008057
    3. '1' → logprob: -13.128180503845215
    4. '   ' → logprob: -15.003180503845215
    5. '
' → logprob: -15.878180503845215
    6. ' ' → logprob: -17.3781795501709
    7. '```' → logprob: -17.8781795501709
    8. '(range' → logprob: -18.0031795501709
    9. '  ' → logprob: -18.1281795501709
    10. '`' → logprob: -18.7531795501709

Token 537: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2531834840774536
    2. '       ' → logprob: -2.503183364868164
    3. ' in' → logprob: -4.003183364868164
    4. ' range' → logprob: -4.003183364868164
    5. ' ,' → logprob: -4.003183364868164
    6. '   ' → logprob: -4.253183364868164
    7. ' ' → logprob: -4.378183364868164
    8. '..' → logprob: -4.628183364868164
    9. ',len' → logprob: -4.628183364868164
    10. 'def' → logprob: -5.253183364868164

Token 538: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009740150533616543
    2. 'q' → logprob: -5.134740352630615
    3. ' p' → logprob: -5.634740352630615
    4. 'len' → logprob: -8.884739875793457
    5. ' q' → logprob: -10.134739875793457
    6. 'range' → logprob: -11.134739875793457
    7. '   ' → logprob: -11.509739875793457
    8. '(p' → logprob: -11.634739875793457
    9. '1' → logprob: -11.884739875793457
    10. ' ' → logprob: -12.384739875793457

Token 539: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07969522476196289
    2. '
' → logprob: -2.579695224761963
    3. '        
' → logprob: -7.329695224761963
    4. 'from' → logprob: -10.579694747924805
    5. 'import' → logprob: -11.079694747924805
    6. 'possible' → logprob: -11.079694747924805
    7. ' possible' → logprob: -11.204694747924805
    8. ' for' → logprob: -11.454694747924805
    9. ' R' → logprob: -11.579694747924805
    10. ' from' → logprob: -11.829694747924805

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04334056004881859
    2. ')' → logprob: -3.2933404445648193
    3. '   ' → logprob: -6.543340682983398
    4. '       ' → logprob: -6.543340682983398
    5. 'p' → logprob: -6.668340682983398
    6. ' ' → logprob: -8.543340682983398
    7. '```' → logprob: -8.543340682983398
    8. 'n' → logprob: -9.043340682983398
    9. ']' → logprob: -9.293340682983398
    10. ')
' → logprob: -9.793340682983398

Token 541: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6692075729370117
    2. 'for' → logprob: -1.4192075729370117
    3. ' for' → logprob: -2.2942075729370117
    4. 'R' → logprob: -2.4192075729370117
    5. 'from' → logprob: -3.6692075729370117
    6. 'possible' → logprob: -4.669207572937012
    7. ' R' → logprob: -5.044207572937012
    8. 'import' → logprob: -5.419207572937012
    9. ' from' → logprob: -5.669207572937012
    10. '   ' → logprob: -5.794207572937012

Token 542: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.653002917766571
    2. '       ' → logprob: -0.778002917766571
    3. '
' → logprob: -4.278002738952637
    4. ')
' → logprob: -5.153002738952637
    5. '   ' → logprob: -9.028002738952637
    6. '<|end|>' → logprob: -9.028002738952637
    7. '           ' → logprob: -9.153002738952637
    8. '        
' → logprob: -9.528002738952637
    9. ',' → logprob: -10.778002738952637
    10. ' )' → logprob: -10.903002738952637

Token 543: '-based' (ID: 8235)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9160307049751282
    2. ')' → logprob: -1.1660306453704834
    3. '
' → logprob: -2.1660306453704834
    4. ')
' → logprob: -2.9160306453704834
    5. '       ' → logprob: -3.2910306453704834
    6. '+' → logprob: -3.7910306453704834
    7. '])' → logprob: -4.6660308837890625
    8. ':' → logprob: -5.2910308837890625
    9. ':]' → logprob: -5.2910308837890625
    10. '][' → logprob: -5.4160308837890625

Token 544: ' indexing' (ID: 105989)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7216675281524658
    2. ')' → logprob: -0.8466675281524658
    3. '
' → logprob: -2.596667528152466
    4. ']' → logprob: -5.846667289733887
    5. '):
' → logprob: -5.971667289733887
    6. ']
' → logprob: -6.596667289733887
    7. 'index' → logprob: -7.721667289733887
    8. '       ' → logprob: -7.846667289733887
    9. ' indexing' → logprob: -7.971667289733887
    10. '   ' → logprob: -8.096667289733887

Token 545: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6973695755004883
    2. '
' → logprob: -1.0723695755004883
    3. ')' → logprob: -1.9473695755004883
    4. ')
' → logprob: -4.197369575500488
    5. '        
' → logprob: -7.447369575500488
    6. ',' → logprob: -7.822369575500488
    7. '<|end|>' → logprob: -8.072369575500488
    8. '
' → logprob: -8.197369575500488
    9. '

' → logprob: -8.697369575500488
    10. ')

' → logprob: -9.572369575500488

Token 546: ' ro' (ID: 974)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.17000412940979
    2. '       ' → logprob: -1.29500412940979
    3. '#' → logprob: -1.42000412940979
    4. ' for' → logprob: -2.92000412940979
    5. '
' → logprob: -3.04500412940979
    6. 'for' → logprob: -3.92000412940979
    7. ' i' → logprob: -4.170003890991211
    8. ')
' → logprob: -4.670003890991211
    9. 'R' → logprob: -4.920003890991211
    10. ' #' → logprob: -5.170003890991211

Token 547: '[i' (ID: 1768)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.049182675778865814
    2. '[' → logprob: -4.299182891845703
    3. ')' → logprob: -4.549182891845703
    4. ',' → logprob: -5.049182891845703
    5. ']' → logprob: -5.799182891845703
    6. '[i' → logprob: -6.299182891845703
    7. '```' → logprob: -6.549182891845703
    8. ']_' → logprob: -6.799182891845703
    9. '[_' → logprob: -7.174182891845703
    10. ')_' → logprob: -7.299182891845703

Token 548: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7301595211029053
    2. '_c' → logprob: -1.1051595211029053
    3. ']_' → logprob: -2.7301595211029053
    4. '-' → logprob: -2.9801595211029053
    5. '+' → logprob: -3.6051595211029053
    6. '_]' → logprob: -4.480159759521484
    7. '])' → logprob: -4.730159759521484
    8. '],' → logprob: -5.105159759521484
    9. ' -' → logprob: -5.855159759521484
    10. '
' → logprob: -6.355159759521484

Token 549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11941646039485931
    2. ']' → logprob: -2.3694164752960205
    3. '-' → logprob: -4.619416236877441
    4. '0' → logprob: -5.869416236877441
    5. '
' → logprob: -6.244416236877441
    6. 'i' → logprob: -6.369416236877441
    7. '```' → logprob: -7.119416236877441
    8. ' ' → logprob: -7.369416236877441
    9. '   ' → logprob: -8.119416236877441
    10. ' ]' → logprob: -8.744416236877441

Token 550: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03233683109283447
    2. '])' → logprob: -3.907336711883545
    3. '],' → logprob: -4.907336711883545
    4. '-' → logprob: -7.407336711883545
    5. ' ]' → logprob: -7.407336711883545
    6. ']+' → logprob: -7.407336711883545
    7. ']-' → logprob: -7.407336711883545
    8. '+' → logprob: -7.532336711883545
    9. ')' → logprob: -8.282337188720703
    10. ' -' → logprob: -8.532337188720703

Token 551: ' means' (ID: 4748)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4747762680053711
    2. '])' → logprob: -1.724776268005371
    3. ':' → logprob: -2.474776268005371
    4. ')' → logprob: -3.599776268005371
    5. '],' → logprob: -4.099776268005371
    6. '+' → logprob: -4.224776268005371
    7. ']+' → logprob: -4.349776268005371
    8. '-' → logprob: -4.724776268005371
    9. ',' → logprob: -5.349776268005371
    10. ']-' → logprob: -5.474776268005371

Token 552: ' cumulative' (ID: 75628)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4616761803627014
    2. ' i' → logprob: -1.2116761207580566
    3. ' ro' → logprob: -3.7116761207580566
    4. 'ro' → logprob: -3.9616761207580566
    5. ')' → logprob: -5.336676120758057
    6. 'indent' → logprob: -5.336676120758057
    7. ' indent' → logprob: -5.461676120758057
    8. ']' → logprob: -5.836676120758057
    9. '])' → logprob: -6.336676120758057
    10. ' the' → logprob: -6.336676120758057

Token 553: ' before' (ID: 2254)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.20755857229232788
    2. '_ro' → logprob: -3.0825586318969727
    3. '_counts' → logprob: -3.0825586318969727
    4. 'dif' → logprob: -3.2075586318969727
    5. 'ro' → logprob: -4.082558631896973
    6. ')' → logprob: -4.207558631896973
    7. '[i' → logprob: -5.582558631896973
    8. 'diff' → logprob: -5.582558631896973
    9. 'difference' → logprob: -5.707558631896973
    10. ' counts' → logprob: -5.832558631896973

Token 554: ' line' (ID: 2543)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38572296500205994
    2. 'line' → logprob: -1.8857229948043823
    3. 'the' → logprob: -2.2607228755950928
    4. 'current' → logprob: -4.010723114013672
    5. 'that' → logprob: -4.635723114013672
    6. ' i' → logprob: -4.760723114013672
    7. ' line' → logprob: -5.260723114013672
    8. ')' → logprob: -5.385723114013672
    9. ']' → logprob: -5.760723114013672
    10. '[i' → logprob: -5.885723114013672

Token 555: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10054264217615128
    2. ' i' → logprob: -2.3505425453186035
    3. '[i' → logprob: -8.225543022155762
    4. '   ' → logprob: -10.225543022155762
    5. '```' → logprob: -10.725543022155762
    6. '
' → logprob: -13.225543022155762
    7. ' ' → logprob: -13.350543022155762
    8. '       ' → logprob: -13.600543022155762
    9. '_i' → logprob: -13.975543022155762
    10. 'index' → logprob: -14.100543022155762

Token 556: ')

' (ID: 1029)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3545849323272705
    2. ')
' → logprob: -1.7295849323272705
    3. ')' → logprob: -2.2295849323272705
    4. '
' → logprob: -4.979584693908691
    5. '   ' → logprob: -6.104584693908691
    6. ',' → logprob: -6.979584693908691
    7. '```' → logprob: -7.229584693908691
    8. ']' → logprob: -7.854584693908691
    9. 'for' → logprob: -7.979584693908691
    10. 'R' → logprob: -8.229584693908691

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017267032526433468
    2. '
' → logprob: -6.7517266273498535
    3. '        
' → logprob: -8.501727104187012
    4. 'from' → logprob: -8.751727104187012
    5. 'import' → logprob: -9.626727104187012
    6. 'R' → logprob: -10.001727104187012
    7. '#' → logprob: -11.001727104187012
    8. '   ' → logprob: -11.251727104187012
    9. '           ' → logprob: -11.376727104187012
    10. 'for' → logprob: -11.501727104187012

Token 558: ' #' (ID: 1069)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.321397304534912
    2. '       ' → logprob: -1.571397304534912
    3. 'possible' → logprob: -1.571397304534912
    4. 'from' → logprob: -1.821397304534912
    5. 'for' → logprob: -2.071397304534912
    6. 'import' → logprob: -4.071397304534912
    7. '#' (adapté à ' #') → logprob: -5.071397304534912
    8. 'c' → logprob: -5.696397304534912
    9. 'poss' → logprob: -7.571397304534912
    10. 'r' → logprob: -7.821397304534912

Token 559: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2805150747299194
    2. 'for' → logprob: -1.5305150747299194
    3. 'R' → logprob: -1.6555150747299194
    4. 'possible' → logprob: -1.6555150747299194
    5. 'coeff' → logprob: -3.280515193939209
    6. 'c' → logprob: -3.530515193939209
    7. '#' → logprob: -3.655515193939209
    8. 'import' → logprob: -4.280515193939209
    9. 'found' → logprob: -4.905515193939209
    10. 'r' → logprob: -6.780515193939209

Token 560: ' know' (ID: 1761)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.001564621925354
    2. 'for' → logprob: -1.251564621925354
    3. 'need' → logprob: -2.1265645027160645
    4. '#' → logprob: -2.2515645027160645
    5. 'import' → logprob: -2.5015645027160645
    6. 'possible' → logprob: -4.8765645027160645
    7. 'have' → logprob: -5.2515645027160645
    8. 'def' → logprob: -5.3765645027160645
    9. 'from' → logprob: -5.5015645027160645
    10. 'guess' → logprob: -6.1265645027160645

Token 561: ' indent' (ID: 37655)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.906425952911377
    2. 'for' → logprob: -1.531425952911377
    3. '   ' → logprob: -2.406425952911377
    4. 'c' → logprob: -2.656425952911377
    5. 'that' → logprob: -3.156425952911377
    6. ' possible' → logprob: -3.156425952911377
    7. 'R' → logprob: -3.406425952911377
    8. 'from' → logprob: -3.656425952911377
    9. ' for' → logprob: -4.281425952911377
    10. ' that' → logprob: -4.281425952911377

Token 562: '_levels' (ID: 96899)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.8037770390510559
    2. '_levels' → logprob: -1.0537769794464111
    3. '_values' → logprob: -2.303776979446411
    4. 'ation' → logprob: -3.553776979446411
    5. 'ations' → logprob: -3.803776979446411
    6. 'f' → logprob: -4.55377721786499
    7. '_weights' → logprob: -4.67877721786499
    8. '_constants' → logprob: -5.17877721786499
    9. '_params' → logprob: -5.55377721786499
    10. ' =' → logprob: -5.67877721786499

Token 563: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8334107398986816
    2. '_values' → logprob: -1.8334107398986816
    3. 's' → logprob: -2.4584107398986816
    4. '_possible' → logprob: -2.8334107398986816
    5. 'for' → logprob: -3.0834107398986816
    6. '_candidates' → logprob: -3.5834107398986816
    7. 'coeff' → logprob: -3.8334107398986816
    8. 'R' → logprob: -3.9584107398986816
    9. '_sets' → logprob: -4.208410739898682
    10. 'from' → logprob: -4.208410739898682

Token 564: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23691202700138092
    2. ' ==' → logprob: -2.4869120121002197
    3. '+' → logprob: -3.4869120121002197
    4. ' +' → logprob: -4.111912250518799
    5. '[' → logprob: -4.236912250518799
    6. '==' → logprob: -4.486912250518799
    7. ' -' → logprob: -4.611912250518799
    8. ' for' → logprob: -4.736912250518799
    9. 'for' → logprob: -4.861912250518799
    10. ']==' → logprob: -4.986912250518799

Token 565: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.022660732269287
    2. 's' → logprob: -1.397660732269287
    3. ' =' → logprob: -2.022660732269287
    4. '_values' → logprob: -3.022660732269287
    5. ' for' → logprob: -3.147660732269287
    6. 'from' → logprob: -3.397660732269287
    7. ',' → logprob: -3.397660732269287
    8. '_candidates' → logprob: -3.897660732269287
    9. '=' → logprob: -4.522660732269287
    10. 'import' → logprob: -4.647660732269287

Token 566: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04270213842391968
    2. ' i' → logprob: -3.4177021980285645
    3. '0' → logprob: -5.7927021980285645
    4. 'all' → logprob: -6.2927021980285645
    5. '1' → logprob: -6.6677021980285645
    6. ' all' → logprob: -6.9177021980285645
    7. 'each' → logprob: -6.9177021980285645
    8. 'the' → logprob: -8.292701721191406
    9. 'line' → logprob: -8.917701721191406
    10. ' each' → logprob: -9.042701721191406

Token 567: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2410239726305008
    2. 'in' → logprob: -1.7410240173339844
    3. '=' → logprob: -3.3660240173339844
    4. ' =' → logprob: -6.116024017333984
    5. 'from' → logprob: -6.491024017333984
    6. '>' → logprob: -8.866024017333984
    7. '0' → logprob: -9.616024017333984
    8. ' ' → logprob: -9.616024017333984
    9. '1' → logprob: -9.991024017333984
    10. '==' → logprob: -10.116024017333984

Token 568: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005382572300732136
    2. ' range' → logprob: -5.380382537841797
    3. '[' → logprob: -7.755382537841797
    4. '1' → logprob: -8.255382537841797
    5. '0' → logprob: -9.630382537841797
    6. 'p' → logprob: -12.380382537841797
    7. ' [' → logprob: -13.630382537841797
    8. '`' → logprob: -14.130382537841797
    9. '
' → logprob: -15.005382537841797
    10. '2' → logprob: -15.130382537841797

Token 569: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3488137125968933
    2. '0' → logprob: -1.223813772201538
    3. ']' → logprob: -8.473814010620117
    4. ' ' → logprob: -8.973814010620117
    5. '```' → logprob: -11.598814010620117
    6. ')' → logprob: -12.098814010620117
    7. 'range' → logprob: -12.473814010620117
    8. '
' → logprob: -12.723814010620117
    9. '2' → logprob: -13.348814010620117
    10. ',' → logprob: -13.473814010620117

Token 570: ',p' (ID: 14835)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012222947552800179
    2. ']' → logprob: -5.262222766876221
    3. ' +' → logprob: -5.512222766876221
    4. ',' → logprob: -6.262222766876221
    5. '1' → logprob: -8.137223243713379
    6. '..' → logprob: -8.637223243713379
    7. ':' → logprob: -9.137223243713379
    8. '+i' → logprob: -9.262223243713379
    9. '...' → logprob: -9.512223243713379
    10. '   ' → logprob: -9.762223243713379

Token 571: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14305441081523895
    2. '       ' → logprob: -2.893054485321045
    3. '-' → logprob: -3.393054485321045
    4. ')' → logprob: -4.393054485321045
    5. '],' → logprob: -4.643054485321045
    6. '
' → logprob: -5.393054485321045
    7. '])' → logprob: -5.643054485321045
    8. '   ' → logprob: -5.893054485321045
    9. ']:
' → logprob: -6.393054485321045
    10. ',' → logprob: -6.768054485321045

Token 572: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022094044834375381
    2. '-' → logprob: -8.875221252441406
    3. ']' → logprob: -10.000221252441406
    4. ')' → logprob: -10.750221252441406
    5. ' ' → logprob: -12.375221252441406
    6. '   ' → logprob: -12.750221252441406
    7. '
' → logprob: -13.500221252441406
    8. '```' → logprob: -13.625221252441406
    9. '7' → logprob: -14.000221252441406
    10. '],' → logprob: -14.375221252441406

Token 573: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1223115548491478
    2. ']
' → logprob: -2.997311592102051
    3. '],' → logprob: -3.247311592102051
    4. '       ' → logprob: -3.997311592102051
    5. ',' → logprob: -5.497311592102051
    6. '].' → logprob: -6.372311592102051
    7. ']

' → logprob: -8.12231159210205
    8. ',
' → logprob: -8.12231159210205
    9. 'def' → logprob: -8.49731159210205
    10. '
' → logprob: -8.62231159210205

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007341819349676371
    2. 'from' → logprob: -6.3823418617248535
    3. 'R' → logprob: -6.6323418617248535
    4. '#' → logprob: -6.6323418617248535
    5. '
' → logprob: -6.7573418617248535
    6. '        
' → logprob: -7.2573418617248535
    7. 'for' → logprob: -7.8823418617248535
    8. 'import' → logprob: -8.382341384887695
    9. 'possible' → logprob: -8.632341384887695
    10. ',' → logprob: -10.257341384887695

Token 575: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2502437233924866
    2. 'import' → logprob: -2.125243663787842
    3. 'possible' → logprob: -2.875243663787842
    4. 'R' → logprob: -4.125243663787842
    5. '       ' → logprob: -4.250243663787842
    6. 'for' → logprob: -4.750243663787842
    7. '#' (adapté à ' #') → logprob: -6.000243663787842
    8. 'coeff' → logprob: -6.375243663787842
    9. ' from' → logprob: -7.250243663787842
    10. 'c' → logprob: -7.750243663787842

Token 576: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7548837661743164
    2. 'R' → logprob: -1.6298837661743164
    3. 'possible' → logprob: -2.0048837661743164
    4. '#' → logprob: -2.2548837661743164
    5. '       ' → logprob: -3.2548837661743164
    6. 'coeff' → logprob: -3.8798837661743164
    7. 'import' → logprob: -4.254883766174316
    8. 'c' → logprob: -5.254883766174316
    9. 'unknown' → logprob: -6.004883766174316
    10. 'RC' → logprob: -6.379883766174316

Token 577: ' want' (ID: 1682)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.36169537901878357
    2. '#' → logprob: -1.861695408821106
    3. 'want' → logprob: -2.4866952896118164
    4. ' want' → logprob: -4.111695289611816
    5. ' need' → logprob: -4.361695289611816
    6. 'import' → logprob: -4.986695289611816
    7. 'def' → logprob: -5.486695289611816
    8. 'can' → logprob: -5.611695289611816
    9. 'try' → logprob: -5.861695289611816
    10. 'are' → logprob: -5.986695289611816

Token 578: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03896912559866905
    2. ' to' → logprob: -3.288969039916992
    3. '       ' → logprob: -7.663969039916992
    4. '#' → logprob: -8.663969039916992
    5. 'for' → logprob: -9.163969039916992
    6. '
' → logprob: -9.538969039916992
    7. 'import' → logprob: -10.538969039916992
    8. '   ' → logprob: -10.913969039916992
    9. 'all' → logprob: -11.413969039916992
    10. 'def' → logprob: -11.663969039916992

Token 579: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.16932079195976257
    2. 'det' → logprob: -1.919320821762085
    3. ' find' → logprob: -4.794320583343506
    4. 'solve' → logprob: -8.169321060180664
    5. '#' → logprob: -8.294321060180664
    6. 'try' → logprob: -9.419321060180664
    7. '```' → logprob: -10.544321060180664
    8. 'continue' → logprob: -11.169321060180664
    9. 'guess' → logprob: -11.294321060180664
    10. ' determine' → logprob: -11.419321060180664

Token 580: ' all' (ID: 722)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.590696394443512
    2. 'all' → logprob: -1.3406963348388672
    3. ' R' → logprob: -2.715696334838867
    4. ' all' → logprob: -3.090696334838867
    5. 'for' → logprob: -3.090696334838867
    6. ' for' → logprob: -5.090696334838867
    7. 'possible' → logprob: -5.215696334838867
    8. 'ranges' → logprob: -5.840696334838867
    9. 'r' → logprob: -5.965696334838867
    10. 'the' → logprob: -6.340696334838867

Token 581: ' possible' (ID: 4149)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5076282620429993
    2. ' R' → logprob: -1.6326282024383545
    3. 'possible' → logprob: -3.1326282024383545
    4. '(R' → logprob: -3.6326282024383545
    5. 'for' → logprob: -3.7576282024383545
    6. ' possible' → logprob: -4.007628440856934
    7. 'com' → logprob: -4.007628440856934
    8. '   ' → logprob: -4.632628440856934
    9. ' trip' → logprob: -4.632628440856934
    10. ' combinations' → logprob: -4.632628440856934

Token 582: ' triples' (ID: 189700)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.12928034365177155
    2. ' R' → logprob: -2.3792803287506104
    3. 'for' → logprob: -4.3792805671691895
    4. '(R' → logprob: -5.6292805671691895
    5. ' for' → logprob: -5.7542805671691895
    6. ' ' → logprob: -6.2542805671691895
    7. ' combinations' → logprob: -6.2542805671691895
    8. ' (' → logprob: -6.3792805671691895
    9. '(' → logprob: -6.5042805671691895
    10. 'ranges' → logprob: -7.6292805671691895

Token 583: ' (' (ID: 350)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -1.1648577451705933
    2. ' (' → logprob: -1.6648577451705933
    3. ' R' → logprob: -1.6648577451705933
    4. 'R' → logprob: -2.039857864379883
    5. 'for' → logprob: -2.664857864379883
    6. ' for' → logprob: -3.164857864379883
    7. '(' → logprob: -3.164857864379883
    8. '   ' → logprob: -4.664857864379883
    9. '       ' → logprob: -5.789857864379883
    10. ' of' → logprob: -5.914857864379883

Token 584: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03917617350816727
    2. 'r' → logprob: -4.414175987243652
    3. 'range' → logprob: -4.664175987243652
    4. '(R' → logprob: -5.039175987243652
    5. 'for' → logprob: -5.914175987243652
    6. '(' → logprob: -6.539175987243652
    7. ' R' → logprob: -6.539175987243652
    8. ' (' → logprob: -7.039175987243652
    9. '(range' → logprob: -7.164175987243652
    10. ')' → logprob: -7.289175987243652

Token 585: ',C' (ID: 26924)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010171088390052319
    2. ' ,' → logprob: -4.760170936584473
    3. ',C' → logprob: -7.010170936584473
    4. ')' → logprob: -8.510170936584473
    5. ',S' → logprob: -8.760170936584473
    6. ',
' → logprob: -9.260170936584473
    7. '<|end|>' → logprob: -9.885170936584473
    8. ',R' → logprob: -10.260170936584473
    9. '),' → logprob: -10.635170936584473
    10. '   ' → logprob: -10.885170936584473

Token 586: ',S' (ID: 42097)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42989999055862427
    2. ',S' → logprob: -1.0548999309539795
    3. ',
' → logprob: -6.929900169372559
    4. ' ,' → logprob: -9.179900169372559
    5. '       ' → logprob: -9.929900169372559
    6. ',Q' → logprob: -10.679900169372559
    7. '
' → logprob: -11.679900169372559
    8. '           ' → logprob: -11.929900169372559
    9. ')' → logprob: -12.804900169372559
    10. ',

' → logprob: -13.054900169372559

Token 587: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005691757425665855
    2. ',' → logprob: -5.7556915283203125
    3. ')
' → logprob: -6.8806915283203125
    4. 's' → logprob: -8.380691528320312
    5. ' )' → logprob: -8.630691528320312
    6. '   ' → logprob: -8.630691528320312
    7. 'for' → logprob: -8.755691528320312
    8. '):
' → logprob: -9.005691528320312
    9. '       ' → logprob: -9.130691528320312
    10. ' for' → logprob: -9.255691528320312

Token 588: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5018962025642395
    2. '
' → logprob: -1.3768961429595947
    3. ' for' → logprob: -2.1268961429595947
    4. 'for' → logprob: -5.126896381378174
    5. ' from' → logprob: -5.751896381378174
    6. '        
' → logprob: -6.001896381378174
    7. 'from' → logprob: -6.126896381378174
    8. ',' → logprob: -6.126896381378174
    9. 'import' → logprob: -6.251896381378174
    10. ':' → logprob: -6.751896381378174

Token 589: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015655691968277097
    2. ' range' → logprob: -6.626565456390381
    3. '[' → logprob: -8.626565933227539
    4. '1' → logprob: -10.376565933227539
    5. '(range' → logprob: -11.251565933227539
    6. '(' → logprob: -11.876565933227539
    7. '   ' → logprob: -12.251565933227539
    8. '0' → logprob: -12.876565933227539
    9. '
' → logprob: -14.751565933227539
    10. '	range' → logprob: -14.751565933227539

Token 590: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003022037213668227
    2. '(' → logprob: -6.253022193908691
    3. '0' → logprob: -7.378022193908691
    4. 'range' → logprob: -8.003022193908691
    5. '[' → logprob: -9.753022193908691
    6. '(range' → logprob: -10.628022193908691
    7. '{' → logprob: -10.753022193908691
    8. '(int' → logprob: -12.128022193908691
    9. ' ' → logprob: -12.878022193908691
    10. ' (' → logprob: -13.003022193908691

Token 591: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07133214920759201
    2. ' ,' → logprob: -2.6963322162628174
    3. '..' → logprob: -7.196331977844238
    4. '
' → logprob: -8.446331977844238
    5. '   ' → logprob: -8.696331977844238
    6. ' ' → logprob: -9.571331977844238
    7. '100' → logprob: -10.446331977844238
    8. ',
' → logprob: -10.446331977844238
    9. '][' → logprob: -10.571331977844238
    10. '  ' → logprob: -10.571331977844238

Token 592: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.021892433986067772
    2. '9' → logprob: -4.021892547607422
    3. '10' → logprob: -6.021892547607422
    4. '3' → logprob: -6.896892547607422
    5. '4' → logprob: -8.521892547607422
    6. '...' → logprob: -11.021892547607422
    7. '{' → logprob: -11.146892547607422
    8. '5' → logprob: -11.271892547607422
    9. '1' → logprob: -11.396892547607422
    10. '100' → logprob: -11.646892547607422

Token 593: ']^' (ID: 144683)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1157432347536087
    2. ']:
' → logprob: -2.4907431602478027
    3. ']
' → logprob: -3.9907431602478027
    4. ']:' → logprob: -5.740743160247803
    5. '       ' → logprob: -6.115743160247803
    6. '][' → logprob: -7.365743160247803
    7. ',' → logprob: -7.615743160247803
    8. ' for' → logprob: -8.115743637084961
    9. ' ]' → logprob: -8.365743637084961
    10. ']:
' → logprob: -8.615743637084961

Token 594: '3' (ID: 18)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4589103162288666
    2. ',' → logprob: -1.708910346031189
    3. 'range' → logprob: -2.3339102268218994
    4. ' for' → logprob: -3.3339102268218994
    5. ' range' → logprob: -3.5839102268218994
    6. ' ,' → logprob: -4.7089104652404785
    7. '(range' → logprob: -5.3339104652404785
    8. '3' → logprob: -5.7089104652404785
    9. '   ' → logprob: -6.0839104652404785
    10. '
' → logprob: -6.7089104652404785

Token 595: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2885512113571167
    2. '
' → logprob: -1.6635512113571167
    3. ' for' → logprob: -3.1635513305664062
    4. 'for' → logprob: -4.788551330566406
    5. '        
' → logprob: -5.413551330566406
    6. '    
' → logprob: -6.288551330566406
    7. '   ' → logprob: -6.288551330566406
    8. 'possible' → logprob: -7.538551330566406
    9. '```' → logprob: -7.788551330566406
    10. 'from' → logprob: -7.913551330566406

Token 596: ' satisfy' (ID: 35441)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7920399904251099
    2. ' satisfy' → logprob: -0.7920399904251099
    3. '       ' → logprob: -3.9170398712158203
    4. '   ' → logprob: -4.16703987121582
    5. ' can' → logprob: -4.29203987121582
    6. ' match' → logprob: -4.66703987121582
    7. ' produce' → logprob: -4.91703987121582
    8. ' explain' → logprob: -5.41703987121582
    9. 'ex' → logprob: -5.79203987121582
    10. 'produce' → logprob: -5.91703987121582

Token 597: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5531072616577148
    2. '       ' → logprob: -1.0531072616577148
    3. ' for' → logprob: -3.803107261657715
    4. '   ' → logprob: -4.303107261657715
    5. 'True' → logprob: -4.553107261657715
    6. '```' → logprob: -4.803107261657715
    7. 'all' → logprob: -5.303107261657715
    8. 'the' → logprob: -5.678107261657715
    9. 'p' → logprob: -5.678107261657715
    10. '           ' → logprob: -6.428107261657715

Token 598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2928124666213989
    2. ' for' → logprob: -1.417812466621399
    3. 'for' → logprob: -5.417812347412109
    4. '   ' → logprob: -6.292812347412109
    5. '        
' → logprob: -6.542812347412109
    6. '
' → logprob: -7.167812347412109
    7. ' 
' → logprob: -7.542812347412109
    8. '        ' → logprob: -7.667812347412109
    9. '           ' → logprob: -8.16781234741211
    10. '```' → logprob: -8.29281234741211

Token 599: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.412468820810318
    2. '       ' → logprob: -1.1624687910079956
    3. 'for' → logprob: -3.787468910217285
    4. '        ' → logprob: -7.162468910217285
    5. '```' → logprob: -7.537468910217285
    6. '        
' → logprob: -8.162468910217285
    7. '   ' → logprob: -8.162468910217285
    8. '`' → logprob: -9.162468910217285
    9. ' range' → logprob: -9.287468910217285
    10. ' True' → logprob: -9.662468910217285

Token 600: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7355902791023254
    2. ' for' → logprob: -1.4855902194976807
    3. '       ' → logprob: -1.9855902194976807
    4. 'valid' → logprob: -2.9855902194976807
    5. 'possible' → logprob: -3.1105902194976807
    6. '```' → logprob: -4.11059045791626
    7. '   ' → logprob: -4.23559045791626
    8. ' valid' → logprob: -4.86059045791626
    9. ' possible' → logprob: -5.11059045791626
    10. 'results' → logprob: -5.73559045791626

Token 601: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18272548913955688
    2. ' i' → logprob: -1.807725429534912
    3. ' all' → logprob: -6.057725429534912
    4. 'all' → logprob: -7.557725429534912
    5. '   ' → logprob: -9.55772590637207
    6. ' ' → logprob: -10.68272590637207
    7. ' each' → logprob: -12.80772590637207
    8. '1' → logprob: -12.80772590637207
    9. ' every' → logprob: -12.80772590637207
    10. ' line' → logprob: -13.05772590637207

Token 602: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4852029085159302
    2. ' i' → logprob: -1.1102029085159302
    3. ' =' → logprob: -3.7352027893066406
    4. 'i' → logprob: -4.735202789306641
    5. '=' → logprob: -4.985202789306641
    6. ' ' → logprob: -4.985202789306641
    7. '   ' → logprob: -6.360202789306641
    8. 'in' → logprob: -6.360202789306641
    9. '       ' → logprob: -6.610202789306641
    10. '0' → logprob: -6.860202789306641

Token 603: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.019117018207907677
    2. ' range' → logprob: -4.0191168785095215
    3. '1' → logprob: -7.0191168785095215
    4. '[' → logprob: -9.76911735534668
    5. '(range' → logprob: -11.89411735534668
    6. '   ' → logprob: -13.01911735534668
    7. '(' → logprob: -13.14411735534668
    8. '	range' → logprob: -13.76911735534668
    9. '
' → logprob: -14.39411735534668
    10. ' ' → logprob: -14.64411735534668

Token 604: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23948216438293457
    2. '(' → logprob: -1.6144821643829346
    3. ' ' → logprob: -4.9894819259643555
    4. '   ' → logprob: -4.9894819259643555
    5. ' (' → logprob: -8.614481925964355
    6. '0' → logprob: -9.739481925964355
    7. '       ' → logprob: -10.239481925964355
    8. '(i' → logprob: -10.989481925964355
    9. '`' → logprob: -11.364481925964355
    10. '    ' → logprob: -11.489481925964355

Token 605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4372733533382416
    2. '(' → logprob: -1.062273383140564
    3. '(p' → logprob: -5.0622735023498535
    4. 'p' → logprob: -6.1872735023498535
    5. '   ' → logprob: -9.812273025512695
    6. ' ' → logprob: -9.937273025512695
    7. ' (' → logprob: -10.687273025512695
    8. ' p' → logprob: -11.187273025512695
    9. '0' → logprob: -12.062273025512695
    10. '
' → logprob: -14.562273025512695

Token 606: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07310844957828522
    2. '       ' → logprob: -3.323108434677124
    3. '   ' → logprob: -3.823108434677124
    4. '(p' → logprob: -5.323108673095703
    5. ',p' → logprob: -5.823108673095703
    6. ' ,' → logprob: -6.323108673095703
    7. '(' → logprob: -6.448108673095703
    8. ' ' → logprob: -8.198108673095703
    9. ',i' → logprob: -8.323108673095703
    10. '1' → logprob: -9.198108673095703

Token 607: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003301881952211261
    2. ' p' → logprob: -5.753302097320557
    3. '1' → logprob: -9.128301620483398
    4. '   ' → logprob: -11.503301620483398
    5. '(p' → logprob: -13.003301620483398
    6. '       ' → logprob: -14.003301620483398
    7. '
' → logprob: -14.378301620483398
    8. ' ' → logprob: -14.503301620483398
    9. '           ' → logprob: -15.003301620483398
    10. '	p' → logprob: -15.253301620483398

Token 608: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29871895909309387
    2. '[' → logprob: -1.7987189292907715
    3. '   ' → logprob: -2.9237189292907715
    4. ':' → logprob: -4.6737189292907715
    5. '           ' → logprob: -5.1737189292907715
    6. '```' → logprob: -5.4237189292907715
    7. ',' → logprob: -5.9237189292907715
    8. '+' → logprob: -5.9237189292907715
    9. '[i' → logprob: -6.0487189292907715
    10. ')' → logprob: -6.0487189292907715

Token 609: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019986294209957123
    2. '   ' → logprob: -4.394986152648926
    3. '       ' → logprob: -5.769986152648926
    4. 'p' → logprob: -5.894986152648926
    5. ' ' → logprob: -7.769986152648926
    6. '```' → logprob: -8.144986152648926
    7. '20' → logprob: -8.269986152648926
    8. '-' → logprob: -8.769986152648926
    9. ')' → logprob: -9.269986152648926
    10. '
' → logprob: -9.894986152648926

Token 610: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.684406042098999
    2. '       ' → logprob: -1.059406042098999
    3. '   ' → logprob: -2.684406042098999
    4. ':
' → logprob: -2.934406042098999
    5. '           ' → logprob: -4.309406280517578
    6. ' for' → logprob: -4.809406280517578
    7. '(' → logprob: -6.559406280517578
    8. ',' → logprob: -6.684406280517578
    9. 'for' → logprob: -7.934406280517578
    10. '):
' → logprob: -7.934406280517578

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18282030522823334
    2. '           ' → logprob: -1.9328203201293945
    3. ' for' → logprob: -4.6828203201293945
    4. '   ' → logprob: -5.0578203201293945
    5. '        ' → logprob: -6.5578203201293945
    6. '```' → logprob: -6.5578203201293945
    7. ')' → logprob: -7.3078203201293945
    8. ' ' → logprob: -7.6828203201293945
    9. '               ' → logprob: -8.182820320129395
    10. '<|end|>' → logprob: -8.182820320129395

Token 612: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3507828116416931
    2. '   ' → logprob: -2.225782871246338
    3. '       ' → logprob: -2.850782871246338
    4. ' range' → logprob: -3.350782871246338
    5. 'for' → logprob: -3.350782871246338
    6. '           ' → logprob: -3.975782871246338
    7. ' indent' → logprob: -4.475782871246338
    8. ' (' → logprob: -4.850782871246338
    9. ' i' → logprob: -5.100782871246338
    10. '```' → logprob: -5.725782871246338

Token 613: '  ' (ID: 256)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.016184687614441
    2. ' indent' → logprob: -1.141184687614441
    3. '   ' → logprob: -2.5161848068237305
    4. '       ' → logprob: -2.6411848068237305
    5. ' for' → logprob: -3.0161848068237305
    6. ' (' → logprob: -3.6411848068237305
    7. ' ind' → logprob: -3.6411848068237305
    8. 'indent' → logprob: -3.8911848068237305
    9. ' range' → logprob: -4.0161848068237305
    10. ' i' → logprob: -5.3911848068237305

Token 614: ' indent' (ID: 37655)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.856735110282898
    2. ' indent' → logprob: -1.481735110282898
    3. 'indent' (adapté à ' indent') → logprob: -2.1067352294921875
    4. '   ' → logprob: -2.2317352294921875
    5. 'for' → logprob: -2.6067352294921875
    6. '       ' → logprob: -4.9817352294921875
    7. '           ' → logprob: -5.1067352294921875
    8. ' ' → logprob: -5.2317352294921875
    9. ' ind' → logprob: -5.2317352294921875
    10. ' if' → logprob: -5.2317352294921875

Token 615: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.0001601539261173457
    2. '[i' → logprob: -8.875160217285156
    3. 's' → logprob: -11.250160217285156
    4. 'levels' → logprob: -13.125160217285156
    5. '[' → logprob: -14.125160217285156
    6. '   ' → logprob: -14.250160217285156
    7. ' =' → logprob: -14.250160217285156
    8. '_' → logprob: -14.625160217285156
    9. '[level' → logprob: -14.750160217285156
    10. '_values' → logprob: -15.000160217285156

Token 616: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003178273618686944
    2. '[' → logprob: -8.375317573547363
    3. ' [' → logprob: -9.750317573547363
    4. '   ' → logprob: -11.625317573547363
    5. '```' → logprob: -12.250317573547363
    6. '       ' → logprob: -13.000317573547363
    7. '\[' → logprob: -13.250317573547363
    8. ')[' → logprob: -13.500317573547363
    9. ' ==' → logprob: -13.625317573547363
    10. '==' → logprob: -14.000317573547363

Token 617: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17943930625915527
    2. ']==' → logprob: -2.4294393062591553
    3. ' ==' → logprob: -3.3044393062591553
    4. '==' → logprob: -3.4294393062591553
    5. '[i' → logprob: -6.054439544677734
    6. ')' → logprob: -6.929439544677734
    7. '```' → logprob: -7.179439544677734
    8. '[' → logprob: -7.179439544677734
    9. ' ]' → logprob: -8.054439544677734
    10. '-' → logprob: -8.054439544677734

Token 618: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14303652942180634
    2. '==' → logprob: -2.0180366039276123
    3. '=' → logprob: -8.893036842346191
    4. ' =' → logprob: -9.768036842346191
    5. ' ' → logprob: -10.018036842346191
    6. '*' → logprob: -10.393036842346191
    7. ' *' → logprob: -10.768036842346191
    8. '-' → logprob: -11.518036842346191
    9. ' -' → logprob: -11.643036842346191
    10. ']==' → logprob: -11.768036842346191

Token 619: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5842217803001404
    2. ' R' → logprob: -0.8342217803001404
    3. '(R' → logprob: -5.709221839904785
    4. ' (' → logprob: -5.959221839904785
    5. '   ' → logprob: -7.084221839904785
    6. ' ' → logprob: -8.084221839904785
    7. '    ' → logprob: -8.459221839904785
    8. ''' → logprob: -8.834221839904785
    9. ' sum' → logprob: -9.209221839904785
    10. 'sum' → logprob: -9.584221839904785

Token 620: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6051447987556458
    2. '*' → logprob: -1.105144739151001
    3. '*(' → logprob: -2.105144739151001
    4. ',' → logprob: -7.23014497756958
    5. '*((' → logprob: -9.730144500732422
    6. '   ' → logprob: -10.105144500732422
    7. '*,' → logprob: -10.355144500732422
    8. '  ' → logprob: -10.980144500732422
    9. ' ' → logprob: -11.355144500732422
    10. '"' → logprob: -11.355144500732422

Token 621: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.17990127205848694
    2. '(ro' → logprob: -1.8049012422561646
    3. ' (' → logprob: -9.304901123046875
    4. ' ro' → logprob: -9.929901123046875
    5. '_ro' → logprob: -12.304901123046875
    6. '(' → logprob: -12.679901123046875
    7. '   ' → logprob: -12.929901123046875
    8. '(r' → logprob: -13.179901123046875
    9. 'rop' → logprob: -14.304901123046875
    10. 'RO' → logprob: -14.429901123046875

Token 622: '_c' (ID: 1303)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.019016433507204056
    2. '_c' → logprob: -4.019016265869141
    3. '[_' → logprob: -7.894016265869141
    4. '[' → logprob: -8.14401626586914
    5. '[-' → logprob: -9.39401626586914
    6. 'i' → logprob: -10.39401626586914
    7. '_i' → logprob: -10.76901626586914
    8. 'c' → logprob: -11.14401626586914
    9. ')' → logprob: -11.26901626586914
    10. ' [' → logprob: -11.39401626586914

Token 623: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.06978023797273636
    2. '_c' → logprob: -3.3197803497314453
    3. '[-' → logprob: -4.194780349731445
    4. '[i' → logprob: -4.444780349731445
    5. '_i' → logprob: -6.444780349731445
    6. 'cum' → logprob: -7.194780349731445
    7. '_um' → logprob: -7.319780349731445
    8. '[_' → logprob: -8.694780349731445
    9. 'm' → logprob: -9.069780349731445
    10. '[' → logprob: -9.194780349731445

Token 624: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10027438402175903
    2. '[-' → logprob: -2.3502743244171143
    3. 'i' → logprob: -9.975274085998535
    4. '-' → logprob: -11.225274085998535
    5. '[' → logprob: -12.475274085998535
    6. ' [-' → logprob: -14.350274085998535
    7. '[:-' → logprob: -14.350274085998535
    8. ' i' → logprob: -14.600274085998535
    9. '
' → logprob: -14.600274085998535
    10. '```' → logprob: -14.725274085998535

Token 625: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009348961524665356
    2. ']' → logprob: -5.0093488693237305
    3. ' -' → logprob: -6.0093488693237305
    4. '[-' → logprob: -9.25934886932373
    5. ']-' → logprob: -10.00934886932373
    6. '[' → logprob: -11.75934886932373
    7. '])' → logprob: -11.88434886932373
    8. '[i' → logprob: -12.25934886932373
    9. '```' → logprob: -12.38434886932373
    10. '[:-' → logprob: -12.75934886932373

Token 626: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.204130619764328
    2. ' -' → logprob: -1.7041306495666504
    3. '[i' → logprob: -6.45413064956665
    4. '[-' → logprob: -7.57913064956665
    5. '[' → logprob: -8.204130172729492
    6. '   ' → logprob: -8.954130172729492
    7. '```' → logprob: -9.329130172729492
    8. ' ' → logprob: -10.079130172729492
    9. '[:-' → logprob: -10.079130172729492
    10. ')' → logprob: -11.454130172729492

Token 627: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.002512285253033042
    2. ' rc' → logprob: -6.002512454986572
    3. '   ' → logprob: -10.877511978149414
    4. '	rc' → logprob: -12.252511978149414
    5. '       ' → logprob: -13.002511978149414
    6. '  ' → logprob: -13.252511978149414
    7. '(rc' → logprob: -13.252511978149414
    8. '_rc' → logprob: -13.377511978149414
    9. '    ' → logprob: -13.627511978149414
    10. '     ' → logprob: -13.752511978149414

Token 628: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.003086686134338379
    2. '[i' → logprob: -5.878086566925049
    3. 'i' → logprob: -8.503087043762207
    4. 'c' → logprob: -11.128087043762207
    5. '[_' → logprob: -11.128087043762207
    6. '```' → logprob: -11.253087043762207
    7. '_i' → logprob: -11.378087043762207
    8. '`' → logprob: -12.128087043762207
    9. '[' → logprob: -12.503087043762207
    10. 'cum' → logprob: -12.628087043762207

Token 629: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.13991400599479675
    2. '[i' → logprob: -2.139914035797119
    3. '[-' → logprob: -5.264914035797119
    4. '_i' → logprob: -5.889914035797119
    5. 'i' → logprob: -6.014914035797119
    6. '_c' → logprob: -6.764914035797119
    7. '[' → logprob: -8.014913558959961
    8. '_' → logprob: -8.889913558959961
    9. '[_' → logprob: -9.014913558959961
    10. 'm' → logprob: -9.264913558959961

Token 630: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015538577281404287
    2. '[-' → logprob: -9.125155448913574
    3. 'i' → logprob: -10.375155448913574
    4. '[' → logprob: -12.125155448913574
    5. '```' → logprob: -12.750155448913574
    6. '[:-' → logprob: -13.250155448913574
    7. '-' → logprob: -13.625155448913574
    8. ')' → logprob: -14.125155448913574
    9. '
' → logprob: -14.375155448913574
    10. ')[' → logprob: -14.500155448913574

Token 631: '])' (ID: 4636)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03872591629624367
    2. '])' → logprob: -3.9137258529663086
    3. '[i' → logprob: -4.163725852966309
    4. '[-' → logprob: -6.788725852966309
    5. ']' → logprob: -7.413725852966309
    6. ' -' → logprob: -8.413725852966309
    7. '[' → logprob: -8.663725852966309
    8. 'i' → logprob: -9.038725852966309
    9. '[:-' → logprob: -9.413725852966309
    10. ')' → logprob: -10.038725852966309

Token 632: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07915955036878586
    2. '-' → logprob: -3.7041594982147217
    3. ' +' → logprob: -4.329159736633301
    4. '           ' → logprob: -4.454159736633301
    5. '[i' → logprob: -5.079159736633301
    6. ')' → logprob: -5.329159736633301
    7. '       ' → logprob: -6.079159736633301
    8. ' ' → logprob: -6.204159736633301
    9. '          ' → logprob: -6.579159736633301
    10. '[' → logprob: -6.704159736633301

Token 633: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6987302899360657
    2. ' C' → logprob: -0.6987302899360657
    3. ' ' → logprob: -6.19873046875
    4. '   ' → logprob: -6.44873046875
    5. '    ' → logprob: -7.19873046875
    6. 'co' → logprob: -7.57373046875
    7. '  ' → logprob: -8.07373046875
    8. '     ' → logprob: -9.07373046875
    9. '      ' → logprob: -10.57373046875
    10. 'S' → logprob: -10.57373046875

Token 634: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.8358141183853149
    2. '(i' → logprob: -1.210814118385315
    3. '[i' → logprob: -1.835814118385315
    4. ' (' → logprob: -3.4608139991760254
    5. '[' → logprob: -3.5858139991760254
    6. '(' → logprob: -3.8358139991760254
    7. '```' → logprob: -4.960813999176025
    8. '(co' → logprob: -5.335813999176025
    9. '[(' → logprob: -5.335813999176025
    10. '*' → logprob: -5.335813999176025

Token 635: 'co' (ID: 1191)
  Prédit: 'co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.0315275639295578
    2. 'so' → logprob: -3.906527519226074
    3. ' co' → logprob: -4.531527519226074
    4. '(co' → logprob: -9.281527519226074
    5. ' so' → logprob: -9.906527519226074
    6. '   ' → logprob: -11.906527519226074
    7. '```' → logprob: -12.781527519226074
    8. ' ' → logprob: -13.031527519226074
    9. '  ' → logprob: -13.781527519226074
    10. '(' → logprob: -14.281527519226074

Token 636: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0056509822607040405
    2. '[i' → logprob: -5.255650997161865
    3. '[_' → logprob: -7.880650997161865
    4. '```' → logprob: -10.380650520324707
    5. '[' → logprob: -12.505650520324707
    6. '`' → logprob: -13.880650520324707
    7. '[-' → logprob: -14.630650520324707
    8. 'c' → logprob: -14.755650520324707
    9. '_i' → logprob: -15.005650520324707
    10. ' _' → logprob: -15.005650520324707

Token 637: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5934356451034546
    2. 'um' → logprob: -0.8434356451034546
    3. 'cum' → logprob: -4.843435764312744
    4. '[i' → logprob: -4.968435764312744
    5. 'i' → logprob: -6.593435764312744
    6. 'c' → logprob: -8.218435287475586
    7. 'm' → logprob: -8.718435287475586
    8. '_i' → logprob: -8.968435287475586
    9. '[' → logprob: -9.218435287475586
    10. 'u' → logprob: -9.343435287475586

Token 638: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.870950215263292e-05
    2. '[' → logprob: -10.125048637390137
    3. 'i' → logprob: -13.000048637390137
    4. '```' → logprob: -13.000048637390137
    5. '[-' → logprob: -13.125048637390137
    6. ' [' → logprob: -14.125048637390137
    7. ')[' → logprob: -15.500048637390137
    8. '
' → logprob: -15.625048637390137
    9. '   ' → logprob: -15.625048637390137
    10. '[
' → logprob: -16.125049591064453

Token 639: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20451653003692627
    2. '-' → logprob: -1.7045165300369263
    3. ' -' → logprob: -6.204516410827637
    4. '[' → logprob: -7.579516410827637
    5. 'i' → logprob: -8.579516410827637
    6. '[-' → logprob: -9.204516410827637
    7. ')' → logprob: -9.454516410827637
    8. '-i' → logprob: -9.579516410827637
    9. '   ' → logprob: -9.954516410827637
    10. ']' → logprob: -10.454516410827637

Token 640: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00388795742765069
    2. '[' → logprob: -5.878888130187988
    3. '[-' → logprob: -7.128888130187988
    4. 'i' → logprob: -8.503888130187988
    5. '-' → logprob: -10.128888130187988
    6. '```' → logprob: -10.753888130187988
    7. '[
' → logprob: -12.253888130187988
    8. ' i' → logprob: -12.503888130187988
    9. '[:-' → logprob: -13.128888130187988
    10. ' -' → logprob: -14.003888130187988

Token 641: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.20846840739250183
    2. 'i' → logprob: -1.9584684371948242
    3. '[i' → logprob: -3.708468437194824
    4. 'co' → logprob: -3.958468437194824
    5. ' cc' → logprob: -6.458468437194824
    6. ' i' → logprob: -6.583468437194824
    7. '   ' → logprob: -9.083468437194824
    8. ' co' → logprob: -9.333468437194824
    9. '(i' → logprob: -9.708468437194824
    10. ' ' → logprob: -9.833468437194824

Token 642: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.08025580644607544
    2. '[i' → logprob: -2.5802557468414307
    3. 'i' → logprob: -6.83025598526001
    4. 'c' → logprob: -9.705255508422852
    5. '[' → logprob: -9.955255508422852
    6. '_i' → logprob: -9.955255508422852
    7. '```' → logprob: -9.955255508422852
    8. '[_' → logprob: -10.080255508422852
    9. '   ' → logprob: -11.580255508422852
    10. 'cum' → logprob: -11.955255508422852

Token 643: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.030575528740882874
    2. '[i' → logprob: -3.6555755138397217
    3. '_c' → logprob: -6.655575752258301
    4. 'i' → logprob: -7.155575752258301
    5. 'cum' → logprob: -7.280575752258301
    6. '[' → logprob: -7.905575752258301
    7. '_i' → logprob: -8.1555757522583
    8. '[-' → logprob: -8.4055757522583
    9. 'm' → logprob: -9.2805757522583
    10. '_' → logprob: -9.5305757522583

Token 644: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.966313281329349e-05
    2. '[' → logprob: -10.375049591064453
    3. '[_' → logprob: -11.500049591064453
    4. ')[' → logprob: -12.875049591064453
    5. '_c' → logprob: -13.000049591064453
    6. '```' → logprob: -13.750049591064453
    7. 'i' → logprob: -14.250049591064453
    8. ')' → logprob: -15.250049591064453
    9. ' [' → logprob: -15.375049591064453
    10. '[-' → logprob: -15.500049591064453

Token 645: '])' (ID: 4636)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017105208244174719
    2. ')' → logprob: -7.376710414886475
    3. '[' → logprob: -7.876710414886475
    4. '])' → logprob: -8.126710891723633
    5. 'i' → logprob: -8.251710891723633
    6. '][' → logprob: -9.751710891723633
    7. ')[' → logprob: -10.126710891723633
    8. '```' → logprob: -11.126710891723633
    9. '   ' → logprob: -11.751710891723633
    10. ']' → logprob: -11.876710891723633

Token 646: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06422319263219833
    2. '[' → logprob: -3.439223289489746
    3. '           ' → logprob: -4.564223289489746
    4. '```' → logprob: -5.689223289489746
    5. 'i' → logprob: -6.064223289489746
    6. '       ' → logprob: -6.189223289489746
    7. ' ' → logprob: -6.689223289489746
    8. '          ' → logprob: -6.689223289489746
    9. ' +' → logprob: -6.814223289489746
    10. ' [' → logprob: -6.939223289489746

Token 647: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.6330851912498474
    2. 'S' → logprob: -0.7580851912498474
    3. ' ' → logprob: -7.883085250854492
    4. '   ' → logprob: -10.383085250854492
    5. 'so' → logprob: -11.258085250854492
    6. '`' → logprob: -11.258085250854492
    7. ' so' → logprob: -11.633085250854492
    8. '  ' → logprob: -11.758085250854492
    9. '```' → logprob: -12.508085250854492
    10. '     ' → logprob: -12.758085250854492

Token 648: '*(' (ID: 14793)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0277297031134367
    2. '(i' → logprob: -4.152729511260986
    3. '*(' → logprob: -5.902729511260986
    4. '[(' → logprob: -5.902729511260986
    5. '_c' → logprob: -6.027729511260986
    6. '[' → logprob: -6.902729511260986
    7. ' (' → logprob: -7.027729511260986
    8. '`' → logprob: -7.277729511260986
    9. '```' → logprob: -8.027729988098145
    10. '*' → logprob: -8.777729988098145

Token 649: 'so' (ID: 786)
  Prédit: 'so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.0013438044115900993
    2. ' so' → logprob: -6.626343727111816
    3. ' ' → logprob: -12.251343727111816
    4. '   ' → logprob: -12.251343727111816
    5. '  ' → logprob: -13.001343727111816
    6. '```' → logprob: -13.251343727111816
    7. '
' → logprob: -13.501343727111816
    8. 'i' → logprob: -13.751343727111816
    9. '       ' → logprob: -15.001343727111816
    10. '`' → logprob: -15.126343727111816

Token 650: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0008570278296247125
    2. '[i' → logprob: -7.125856876373291
    3. '[_' → logprob: -10.62585735321045
    4. '```' → logprob: -11.12585735321045
    5. '`' → logprob: -12.75085735321045
    6. '[' → logprob: -13.00085735321045
    7. '   ' → logprob: -13.50085735321045
    8. '_i' → logprob: -13.62585735321045
    9. 'i' → logprob: -13.75085735321045
    10. ' _' → logprob: -14.00085735321045

Token 651: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0030809827148914337
    2. '_c' → logprob: -6.62808084487915
    3. 'cum' → logprob: -6.87808084487915
    4. '[i' → logprob: -8.503081321716309
    5. '[' → logprob: -9.003081321716309
    6. 'i' → logprob: -9.253081321716309
    7. 'u' → logprob: -9.878081321716309
    8. '_um' → logprob: -10.003081321716309
    9. 'c' → logprob: -10.128081321716309
    10. '_' → logprob: -10.378081321716309

Token 652: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007858026656322181
    2. '[-' → logprob: -7.500785827636719
    3. '[' → logprob: -8.750785827636719
    4. 'i' → logprob: -10.375785827636719
    5. ' [' → logprob: -11.500785827636719
    6. '-' → logprob: -11.625785827636719
    7. '```' → logprob: -12.000785827636719
    8. '   ' → logprob: -12.875785827636719
    9. '_i' → logprob: -13.000785827636719
    10. '
' → logprob: -13.375785827636719

Token 653: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3494819104671478
    2. '-' → logprob: -1.3494819402694702
    3. ']' → logprob: -3.8494818210601807
    4. 'i' → logprob: -4.59948205947876
    5. '[-' → logprob: -6.59948205947876
    6. ' -' → logprob: -6.97448205947876
    7. ')' → logprob: -7.47448205947876
    8. '][' → logprob: -7.84948205947876
    9. '[' → logprob: -7.97448205947876
    10. '   ' → logprob: -8.974481582641602

Token 654: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04189927875995636
    2. '-' → logprob: -3.2918992042541504
    3. '[-' → logprob: -5.66689920425415
    4. '[' → logprob: -8.666899681091309
    5. ' -' → logprob: -8.791899681091309
    6. 'i' → logprob: -10.416899681091309
    7. '```' → logprob: -11.541899681091309
    8. '
' → logprob: -11.916899681091309
    9. '-i' → logprob: -12.166899681091309
    10. ')' → logprob: -12.541899681091309

Token 655: ' sc' (ID: 1460)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000249061529757455
    2. '[i' → logprob: -8.375248908996582
    3. ' i' → logprob: -11.625248908996582
    4. 'sc' → logprob: -12.375248908996582
    5. '```' → logprob: -12.625248908996582
    6. '
' → logprob: -14.375248908996582
    7. '   ' → logprob: -14.750248908996582
    8. 'c' → logprob: -15.375248908996582
    9. '[' → logprob: -15.625248908996582
    10. '(i' → logprob: -15.875248908996582

Token 656: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.7372048862162046e-05
    2. ']_' → logprob: -11.375027656555176
    3. '[i' → logprob: -13.125027656555176
    4. 'i' → logprob: -13.125027656555176
    5. '_' → logprob: -13.250027656555176
    6. '[_' → logprob: -13.375027656555176
    7. 'cum' → logprob: -13.375027656555176
    8. ''_' → logprob: -13.625027656555176
    9. ')_' → logprob: -13.750027656555176
    10. ' _' → logprob: -14.000027656555176

Token 657: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.006409462541341782
    2. 'm' → logprob: -6.256409645080566
    3. 'cum' → logprob: -6.506409645080566
    4. '[i' → logprob: -7.256409645080566
    5. '[' → logprob: -7.881409645080566
    6. '_c' → logprob: -8.256409645080566
    7. 'i' → logprob: -8.506409645080566
    8. '   ' → logprob: -8.506409645080566
    9. '_um' → logprob: -8.506409645080566
    10. '_' → logprob: -8.506409645080566

Token 658: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5667229890823364
    2. '][' → logprob: -1.0667229890823364
    3. '])' → logprob: -2.941722869873047
    4. ']' → logprob: -4.441722869873047
    5. ')[' → logprob: -4.941722869873047
    6. ')][' → logprob: -5.566722869873047
    7. '])[' → logprob: -5.816722869873047
    8. '   ' → logprob: -5.941722869873047
    9. ')' → logprob: -6.191722869873047
    10. '[' → logprob: -7.191722869873047

Token 659: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0010669894982129335
    2. '])
' → logprob: -7.251067161560059
    3. ']' → logprob: -8.501067161560059
    4. '[i' → logprob: -9.626067161560059
    5. '])
' → logprob: -10.876067161560059
    6. '   ' → logprob: -11.001067161560059
    7. ')' → logprob: -11.501067161560059
    8. '       ' → logprob: -11.751067161560059
    9. '-' → logprob: -12.001067161560059
    10. ''])' → logprob: -12.251067161560059

Token 660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11917608231306076
    2. '
' → logprob: -2.244176149368286
    3. '```' → logprob: -6.119175910949707
    4. ' for' → logprob: -6.619175910949707
    5. '   ' → logprob: -6.994175910949707
    6. 'for' → logprob: -7.244175910949707
    7. '        
' → logprob: -7.619175910949707
    8. '\n' → logprob: -8.119175910949707
    9. '    
' → logprob: -9.119175910949707
    10. '           ' → logprob: -9.494175910949707

Token 661: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5441387891769409
    2. '       ' → logprob: -0.9191387891769409
    3. '        
' → logprob: -5.1691389083862305
    4. 'for' → logprob: -5.4191389083862305
    5. '\n' → logprob: -5.6691389083862305
    6. ' for' → logprob: -5.9191389083862305
    7. '  
' → logprob: -6.5441389083862305
    8. '

' → logprob: -7.5441389083862305
    9. '    
' → logprob: -7.7941389083862305
    10. '```' → logprob: -7.7941389083862305

Token 662: ' First' (ID: 8338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.873730480670929
    2. 'for' → logprob: -0.873730480670929
    3. ' for' → logprob: -1.8737304210662842
    4. '
' → logprob: -4.623730659484863
    5. '   ' → logprob: -6.748730659484863
    6. '```' → logprob: -7.873730659484863
    7. '\n' → logprob: -9.123730659484863
    8. '        
' → logprob: -9.748730659484863
    9. '           ' → logprob: -10.373730659484863
    10. ' ' → logprob: -11.123730659484863

Token 663: ' line' (ID: 2543)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8743577599525452
    2. 'possible' → logprob: -1.3743577003479004
    3. 'c' → logprob: -1.7493577003479004
    4. 'step' → logprob: -3.3743577003479004
    5. 'valid' → logprob: -3.6243577003479004
    6. 'found' → logprob: -3.6243577003479004
    7. 'for' → logprob: -3.9993577003479004
    8. '   ' → logprob: -4.1243577003479
    9. 'candidate' → logprob: -5.3743577003479
    10. 'indent' → logprob: -5.6243577003479

Token 664: ' indent' (ID: 37655)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4307888448238373
    2. '_indent' → logprob: -1.5557888746261597
    3. '_ind' → logprob: -3.68078875541687
    4. ' indent' → logprob: -3.80578875541687
    5. '=' → logprob: -3.80578875541687
    6. 'indent' → logprob: -3.93078875541687
    7. '   ' → logprob: -4.555788993835449
    8. ' is' → logprob: -4.555788993835449
    9. ' ==' → logprob: -4.930788993835449
    10. ' has' → logprob: -5.430788993835449

Token 665: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.18908792734146118
    2. ' =' → logprob: -2.0640878677368164
    3. '[' → logprob: -4.189087867736816
    4. 's' → logprob: -4.439087867736816
    5. 'ation' → logprob: -5.189087867736816
    6. '=' → logprob: -5.314087867736816
    7. '   ' → logprob: -5.939087867736816
    8. '0' → logprob: -6.564087867736816
    9. '_' → logprob: -7.439087867736816
    10. 'ations' → logprob: -7.689087867736816

Token 666: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03327413648366928
    2. ' =' → logprob: -3.7832741737365723
    3. '=' → logprob: -6.158274173736572
    4. '0' → logprob: -6.283274173736572
    5. 'for' → logprob: -6.408274173736572
    6. '   ' → logprob: -7.158274173736572
    7. ' is' → logprob: -7.283274173736572
    8. '```' → logprob: -7.908274173736572
    9. ' for' → logprob: -8.033273696899414
    10. '[i' → logprob: -8.408273696899414

Token 667: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5000952482223511
    2. '0' → logprob: -1.250095248222351
    3. '[' → logprob: -2.6250953674316406
    4. ']' → logprob: -3.6250953674316406
    5. 'i' → logprob: -5.500095367431641
    6. '][' → logprob: -6.875095367431641
    7. '
' → logprob: -7.375095367431641
    8. '=' → logprob: -7.625095367431641
    9. '[i' → logprob: -7.875095367431641
    10. '```' → logprob: -8.37509536743164

Token 668: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06361182779073715
    2. ']==' → logprob: -3.1886117458343506
    3. ' ==' → logprob: -4.68861198425293
    4. '==' → logprob: -4.81361198425293
    5. ')' → logprob: -6.31361198425293
    6. '[' → logprob: -8.18861198425293
    7. '```' → logprob: -8.31361198425293
    8. '   ' → logprob: -8.56361198425293
    9. 'def' → logprob: -9.06361198425293
    10. '=' → logprob: -9.43861198425293

Token 669: ' ==' (ID: 951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0026894807815552
    2. '=' → logprob: -1.6276894807815552
    3. ' ==' → logprob: -1.7526894807815552
    4. 'for' → logprob: -2.1276893615722656
    5. '==' → logprob: -3.2526893615722656
    6. '   ' → logprob: -3.5026893615722656
    7. ' for' → logprob: -3.6276893615722656
    8. ' is' → logprob: -4.627689361572266
    9. '
' → logprob: -4.752689361572266
    10. '       ' → logprob: -4.877689361572266

Token 670: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.375019073486328
    4. '=' → logprob: -19.500019073486328
    5. '```' → logprob: -20.125019073486328
    6. '[' → logprob: -21.000019073486328
    7. '`' → logprob: -21.125019073486328
    8. ' =' → logprob: -21.125019073486328
    9. '           ' → logprob: -21.250019073486328
    10. '1' → logprob: -21.500019073486328

Token 671: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'indent' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '```' → logprob: -18.125001907348633
    6. 'zero' → logprob: -19.125001907348633
    7. '`' → logprob: -19.500001907348633
    8. '[' → logprob: -19.875001907348633
    9. '``' → logprob: -19.875001907348633
    10. '=' → logprob: -19.875001907348633

Token 672: ' must' (ID: 2804)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5341625809669495
    2. 'possible' → logprob: -1.6591625213623047
    3. '       ' → logprob: -2.4091625213623047
    4. 'c' → logprob: -2.9091625213623047
    5. 'valid' → logprob: -3.4091625213623047
    6. '   ' → logprob: -4.159162521362305
    7. '
' → logprob: -4.284162521362305
    8. 'results' → logprob: -5.034162521362305
    9. ' for' → logprob: -5.659162521362305
    10. 'solutions' → logprob: -6.034162521362305

Token 673: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.008804241195321083
    2. ' be' → logprob: -4.8838043212890625
    3. 'hold' → logprob: -8.008804321289062
    4. '==' → logprob: -8.008804321289062
    5. '#' → logprob: -8.383804321289062
    6. 'continue' → logprob: -9.508804321289062
    7. '=' → logprob: -9.508804321289062
    8. 'remain' → logprob: -9.508804321289062
    9. 'match' → logprob: -10.633804321289062
    10. 'equal' → logprob: -10.758804321289062

Token 674: ' satisfied' (ID: 23121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27851611375808716
    2. '0' → logprob: -2.5285160541534424
    3. 'True' → logprob: -2.7785160541534424
    4. 'equal' → logprob: -3.9035160541534424
    5. 'true' → logprob: -4.1535162925720215
    6. 'R' → logprob: -4.4035162925720215
    7. 'checked' → logprob: -4.7785162925720215
    8. 'consider' → logprob: -4.9035162925720215
    9. '1' → logprob: -5.0285162925720215
    10. 'used' → logprob: -5.4035162925720215

Token 675: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0249047689139843
    2. '
' → logprob: -4.274904727935791
    3. 'possible' → logprob: -4.899904727935791
    4. 'for' → logprob: -6.274904727935791
    5. '   ' → logprob: -7.524904727935791
    6. ' for' → logprob: -9.02490520477295
    7. '```' → logprob: -9.02490520477295
    8. 'from' → logprob: -9.27490520477295
    9. ' possible' → logprob: -9.52490520477295
    10. 'valid' → logprob: -9.52490520477295

Token 676: ' definition' (ID: 16083)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.11418032646179199
    2. 'definition' → logprob: -2.739180326461792
    3. 'R' → logprob: -3.864180326461792
    4. 'any' → logprob: -5.364180564880371
    5. 'for' → logprob: -5.864180564880371
    6. 'the' → logprob: -5.864180564880371
    7. ' all' → logprob: -5.989180564880371
    8. ' definition' → logprob: -6.114180564880371
    9. '(R' → logprob: -6.239180564880371
    10. 'def' → logprob: -6.364180564880371

Token 677: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03589591383934021
    2. 'possible' → logprob: -3.660895824432373
    3. '
' → logprob: -5.160895824432373
    4. 'for' → logprob: -6.785895824432373
    5. '   ' → logprob: -7.160895824432373
    6. 'valid' → logprob: -7.660895824432373
    7. 'results' → logprob: -8.160896301269531
    8. 'import' → logprob: -8.535896301269531
    9. '        
' → logprob: -8.660896301269531
    10. 'solutions' → logprob: -8.910896301269531

Token 678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010879325680434704
    2. '
' → logprob: -5.3858795166015625
    3. 'possible' → logprob: -5.3858795166015625
    4. 'valid' → logprob: -7.5108795166015625
    5. '```' → logprob: -7.5108795166015625
    6. '   ' → logprob: -8.635879516601562
    7. 'for' → logprob: -8.885879516601562
    8. '        
' → logprob: -9.635879516601562
    9. 'import' → logprob: -9.885879516601562
    10. ' possible' → logprob: -10.510879516601562

Token 679: ' candidates' (ID: 18116)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.19178584218025208
    2. 'valid' → logprob: -2.3167858123779297
    3. 'c' → logprob: -3.6917858123779297
    4. 'from' → logprob: -3.8167858123779297
    5. 'results' → logprob: -4.94178581237793
    6. 'for' → logprob: -5.06678581237793
    7. '       ' → logprob: -5.19178581237793
    8. 'poss' → logprob: -5.81678581237793
    9. 'solutions' → logprob: -6.06678581237793
    10. 'import' → logprob: -6.44178581237793

Token 680: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859600216150284
    2. '=' → logprob: -3.048595905303955
    3. '=[]' → logprob: -11.798596382141113
    4. '_' → logprob: -14.798596382141113
    5. 's' → logprob: -15.298596382141113
    6. '   ' → logprob: -15.798596382141113
    7. '=[]
' → logprob: -16.298595428466797
    8. '```' → logprob: -16.923595428466797
    9. ',' → logprob: -17.048595428466797
    10. '  ' → logprob: -17.423595428466797

Token 681: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0001375089050270617
    2. '[]
' → logprob: -9.000137329101562
    3. '[(' → logprob: -11.500137329101562
    4. 'set' → logprob: -13.750137329101562
    5. ' []' → logprob: -13.875137329101562
    6. '[' → logprob: -14.000137329101562
    7. '[]

' → logprob: -14.125137329101562
    8. '[
' → logprob: -15.500137329101562
    9. '[]}' → logprob: -16.375137329101562
    10. '[]"' → logprob: -17.000137329101562

Token 682: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001055795350112021
    2. ' for' → logprob: -7.251055717468262
    3. '       ' → logprob: -8.001055717468262
    4. '   ' → logprob: -12.001055717468262
    5. '```' → logprob: -12.376055717468262
    6. '	for' → logprob: -16.001056671142578
    7. '
' → logprob: -16.251056671142578
    8. '``' → logprob: -17.001056671142578
    9. 'from' → logprob: -17.376056671142578
    10. '        
' → logprob: -18.376056671142578

Token 683: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.5
    3. 'from' → logprob: -18.0
    4. '       ' → logprob: -18.0
    5. '   ' → logprob: -19.5
    6. '```' → logprob: -22.0
    7. '
' → logprob: -22.25
    8. '           ' → logprob: -24.0
    9. '	for' → logprob: -24.875
    10. '        
' → logprob: -25.75

Token 684: ' Generate' (ID: 33886)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1472419600977446e-06
    2. ' for' → logprob: -14.000000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '       ' → logprob: -17.000001907348633
    5. 'from' → logprob: -19.500001907348633
    6. 'R' → logprob: -20.500001907348633
    7. '```' → logprob: -21.000001907348633
    8. '
' → logprob: -21.375001907348633
    9. 'range' → logprob: -22.125001907348633
    10. '	for' → logprob: -22.875001907348633

Token 685: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011547001078724861
    2. ' for' → logprob: -4.511547088623047
    3. '   ' → logprob: -8.011547088623047
    4. 'R' → logprob: -9.011547088623047
    5. 'from' → logprob: -10.761547088623047
    6. '       ' → logprob: -11.636547088623047
    7. 'range' → logprob: -11.636547088623047
    8. ' R' → logprob: -13.011547088623047
    9. '```' → logprob: -13.761547088623047
    10. ' range' → logprob: -13.886547088623047

Token 686: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30911797285079956
    2. 'R' → logprob: -2.0591180324554443
    3. ' for' → logprob: -2.0591180324554443
    4. '   ' → logprob: -5.184117794036865
    5. ' R' → logprob: -5.434117794036865
    6. 'range' → logprob: -7.559117794036865
    7. ' range' → logprob: -9.059118270874023
    8. 'r' → logprob: -9.934118270874023
    9. 'ranges' → logprob: -10.434118270874023
    10. '       ' → logprob: -10.434118270874023

Token 687: ' triples' (ID: 189700)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.015048227272927761
    2. 'for' → logprob: -4.390048027038574
    3. ' R' → logprob: -6.390048027038574
    4. 'r' → logprob: -7.890048027038574
    5. ' for' → logprob: -8.015048027038574
    6. '   ' → logprob: -9.515048027038574
    7. 'range' → logprob: -10.390048027038574
    8. 'ranges' → logprob: -10.765048027038574
    9. 'Rs' → logprob: -11.515048027038574
    10. '(R' → logprob: -12.015048027038574

Token 688: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00033879990223795176
    2. ' for' → logprob: -8.250338554382324
    3. '   ' → logprob: -9.750338554382324
    4. '       ' → logprob: -11.000338554382324
    5. '
' → logprob: -13.000338554382324
    6. '           ' → logprob: -15.875338554382324
    7. 'from' → logprob: -16.62533950805664
    8. 'R' → logprob: -17.62533950805664
    9. '               ' → logprob: -18.75033950805664
    10. '```' → logprob: -18.75033950805664

Token 689: ' R' (ID: 460)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28156593441963196
    2. 'R' → logprob: -1.5315659046173096
    3. 'for' → logprob: -3.6565659046173096
    4. ' range' → logprob: -6.156566143035889
    5. '(R' → logprob: -7.406566143035889
    6. 'r' → logprob: -8.53156566619873
    7. '(range' → logprob: -8.65656566619873
    8. ' R' → logprob: -9.03156566619873
    9. 'ranges' → logprob: -9.65656566619873
    10. ' for' → logprob: -9.90656566619873

Token 690: ',C' (ID: 26924)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12174113094806671
    2. ' for' → logprob: -2.8717410564422607
    3. ' in' → logprob: -3.2467410564422607
    4. ',' → logprob: -3.9967410564422607
    5. 'in' → logprob: -7.74674129486084
    6. '   ' → logprob: -8.74674129486084
    7. 'range' → logprob: -9.37174129486084
    8. ',
' → logprob: -10.99674129486084
    9. 'from' → logprob: -11.12174129486084
    10. ' ,' → logprob: -11.37174129486084

Token 691: ',S' (ID: 42097)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010943826287984848
    2. 'for' → logprob: -5.38594388961792
    3. ' in' → logprob: -5.63594388961792
    4. ',C' → logprob: -6.63594388961792
    5. 'range' → logprob: -7.63594388961792
    6. 'in' → logprob: -8.010943412780762
    7. ' ,' → logprob: -8.385943412780762
    8. 'from' → logprob: -9.260943412780762
    9. ',int' → logprob: -9.760943412780762
    10. ',c' → logprob: -10.260943412780762

Token 692: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004197236616164446
    2. ' for' → logprob: -5.504197120666504
    3. '   ' → logprob: -9.629197120666504
    4. '
' → logprob: -10.379197120666504
    5. '       ' → logprob: -11.004197120666504
    6. 'from' → logprob: -13.629197120666504
    7. '(
' → logprob: -13.629197120666504
    8. '(' → logprob: -14.129197120666504
    9. '(range' → logprob: -14.254197120666504
    10. ':
' → logprob: -14.879197120666504

Token 693: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00016182278341148049
    2. ' range' → logprob: -8.750162124633789
    3. '1' → logprob: -13.000162124633789
    4. '   ' → logprob: -14.500162124633789
    5. 'for' → logprob: -15.125162124633789
    6. '(range' → logprob: -15.750162124633789
    7. '(' → logprob: -16.62516212463379
    8. '```' → logprob: -18.25016212463379
    9. 'ranges' → logprob: -18.37516212463379
    10. '[' → logprob: -18.62516212463379

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.125001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '(' → logprob: -15.625001907348633
    5. 'range' → logprob: -15.750001907348633
    6. ',' → logprob: -18.000001907348633
    7. '
' → logprob: -19.750001907348633
    8. ' range' → logprob: -20.500001907348633
    9. '           ' → logprob: -20.625001907348633
    10. '```' → logprob: -21.000001907348633

Token 695: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.14514586329460144
    2. ',' → logprob: -2.020145893096924
    3. ' ,' → logprob: -6.270145893096924
    4. '...' → logprob: -8.520145416259766
    5. ']' → logprob: -8.645145416259766
    6. ',
' → logprob: -9.770145416259766
    7. ' ..' → logprob: -10.145145416259766
    8. ',..' → logprob: -10.270145416259766
    9. '
' → logprob: -10.895145416259766
    10. ',...' → logprob: -11.520145416259766

Token 696: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0001537169300718233
    2. '1' → logprob: -8.875153541564941
    3. ' ' → logprob: -11.375153541564941
    4. '21' → logprob: -13.500153541564941
    5. ',' → logprob: -14.625153541564941
    6. '
' → logprob: -15.625153541564941
    7. '   ' → logprob: -15.750153541564941
    8. ']' → logprob: -16.125154495239258
    9. '```' → logprob: -17.125154495239258
    10. '  ' → logprob: -18.625154495239258

Token 697: ']
' (ID: 1592)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:
' → logprob: -1.1868740320205688
    2. ']' → logprob: -1.5618740320205688
    3. ',' → logprob: -1.8118740320205688
    4. 'for' → logprob: -2.0618739128112793
    5. ' for' → logprob: -2.1868739128112793
    6. ']:' → logprob: -2.6868739128112793
    7. '   ' → logprob: -5.311873912811279
    8. '):
' → logprob: -5.686873912811279
    9. '       ' → logprob: -6.311873912811279
    10. '1' → logprob: -6.561873912811279

Token 698: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2103731632232666
    2. ' for' → logprob: -1.7103731632232666
    3. '       ' → logprob: -4.9603729248046875
    4. '   ' → logprob: -6.3353729248046875
    5. '
' → logprob: -9.585372924804688
    6. '```' → logprob: -10.085372924804688
    7. '	for' → logprob: -11.460372924804688
    8. '        
' → logprob: -12.085372924804688
    9. '           ' → logprob: -13.335372924804688
    10. 'from' → logprob: -13.335372924804688

Token 699: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003225837368518114
    2. ' for' → logprob: -5.753225803375244
    3. '   ' → logprob: -10.503226280212402
    4. '       ' → logprob: -11.003226280212402
    5. 'from' → logprob: -12.503226280212402
    6. '
' → logprob: -15.128226280212402
    7. 'import' → logprob: -17.003225326538086
    8. '	for' → logprob: -17.003225326538086
    9. '```' → logprob: -18.003225326538086
    10. 'R' → logprob: -19.003225326538086

Token 700: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0031860284507274628
    2. ' R' → logprob: -5.753186225891113
    3. 'r' → logprob: -11.753186225891113
    4. '   ' → logprob: -15.128186225891113
    5. ' ' → logprob: -16.503185272216797
    6. '	R' → logprob: -17.378185272216797
    7. '  ' → logprob: -17.753185272216797
    8. ' r' → logprob: -18.753185272216797
    9. '_R' → logprob: -19.753185272216797
    10. '    ' → logprob: -20.003185272216797

Token 701: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04301038011908531
    2. 'in' → logprob: -3.1680104732513428
    3. '1' → logprob: -12.418010711669922
    4. ' ' → logprob: -13.293010711669922
    5. ',' → logprob: -13.668010711669922
    6. 'import' → logprob: -13.918010711669922
    7. 'i' → logprob: -14.043010711669922
    8. 'In' → logprob: -14.543010711669922
    9. ')' → logprob: -15.168010711669922
    10. '   ' → logprob: -15.168010711669922

Token 702: ' range' (ID: 3352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03305076062679291
    2. 'range' → logprob: -3.533050775527954
    3. ' range' → logprob: -6.033050537109375
    4. ' ' → logprob: -7.033050537109375
    5. '   ' → logprob: -11.158050537109375
    6. '  ' → logprob: -16.908050537109375
    7. '(range' → logprob: -16.908050537109375
    8. 'Range' → logprob: -17.158050537109375
    9. '    ' → logprob: -17.158050537109375
    10. '```' → logprob: -18.033050537109375

Token 703: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014175849966704845
    2. '(' → logprob: -4.264175891876221
    3. '   ' → logprob: -11.764175415039062
    4. ' ' → logprob: -12.639175415039062
    5. ',' → logprob: -13.639175415039062
    6. ' (' → logprob: -16.139175415039062
    7. '
' → logprob: -17.889175415039062
    8. '       ' → logprob: -18.014175415039062
    9. '(
' → logprob: -18.014175415039062
    10. '           ' → logprob: -18.264175415039062

Token 704: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.5
    4. '(' → logprob: -19.75
    5. '```' → logprob: -22.125
    6. ',' → logprob: -23.125
    7. '20' → logprob: -23.125
    8. '
' → logprob: -23.25
    9. '۱' → logprob: -23.25
    10. '１' → logprob: -24.125

Token 705: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020544764993246645
    2. ' ,' → logprob: -8.500205039978027
    3. '20' → logprob: -13.625205039978027
    4. ',
' → logprob: -14.375205039978027
    5. '1' → logprob: -17.250205993652344
    6. '   ' → logprob: -17.375205993652344
    7. '‌,' → logprob: -18.000205993652344
    8. ' ' → logprob: -18.250205993652344
    9. '```' → logprob: -18.500205993652344
    10. ',R' → logprob: -18.750205993652344

Token 706: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -3.4121114822482923e-06
    2. '20' → logprob: -12.875003814697266
    3. ' ' → logprob: -14.125003814697266
    4. '   ' → logprob: -16.375003814697266
    5. '  ' → logprob: -20.750003814697266
    6. '```' → logprob: -20.750003814697266
    7. '    ' → logprob: -20.875003814697266
    8. '1' → logprob: -21.250003814697266
    9. '2' → logprob: -21.250003814697266
    10. '=' → logprob: -21.750003814697266

Token 707: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: 0.0
    2. '20' → logprob: -18.125
    3. '1' → logprob: -22.75
    4. ' ' → logprob: -23.875
    5. '2' → logprob: -24.375
    6. '```' → logprob: -24.75
    7. '
' → logprob: -25.0
    8. '11' → logprob: -25.125
    9. '22' → logprob: -25.125
    10. '   ' → logprob: -25.375

Token 708: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01843939907848835
    2. '):' → logprob: -4.018439292907715
    3. ',' → logprob: -9.268439292907715
    4. '   ' → logprob: -9.268439292907715
    5. ':' → logprob: -9.768439292907715
    6. ':
' → logprob: -10.893439292907715
    7. '       ' → logprob: -11.018439292907715
    8. '):
' → logprob: -12.643439292907715
    9. '```' → logprob: -14.143439292907715
    10. '           ' → logprob: -14.268439292907715

Token 709: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022069355472922325
    2. '       ' → logprob: -4.272069454193115
    3. ' for' → logprob: -4.897069454193115
    4. '           ' → logprob: -8.272068977355957
    5. '	for' → logprob: -9.772068977355957
    6. 'for' → logprob: -9.772068977355957
    7. '   ' → logprob: -11.647068977355957
    8. ',' → logprob: -11.897068977355957
    9. ' ' → logprob: -12.022068977355957
    10. '```' → logprob: -12.397068977355957

Token 710: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15324722230434418
    2. '   ' → logprob: -2.153247117996216
    3. 'for' (adapté à ' for') → logprob: -3.653247117996216
    4. ' ' → logprob: -10.778246879577637
    5. '	for' → logprob: -10.778246879577637
    6. '       ' → logprob: -11.153246879577637
    7. '           ' → logprob: -11.403246879577637
    8. '               ' → logprob: -13.778246879577637
    9. ' C' → logprob: -15.028246879577637
    10. '   ' → logprob: -15.903246879577637

Token 711: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.003178071230649948
    2. ' C' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.378177642822266
    4. ' ' → logprob: -16.753177642822266
    5. 'S' → logprob: -17.878177642822266
    6. '1' → logprob: -18.128177642822266
    7. 'for' → logprob: -18.753177642822266
    8. '       ' → logprob: -18.878177642822266
    9. '	C' → logprob: -18.878177642822266
    10. 'c' → logprob: -19.628177642822266

Token 712: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023245595395565033
    2. 'in' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.648244857788086
    4. ',' → logprob: -17.398244857788086
    5. '   ' → logprob: -17.398244857788086
    6. 'In' → logprob: -19.023244857788086
    7. '1' → logprob: -19.023244857788086
    8. '```' → logprob: -19.023244857788086
    9. '	in' → logprob: -19.023244857788086
    10. '    ' → logprob: -19.523244857788086

Token 713: ' range' (ID: 3352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07913289219141006
    2. 'range' → logprob: -2.5791327953338623
    3. ' range' → logprob: -8.579133033752441
    4. ' ' → logprob: -9.829133033752441
    5. '   ' → logprob: -13.579133033752441
    6. '(' → logprob: -17.079132080078125
    7. '(range' → logprob: -18.204132080078125
    8. 'for' → logprob: -18.829132080078125
    9. '  ' → logprob: -19.579132080078125
    10. '
' → logprob: -19.579132080078125

Token 714: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2704976797103882
    2. '(' → logprob: -1.5204976797103882
    3. 'range' → logprob: -4.020497798919678
    4. '   ' → logprob: -8.39549732208252
    5. ' range' → logprob: -8.89549732208252
    6. ' ' → logprob: -9.89549732208252
    7. 'in' → logprob: -10.89549732208252
    8. ',' → logprob: -12.02049732208252
    9. '       ' → logprob: -12.39549732208252
    10. '           ' → logprob: -12.64549732208252

Token 715: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'range' → logprob: -15.625001907348633
    4. '   ' → logprob: -16.000001907348633
    5. 'for' → logprob: -16.875001907348633
    6. '
' → logprob: -17.500001907348633
    7. '```' → logprob: -17.687501907348633
    8. '(' → logprob: -18.250001907348633
    9. '21' → logprob: -19.062501907348633
    10. 'from' → logprob: -19.437501907348633

Token 716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.319370302458992e-06
    2. ' ,' → logprob: -13.000005722045898
    3. '   ' → logprob: -13.750005722045898
    4. '1' → logprob: -14.250005722045898
    5. '           ' → logprob: -14.750005722045898
    6. '20' → logprob: -15.500005722045898
    7. '(' → logprob: -15.625005722045898
    8. '       ' → logprob: -15.625005722045898
    9. ',
' → logprob: -16.0000057220459
    10. '               ' → logprob: -16.0000057220459

Token 717: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '   ' → logprob: -21.75
    4. '20' → logprob: -21.875
    5. '22' → logprob: -22.0
    6. '
' → logprob: -22.75
    7. '```' → logprob: -23.125
    8. '2' → logprob: -23.625
    9. 'for' → logprob: -23.875
    10. '021' → logprob: -24.625

Token 718: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. '20' → logprob: -20.375
    4. '   ' → logprob: -21.125
    5. 'for' → logprob: -22.25
    6. '22' → logprob: -23.375
    7. '```' → logprob: -23.5
    8. '
' → logprob: -24.0
    9. '2' → logprob: -24.125
    10. '021' → logprob: -24.75

Token 719: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012193855829536915
    2. '               ' → logprob: -4.51219367980957
    3. '):' → logprob: -6.88719367980957
    4. '           ' → logprob: -10.01219367980957
    5. ':
' → logprob: -10.38719367980957
    6. '                   ' → logprob: -11.01219367980957
    7. ':' → logprob: -12.26219367980957
    8. '       ' → logprob: -12.26219367980957
    9. '                       ' → logprob: -12.26219367980957
    10. '):
' → logprob: -12.63719367980957

Token 720: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.215330409351736e-05
    2. ' for' → logprob: -10.375041961669922
    3. 'for' → logprob: -11.875041961669922
    4. '                   ' → logprob: -13.125041961669922
    5. '	           ' → logprob: -14.625041961669922
    6. '		       ' → logprob: -15.125041961669922
    7. '```' → logprob: -15.125041961669922
    8. '             ' → logprob: -15.250041961669922
    9. '           ' → logprob: -15.375041961669922
    10. '       ' → logprob: -15.750041961669922

Token 721: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22589150071144104
    2. '                   ' → logprob: -1.7258914709091187
    3. ' for' → logprob: -3.725891590118408
    4. '   ' → logprob: -9.97589111328125
    5. '           ' → logprob: -11.10089111328125
    6. '               ' → logprob: -11.72589111328125
    7. '                       ' → logprob: -11.85089111328125
    8. '       ' → logprob: -12.10089111328125
    9. '                 ' → logprob: -13.22589111328125
    10. '	for' → logprob: -13.22589111328125

Token 722: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00010902655776590109
    2. ' S' → logprob: -9.12510871887207
    3. ' ' → logprob: -20.00010871887207
    4. '`' → logprob: -20.25010871887207
    5. '   ' → logprob: -20.87510871887207
    6. '	S' → logprob: -21.00010871887207
    7. '```' → logprob: -22.00010871887207
    8. '  ' → logprob: -22.25010871887207
    9. '
' → logprob: -22.50010871887207
    10. 'for' → logprob: -22.87510871887207

Token 723: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021867838222533464
    2. 'in' → logprob: -6.1271867752075195
    3. '	in' → logprob: -13.75218677520752
    4. 'In' → logprob: -15.00218677520752
    5. '                   ' → logprob: -16.377187728881836
    6. '_in' → logprob: -16.752187728881836
    7. '   ' → logprob: -16.877187728881836
    8. '1' → logprob: -17.127187728881836
    9. ' ' → logprob: -17.252187728881836
    10. '                               ' → logprob: -17.627187728881836

Token 724: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.607391408877447e-05
    2. ' range' → logprob: -10.250036239624023
    3. '1' → logprob: -14.250036239624023
    4. '(range' → logprob: -19.375036239624023
    5. ' ' → logprob: -20.125036239624023
    6. '   ' → logprob: -20.375036239624023
    7. '(' → logprob: -20.750036239624023
    8. '	range' → logprob: -22.000036239624023
    9. '
' → logprob: -23.125036239624023
    10. '[' → logprob: -23.250036239624023

Token 725: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06197351589798927
    2. '(' → logprob: -2.8119735717773438
    3. ' ' → logprob: -12.561973571777344
    4. '                   ' → logprob: -13.186973571777344
    5. '               ' → logprob: -15.311973571777344
    6. '   ' → logprob: -15.686973571777344
    7. ',' → logprob: -16.686973571777344
    8. '                       ' → logprob: -17.061973571777344
    9. ' (' → logprob: -17.186973571777344
    10. '           ' → logprob: -17.686973571777344

Token 726: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -19.5
    4. '(' → logprob: -20.125
    5. '```' → logprob: -21.375
    6. '
' → logprob: -21.625
    7. ',' → logprob: -22.25
    8. ')' → logprob: -22.375
    9. '0' → logprob: -22.875
    10. '           ' → logprob: -23.0

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026626069098711014
    2. '1' → logprob: -4.026626110076904
    3. '(' → logprob: -4.776626110076904
    4. ' ,' → logprob: -12.276625633239746
    5. '               ' → logprob: -12.651625633239746
    6. ' ' → logprob: -12.651625633239746
    7. '   ' → logprob: -13.026625633239746
    8. '                   ' → logprob: -13.276625633239746
    9. '           ' → logprob: -14.401625633239746
    10. '       ' → logprob: -16.401626586914062

Token 728: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '
' → logprob: -20.25
    4. '20' → logprob: -20.5
    5. '   ' → logprob: -20.625
    6. '```' → logprob: -21.0
    7. '22' → logprob: -21.75
    8. '1' → logprob: -22.0
    9. '2' → logprob: -22.875
    10. ')' → logprob: -23.0

Token 729: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '20' → logprob: -20.625
    4. '   ' → logprob: -20.625
    5. '```' → logprob: -21.5
    6. '
' → logprob: -21.625
    7. '           ' → logprob: -22.375
    8. '22' → logprob: -22.875
    9. '1' → logprob: -23.75
    10. '               ' → logprob: -23.875

Token 730: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6108501553535461
    2. '):
' → logprob: -0.8608501553535461
    3. '                   ' → logprob: -3.4858500957489014
    4. ':' → logprob: -5.9858503341674805
    5. '                       ' → logprob: -7.8608503341674805
    6. ':
' → logprob: -8.23585033416748
    7. '               ' → logprob: -8.36085033416748
    8. '                           ' → logprob: -9.23585033416748
    9. ')' → logprob: -9.86085033416748
    10. '           ' → logprob: -10.48585033416748

Token 731: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00017970333283301443
    2. '                       ' → logprob: -9.375179290771484
    3. '               ' → logprob: -9.875179290771484
    4. '           ' → logprob: -10.625179290771484
    5. '       ' → logprob: -12.750179290771484
    6. '                           ' → logprob: -12.875179290771484
    7. ' if' → logprob: -12.875179290771484
    8. '   ' → logprob: -13.000179290771484
    9. '                  ' → logprob: -13.500179290771484
    10. '```' → logprob: -13.750179290771484

Token 732: ' ok' (ID: 4763)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7792990803718567
    2. 'valid' → logprob: -0.9042990803718567
    3. '                       ' → logprob: -2.654299020767212
    4. ' valid' → logprob: -3.154299020767212
    5. '   ' → logprob: -4.404299259185791
    6. '       ' → logprob: -5.279299259185791
    7. '           ' → logprob: -6.279299259185791
    8. ' ok' → logprob: -6.279299259185791
    9. '               ' → logprob: -7.279299259185791
    10. 'ok' (adapté à ' ok') → logprob: -7.529299259185791

Token 733: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08163907378911972
    2. '=' → logprob: -2.581639051437378
    3. '                       ' → logprob: -6.456639289855957
    4. '                   ' → logprob: -7.456639289855957
    5. '=True' → logprob: -8.331639289855957
    6. '                    ' → logprob: -9.206639289855957
    7. '                        ' → logprob: -10.081639289855957
    8. '                               ' → logprob: -10.456639289855957
    9. '               ' → logprob: -10.581639289855957
    10. '=False' → logprob: -10.831639289855957

Token 734: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033558503491804004
    2. ' True' → logprob: -8.000335693359375
    3. '                   ' → logprob: -17.000335693359375
    4. '   ' → logprob: -17.250335693359375
    5. '           ' → logprob: -17.750335693359375
    6. '(True' → logprob: -18.625335693359375
    7. '               ' → logprob: -19.625335693359375
    8. '       ' → logprob: -20.250335693359375
    9. '                       ' → logprob: -20.625335693359375
    10. '=True' → logprob: -21.750335693359375

Token 735: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00021402664424385875
    2. 'for' → logprob: -9.750213623046875
    3. ' for' → logprob: -10.000213623046875
    4. '               ' → logprob: -10.250213623046875
    5. '           ' → logprob: -10.625213623046875
    6. '       ' → logprob: -11.625213623046875
    7. '<|end|>' → logprob: -11.625213623046875
    8. '                       ' → logprob: -11.750213623046875
    9. '   ' → logprob: -12.000213623046875
    10. '				' → logprob: -12.375213623046875

Token 736: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004947714623995125
    2. 'for' → logprob: -8.125494956970215
    3. ' for' → logprob: -9.875494956970215
    4. '		           ' → logprob: -10.000494956970215
    5. '               ' → logprob: -10.375494956970215
    6. '           ' → logprob: -11.000494956970215
    7. '```' → logprob: -11.125494956970215
    8. '				' → logprob: -11.500494956970215
    9. '                       ' → logprob: -12.000494956970215
    10. '       ' → logprob: -12.125494956970215

Token 737: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4028056263923645
    2. 'for' (adapté à ' for') → logprob: -1.1528055667877197
    3. ' for' → logprob: -4.152805805206299
    4. '               ' → logprob: -10.40280532836914
    5. '   ' → logprob: -11.52780532836914
    6. '           ' → logprob: -11.52780532836914
    7. '		           ' → logprob: -11.52780532836914
    8. '				' → logprob: -11.65280532836914
    9. '                       ' → logprob: -12.27780532836914
    10. '	for' → logprob: -12.40280532836914

Token 738: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47407856583595276
    2. ' i' → logprob: -0.9740785360336304
    3. '	i' → logprob: -14.599078178405762
    4. '   ' → logprob: -14.724078178405762
    5. '```' → logprob: -15.474078178405762
    6. '_i' → logprob: -16.474079132080078
    7. ' line' → logprob: -16.474079132080078
    8. ' ' → logprob: -16.724079132080078
    9. '                   ' → logprob: -16.724079132080078
    10. '`' → logprob: -17.349079132080078

Token 739: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009956412948668003
    2. 'in' → logprob: -4.884956359863281
    3. ' ' → logprob: -6.884956359863281
    4. '                    ' → logprob: -7.634956359863281
    5. '                   ' → logprob: -8.134956359863281
    6. '1' → logprob: -8.759956359863281
    7. ' =' → logprob: -9.634956359863281
    8. ',' → logprob: -9.759956359863281
    9. ' i' → logprob: -10.009956359863281
    10. '<|end|>' → logprob: -10.009956359863281

Token 740: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020915418863297
    2. ' range' → logprob: -2.3502092361450195
    3. '1' → logprob: -13.47520923614502
    4. '	range' → logprob: -14.35020923614502
    5. '(range' → logprob: -15.10020923614502
    6. ' ' → logprob: -16.600208282470703
    7. '   ' → logprob: -16.975208282470703
    8. ' in' → logprob: -17.100208282470703
    9. ' xrange' → logprob: -17.600208282470703
    10. 'in' → logprob: -18.225208282470703

Token 741: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. '                   ' → logprob: -11.000024795532227
    3. ' ' → logprob: -11.750024795532227
    4. '   ' → logprob: -16.000024795532227
    5. '(' → logprob: -16.375024795532227
    6. '                       ' → logprob: -16.375024795532227
    7. '2' → logprob: -16.625024795532227
    8. '                    ' → logprob: -17.625024795532227
    9. '               ' → logprob: -17.750024795532227
    10. '           ' → logprob: -17.875024795532227

Token 742: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -16.5
    4. '```' → logprob: -20.25
    5. '
' → logprob: -20.75
    6. '(' → logprob: -20.75
    7. '           ' → logprob: -20.875
    8. '    ' → logprob: -21.0
    9. '2' → logprob: -21.25
    10. '       ' → logprob: -21.375

Token 743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006752623594366014
    2. ',p' → logprob: -7.375675201416016
    3. ',len' → logprob: -10.250675201416016
    4. ' ,' → logprob: -11.500675201416016
    5. ',
' → logprob: -13.750675201416016
    6. '                   ' → logprob: -13.750675201416016
    7. ',length' → logprob: -15.125675201416016
    8. '                       ' → logprob: -15.875675201416016
    9. ',size' → logprob: -16.125675201416016
    10. '           ' → logprob: -16.125675201416016

Token 744: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1279553291387856e-05
    2. ' p' → logprob: -11.500011444091797
    3. 'len' → logprob: -13.875011444091797
    4. '                   ' → logprob: -16.500011444091797
    5. '               ' → logprob: -19.875011444091797
    6. '           ' → logprob: -20.000011444091797
    7. '   ' → logprob: -20.125011444091797
    8. '                       ' → logprob: -20.250011444091797
    9. ' len' → logprob: -21.125011444091797
    10. '<p' → logprob: -22.000011444091797

Token 745: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5308021903038025
    2. '                   ' → logprob: -1.5308022499084473
    3. '):' → logprob: -2.4058022499084473
    4. ':' → logprob: -3.0308022499084473
    5. '                       ' → logprob: -3.6558022499084473
    6. '```' → logprob: -4.655802249908447
    7. '               ' → logprob: -5.155802249908447
    8. ',' → logprob: -5.780802249908447
    9. ':
' → logprob: -5.780802249908447
    10. '       ' → logprob: -6.405802249908447

Token 746: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00038980069803074
    2. '                   ' → logprob: -8.12539005279541
    3. '                        ' → logprob: -10.37539005279541
    4. '                           ' → logprob: -11.12539005279541
    5. '           ' → logprob: -11.62539005279541
    6. '       ' → logprob: -11.87539005279541
    7. '                        
' → logprob: -12.00039005279541
    8. '               ' → logprob: -12.12539005279541
    9. '                      ' → logprob: -12.12539005279541
    10. '                    ' → logprob: -12.25039005279541

Token 747: ' expected' (ID: 5930)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05133030191063881
    2. 'diff' → logprob: -3.676330327987671
    3. ' if' → logprob: -4.801330089569092
    4. 'if' → logprob: -5.551330089569092
    5. ' diff' → logprob: -5.801330089569092
    6. ' expected' → logprob: -6.676330089569092
    7. ' val' → logprob: -6.676330089569092
    8. '                           ' → logprob: -6.676330089569092
    9. 'expected' (adapté à ' expected') → logprob: -6.801330089569092
    10. 'val' → logprob: -6.926330089569092

Token 748: ' =' (ID: 314)
  Prédit: '_indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indent' → logprob: -0.03210366144776344
    2. ' =' → logprob: -4.032103538513184
    3. '_ind' → logprob: -5.032103538513184
    4. '_' → logprob: -5.407103538513184
    5. 'indent' → logprob: -6.282103538513184
    6. '=' → logprob: -7.282103538513184
    7. ' indentation' → logprob: -9.407103538513184
    8. 'Indent' → logprob: -9.532103538513184
    9. ' indent' → logprob: -9.782103538513184
    10. '_space' → logprob: -11.157103538513184

Token 749: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.39503175020217896
    2. 'R' → logprob: -1.1450316905975342
    3. 'indent' → logprob: -5.270031929016113
    4. ' indent' → logprob: -6.145031929016113
    5. '                           ' → logprob: -8.020031929016113
    6. '   ' → logprob: -9.145031929016113
    7. '                            ' → logprob: -9.395031929016113
    8. '                       ' → logprob: -9.520031929016113
    9. '                        ' → logprob: -10.270031929016113
    10. '(R' → logprob: -10.270031929016113

Token 750: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1718398630619049
    2. ' *' → logprob: -2.421839952468872
    3. '*(' → logprob: -2.671839952468872
    4. '*((' → logprob: -13.546839714050293
    5. '**' → logprob: -14.796839714050293
    6. '*i' → logprob: -15.296839714050293
    7. '   ' → logprob: -15.296839714050293
    8. '*object' → logprob: -15.921839714050293
    9. '*out' → logprob: -16.04684066772461
    10. '                   ' → logprob: -16.29684066772461

Token 751: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.00016110755677800626
    2. '(ro' → logprob: -8.750161170959473
    3. ' ro' → logprob: -12.875161170959473
    4. ' (' → logprob: -18.500160217285156
    5. '_ro' → logprob: -19.250160217285156
    6. '   ' → logprob: -19.875160217285156
    7. '(' → logprob: -20.125160217285156
    8. ' ' → logprob: -21.875160217285156
    9. '  ' → logprob: -22.000160217285156
    10. 'rop' → logprob: -22.125160217285156

Token 752: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.6166903151315637e-05
    2. 'c' → logprob: -11.250016212463379
    3. 'i' → logprob: -13.000016212463379
    4. 'cum' → logprob: -15.125016212463379
    5. '[i' → logprob: -15.375016212463379
    6. '
' → logprob: -16.500015258789062
    7. '```' → logprob: -16.750015258789062
    8. '_i' → logprob: -17.250015258789062
    9. '[' → logprob: -18.000015258789062
    10. 's' → logprob: -18.250015258789062

Token 753: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.04961780458688736
    2. 'cum' → logprob: -3.4246177673339844
    3. '_c' → logprob: -4.174617767333984
    4. 'c' → logprob: -8.049617767333984
    5. 'u' → logprob: -10.299617767333984
    6. 'uml' → logprob: -10.799617767333984
    7. 'm' → logprob: -11.049617767333984
    8. 'umul' → logprob: -11.424617767333984
    9. 'i' → logprob: -11.549617767333984
    10. 'umulative' → logprob: -11.674617767333984

Token 754: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4391956685576588e-05
    2. 'i' → logprob: -10.625024795532227
    3. ' i' → logprob: -17.250024795532227
    4. '[-' → logprob: -17.375024795532227
    5. '[' → logprob: -18.500024795532227
    6. '
' → logprob: -19.250024795532227
    7. '```' → logprob: -19.500024795532227
    8. '{i' → logprob: -20.500024795532227
    9. ' [' → logprob: -20.750024795532227
    10. '[idx' → logprob: -20.875024795532227

Token 755: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014633395709097385
    2. '-' → logprob: -5.0146331787109375
    3. ']-' → logprob: -5.0146331787109375
    4. ' -' → logprob: -7.7646331787109375
    5. '[i' → logprob: -7.8896331787109375
    6. '[-' → logprob: -8.014633178710938
    7. '[' → logprob: -10.014633178710938
    8. ')' → logprob: -10.639633178710938
    9. '][-' → logprob: -11.139633178710938
    10. 'i' → logprob: -11.264633178710938

Token 756: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38767921924591064
    2. ' -' → logprob: -1.1376792192459106
    3. '[-' → logprob: -7.387679100036621
    4. '[i' → logprob: -9.262679100036621
    5. ')' → logprob: -10.137679100036621
    6. '[' → logprob: -10.512679100036621
    7. '-
' → logprob: -11.762679100036621
    8. '-i' → logprob: -12.762679100036621
    9. '-)' → logprob: -12.762679100036621
    10. ' ' → logprob: -12.887679100036621

Token 757: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -1.5048530030981055e-06
    2. ' rc' → logprob: -13.500001907348633
    3. '	rc' → logprob: -18.125001907348633
    4. ' ' → logprob: -18.750001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '(rc' → logprob: -18.875001907348633
    7. '  ' → logprob: -19.375001907348633
    8. '_rc' → logprob: -19.750001907348633
    9. 'RC' → logprob: -20.500001907348633
    10. 'Rc' → logprob: -20.875001907348633

Token 758: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1279553291387856e-05
    2. 'c' → logprob: -11.500011444091797
    3. 'i' → logprob: -14.875011444091797
    4. 'cum' → logprob: -15.000011444091797
    5. '[i' → logprob: -16.250011444091797
    6. '[' → logprob: -16.250011444091797
    7. '```' → logprob: -16.750011444091797
    8. '-c' → logprob: -16.750011444091797
    9. '_i' → logprob: -17.625011444091797
    10. 'um' → logprob: -17.750011444091797

Token 759: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00016957100888248533
    2. 'cum' → logprob: -9.00016975402832
    3. 'c' → logprob: -10.50016975402832
    4. '[' → logprob: -11.50016975402832
    5. '_c' → logprob: -13.25016975402832
    6. 'Cum' → logprob: -13.25016975402832
    7. 'ut' → logprob: -14.25016975402832
    8. 'uc' → logprob: -14.37516975402832
    9. 'm' → logprob: -14.50016975402832
    10. 'uml' → logprob: -14.62516975402832

Token 760: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -14.750000953674316
    3. '[-' → logprob: -16.5
    4. '[' → logprob: -18.625
    5. '(i' → logprob: -19.125
    6. '{i' → logprob: -19.25
    7. 'c' → logprob: -20.25
    8. ')[' → logprob: -20.25
    9. '```' → logprob: -20.25
    10. ' [' → logprob: -20.75

Token 761: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.011722922325134277
    2. ')' → logprob: -4.511723041534424
    3. '                   ' → logprob: -8.136722564697266
    4. '])+' → logprob: -8.761722564697266
    5. '[i' → logprob: -9.011722564697266
    6. '                       ' → logprob: -10.386722564697266
    7. ']' → logprob: -11.011722564697266
    8. '])
' → logprob: -11.511722564697266
    9. '               ' → logprob: -11.636722564697266
    10. '```' → logprob: -12.011722564697266

Token 762: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5310899019241333
    2. '-' → logprob: -1.0310899019241333
    3. '                       ' → logprob: -4.531089782714844
    4. '+' → logprob: -5.031089782714844
    5. '                   ' → logprob: -5.281089782714844
    6. '                               ' → logprob: -5.406089782714844
    7. '                    ' → logprob: -5.531089782714844
    8. '                              ' → logprob: -5.531089782714844
    9. ' +' → logprob: -5.781089782714844
    10. '                        ' → logprob: -5.906089782714844

Token 763: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005586316110566258
    2. ' C' → logprob: -7.500558853149414
    3. '                           ' → logprob: -13.625558853149414
    4. '                                   ' → logprob: -13.625558853149414
    5. '                                           ' → logprob: -13.750558853149414
    6. '                   ' → logprob: -14.000558853149414
    7. '                               ' → logprob: -14.375558853149414
    8. '                                       ' → logprob: -15.000558853149414
    9. '   ' → logprob: -16.125558853149414
    10. '                       ' → logprob: -16.375558853149414

Token 764: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0015085549093782902
    2. '*' → logprob: -6.501508712768555
    3. '(co' → logprob: -12.126508712768555
    4. '*((' → logprob: -14.251508712768555
    5. ' *' → logprob: -16.001508712768555
    6. ' *(' → logprob: -18.376508712768555
    7. '(*' → logprob: -18.751508712768555
    8. '*(-' → logprob: -18.751508712768555
    9. '```' → logprob: -19.001508712768555
    10. '**' → logprob: -19.126508712768555

Token 765: 'co' (ID: 1191)
  Prédit: 'co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.10021820664405823
    2. '(co' → logprob: -2.3502182960510254
    3. '(' → logprob: -11.600217819213867
    4. ' co' → logprob: -12.975217819213867
    5. 'so' → logprob: -16.975217819213867
    6. ' (' → logprob: -17.225217819213867
    7. '_co' → logprob: -18.225217819213867
    8. 'Co' → logprob: -18.225217819213867
    9. '```' → logprob: -18.350217819213867
    10. '/co' → logprob: -18.475217819213867

Token 766: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -16.125
    3. 'cum' → logprob: -16.125
    4. '_co' → logprob: -16.625
    5. 'c' → logprob: -17.125
    6. '```' → logprob: -17.5
    7. '[i' → logprob: -18.5
    8. '_cc' → logprob: -18.75
    9. '[-' → logprob: -19.375
    10. 'co' → logprob: -19.375

Token 767: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.02735348977148533
    2. 'um' → logprob: -4.527353286743164
    3. 'cum' → logprob: -4.527353286743164
    4. 'c' → logprob: -5.402353286743164
    5. 'cc' → logprob: -7.777353286743164
    6. 'uc' → logprob: -8.277353286743164
    7. '_cc' → logprob: -9.027353286743164
    8. '[' → logprob: -11.027353286743164
    9. 'Cum' → logprob: -11.277353286743164
    10. '[i' → logprob: -11.652353286743164

Token 768: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.60414821645827e-06
    2. '[-' → logprob: -13.000004768371582
    3. '[' → logprob: -13.875004768371582
    4. 'i' → logprob: -14.250004768371582
    5. '```' → logprob: -15.125004768371582
    6. '(i' → logprob: -15.250004768371582
    7. 'cc' → logprob: -16.875003814697266
    8. 'c' → logprob: -17.125003814697266
    9. '[
' → logprob: -18.125003814697266
    10. '{i' → logprob: -18.500003814697266

Token 769: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10366298258304596
    2. '-' → logprob: -2.3536629676818848
    3. ' -' → logprob: -6.103662967681885
    4. '[' → logprob: -7.478662967681885
    5. ']' → logprob: -7.603662967681885
    6. ')' → logprob: -10.353663444519043
    7. '][' → logprob: -10.478663444519043
    8. '[-' → logprob: -10.853663444519043
    9. '```' → logprob: -10.978663444519043
    10. ']-' → logprob: -11.103663444519043

Token 770: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.318681188422488e-05
    2. 'i' → logprob: -11.62501335144043
    3. '[' → logprob: -13.25001335144043
    4. '-' → logprob: -13.25001335144043
    5. '(i' → logprob: -14.87501335144043
    6. ' i' → logprob: -16.00001335144043
    7. ' -' → logprob: -16.50001335144043
    8. '{i' → logprob: -16.75001335144043
    9. '```' → logprob: -16.87501335144043
    10. '[-' → logprob: -17.62501335144043

Token 771: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -8.017927029868588e-05
    2. ' cc' → logprob: -9.500080108642578
    3. 'co' → logprob: -12.625080108642578
    4. '(cc' → logprob: -14.250080108642578
    5. '	cc' → logprob: -14.750080108642578
    6. '```' → logprob: -14.875080108642578
    7. 'i' → logprob: -16.000080108642578
    8. ' ' → logprob: -16.250080108642578
    9. '   ' → logprob: -16.500080108642578
    10. 'cco' → logprob: -16.500080108642578

Token 772: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0004123192047700286
    2. '[i' → logprob: -7.875412464141846
    3. 'c' → logprob: -10.625411987304688
    4. 'i' → logprob: -12.375411987304688
    5. 'cum' → logprob: -13.500411987304688
    6. '[' → logprob: -13.750411987304688
    7. '```' → logprob: -14.625411987304688
    8. '_i' → logprob: -15.000411987304688
    9. 'cc' → logprob: -16.000411987304688
    10. 'sc' → logprob: -16.500411987304688

Token 773: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.09772168844938278
    2. 'cum' → logprob: -3.347721576690674
    3. 'c' → logprob: -3.597721576690674
    4. 'um' → logprob: -3.722721576690674
    5. '[i' → logprob: -5.597721576690674
    6. 'i' → logprob: -6.597721576690674
    7. 'uc' → logprob: -7.097721576690674
    8. 'cc' → logprob: -8.847722053527832
    9. '[' → logprob: -8.847722053527832
    10. 'Cum' → logprob: -9.722722053527832

Token 774: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. 'i' → logprob: -13.500001907348633
    3. '```' → logprob: -14.750001907348633
    4. '[' → logprob: -15.375001907348633
    5. 'c' → logprob: -16.750001907348633
    6. ')[' → logprob: -18.875001907348633
    7. '(i' → logprob: -19.000001907348633
    8. '[j' → logprob: -19.500001907348633
    9. ')' → logprob: -19.750001907348633
    10. '[c' → logprob: -20.000001907348633

Token 775: '])' (ID: 4636)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005127257667481899
    2. ')' → logprob: -5.380127429962158
    3. ']' → logprob: -8.255126953125
    4. '                   ' → logprob: -9.130126953125
    5. '[' → logprob: -9.630126953125
    6. '])' → logprob: -10.130126953125
    7. '```' → logprob: -11.005126953125
    8. '[j' → logprob: -12.755126953125
    9. '][' → logprob: -13.005126953125
    10. ')[' → logprob: -13.380126953125

Token 776: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5762396454811096
    2. ' +' → logprob: -0.8262396454811096
    3. '```' → logprob: -9.076239585876465
    4. '+(' → logprob: -10.201239585876465
    5. '                   ' → logprob: -10.326239585876465
    6. '                       ' → logprob: -10.701239585876465
    7. '                    ' → logprob: -11.201239585876465
    8. '                     ' → logprob: -11.451239585876465
    9. '                               ' → logprob: -11.701239585876465
    10. '                      ' → logprob: -11.826239585876465

Token 777: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00029637437546625733
    2. ' S' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.000295639038086
    4. '                   ' → logprob: -16.625295639038086
    5. ' ' → logprob: -17.125295639038086
    6. '           ' → logprob: -17.875295639038086
    7. '       ' → logprob: -18.125295639038086
    8. '```' → logprob: -18.500295639038086
    9. '  ' → logprob: -18.625295639038086
    10. '               ' → logprob: -18.875295639038086

Token 778: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0008059371029958129
    2. '*' → logprob: -7.125805854797363
    3. '*((' → logprob: -14.250805854797363
    4. ' *' → logprob: -14.375805854797363
    5. '(' → logprob: -15.500805854797363
    6. '*[' → logprob: -16.75080680847168
    7. ' *(' → logprob: -17.00080680847168
    8. '(s' → logprob: -17.75080680847168
    9. ']*(' → logprob: -18.00080680847168
    10. '(*' → logprob: -18.12580680847168

Token 779: 'so' (ID: 786)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759427547454834
    2. 'so' → logprob: -0.8259427547454834
    3. '_so' → logprob: -13.825942993164062
    4. ' (' → logprob: -13.950942993164062
    5. ' so' → logprob: -14.325942993164062
    6. '-so' → logprob: -15.325942993164062
    7. '
' → logprob: -15.700942993164062
    8. 'SO' → logprob: -16.450942993164062
    9. '[' → logprob: -16.575942993164062
    10. '   ' → logprob: -16.825942993164062

Token 780: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.8889261304575484e-06
    2. 'cum' → logprob: -13.375003814697266
    3. 'c' → logprob: -13.750003814697266
    4. '[i' → logprob: -15.125003814697266
    5. 'sc' → logprob: -15.125003814697266
    6. '-c' → logprob: -15.750003814697266
    7. 'so' → logprob: -15.750003814697266
    8. '[' → logprob: -15.875003814697266
    9. 'i' → logprob: -17.500003814697266
    10. '```' → logprob: -17.500003814697266

Token 781: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0016663733404129744
    2. 'cum' → logprob: -6.75166654586792
    3. 'c' → logprob: -8.251666069030762
    4. 'sc' → logprob: -8.626666069030762
    5. 'um' → logprob: -11.001666069030762
    6. '[i' → logprob: -11.876666069030762
    7. 'Cum' → logprob: -12.001666069030762
    8. '-c' → logprob: -12.251666069030762
    9. 'uc' → logprob: -12.501666069030762
    10. '[' → logprob: -12.751666069030762

Token 782: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.306760805164231e-05
    2. 'i' → logprob: -11.25001335144043
    3. '[' → logprob: -18.37501335144043
    4. '(i' → logprob: -18.62501335144043
    5. '{i' → logprob: -19.00001335144043
    6. ' i' → logprob: -19.87501335144043
    7. '
' → logprob: -20.25001335144043
    8. '```' → logprob: -20.37501335144043
    9. '[-' → logprob: -21.25001335144043
    10. '   ' → logprob: -21.25001335144043

Token 783: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0021924946922808886
    2. ']' → logprob: -6.252192497253418
    3. 'i' → logprob: -8.627192497253418
    4. '-' → logprob: -10.127192497253418
    5. ')' → logprob: -11.002192497253418
    6. '[' → logprob: -11.502192497253418
    7. '][' → logprob: -11.502192497253418
    8. '(i' → logprob: -12.252192497253418
    9. '```' → logprob: -14.127192497253418
    10. '   ' → logprob: -14.627192497253418

Token 784: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018379252403974533
    2. '-' → logprob: -4.018379211425781
    3. 'i' → logprob: -9.143379211425781
    4. '[' → logprob: -9.393379211425781
    5. ' -' → logprob: -10.768379211425781
    6. '[-' → logprob: -11.768379211425781
    7. '-i' → logprob: -12.268379211425781
    8. '```' → logprob: -13.018379211425781
    9. '(i' → logprob: -13.643379211425781
    10. ']' → logprob: -14.393379211425781

Token 785: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.0007796077989041805
    2. '[i' → logprob: -7.875779628753662
    3. 'i' → logprob: -8.250779151916504
    4. 'c' → logprob: -9.125779151916504
    5. ' sc' → logprob: -11.500779151916504
    6. 'cum' → logprob: -11.875779151916504
    7. '_c' → logprob: -12.875779151916504
    8. '_sc' → logprob: -13.125779151916504
    9. '(sc' → logprob: -13.250779151916504
    10. '(i' → logprob: -13.250779151916504

Token 786: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.001505578518845141
    2. '[i' → logprob: -6.501505374908447
    3. 'c' → logprob: -13.501505851745605
    4. '[' → logprob: -14.001505851745605
    5. '_i' → logprob: -14.626505851745605
    6. 'i' → logprob: -15.126505851745605
    7. '```' → logprob: -15.876505851745605
    8. '_[' → logprob: -16.75150489807129
    9. 'cum' → logprob: -17.12650489807129
    10. '-c' → logprob: -18.25150489807129

Token 787: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.035011813044548035
    2. '[i' → logprob: -3.4100117683410645
    3. 'cum' → logprob: -7.4100117683410645
    4. 'i' → logprob: -7.9100117683410645
    5. '[' → logprob: -8.535012245178223
    6. '_c' → logprob: -9.160012245178223
    7. 'c' → logprob: -10.285012245178223
    8. '_um' → logprob: -11.535012245178223
    9. 'uml' → logprob: -11.660012245178223
    10. '   ' → logprob: -11.660012245178223

Token 788: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00029744720086455345
    2. 'i' → logprob: -8.125297546386719
    3. '[' → logprob: -14.125297546386719
    4. 'c' → logprob: -15.500297546386719
    5. ')' → logprob: -16.25029754638672
    6. ']' → logprob: -16.37529754638672
    7. '_i' → logprob: -16.75029754638672
    8. ' [' → logprob: -16.87529754638672
    9. '{i' → logprob: -16.87529754638672
    10. '][' → logprob: -17.00029754638672

Token 789: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017478883964940906
    2. '                   ' → logprob: -7.501748085021973
    3. ')
' → logprob: -7.876748085021973
    4. '):
' → logprob: -7.876748085021973
    5. '])' → logprob: -8.501748085021973
    6. '                       ' → logprob: -9.251748085021973
    7. ')]' → logprob: -9.876748085021973
    8. ']' → logprob: -11.251748085021973
    9. ' )' → logprob: -11.626748085021973
    10. '<|end|>' → logprob: -11.876748085021973

Token 790: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05364146828651428
    2. '                   ' → logprob: -3.1786415576934814
    3. '<|end|>' → logprob: -4.803641319274902
    4. '               ' → logprob: -7.553641319274902
    5. '```' → logprob: -7.928641319274902
    6. '<|end|>' → logprob: -8.053641319274902
    7. '           ' → logprob: -8.178641319274902
    8. '                        
' → logprob: -8.428641319274902
    9. '                           ' → logprob: -8.678641319274902
    10. '       ' → logprob: -9.428641319274902

Token 791: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4352422058582306
    2. 'if' (adapté à ' if') → logprob: -1.8102421760559082
    3. ' if' → logprob: -1.8102421760559082
    4. '                   ' → logprob: -3.685242176055908
    5. '	                   ' → logprob: -9.185242652893066
    6. 'If' → logprob: -9.685242652893066
    7. '           ' → logprob: -9.685242652893066
    8. '               ' → logprob: -9.935242652893066
    9. '			           ' → logprob: -10.060242652893066
    10. '   ' → logprob: -10.185242652893066

Token 792: ' indent' (ID: 37655)
  Prédit: ' indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indent' → logprob: -0.8168891072273254
    2. 'indent' → logprob: -1.3168890476226807
    3. 'expected' → logprob: -1.8168890476226807
    4. ' expected' → logprob: -2.0668890476226807
    5. '                       ' → logprob: -7.31688928604126
    6. 'ind' → logprob: -8.941888809204102
    7. '                   ' → logprob: -9.191888809204102
    8. 'expect' → logprob: -9.941888809204102
    9. '(indent' → logprob: -10.066888809204102
    10. ' ind' → logprob: -10.566888809204102

Token 793: '_levels' (ID: 96899)
  Prédit: '_levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -7.896309739408025e-07
    2. '                   ' → logprob: -15.375000953674316
    3. 'levels' → logprob: -15.375000953674316
    4. '                       ' → logprob: -15.750000953674316
    5. '[i' → logprob: -16.125
    6. 'Levels' → logprob: -17.875
    7. '```' → logprob: -18.875
    8. '                    ' → logprob: -19.0
    9. ' levels' → logprob: -19.125
    10. '[' → logprob: -19.25

Token 794: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '                   ' → logprob: -13.62500286102295
    3. '                       ' → logprob: -14.25000286102295
    4. '[' → logprob: -15.12500286102295
    5. ' [' → logprob: -15.75000286102295
    6. '```' → logprob: -16.125001907348633
    7. '                           ' → logprob: -16.250001907348633
    8. '[int' → logprob: -16.625001907348633
    9. ')[' → logprob: -17.000001907348633
    10. '[j' → logprob: -17.625001907348633

Token 795: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.9810596108436584
    2. ' !=' → logprob: -1.1060595512390137
    3. ']!=' → logprob: -1.7310595512390137
    4. ']' → logprob: -2.2310595512390137
    5. ')!=' → logprob: -4.856059551239014
    6. ')' → logprob: -7.106059551239014
    7. '                       ' → logprob: -8.106060028076172
    8. '                           ' → logprob: -8.481060028076172
    9. '```' → logprob: -8.731060028076172
    10. '()!=' → logprob: -9.106060028076172

Token 796: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10056355595588684
    2. '!=' → logprob: -2.3505635261535645
    3. '                           ' → logprob: -8.475564002990723
    4. '                       ' → logprob: -9.350564002990723
    5. ')!=' → logprob: -10.850564002990723
    6. '                               ' → logprob: -11.600564002990723
    7. '!==' → logprob: -12.225564002990723
    8. '[' → logprob: -12.225564002990723
    9. ']!=' → logprob: -12.475564002990723
    10. '```' → logprob: -12.600564002990723

Token 797: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.00861456897109747
    2. ' expected' → logprob: -4.758614540100098
    3. '                       ' → logprob: -17.383615493774414
    4. '                   ' → logprob: -17.758615493774414
    5. '(expected' → logprob: -17.883615493774414
    6. '
' → logprob: -18.758615493774414
    7. '	expected' → logprob: -18.883615493774414
    8. '_expected' → logprob: -20.008615493774414
    9. '```' → logprob: -20.008615493774414
    10. 'Expected' → logprob: -20.133615493774414

Token 798: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7889536023139954
    2. ':' → logprob: -1.1639535427093506
    3. ':
' → logprob: -1.5389535427093506
    4. '                       ' → logprob: -4.03895378112793
    5. '                               ' → logprob: -7.28895378112793
    6. '           ' → logprob: -8.91395378112793
    7. '                   ' → logprob: -9.66395378112793
    8. '                          ' → logprob: -10.16395378112793
    9. '):
' → logprob: -10.16395378112793
    10. '<|end|>' → logprob: -10.16395378112793

Token 799: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.019671570509672165
    2. '                       ' → logprob: -4.019671440124512
    3. '                               ' → logprob: -6.769671440124512
    4. '                   ' → logprob: -9.394671440124512
    5. '           ' → logprob: -9.519671440124512
    6. 'ok' → logprob: -9.894671440124512
    7. ' ok' → logprob: -10.519671440124512
    8. 'break' → logprob: -10.644671440124512
    9. '                        
' → logprob: -11.144671440124512
    10. '                                   ' → logprob: -11.144671440124512

Token 800: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.002512166043743491
    2. '                           ' → logprob: -6.377511978149414
    3. '                               ' → logprob: -7.377511978149414
    4. '                       ' → logprob: -9.002511978149414
    5. ' ok' → logprob: -10.502511978149414
    6. 'break' → logprob: -10.752511978149414
    7. '	ok' → logprob: -12.752511978149414
    8. '                                   ' → logprob: -13.002511978149414
    9. '
' → logprob: -13.377511978149414
    10. '```' → logprob: -14.252511978149414

Token 801: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01486009731888771
    2. ' =' → logprob: -4.264860153198242
    3. '=False' → logprob: -7.389860153198242
    4. '=True' → logprob: -10.014860153198242
    5. '                               ' → logprob: -10.639860153198242
    6. '                           ' → logprob: -11.889860153198242
    7. '                                   ' → logprob: -13.514860153198242
    8. '=false' → logprob: -14.389860153198242
    9. '                       ' → logprob: -15.264860153198242
    10. '                              ' → logprob: -15.764860153198242

Token 802: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0015029559144750237
    2. ' False' → logprob: -6.501502990722656
    3. 'break' → logprob: -14.251502990722656
    4. '(False' → logprob: -19.251502990722656
    5. '=False' → logprob: -20.001502990722656
    6. 'True' → logprob: -20.126502990722656
    7. ' break' → logprob: -20.501502990722656
    8. 'false' → logprob: -20.501502990722656
    9. '_false' → logprob: -21.751502990722656
    10. 'F' → logprob: -21.751502990722656

Token 803: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0005348019185476005
    2. '                               ' → logprob: -7.625535011291504
    3. '                            ' → logprob: -11.375535011291504
    4. '                       ' → logprob: -11.625535011291504
    5. '                                   ' → logprob: -11.750535011291504
    6. '                            
' → logprob: -12.375535011291504
    7. '						' → logprob: -12.500535011291504
    8. '           ' → logprob: -13.125535011291504
    9. '                             ' → logprob: -13.125535011291504
    10. '<|end|>' → logprob: -13.500535011291504

Token 804: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.000386701402021572
    2. '                               ' → logprob: -8.000386238098145
    3. '                       ' → logprob: -11.500386238098145
    4. '                            
' → logprob: -11.750386238098145
    5. '                            ' → logprob: -12.000386238098145
    6. '                                   ' → logprob: -12.125386238098145
    7. '           ' → logprob: -12.250386238098145
    8. '<|end|>' → logprob: -12.500386238098145
    9. '                             ' → logprob: -12.625386238098145
    10. '```' → logprob: -12.875386238098145

Token 805: ' break' (ID: 2338)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.26357170939445496
    2. 'break' (adapté à ' break') → logprob: -1.5135717391967773
    3. '                               ' → logprob: -4.513571739196777
    4. ' break' → logprob: -8.263571739196777
    5. '                       ' → logprob: -9.263571739196777
    6. '                                   ' → logprob: -9.388571739196777
    7. '                            ' → logprob: -9.638571739196777
    8. '                             ' → logprob: -9.888571739196777
    9. '                   ' → logprob: -10.888571739196777
    10. '                            
' → logprob: -11.638571739196777

Token 806: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00702568469569087
    2. '                       ' → logprob: -6.132025718688965
    3. '               ' → logprob: -6.257025718688965
    4. '```' → logprob: -6.882025718688965
    5. '           ' → logprob: -7.382025718688965
    6. '<|end|>' → logprob: -7.632025718688965
    7. '                           ' → logprob: -7.882025718688965
    8. '       ' → logprob: -9.507025718688965
    9. '   ' → logprob: -9.632025718688965
    10. '                  ' → logprob: -10.507025718688965

Token 807: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021924277767539024
    2. '               ' → logprob: -4.7719244956970215
    3. '```' → logprob: -4.8969244956970215
    4. '                       ' → logprob: -5.8969244956970215
    5. '           ' → logprob: -6.5219244956970215
    6. '       ' → logprob: -7.7719244956970215
    7. '                           ' → logprob: -7.8969244956970215
    8. '<|end|>' → logprob: -8.271924018859863
    9. '   ' → logprob: -9.521924018859863
    10. '                  ' → logprob: -9.771924018859863

Token 808: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029745979234576225
    2. 'if' (adapté à ' if') → logprob: -4.029746055603027
    3. '               ' → logprob: -5.154746055603027
    4. '       ' → logprob: -6.154746055603027
    5. '           ' → logprob: -6.279746055603027
    6. '   ' → logprob: -7.029746055603027
    7. ' if' → logprob: -8.154746055603027
    8. '                       ' → logprob: -8.654746055603027
    9. '```' → logprob: -8.779746055603027
    10. 'If' → logprob: -9.654746055603027

Token 809: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.07889022678136826
    2. 'ok' → logprob: -2.578890323638916
    3. ' not' → logprob: -15.578889846801758
    4. ' okay' → logprob: -15.953889846801758
    5. '	ok' → logprob: -16.328889846801758
    6. 'not' → logprob: -16.453889846801758
    7. '   ' → logprob: -16.828889846801758
    8. 'Ok' → logprob: -18.203889846801758
    9. '    ' → logprob: -18.203889846801758
    10. ' ' → logprob: -18.328889846801758

Token 810: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1847865879535675
    2. ':' → logprob: -1.8097865581512451
    3. ':
' → logprob: -5.809786796569824
    4. '                   ' → logprob: -6.934786796569824
    5. '                           ' → logprob: -7.309786796569824
    6. '                               ' → logprob: -9.309786796569824
    7. '                      ' → logprob: -10.059786796569824
    8. '                        
' → logprob: -10.059786796569824
    9. '               ' → logprob: -10.184786796569824
    10. ',' → logprob: -10.184786796569824

Token 811: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001275949995033443
    2. '                   ' → logprob: -6.751276016235352
    3. ' candidates' → logprob: -9.751276016235352
    4. '                           ' → logprob: -11.126276016235352
    5. 'c' → logprob: -12.001276016235352
    6. '	                   ' → logprob: -12.001276016235352
    7. '                      ' → logprob: -12.751276016235352
    8. '               ' → logprob: -13.126276016235352
    9. '                    ' → logprob: -13.126276016235352
    10. '                     ' → logprob: -13.376276016235352

Token 812: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05974294990301132
    2. ' candidates' → logprob: -3.0597429275512695
    3. '                       ' → logprob: -4.5597429275512695
    4. '                           ' → logprob: -8.18474292755127
    5. '   ' → logprob: -8.68474292755127
    6. '                   ' → logprob: -9.18474292755127
    7. ' c' → logprob: -10.05974292755127
    8. '           ' → logprob: -11.55974292755127
    9. '                               ' → logprob: -12.30974292755127
    10. '       ' → logprob: -12.43474292755127

Token 813: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.380904672667384e-05
    2. '.' → logprob: -10.375033378601074
    3. ' .' → logprob: -13.625033378601074
    4. '.app' → logprob: -14.750033378601074
    5. '.add' → logprob: -15.625033378601074
    6. 'append' → logprob: -15.625033378601074
    7. '.Append' → logprob: -15.875033378601074
    8. '.extend' → logprob: -16.25003433227539
    9. '.setdefault' → logprob: -16.25003433227539
    10. '.push' → logprob: -16.87503433227539

Token 814: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00020616286201402545
    2. '(' → logprob: -8.500205993652344
    3. '(R' → logprob: -12.875205993652344
    4. '   ' → logprob: -16.375205993652344
    5. '[(' → logprob: -18.875205993652344
    6. ' (' → logprob: -20.000205993652344
    7. '([' → logprob: -20.000205993652344
    8. '```' → logprob: -20.250205993652344
    9. '(
' → logprob: -20.500205993652344
    10. '	' → logprob: -20.750205993652344

Token 815: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -3.128163257315464e-07
    2. ' R' → logprob: -15.375
    3. '   ' → logprob: -20.25
    4. '	R' → logprob: -22.75
    5. '(R' → logprob: -23.0
    6. ' ' → logprob: -24.125
    7. ',R' → logprob: -24.25
    8. '[R' → logprob: -24.375
    9. 'r' → logprob: -25.0
    10. '_R' → logprob: -25.25

Token 816: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03809530660510063
    2. ',C' → logprob: -3.288095235824585
    3. ' ,' → logprob: -10.163095474243164
    4. ',
' → logprob: -11.413095474243164
    5. ',c' → logprob: -13.288095474243164
    6. ',R' → logprob: -14.538095474243164
    7. ',S' → logprob: -14.788095474243164
    8. ')' → logprob: -15.663095474243164
    9. ',

' → logprob: -16.038095474243164
    10. ',B' → logprob: -16.038095474243164

Token 817: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.7432603272027336e-06
    2. ' C' → logprob: -13.375001907348633
    3. ',C' → logprob: -16.500001907348633
    4. '   ' → logprob: -18.000001907348633
    5. ',' → logprob: -19.000001907348633
    6. 'c' → logprob: -20.125001907348633
    7. '
' → logprob: -21.000001907348633
    8. 'S' → logprob: -21.250001907348633
    9. '"C' → logprob: -21.375001907348633
    10. '	C' → logprob: -21.500001907348633

Token 818: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021271906734909862
    2. ',S' → logprob: -8.500212669372559
    3. ' ,' → logprob: -12.000212669372559
    4. 'S' → logprob: -12.750212669372559
    5. ',
' → logprob: -15.750212669372559
    6. ',s' → logprob: -18.625213623046875
    7. '                       ' → logprob: -18.750213623046875
    8. '                   ' → logprob: -19.000213623046875
    9. '           ' → logprob: -19.250213623046875
    10. ')' → logprob: -19.625213623046875

Token 819: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.696889623621246e-06
    2. ' S' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.375001907348633
    4. ' ' → logprob: -21.250001907348633
    5. '  ' → logprob: -21.500001907348633
    6. '       ' → logprob: -22.000001907348633
    7. ')' → logprob: -22.625001907348633
    8. '                   ' → logprob: -22.750001907348633
    9. '     ' → logprob: -22.750001907348633
    10. '	S' → logprob: -22.750001907348633

Token 820: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014260940253734589
    2. '))' → logprob: -4.264260768890381
    3. ')))' → logprob: -9.389261245727539
    4. ')
' → logprob: -12.264261245727539
    5. ')}' → logprob: -13.514261245727539
    6. ')}}' → logprob: -13.639261245727539
    7. '))
' → logprob: -13.764261245727539
    8. '                       ' → logprob: -13.889261245727539
    9. '),' → logprob: -14.014261245727539
    10. '                   ' → logprob: -14.014261245727539

Token 821: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016729222843423486
    2. 'for' → logprob: -6.751672744750977
    3. '   ' → logprob: -7.876672744750977
    4. '```' → logprob: -9.876672744750977
    5. '<|end|>' → logprob: -10.626672744750977
    6. '
' → logprob: -10.876672744750977
    7. ' for' → logprob: -11.001672744750977
    8. '        
' → logprob: -12.251672744750977
    9. '           ' → logprob: -13.126672744750977
    10. 'next' → logprob: -13.626672744750977

Token 822: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09893321245908737
    2. 'for' → logprob: -2.598933219909668
    3. 'results' → logprob: -4.598933219909668
    4. 'answers' → logprob: -5.223933219909668
    5. 'outputs' → logprob: -7.223933219909668
    6. 'output' → logprob: -7.348933219909668
    7. 'Q' → logprob: -7.473933219909668
    8. 'result' → logprob: -7.598933219909668
    9. 'if' → logprob: -7.848933219909668
    10. 'indent' → logprob: -8.098933219909668

Token 823: ' Now' (ID: 6549)
  Prédit: 'answers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answers' → logprob: -1.236209511756897
    2. 'results' → logprob: -1.611209511756897
    3. 'for' → logprob: -1.736209511756897
    4. '       ' → logprob: -1.986209511756897
    5. '#' → logprob: -2.6112093925476074
    6. 'result' → logprob: -3.1112093925476074
    7. 'res' → logprob: -4.236209392547607
    8. 'answer' → logprob: -4.736209392547607
    9. 'R' → logprob: -4.736209392547607
    10. 'indent' → logprob: -4.861209392547607

Token 824: ' apply' (ID: 6096)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018716402119025588
    2. 'for' → logprob: -7.126871585845947
    3. ' for' → logprob: -7.626871585845947
    4. 'results' → logprob: -8.251872062683105
    5. 'answers' → logprob: -9.626872062683105
    6. '
' → logprob: -10.126872062683105
    7. ' results' → logprob: -10.251872062683105
    8. 'result' → logprob: -10.501872062683105
    9. 'answer' → logprob: -10.876872062683105
    10. '#' → logprob: -11.126872062683105

Token 825: ' these' (ID: 1879)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6727275848388672
    2. '       ' → logprob: -1.4227275848388672
    3. ' for' → logprob: -2.047727584838867
    4. 'Q' → logprob: -2.547727584838867
    5. '#' → logprob: -3.547727584838867
    6. ' Q' → logprob: -4.672727584838867
    7. 'results' → logprob: -7.047727584838867
    8. 'indent' → logprob: -7.172727584838867
    9. ' #' → logprob: -8.297727584838867
    10. '```' → logprob: -8.797727584838867

Token 826: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5210462212562561
    2. ' to' → logprob: -1.5210461616516113
    3. 'to' → logprob: -2.1460461616516113
    4. '       ' → logprob: -3.1460461616516113
    5. ' candidates' → logprob: -3.8960461616516113
    6. '
' → logprob: -6.271046161651611
    7. 'for' → logprob: -6.396046161651611
    8. ' for' → logprob: -6.771046161651611
    9. '#' → logprob: -6.896046161651611
    10. '   ' → logprob: -7.021046161651611

Token 827: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06490803509950638
    2. '
' → logprob: -3.314908027648926
    3. ' to' → logprob: -3.689908027648926
    4. 'to' → logprob: -7.689908027648926
    5. ' for' → logprob: -7.689908027648926
    6. 'for' → logprob: -7.814908027648926
    7. '        
' → logprob: -8.814908027648926
    8. '   ' → logprob: -10.439908027648926
    9. ',' → logprob: -11.564908027648926
    10. '```' → logprob: -11.689908027648926

Token 828: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.15892545878887177
    2. 'for' → logprob: -2.9089255332946777
    3. '       ' → logprob: -2.9089255332946777
    4. '#' → logprob: -3.5339255332946777
    5. 'range' → logprob: -5.158925533294678
    6. '   ' → logprob: -7.658925533294678
    7. 'calculate' → logprob: -7.908925533294678
    8. 'the' → logprob: -8.03392505645752
    9. ' Q' → logprob: -8.28392505645752
    10. 'count' → logprob: -8.53392505645752

Token 829: ' lines' (ID: 8698)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008883526897989213
    2. 'for' → logprob: -7.500888347625732
    3. '        
' → logprob: -8.75088882446289
    4. '
' → logprob: -9.75088882446289
    5. ' for' → logprob: -9.75088882446289
    6. 'indent' → logprob: -10.62588882446289
    7. 'results' → logprob: -11.37588882446289
    8. '   ' → logprob: -11.50088882446289
    9. 'result' → logprob: -12.75088882446289
    10. 'output' → logprob: -12.75088882446289

Token 830: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012615261599421501
    2. 'for' → logprob: -5.012615203857422
    3. 'results' → logprob: -5.637615203857422
    4. '
' → logprob: -7.512615203857422
    5. 'result' → logprob: -7.762615203857422
    6. ' for' → logprob: -7.762615203857422
    7. 'indent' → logprob: -8.137615203857422
    8. 'answers' → logprob: -8.637615203857422
    9. '        
' → logprob: -8.637615203857422
    10. 'output' → logprob: -9.012615203857422

Token 831: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06347579509019852
    2. 'for' → logprob: -3.3134758472442627
    3. 'results' → logprob: -3.8134758472442627
    4. 'result' → logprob: -6.188475608825684
    5. 'answers' → logprob: -7.813475608825684
    6. 'output' → logprob: -8.813475608825684
    7. ' for' → logprob: -8.938475608825684
    8. 'indent' → logprob: -8.938475608825684
    9. 'answer' → logprob: -10.313475608825684
    10. 'outputs' → logprob: -10.438475608825684

Token 832: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1941898763179779
    2. 'for' → logprob: -1.8191899061203003
    3. 'results' → logprob: -5.19419002532959
    4. 'answers' → logprob: -6.06919002532959
    5. 'indent' → logprob: -6.31919002532959
    6. 'result' → logprob: -6.44419002532959
    7. 'counts' → logprob: -6.44419002532959
    8. 'ind' → logprob: -8.19419002532959
    9. 'ans' → logprob: -8.69419002532959
    10. ' for' → logprob: -8.81919002532959

Token 833: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5158280730247498
    2. 'br' → logprob: -2.6408281326293945
    3. 'indent' → logprob: -2.7658281326293945
    4. 'stack' → logprob: -3.2658281326293945
    5. 'depth' → logprob: -3.2658281326293945
    6. 'current' → logprob: -3.6408281326293945
    7. 'counts' → logprob: -3.8908281326293945
    8. 'results' → logprob: -4.0158281326293945
    9. 'R' → logprob: -4.3908281326293945
    10. 'cum' → logprob: -4.7658281326293945

Token 834: ' Q' (ID: 1486)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5338796973228455
    2. ' i' → logprob: -2.1588797569274902
    3. 'line' → logprob: -2.6588797569274902
    4. ' line' → logprob: -2.7838797569274902
    5. 'q' → logprob: -3.6588797569274902
    6. 'Q' → logprob: -3.6588797569274902
    7. 'R' → logprob: -3.7838797569274902
    8. 'each' → logprob: -4.03387975692749
    9. ' q' → logprob: -4.78387975692749
    10. ' each' → logprob: -5.28387975692749

Token 835: ' lines' (ID: 8698)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32536131143569946
    2. '           ' → logprob: -3.2003612518310547
    3. '=' → logprob: -3.7003612518310547
    4. ' lines' → logprob: -3.8253612518310547
    5. ' =' → logprob: -3.9503612518310547
    6. '_' → logprob: -4.075361251831055
    7. '   ' → logprob: -4.075361251831055
    8. 'i' → logprob: -4.200361251831055
    9. '_lines' → logprob: -4.325361251831055
    10. ' in' → logprob: -4.575361251831055

Token 836: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005103660747408867
    2. '
' → logprob: -5.505103588104248
    3. ',' → logprob: -8.005104064941406
    4. '        
' → logprob: -8.880104064941406
    5. '   ' → logprob: -9.005104064941406
    6. '           ' → logprob: -9.505104064941406
    7. 'indent' → logprob: -9.630104064941406
    8. 'for' → logprob: -9.755104064941406
    9. ':
' → logprob: -10.005104064941406
    10. ':' → logprob: -10.505104064941406

Token 837: ' compute' (ID: 23864)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -1.3676836490631104
    2. 'br' → logprob: -1.6176836490631104
    3. '       ' → logprob: -1.9926836490631104
    4. 'indent' → logprob: -1.9926836490631104
    5. 'for' → logprob: -2.4926836490631104
    6. 'q' → logprob: -2.6176836490631104
    7. ' ro' → logprob: -4.242683410644531
    8. 'stack' → logprob: -4.617683410644531
    9. 'prev' → logprob: -4.742683410644531
    10. 'cur' → logprob: -4.742683410644531

Token 838: ' cumulative' (ID: 75628)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indent' → logprob: -1.0523625612258911
    2. 'ro' → logprob: -1.4273625612258911
    3. 'q' → logprob: -1.6773625612258911
    4. 'br' → logprob: -2.4273624420166016
    5. 'for' → logprob: -2.9273624420166016
    6. 'current' → logprob: -4.427362442016602
    7. 'c' → logprob: -4.927362442016602
    8. '       ' → logprob: -5.177362442016602
    9. 'qs' → logprob: -5.177362442016602
    10. 'ind' → logprob: -5.302362442016602

Token 839: ' brackets' (ID: 73008)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.49263903498649597
    2. '_ro' → logprob: -0.9926390647888184
    3. '_counts' → logprob: -5.242639064788818
    4. 'counts' → logprob: -5.617639064788818
    5. ' ro' → logprob: -6.117639064788818
    6. '_' → logprob: -6.367639064788818
    7. '   ' → logprob: -6.867639064788818
    8. 'rop' → logprob: -7.742639064788818
    9. '_br' → logprob: -7.867639064788818
    10. '_r' → logprob: -7.992639064788818

Token 840: ' counts' (ID: 28991)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008576162159442902
    2. 'q' → logprob: -6.258576393127441
    3. '_ro' → logprob: -6.383576393127441
    4. 'ro' → logprob: -6.758576393127441
    5. '_q' → logprob: -6.883576393127441
    6. '_c' → logprob: -7.383576393127441
    7. 'c' → logprob: -8.008576393127441
    8. 'cum' → logprob: -8.383576393127441
    9. 'Q' → logprob: -8.508576393127441
    10. '_counts' → logprob: -8.508576393127441

Token 841: ' similarly' (ID: 60314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0054118577390909195
    2. 'ro' → logprob: -5.505411624908447
    3. ' ro' → logprob: -8.130412101745605
    4. 'q' → logprob: -8.130412101745605
    5. '_ro' → logprob: -8.130412101745605
    6. '_q' → logprob: -9.380412101745605
    7. '
' → logprob: -9.630412101745605
    8. '        
' → logprob: -9.755412101745605
    9. '   ' → logprob: -10.130412101745605
    10. 'Q' → logprob: -10.255412101745605

Token 842: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013083349040243775
    2. '        
' → logprob: -10.000130653381348
    3. 'ro' → logprob: -10.125130653381348
    4. '
' → logprob: -10.375130653381348
    5. 'Q' → logprob: -12.125130653381348
    6. '   ' → logprob: -12.750130653381348
    7. '#' → logprob: -13.500130653381348
    8. '           ' → logprob: -14.125130653381348
    9. ' ro' → logprob: -14.250130653381348
    10. '      ' → logprob: -14.500130653381348

Token 843: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045319506898522377
    2. 'ro' → logprob: -8.125452995300293
    3. ' ro' → logprob: -9.125452995300293
    4. '        
' → logprob: -11.000452995300293
    5. '   ' → logprob: -11.500452995300293
    6. '           ' → logprob: -12.375452995300293
    7. 'q' → logprob: -12.500452995300293
    8. 'indent' → logprob: -12.750452995300293
    9. '      ' → logprob: -13.250452995300293
    10. '
' → logprob: -13.375452995300293

Token 844: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2962915003299713
    2. 'ro' → logprob: -1.796291470527649
    3. '#' (adapté à ' #') → logprob: -2.7962915897369385
    4. 'indent' → logprob: -4.546291351318359
    5. ' ro' → logprob: -5.296291351318359
    6. 'sc' → logprob: -5.671291351318359
    7. 'Q' → logprob: -5.671291351318359
    8. '   ' → logprob: -6.421291351318359
    9. 'q' → logprob: -6.546291351318359
    10. '           ' → logprob: -6.796291351318359

Token 845: ' then' (ID: 1815)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.07433338463306427
    2. 'indent' → logprob: -3.574333429336548
    3. 'q' → logprob: -3.699333429336548
    4. 'r' → logprob: -4.949333190917969
    5. 'qr' → logprob: -5.324333190917969
    6. '       ' → logprob: -6.074333190917969
    7. 'R' → logprob: -7.324333190917969
    8. 'qc' → logprob: -7.324333190917969
    9. '#' → logprob: -7.574333190917969
    10. 'Q' → logprob: -7.699333190917969

Token 846: ' for' (ID: 395)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.29619795083999634
    2. '       ' → logprob: -1.5461978912353516
    3. 'ro' → logprob: -3.9211978912353516
    4. ' indent' → logprob: -4.296197891235352
    5. 'ind' → logprob: -5.921197891235352
    6. ' ro' → logprob: -6.046197891235352
    7. 'Q' → logprob: -6.796197891235352
    8. 'q' → logprob: -6.796197891235352
    9. '#' → logprob: -7.546197891235352
    10. '
' → logprob: -7.671197891235352

Token 847: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3327712416648865
    2. ' i' → logprob: -2.2077713012695312
    3. 'line' → logprob: -3.0827713012695312
    4. 'q' → logprob: -3.0827713012695312
    5. 'j' → logprob: -3.8327713012695312
    6. ' line' → logprob: -4.582771301269531
    7. 'idx' → logprob: -4.957771301269531
    8. '   ' → logprob: -4.957771301269531
    9. '       ' → logprob: -4.957771301269531
    10. 'Q' → logprob: -5.082771301269531

Token 848: ' Q' (ID: 1486)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7060151696205139
    2. 'line' → logprob: -0.9560151696205139
    3. 'R' → logprob: -3.081015110015869
    4. ' line' → logprob: -3.331015110015869
    5. ' i' → logprob: -4.581015110015869
    6. '   ' → logprob: -4.831015110015869
    7. '       ' → logprob: -5.456015110015869
    8. 'idx' → logprob: -5.581015110015869
    9. 'Q' → logprob: -6.331015110015869
    10. '
' → logprob: -6.331015110015869

Token 849: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.9660932421684265
    2. 'i' → logprob: -1.3410933017730713
    3. ' line' → logprob: -1.7160933017730713
    4. 'for' → logprob: -2.8410933017730713
    5. '       ' → logprob: -3.3410933017730713
    6. '_line' → logprob: -3.5910933017730713
    7. ' for' → logprob: -3.8410933017730713
    8. ' i' → logprob: -4.341093063354492
    9. '=' → logprob: -5.216093063354492
    10. '   ' → logprob: -5.716093063354492

Token 850: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3127247095108032
    2. ',' → logprob: -2.0627245903015137
    3. ':
' → logprob: -2.6877245903015137
    4. '           ' → logprob: -3.4377245903015137
    5. ':' → logprob: -3.6877245903015137
    6. '
' → logprob: -5.437724590301514
    7. '   ' → logprob: -5.562724590301514
    8. 'for' → logprob: -5.937724590301514
    9. ' for' → logprob: -6.812724590301514
    10. ',
' → logprob: -7.062724590301514

Token 851: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1806975603103638
    2. '           ' → logprob: -1.5556975603103638
    3. ':
' → logprob: -1.8056975603103638
    4. ',' → logprob: -1.9306975603103638
    5. ' in' → logprob: -2.555697441101074
    6. ':' → logprob: -2.930697441101074
    7. ' (' → logprob: -4.055697441101074
    8. 'in' → logprob: -4.680697441101074
    9. '                   ' → logprob: -6.305697441101074
    10. '):
' → logprob: -6.430697441101074

Token 852: ' calculate' (ID: 17950)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18114914000034332
    2. '       ' → logprob: -1.9311491250991821
    3. ' for' → logprob: -4.556149005889893
    4. 'for' → logprob: -5.556149005889893
    5. '
' → logprob: -6.181149005889893
    6. '   ' → logprob: -6.431149005889893
    7. '                       ' → logprob: -6.806149005889893
    8. '                   ' → logprob: -7.431149005889893
    9. '               ' → logprob: -7.931149005889893
    10. ' cumulative' → logprob: -9.30614948272705

Token 853: ' indentation' (ID: 170733)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.3426554203033447
    2. 'ind' → logprob: -2.7176554203033447
    3. 'expected' → logprob: -3.0926554203033447
    4. '       ' → logprob: -3.2176554203033447
    5. 'for' → logprob: -3.4676554203033447
    6. '           ' → logprob: -3.5926554203033447
    7. '   ' → logprob: -3.7176554203033447
    8. ' indent' → logprob: -4.342655181884766
    9. 'R' → logprob: -5.217655181884766
    10. ' for' → logprob: -5.342655181884766

Token 854: ' candidates' (ID: 18116)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.051761336624622345
    2. '       ' → logprob: -3.1767613887786865
    3. 'levels' → logprob: -5.051761150360107
    4. '_' → logprob: -7.301761150360107
    5. '=' → logprob: -7.551761150360107
    6. ' =' → logprob: -7.676761150360107
    7. ' levels' → logprob: -9.301761627197266
    8. '_counts' → logprob: -9.426761627197266
    9. 'Levels' → logprob: -9.551761627197266
    10. 'for' → logprob: -9.676761627197266

Token 855: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012614437378942966
    2. '
' → logprob: -4.5126142501831055
    3. '        
' → logprob: -6.6376142501831055
    4. '   ' → logprob: -9.387614250183105
    5. 'ro' → logprob: -10.512614250183105
    6. '```' → logprob: -10.887614250183105
    7. '    
' → logprob: -11.262614250183105
    8. '           ' → logprob: -11.262614250183105
    9. 'Q' → logprob: -11.262614250183105
    10. '	' → logprob: -11.512614250183105

Token 856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004490531049668789
    2. '
' → logprob: -5.629490375518799
    3. '        
' → logprob: -7.254490375518799
    4. '```' → logprob: -10.004490852355957
    5. '   ' → logprob: -10.129490852355957
    6. 'Q' → logprob: -11.379490852355957
    7. '    
' → logprob: -11.504490852355957
    8. ' ro' → logprob: -11.754490852355957
    9. '           ' → logprob: -11.879490852355957
    10. '  
' → logprob: -12.129490852355957

Token 857: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11234350502490997
    2. 'ro' → logprob: -2.8623435497283936
    3. ' ro' → logprob: -3.1123435497283936
    4. 'indent' → logprob: -6.8623433113098145
    5. 'q' → logprob: -7.6123433113098145
    6. 'r' → logprob: -7.8623433113098145
    7. 'R' → logprob: -8.237343788146973
    8. ' R' → logprob: -8.487343788146973
    9. '
' → logprob: -8.487343788146973
    10. '   ' → logprob: -8.612343788146973

Token 858: ' indentation' (ID: 170733)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.25479361414909363
    2. '       ' → logprob: -2.004793643951416
    3. 'q' → logprob: -3.754793643951416
    4. 'indent' → logprob: -4.129793643951416
    5. 'R' → logprob: -4.379793643951416
    6. 'r' → logprob: -4.754793643951416
    7. 'Q' → logprob: -4.879793643951416
    8. '#' → logprob: -5.379793643951416
    9. 'for' → logprob: -5.504793643951416
    10. ' ro' → logprob: -5.629793643951416

Token 859: '_q' (ID: 19384)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.1988268494606018
    2. 's' → logprob: -2.323826789855957
    3. ' =' → logprob: -2.948826789855957
    4. '=' → logprob: -4.573826789855957
    5. '_results' → logprob: -4.823826789855957
    6. '_values' → logprob: -5.073826789855957
    7. '_candidates' → logprob: -6.448826789855957
    8. 'for' → logprob: -6.823826789855957
    9. 'levels' → logprob: -7.198826789855957
    10. '_' → logprob: -7.698826789855957

Token 860: '[i' (ID: 1768)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.5544938445091248
    2. ' =' → logprob: -1.0544939041137695
    3. '_q' → logprob: -3.4294939041137695
    4. '=' → logprob: -3.9294939041137695
    5. 's' → logprob: -4.1794939041137695
    6. '_' → logprob: -5.8044939041137695
    7. '_s' → logprob: -6.1794939041137695
    8. '_candidates' → logprob: -6.6794939041137695
    9. 'levels' → logprob: -7.1794939041137695
    10. '[i' → logprob: -8.05449390411377

Token 861: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05006828531622887
    2. ' =' → logprob: -3.5500683784484863
    3. '=' → logprob: -5.175068378448486
    4. ']=' → logprob: -5.425068378448486
    5. '           ' → logprob: -6.175068378448486
    6. '_levels' → logprob: -6.175068378448486
    7. '       ' → logprob: -6.800068378448486
    8. ' ]' → logprob: -6.800068378448486
    9. '   ' → logprob: -7.050068378448486
    10. ')' → logprob: -7.050068378448486

Token 862: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03961075097322464
    2. '=' → logprob: -3.2896108627319336
    3. 's' → logprob: -7.539610862731934
    4. '_levels' → logprob: -8.414610862731934
    5. '   ' → logprob: -8.539610862731934
    6. '```' → logprob: -8.539610862731934
    7. '_ro' → logprob: -9.789610862731934
    8. '_' → logprob: -9.789610862731934
    9. '_q' → logprob: -10.039610862731934
    10. '       ' → logprob: -10.039610862731934

Token 863: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7489631175994873
    2. '[]' → logprob: -1.7489631175994873
    3. '0' → logprob: -1.9989631175994873
    4. '[' → logprob: -2.8739631175994873
    5. '[R' → logprob: -2.9989631175994873
    6. 'Q' → logprob: -3.6239631175994873
    7. '[]
' → logprob: -3.9989631175994873
    8. ' R' → logprob: -4.123963356018066
    9. '"' → logprob: -4.873963356018066
    10. '[
' → logprob: -4.998963356018066

Token 864: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.013171174563467503
    2. '*' → logprob: -4.388171195983887
    3. ' *' → logprob: -7.388171195983887
    4. '*((' → logprob: -10.888171195983887
    5. '(ro' → logprob: -11.763171195983887
    6. '(' → logprob: -13.138171195983887
    7. ')*(' → logprob: -13.138171195983887
    8. ' *(' → logprob: -13.888171195983887
    9. '`' → logprob: -13.888171195983887
    10. '*q' → logprob: -13.888171195983887

Token 865: 'roq' (ID: 188502)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.1021319329738617
    2. 'ro' → logprob: -2.3521318435668945
    3. ' so' → logprob: -7.3521318435668945
    4. '(ro' → logprob: -8.102131843566895
    5. ' ro' → logprob: -8.227131843566895
    6. '0' → logprob: -8.352131843566895
    7. '(' → logprob: -8.977131843566895
    8. 'sum' → logprob: -9.852131843566895
    9. 'Q' → logprob: -9.977131843566895
    10. 'p' → logprob: -10.352131843566895

Token 866: '[i' (ID: 1768)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0012011817889288068
    2. '_o' → logprob: -7.251201152801514
    3. 'o' → logprob: -8.126201629638672
    4. '[' → logprob: -10.501201629638672
    5. '_i' → logprob: -10.876201629638672
    6. '[_' → logprob: -10.876201629638672
    7. '_oc' → logprob: -10.876201629638672
    8. 'q' → logprob: -11.001201629638672
    9. '_q' → logprob: -11.126201629638672
    10. 'c' → logprob: -11.251201629638672

Token 867: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7036185264587402
    2. '-' → logprob: -0.9536185264587402
    3. '_c' → logprob: -2.2036185264587402
    4. ' -' → logprob: -5.95361852645874
    5. ']_' → logprob: -6.45361852645874
    6. 'c' → logprob: -6.82861852645874
    7. ']-' → logprob: -6.82861852645874
    8. 'i' → logprob: -7.45361852645874
    9. '_' → logprob: -7.45361852645874
    10. '[' → logprob: -7.82861852645874

Token 868: '1' (ID: 16)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.6684187054634094
    2. 'i' → logprob: -1.6684186458587646
    3. 'c' → logprob: -1.7934186458587646
    4. 'cum' → logprob: -2.6684186458587646
    5. '-' → logprob: -3.4184186458587646
    6. '0' → logprob: -3.9184186458587646
    7. '1' → logprob: -5.918418884277344
    8. '-c' → logprob: -6.418418884277344
    9. ' ' → logprob: -6.543418884277344
    10. 'q' → logprob: -6.793418884277344

Token 869: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4036293923854828
    2. '_c' → logprob: -1.1536294221878052
    3. ']_' → logprob: -4.278629302978516
    4. '_]' → logprob: -7.028629302978516
    5. '_' → logprob: -7.903629302978516
    6. ' _' → logprob: -8.028629302978516
    7. ']-' → logprob: -8.153629302978516
    8. 'c' → logprob: -8.528629302978516
    9. '-' → logprob: -8.528629302978516
    10. ' -' → logprob: -8.778629302978516

Token 870: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.48529109358787537
    2. '_c' → logprob: -1.1102911233901978
    3. '_' → logprob: -3.610291004180908
    4. '-' → logprob: -3.985291004180908
    5. ')' → logprob: -5.610291004180908
    6. ' _' → logprob: -6.235291004180908
    7. ' ' → logprob: -7.110291004180908
    8. '[' → logprob: -7.360291004180908
    9. '   ' → logprob: -7.360291004180908
    10. ']' → logprob: -7.735291004180908

Token 871: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.5366789102554321
    2. ' rc' → logprob: -1.2866789102554321
    3. 'roc' → logprob: -2.0366787910461426
    4. 'roq' → logprob: -5.911678791046143
    5. 'rq' → logprob: -6.536678791046143
    6. ' roc' → logprob: -6.661678791046143
    7. 'ro' → logprob: -6.911678791046143
    8. 'r' → logprob: -7.661678791046143
    9. ' ro' → logprob: -7.911678791046143
    10. '	rc' → logprob: -8.0366792678833

Token 872: 'q' (ID: 80)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.05659647658467293
    2. 'q' → logprob: -3.431596517562866
    3. '_q' → logprob: -4.806596279144287
    4. 'o' → logprob: -5.056596279144287
    5. 'u' → logprob: -5.806596279144287
    6. '_o' → logprob: -6.556596279144287
    7. '_um' → logprob: -6.806596279144287
    8. '_' → logprob: -7.431596279144287
    9. '_c' → logprob: -7.681596279144287
    10. 'oq' → logprob: -8.056596755981445

Token 873: '[i' (ID: 1768)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.01811704784631729
    2. 'q' → logprob: -4.5181169509887695
    3. '[i' → logprob: -5.2681169509887695
    4. '[' → logprob: -6.8931169509887695
    5. '_q' → logprob: -8.39311695098877
    6. '[_' → logprob: -8.51811695098877
    7. ')' → logprob: -8.64311695098877
    8. '_' → logprob: -10.14311695098877
    9. ')_' → logprob: -10.26811695098877
    10. '[q' → logprob: -10.39311695098877

Token 874: '-' (ID: 12)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.39059674739837646
    2. '-' → logprob: -1.1405967473983765
    3. '_' → logprob: -7.015596866607666
    4. '-_' → logprob: -7.265596866607666
    5. ']_' → logprob: -7.515596866607666
    6. '])' → logprob: -7.640596866607666
    7. ']' → logprob: -8.140596389770508
    8. '_-' → logprob: -8.515596389770508
    9. ' -' → logprob: -8.640596389770508
    10. 'c' → logprob: -9.515596389770508

Token 875: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. '0' → logprob: -12.125011444091797
    3. 'c' → logprob: -12.750011444091797
    4. '   ' → logprob: -13.875011444091797
    5. '```' → logprob: -14.000011444091797
    6. ' ' → logprob: -14.375011444091797
    7. 'q' → logprob: -14.375011444091797
    8. '-' → logprob: -15.625011444091797
    9. '_c' → logprob: -16.625011444091797
    10. 'prev' → logprob: -16.750011444091797

Token 876: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28168943524360657
    2. '])' → logprob: -1.4066894054412842
    3. ']' → logprob: -8.531689643859863
    4. 'q' → logprob: -9.531689643859863
    5. ')+' → logprob: -9.781689643859863
    6. '`)' → logprob: -10.031689643859863
    7. ')`' → logprob: -10.531689643859863
    8. '_c' → logprob: -10.781689643859863
    9. '')' → logprob: -11.281689643859863
    10. ')]' → logprob: -11.281689643859863

Token 877: ' +' (ID: 659)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.8717924356460571
    2. '_' → logprob: -1.2467924356460571
    3. ')' → logprob: -2.4967923164367676
    4. '[' → logprob: -3.1217923164367676
    5. ')
' → logprob: -3.7467923164367676
    6. '
' → logprob: -3.8717923164367676
    7. '_ro' → logprob: -3.8717923164367676
    8. '_
' → logprob: -3.9967923164367676
    9. ')_' → logprob: -3.9967923164367676
    10. '_q' → logprob: -4.121792316436768

Token 878: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2254694253206253
    2. ' C' → logprob: -1.6004694700241089
    3. ' ' → logprob: -10.350469589233398
    4. '   ' → logprob: -12.725469589233398
    5. ')' → logprob: -12.850469589233398
    6. '(' → logprob: -13.225469589233398
    7. 'c' → logprob: -13.412969589233398
    8. '  ' → logprob: -13.787969589233398
    9. '     ' → logprob: -13.850469589233398
    10. '```' → logprob: -13.912969589233398

Token 879: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0013496380997821689
    2. '*' → logprob: -6.626349449157715
    3. '(' → logprob: -10.876349449157715
    4. ' *' → logprob: -13.501349449157715
    5. '(co' → logprob: -13.876349449157715
    6. ' *(' → logprob: -14.001349449157715
    7. '(*' → logprob: -14.876349449157715
    8. '*((' → logprob: -15.626349449157715
    9. '#' → logprob: -15.751349449157715
    10. '(ro' → logprob: -16.12635040283203

Token 880: 'co' (ID: 1191)
  Prédit: 'co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.0004218554822728038
    2. 'roq' → logprob: -9.750421524047852
    3. 'c' → logprob: -10.000421524047852
    4. ' co' → logprob: -10.125421524047852
    5. 'cox' → logprob: -10.125421524047852
    6. '(' → logprob: -10.125421524047852
    7. 'cq' → logprob: -10.500421524047852
    8. '(co' → logprob: -10.625421524047852
    9. 'caq' → logprob: -10.625421524047852
    10. 'cow' → logprob: -11.125421524047852

Token 881: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.09502823650836945
    2. '_c' → logprob: -2.8450281620025635
    3. '_q' → logprob: -3.4700281620025635
    4. '_' → logprob: -7.595028400421143
    5. 'm' → logprob: -8.345027923583984
    6. 'uq' → logprob: -8.470027923583984
    7. 'u' → logprob: -9.220027923583984
    8. 'cum' → logprob: -9.470027923583984
    9. '_m' → logprob: -9.595027923583984
    10. '_u' → logprob: -9.845027923583984

Token 882: '[i' (ID: 1768)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.005563024897128344
    2. '[_' → logprob: -6.255563259124756
    3. '[' → logprob: -6.380563259124756
    4. '[i' → logprob: -6.755563259124756
    5. '_co' → logprob: -8.755562782287598
    6. 'q' → logprob: -9.005562782287598
    7. ')' → logprob: -9.130562782287598
    8. '_q' → logprob: -9.380562782287598
    9. ''_' → logprob: -9.755562782287598
    10. ')_' → logprob: -10.255562782287598

Token 883: '-' (ID: 12)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.26865145564079285
    2. '-' → logprob: -1.6436514854431152
    3. 'q' → logprob: -4.143651485443115
    4. ']_' → logprob: -5.143651485443115
    5. ']' → logprob: -5.518651485443115
    6. 'c' → logprob: -5.768651485443115
    7. '][' → logprob: -5.893651485443115
    8. '_q' → logprob: -6.143651485443115
    9. '[' → logprob: -6.393651485443115
    10. ' -' → logprob: -6.768651485443115

Token 884: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03143157437443733
    2. 'c' → logprob: -4.656431674957275
    3. 'q' → logprob: -4.906431674957275
    4. '[' → logprob: -4.906431674957275
    5. '-' → logprob: -5.281431674957275
    6. '_c' → logprob: -7.156431674957275
    7. '0' → logprob: -8.781431198120117
    8. 'prev' → logprob: -8.906431198120117
    9. '_prev' → logprob: -8.906431198120117
    10. '[-' → logprob: -9.406431198120117

Token 885: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.727613627910614
    2. ')' → logprob: -1.2276136875152588
    3. '_c' → logprob: -2.102613687515259
    4. '[i' → logprob: -3.352613687515259
    5. 'q' → logprob: -4.22761344909668
    6. ']_' → logprob: -4.72761344909668
    7. '[q' → logprob: -5.10261344909668
    8. '[' → logprob: -5.10261344909668
    9. '])' → logprob: -5.35261344909668
    10. '       ' → logprob: -5.60261344909668

Token 886: ' -' (ID: 533)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.2904013395309448
    2. ' -' → logprob: -2.9154014587402344
    3. '-' → logprob: -3.1654014587402344
    4. '[i' → logprob: -3.4154014587402344
    5. ',' → logprob: -3.5404014587402344
    6. ')' → logprob: -3.7904014587402344
    7. '           ' → logprob: -4.165401458740234
    8. '       ' → logprob: -4.415401458740234
    9. 'c' → logprob: -4.790401458740234
    10. '[' → logprob: -4.790401458740234

Token 887: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -7.44574936106801e-05
    2. ' cc' → logprob: -10.00007438659668
    3. 'cq' → logprob: -11.00007438659668
    4. '	cc' → logprob: -11.62507438659668
    5. '
' → logprob: -14.12507438659668
    6. 'cco' → logprob: -14.62507438659668
    7. '(cc' → logprob: -15.00007438659668
    8. 'ccd' → logprob: -15.12507438659668
    9. '```' → logprob: -15.25007438659668
    10. 'qc' → logprob: -15.50007438659668

Token 888: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.02798197604715824
    2. '_q' → logprob: -3.902981996536255
    3. 'uq' → logprob: -6.027981758117676
    4. 'um' → logprob: -6.027981758117676
    5. 'u' → logprob: -7.402981758117676
    6. '_c' → logprob: -7.527981758117676
    7. 'oq' → logprob: -7.777981758117676
    8. '_u' → logprob: -8.027981758117676
    9. '_' → logprob: -8.152981758117676
    10. 'cum' → logprob: -8.902981758117676

Token 889: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.39426755905151367
    2. 'q' → logprob: -1.1442675590515137
    3. '[q' → logprob: -5.394267559051514
    4. '[' → logprob: -5.894267559051514
    5. '_q' → logprob: -10.144268035888672
    6. '```' → logprob: -11.269268035888672
    7. 'i' → logprob: -12.394268035888672
    8. ')' → logprob: -13.269268035888672
    9. '[
' → logprob: -13.269268035888672
    10. ')[' → logprob: -13.519268035888672

Token 890: '-' (ID: 12)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.3936699330806732
    2. 'q' → logprob: -1.3936699628829956
    3. '[' → logprob: -3.643669843673706
    4. '][' → logprob: -4.143670082092285
    5. '-' → logprob: -4.268670082092285
    6. '   ' → logprob: -5.643670082092285
    7. 'c' → logprob: -5.768670082092285
    8. '_q' → logprob: -6.018670082092285
    9. '])' → logprob: -6.143670082092285
    10. '[i' → logprob: -6.143670082092285

Token 891: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42057374119758606
    2. 'q' → logprob: -1.5455737113952637
    3. '[' → logprob: -2.4205737113952637
    4. 'c' → logprob: -3.9205737113952637
    5. '[i' → logprob: -4.545573711395264
    6. '_c' → logprob: -5.420573711395264
    7. '[q' → logprob: -5.795573711395264
    8. 'i' → logprob: -7.170573711395264
    9. 'cum' → logprob: -7.420573711395264
    10. '_q' → logprob: -7.795573711395264

Token 892: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.13251625001430511
    2. ')' → logprob: -2.1325161457061768
    3. '[i' → logprob: -5.257516384124756
    4. 'q' → logprob: -9.132515907287598
    5. ']' → logprob: -9.507515907287598
    6. ''])' → logprob: -10.132515907287598
    7. ')]' → logprob: -10.632515907287598
    8. '[' → logprob: -11.007515907287598
    9. '`)' → logprob: -11.007515907287598
    10. '[q' → logprob: -11.132515907287598

Token 893: ' +' (ID: 659)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8650615215301514
    2. '       ' → logprob: -1.4900615215301514
    3. '                   ' → logprob: -1.6150615215301514
    4. ' +' → logprob: -3.3650615215301514
    5. '           ' → logprob: -3.6150615215301514
    6. '+' → logprob: -3.8650615215301514
    7. '               ' → logprob: -3.9900615215301514
    8. '
' → logprob: -4.4900617599487305
    9. ',' → logprob: -4.8650617599487305
    10. '                      ' → logprob: -5.1150617599487305

Token 894: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.14272217452526093
    2. ' S' → logprob: -2.0177221298217773
    3. ' ' → logprob: -10.642722129821777
    4. '   ' → logprob: -11.267722129821777
    5. '  ' → logprob: -12.642722129821777
    6. '       ' → logprob: -13.517722129821777
    7. '     ' → logprob: -13.892722129821777
    8. '    ' → logprob: -14.392722129821777
    9. 'so' → logprob: -14.767722129821777
    10. ' ' → logprob: -15.017722129821777

Token 895: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0005149058997631073
    2. '*' → logprob: -7.625514984130859
    3. ' *' → logprob: -11.00051498413086
    4. ' *(' → logprob: -12.25051498413086
    5. '(' → logprob: -13.00051498413086
    6. '*((' → logprob: -14.00051498413086
    7. '```' → logprob: -14.37551498413086
    8. '`' → logprob: -14.62551498413086
    9. '   ' → logprob: -15.50051498413086
    10. 'q' → logprob: -16.00051498413086

Token 896: 'so' (ID: 786)
  Prédit: 'so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.0003444024478085339
    2. ' soq' → logprob: -8.875344276428223
    3. 'sq' → logprob: -9.250344276428223
    4. ' so' → logprob: -9.875344276428223
    5. 's' → logprob: -10.500344276428223
    6. 'So' → logprob: -11.625344276428223
    7. 'sol' → logprob: -12.500344276428223
    8. 'soc' → logprob: -12.625344276428223
    9. '```' → logprob: -13.625344276428223
    10. '
' → logprob: -13.875344276428223

Token 897: 'q' (ID: 80)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.07241292297840118
    2. 'q' → logprob: -2.9474129676818848
    3. '_q' → logprob: -4.072412967681885
    4. '_' → logprob: -8.697412490844727
    5. 'c' → logprob: -9.697412490844727
    6. '[q' → logprob: -10.697412490844727
    7. '```' → logprob: -10.697412490844727
    8. '[' → logprob: -10.822412490844727
    9. '`' → logprob: -11.822412490844727
    10. ')_' → logprob: -12.072412490844727

Token 898: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0025170387234538794
    2. 'q' → logprob: -7.002517223358154
    3. '[' → logprob: -7.252517223358154
    4. 'i' → logprob: -7.627517223358154
    5. '_q' → logprob: -8.877516746520996
    6. '[q' → logprob: -9.502516746520996
    7. '```' → logprob: -10.252516746520996
    8. '_i' → logprob: -10.377516746520996
    9. '[_' → logprob: -10.502516746520996
    10. ')[' → logprob: -10.627516746520996

Token 899: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16183994710445404
    2. '[i' → logprob: -2.0368399620056152
    3. '[' → logprob: -4.286839962005615
    4. 'i' → logprob: -5.786839962005615
    5. '[-' → logprob: -6.786839962005615
    6. '][' → logprob: -7.786839962005615
    7. ']' → logprob: -8.661839485168457
    8. ' -' → logprob: -9.036839485168457
    9. 'q' → logprob: -9.161839485168457
    10. '   ' → logprob: -10.036839485168457

Token 900: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8319303393363953
    2. '1' → logprob: -0.9569303393363953
    3. '[i' → logprob: -2.08193039894104
    4. '-' → logprob: -3.20693039894104
    5. '[' → logprob: -4.331930160522461
    6. 'q' → logprob: -6.831930160522461
    7. '...' → logprob: -7.831930160522461
    8. '```' → logprob: -8.956930160522461
    9. '[-' → logprob: -9.206930160522461
    10. '[q' → logprob: -9.206930160522461

Token 901: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01339104026556015
    2. '[' → logprob: -5.638391017913818
    3. '][' → logprob: -5.638391017913818
    4. '[i' → logprob: -5.888391017913818
    5. ')' → logprob: -6.638391017913818
    6. '[q' → logprob: -7.263391017913818
    7. '-' → logprob: -7.888391017913818
    8. '       ' → logprob: -9.138391494750977
    9. '`' → logprob: -9.513391494750977
    10. 'q' → logprob: -9.513391494750977

Token 902: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04389985650777817
    2. '[i' → logprob: -3.4188997745513916
    3. '[-' → logprob: -6.168900012969971
    4. '-' → logprob: -6.418900012969971
    5. '       ' → logprob: -6.418900012969971
    6. '           ' → logprob: -6.793900012969971
    7. ' [' → logprob: -7.168900012969971
    8. ')' → logprob: -7.793900012969971
    9. '```' → logprob: -8.168899536132812
    10. ' -' → logprob: -8.293899536132812

Token 903: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.00012511172099038959
    2. ' sc' → logprob: -9.00012493133545
    3. '(sc' → logprob: -14.37512493133545
    4. 'scp' → logprob: -15.00012493133545
    5. '
' → logprob: -15.12512493133545
    6. '	sc' → logprob: -15.62512493133545
    7. '=sc' → logprob: -16.375125885009766
    8. '```' → logprob: -16.375125885009766
    9. '_sc' → logprob: -16.500125885009766
    10. '   ' → logprob: -16.875125885009766

Token 904: 'q' (ID: 80)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.06695574522018433
    2. 'q' → logprob: -2.816955804824829
    3. '_q' → logprob: -5.31695556640625
    4. ']_' → logprob: -10.81695556640625
    5. '_' → logprob: -11.56695556640625
    6. '_qu' → logprob: -11.81695556640625
    7. '[q' → logprob: -12.31695556640625
    8. '[_' → logprob: -12.44195556640625
    9. '```' → logprob: -12.56695556640625
    10. '[' → logprob: -12.69195556640625

Token 905: '[i' (ID: 1768)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.05780886113643646
    2. 'q' → logprob: -3.3078088760375977
    3. '[_' → logprob: -4.682808876037598
    4. '_q' → logprob: -5.432808876037598
    5. '[q' → logprob: -6.057808876037598
    6. ']_' → logprob: -6.557808876037598
    7. '[' → logprob: -7.432808876037598
    8. '_' → logprob: -8.307808876037598
    9. ')_' → logprob: -8.432808876037598
    10. ')' → logprob: -8.932808876037598

Token 906: '-' (ID: 12)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3679136633872986
    2. '_c' → logprob: -1.4929137229919434
    3. '[' → logprob: -3.2429137229919434
    4. '])' → logprob: -3.8679137229919434
    5. '_' → logprob: -5.117913722991943
    6. '][' → logprob: -5.492913722991943
    7. ']_' → logprob: -6.117913722991943
    8. '[i' → logprob: -6.367913722991943
    9. '_q' → logprob: -6.367913722991943
    10. 'c' → logprob: -6.492913722991943

Token 907: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08500362187623978
    2. 'q' → logprob: -2.710003614425659
    3. '[' → logprob: -4.335003852844238
    4. '[i' → logprob: -6.710003852844238
    5. '[q' → logprob: -9.210003852844238
    6. '][' → logprob: -9.335003852844238
    7. 'c' → logprob: -9.335003852844238
    8. 'qu' → logprob: -9.835003852844238
    9. '-' → logprob: -9.960003852844238
    10. 'i' → logprob: -10.085003852844238

Token 908: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02001481130719185
    2. ')' → logprob: -4.645014762878418
    3. '])
' → logprob: -4.645014762878418
    4. '       ' → logprob: -8.395014762878418
    5. ')
' → logprob: -9.020014762878418
    6. '           ' → logprob: -9.770014762878418
    7. 'q' → logprob: -10.020014762878418
    8. ']' → logprob: -10.645014762878418
    9. '   ' → logprob: -10.895014762878418
    10. '])
' → logprob: -11.020014762878418

Token 909: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00863217655569315
    2. '
' → logprob: -5.133632183074951
    3. 'roq' → logprob: -6.258632183074951
    4. '        
' → logprob: -7.258632183074951
    5. '   ' → logprob: -10.508631706237793
    6. '  
' → logprob: -11.633631706237793
    7. '    
' → logprob: -12.008631706237793
    8. '<|end|>' → logprob: -12.633631706237793
    9. 'toq' → logprob: -12.758631706237793
    10. '      ' → logprob: -12.758631706237793

Token 910: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5810535550117493
    2. 'roq' → logprob: -0.8310535550117493
    3. '
' → logprob: -6.456053733825684
    4. '   ' → logprob: -6.831053733825684
    5. '        
' → logprob: -7.456053733825684
    6. 'ro' → logprob: -7.706053733825684
    7. ' ro' → logprob: -7.831053733825684
    8. 'toq' → logprob: -8.581053733825684
    9. '#' → logprob: -9.331053733825684
    10. 'raq' → logprob: -9.331053733825684

Token 911: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009850544156506658
    2. '        
' → logprob: -7.500985145568848
    3. '
' → logprob: -7.875985145568848
    4. '#' → logprob: -10.375985145568848
    5. 'import' → logprob: -12.375985145568848
    6. '   ' → logprob: -12.375985145568848
    7. '<|end|>' → logprob: -12.500985145568848
    8. '  
' → logprob: -13.250985145568848
    9. '    
' → logprob: -13.500985145568848
    10. '<|end|>' → logprob: -13.750985145568848

Token 912: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10319604724645615
    2. 'roq' → logprob: -2.353196144104004
    3. 'ro' → logprob: -6.353196144104004
    4. ' ro' → logprob: -7.603196144104004
    5. '#' (adapté à ' #') → logprob: -8.353196144104004
    6. 'indent' → logprob: -8.728196144104004
    7. '   ' → logprob: -8.978196144104004
    8. 'import' → logprob: -9.728196144104004
    9. '
' → logprob: -10.603196144104004
    10. '      ' → logprob: -11.103196144104004

Token 913: ' If' (ID: 1843)
  Prédit: 'roq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roq' → logprob: -0.0016793444519862533
    2. '       ' → logprob: -7.501679420471191
    3. '#' → logprob: -8.126679420471191
    4. 'ro' → logprob: -8.751679420471191
    5. 'toq' → logprob: -9.001679420471191
    6. 'raq' → logprob: -9.251679420471191
    7. '   ' → logprob: -9.626679420471191
    8. 'poq' → logprob: -9.876679420471191
    9. 'Q' → logprob: -10.001679420471191
    10. 'voq' → logprob: -10.376679420471191

Token 914: ' multiple' (ID: 7598)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.4488917887210846
    2. 'q' → logprob: -1.3238917589187622
    3. 'Q' → logprob: -3.8238918781280518
    4. ' len' → logprob: -3.9488918781280518
    5. ' not' → logprob: -4.198891639709473
    6. ' Q' → logprob: -4.323891639709473
    7. ' p' → logprob: -4.698891639709473
    8. 'len' → logprob: -4.698891639709473
    9. 'p' → logprob: -5.698891639709473
    10. 'not' → logprob: -5.823891639709473

Token 915: ' candidate' (ID: 17098)
  Prédit: 'roq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roq' → logprob: -0.8487033843994141
    2. '       ' → logprob: -1.098703384399414
    3. '   ' → logprob: -2.723703384399414
    4. 'ro' → logprob: -2.973703384399414
    5. '
' → logprob: -3.348703384399414
    6. '```' → logprob: -4.223703384399414
    7. '_ro' → logprob: -4.473703384399414
    8. 'for' → logprob: -4.723703384399414
    9. '#' → logprob: -5.223703384399414
    10. '_' → logprob: -5.223703384399414

Token 916: ' triples' (ID: 189700)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03177899122238159
    2. ':' → logprob: -4.281778812408447
    3. 'R' → logprob: -5.656778812408447
    4. '=' → logprob: -6.031778812408447
    5. 'Q' → logprob: -6.531778812408447
    6. '_lines' → logprob: -6.656778812408447
    7. '_ro' → logprob: -6.906778812408447
    8. '_' → logprob: -7.156778812408447
    9. ']' → logprob: -7.656778812408447
    10. ')' → logprob: -7.781778812408447

Token 917: ' produce' (ID: 10635)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4082159698009491
    2. ':
' → logprob: -2.7832159996032715
    3. 'for' → logprob: -3.1582159996032715
    4. ']' → logprob: -3.6582159996032715
    5. ' for' → logprob: -3.7832159996032715
    6. '```' → logprob: -3.7832159996032715
    7. ')' → logprob: -3.9082159996032715
    8. '=' → logprob: -4.0332159996032715
    9. ' continue' → logprob: -4.0332159996032715
    10. ' are' → logprob: -4.6582159996032715

Token 918: ' different' (ID: 2647)
  Prédit: ' indentation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indentation' → logprob: -0.6307977437973022
    2. 'indent' → logprob: -1.6307977437973022
    3. ' indent' → logprob: -2.755797863006592
    4. ' the' → logprob: -3.630797863006592
    5. 'different' → logprob: -3.630797863006592
    6. 'the' → logprob: -3.755797863006592
    7. ' identical' → logprob: -3.880797863006592
    8. ' different' → logprob: -3.880797863006592
    9. ' an' → logprob: -4.380797863006592
    10. ' consistent' → logprob: -4.380797863006592

Token 919: ' indentation' (ID: 170733)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.5830557942390442
    2. ' indentation' → logprob: -1.2080557346343994
    3. ' indent' → logprob: -2.0830557346343994
    4. 'ind' → logprob: -4.9580559730529785
    5. '
' → logprob: -5.7080559730529785
    6. '_indent' → logprob: -6.3330559730529785
    7. ' ind' → logprob: -6.7080559730529785
    8. '(indent' → logprob: -7.4580559730529785
    9. '   ' → logprob: -7.5830559730529785
    10. '```' → logprob: -7.8330559730529785

Token 920: ' values' (ID: 4824)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.04099828004837036
    2. '       ' → logprob: -3.9159982204437256
    3. '_q' → logprob: -4.790998458862305
    4. '_' → logprob: -5.165998458862305
    5. 'levels' → logprob: -5.415998458862305
    6. 's' → logprob: -7.915998458862305
    7. 'q' → logprob: -8.040998458862305
    8. '
' → logprob: -8.415998458862305
    9. ' levels' → logprob: -8.665998458862305
    10. '      ' → logprob: -9.040998458862305

Token 921: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4087006747722626
    2. ':' → logprob: -1.908700704574585
    3. ':
' → logprob: -2.283700704574585
    4. ',' → logprob: -3.533700704574585
    5. ' for' → logprob: -4.158700466156006
    6. '   ' → logprob: -4.783700466156006
    7. 'for' → logprob: -5.158700466156006
    8. '):
' → logprob: -5.658700466156006
    9. '```' → logprob: -5.783700466156006
    10. '):' → logprob: -5.908700466156006

Token 922: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.054333820939064026
    2. ' i' → logprob: -4.054333686828613
    3. 'each' → logprob: -4.429333686828613
    4. 'Q' → logprob: -4.554333686828613
    5. 'the' → logprob: -4.804333686828613
    6. ' each' → logprob: -6.179333686828613
    7. ' the' → logprob: -7.054333686828613
    8. 'line' → logprob: -7.679333686828613
    9. ' Q' → logprob: -7.804333686828613
    10. '#' → logprob: -8.304333686828613

Token 923: ' given' (ID: 4335)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.2029223442077637
    2. 'll' → logprob: -1.8279223442077637
    3. 'i' → logprob: -1.9529223442077637
    4. 'line' → logprob: -2.3279223442077637
    5. ']' → logprob: -2.9529223442077637
    6. 'l' → logprob: -3.2029223442077637
    7. '_' → logprob: -3.2029223442077637
    8. '
' → logprob: -3.9529223442077637
    9. 'b' → logprob: -4.202922344207764
    10. ' ' → logprob: -4.202922344207764

Token 924: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.15010669827461243
    2. 'line' → logprob: -2.40010666847229
    3. 'i' → logprob: -3.90010666847229
    4. '
' → logprob: -3.90010666847229
    5. ' i' → logprob: -5.650106906890869
    6. '```' → logprob: -5.900106906890869
    7. 'Q' → logprob: -7.775106906890869
    8. '\n' → logprob: -8.525106430053711
    9. ' Q' → logprob: -9.025106430053711
    10. 'q' → logprob: -9.150106430053711

Token 925: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0372573658823967
    2. ',' → logprob: -3.662257432937622
    3. ':' → logprob: -5.037257194519043
    4. ':
' → logprob: -6.412257194519043
    5. '           ' → logprob: -7.287257194519043
    6. ',
' → logprob: -7.912257194519043
    7. '   ' → logprob: -8.037257194519043
    8. '=' → logprob: -8.412257194519043
    9. '        
' → logprob: -8.412257194519043
    10. '_' → logprob: -9.287257194519043

Token 926: ' print' (ID: 2123)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2615139484405518
    2. '       ' → logprob: -1.5115139484405518
    3. '#' → logprob: -2.0115139484405518
    4. ' continue' → logprob: -2.3865139484405518
    5. 'for' → logprob: -3.0115139484405518
    6. '                       ' → logprob: -3.0115139484405518
    7. ' indentation' → logprob: -3.5115139484405518
    8. '           ' → logprob: -3.6365139484405518
    9. '                   ' → logprob: -3.7615139484405518
    10. 'continue' → logprob: -3.7615139484405518

Token 927: ' -' (ID: 533)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5301113128662109
    2. '('' → logprob: -2.280111312866211
    3. '('\' → logprob: -2.530111312866211
    4. '(' → logprob: -2.780111312866211
    5. '()
' → logprob: -2.905111312866211
    6. ''' → logprob: -3.280111312866211
    7. 's' → logprob: -4.280111312866211
    8. '("' → logprob: -4.280111312866211
    9. '(
' → logprob: -4.780111312866211
    10. '
' → logprob: -4.905111312866211

Token 928: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017970333283301443
    2. '\n' → logprob: -9.500179290771484
    3. ''' → logprob: -11.125179290771484
    4. ''\' → logprob: -11.125179290771484
    5. '```' → logprob: -11.250179290771484
    6. '-' → logprob: -11.375179290771484
    7. '"' → logprob: -11.750179290771484
    8. ' ' → logprob: -11.875179290771484
    9. ''''' → logprob: -12.000179290771484
    10. '\' → logprob: -12.250179290771484

Token 929: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007463942281901836
    2. '
' → logprob: -5.1324639320373535
    3. '        
' → logprob: -6.5074639320373535
    4. '   ' → logprob: -11.382464408874512
    5. '    
' → logprob: -11.882464408874512
    6. '  
' → logprob: -12.507464408874512
    7. 'roq' → logprob: -12.507464408874512
    8. '
' → logprob: -12.882464408874512
    9. 'Q' → logprob: -13.132464408874512
    10. '#' → logprob: -13.132464408874512

Token 930: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.43235111236572266
    2. ' that' → logprob: -1.0573511123657227
    3. 'i' → logprob: -6.182351112365723
    4. 'the' → logprob: -7.807351112365723
    5. '```' → logprob: -7.807351112365723
    6. '
' → logprob: -8.057351112365723
    7. '_that' → logprob: -9.307351112365723
    8. ' i' → logprob: -9.307351112365723
    9. ' ' → logprob: -9.932351112365723
    10. ' the' → logprob: -10.182351112365723

Token 931: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0541839599609375
    2. '
' → logprob: -1.1791839599609375
    3. 'for' → logprob: -2.4291839599609375
    4. '```' → logprob: -2.8041839599609375
    5. '   ' → logprob: -3.0541839599609375
    6. ' for' → logprob: -3.1791839599609375
    7. 'Q' → logprob: -3.4291839599609375
    8. '`
' → logprob: -4.8041839599609375
    9. '           ' → logprob: -5.1791839599609375
    10. ' line' → logprob: -5.3041839599609375

Token 932: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019436265574768186
    2. '
' → logprob: -6.501943588256836
    3. '        
' → logprob: -8.001943588256836
    4. 'roq' → logprob: -9.376943588256836
    5. '   ' → logprob: -11.126943588256836
    6. '    
' → logprob: -13.626943588256836
    7. '```' → logprob: -13.751943588256836
    8. '

' → logprob: -14.126943588256836
    9. '      ' → logprob: -14.501943588256836
    10. '  
' → logprob: -14.626943588256836

Token 933: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.708398699760437
    2. '       ' → logprob: -0.708398699760437
    3. '        
' → logprob: -4.208398818969727
    4. '```' → logprob: -8.958398818969727
    5. '    
' → logprob: -10.208398818969727
    6. '  
' → logprob: -10.708398818969727
    7. '

' → logprob: -10.833398818969727
    8. '   ' → logprob: -11.583398818969727
    9. '
' → logprob: -11.958398818969727
    10. '``' → logprob: -12.208398818969727

Token 934: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35875996947288513
    2. '
' → logprob: -1.2337599992752075
    3. '        
' → logprob: -4.608759880065918
    4. '   ' → logprob: -9.608759880065918
    5. '    
' → logprob: -9.733759880065918
    6. 'roq' → logprob: -9.983759880065918
    7. '

' → logprob: -10.733759880065918
    8. '  
' → logprob: -10.858759880065918
    9. '```' → logprob: -11.108759880065918
    10. '
' → logprob: -11.358759880065918

Token 935: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03714560344815254
    2. '
' → logprob: -3.4121456146240234
    3. '        
' → logprob: -6.162145614624023
    4. 'roq' → logprob: -6.787145614624023
    5. 'ro' → logprob: -9.412145614624023
    6. '   ' → logprob: -9.787145614624023
    7. '```' → logprob: -10.912145614624023
    8. 'import' → logprob: -11.037145614624023
    9. '    
' → logprob: -11.287145614624023
    10. '  
' → logprob: -11.662145614624023

Token 936: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29086676239967346
    2. 'for' → logprob: -2.0408668518066406
    3. ' for' → logprob: -2.2908668518066406
    4. '
' → logprob: -4.165866851806641
    5. 'def' → logprob: -6.790866851806641
    6. '   ' → logprob: -7.040866851806641
    7. '```' → logprob: -7.665866851806641
    8. '           ' → logprob: -7.915866851806641
    9. 'indent' → logprob: -7.915866851806641
    10. ':' → logprob: -8.16586685180664

Token 937: ' the' (ID: 290)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.180756688117981
    2. ''' → logprob: -1.555756688117981
    3. ' the' → logprob: -2.0557565689086914
    4. 'the' → logprob: -2.3057565689086914
    5. ' indentation' → logprob: -2.3057565689086914
    6. 'indent' → logprob: -3.0557565689086914
    7. ' '' → logprob: -3.5557565689086914
    8. ' ' → logprob: -4.305756568908691
    9. '`' → logprob: -4.555756568908691
    10. ' "' → logprob: -4.555756568908691

Token 938: ' unique' (ID: 5746)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.6072741150856018
    2. ' indentation' → logprob: -0.8572741150856018
    3. 'correct' → logprob: -4.732274055480957
    4. ' correct' → logprob: -4.857274055480957
    5. ' indent' → logprob: -5.107274055480957
    6. 'ind' → logprob: -6.232274055480957
    7. ' consistent' → logprob: -6.732274055480957
    8. 'expected' → logprob: -7.357274055480957
    9. 'cal' → logprob: -7.482274055480957
    10. 'computed' → logprob: -7.857274055480957

Token 939: ' indentation' (ID: 170733)
  Prédit: ' indentation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indentation' → logprob: -0.5810211300849915
    2. ' value' → logprob: -2.4560210704803467
    3. 'indent' → logprob: -2.5810210704803467
    4. 'value' → logprob: -2.7060210704803467
    5. ' values' → logprob: -3.2060210704803467
    6. '_' → logprob: -3.8310210704803467
    7. 'values' → logprob: -3.9560210704803467
    8. ')' → logprob: -4.081021308898926
    9. ''' → logprob: -4.081021308898926
    10. '`' → logprob: -4.206021308898926

Token 940: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009955333080142736
    2. '
' → logprob: -7.375995635986328
    3. '        
' → logprob: -8.125995635986328
    4. 'roq' → logprob: -9.750995635986328
    5. '   ' → logprob: -11.500995635986328
    6. '    
' → logprob: -13.875995635986328
    7. '      ' → logprob: -14.375995635986328
    8. '       
' → logprob: -14.750995635986328
    9. '  
' → logprob: -14.750995635986328
    10. '```' → logprob: -15.125995635986328

Token 941: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026537613943219185
    2. '
' → logprob: -3.7765376567840576
    3. '        
' → logprob: -5.7765374183654785
    4. '```' → logprob: -9.401537895202637
    5. '   ' → logprob: -10.026537895202637
    6. '    
' → logprob: -10.651537895202637
    7. '

' → logprob: -11.526537895202637
    8. '  
' → logprob: -11.526537895202637
    9. 'Q' → logprob: -12.526537895202637
    10. '``' → logprob: -13.026537895202637

Token 942: ' ro' (ID: 974)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25231561064720154
    2. 'roq' → logprob: -1.502315640449524
    3. 'ro' (adapté à ' ro') → logprob: -9.002315521240234
    4. '   ' → logprob: -9.127315521240234
    5. '
' → logprob: -10.252315521240234
    6. '        
' → logprob: -10.627315521240234
    7. 'rop' → logprob: -11.002315521240234
    8. 'toq' → logprob: -11.252315521240234
    9. 'raq' → logprob: -11.502315521240234
    10. 'roc' → logprob: -11.752315521240234

Token 943: 'q' (ID: 80)
  Prédit: '_q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.00874386727809906
    2. 'q' → logprob: -4.758743762969971
    3. '_c' → logprob: -9.258744239807129
    4. ' =' → logprob: -11.258744239807129
    5. ',' → logprob: -12.008744239807129
    6. ' _' → logprob: -12.633744239807129
    7. '_' → logprob: -12.633744239807129
    8. '=' → logprob: -13.508744239807129
    9. '_p' → logprob: -14.008744239807129
    10. ' ' → logprob: -14.258744239807129

Token 944: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.12912845611572266
    2. ' =' → logprob: -2.5041284561157227
    3. '_q' → logprob: -3.7541284561157227
    4. '=' → logprob: -4.379128456115723
    5. 'q' → logprob: -6.254128456115723
    6. '_' → logprob: -6.754128456115723
    7. '_ro' → logprob: -9.254128456115723
    8. ',' → logprob: -9.504128456115723
    9. 'c' → logprob: -9.754128456115723
    10. '=_' → logprob: -10.254128456115723

Token 945: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00015097891446202993
    2. 'cum' → logprob: -9.000150680541992
    3. '_um' → logprob: -11.125150680541992
    4. '_c' → logprob: -12.250150680541992
    5. '_' → logprob: -12.500150680541992
    6. '[' → logprob: -13.625150680541992
    7. 'umsum' → logprob: -13.625150680541992
    8. 'c' → logprob: -15.125150680541992
    9. '=' → logprob: -15.250150680541992
    10. ' =' → logprob: -15.250150680541992

Token 946: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693165123462677
    2. ' =' → logprob: -0.693165123462677
    3. '=[' → logprob: -11.318164825439453
    4. ',' → logprob: -12.943164825439453
    5. '_' → logprob: -14.318164825439453
    6. '=[]' → logprob: -14.443164825439453
    7. '   ' → logprob: -14.568164825439453
    8. ' =[' → logprob: -14.693164825439453
    9. ' ' → logprob: -14.943164825439453
    10. '_q' → logprob: -15.318164825439453

Token 947: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9027791495318525e-05
    2. ' [' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.750019073486328
    4. '=[' → logprob: -18.875019073486328
    5. '([' → logprob: -19.375019073486328
    6. '       ' → logprob: -20.500019073486328
    7. ' ' → logprob: -20.500019073486328
    8. '{' → logprob: -21.000019073486328
    9. 'ro' → logprob: -21.500019073486328
    10. '0' → logprob: -21.875019073486328

Token 948: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '[' → logprob: -22.875
    4. '۰' → logprob: -25.125
    5. '   ' → logprob: -25.25
    6. '000' → logprob: -25.875
    7. '０' → logprob: -26.125
    8. '00' → logprob: -26.125
    9. '  ' → logprob: -27.25
    10. 'ro' → logprob: -27.375

Token 949: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20164760947227478
    2. ']
' → logprob: -1.7016476392745972
    3. ']
' → logprob: -9.076647758483887
    4. '0' → logprob: -9.826647758483887
    5. ' ]' → logprob: -10.826647758483887
    6. '],' → logprob: -11.576647758483887
    7. '   ' → logprob: -11.701647758483887
    8. '       ' → logprob: -12.201647758483887
    9. ' ' → logprob: -12.576647758483887
    10. ']

' → logprob: -12.576647758483887

Token 950: '       ' (ID: 309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.17438043653964996
    2. ' rc' → logprob: -2.0493805408477783
    3. '       ' → logprob: -3.5493805408477783
    4. '	rc' → logprob: -6.549380302429199
    5. '   ' → logprob: -7.549380302429199
    6. '(rc' → logprob: -8.1743803024292
    7. '_rc' → logprob: -9.1743803024292
    8. '.rc' → logprob: -10.1743803024292
    9. '      ' → logprob: -10.6743803024292
    10. ' ' → logprob: -10.9243803024292

Token 951: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' (adapté à ' rc') → logprob: -1.0802738870552275e-05
    2. '	rc' → logprob: -12.50001049041748
    3. ' rc' → logprob: -12.50001049041748
    4. 'roc' → logprob: -13.37501049041748
    5. '(rc' → logprob: -14.50001049041748
    6. '_rc' → logprob: -15.00001049041748
    7. 'qc' → logprob: -15.25001049041748
    8. 'r' → logprob: -15.75001049041748
    9. '#' → logprob: -16.000011444091797
    10. '.rc' → logprob: -16.125011444091797

Token 952: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.056809037923812866
    2. '_c' → logprob: -3.0568089485168457
    3. '_q' → logprob: -4.806808948516846
    4. 'c' → logprob: -11.931809425354004
    5. 'cq' → logprob: -12.056809425354004
    6. 'qc' → logprob: -14.306809425354004
    7. 'oq' → logprob: -14.931809425354004
    8. '_' → logprob: -15.931809425354004
    9. '\' → logprob: -16.681808471679688
    10. '	q' → logprob: -17.056808471679688

Token 953: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00012415809032972902
    2. '[' → logprob: -9.750123977661133
    3. 'q' → logprob: -10.000123977661133
    4. '_q' → logprob: -10.875123977661133
    5. 'c' → logprob: -14.375123977661133
    6. '       ' → logprob: -14.875123977661133
    7. '_' → logprob: -16.125123977661133
    8. '[_' → logprob: -16.125123977661133
    9. ' =' → logprob: -16.625123977661133
    10. '[q' → logprob: -16.875123977661133

Token 954: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0041457111947238445
    2. '[' → logprob: -5.504145622253418
    3. 'cum' → logprob: -10.504145622253418
    4. 'q' → logprob: -11.504145622253418
    5. '[q' → logprob: -12.629145622253418
    6. '_c' → logprob: -12.754145622253418
    7. 'umsum' → logprob: -12.879145622253418
    8. '_um' → logprob: -13.004145622253418
    9. '_' → logprob: -13.379145622253418
    10. 'ум' → logprob: -13.504145622253418

Token 955: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18028925359249115
    2. '=' → logprob: -1.8052892684936523
    3. '=[' → logprob: -7.680289268493652
    4. '[' → logprob: -9.805289268493652
    5. '_c' → logprob: -11.930289268493652
    6. 'c' → logprob: -12.055289268493652
    7. ' =[' → logprob: -12.055289268493652
    8. 'q' → logprob: -12.555289268493652
    9. '       ' → logprob: -13.055289268493652
    10. ' ' → logprob: -14.055289268493652

Token 956: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -15.000000953674316
    3. '0' → logprob: -16.25
    4. '{' → logprob: -23.25
    5. '(' → logprob: -23.875
    6. ' ' → logprob: -24.0
    7. '[
' → logprob: -25.125
    8. '=[' → logprob: -25.125
    9. '[...,' → logprob: -25.625
    10. '   ' → logprob: -25.75

Token 957: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078401252627373
    2. '[' → logprob: -5.504078388214111
    3. ' [' → logprob: -17.004077911376953
    4. ' ' → logprob: -17.629077911376953
    5. '{' → logprob: -20.129077911376953
    6. '=' → logprob: -20.254077911376953
    7. '[q' → logprob: -20.254077911376953
    8. '(' → logprob: -20.879077911376953
    9. 'rc' → logprob: -21.379077911376953
    10. 'q' → logprob: -21.379077911376953

Token 958: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5186988115310669
    2. ']' → logprob: -1.143698811531067
    3. '       ' → logprob: -3.2686986923217773
    4. ' =' → logprob: -4.518698692321777
    5. '=[' → logprob: -4.643698692321777
    6. '=' → logprob: -4.768698692321777
    7. ')' → logprob: -5.268698692321777
    8. '(' → logprob: -5.518698692321777
    9. ',' → logprob: -5.643698692321777
    10. ' [' → logprob: -6.643698692321777

Token 959: '       ' (ID: 309)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.01423320360481739
    2. ' co' → logprob: -4.264233112335205
    3. '       ' → logprob: -9.639233589172363
    4. '(co' → logprob: -13.014233589172363
    5. '   ' → logprob: -13.764233589172363
    6. '.co' → logprob: -15.264233589172363
    7. '[' → logprob: -15.389233589172363
    8. '_co' → logprob: -15.514233589172363
    9. 'coe' → logprob: -15.514233589172363
    10. '     ' → logprob: -16.139232635498047

Token 960: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' (adapté à ' co') → logprob: -8.637786231702194e-05
    2. ' co' → logprob: -9.375086784362793
    3. 'caq' → logprob: -14.750086784362793
    4. '.co' → logprob: -15.500086784362793
    5. 'roq' → logprob: -15.750086784362793
    6. '_co' → logprob: -15.750086784362793
    7. 'voq' → logprob: -16.000085830688477
    8. '(co' → logprob: -16.750085830688477
    9. 'coach' → logprob: -17.000085830688477
    10. '```' → logprob: -17.000085830688477

Token 961: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008859075605869293
    2. '_c' → logprob: -4.758859157562256
    3. '_q' → logprob: -8.883858680725098
    4. 'c' → logprob: -9.758858680725098
    5. 'cq' → logprob: -10.508858680725098
    6. 'co' → logprob: -11.008858680725098
    7. 'oq' → logprob: -13.383858680725098
    8. '_co' → logprob: -13.508858680725098
    9. '       ' → logprob: -15.258858680725098
    10. 'qu' → logprob: -15.383858680725098

Token 962: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.4974866644479334e-05
    2. 'q' → logprob: -11.375015258789062
    3. '_q' → logprob: -13.500015258789062
    4. '[' → logprob: -14.250015258789062
    5. ''_' → logprob: -15.375015258789062
    6. ' =' → logprob: -15.500015258789062
    7. '```' → logprob: -15.750015258789062
    8. '       ' → logprob: -15.750015258789062
    9. '=_' → logprob: -16.000015258789062
    10. ']_' → logprob: -16.000015258789062

Token 963: 'um' (ID: 394)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10562048852443695
    2. 'um' → logprob: -2.8556203842163086
    3. '_c' → logprob: -4.105620384216309
    4. 'q' → logprob: -4.230620384216309
    5. '=' → logprob: -5.355620384216309
    6. '=[' → logprob: -6.105620384216309
    7. 'c' → logprob: -6.730620384216309
    8. ' =' → logprob: -6.730620384216309
    9. '[q' → logprob: -6.855620384216309
    10. 'cum' → logprob: -7.355620384216309

Token 964: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1624613255262375
    2. ' =' → logprob: -1.912461280822754
    3. '=[' → logprob: -6.287461280822754
    4. '[' → logprob: -8.162461280822754
    5. '_c' → logprob: -9.537461280822754
    6. ' =[' → logprob: -11.162461280822754
    7. '       ' → logprob: -14.162461280822754
    8. '   ' → logprob: -14.162461280822754
    9. 'c' → logprob: -14.287461280822754
    10. ' ' → logprob: -14.412461280822754

Token 965: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -14.375000953674316
    3. '0' → logprob: -20.25
    4. '{' → logprob: -21.375
    5. '=[' → logprob: -21.375
    6. '(' → logprob: -22.25
    7. '([' → logprob: -22.5
    8. '```' → logprob: -23.5
    9. '\[' → logprob: -23.625
    10. '   ' → logprob: -23.75

Token 966: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003177952254191041
    2. '0' → logprob: -5.753178119659424
    3. ' [' → logprob: -15.378177642822266
    4. '(' → logprob: -18.003177642822266
    5. '{' → logprob: -18.253177642822266
    6. ' ' → logprob: -19.253177642822266
    7. '=' → logprob: -19.628177642822266
    8. ']' → logprob: -20.253177642822266
    9. '```' → logprob: -20.253177642822266
    10. '   ' → logprob: -20.628177642822266

Token 967: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47178125381469727
    2. '=' → logprob: -1.2217812538146973
    3. '=[' → logprob: -2.7217812538146973
    4. ' =' → logprob: -4.346781253814697
    5. '       ' → logprob: -6.596781253814697
    6. 'q' → logprob: -7.721781253814697
    7. '_c' → logprob: -8.346780776977539
    8. 'c' → logprob: -8.471780776977539
    9. '[q' → logprob: -8.471780776977539
    10. ' =[' → logprob: -10.346780776977539

Token 968: '       ' (ID: 309)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0021393168717622757
    2. '       ' → logprob: -6.377139091491699
    3. '[' → logprob: -8.0021390914917
    4. ' cc' → logprob: -9.8771390914917
    5. '	cc' → logprob: -10.2521390914917
    6. '_cc' → logprob: -12.3771390914917
    7. '0' → logprob: -12.7521390914917
    8. '   ' → logprob: -13.3771390914917
    9. ' ' → logprob: -13.6271390914917
    10. '(cc' → logprob: -14.0021390914917

Token 969: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -1.1875571544806007e-05
    2. 'cq' → logprob: -12.000011444091797
    3. ' cc' → logprob: -12.375011444091797
    4. '	cc' → logprob: -13.625011444091797
    5. 'cco' → logprob: -16.375011444091797
    6. 'caq' → logprob: -17.000011444091797
    7. '.cc' → logprob: -18.000011444091797
    8. '_cc' → logprob: -18.000011444091797
    9. '(cc' → logprob: -18.875011444091797
    10. 'xcc' → logprob: -18.875011444091797

Token 970: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6942618489265442
    2. '_c' → logprob: -0.6942618489265442
    3. '_q' → logprob: -6.9442620277404785
    4. '[' → logprob: -8.94426155090332
    5. 'c' → logprob: -11.19426155090332
    6. '[_' → logprob: -12.81926155090332
    7. '[q' → logprob: -13.69426155090332
    8. '[-' → logprob: -14.94426155090332
    9. 'qc' → logprob: -15.44426155090332
    10. ' =' → logprob: -15.69426155090332

Token 971: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00081963452976197
    2. '[' → logprob: -7.250819683074951
    3. 'q' → logprob: -9.625819206237793
    4. ' =' → logprob: -10.625819206237793
    5. '=[' → logprob: -11.750819206237793
    6. '=' → logprob: -12.125819206237793
    7. '_q' → logprob: -12.250819206237793
    8. 'c' → logprob: -14.500819206237793
    9. ' [' → logprob: -15.125819206237793
    10. '   ' → logprob: -15.625819206237793

Token 972: 'um' (ID: 394)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010017074644565582
    2. '_c' → logprob: -4.635016918182373
    3. '=[' → logprob: -9.385017395019531
    4. 'q' → logprob: -9.885017395019531
    5. 'c' → logprob: -10.135017395019531
    6. '=' → logprob: -10.635017395019531
    7. '[-' → logprob: -11.135017395019531
    8. ' =' → logprob: -11.385017395019531
    9. ' [' → logprob: -11.635017395019531
    10. 'cum' → logprob: -11.760017395019531

Token 973: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14604142308235168
    2. ' =' → logprob: -2.0210413932800293
    3. '=[' → logprob: -6.646041393280029
    4. '.append' → logprob: -6.646041393280029
    5. '[' → logprob: -7.646041393280029
    6. '_c' → logprob: -8.271041870117188
    7. ' =[' → logprob: -11.271041870117188
    8. ' [' → logprob: -12.521041870117188
    9. 'c' → logprob: -12.646041870117188
    10. ' ' → logprob: -13.271041870117188

Token 974: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. ' [' → logprob: -12.75000286102295
    3. '0' → logprob: -19.125003814697266
    4. '{' → logprob: -21.125003814697266
    5. ' ' → logprob: -21.625003814697266
    6. '   ' → logprob: -21.750003814697266
    7. '[q' → logprob: -22.000003814697266
    8. '=[' → logprob: -22.125003814697266
    9. ' ' → logprob: -22.750003814697266
    10. '([' → logprob: -22.875003814697266

Token 975: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014171270653605461
    2. '[' → logprob: -4.264171123504639
    3. 'cc' → logprob: -12.389171600341797
    4. ' ' → logprob: -13.014171600341797
    5. ' [' → logprob: -13.639171600341797
    6. '   ' → logprob: -16.514171600341797
    7. 'len' → logprob: -17.639171600341797
    8. '(' → logprob: -17.764171600341797
    9. '[len' → logprob: -18.639171600341797
    10. '[-' → logprob: -18.764171600341797

Token 976: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02707112766802311
    2. '       ' → logprob: -4.027070999145508
    3. ']
' → logprob: -5.277070999145508
    4. ')' → logprob: -6.152070999145508
    5. '[' → logprob: -7.527070999145508
    6. ']=' → logprob: -8.527070999145508
    7. 'q' → logprob: -8.652070999145508
    8. '=' → logprob: -9.027070999145508
    9. '        ' → logprob: -9.402070999145508
    10. '           ' → logprob: -9.652070999145508

Token 977: '       ' (ID: 309)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.0004957250785082579
    2. '       ' → logprob: -7.875495910644531
    3. ' so' → logprob: -9.250495910644531
    4. '   ' → logprob: -11.250495910644531
    5. ' soq' → logprob: -12.500495910644531
    6. ' ' → logprob: -14.000495910644531
    7. '_so' → logprob: -14.500495910644531
    8. '     ' → logprob: -14.875495910644531
    9. '  ' → logprob: -15.375495910644531
    10. '      ' → logprob: -15.500495910644531

Token 978: ' soq' (ID: 162193)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.00012749579036608338
    2. ' soq' → logprob: -9.250127792358398
    3. 'So' → logprob: -11.125127792358398
    4. 'sq' → logprob: -12.500127792358398
    5. 's' → logprob: -13.000127792358398
    6. 'isoq' → logprob: -13.250127792358398
    7. ' so' → logprob: -13.750127792358398
    8. '```' → logprob: -13.875127792358398
    9. '_so' → logprob: -14.125127792358398
    10. 'soz' → logprob: -14.375127792358398

Token 979: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -7.755678961984813e-05
    2. ' =' → logprob: -10.125077247619629
    3. '[' → logprob: -10.750077247619629
    4. '=[' → logprob: -11.750077247619629
    5. '=' → logprob: -12.375077247619629
    6. 'q' → logprob: -13.375077247619629
    7. '_q' → logprob: -13.875077247619629
    8. ' =[' → logprob: -14.750077247619629
    9. '=_' → logprob: -15.750077247619629
    10. '[_' → logprob: -15.750077247619629

Token 980: 'um' (ID: 394)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3096071183681488
    2. '_c' → logprob: -1.5596071481704712
    3. '=' → logprob: -3.4346070289611816
    4. ' =' → logprob: -4.059607028961182
    5. '=[' → logprob: -5.559607028961182
    6. 'q' → logprob: -6.184607028961182
    7. '_q' → logprob: -8.05960750579834
    8. '[q' → logprob: -9.18460750579834
    9. 'c' → logprob: -9.30960750579834
    10. '   ' → logprob: -9.80960750579834

Token 981: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06239582970738411
    2. ' =' → logprob: -2.8123958110809326
    3. '=[' → logprob: -7.812396049499512
    4. '[' → logprob: -10.937396049499512
    5. '<|end|>' → logprob: -12.437396049499512
    6. ' =[' → logprob: -14.187396049499512
    7. '=[
' → logprob: -15.562396049499512
    8. '=[]' → logprob: -15.562396049499512
    9. '.append' → logprob: -15.937396049499512
    10. ')' → logprob: -15.937396049499512

Token 982: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. ' [' → logprob: -12.250004768371582
    3. '0' → logprob: -16.3750057220459
    4. '   ' → logprob: -20.8750057220459
    5. '[
' → logprob: -21.0000057220459
    6. '{' → logprob: -21.0000057220459
    7. '[...,' → logprob: -21.3750057220459
    8. '=[' → logprob: -21.5000057220459
    9. '([' → logprob: -21.5000057220459
    10. ' ' → logprob: -21.7500057220459

Token 983: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005234002135694027
    2. '0' → logprob: -5.2552337646484375
    3. ' [' → logprob: -15.380233764648438
    4. ' ' → logprob: -19.880233764648438
    5. '   ' → logprob: -21.130233764648438
    6. '{' → logprob: -21.380233764648438
    7. '(' → logprob: -22.380233764648438
    8. ']' → logprob: -23.005233764648438
    9. '       ' → logprob: -23.005233764648438
    10. '           ' → logprob: -23.130233764648438

Token 984: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8180970549583435
    2. '[' → logprob: -1.3180971145629883
    3. ']
' → logprob: -1.3180971145629883
    4. ']' → logprob: -3.9430971145629883
    5. ')
' → logprob: -6.318097114562988
    6. '[]
' → logprob: -7.193097114562988
    7. ',' → logprob: -8.193097114562988
    8. '0' → logprob: -8.193097114562988
    9. '      ' → logprob: -8.693097114562988
    10. '=' → logprob: -8.818097114562988

Token 985: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005810771137475967
    2. 'sc' → logprob: -5.880810737609863
    3. '       ' → logprob: -6.130810737609863
    4. ' [' → logprob: -7.255810737609863
    5. ' sc' → logprob: -9.630810737609863
    6. '[s' → logprob: -11.255810737609863
    7. '=sc' → logprob: -11.255810737609863
    8. '(sc' → logprob: -11.380810737609863
    9. '_sc' → logprob: -12.630810737609863
    10. '   ' → logprob: -12.755810737609863

Token 986: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' (adapté à ' sc') → logprob: -2.546478935983032e-05
    2. '(sc' → logprob: -10.750025749206543
    3. '_sc' → logprob: -13.250025749206543
    4. ' sc' → logprob: -14.375025749206543
    5. '-sc' → logprob: -14.750025749206543
    6. 'Sc' → logprob: -14.875025749206543
    7. '.sc' → logprob: -15.375025749206543
    8. 'scss' → logprob: -15.500025749206543
    9. '	sc' → logprob: -15.625025749206543
    10. '=sc' → logprob: -16.875024795532227

Token 987: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0012149984249845147
    2. '_c' → logprob: -7.251214981079102
    3. 'c' → logprob: -7.626214981079102
    4. '_q' → logprob: -11.751214981079102
    5. 'cum' → logprob: -12.126214981079102
    6. '[' → logprob: -13.001214981079102
    7. '[q' → logprob: -14.251214981079102
    8. 'cq' → logprob: -14.751214981079102
    9. 'qc' → logprob: -15.251214981079102
    10. '[c' → logprob: -16.5012149810791

Token 988: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.6405310816480778e-05
    2. '[' → logprob: -11.375016212463379
    3. ' =' → logprob: -12.875016212463379
    4. '=' → logprob: -14.000016212463379
    5. '=[' → logprob: -14.375016212463379
    6. '.append' → logprob: -15.250016212463379
    7. 'c' → logprob: -15.500016212463379
    8. 'q' → logprob: -15.625016212463379
    9. '[_' → logprob: -16.500017166137695
    10. '_q' → logprob: -16.750017166137695

Token 989: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00641573965549469
    2. '[' → logprob: -5.381415843963623
    3. '_c' → logprob: -6.756415843963623
    4. 'cum' → logprob: -7.756415843963623
    5. '_um' → logprob: -9.006415367126465
    6. 'c' → logprob: -11.006415367126465
    7. 'uc' → logprob: -11.631415367126465
    8. '_' → logprob: -11.756415367126465
    9. 'umsum' → logprob: -11.881415367126465
    10. 'sc' → logprob: -12.381415367126465

Token 990: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38733211159706116
    2. '=' → logprob: -1.1373320817947388
    3. '=[' → logprob: -7.887331962585449
    4. ' =[' → logprob: -9.63733196258545
    5. '.append' → logprob: -11.13733196258545
    6. '[' → logprob: -12.51233196258545
    7. '<|end|>' → logprob: -14.38733196258545
    8. '=[]' → logprob: -14.63733196258545
    9. ' ' → logprob: -15.26233196258545
    10. '   ' → logprob: -16.137332916259766

Token 991: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ' [' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.250001907348633
    4. '0' → logprob: -19.875001907348633
    5. '=[' → logprob: -20.500001907348633
    6. ' ' → logprob: -21.000001907348633
    7. '([' → logprob: -21.375001907348633
    8. '       ' → logprob: -21.750001907348633
    9. '{' → logprob: -22.750001907348633
    10. '  ' → logprob: -22.875001907348633

Token 992: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014164687134325504
    2. '0' → logprob: -4.264164924621582
    3. ' [' → logprob: -13.639164924621582
    4. ' ' → logprob: -18.514163970947266
    5. '   ' → logprob: -19.889163970947266
    6. '{' → logprob: -20.264163970947266
    7. ']' → logprob: -20.639163970947266
    8. '[
' → logprob: -21.264163970947266
    9. '       ' → logprob: -21.639163970947266
    10. '(' → logprob: -21.639163970947266

Token 993: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10312099754810333
    2. '[' → logprob: -2.603121042251587
    3. '.append' → logprob: -4.228120803833008
    4. '       ' → logprob: -5.728120803833008
    5. '].' → logprob: -6.103120803833008
    6. '=' → logprob: -6.853120803833008
    7. '0' → logprob: -7.603120803833008
    8. ')' → logprob: -7.853120803833008
    9. '=[' → logprob: -7.853120803833008
    10. ' =' → logprob: -8.103120803833008

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38720738887786865
    2. 'for' → logprob: -1.1372073888778687
    3. '   ' → logprob: -8.13720703125
    4. ' for' → logprob: -10.13720703125
    5. '```' → logprob: -13.38720703125
    6. '	for' → logprob: -13.63720703125
    7. 'For' → logprob: -14.76220703125
    8. '           ' → logprob: -14.88720703125
    9. '<|end|>' → logprob: -15.26220703125
    10. '     ' → logprob: -16.01220703125

Token 995: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.531315314830863e-06
    2. '       ' → logprob: -12.750003814697266
    3. ' for' → logprob: -14.625003814697266
    4. '```' → logprob: -16.250003814697266
    5. '   ' → logprob: -19.625003814697266
    6. '	for' → logprob: -20.500003814697266
    7. '``' → logprob: -20.625003814697266
    8. '           ' → logprob: -21.375003814697266
    9. 'For' → logprob: -22.625003814697266
    10. '`' → logprob: -22.750003814697266

Token 996: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0003361774142831564
    2. ' line' → logprob: -8.000336647033691
    3. 'q' → logprob: -14.125336647033691
    4. '_line' → logprob: -18.000335693359375
    5. 'ch' → logprob: -18.125335693359375
    6. '	line' → logprob: -18.625335693359375
    7. '(line' → logprob: -19.000335693359375
    8. 'l' → logprob: -19.125335693359375
    9. 'Q' → logprob: -19.250335693359375
    10. 'ql' → logprob: -19.625335693359375

Token 997: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011709370883181691
    2. 'in' → logprob: -6.751171112060547
    3. '       ' → logprob: -15.751171112060547
    4. 'Q' → logprob: -15.876171112060547
    5. '   ' → logprob: -16.001171112060547
    6. '_in' → logprob: -16.501171112060547
    7. 'q' → logprob: -16.501171112060547
    8. '	in' → logprob: -16.876171112060547
    9. ' ' → logprob: -17.001171112060547
    10. 's' → logprob: -17.126171112060547

Token 998: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0004886920796707273
    2. ' Q' → logprob: -7.625488758087158
    3. 'range' → logprob: -14.25048828125
    4. '_Q' → logprob: -17.75048828125
    5. ' range' → logprob: -18.00048828125
    6. 'input' → logprob: -18.25048828125
    7. '(Q' → logprob: -18.37548828125
    8. 'line' → logprob: -18.37548828125
    9. '	Q' → logprob: -18.37548828125
    10. ' ' → logprob: -19.00048828125

Token 999: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45633092522621155
    2. '           ' → logprob: -1.5813308954238892
    3. ':
' → logprob: -1.8313308954238892
    4. '       ' → logprob: -8.456331253051758
    5. '=' → logprob: -9.706331253051758
    6. '):
' → logprob: -9.831331253051758
    7. ',' → logprob: -10.581331253051758
    8. ' =' → logprob: -10.956331253051758
    9. '   ' → logprob: -11.456331253051758
    10. '{
' → logprob: -11.456331253051758

Token 1000: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.229872087715194e-05
    2. '   ' → logprob: -9.875061988830566
    3. '```' → logprob: -12.250061988830566
    4. '       ' → logprob: -12.375061988830566
    5. '
' → logprob: -14.750061988830566
    6. '#' → logprob: -14.750061988830566
    7. '            
' → logprob: -16.125062942504883
    8. '	       ' → logprob: -16.250062942504883
    9. '          ' → logprob: -16.250062942504883
    10. '               ' → logprob: -16.500062942504883

Token 1001: ' ro' (ID: 974)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' (adapté à ' ro') → logprob: -0.0013332172529771924
    2. '           ' → logprob: -6.751333236694336
    3. '               ' → logprob: -9.626333236694336
    4. '       ' → logprob: -9.751333236694336
    5. ' ro' → logprob: -10.376333236694336
    6. '   ' → logprob: -12.126333236694336
    7. '_ro' → logprob: -14.251333236694336
    8. 'rop' → logprob: -14.626333236694336
    9. '(ro' → logprob: -14.876333236694336
    10. '```' → logprob: -15.626333236694336

Token 1002: ',' (ID: 11)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3278772532939911
    2. ',' → logprob: -1.7028772830963135
    3. ' =' → logprob: -2.5778772830963135
    4. '_q' → logprob: -4.452877044677734
    5. '_c' → logprob: -5.702877044677734
    6. '=' → logprob: -5.952877044677734
    7. '           ' → logprob: -6.702877044677734
    8. ' +=' → logprob: -6.952877044677734
    9. '_count' → logprob: -8.202877044677734
    10. '_,' → logprob: -8.952877044677734

Token 1003: ' rc' (ID: 23309)
  Prédit: ' rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rc' → logprob: -0.0006334475474432111
    2. 'rc' → logprob: -7.375633239746094
    3. '_rc' → logprob: -12.625633239746094
    4. '(rc' → logprob: -13.125633239746094
    5. '	rc' → logprob: -14.000633239746094
    6. '.rc' → logprob: -14.750633239746094
    7. ' ' → logprob: -16.125633239746094
    8. ' RC' → logprob: -16.500633239746094
    9. ' ' → logprob: -16.750633239746094
    10. '<|end|>' → logprob: -17.125633239746094

Token 1004: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2551095485687256
    2. '_c' → logprob: -1.5051095485687256
    3. '           ' → logprob: -6.880109786987305
    4. '=' → logprob: -7.005109786987305
    5. ' ,' → logprob: -7.630109786987305
    6. '_,' → logprob: -7.755109786987305
    7. ' =' → logprob: -8.630109786987305
    8. ',c' → logprob: -9.380109786987305
    9. ',_' → logprob: -11.005109786987305
    10. ')' → logprob: -12.005109786987305

Token 1005: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.6937227249145508
    2. ' co' → logprob: -0.6937227249145508
    3. 'cc' → logprob: -7.568722724914551
    4. ' cc' → logprob: -9.94372272491455
    5. 'rc' → logprob: -11.94372272491455
    6. ' rc' → logprob: -13.31872272491455
    7. '.co' → logprob: -14.81872272491455
    8. '_co' → logprob: -14.81872272491455
    9. '       ' → logprob: -15.06872272491455
    10. '           ' → logprob: -15.19372272491455

Token 1006: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019185843120794743
    2. ' ,' → logprob: -8.875191688537598
    3. '           ' → logprob: -10.500191688537598
    4. '_,' → logprob: -11.125191688537598
    5. ',c' → logprob: -12.375191688537598
    6. '=' → logprob: -12.875191688537598
    7. ',
' → logprob: -14.375191688537598
    8. '`,' → logprob: -14.750191688537598
    9. 'cc' → logprob: -14.875191688537598
    10. '_cc' → logprob: -14.875191688537598

Token 1007: ' cc' (ID: 22988)
  Prédit: ' cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.5759403705596924
    2. 'cc' → logprob: -0.8259403705596924
    3. '	cc' → logprob: -14.075940132141113
    4. '_cc' → logprob: -16.45094108581543
    5. '(cc' → logprob: -17.20094108581543
    6. '```' → logprob: -18.57594108581543
    7. '.cc' → logprob: -19.70094108581543
    8. 'cco' → logprob: -20.07594108581543
    9. ' ' → logprob: -20.45094108581543
    10. 'co' → logprob: -20.45094108581543

Token 1008: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004079112783074379
    2. '=' → logprob: -6.379079341888428
    3. '           ' → logprob: -6.504079341888428
    4. ' =' → logprob: -8.12907886505127
    5. '=sc' → logprob: -8.25407886505127
    6. ' ,' → logprob: -8.37907886505127
    7. 'sc' → logprob: -10.00407886505127
    8. ' sc' → logprob: -10.87907886505127
    9. '_,' → logprob: -12.12907886505127
    10. '          ' → logprob: -12.50407886505127

Token 1009: ' so' (ID: 813)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.011145912110805511
    2. ' sc' → logprob: -5.011146068572998
    3. 'so' → logprob: -5.511146068572998
    4. ' so' → logprob: -7.886146068572998
    5. '	sc' → logprob: -14.26114559173584
    6. '       ' → logprob: -14.51114559173584
    7. '(sc' → logprob: -14.76114559173584
    8. '=sc' → logprob: -14.88614559173584
    9. 'cs' → logprob: -15.26114559173584
    10. '   ' → logprob: -15.38614559173584

Token 1010: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025365356355905533
    2. '=' → logprob: -3.7753653526306152
    3. ' =' → logprob: -6.775365352630615
    4. '           ' → logprob: -7.650365352630615
    5. ' ,' → logprob: -7.900365352630615
    6. '_,' → logprob: -9.525365829467773
    7. '_' → logprob: -11.400365829467773
    8. '_c' → logprob: -11.650365829467773
    9. '_sc' → logprob: -11.775365829467773
    10. '=sc' → logprob: -12.025365829467773

Token 1011: ' sc' (ID: 1460)
  Prédit: ' sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sc' → logprob: -0.38687315583229065
    2. 'sc' → logprob: -1.1368731260299683
    3. '(sc' → logprob: -14.136873245239258
    4. '	sc' → logprob: -14.261873245239258
    5. '=sc' → logprob: -14.511873245239258
    6. '_sc' → logprob: -15.636873245239258
    7. 's' → logprob: -16.886873245239258
    8. '.sc' → logprob: -17.511873245239258
    9. 'Sc' → logprob: -17.636873245239258
    10. 'c' → logprob: -19.511873245239258

Token 1012: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12757931649684906
    2. '=' → logprob: -2.1275792121887207
    3. '           ' → logprob: -7.377579212188721
    4. '_ro' → logprob: -10.877579689025879
    5. '=sc' → logprob: -13.627579689025879
    6. '       ' → logprob: -14.002579689025879
    7. '               ' → logprob: -14.127579689025879
    8. '            ' → logprob: -14.377579689025879
    9. 'ro' → logprob: -14.502579689025879
    10. '          ' → logprob: -14.627579689025879

Token 1013: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.339278580620885e-06
    2. ' count' → logprob: -13.000001907348633
    3. '	count' → logprob: -26.375001907348633
    4. '   ' → logprob: -26.750001907348633
    5. '.count' → logprob: -27.500001907348633
    6. '(count' → logprob: -27.750001907348633
    7. ' ' → logprob: -28.250001907348633
    8. '[count' → logprob: -28.375001907348633
    9. 'counts' → logprob: -28.625001907348633
    10. 'code' → logprob: -28.875001907348633

Token 1014: '_br' (ID: 33624)
  Prédit: '_br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_br' → logprob: -0.0010727039771154523
    2. '(line' → logprob: -7.126072883605957
    3. 'br' → logprob: -8.376072883605957
    4. 'Br' → logprob: -11.126072883605957
    5. '(' → logprob: -12.126072883605957
    6. 'line' → logprob: -12.376072883605957
    7. '_' → logprob: -12.626072883605957
    8. ')' → logprob: -12.876072883605957
    9. '(br' → logprob: -13.376072883605957
    10. '[line' → logprob: -13.376072883605957

Token 1015: 'ackets' (ID: 42290)
  Prédit: 'ackets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ackets' → logprob: -0.000918008794542402
    2. 'r' → logprob: -7.375917911529541
    3. 'ack' → logprob: -9.1259183883667
    4. 'quets' → logprob: -9.5009183883667
    5. 'q' → logprob: -9.6259183883667
    6. 'ck' → logprob: -11.2509183883667
    7. 'ro' → logprob: -12.3759183883667
    8. 'acket' → logprob: -12.5009183883667
    9. 'quests' → logprob: -12.5009183883667
    10. 'ockets' → logprob: -12.7509183883667

Token 1016: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0003971839905716479
    2. 'line' → logprob: -8.125396728515625
    3. ' line' → logprob: -10.000396728515625
    4. '           ' → logprob: -10.750396728515625
    5. '[line' → logprob: -10.750396728515625
    6. '=line' → logprob: -11.750396728515625
    7. ',line' → logprob: -12.875396728515625
    8. '#line' → logprob: -14.125396728515625
    9. '(' → logprob: -14.750396728515625
    10. ')' → logprob: -15.250396728515625

Token 1017: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003850325592793524
    2. ')
' → logprob: -8.500385284423828
    3. ')' → logprob: -8.750385284423828
    4. '<|end|>' → logprob: -12.375385284423828
    5. ',' → logprob: -12.500385284423828
    6. '          ' → logprob: -12.625385284423828
    7. '):
' → logprob: -13.250385284423828
    8. '       ' → logprob: -13.375385284423828
    9. '<|end|>' → logprob: -13.500385284423828
    10. '               ' → logprob: -13.875385284423828

Token 1018: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.1008713702030946e-06
    2. '   ' → logprob: -13.875001907348633
    3. '       ' → logprob: -14.875001907348633
    4. '```' → logprob: -15.625001907348633
    5. '
' → logprob: -15.875001907348633
    6. '          ' → logprob: -16.000001907348633
    7. ' ro' → logprob: -16.375001907348633
    8. 'ro' → logprob: -16.375001907348633
    9. ' ' → logprob: -16.750001907348633
    10. '               ' → logprob: -17.000001907348633

Token 1019: ' ro' (ID: 974)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010731808142736554
    2. 'ro' (adapté à ' ro') → logprob: -7.001073360443115
    3. ' ro' → logprob: -9.126072883605957
    4. '   ' → logprob: -10.376072883605957
    5. ' ' → logprob: -11.251072883605957
    6. '       ' → logprob: -12.376072883605957
    7. 'roq' → logprob: -13.251072883605957
    8. '               ' → logprob: -13.751072883605957
    9. '          ' → logprob: -14.751072883605957
    10. '  ' → logprob: -15.126072883605957

Token 1020: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03162609413266182
    2. '_c' → logprob: -3.531625986099243
    3. '_q' → logprob: -6.281626224517822
    4. 'c' → logprob: -12.781625747680664
    5. 'Q' → logprob: -14.906625747680664
    6. '_' → logprob: -16.406625747680664
    7. 'oq' → logprob: -16.656625747680664
    8. 'r' → logprob: -17.406625747680664
    9. '_ro' → logprob: -17.906625747680664
    10. 'o' → logprob: -18.281625747680664

Token 1021: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.0339031834737398e-05
    2. '_q' → logprob: -11.250020027160645
    3. 'q' → logprob: -11.875020027160645
    4. '_' → logprob: -15.750020027160645
    5. '[' → logprob: -16.87502098083496
    6. '.append' → logprob: -16.87502098083496
    7. '._' → logprob: -17.25002098083496
    8. '       ' → logprob: -18.00002098083496
    9. '_ro' → logprob: -18.00002098083496
    10. ' _' → logprob: -18.37502098083496

Token 1022: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.05737379565834999
    2. 'cum' → logprob: -3.5573737621307373
    3. '_c' → logprob: -3.6823737621307373
    4. 'c' → logprob: -6.432374000549316
    5. 'q' → logprob: -8.432374000549316
    6. '[' → logprob: -9.807374000549316
    7. 'umul' → logprob: -10.182374000549316
    8. 'umsum' → logprob: -10.182374000549316
    9. 'umulative' → logprob: -10.932374000549316
    10. 'uc' → logprob: -11.432374000549316

Token 1023: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0025704256258904934
    2. 'q' → logprob: -6.002570629119873
    3. 'oq' → logprob: -10.002570152282715
    4. '[-' → logprob: -11.502570152282715
    5. '           ' → logprob: -11.627570152282715
    6. '.' → logprob: -12.002570152282715
    7. '       ' → logprob: -12.002570152282715
    8. ' .' → logprob: -12.127570152282715
    9. 'append' → logprob: -12.752570152282715
    10. 'c' → logprob: -13.627570152282715

Token 1024: '(' (ID: 7)
  Prédit: 'roq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roq' → logprob: -0.022247975692152977
    2. '(' → logprob: -4.147247791290283
    3. ' ro' → logprob: -5.397247791290283
    4. '(ro' → logprob: -7.022247791290283
    5. 'ro' → logprob: -8.147248268127441
    6. '[' → logprob: -9.022248268127441
    7. '   ' → logprob: -9.272248268127441
    8. ' ' → logprob: -9.772248268127441
    9. '_ro' → logprob: -10.522248268127441
    10. '{' → logprob: -10.647248268127441

Token 1025: 'roq' (ID: 188502)
  Prédit: 'roq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roq' → logprob: -0.006737750489264727
    2. ' ro' → logprob: -5.00673770904541
    3. 'ro' → logprob: -11.88173770904541
    4. ' ' → logprob: -12.63173770904541
    5. '_ro' → logprob: -13.25673770904541
    6. '   ' → logprob: -13.75673770904541
    7. 'raq' → logprob: -13.88173770904541
    8. 'roc' → logprob: -14.25673770904541
    9. 'rop' → logprob: -14.63173770904541
    10. '`' → logprob: -14.63173770904541

Token 1026: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.17918692529201508
    2. 'q' → logprob: -1.9291869401931763
    3. '_q' → logprob: -4.929186820983887
    4. 'oq' → logprob: -5.179186820983887
    5. 'roq' → logprob: -5.429186820983887
    6. '[q' → logprob: -7.054186820983887
    7. '_' → logprob: -8.179186820983887
    8. '[' → logprob: -9.179186820983887
    9. 'c' → logprob: -9.304186820983887
    10. '[-' → logprob: -10.304186820983887

Token 1027: 'um' (ID: 394)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7023131251335144
    2. '_c' → logprob: -0.7023131251335144
    3. '[' → logprob: -5.70231294631958
    4. 'c' → logprob: -6.07731294631958
    5. '_q' → logprob: -7.20231294631958
    6. 'm' → logprob: -7.32731294631958
    7. 'um' → logprob: -7.57731294631958
    8. '[q' → logprob: -7.57731294631958
    9. 'oq' → logprob: -8.202313423156738
    10. 'cum' → logprob: -8.327313423156738

Token 1028: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '[' → logprob: -19.875
    3. '   ' → logprob: -20.375
    4. '[
' → logprob: -20.5
    5. ' [-' → logprob: -20.875
    6. '-' → logprob: -21.875
    7. '[:-' → logprob: -22.5
    8. ' ' → logprob: -22.75
    9. '
' → logprob: -23.125
    10. '][-' → logprob: -23.375

Token 1029: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '0' → logprob: -16.875
    4. '```' → logprob: -18.625
    5. '
' → logprob: -19.4375
    6. '-' → logprob: -19.625
    7. '`' → logprob: -20.0
    8. '   ' → logprob: -20.0625
    9. '(' → logprob: -20.0625
    10. 'ro' → logprob: -20.5625

Token 1030: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018150178715586662
    2. '+' → logprob: -4.018150329589844
    3. ' ' → logprob: -16.268150329589844
    4. ' ' → logprob: -17.018150329589844
    5. ')' → logprob: -17.268150329589844
    6. ' +
' → logprob: -17.268150329589844
    7. ')+' → logprob: -17.893150329589844
    8. '[' → logprob: -18.768150329589844
    9. ' plus' → logprob: -18.768150329589844
    10. '   ' → logprob: -19.018150329589844

Token 1031: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2014143168926239
    2. '+' → logprob: -1.7014143466949463
    3. ' ' → logprob: -15.201414108276367
    4. ' +
' → logprob: -15.451414108276367
    5. '+
' → logprob: -16.076414108276367
    6. ' ro' → logprob: -16.326414108276367
    7. '[' → logprob: -16.326414108276367
    8. '   ' → logprob: -16.951414108276367
    9. ')+' → logprob: -17.076414108276367
    10. '
' → logprob: -17.201414108276367

Token 1032: ' ro' (ID: 974)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -6.2729995988775045e-06
    2. ' ro' → logprob: -12.000006675720215
    3. '(ro' → logprob: -17.3750057220459
    4. 'ро' → logprob: -18.6250057220459
    5. '_ro' → logprob: -18.7500057220459
    6. 'roq' → logprob: -19.1250057220459
    7. ' ' → logprob: -19.2500057220459
    8. 'rop' → logprob: -19.5000057220459
    9. '   ' → logprob: -20.0000057220459
    10. 'Ro' → logprob: -20.0000057220459

Token 1033: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005312139168381691
    2. ')' → logprob: -5.255311965942383
    3. '           ' → logprob: -9.880311965942383
    4. '       ' → logprob: -10.880311965942383
    5. ')
' → logprob: -12.505311965942383
    6. '   ' → logprob: -13.380311965942383
    7. ' )
' → logprob: -13.380311965942383
    8. '               ' → logprob: -14.755311965942383
    9. '          ' → logprob: -15.505311965942383
    10. '),' → logprob: -15.505311965942383

Token 1034: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16122590005397797
    2. 'rc' → logprob: -1.9112259149551392
    3. '          ' → logprob: -7.66122579574585
    4. '       ' → logprob: -8.286226272583008
    5. ' rc' → logprob: -8.411226272583008
    6. '         ' → logprob: -11.161226272583008
    7. '               ' → logprob: -11.411226272583008
    8. '	rc' → logprob: -12.036226272583008
    9. '   ' → logprob: -12.161226272583008
    10. '            ' → logprob: -12.161226272583008

Token 1035: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' (adapté à ' rc') → logprob: -6.704273118884885e-07
    2. ' rc' → logprob: -14.500000953674316
    3. '	rc' → logprob: -16.25
    4. '       ' → logprob: -18.5
    5. '_rc' → logprob: -18.5
    6. '   ' → logprob: -18.625
    7. '(rc' → logprob: -19.0
    8. '.rc' → logprob: -19.125
    9. '  ' → logprob: -20.25
    10. '           ' → logprob: -21.125

Token 1036: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0004108924185857177
    2. '_c' → logprob: -7.875411033630371
    3. 'c' → logprob: -10.750411033630371
    4. '_q' → logprob: -12.250411033630371
    5. 'qc' → logprob: -13.000411033630371
    6. 'rc' → logprob: -13.125411033630371
    7. '_rc' → logprob: -15.500411033630371
    8. 'cq' → logprob: -17.000410079956055
    9. '```' → logprob: -17.500410079956055
    10. '	q' → logprob: -18.250410079956055

Token 1037: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0059761968441307545
    2. 'q' → logprob: -5.13097620010376
    3. 'c' → logprob: -10.130975723266602
    4. 'sc' → logprob: -12.505975723266602
    5. 'rc' → logprob: -13.255975723266602
    6. '_q' → logprob: -14.130975723266602
    7. 'qc' → logprob: -15.005975723266602
    8. 'cq' → logprob: -15.130975723266602
    9. '_rc' → logprob: -15.255975723266602
    10. '_sc' → logprob: -15.255975723266602

Token 1038: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.7301434874534607
    2. 'um' → logprob: -0.9801434874534607
    3. 'cum' → logprob: -2.4801435470581055
    4. 'q' → logprob: -2.9801435470581055
    5. 'c' → logprob: -4.8551435470581055
    6. 'uc' → logprob: -8.605143547058105
    7. 'sc' → logprob: -8.605143547058105
    8. '[' → logprob: -9.855143547058105
    9. 'qu' → logprob: -9.980143547058105
    10. 'qc' → logprob: -10.355143547058105

Token 1039: '.append' (ID: 3709)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.776824414730072
    2. 'rc' → logprob: -1.2768244743347168
    3. '.append' → logprob: -1.5268244743347168
    4. '_rc' → logprob: -3.651824474334717
    5. '[-' → logprob: -4.401824474334717
    6. '.rc' → logprob: -6.026824474334717
    7. ' rc' → logprob: -6.401824474334717
    8. '(rc' → logprob: -6.776824474334717
    9. '	rc' → logprob: -8.526823997497559
    10. '   ' → logprob: -8.776823997497559

Token 1040: '(rc' (ID: 83646)
  Prédit: '(rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rc' → logprob: -0.048604849725961685
    2. 'rc' → logprob: -3.048604965209961
    3. ' rc' → logprob: -11.173604965209961
    4. '	rc' → logprob: -13.423604965209961
    5. '_rc' → logprob: -14.173604965209961
    6. '.rc' → logprob: -14.173604965209961
    7. '[' → logprob: -14.923604965209961
    8. 'Rc' → logprob: -16.92360496520996
    9. 'RC' → logprob: -17.17360496520996
    10. '{' → logprob: -18.67360496520996

Token 1041: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0009929145453497767
    2. '_c' → logprob: -7.000992774963379
    3. 'qc' → logprob: -10.125992774963379
    4. 'c' → logprob: -10.500992774963379
    5. '_q' → logprob: -11.375992774963379
    6. 'rc' → logprob: -13.250992774963379
    7. 'cq' → logprob: -15.250992774963379
    8. 'sc' → logprob: -15.375992774963379
    9. '_rc' → logprob: -16.250993728637695
    10. '_sc' → logprob: -16.750993728637695

Token 1042: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0012749963207170367
    2. 'q' → logprob: -7.001275062561035
    3. 'c' → logprob: -8.126275062561035
    4. '[-' → logprob: -10.626275062561035
    5. '[' → logprob: -10.876275062561035
    6. 'rc' → logprob: -10.876275062561035
    7. '_q' → logprob: -13.626275062561035
    8. 'qc' → logprob: -13.876275062561035
    9. 'sc' → logprob: -14.001275062561035
    10. '_sc' → logprob: -14.626275062561035

Token 1043: 'um' (ID: 394)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04244658350944519
    2. 'um' → logprob: -3.6674466133117676
    3. '[-' → logprob: -4.667446613311768
    4. '_c' → logprob: -5.167446613311768
    5. '[' → logprob: -7.917446613311768
    6. 'c' → logprob: -8.04244613647461
    7. 'm' → logprob: -9.79244613647461
    8. '_m' → logprob: -10.16744613647461
    9. 'uc' → logprob: -10.16744613647461
    10. '_q' → logprob: -10.29244613647461

Token 1044: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.816093228830141e-06
    2. '_c' → logprob: -12.87500286102295
    3. 'c' → logprob: -16.750001907348633
    4. '][-' → logprob: -17.375001907348633
    5. '_sc' → logprob: -18.000001907348633
    6. 'q' → logprob: -18.000001907348633
    7. '[:-' → logprob: -18.125001907348633
    8. '#' → logprob: -18.500001907348633
    9. '       ' → logprob: -18.625001907348633
    10. '```' → logprob: -18.750001907348633

Token 1045: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38708531856536865
    2. '-' → logprob: -1.1370853185653687
    3. '[-' → logprob: -8.5120849609375
    4. 'q' → logprob: -11.3870849609375
    5. '−' → logprob: -14.5120849609375
    6. '-q' → logprob: -14.6370849609375
    7. ' -' → logprob: -15.3870849609375
    8. '```' → logprob: -15.5120849609375
    9. '][-' → logprob: -16.0120849609375
    10. '(-' → logprob: -16.1370849609375

Token 1046: ']' (ID: 60)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.16340793669223785
    2. ' +' → logprob: -2.288408041000366
    3. '+' → logprob: -3.663408041000366
    4. '[' → logprob: -3.788408041000366
    5. '           ' → logprob: -7.163407802581787
    6. ')' → logprob: -9.913408279418945
    7. ' [-' → logprob: -10.038408279418945
    8. '`' → logprob: -10.288408279418945
    9. '...' → logprob: -11.038408279418945
    10. '```' → logprob: -11.288408279418945

Token 1047: ' +' (ID: 659)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.020030124112963676
    2. 'rc' → logprob: -4.1450300216674805
    3. '[' → logprob: -5.7700300216674805
    4. '+' → logprob: -7.3950300216674805
    5. '(rc' → logprob: -9.77003002166748
    6. ' rc' → logprob: -10.14503002166748
    7. 'sc' → logprob: -10.14503002166748
    8. '_rc' → logprob: -10.52003002166748
    9. 'cc' → logprob: -10.77003002166748
    10. 'pc' → logprob: -11.64503002166748

Token 1048: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -5.512236498361744e-07
    2. ' rc' → logprob: -15.250000953674316
    3. '(rc' → logprob: -16.0
    4. 'qc' → logprob: -16.125
    5. 'sc' → logprob: -17.375
    6. '	rc' → logprob: -17.375
    7. '_rc' → logprob: -17.75
    8. '.rc' → logprob: -18.375
    9. 'rcode' → logprob: -19.125
    10. 'rq' → logprob: -19.25

Token 1049: ')
' (ID: 446)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.008784390985965729
    2. 'cc' → logprob: -5.633784294128418
    3. 'sc' → logprob: -6.383784294128418
    4. '       ' → logprob: -6.383784294128418
    5. '_rc' → logprob: -7.383784294128418
    6. ' rc' → logprob: -8.008784294128418
    7. '           ' → logprob: -8.508784294128418
    8. ')' → logprob: -8.758784294128418
    9. 'c' → logprob: -9.008784294128418
    10. '.rc' → logprob: -9.383784294128418

Token 1050: '           ' (ID: 352)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.12715214490890503
    2. 'co' → logprob: -2.12715220451355
    3. '       ' → logprob: -9.877152442932129
    4. 'cco' → logprob: -9.877152442932129
    5. '	cc' → logprob: -10.252152442932129
    6. '           ' → logprob: -10.377152442932129
    7. ' co' → logprob: -10.752152442932129
    8. ' cc' → logprob: -11.377152442932129
    9. '   ' → logprob: -11.877152442932129
    10. ' ' → logprob: -12.377152442932129

Token 1051: ' co' (ID: 1407)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.000343210413120687
    2. 'rc' → logprob: -8.000343322753906
    3. 'co' (adapté à ' co') → logprob: -12.125343322753906
    4. 'cq' → logprob: -14.375343322753906
    5. 'qc' → logprob: -14.500343322753906
    6. ' cc' → logprob: -14.750343322753906
    7. 'pc' → logprob: -15.125343322753906
    8. 'c' → logprob: -15.250343322753906
    9. '	cc' → logprob: -15.375343322753906
    10. 'cco' → logprob: -16.375343322753906

Token 1052: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. '_q' → logprob: -14.375000953674316
    3. '_c' → logprob: -16.375
    4. 'c' → logprob: -20.875
    5. ' q' → logprob: -21.875
    6. 'qc' → logprob: -22.75
    7. '	q' → logprob: -22.75
    8. '```' → logprob: -23.0
    9. '       ' → logprob: -23.5
    10. 'qu' → logprob: -23.75

Token 1053: '_c' (ID: 1303)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07894685864448547
    2. '_c' → logprob: -2.578946828842163
    3. '_q' → logprob: -9.953947067260742
    4. 'c' → logprob: -11.578947067260742
    5. 'Q' → logprob: -16.703947067260742
    6. '[' → logprob: -17.078947067260742
    7. '       ' → logprob: -17.703947067260742
    8. 'co' → logprob: -18.078947067260742
    9. ' q' → logprob: -18.203947067260742
    10. '	q' → logprob: -18.578947067260742

Token 1054: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.10081148147583008
    2. 'q' → logprob: -2.47581148147583
    3. 'um' → logprob: -5.10081148147583
    4. 'cum' → logprob: -5.60081148147583
    5. 'c' → logprob: -6.35081148147583
    6. 'uc' → logprob: -9.225811004638672
    7. '_q' → logprob: -9.350811004638672
    8. 'qu' → logprob: -11.100811004638672
    9. 'oc' → logprob: -11.225811004638672
    10. '[' → logprob: -11.600811004638672

Token 1055: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.327856630785391e-05
    2. 'append' → logprob: -10.000082969665527
    3. '[' → logprob: -10.375082969665527
    4. '[-' → logprob: -13.125082969665527
    5. '.extend' → logprob: -13.750082969665527
    6. 'co' → logprob: -13.875082969665527
    7. '=' → logprob: -14.375082969665527
    8. 'app' → logprob: -14.750082969665527
    9. '_co' → logprob: -14.875082969665527
    10. '_c' → logprob: -15.125082969665527

Token 1056: '(co' (ID: 41772)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.0788913294672966
    2. '(co' → logprob: -2.5788912773132324
    3. ' co' → logprob: -14.20389175415039
    4. '[' → logprob: -14.20389175415039
    5. '   ' → logprob: -16.70389175415039
    6. '
' → logprob: -16.82889175415039
    7. '_co' → logprob: -17.70389175415039
    8. '       ' → logprob: -17.95389175415039
    9. 'cq' → logprob: -18.32889175415039
    10. '=' → logprob: -18.32889175415039

Token 1057: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.999452772201039e-05
    2. '_c' → logprob: -10.500029563903809
    3. '_q' → logprob: -13.250029563903809
    4. 'c' → logprob: -14.875029563903809
    5. 'qc' → logprob: -15.875029563903809
    6. 'qu' → logprob: -16.625030517578125
    7. 'cum' → logprob: -18.125030517578125
    8. '
' → logprob: -18.375030517578125
    9. '-c' → logprob: -19.125030517578125
    10. '=' → logprob: -19.250030517578125

Token 1058: '_c' (ID: 1303)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0001450187264708802
    2. '_c' → logprob: -9.125144958496094
    3. 'c' → logprob: -10.875144958496094
    4. '_q' → logprob: -11.625144958496094
    5. 'qu' → logprob: -12.250144958496094
    6. 'qc' → logprob: -13.375144958496094
    7. 'cq' → logprob: -13.875144958496094
    8. 'co' → logprob: -15.250144958496094
    9. '[q' → logprob: -15.750144958496094
    10. 'oq' → logprob: -16.250144958496094

Token 1059: 'um' (ID: 394)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0021685787942260504
    2. 'um' → logprob: -6.877168655395508
    3. 'qu' → logprob: -7.627168655395508
    4. 'cum' → logprob: -8.252168655395508
    5. '_c' → logprob: -8.377168655395508
    6. 'c' → logprob: -9.752168655395508
    7. 'uc' → logprob: -10.252168655395508
    8. '_q' → logprob: -10.752168655395508
    9. 'uq' → logprob: -11.252168655395508
    10. 'qc' → logprob: -12.127168655395508

Token 1060: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00852379109710455
    2. 'q' → logprob: -5.133523941040039
    3. '[' → logprob: -6.383523941040039
    4. '_c' → logprob: -7.133523941040039
    5. 'c' → logprob: -10.133523941040039
    6. 'co' → logprob: -10.383523941040039
    7. 'qu' → logprob: -11.383523941040039
    8. '_q' → logprob: -12.133523941040039
    9. 'cc' → logprob: -12.258523941040039
    10. '       ' → logprob: -12.258523941040039

Token 1061: '1' (ID: 16)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2596653699874878
    2. 'c' → logprob: -1.8846653699874878
    3. 'cum' → logprob: -3.2596654891967773
    4. 'cc' → logprob: -4.009665489196777
    5. '_c' → logprob: -4.884665489196777
    6. 'rc' → logprob: -5.259665489196777
    7. 'cq' → logprob: -5.884665489196777
    8. 'qc' → logprob: -6.634665489196777
    9. '[-' → logprob: -7.509665489196777
    10. '1' → logprob: -7.509665489196777

Token 1062: ']' (ID: 60)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002858881198335439
    2. '_c' → logprob: -8.750286102294922
    3. 'q' → logprob: -9.250286102294922
    4. '[' → logprob: -11.125286102294922
    5. '][-' → logprob: -12.000286102294922
    6. ' [-' → logprob: -12.875286102294922
    7. '_q' → logprob: -13.500286102294922
    8. '+' → logprob: -13.750286102294922
    9. '           ' → logprob: -13.875286102294922
    10. 'c' → logprob: -13.875286102294922

Token 1063: ' +' (ID: 659)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.5791252851486206
    2. '[' → logprob: -0.9541252851486206
    3. '-' → logprob: -3.82912540435791
    4. 'co' → logprob: -4.32912540435791
    5. '[-' → logprob: -4.57912540435791
    6. '_cc' → logprob: -6.20412540435791
    7. 'c' → logprob: -6.45412540435791
    8. '-c' → logprob: -6.57912540435791
    9. '-co' → logprob: -6.70412540435791
    10. '_c' → logprob: -7.20412540435791

Token 1064: ' co' (ID: 1407)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0016413808334618807
    2. 'co' → logprob: -6.501641273498535
    3. 'cq' → logprob: -9.251641273498535
    4. 'qc' → logprob: -10.626641273498535
    5. 'rc' → logprob: -11.376641273498535
    6. 'c' → logprob: -12.376641273498535
    7. ' cc' → logprob: -13.501641273498535
    8. 'cco' → logprob: -13.876641273498535
    9. '	cc' → logprob: -15.001641273498535
    10. '_cc' → logprob: -15.751641273498535

Token 1065: ')
' (ID: 446)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.034933652728796005
    2. 'q' → logprob: -3.909933567047119
    3. '       ' → logprob: -5.159933567047119
    4. 'qc' → logprob: -5.409933567047119
    5. 'co' → logprob: -6.534933567047119
    6. '           ' → logprob: -7.534933567047119
    7. '_cc' → logprob: -7.784933567047119
    8. '[' → logprob: -7.909933567047119
    9. ' cc' → logprob: -8.284934043884277
    10. ')' → logprob: -8.784934043884277

Token 1066: '           ' (ID: 352)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0005664954078383744
    2. '       ' → logprob: -7.750566482543945
    3. 'cq' → logprob: -9.750566482543945
    4. ' cc' → logprob: -10.250566482543945
    5. '	cc' → logprob: -10.375566482543945
    6. 'q' → logprob: -13.375566482543945
    7. 'cco' → logprob: -13.625566482543945
    8. ' ' → logprob: -13.625566482543945
    9. '(cc' → logprob: -13.750566482543945
    10. '      ' → logprob: -13.750566482543945

Token 1067: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -2.935296834039036e-06
    2. ' cc' → logprob: -13.50000286102295
    3. '	cc' → logprob: -13.87500286102295
    4. 'cq' → logprob: -16.250003814697266
    5. '.cc' → logprob: -16.500003814697266
    6. 'caq' → logprob: -16.625003814697266
    7. '(cc' → logprob: -16.750003814697266
    8. 'ccak' → logprob: -16.875003814697266
    9. '_cc' → logprob: -17.000003814697266
    10. '#' → logprob: -17.125003814697266

Token 1068: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0621388703584671
    2. '_c' → logprob: -2.812138795852661
    3. 'c' → logprob: -8.937138557434082
    4. 'cc' → logprob: -10.187138557434082
    5. '_q' → logprob: -13.937138557434082
    6. '_cc' → logprob: -13.937138557434082
    7. 'qc' → logprob: -15.937138557434082
    8. 'cq' → logprob: -15.937138557434082
    9. 'sc' → logprob: -17.4371395111084
    10. 'cum' → logprob: -17.5621395111084

Token 1069: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.6047699318733066e-05
    2. 'c' → logprob: -11.875016212463379
    3. 'q' → logprob: -12.000016212463379
    4. 'cc' → logprob: -13.375016212463379
    5. '.append' → logprob: -13.750016212463379
    6. '_cc' → logprob: -15.750016212463379
    7. '[' → logprob: -16.250015258789062
    8. 'cum' → logprob: -17.500015258789062
    9. '```' → logprob: -18.125015258789062
    10. '[-' → logprob: -18.500015258789062

Token 1070: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.005268265027552843
    2. 'c' → logprob: -6.005268096923828
    3. 'cc' → logprob: -6.630268096923828
    4. 'q' → logprob: -7.380268096923828
    5. 'cum' → logprob: -7.880268096923828
    6. '.append' → logprob: -8.005268096923828
    7. 'sc' → logprob: -9.630268096923828
    8. '[' → logprob: -10.630268096923828
    9. '[-' → logprob: -11.505268096923828
    10. 'uc' → logprob: -12.005268096923828

Token 1071: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006597769097425044
    2. 'cc' → logprob: -7.375659942626953
    3. '_cc' → logprob: -11.250659942626953
    4. 'append' → logprob: -11.750659942626953
    5. '[' → logprob: -12.125659942626953
    6. '.cc' → logprob: -12.500659942626953
    7. '[-' → logprob: -13.250659942626953
    8. '(cc' → logprob: -15.250659942626953
    9. '           ' → logprob: -15.625659942626953
    10. '_append' → logprob: -15.750659942626953

Token 1072: '(cc' (ID: 70624)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.07916627079248428
    2. '(cc' → logprob: -2.8291661739349365
    3. '[' → logprob: -4.079166412353516
    4. ' cc' → logprob: -9.204166412353516
    5. '	cc' → logprob: -10.954166412353516
    6. '_cc' → logprob: -12.579166412353516
    7. '.cc' → logprob: -13.579166412353516
    8. 'ccc' → logprob: -13.704166412353516
    9. 'sc' → logprob: -13.829166412353516
    10. 'c' → logprob: -13.954166412353516

Token 1073: 'q' (ID: 80)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.09789973497390747
    2. '_c' → logprob: -2.5978996753692627
    3. '_cc' → logprob: -4.097899913787842
    4. 'q' → logprob: -6.597899913787842
    5. '[-' → logprob: -7.347899913787842
    6. 'c' → logprob: -8.472899436950684
    7. '_q' → logprob: -13.847899436950684
    8. ' cc' → logprob: -13.847899436950684
    9. '       ' → logprob: -13.972899436950684
    10. '[' → logprob: -14.222899436950684

Token 1074: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.08395279198884964
    2. 'cc' → logprob: -2.5839529037475586
    3. '[-' → logprob: -5.708952903747559
    4. '_cc' → logprob: -6.583952903747559
    5. '[' → logprob: -8.583952903747559
    6. 'c' → logprob: -9.583952903747559
    7. 'q' → logprob: -9.583952903747559
    8. ' cc' → logprob: -11.583952903747559
    9. 'qq' → logprob: -12.458952903747559
    10. '[c' → logprob: -12.708952903747559

Token 1075: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0969603955745697
    2. 'c' → logprob: -2.5969603061676025
    3. 'um' → logprob: -4.596960544586182
    4. 'q' → logprob: -5.221960544586182
    5. 'cum' → logprob: -6.721960544586182
    6. '[-' → logprob: -7.346960544586182
    7. '[' → logprob: -8.346960067749023
    8. 'cc' → logprob: -8.846960067749023
    9. 'uc' → logprob: -9.221960067749023
    10. 'm' → logprob: -9.971960067749023

Token 1076: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.627176768844947e-05
    2. '_c' → logprob: -9.375096321105957
    3. '       ' → logprob: -12.250096321105957
    4. 'c' → logprob: -12.500096321105957
    5. '.append' → logprob: -14.250096321105957
    6. '           ' → logprob: -14.375096321105957
    7. '[' → logprob: -15.000096321105957
    8. 'cc' → logprob: -15.125096321105957
    9. 'q' → logprob: -15.750096321105957
    10. '        ' → logprob: -15.750096321105957

Token 1077: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007201764383353293
    2. 'q' → logprob: -7.875720024108887
    3. '[-' → logprob: -8.750720024108887
    4. 'cc' → logprob: -9.375720024108887
    5. 'c' → logprob: -9.625720024108887
    6. '-' → logprob: -11.000720024108887
    7. '[' → logprob: -12.375720024108887
    8. 'sc' → logprob: -12.625720024108887
    9. 'len' → logprob: -13.625720024108887
    10. '_c' → logprob: -14.250720024108887

Token 1078: ']' (ID: 60)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.35237836837768555
    2. '+' → logprob: -1.6023783683776855
    3. ' +' → logprob: -2.4773783683776855
    4. '.append' → logprob: -4.9773783683776855
    5. '_c' → logprob: -6.1023783683776855
    6. '_cc' → logprob: -7.7273783683776855
    7. ')' → logprob: -7.8523783683776855
    8. '           ' → logprob: -7.8523783683776855
    9. '[' → logprob: -8.227378845214844
    10. 'cc' → logprob: -8.352378845214844

Token 1079: ' +' (ID: 659)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6038423776626587
    2. '[-' → logprob: -1.2288423776626587
    3. 'cc' → logprob: -1.9788423776626587
    4. '[' → logprob: -4.478842258453369
    5. '_cc' → logprob: -5.478842258453369
    6. ' cc' → logprob: -6.353842258453369
    7. '           ' → logprob: -6.603842258453369
    8. 'append' → logprob: -6.978842258453369
    9. '+' → logprob: -6.978842258453369
    10. '(cc' → logprob: -7.103842258453369

Token 1080: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -1.7432603272027336e-06
    2. ' cc' → logprob: -13.625001907348633
    3. 'sc' → logprob: -15.000001907348633
    4. '
' → logprob: -16.625001907348633
    5. 'c' → logprob: -17.875001907348633
    6. '	cc' → logprob: -18.500001907348633
    7. '[' → logprob: -19.000001907348633
    8. '_cc' → logprob: -19.125001907348633
    9. '(cc' → logprob: -19.625001907348633
    10. '1' → logprob: -20.250001907348633

Token 1081: ')
' (ID: 446)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.08442356437444687
    2. '_cc' → logprob: -3.209423542022705
    3. '.append' → logprob: -3.709423542022705
    4. '           ' → logprob: -4.584423542022705
    5. '_c' → logprob: -6.459423542022705
    6. '         ' → logprob: -6.834423542022705
    7. 'c' → logprob: -7.209423542022705
    8. '          ' → logprob: -7.584423542022705
    9. '[' → logprob: -7.834423542022705
    10. 'sc' → logprob: -7.959423542022705

Token 1082: '           ' (ID: 352)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.02017570100724697
    2. '       ' → logprob: -4.270175933837891
    3. 'so' → logprob: -5.270175933837891
    4. '	sc' → logprob: -7.770175933837891
    5. ' sc' → logprob: -8.89517593383789
    6. '           ' → logprob: -9.52017593383789
    7. '_sc' → logprob: -9.52017593383789
    8. '   ' → logprob: -10.14517593383789
    9. '(sc' → logprob: -10.39517593383789
    10. '=sc' → logprob: -10.77017593383789

Token 1083: ' soq' (ID: 162193)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.01110758911818266
    2. 'so' → logprob: -4.511107444763184
    3. 'soc' → logprob: -10.011107444763184
    4. 'co' → logprob: -12.511107444763184
    5. '	sc' → logprob: -12.886107444763184
    6. 's' → logprob: -13.261107444763184
    7. ' sc' → logprob: -13.511107444763184
    8. '(sc' → logprob: -13.886107444763184
    9. 'cq' → logprob: -13.886107444763184
    10. 'c' → logprob: -14.011107444763184

Token 1084: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.31647399067878723
    2. 'q' → logprob: -2.191473960876465
    3. 's' → logprob: -2.191473960876465
    4. '_so' → logprob: -3.691473960876465
    5. 'c' → logprob: -4.816473960876465
    6. '_s' → logprob: -4.941473960876465
    7. 'so' → logprob: -5.816473960876465
    8. '.append' → logprob: -6.316473960876465
    9. '[' → logprob: -6.941473960876465
    10. 'sq' → logprob: -7.066473960876465

Token 1085: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.005564805585891008
    2. 'umsum' → logprob: -6.5055646896362305
    3. '_so' → logprob: -7.2555646896362305
    4. '_c' → logprob: -7.2555646896362305
    5. 'q' → logprob: -7.6305646896362305
    6. '_um' → logprob: -7.8805646896362305
    7. 'cum' → logprob: -8.25556468963623
    8. 'uc' → logprob: -8.25556468963623
    9. 'umo' → logprob: -8.63056468963623
    10. 'ump' → logprob: -9.13056468963623

Token 1086: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011133047519251704
    2. '_so' → logprob: -7.251113414764404
    3. '[' → logprob: -8.501112937927246
    4. '_append' → logprob: -8.876112937927246
    5. 'append' → logprob: -11.126112937927246
    6. '_app' → logprob: -11.626112937927246
    7. '   ' → logprob: -11.626112937927246
    8. '       ' → logprob: -12.501112937927246
    9. '.extend' → logprob: -12.626112937927246
    10. '.so' → logprob: -12.751112937927246

Token 1087: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019382734317332506
    2. 'so' → logprob: -6.251938343048096
    3. '[' → logprob: -11.751937866210938
    4. '   ' → logprob: -14.876937866210938
    5. ' (' → logprob: -15.626937866210938
    6. ' soq' → logprob: -15.751937866210938
    7. '(
' → logprob: -15.876937866210938
    8. 'So' → logprob: -16.001937866210938
    9. '{' → logprob: -16.251937866210938
    10. '\' → logprob: -16.251937866210938

Token 1088: 'so' (ID: 786)
  Prédit: 'so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -3.857719275401905e-05
    2. ' soq' → logprob: -10.250038146972656
    3. '-so' → logprob: -14.500038146972656
    4. 'So' → logprob: -14.500038146972656
    5. 'isoq' → logprob: -14.625038146972656
    6. 'sq' → logprob: -15.000038146972656
    7. ' so' → logprob: -15.375038146972656
    8. '[' → logprob: -15.625038146972656
    9. 'voq' → logprob: -15.875038146972656
    10. 'poq' → logprob: -16.250038146972656

Token 1089: 'q' (ID: 80)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.10169097036123276
    2. 'q' → logprob: -2.4766910076141357
    3. 'sq' → logprob: -4.726690769195557
    4. 'qu' → logprob: -6.851690769195557
    5. 'uq' → logprob: -7.101690769195557
    6. 's' → logprob: -7.476690769195557
    7. 'sum' → logprob: -7.976690769195557
    8. '_so' → logprob: -8.476691246032715
    9. ' soq' → logprob: -8.851691246032715
    10. 'toq' → logprob: -9.226691246032715

Token 1090: '_c' (ID: 1303)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2634508013725281
    2. 'cum' → logprob: -2.263450860977173
    3. '_c' → logprob: -2.638450860977173
    4. 'c' → logprob: -2.888450860977173
    5. 'uc' → logprob: -9.638450622558594
    6. '[' → logprob: -9.638450622558594
    7. 'qu' → logprob: -10.013450622558594
    8. 'm' → logprob: -10.013450622558594
    9. '_q' → logprob: -10.138450622558594
    10. 'uq' → logprob: -10.138450622558594

Token 1091: 'um' (ID: 394)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.22844970226287842
    2. '_c' → logprob: -2.103449821472168
    3. 'cum' → logprob: -2.853449821472168
    4. 'c' → logprob: -4.103449821472168
    5. 'um' → logprob: -5.478449821472168
    6. 'uc' → logprob: -5.978449821472168
    7. 'qu' → logprob: -7.728449821472168
    8. 'uq' → logprob: -8.103449821472168
    9. '_q' → logprob: -8.728449821472168
    10. '[' → logprob: -9.603449821472168

Token 1092: '[-' (ID: 17503)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.29579293727874756
    2. '_so' → logprob: -1.6707929372787476
    3. '[-' → logprob: -3.420793056488037
    4. '[' → logprob: -3.670793056488037
    5. '-so' → logprob: -5.045793056488037
    6. '   ' → logprob: -7.170793056488037
    7. ' soq' → logprob: -7.795793056488037
    8. '.so' → logprob: -8.045792579650879
    9. 'q' → logprob: -8.045792579650879
    10. 'So' → logprob: -8.045792579650879

Token 1093: '1' (ID: 16)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.664775013923645
    2. 'c' → logprob: -1.789775013923645
    3. 'cum' → logprob: -1.914775013923645
    4. 's' → logprob: -2.0397748947143555
    5. 'sum' → logprob: -3.7897748947143555
    6. 'so' → logprob: -4.4147748947143555
    7. '1' → logprob: -5.4147748947143555
    8. 'qu' → logprob: -7.4147748947143555
    9. '   ' → logprob: -8.289774894714355
    10. '[' → logprob: -9.039774894714355

Token 1094: ']' (ID: 60)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0012088033836334944
    2. '[' → logprob: -7.126208782196045
    3. '+' → logprob: -7.876208782196045
    4. 'q' → logprob: -12.001209259033203
    5. '][-' → logprob: -12.376209259033203
    6. '[:-' → logprob: -12.751209259033203
    7. '_so' → logprob: -13.126209259033203
    8. '       ' → logprob: -13.376209259033203
    9. '           ' → logprob: -13.376209259033203
    10. ' +' → logprob: -13.876209259033203

Token 1095: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1815752238035202
    2. '[-' → logprob: -1.8065751791000366
    3. '[s' → logprob: -7.056575298309326
    4. '+' → logprob: -8.306574821472168
    5. '[q' → logprob: -8.306574821472168
    6. '[len' → logprob: -8.931574821472168
    7. '       ' → logprob: -9.556574821472168
    8. 'q' → logprob: -10.181574821472168
    9. '.append' → logprob: -10.556574821472168
    10. 'so' → logprob: -10.806574821472168

Token 1096: ' so' (ID: 813)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -5.9153885558771435e-06
    2. ' soq' → logprob: -12.375005722045898
    3. 'sq' → logprob: -14.125005722045898
    4. ' so' → logprob: -14.375005722045898
    5. '-so' → logprob: -16.7500057220459
    6. 'So' → logprob: -16.8750057220459
    7. ' ' → logprob: -17.0000057220459
    8. '   ' → logprob: -17.5000057220459
    9. '  ' → logprob: -17.5000057220459
    10. 'sol' → logprob: -18.0000057220459

Token 1097: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2003718912601471
    2. '       ' → logprob: -1.9503718614578247
    3. 'sc' → logprob: -3.3253719806671143
    4. '          ' → logprob: -6.450371742248535
    5. '         ' → logprob: -6.575371742248535
    6. '        ' → logprob: -8.575371742248535
    7. '   ' → logprob: -9.700371742248535
    8. '      ' → logprob: -9.825371742248535
    9. '               ' → logprob: -10.575371742248535
    10. ' sc' → logprob: -10.575371742248535

Token 1098: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5823413729667664
    2. 'sc' → logprob: -0.8323413729667664
    3. '           ' → logprob: -5.082341194152832
    4. '   ' → logprob: -9.582341194152832
    5. '         ' → logprob: -10.457341194152832
    6. '	sc' → logprob: -10.957341194152832
    7. '          ' → logprob: -11.207341194152832
    8. ' sc' → logprob: -11.332341194152832
    9. ' ' → logprob: -11.707341194152832
    10. '      ' → logprob: -11.832341194152832

Token 1099: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' (adapté à ' sc') → logprob: -4.320199877838604e-07
    2. ' sc' → logprob: -15.75
    3. '(sc' → logprob: -16.375
    4. '	sc' → logprob: -16.625
    5. '_sc' → logprob: -18.75
    6. '   ' → logprob: -19.125
    7. '
' → logprob: -19.375
    8. 'soc' → logprob: -19.625
    9. '.sc' → logprob: -20.25
    10. '  ' → logprob: -20.5

Token 1100: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1443023383617401
    2. 'c' → logprob: -2.3943023681640625
    3. '_c' → logprob: -3.1443023681640625
    4. '_q' → logprob: -10.519302368164062
    5. 'sc' → logprob: -11.519302368164062
    6. 'cum' → logprob: -13.019302368164062
    7. 'cq' → logprob: -14.519302368164062
    8. 'qc' → logprob: -15.394302368164062
    9. '```' → logprob: -15.644302368164062
    10. '_sc' → logprob: -16.644302368164062

Token 1101: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.4418171455617994e-05
    2. 'q' → logprob: -10.750044822692871
    3. 'sc' → logprob: -11.125044822692871
    4. '_sc' → logprob: -12.250044822692871
    5. 'c' → logprob: -13.375044822692871
    6. 'cum' → logprob: -14.000044822692871
    7. '[' → logprob: -15.000044822692871
    8. '[-' → logprob: -15.125044822692871
    9. '.append' → logprob: -15.500044822692871
    10. '_q' → logprob: -16.500043869018555

Token 1102: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.07328683137893677
    2. 'cum' → logprob: -3.198286771774292
    3. 'um' → logprob: -3.823286771774292
    4. 'c' → logprob: -5.448287010192871
    5. 'sc' → logprob: -5.698287010192871
    6. 'uc' → logprob: -8.573287010192871
    7. '[' → logprob: -9.198287010192871
    8. '_sc' → logprob: -11.573287010192871
    9. '[-' → logprob: -12.448287010192871
    10. 'Cum' → logprob: -12.823287010192871

Token 1103: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0060457587242126465
    2. '_c' → logprob: -5.256045818328857
    3. '_sc' → logprob: -8.0060453414917
    4. '[-' → logprob: -8.1310453414917
    5. 'sc' → logprob: -9.1310453414917
    6. '[' → logprob: -10.6310453414917
    7. 'append' → logprob: -10.7560453414917
    8. 'c' → logprob: -11.3810453414917
    9. '=sc' → logprob: -12.2560453414917
    10. 'q' → logprob: -12.8810453414917

Token 1104: '(sc' (ID: 31442)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.00015860427811276168
    2. '(sc' → logprob: -8.750158309936523
    3. ' sc' → logprob: -16.000158309936523
    4. '	sc' → logprob: -19.125158309936523
    5. '
' → logprob: -20.500158309936523
    6. '=sc' → logprob: -20.500158309936523
    7. '   ' → logprob: -20.875158309936523
    8. '_sc' → logprob: -21.375158309936523
    9. '       ' → logprob: -21.625158309936523
    10. 'sp' → logprob: -21.875158309936523

Token 1105: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5598728060722351
    2. 'sc' → logprob: -0.9348728060722351
    3. '_c' → logprob: -3.80987286567688
    4. 'c' → logprob: -4.559872627258301
    5. '_sc' → logprob: -5.809872627258301
    6. '_q' → logprob: -8.6848726272583
    7. 'cum' → logprob: -8.8098726272583
    8. '[' → logprob: -10.6848726272583
    9. 'qc' → logprob: -10.6848726272583
    10. '	sc' → logprob: -11.1848726272583

Token 1106: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.2509920299053192
    2. 'sc' → logprob: -2.0009920597076416
    3. 'q' → logprob: -2.5009920597076416
    4. '_sc' → logprob: -5.7509918212890625
    5. 'c' → logprob: -6.7509918212890625
    6. '[-' → logprob: -8.250991821289062
    7. '[' → logprob: -9.375991821289062
    8. '_q' → logprob: -10.625991821289062
    9. 'qc' → logprob: -11.375991821289062
    10. ' sc' → logprob: -12.000991821289062

Token 1107: 'um' (ID: 394)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.47274309396743774
    2. '_c' → logprob: -1.222743034362793
    3. 'sc' → logprob: -2.597743034362793
    4. '_sc' → logprob: -5.222743034362793
    5. '_q' → logprob: -6.847743034362793
    6. 'c' → logprob: -7.847743034362793
    7. 'qu' → logprob: -7.972743034362793
    8. 'um' → logprob: -8.597743034362793
    9. '[' → logprob: -9.472743034362793
    10. '_m' → logprob: -9.472743034362793

Token 1108: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00018780550453811884
    2. '_c' → logprob: -8.625187873840332
    3. 'q' → logprob: -12.000187873840332
    4. 'c' → logprob: -14.125187873840332
    5. '[' → logprob: -14.500187873840332
    6. '_q' → logprob: -14.750187873840332
    7. 's' → logprob: -16.500186920166016
    8. '_s' → logprob: -16.750186920166016
    9. '-' → logprob: -16.875186920166016
    10. '_sc' → logprob: -16.875186920166016

Token 1109: '1' (ID: 16)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03802518546581268
    2. 'sc' → logprob: -3.788025140762329
    3. '-' → logprob: -4.663025379180908
    4. 'c' → logprob: -6.038025379180908
    5. '1' → logprob: -6.413025379180908
    6. '[-' → logprob: -7.038025379180908
    7. 'qu' → logprob: -8.66302490234375
    8. '_q' → logprob: -10.28802490234375
    9. '   ' → logprob: -10.66302490234375
    10. '-q' → logprob: -11.41302490234375

Token 1110: ']' (ID: 60)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.661821722984314
    2. ']' → logprob: -0.786821722984314
    3. '_sc' → logprob: -4.4118218421936035
    4. '_c' → logprob: -5.1618218421936035
    5. ']+' → logprob: -5.5368218421936035
    6. '+' → logprob: -6.0368218421936035
    7. '][-' → logprob: -6.5368218421936035
    8. '[' → logprob: -6.6618218421936035
    9. ')' → logprob: -7.2868218421936035
    10. 'sc' → logprob: -7.4118218421936035

Token 1111: ' +' (ID: 659)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0009680375806055963
    2. '[' → logprob: -7.750967979431152
    3. '+' → logprob: -7.875967979431152
    4. '_sc' → logprob: -9.250967979431152
    5. 'sc' → logprob: -11.000967979431152
    6. '_c' → logprob: -11.250967979431152
    7. '][-' → logprob: -12.000967979431152
    8. 'q' → logprob: -12.125967979431152
    9. '-' → logprob: -12.375967979431152
    10. ' sc' → logprob: -12.750967979431152

Token 1112: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -1.2664456789934775e-06
    2. ' sc' → logprob: -14.000000953674316
    3. '(sc' → logprob: -15.375000953674316
    4. '1' → logprob: -16.375001907348633
    5. '
' → logprob: -17.375001907348633
    6. '	sc' → logprob: -18.250001907348633
    7. '[' → logprob: -18.375001907348633
    8. 'st' → logprob: -18.875001907348633
    9. '0' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.500001907348633

Token 1113: ')

' (ID: 1029)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008566702017560601
    2. '<|end|>' → logprob: -8.000856399536133
    3. '
' → logprob: -8.375856399536133
    4. ')' → logprob: -8.625856399536133
    5. '   ' → logprob: -10.500856399536133
    6. 'for' → logprob: -11.125856399536133
    7. '<|end|>' → logprob: -11.125856399536133
    8. ' for' → logprob: -11.375856399536133
    9. '        
' → logprob: -11.375856399536133
    10. '           ' → logprob: -11.625856399536133

Token 1114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0637364313006401
    2. 'for' → logprob: -2.8137364387512207
    3. '```' → logprob: -7.313736438751221
    4. ' for' → logprob: -7.438736438751221
    5. '   ' → logprob: -7.688736438751221
    6. '           ' → logprob: -9.938735961914062
    7. '	for' → logprob: -13.313735961914062
    8. '``' → logprob: -13.313735961914062
    9. '[' → logprob: -14.313735961914062
    10. 'import' → logprob: -14.813735961914062

Token 1115: ' results' (ID: 4376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12695088982582092
    2. 'for' → logprob: -2.126950979232788
    3. ' for' → logprob: -11.501951217651367
    4. '   ' → logprob: -12.376951217651367
    5. '           ' → logprob: -13.376951217651367
    6. '```' → logprob: -13.376951217651367
    7. 'result' → logprob: -13.626951217651367
    8. 'results' (adapté à ' results') → logprob: -13.626951217651367
    9. 'indent' → logprob: -14.001951217651367
    10. '
' → logprob: -14.001951217651367

Token 1116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01871824823319912
    2. '=' → logprob: -4.018718242645264
    3. '=[]' → logprob: -8.143718719482422
    4. '   ' → logprob: -9.018718719482422
    5. '[' → logprob: -10.268718719482422
    6. '```' → logprob: -10.393718719482422
    7. '=[' → logprob: -10.768718719482422
    8. '.append' → logprob: -11.143718719482422
    9. '=[]
' → logprob: -11.393718719482422
    10. '[]' → logprob: -11.768718719482422

Token 1117: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004450059030205011
    2. ' []' → logprob: -6.004449844360352
    3. '[' → logprob: -6.254449844360352
    4. '[]
' → logprob: -10.004449844360352
    5. ' [' → logprob: -12.254449844360352
    6. '[]

' → logprob: -15.754449844360352
    7. ' []
' → logprob: -16.00444984436035
    8. '[]}' → logprob: -16.25444984436035
    9. '   ' → logprob: -16.62944984436035
    10. '[]"' → logprob: -16.87944984436035

Token 1118: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31419461965560913
    2. '       ' → logprob: -1.314194679260254
    3. ' for' → logprob: -7.314194679260254
    4. '   ' → logprob: -8.314194679260254
    5. '```' → logprob: -11.314194679260254
    6. '	for' → logprob: -12.439194679260254
    7. '           ' → logprob: -12.564194679260254
    8. '[' → logprob: -14.439194679260254
    9. ' ' → logprob: -14.939194679260254
    10. '``' → logprob: -15.439194679260254

Token 1119: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.5716304410016164e-05
    2. '       ' → logprob: -10.500035285949707
    3. ' for' → logprob: -11.750035285949707
    4. '```' → logprob: -15.875035285949707
    5. '   ' → logprob: -17.250036239624023
    6. '	for' → logprob: -18.000036239624023
    7. '
' → logprob: -18.750036239624023
    8. '``' → logprob: -19.750036239624023
    9. '           ' → logprob: -21.000036239624023
    10. '        
' → logprob: -21.000036239624023

Token 1120: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004923873930238187
    2. ' i' → logprob: -7.625492572784424
    3. 'line' → logprob: -13.000492095947266
    4. '   ' → logprob: -14.625492095947266
    5. 'q' → logprob: -14.750492095947266
    6. 'idx' → logprob: -14.750492095947266
    7. '_i' → logprob: -14.875492095947266
    8. 'iq' → logprob: -15.250492095947266
    9. ' line' → logprob: -15.625492095947266
    10. '       ' → logprob: -16.500492095947266

Token 1121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026348024606704712
    2. 'in' → logprob: -3.651348114013672
    3. '	in' → logprob: -10.276348114013672
    4. '   ' → logprob: -12.776348114013672
    5. ' ' → logprob: -12.901348114013672
    6. ',' → logprob: -13.651348114013672
    7. '0' → logprob: -13.901348114013672
    8. '_in' → logprob: -14.026348114013672
    9. '	' → logprob: -14.276348114013672
    10. '1' → logprob: -14.651348114013672

Token 1122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164221473038197
    2. ' range' → logprob: -4.264164447784424
    3. 'in' → logprob: -14.389163970947266
    4. ' in' → logprob: -16.014163970947266
    5. '(range' → logprob: -17.139163970947266
    6. '0' → logprob: -18.264163970947266
    7. ' ' → logprob: -18.639163970947266
    8. '   ' → logprob: -18.889163970947266
    9. '	range' → logprob: -20.639163970947266
    10. '  ' → logprob: -21.389163970947266

Token 1123: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014299227041192353
    2. '(Q' → logprob: -9.125143051147461
    3. '1' → logprob: -10.625143051147461
    4. '(len' → logprob: -11.625143051147461
    5. '(q' → logprob: -14.875143051147461
    6. ' (' → logprob: -15.625143051147461
    7. '0' → logprob: -16.00014305114746
    8. '       ' → logprob: -17.12514305114746
    9. '(i' → logprob: -17.62514305114746
    10. '           ' → logprob: -18.25014305114746

Token 1124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022599254734814167
    2. 'Q' → logprob: -7.002259731292725
    3. 'q' → logprob: -7.002259731292725
    4. '0' → logprob: -7.877259731292725
    5. 'len' → logprob: -9.877260208129883
    6. '   ' → logprob: -12.877260208129883
    7. ' ' → logprob: -13.377260208129883
    8. '       ' → logprob: -13.752260208129883
    9. '           ' → logprob: -14.127260208129883
    10. ' Q' → logprob: -15.252260208129883

Token 1125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010732035152614117
    2. ',len' → logprob: -4.635732173919678
    3. '(len' → logprob: -7.135732173919678
    4. ' ,' → logprob: -9.13573169708252
    5. ',p' → logprob: -10.63573169708252
    6. '       ' → logprob: -11.38573169708252
    7. '(' → logprob: -11.63573169708252
    8. ',length' → logprob: -11.88573169708252
    9. 'len' → logprob: -12.26073169708252
    10. ',Q' → logprob: -12.51073169708252

Token 1126: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008621666580438614
    2. 'len' → logprob: -4.758621692657471
    3. ' q' → logprob: -12.258621215820312
    4. 'Q' → logprob: -13.508621215820312
    5. ' len' → logprob: -14.508621215820312
    6. '(len' → logprob: -15.383621215820312
    7. '   ' → logprob: -16.008621215820312
    8. '(q' → logprob: -17.133621215820312
    9. '       ' → logprob: -17.258621215820312
    10. 'i' → logprob: -17.633621215820312

Token 1127: '+' (ID: 10)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.034666430205106735
    2. '):' → logprob: -3.4096665382385254
    3. '       ' → logprob: -7.534666538238525
    4. '```' → logprob: -8.784666061401367
    5. ':
' → logprob: -9.409666061401367
    6. '           ' → logprob: -9.784666061401367
    7. '   ' → logprob: -10.159666061401367
    8. ':' → logprob: -10.159666061401367
    9. ',' → logprob: -10.409666061401367
    10. '():
' → logprob: -11.034666061401367

Token 1128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006022418383508921
    2. '):
' → logprob: -7.6256022453308105
    3. '):' → logprob: -9.375601768493652
    4. '```' → logprob: -11.000601768493652
    5. ')' → logprob: -11.625601768493652
    6. '   ' → logprob: -13.750601768493652
    7. '       ' → logprob: -14.125601768493652
    8. ' ' → logprob: -14.625601768493652
    9. '
' → logprob: -15.000601768493652
    10. ':
' → logprob: -15.250601768493652

Token 1129: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7246440649032593
    2. '           ' → logprob: -1.3496440649032593
    3. ':
' → logprob: -1.8496440649032593
    4. '):
' → logprob: -2.599644184112549
    5. '):' → logprob: -3.849644184112549
    6. '       ' → logprob: -7.099644184112549
    7. ',' → logprob: -7.224644184112549
    8. ')' → logprob: -7.849644184112549
    9. '{' → logprob: -7.974644184112549
    10. '=' → logprob: -8.09964370727539

Token 1130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00452066957950592
    2. '```' → logprob: -5.504520893096924
    3. '   ' → logprob: -8.254520416259766
    4. 'tokens' → logprob: -9.629520416259766
    5. ' candidates' → logprob: -11.004520416259766
    6. ' tokens' → logprob: -11.129520416259766
    7. ' indentation' → logprob: -11.254520416259766
    8. 'indent' → logprob: -11.504520416259766
    9. '`' → logprob: -11.504520416259766
    10. '
' → logprob: -11.754520416259766

Token 1131: ' values' (ID: 4824)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03858552873134613
    2. 'indent' → logprob: -4.038585662841797
    3. 'inds' → logprob: -5.163585662841797
    4. 'possible' → logprob: -5.163585662841797
    5. 'c' → logprob: -5.788585662841797
    6. 'vals' → logprob: -6.413585662841797
    7. 'ind' → logprob: -6.663585662841797
    8. 'cand' → logprob: -7.288585662841797
    9. 'values' (adapté à ' values') → logprob: -7.913585662841797
    10. ' inds' → logprob: -8.038585662841797

Token 1132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42930182814598083
    2. '=' → logprob: -1.0543018579483032
    3. '=[]' → logprob: -8.304302215576172
    4. '           ' → logprob: -8.304302215576172
    5. '=set' → logprob: -10.554302215576172
    6. '={}' → logprob: -11.179302215576172
    7. '            ' → logprob: -11.304302215576172
    8. '```' → logprob: -11.554302215576172
    9. '=[]
' → logprob: -12.179302215576172
    10. '   ' → logprob: -12.179302215576172

Token 1133: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.01137364748865366
    2. ' set' → logprob: -4.511373519897461
    3. '{' → logprob: -8.511373519897461
    4. '{}' → logprob: -9.011373519897461
    5. '[]' → logprob: -13.761373519897461
    6. '=set' → logprob: -14.636373519897461
    7. '	set' → logprob: -14.761373519897461
    8. ' {' → logprob: -15.011373519897461
    9. ' []' → logprob: -15.636373519897461
    10. ' {}' → logprob: -16.63637351989746

Token 1134: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03902404010295868
    2. '(' → logprob: -4.0390238761901855
    3. '(
' → logprob: -4.7890238761901855
    4. '()
' → logprob: -5.0390238761901855
    5. '([' → logprob: -5.9140238761901855
    6. '{' → logprob: -7.0390238761901855
    7. '([
' → logprob: -7.1640238761901855
    8. '(R' → logprob: -7.1640238761901855
    9. '((' → logprob: -8.164024353027344
    10. '(values' → logprob: -9.289024353027344

Token 1135: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009559630416333675
    2. '           ' → logprob: -5.384559631347656
    3. ' for' → logprob: -5.759559631347656
    4. '```' → logprob: -7.259559631347656
    5. '                   ' → logprob: -8.509559631347656
    6. '                       ' → logprob: -8.634559631347656
    7. 'for' → logprob: -8.884559631347656
    8. '                               ' → logprob: -9.259559631347656
    9. ' ' → logprob: -9.509559631347656
    10. '`' → logprob: -9.634559631347656

Token 1136: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2964291274547577
    2. 'for' (adapté à ' for') → logprob: -2.04642915725708
    3. ' for' → logprob: -2.54642915725708
    4. '           ' → logprob: -3.04642915725708
    5. '             ' → logprob: -8.046428680419922
    6. '   ' → logprob: -8.171428680419922
    7. '                   ' → logprob: -8.171428680419922
    8. ' ' → logprob: -8.796428680419922
    9. '            ' → logprob: -9.171428680419922
    10. '                       ' → logprob: -9.546428680419922

Token 1137: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00896848551928997
    2. '(R' → logprob: -4.758968353271484
    3. ' R' → logprob: -8.008968353271484
    4. 'candidate' → logprob: -11.508968353271484
    5. ' (' → logprob: -12.008968353271484
    6. '   ' → logprob: -12.508968353271484
    7. '           ' → logprob: -14.633968353271484
    8. '       ' → logprob: -15.258968353271484
    9. 'c' → logprob: -15.633968353271484
    10. '	R' → logprob: -15.758968353271484

Token 1138: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.45969411730766296
    2. ',' → logprob: -1.3346941471099854
    3. 'in' → logprob: -2.3346941471099854
    4. ',C' → logprob: -5.084693908691406
    5. ' ,' → logprob: -6.459693908691406
    6. ',R' → logprob: -8.334693908691406
    7. '           ' → logprob: -9.459693908691406
    8. ',in' → logprob: -9.584693908691406
    9. ',c' → logprob: -9.834693908691406
    10. ',
' → logprob: -9.834693908691406

Token 1139: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0024756586644798517
    2. ' C' → logprob: -6.002475738525391
    3. ',' → logprob: -18.62747573852539
    4. ',C' → logprob: -18.62747573852539
    5. ' ' → logprob: -19.25247573852539
    6. '   ' → logprob: -19.37747573852539
    7. '  ' → logprob: -21.50247573852539
    8. '    ' → logprob: -22.00247573852539
    9. '	C' → logprob: -22.62747573852539
    10. '           ' → logprob: -22.75247573852539

Token 1140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006623993394896388
    2. ',S' → logprob: -7.625662326812744
    3. ' in' → logprob: -9.500662803649902
    4. '           ' → logprob: -10.250662803649902
    5. 'in' → logprob: -10.375662803649902
    6. ' ,' → logprob: -10.500662803649902
    7. ',s' → logprob: -12.750662803649902
    8. '_,' → logprob: -14.125662803649902
    9. ',in' → logprob: -14.500662803649902
    10. ',C' → logprob: -14.875662803649902

Token 1141: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.1689596148207784e-05
    2. ' S' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.625051498413086
    4. ' ' → logprob: -17.375051498413086
    5. '  ' → logprob: -17.875051498413086
    6. '       ' → logprob: -18.000051498413086
    7. '           ' → logprob: -18.250051498413086
    8. '
' → logprob: -18.500051498413086
    9. ',' → logprob: -18.625051498413086
    10. '     ' → logprob: -19.375051498413086

Token 1142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0589289516210556
    2. '               ' → logprob: -2.933928966522217
    3. 'in' → logprob: -5.558928966522217
    4. ',' → logprob: -9.808928489685059
    5. 'values' → logprob: -10.308928489685059
    6. ':
' → logprob: -11.183928489685059
    7. '              ' → logprob: -11.433928489685059
    8. ' ' → logprob: -11.683928489685059
    9. ')' → logprob: -11.808928489685059
    10. '```' → logprob: -11.933928489685059

Token 1143: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00015860427811276168
    2. ' candidates' → logprob: -8.750158309936523
    3. '_candidates' → logprob: -17.125158309936523
    4. '           ' → logprob: -18.750158309936523
    5. 'cand' → logprob: -18.875158309936523
    6. '
' → logprob: -18.875158309936523
    7. 'andidates' → logprob: -19.125158309936523
    8. ')c' → logprob: -19.125158309936523
    9. '   ' → logprob: -19.500158309936523
    10. 'candidate' → logprob: -19.625158309936523

Token 1144: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10488270968198776
    2. ':
' → logprob: -2.8548827171325684
    3. ':' → logprob: -3.9798827171325684
    4. '<|end|>' → logprob: -4.854882717132568
    5. '):
' → logprob: -5.604882717132568
    6. '(values' → logprob: -5.979882717132568
    7. ',' → logprob: -6.604882717132568
    8. '           ' → logprob: -6.979882717132568
    9. '                       ' → logprob: -7.104882717132568
    10. '                               ' → logprob: -7.229882717132568

Token 1145: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003970116376876831
    2. ' values' → logprob: -5.628970146179199
    3. '                   ' → logprob: -8.8789701461792
    4. 'values' → logprob: -9.0039701461792
    5. '(values' → logprob: -11.1289701461792
    6. '                ' → logprob: -11.6289701461792
    7. '```' → logprob: -11.7539701461792
    8. '           ' → logprob: -11.8789701461792
    9. ' tokens' → logprob: -12.0039701461792
    10. ' indentation' → logprob: -12.1289701461792

Token 1146: ' indent' (ID: 37655)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.43729379773139954
    2. 'indent' (adapté à ' indent') → logprob: -1.6872937679290771
    3. ' expected' → logprob: -2.562293767929077
    4. '               ' → logprob: -3.687293767929077
    5. ' indent' → logprob: -3.687293767929077
    6. ' indentation' → logprob: -4.437294006347656
    7. 'values' → logprob: -4.937294006347656
    8. '                   ' → logprob: -4.937294006347656
    9. 'v' → logprob: -5.062294006347656
    10. 'prev' → logprob: -5.937294006347656

Token 1147: '_val' (ID: 13694)
  Prédit: '_levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_levels' → logprob: -0.6419419646263123
    2. '_values' → logprob: -1.266942024230957
    3. ' =' → logprob: -1.766942024230957
    4. '_' → logprob: -4.516942024230957
    5. '=' → logprob: -4.891942024230957
    6. '_level' → logprob: -6.766942024230957
    7. '_value' → logprob: -7.391942024230957
    8. '=_' → logprob: -7.891942024230957
    9. '_val' → logprob: -8.266942024230957
    10. '_=' → logprob: -9.141942024230957

Token 1148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0557037815451622
    2. '=' → logprob: -2.93070387840271
    3. '                   ' → logprob: -8.055704116821289
    4. '               ' → logprob: -8.555704116821289
    5. '                ' → logprob: -9.055704116821289
    6. '            ' → logprob: -10.180704116821289
    7. '                    ' → logprob: -10.305704116821289
    8. ')' → logprob: -10.430704116821289
    9. '           ' → logprob: -10.805704116821289
    10. '```' → logprob: -11.430704116821289

Token 1149: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.52969890832901
    2. 'R' → logprob: -0.90469890832901
    3. ' values' → logprob: -5.654698848724365
    4. 'values' → logprob: -5.904698848724365
    5. '(values' → logprob: -9.529699325561523
    6. ''' → logprob: -9.654699325561523
    7. 'indent' → logprob: -10.029699325561523
    8. ' (' → logprob: -10.404699325561523
    9. ' indent' → logprob: -10.654699325561523
    10. '                   ' → logprob: -10.904699325561523

Token 1150: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.57798171043396
    2. '*(' → logprob: -0.82798171043396
    3. ' *' → logprob: -6.202981948852539
    4. '*((' → logprob: -11.077981948852539
    5. '**' → logprob: -14.202981948852539
    6. '```' → logprob: -15.577981948852539
    7. '*[' → logprob: -15.702981948852539
    8. '*\' → logprob: -16.32798194885254
    9. ' *(' → logprob: -17.07798194885254
    10. '*(-' → logprob: -17.20298194885254

Token 1151: 'roq' (ID: 188502)
  Prédit: 'roq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roq' → logprob: -0.000241801084484905
    2. ' ro' → logprob: -8.375242233276367
    3. 'ro' → logprob: -12.125242233276367
    4. 'roc' → logprob: -13.500242233276367
    5. 'rop' → logprob: -14.875242233276367
    6. 'voq' → logprob: -15.125242233276367
    7. 'toq' → logprob: -15.125242233276367
    8. 'poq' → logprob: -15.125242233276367
    9. ' ' → logprob: -15.250242233276367
    10. 'rof' → logprob: -15.375242233276367

Token 1152: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0032197798136621714
    2. 'q' → logprob: -5.7532196044921875
    3. 'c' → logprob: -10.753219604492188
    4. '[i' → logprob: -11.128219604492188
    5. 'i' → logprob: -12.878219604492188
    6. '[-' → logprob: -13.878219604492188
    7. 'cum' → logprob: -14.003219604492188
    8. '_i' → logprob: -14.753219604492188
    9. '_q' → logprob: -15.003219604492188
    10. 'len' → logprob: -15.503219604492188

Token 1153: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.007345958612859249
    2. 'um' → logprob: -5.632346153259277
    3. '[-' → logprob: -6.007346153259277
    4. '[i' → logprob: -7.007346153259277
    5. 'cum' → logprob: -9.132346153259277
    6. '_i' → logprob: -9.507346153259277
    7. '-' → logprob: -9.632346153259277
    8. '[_' → logprob: -10.632346153259277
    9. 'm' → logprob: -10.757346153259277
    10. '[' → logprob: -10.882346153259277

Token 1154: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009470687946304679
    2. 'i' → logprob: -7.750946998596191
    3. '[-' → logprob: -8.000946998596191
    4. '-' → logprob: -8.625946998596191
    5. ' i' → logprob: -14.375946998596191
    6. '-i' → logprob: -14.875946998596191
    7. '
' → logprob: -15.000946998596191
    8. ' -' → logprob: -15.500946998596191
    9. '{i' → logprob: -16.250947952270508
    10. '[' → logprob: -16.375947952270508

Token 1155: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002470350591465831
    2. ' -' → logprob: -8.37524700164795
    3. ']' → logprob: -11.87524700164795
    4. '[-' → logprob: -12.12524700164795
    5. '[' → logprob: -12.50024700164795
    6. ']-' → logprob: -16.375247955322266
    7. '−' → logprob: -17.000247955322266
    8. '```' → logprob: -17.375247955322266
    9. '<|end|>' → logprob: -17.500247955322266
    10. '{-' → logprob: -17.500247955322266

Token 1156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.375
    3. ' ' → logprob: -16.25
    4. '-' → logprob: -17.125
    5. '0' → logprob: -17.25
    6. '   ' → logprob: -17.875
    7. '2' → logprob: -18.75
    8. '``' → logprob: -19.0625
    9. ']' → logprob: -19.1875
    10. '
' → logprob: -19.8125

Token 1157: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01497930008918047
    2. ')' → logprob: -4.639979362487793
    3. '-' → logprob: -5.264979362487793
    4. ')-' → logprob: -11.139979362487793
    5. ' ' → logprob: -11.889979362487793
    6. ')-(' → logprob: -12.014979362487793
    7. '<|end|>' → logprob: -12.639979362487793
    8. ',' → logprob: -13.889979362487793
    9. '```' → logprob: -13.889979362487793
    10. ' ' → logprob: -14.014979362487793

Token 1158: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009784776717424393
    2. '-' → logprob: -4.634784698486328
    3. ')' → logprob: -11.009784698486328
    4. ' ' → logprob: -12.759784698486328
    5. '                ' → logprob: -13.509784698486328
    6. '```' → logprob: -13.509784698486328
    7. ' ' → logprob: -13.884784698486328
    8. ',' → logprob: -14.384784698486328
    9. '<|end|>' → logprob: -14.759784698486328
    10. '                               ' → logprob: -14.884784698486328

Token 1159: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -1.688212614681106e-05
    2. ' rc' → logprob: -11.000017166137695
    3. '	rc' → logprob: -17.250017166137695
    4. '(rc' → logprob: -17.500017166137695
    5. '_rc' → logprob: -17.750017166137695
    6. '.rc' → logprob: -20.125017166137695
    7. 'Rc' → logprob: -20.375017166137695
    8. 'RC' → logprob: -21.125017166137695
    9. '   ' → logprob: -21.500017166137695
    10. 'rcode' → logprob: -21.500017166137695

Token 1160: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.200166469876422e-06
    2. '_q' → logprob: -12.250004768371582
    3. '_c' → logprob: -15.125004768371582
    4. 'oq' → logprob: -16.8750057220459
    5. 'uq' → logprob: -17.1250057220459
    6. '[q' → logprob: -17.3750057220459
    7. 'qml' → logprob: -18.3750057220459
    8. 'qu' → logprob: -18.5000057220459
    9. 'c' → logprob: -18.6250057220459
    10. 'qw' → logprob: -19.0000057220459

Token 1161: '_c' (ID: 1303)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04317799583077431
    2. '_c' → logprob: -3.168178081512451
    3. '_q' → logprob: -8.793177604675293
    4. 'c' → logprob: -10.793177604675293
    5. '```' → logprob: -13.418177604675293
    6. '[q' → logprob: -13.543177604675293
    7. '[i' → logprob: -13.793177604675293
    8. '[' → logprob: -14.043177604675293
    9. '[_' → logprob: -14.793177604675293
    10. 'i' → logprob: -15.543177604675293

Token 1162: 'um' (ID: 394)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2522858679294586
    2. '_c' → logprob: -1.5022858381271362
    3. 'c' → logprob: -8.877285957336426
    4. 'um' → logprob: -9.252285957336426
    5. '[i' → logprob: -9.502285957336426
    6. '_q' → logprob: -11.002285957336426
    7. 'cum' → logprob: -11.752285957336426
    8. '[q' → logprob: -12.252285957336426
    9. 'i' → logprob: -12.502285957336426
    10. '[' → logprob: -12.502285957336426

Token 1163: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.75
    3. '{i' → logprob: -17.75
    4. '[' → logprob: -17.875
    5. '[
' → logprob: -18.25
    6. '[-' → logprob: -18.875
    7. '[int' → logprob: -19.375
    8. '```' → logprob: -19.375
    9. '[I' → logprob: -19.75
    10. '[user' → logprob: -20.0

Token 1164: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06310541927814484
    2. '-' → logprob: -2.813105344772339
    3. '[-' → logprob: -7.313105583190918
    4. 'i' → logprob: -8.313105583190918
    5. '[' → logprob: -8.813105583190918
    6. '][' → logprob: -9.938105583190918
    7. '```' → logprob: -10.813105583190918
    8. ']' → logprob: -13.688105583190918
    9. '[
' → logprob: -14.313105583190918
    10. '   ' → logprob: -14.563105583190918

Token 1165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.052377623040229e-05
    2. 'i' → logprob: -10.000070571899414
    3. '-' → logprob: -11.250070571899414
    4. '[i' → logprob: -12.750070571899414
    5. 'prev' → logprob: -12.875070571899414
    6. '[' → logprob: -13.000070571899414
    7. '0' → logprob: -13.125070571899414
    8. '```' → logprob: -14.000070571899414
    9. '#' → logprob: -14.750070571899414
    10. 'user' → logprob: -15.250070571899414

Token 1166: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.351697033504024e-05
    2. ')+' → logprob: -9.500083923339844
    3. ' )' → logprob: -12.625083923339844
    4. ')
' → logprob: -13.875083923339844
    5. ')...' → logprob: -14.250083923339844
    6. '               ' → logprob: -14.375083923339844
    7. '```' → logprob: -14.500083923339844
    8. '`)' → logprob: -14.750083923339844
    9. ']' → logprob: -14.875083923339844
    10. '           ' → logprob: -15.250083923339844

Token 1167: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38718393445014954
    2. '+' → logprob: -1.1371839046478271
    3. '```' → logprob: -8.262184143066406
    4. '                ' → logprob: -10.887184143066406
    5. '                   ' → logprob: -11.512184143066406
    6. '                    ' → logprob: -11.762184143066406
    7. ' ' → logprob: -12.762184143066406
    8. '                               ' → logprob: -13.262184143066406
    9. '+C' → logprob: -13.387184143066406
    10. ')' → logprob: -13.637184143066406

Token 1168: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003806257154792547
    2. ' C' → logprob: -7.875380516052246
    3. '               ' → logprob: -15.875380516052246
    4. '```' → logprob: -15.875380516052246
    5. '                   ' → logprob: -16.375381469726562
    6. '           ' → logprob: -17.125381469726562
    7. '   ' → logprob: -17.250381469726562
    8. 'S' → logprob: -18.125381469726562
    9. '                           ' → logprob: -18.250381469726562
    10. ' ' → logprob: -18.250381469726562

Token 1169: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.061972394585609436
    2. '*' → logprob: -2.8119723796844482
    3. '*((' → logprob: -12.436972618103027
    4. ' *' → logprob: -14.561972618103027
    5. '*(-' → logprob: -16.06197166442871
    6. '**' → logprob: -16.06197166442871
    7. '```' → logprob: -16.43697166442871
    8. ' *(' → logprob: -17.06197166442871
    9. '(co' → logprob: -17.31197166442871
    10. '*[' → logprob: -17.93697166442871

Token 1170: 'co' (ID: 1191)
  Prédit: 'co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -3.173704271830502e-06
    2. '(co' → logprob: -13.25000286102295
    3. ' co' → logprob: -13.50000286102295
    4. '```' → logprob: -20.125003814697266
    5. 'cc' → logprob: -20.250003814697266
    6. '_co' → logprob: -20.375003814697266
    7. 'cco' → logprob: -20.375003814697266
    8. 'coe' → logprob: -20.625003814697266
    9. 'cq' → logprob: -20.750003814697266
    10. '
' → logprob: -21.000003814697266

Token 1171: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1637164789135568e-05
    2. '_q' → logprob: -11.750011444091797
    3. '_c' → logprob: -12.500011444091797
    4. 'c' → logprob: -18.125011444091797
    5. '```' → logprob: -19.375011444091797
    6. 'qc' → logprob: -19.625011444091797
    7. 'cum' → logprob: -20.000011444091797
    8. 'qu' → logprob: -20.500011444091797
    9. '
' → logprob: -20.500011444091797
    10. '	q' → logprob: -21.875011444091797

Token 1172: '_c' (ID: 1303)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06486334651708603
    2. '_c' → logprob: -2.814863443374634
    3. '[i' → logprob: -6.439863204956055
    4. '_q' → logprob: -6.689863204956055
    5. '[q' → logprob: -10.064863204956055
    6. 'c' → logprob: -13.064863204956055
    7. '```' → logprob: -13.064863204956055
    8. '[_' → logprob: -13.439863204956055
    9. '[' → logprob: -14.189863204956055
    10. 'qu' → logprob: -14.814863204956055

Token 1173: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.018784234300255775
    2. 'q' → logprob: -4.018784046173096
    3. '[i' → logprob: -7.393784046173096
    4. '_q' → logprob: -11.893784523010254
    5. 'c' → logprob: -12.268784523010254
    6. 'cc' → logprob: -12.893784523010254
    7. '_cc' → logprob: -13.018784523010254
    8. 'i' → logprob: -13.768784523010254
    9. '-c' → logprob: -14.143784523010254
    10. 'cum' → logprob: -15.518784523010254

Token 1174: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.375
    3. 'i' → logprob: -16.75
    4. '[
' → logprob: -17.375
    5. '{i' → logprob: -17.375
    6. '[' → logprob: -18.125
    7. '[-' → logprob: -18.25
    8. '[I' → logprob: -18.5
    9. '[(' → logprob: -18.75
    10. '(i' → logprob: -18.875

Token 1175: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021474185632541776
    2. 'i' → logprob: -8.625214576721191
    3. '-' → logprob: -10.375214576721191
    4. '{i' → logprob: -13.750214576721191
    5. '[' → logprob: -14.000214576721191
    6. '```' → logprob: -14.375214576721191
    7. '[-' → logprob: -14.625214576721191
    8. '(i' → logprob: -14.875214576721191
    9. '[I' → logprob: -15.500214576721191
    10. '][' → logprob: -16.625215530395508

Token 1176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -14.250001907348633
    3. '```' → logprob: -14.375001907348633
    4. 'i' → logprob: -15.375001907348633
    5. '[i' → logprob: -15.750001907348633
    6. '-' → logprob: -15.750001907348633
    7. '...' → logprob: -16.875001907348633
    8. 'prev' → logprob: -17.000001907348633
    9. ' ' → logprob: -17.250001907348633
    10. '``' → logprob: -18.250001907348633

Token 1177: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6223222017288208
    2. ' -' → logprob: -1.7473222017288208
    3. '-' → logprob: -1.8723222017288208
    4. '[i' → logprob: -2.2473220825195312
    5. ']' → logprob: -3.8723220825195312
    6. ')' → logprob: -4.997322082519531
    7. '[-' → logprob: -7.497322082519531
    8. '][' → logprob: -7.997322082519531
    9. '           ' → logprob: -8.372322082519531
    10. '```' → logprob: -8.622322082519531

Token 1178: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38687753677368164
    2. ' -' → logprob: -1.1368775367736816
    3. '```' → logprob: -12.511877059936523
    4. '[' → logprob: -13.636877059936523
    5. ')' → logprob: -14.261877059936523
    6. '`' → logprob: -15.386877059936523
    7. ' ' → logprob: -15.761877059936523
    8. '*' → logprob: -15.886877059936523
    9. '
' → logprob: -16.261877059936523
    10. '-s' → logprob: -16.511877059936523

Token 1179: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.00017720005416776985
    2. ' cc' → logprob: -8.750177383422852
    3. 'sc' → logprob: -11.000177383422852
    4. 'cq' → logprob: -13.250177383422852
    5. '	cc' → logprob: -15.875177383422852
    6. ' sc' → logprob: -16.62517738342285
    7. '(cc' → logprob: -18.37517738342285
    8. '_cc' → logprob: -18.62517738342285
    9. 'c' → logprob: -18.62517738342285
    10. 'qc' → logprob: -18.87517738342285

Token 1180: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.500108141452074e-05
    2. '_q' → logprob: -10.625035285949707
    3. 'qu' → logprob: -12.125035285949707
    4. 'uq' → logprob: -13.875035285949707
    5. 'qc' → logprob: -14.000035285949707
    6. '_c' → logprob: -14.000035285949707
    7. '[q' → logprob: -14.125035285949707
    8. 'cq' → logprob: -14.375035285949707
    9. 'oq' → logprob: -14.500035285949707
    10. 'c' → logprob: -15.375035285949707

Token 1181: '_c' (ID: 1303)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2022809535264969
    2. '_c' → logprob: -1.7022809982299805
    3. '_q' → logprob: -7.0772809982299805
    4. '[q' → logprob: -11.82728099822998
    5. 'c' → logprob: -11.95228099822998
    6. 'qc' → logprob: -12.45228099822998
    7. '[' → logprob: -13.45228099822998
    8. '[i' → logprob: -13.70228099822998
    9. 'cq' → logprob: -13.82728099822998
    10. 'sc' → logprob: -14.82728099822998

Token 1182: 'um' (ID: 394)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002285694790771231
    2. '_q' → logprob: -8.625228881835938
    3. '[q' → logprob: -11.000228881835938
    4. '[i' → logprob: -11.250228881835938
    5. '_c' → logprob: -12.625228881835938
    6. 'um' → logprob: -12.875228881835938
    7. '[' → logprob: -13.000228881835938
    8. 'qu' → logprob: -13.000228881835938
    9. 'uq' → logprob: -13.125228881835938
    10. 'i' → logprob: -13.500228881835938

Token 1183: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.25
    3. '[q' → logprob: -17.125
    4. '```' → logprob: -18.875
    5. 'q' → logprob: -19.0
    6. '{i' → logprob: -20.0
    7. '[' → logprob: -21.0
    8. '[I' → logprob: -21.125
    9. '[
' → logprob: -21.875
    10. '(i' → logprob: -22.0

Token 1184: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19631336629390717
    2. '[' → logprob: -1.8213133811950684
    3. 'i' → logprob: -4.571313381195068
    4. '[i' → logprob: -5.196313381195068
    5. 'q' → logprob: -8.32131290435791
    6. '_' → logprob: -9.07131290435791
    7. '_i' → logprob: -9.44631290435791
    8. '1' → logprob: -10.69631290435791
    9. ' -' → logprob: -11.19631290435791
    10. '   ' → logprob: -11.32131290435791

Token 1185: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05497605353593826
    2. '[i' → logprob: -2.929975986480713
    3. '1' → logprob: -9.804976463317871
    4. '[' → logprob: -11.054976463317871
    5. 'q' → logprob: -11.179976463317871
    6. '{i' → logprob: -12.929976463317871
    7. '```' → logprob: -13.304976463317871
    8. ' i' → logprob: -13.679976463317871
    9. '-' → logprob: -14.304976463317871
    10. '   ' → logprob: -14.554976463317871

Token 1186: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002238013403257355
    2. ')+' → logprob: -8.500224113464355
    3. ' )' → logprob: -11.125224113464355
    4. '           ' → logprob: -13.875224113464355
    5. '+' → logprob: -14.250224113464355
    6. ']' → logprob: -14.375224113464355
    7. '```' → logprob: -14.500224113464355
    8. ')+(' → logprob: -14.750224113464355
    9. '         ' → logprob: -14.875224113464355
    10. '`)' → logprob: -15.125224113464355

Token 1187: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14277467131614685
    2. '+' → logprob: -2.0177745819091797
    3. '```' → logprob: -10.39277458190918
    4. '                ' → logprob: -10.51777458190918
    5. '               ' → logprob: -11.01777458190918
    6. '            ' → logprob: -12.51777458190918
    7. '              ' → logprob: -12.76777458190918
    8. '                   ' → logprob: -12.76777458190918
    9. '             ' → logprob: -12.76777458190918
    10. '                    ' → logprob: -13.01777458190918

Token 1188: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.5759395956993103
    2. 'S' → logprob: -0.8259395956993103
    3. '```' → logprob: -15.825939178466797
    4. ' ' → logprob: -16.950939178466797
    5. '_S' → logprob: -17.325939178466797
    6. '   ' → logprob: -18.200939178466797
    7. ' ' → logprob: -18.575939178466797
    8. '>S' → logprob: -18.825939178466797
    9. '<|end|>' → logprob: -18.950939178466797
    10. '`' → logprob: -19.325939178466797

Token 1189: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0008076059748418629
    2. '*' → logprob: -7.125807762145996
    3. '```' → logprob: -13.875807762145996
    4. '*((' → logprob: -14.250807762145996
    5. ' *' → logprob: -14.500807762145996
    6. ' *(' → logprob: -15.125807762145996
    7. '**' → logprob: -15.625807762145996
    8. '(' → logprob: -15.750807762145996
    9. ')*(' → logprob: -16.00080680847168
    10. '`' → logprob: -16.50080680847168

Token 1190: 'so' (ID: 786)
  Prédit: 'so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.5760030746459961
    2. '(' → logprob: -0.8260030746459961
    3. '(s' → logprob: -10.326003074645996
    4. 'sq' → logprob: -11.701003074645996
    5. ' soq' → logprob: -12.076003074645996
    6. '   ' → logprob: -12.701003074645996
    7. '_so' → logprob: -13.076003074645996
    8. '-so' → logprob: -13.076003074645996
    9. 'So' → logprob: -13.326003074645996
    10. 'soz' → logprob: -13.701003074645996

Token 1191: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.45848218582978e-06
    2. '_q' → logprob: -13.25000286102295
    3. '[q' → logprob: -14.87500286102295
    4. '
' → logprob: -16.000001907348633
    5. '```' → logprob: -16.000001907348633
    6. '	q' → logprob: -17.250001907348633
    7. 'qc' → logprob: -17.750001907348633
    8. ' q' → logprob: -17.875001907348633
    9. '``' → logprob: -18.125001907348633
    10. 'qu' → logprob: -18.125001907348633

Token 1192: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.014893579296767712
    2. '[i' → logprob: -4.389893531799316
    3. '_q' → logprob: -6.639893531799316
    4. 'q' → logprob: -7.639893531799316
    5. 'c' → logprob: -8.014893531799316
    6. '[' → logprob: -8.764893531799316
    7. '```' → logprob: -10.014893531799316
    8. '[q' → logprob: -10.139893531799316
    9. 'sc' → logprob: -11.639893531799316
    10. '-c' → logprob: -12.514893531799316

Token 1193: 'um' (ID: 394)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.007160750217735767
    2. 'q' → logprob: -5.757160663604736
    3. '[i' → logprob: -5.882160663604736
    4. 'c' → logprob: -7.382160663604736
    5. 'sc' → logprob: -8.132161140441895
    6. 'cum' → logprob: -9.007161140441895
    7. '_sc' → logprob: -10.132161140441895
    8. '_q' → logprob: -10.382161140441895
    9. '[' → logprob: -10.507161140441895
    10. '[q' → logprob: -10.882161140441895

Token 1194: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4617256056226324e-05
    2. '```' → logprob: -11.750014305114746
    3. '[-' → logprob: -12.250014305114746
    4. '[' → logprob: -13.625014305114746
    5. 'i' → logprob: -14.875014305114746
    6. '`' → logprob: -15.500014305114746
    7. '``' → logprob: -16.125015258789062
    8. '-' → logprob: -17.875015258789062
    9. '\[' → logprob: -17.875015258789062
    10. '[I' → logprob: -18.000015258789062

Token 1195: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007908257655799389
    2. 'i' → logprob: -5.007908344268799
    3. '-' → logprob: -6.757908344268799
    4. '[' → logprob: -11.00790786743164
    5. '[-' → logprob: -11.88290786743164
    6. '   ' → logprob: -13.38290786743164
    7. '{i' → logprob: -13.75790786743164
    8. ')' → logprob: -14.13290786743164
    9. '```' → logprob: -14.38290786743164
    10. ' -' → logprob: -14.50790786743164

Token 1196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006509594968520105
    2. 'i' → logprob: -7.375650882720947
    3. '-' → logprob: -11.125651359558105
    4. '[i' → logprob: -12.250651359558105
    5. 'sc' → logprob: -13.500651359558105
    6. '```' → logprob: -14.250651359558105
    7. '...' → logprob: -14.625651359558105
    8. ' ' → logprob: -14.750651359558105
    9. '(i' → logprob: -14.875651359558105
    10. '<|end|>' → logprob: -15.375651359558105

Token 1197: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12235711514949799
    2. ']' → logprob: -2.372357130050659
    3. '-' → logprob: -4.37235689163208
    4. '[' → logprob: -4.87235689163208
    5. '][' → logprob: -7.37235689163208
    6. '[-' → logprob: -8.372357368469238
    7. ' -' → logprob: -8.622357368469238
    8. ')' → logprob: -8.872357368469238
    9. ']-' → logprob: -9.372357368469238
    10. '   ' → logprob: -9.372357368469238

Token 1198: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.042322613298892975
    2. '-' → logprob: -3.2923226356506348
    3. '[' → logprob: -5.542322635650635
    4. '[-' → logprob: -8.917322158813477
    5. ')' → logprob: -9.417322158813477
    6. ' ' → logprob: -10.167322158813477
    7. '           ' → logprob: -10.542322158813477
    8. '<|end|>' → logprob: -11.167322158813477
    9. ' [' → logprob: -12.042322158813477
    10. '[i' → logprob: -12.042322158813477

Token 1199: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -4.787507714354433e-05
    2. 'so' → logprob: -10.12504768371582
    3. ' sc' → logprob: -12.87504768371582
    4. 'sq' → logprob: -13.25004768371582
    5. '(sc' → logprob: -13.37504768371582
    6. 'soc' → logprob: -14.00004768371582
    7. '```' → logprob: -15.12504768371582
    8. '1' → logprob: -15.37504768371582
    9. '	sc' → logprob: -15.62504768371582
    10. '
' → logprob: -16.25004768371582

Token 1200: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.0033853515051305e-05
    2. '_q' → logprob: -9.750060081481934
    3. 'qu' → logprob: -14.375060081481934
    4. '```' → logprob: -15.625060081481934
    5. 'oq' → logprob: -15.875060081481934
    6. '[q' → logprob: -15.875060081481934
    7. '_c' → logprob: -16.250059127807617
    8. 'uq' → logprob: -16.250059127807617
    9. 'qc' → logprob: -16.375059127807617
    10. 'c' → logprob: -16.375059127807617

Token 1201: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.07979802787303925
    2. 'q' → logprob: -2.5797979831695557
    3. 'c' → logprob: -7.329798221588135
    4. 'uc' → logprob: -9.454797744750977
    5. 'um' → logprob: -9.829797744750977
    6. '_q' → logprob: -10.579797744750977
    7. 'cum' → logprob: -10.579797744750977
    8. '[' → logprob: -10.704797744750977
    9. '[i' → logprob: -11.079797744750977
    10. 'uq' → logprob: -11.454797744750977

Token 1202: 'um' (ID: 394)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.474721759557724
    2. 'um' → logprob: -0.9747217893600464
    3. '[' → logprob: -8.724721908569336
    4. 'uc' → logprob: -9.474721908569336
    5. 'uq' → logprob: -9.474721908569336
    6. 'up' → logprob: -9.974721908569336
    7. '[q' → logprob: -10.099721908569336
    8. '_q' → logprob: -10.224721908569336
    9. 'qu' → logprob: -10.349721908569336
    10. '_um' → logprob: -10.599721908569336

Token 1203: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.264791876077652
    2. 'q' → logprob: -1.5147918462753296
    3. '[q' → logprob: -4.389791965484619
    4. 'i' → logprob: -8.639791488647461
    5. '[' → logprob: -8.889791488647461
    6. '_q' → logprob: -10.264791488647461
    7. '[-' → logprob: -10.889791488647461
    8. 'sc' → logprob: -13.139791488647461
    9. '_c' → logprob: -13.639791488647461
    10. '-' → logprob: -13.639791488647461

Token 1204: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4222758114337921
    2. 'i' → logprob: -1.5472757816314697
    3. '[i' → logprob: -2.0472757816314697
    4. '[' → logprob: -6.297276020050049
    5. '   ' → logprob: -7.672276020050049
    6. 'q' → logprob: -9.42227554321289
    7. '_i' → logprob: -10.92227554321289
    8. '{i' → logprob: -10.92227554321289
    9. '[-' → logprob: -10.92227554321289
    10. ' -' → logprob: -11.04727554321289

Token 1205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008132128976285458
    2. 'i' → logprob: -4.883131980895996
    3. '-' → logprob: -8.133131980895996
    4. '[i' → logprob: -8.508131980895996
    5. '[' → logprob: -10.883131980895996
    6. '   ' → logprob: -12.508131980895996
    7. ']' → logprob: -13.633131980895996
    8. ' ' → logprob: -13.883131980895996
    9. '...' → logprob: -14.008131980895996
    10. '```' → logprob: -14.258131980895996

Token 1206: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046081675100140274
    2. '           ' → logprob: -8.625460624694824
    3. ')
' → logprob: -8.625460624694824
    4. '               ' → logprob: -10.375460624694824
    5. '])' → logprob: -10.375460624694824
    6. '                   ' → logprob: -11.500460624694824
    7. ')]' → logprob: -11.625460624694824
    8. ')])' → logprob: -12.375460624694824
    9. '))' → logprob: -12.625460624694824
    10. ')`' → logprob: -12.875460624694824

Token 1207: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020938070490956306
    2. ')' → logprob: -4.395937919616699
    3. '           ' → logprob: -5.520937919616699
    4. '                   ' → logprob: -5.645937919616699
    5. '              ' → logprob: -8.6459379196167
    6. '<|end|>' → logprob: -8.7709379196167
    7. '                               ' → logprob: -9.0209379196167
    8. '                       ' → logprob: -9.6459379196167
    9. '                           ' → logprob: -9.6459379196167
    10. '             ' → logprob: -9.8959379196167

Token 1208: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.02699848636984825
    2. ' values' → logprob: -4.026998519897461
    3. 'if' → logprob: -5.526998519897461
    4. '               ' → logprob: -5.901998519897461
    5. ' if' → logprob: -6.776998519897461
    6. '                   ' → logprob: -7.026998519897461
    7. '           ' → logprob: -10.401998519897461
    8. '(values' → logprob: -10.776998519897461
    9. '	values' → logprob: -12.526998519897461
    10. '                       ' → logprob: -12.526998519897461

Token 1209: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0036159895826131105
    2. '.' → logprob: -5.628615856170654
    3. '.setdefault' → logprob: -11.753616333007812
    4. '.update' → logprob: -13.003616333007812
    5. '.append' → logprob: -13.253616333007812
    6. '.Add' → logprob: -13.753616333007812
    7. 'add' → logprob: -14.253616333007812
    8. '.insert' → logprob: -14.628616333007812
    9. ' .' → logprob: -14.753616333007812
    10. '.values' → logprob: -15.128616333007812

Token 1210: '(indent' (ID: 184205)
  Prédit: '(indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indent' → logprob: -0.00015943869948387146
    2. 'indent' → logprob: -8.75015926361084
    3. '(ind' → logprob: -14.00015926361084
    4. ' indent' → logprob: -16.625160217285156
    5. '(' → logprob: -18.125160217285156
    6. '_indent' → logprob: -18.250160217285156
    7. '(intent' → logprob: -18.500160217285156
    8. '-indent' → logprob: -18.750160217285156
    9. 'Indent' → logprob: -20.375160217285156
    10. ' (' → logprob: -20.750160217285156

Token 1211: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.125
    3. '```' → logprob: -16.5
    4. '_vals' → logprob: -16.625
    5. ')_' → logprob: -16.875
    6. 'Val' → logprob: -17.0
    7. '_VAL' → logprob: -17.0
    8. ' _' → logprob: -17.875
    9. '[val' → logprob: -18.25
    10. ')' → logprob: -18.5

Token 1212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014946071431040764
    2. '           ' → logprob: -4.389945983886719
    3. '               ' → logprob: -6.139945983886719
    4. ')
' → logprob: -8.764945983886719
    5. '                   ' → logprob: -9.639945983886719
    6. '')' → logprob: -10.764945983886719
    7. '                       ' → logprob: -11.764945983886719
    8. '       ' → logprob: -12.139945983886719
    9. '<|end|>' → logprob: -12.139945983886719
    10. '                           ' → logprob: -12.264945983886719

Token 1213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011253333650529385
    2. '```' → logprob: -7.376125335693359
    3. '       ' → logprob: -8.00112533569336
    4. '               ' → logprob: -10.00112533569336
    5. 'if' → logprob: -10.25112533569336
    6. ' if' → logprob: -10.37612533569336
    7. ' ' → logprob: -11.75112533569336
    8. '          ' → logprob: -11.87612533569336
    9. '<|end|>' → logprob: -11.87612533569336
    10. '   ' → logprob: -12.00112533569336

Token 1214: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2032163441181183
    2. 'if' (adapté à ' if') → logprob: -1.703216314315796
    3. '       ' → logprob: -6.578216552734375
    4. ' if' → logprob: -8.203216552734375
    5. '   ' → logprob: -9.078216552734375
    6. '```' → logprob: -10.953216552734375
    7. '               ' → logprob: -12.703216552734375
    8. '          ' → logprob: -14.328216552734375
    9. '         ' → logprob: -14.703216552734375
    10. '     ' → logprob: -14.828216552734375

Token 1215: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0001234428636962548
    2. ' len' → logprob: -9.000123023986816
    3. '(len' → logprob: -17.625123977661133
    4. 'values' → logprob: -18.125123977661133
    5. 'None' → logprob: -18.250123977661133
    6. '   ' → logprob: -18.500123977661133
    7. '	len' → logprob: -19.250123977661133
    8. '
' → logprob: -19.875123977661133
    9. ' ' → logprob: -22.250123977661133
    10. '  ' → logprob: -22.875123977661133

Token 1216: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -2.2200749754119897e-06
    2. 'values' → logprob: -13.125001907348633
    3. ' values' → logprob: -16.625001907348633
    4. '	values' → logprob: -17.000001907348633
    5. '(' → logprob: -17.250001907348633
    6. '(vals' → logprob: -18.125001907348633
    7. '.values' → logprob: -18.250001907348633
    8. '(results' → logprob: -18.375001907348633
    9. ' (' → logprob: -18.875001907348633
    10. '(
' → logprob: -19.375001907348633

Token 1217: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7340660095214844
    2. ' ==' → logprob: -1.4840660095214844
    3. '>' → logprob: -1.8590660095214844
    4. ')' → logprob: -2.1090660095214844
    5. ' >' → logprob: -4.234066009521484
    6. ')>' → logprob: -7.234066009521484
    7. ')==' → logprob: -7.484066009521484
    8. ' !=' → logprob: -8.984066009521484
    9. '```' → logprob: -9.109066009521484
    10. '!=' → logprob: -9.484066009521484

Token 1218: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.626125693321228
    2. '==' → logprob: -0.876125693321228
    3. ' ==' → logprob: -3.2511258125305176
    4. ' >' → logprob: -4.751125812530518
    5. '!=' → logprob: -7.001125812530518
    6. ' !=' → logprob: -7.876125812530518
    7. '```' → logprob: -8.37612533569336
    8. ')' → logprob: -10.25112533569336
    9. ')>' → logprob: -12.87612533569336
    10. ')==' → logprob: -12.87612533569336

Token 1219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '```' → logprob: -16.125001907348633
    5. '>' → logprob: -16.375001907348633
    6. '=' → logprob: -18.625001907348633
    7. '==' → logprob: -19.250001907348633
    8. '   ' → logprob: -19.250001907348633
    9. '
' → logprob: -19.250001907348633
    10. '`' → logprob: -19.750001907348633

Token 1220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.25
    3. '```' → logprob: -17.5
    4. '>' → logprob: -17.75
    5. '==' → logprob: -19.125
    6. '=' → logprob: -19.125
    7. ' ' → logprob: -19.25
    8. '
' → logprob: -20.375
    9. '``' → logprob: -21.375
    10. '`' → logprob: -21.625

Token 1221: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08299882709980011
    2. ':' → logprob: -2.707998752593994
    3. ':
' → logprob: -4.457998752593994
    4. '           ' → logprob: -8.082999229431152
    5. '(values' → logprob: -8.582999229431152
    6. ')' → logprob: -8.707999229431152
    7. '                   ' → logprob: -8.832999229431152
    8. '):
' → logprob: -8.957999229431152
    9. '```' → logprob: -9.332999229431152
    10. '                       ' → logprob: -9.832999229431152

Token 1222: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003461905289441347
    2. 'results' → logprob: -9.000346183776855
    3. ' results' → logprob: -9.250346183776855
    4. '           ' → logprob: -10.375346183776855
    5. '	           ' → logprob: -11.000346183776855
    6. 'values' → logprob: -11.125346183776855
    7. '   ' → logprob: -11.375346183776855
    8. '		       ' → logprob: -11.375346183776855
    9. '	results' → logprob: -11.375346183776855
    10. '                   ' → logprob: -12.000346183776855

Token 1223: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0005398084758780897
    2. ' results' → logprob: -8.250539779663086
    3. '               ' → logprob: -9.250539779663086
    4. '                   ' → logprob: -9.250539779663086
    5. '   ' → logprob: -9.500539779663086
    6. '	results' → logprob: -12.125539779663086
    7. '           ' → logprob: -12.625539779663086
    8. '       ' → logprob: -13.125539779663086
    9. 'values' → logprob: -14.500539779663086
    10. '                       ' → logprob: -15.750539779663086

Token 1224: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007295898394659162
    2. '.' → logprob: -7.250729560852051
    3. '.extend' → logprob: -10.87572956085205
    4. '.app' → logprob: -15.25072956085205
    5. '.add' → logprob: -15.75072956085205
    6. 'append' → logprob: -16.375730514526367
    7. '.setdefault' → logprob: -16.750730514526367
    8. '.Append' → logprob: -17.000730514526367
    9. '.push' → logprob: -17.500730514526367
    10. ' .' → logprob: -17.625730514526367

Token 1225: '(str' (ID: 7946)
  Prédit: '(values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.006906829308718443
    2. '(next' → logprob: -5.006906986236572
    3. '(list' → logprob: -8.756906509399414
    4. 'values' → logprob: -10.381906509399414
    5. '(' → logprob: -13.881906509399414
    6. 'next' → logprob: -14.131906509399414
    7. '(*' → logprob: -15.256906509399414
    8. '(int' → logprob: -15.381906509399414
    9. 'list' → logprob: -15.381906509399414
    10. '(results' → logprob: -15.506906509399414

Token 1226: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.5775303244590759
    2. '(next' → logprob: -0.8275303244590759
    3. '(list' → logprob: -6.827530384063721
    4. '(min' → logprob: -7.952530384063721
    5. 'values' → logprob: -9.077529907226562
    6. 'next' → logprob: -10.202529907226562
    7. 'list' → logprob: -13.202529907226562
    8. ' next' → logprob: -15.702529907226562
    9. '(iter' → logprob: -15.702529907226562
    10. '(max' → logprob: -15.702529907226562

Token 1227: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0001302374730585143
    2. '.values' → logprob: -9.500130653381348
    3. '().' → logprob: -10.375130653381348
    4. '.copy' → logprob: -11.500130653381348
    5. 'pop' → logprob: -12.000130653381348
    6. ' .' → logprob: -12.750130653381348
    7. ').' → logprob: -13.375130653381348
    8. '(pop' → logprob: -13.875130653381348
    9. '.' → logprob: -14.000130653381348
    10. '	pop' → logprob: -15.125130653381348

Token 1228: '()))
' (ID: 24521)
  Prédit: '()))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))
' → logprob: -0.3870157301425934
    2. '()))' → logprob: -1.137015700340271
    3. '()' → logprob: -9.512015342712402
    4. '))' → logprob: -10.637015342712402
    5. '())' → logprob: -10.887015342712402
    6. '()))
' → logprob: -11.137015342712402
    7. '()))

' → logprob: -11.887015342712402
    8. '))
' → logprob: -12.762015342712402
    9. '()[' → logprob: -13.512015342712402
    10. '(' → logprob: -13.887015342712402

Token 1229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47489985823631287
    2. 'else' → logprob: -0.9748998880386353
    3. ' else' → logprob: -7.224899768829346
    4. '		' → logprob: -9.974900245666504
    5. 'elif' → logprob: -10.474900245666504
    6. '	       ' → logprob: -12.099900245666504
    7. '```' → logprob: -12.474900245666504
    8. '	else' → logprob: -13.349900245666504
    9. '
' → logprob: -13.349900245666504
    10. '               ' → logprob: -13.474900245666504

Token 1230: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.160507932305336
    2. 'else' (adapté à ' else') → logprob: -1.9105079174041748
    3. '       ' → logprob: -8.785508155822754
    4. ' else' → logprob: -9.035508155822754
    5. 'elif' → logprob: -12.035508155822754
    6. '		' → logprob: -12.785508155822754
    7. '	       ' → logprob: -13.910508155822754
    8. '   ' → logprob: -14.410508155822754
    9. '```' → logprob: -14.535508155822754
    10. '               ' → logprob: -14.785508155822754

Token 1231: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8059505224227905
    2. '               ' → logprob: -1.4309505224227905
    3. 'results' → logprob: -1.5559505224227905
    4. ' results' → logprob: -2.30595064163208
    5. '                   ' → logprob: -5.80595064163208
    6. '   ' → logprob: -8.180950164794922
    7. '	results' → logprob: -8.805950164794922
    8. '(results' → logprob: -9.680950164794922
    9. '                       ' → logprob: -9.930950164794922
    10. '       ' → logprob: -11.430950164794922

Token 1232: '               ' (ID: 506)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.011581889353692532
    2. '           ' → logprob: -4.761581897735596
    3. ' results' → logprob: -6.511581897735596
    4. '               ' → logprob: -6.636581897735596
    5. '                   ' → logprob: -9.511581420898438
    6. '"' → logprob: -10.636581420898438
    7. '   ' → logprob: -10.761581420898438
    8. '	results' → logprob: -11.011581420898438
    9. ''' → logprob: -11.136581420898438
    10. '       ' → logprob: -12.386581420898438

Token 1233: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -1.5048530030981055e-06
    2. ' results' → logprob: -13.500001907348633
    3. '	results' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '               ' → logprob: -19.250001907348633
    6. '                   ' → logprob: -19.250001907348633
    7. '           ' → logprob: -20.250001907348633
    8. '-results' → logprob: -21.125001907348633
    9. '       ' → logprob: -22.250001907348633
    10. '(results' → logprob: -22.375001907348633

Token 1234: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.860340752406046e-05
    2. '.' → logprob: -9.7500581741333
    3. '.app' → logprob: -16.000059127807617
    4. '.extend' → logprob: -16.750059127807617
    5. '.Append' → logprob: -18.000059127807617
    6. ' .' → logprob: -18.125059127807617
    7. 'append' → logprob: -18.375059127807617
    8. '.
' → logprob: -19.875059127807617
    9. '>.' → logprob: -20.125059127807617
    10. '_append' → logprob: -20.125059127807617

Token 1235: '(str' (ID: 7946)
  Prédit: '('-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.0790158063173294
    2. '("-' → logprob: -2.5790157318115234
    3. '(str' → logprob: -9.704015731811523
    4. '('' → logprob: -9.954015731811523
    5. ''-' → logprob: -11.579015731811523
    6. '("' → logprob: -12.329015731811523
    7. '(' → logprob: -13.329015731811523
    8. '(-' → logprob: -14.329015731811523
    9. 'str' → logprob: -14.704015731811523
    10. '"-' → logprob: -15.079015731811523

Token 1236: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.001170225441455841
    2. '-' → logprob: -6.7511701583862305
    3. '(' → logprob: -18.751171112060547
    4. '()-' → logprob: -19.751171112060547
    5. '[-' → logprob: -20.501171112060547
    6. '('-' → logprob: -21.876171112060547
    7. '("-' → logprob: -22.126171112060547
    8. ' -' → logprob: -23.001171112060547
    9. '{-' → logprob: -23.376171112060547
    10. ''-' → logprob: -23.376171112060547

Token 1237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -21.375
    3. '   ' → logprob: -22.25
    4. '
' → logprob: -23.875
    5. '```' → logprob: -23.875
    6. '１' → logprob: -24.125
    7. '۱' → logprob: -24.125
    8. '2' → logprob: -24.25
    9. ')' → logprob: -24.625
    10. '-' → logprob: -24.75

Token 1238: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00017553119687363505
    2. ')' → logprob: -8.750175476074219
    3. '))
' → logprob: -11.000175476074219
    4. '))

' → logprob: -15.250175476074219
    5. ')))' → logprob: -16.75017547607422
    6. ''))' → logprob: -17.25017547607422
    7. ' ))' → logprob: -18.50017547607422
    8. '])' → logprob: -19.25017547607422
    9. '()))' → logprob: -19.25017547607422
    10. '"))' → logprob: -19.62517547607422

Token 1239: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23126859962940216
    2. '       ' → logprob: -1.9812686443328857
    3. 'print' → logprob: -2.7312686443328857
    4. '
' → logprob: -5.731268405914307
    5. '    
' → logprob: -9.106268882751465
    6. '        
' → logprob: -9.731268882751465
    7. '```' → logprob: -11.356268882751465
    8. ' print' → logprob: -11.981268882751465
    9. '	print' → logprob: -12.856268882751465
    10. '           ' → logprob: -13.481268882751465

Token 1240: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008654281497001648
    2. '       ' → logprob: -4.7586541175842285
    3. ' print' → logprob: -10.508654594421387
    4. '   ' → logprob: -11.508654594421387
    5. '```' → logprob: -13.133654594421387
    6. '	print' → logprob: -14.883654594421387
    7. 'for' → logprob: -17.38365364074707
    8. '
' → logprob: -17.63365364074707
    9. '\' → logprob: -18.25865364074707
    10. '`' → logprob: -18.38365364074707

Token 1241: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0020885197445750237
    2. '("' → logprob: -6.25208854675293
    3. '('\' → logprob: -8.75208854675293
    4. '(' → logprob: -13.62708854675293
    5. '(*' → logprob: -15.12708854675293
    6. '("\' → logprob: -15.12708854675293
    7. '()' → logprob: -18.12708854675293
    8. '(('' → logprob: -19.12708854675293
    9. '("("' → logprob: -19.25208854675293
    10. ' ('' → logprob: -19.50208854675293

Token 1242: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002488737925887108
    2. ''\' → logprob: -6.002488613128662
    3. '"' → logprob: -11.37748908996582
    4. '('' → logprob: -13.87748908996582
    5. '"\' → logprob: -15.37748908996582
    6. '('\' → logprob: -15.87748908996582
    7. ' '' → logprob: -15.87748908996582
    8. '''.' → logprob: -16.37748908996582
    9. ''.' → logprob: -17.50248908996582
    10. '\n' → logprob: -18.00248908996582

Token 1243: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.339278580620885e-06
    2. 'print' → logprob: -13.125001907348633
    3. 'j' → logprob: -15.750001907348633
    4. 'jo' → logprob: -16.000001907348633
    5. ' join' → logprob: -16.375001907348633
    6. '.join' → logprob: -17.250001907348633
    7. '```' → logprob: -17.750001907348633
    8. 'joins' → logprob: -18.125001907348633
    9. 'get' → logprob: -19.250001907348633
    10. ')' → logprob: -19.250001907348633

Token 1244: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -2.7610454708337784e-05
    2. 'results' → logprob: -10.500027656555176
    3. ' results' → logprob: -17.37502670288086
    4. '	results' → logprob: -18.00002670288086
    5. '(result' → logprob: -18.50002670288086
    6. '/results' → logprob: -19.12502670288086
    7. '(map' → logprob: -20.50002670288086
    8. '(values' → logprob: -20.50002670288086
    9. 'Results' → logprob: -20.87502670288086
    10. '.results' → logprob: -21.00002670288086

Token 1245: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10022295266389847
    2. ')' → logprob: -2.3502230644226074
    3. '())' → logprob: -11.35022258758545
    4. '()))' → logprob: -12.47522258758545
    5. ')))' → logprob: -15.35022258758545
    6. '})' → logprob: -15.47522258758545
    7. '()' → logprob: -15.72522258758545
    8. '))
' → logprob: -16.225223541259766
    9. ''))' → logprob: -17.225223541259766
    10. '])' → logprob: -17.475223541259766

Token 1246: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1247: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3132936656475067
    2. '__' → logprob: -1.313293695449829
    3. ''' → logprob: -11.18829345703125
    4. '___' → logprob: -12.18829345703125
    5. '_name' → logprob: -12.93829345703125
    6. 'name' → logprob: -12.93829345703125
    7. ' ' → logprob: -13.43829345703125
    8. '_' → logprob: -13.56329345703125
    9. 'Name' → logprob: -13.68829345703125
    10. '/__' → logprob: -13.81329345703125

Token 1248: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.029851848259568214
    2. '==' → logprob: -4.029851913452148
    3. ' ==' → logprob: -4.529851913452148
    4. '=='' → logprob: -7.779851913452148
    5. '=="' → logprob: -8.529851913452148
    6. '```' → logprob: -9.654851913452148
    7. '.__' → logprob: -9.904851913452148
    8. '__.__' → logprob: -10.029851913452148
    9. ' __' → logprob: -10.654851913452148
    10. '__.' → logprob: -11.404851913452148

Token 1249: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0017376589821651578
    2. '==' → logprob: -6.751737594604492
    3. '__.__' → logprob: -8.126737594604492
    4. '=='' → logprob: -9.501737594604492
    5. '=="' → logprob: -9.751737594604492
    6. ' ==' → logprob: -9.876737594604492
    7. '__.' → logprob: -10.751737594604492
    8. '```' → logprob: -10.876737594604492
    9. '__('' → logprob: -11.001737594604492
    10. '___' → logprob: -12.001737594604492

Token 1250: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.26685693860054016
    2. '==' → logprob: -1.5168569087982178
    3. '=="' → logprob: -5.016857147216797
    4. '__' → logprob: -5.516857147216797
    5. '=='' → logprob: -5.516857147216797
    6. '```' → logprob: -9.641857147216797
    7. '==
' → logprob: -11.266857147216797
    8. '__.__' → logprob: -11.891857147216797
    9. '**' → logprob: -11.891857147216797
    10. '=' → logprob: -12.016857147216797

Token 1251: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1002296432852745
    2. ''' → logprob: -2.3502297401428223
    3. '__' → logprob: -10.850229263305664
    4. ' "__' → logprob: -12.725229263305664
    5. ' '__' → logprob: -15.350229263305664
    6. '"user' → logprob: -15.975229263305664
    7. ''"' → logprob: -16.725229263305664
    8. '"name' → logprob: -17.350229263305664
    9. ''post' → logprob: -17.725229263305664
    10. '('__' → logprob: -17.725229263305664

Token 1252: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.024054285138845444
    2. 'main' → logprob: -3.7740542888641357
    3. ''' → logprob: -7.274054050445557
    4. '"' → logprob: -9.149054527282715
    5. 'name' → logprob: -12.274054527282715
    6. '_main' → logprob: -13.774054527282715
    7. '___' → logprob: -14.149054527282715
    8. '__':
' → logprob: -14.399054527282715
    9. '____' → logprob: -14.649054527282715
    10. '__":
' → logprob: -15.524054527282715

Token 1253: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.31796354055404663
    2. '__' → logprob: -1.3179636001586914
    3. '__":
' → logprob: -5.567963600158691
    4. '__:' → logprob: -7.692963600158691
    5. ':' → logprob: -8.942963600158691
    6. '():
' → logprob: -9.567963600158691
    7. '('__' → logprob: -9.817963600158691
    8. '__.' → logprob: -10.817963600158691
    9. '__.__' → logprob: -10.942963600158691
    10. '_' → logprob: -11.317963600158691

Token 1254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023336557671427727
    2. 'solve' → logprob: -3.77333664894104
    3. ' solve' → logprob: -9.398336410522461
    4. '.solve' → logprob: -12.398336410522461
    5. '```' → logprob: -12.773336410522461
    6. '	s' → logprob: -14.898336410522461
    7. '    
' → logprob: -15.523336410522461
    8. '       ' → logprob: -15.523336410522461
    9. '    ' → logprob: -16.39833641052246
    10. '  ' → logprob: -16.39833641052246

Token 1255: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -7.896309739408025e-07
    2. ' solve' → logprob: -14.625000953674316
    3. '   ' → logprob: -15.750000953674316
    4. 'import' → logprob: -16.0
    5. '.solve' → logprob: -18.125
    6. '```' → logprob: -20.625
    7. 'simulate' → logprob: -21.75
    8. 'resolve' → logprob: -22.25
    9. '    
' → logprob: -22.375
    10. 'def' → logprob: -22.625

Token 1256: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3208715617656708
    2. '<|end|>' → logprob: -1.3208715915679932
    3. '```' → logprob: -5.570871353149414
    4. '<|end|>' → logprob: -6.945871353149414
    5. '();' → logprob: -7.070871353149414
    6. '#' → logprob: -8.070871353149414
    7. ')' → logprob: -8.320871353149414
    8. '())' → logprob: -8.445871353149414
    9. '()
' → logprob: -8.445871353149414
    10. '(' → logprob: -8.570871353149414


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1254
Tokens correctement prédits (1ère position, stricte): 494
Tokens correctement prédits (1ère position, avec adaptation): 528
Tokens correctement prédits (top 10): 1006
Précision stricte (1ère position): 39.39%
Précision adaptée (1ère position): 42.11%
Précision (top 10): 80.22%
================================================================================
