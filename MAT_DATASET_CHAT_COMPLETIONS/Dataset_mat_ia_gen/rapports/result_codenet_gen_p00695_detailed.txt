================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def largest_rectangle_in_histogram(heights):
    """
    Calculate the largest rectangle area in a histogram.
    Uses a stack-based approach for O(n) time complexity.
    """
    stack = []  # stack to keep indices of bars
    max_area = 0
    index = 0
    n = len(heights)
    
    while index < n:
        # If this bar is higher than the bar on top of stack or stack is empty, push it to stack
        if not stack or heights[index] >= heights[stack[-1]]:
            stack.append(index)
            index += 1
        else:
            # Pop the top of the stack and calculate area
            top = stack.pop()
            # If stack is empty means everything till index has height >= heights[top]
            width = index if not stack else index - stack[-1] - 1
            area = heights[top] * width
            if area > max_area:
                max_area = area

    # Now pop the remaining bars from stack and calculate area
    while stack:
        top = stack.pop()
        width = n if not stack else n - stack[-1] - 1
        area = heights[top] * width
        if area > max_area:
            max_area = area
    
    return max_area

def largest_rectangle_of_ones(matrix):
    """
    Given a 5x5 binary matrix, find the largest rectangular area consisting only of 1s.
    Matrix is list of lists of integers (0 or 1).
    """
    # heights array to store consecutive 1s count above (including current row)
    heights = [0] * 5
    max_rectangle = 0
    
    for row in matrix:
        # Update the heights histogram for this row
        for i in range(5):
            if row[i] == 1:
                heights[i] += 1
            else:
                heights[i] = 0
        # Calculate largest rectangle in this histogram
        area = largest_rectangle_in_histogram(heights)
        if area > max_rectangle:
            max_rectangle = area
    
    return max_rectangle


def main():
    import sys
    input = sys.stdin.read().strip('\n ')
    # Split input by lines and filter out empty lines
    lines = [line.strip() for line in input.split('\n')]
    # Remove empty lines to separate maps
    filtered_lines = [line for line in lines if line]

    m = int(filtered_lines[0])  # number of maps
    idx = 1
    results = []

    for _ in range(m):
        # Each map has 5 lines
        matrix = []
        for _ in range(5):
            row = filtered_lines[idx].split()
            idx += 1
            # Convert each element to int (0 or 1)
            matrix.append([int(x) for x in row])
        # Compute largest rectangle of 1s for the current map
        result = largest_rectangle_of_ones(matrix)
        results.append(result)
    
    # Print results for each map in separate line
    for res in results:
        print(res)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' largest' (ID: 10574)
  → Token d'amorce (pas de prédiction)

Token 2: '_rectangle' (ID: 166619)
  → Token d'amorce (pas de prédiction)

Token 3: '_in' (ID: 2267)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02332933433353901
    2. '(' → logprob: -4.148329257965088
    3. '```' → logprob: -5.148329257965088
    4. '_in' → logprob: -8.398329734802246
    5. '_:' → logprob: -8.398329734802246
    6. '(_' → logprob: -8.648329734802246
    7. '_rectangle' → logprob: -8.773329734802246
    8. '_area' → logprob: -9.273329734802246
    9. '_space' → logprob: -10.148329734802246
    10. '**' → logprob: -10.398329734802246

Token 4: '_hist' (ID: 70597)
  Prédit: '_hist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hist' → logprob: -0.0013902351493015885
    2. 'hist' → logprob: -7.12639045715332
    3. '_h' → logprob: -8.00139045715332
    4. '_' → logprob: -8.37639045715332
    5. ' histogram' → logprob: -12.00139045715332
    6. 'Histogram' → logprob: -12.12639045715332
    7. 'a' → logprob: -13.37639045715332
    8. '_string' → logprob: -13.75139045715332
    9. 'def' → logprob: -14.00139045715332
    10. ' Histogram' → logprob: -14.25139045715332

Token 5: 'ogram' (ID: 21598)
  Prédit: 'ogram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogram' → logprob: -0.0004228091274853796
    2. 'gram' → logprob: -8.125422477722168
    3. 'og' → logprob: -10.250422477722168
    4. 'rogram' → logprob: -10.375422477722168
    5. 'ogr' → logprob: -10.750422477722168
    6. 'ograms' → logprob: -11.250422477722168
    7. 'o' → logprob: -11.625422477722168
    8. 'ograph' → logprob: -12.375422477722168
    9. 'ograma' → logprob: -12.625422477722168
    10. '```' → logprob: -12.625422477722168

Token 6: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006597067695111036
    2. '(:' → logprob: -5.38159704208374
    3. '():' → logprob: -6.75659704208374
    4. '```' → logprob: -8.381597518920898
    5. '_' → logprob: -9.131597518920898
    6. '(":' → logprob: -9.256597518920898
    7. '(_:' → logprob: -9.881597518920898
    8. '(a' → logprob: -10.006597518920898
    9. '(':' → logprob: -10.256597518920898
    10. '_:' → logprob: -10.381597518920898

Token 7: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.03122016042470932
    2. ')' → logprob: -3.7812201976776123
    3. 'height' → logprob: -5.156219959259033
    4. '):' → logprob: -6.906219959259033
    5. ' heights' → logprob: -7.281219959259033
    6. 'hist' → logprob: -8.031220436096191
    7. '_he' → logprob: -9.531220436096191
    8. '_hist' → logprob: -11.156220436096191
    9. 'h' → logprob: -11.281220436096191
    10. '(' → logprob: -11.406220436096191

Token 8: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.014393609948456287
    2. 'ight' → logprob: -4.2643938064575195
    3. 'i' → logprob: -8.88939380645752
    4. 'ig' → logprob: -9.51439380645752
    5. 'igh' → logprob: -11.13939380645752
    6. 'igts' → logprob: -13.13939380645752
    7. '```' → logprob: -14.38939380645752
    8. 'igits' → logprob: -14.88939380645752
    9. 'igth' → logprob: -15.38939380645752
    10. 'ighted' → logprob: -15.51439380645752

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006919850129634142
    2. ')' → logprob: -5.256919860839844
    3. '[' → logprob: -6.506919860839844
    4. '[]):' → logprob: -9.631919860839844
    5. ':' → logprob: -9.756919860839844
    6. '```' → logprob: -10.631919860839844
    7. '):
' → logprob: -11.006919860839844
    8. ''):' → logprob: -11.631919860839844
    9. ']:' → logprob: -12.006919860839844
    10. ' ):' → logprob: -13.256919860839844

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26340365409851074
    2. '   ' → logprob: -1.5134036540985107
    3. '```' → logprob: -5.51340389251709
    4. ':
' → logprob: -6.01340389251709
    5. '    ' → logprob: -7.01340389251709
    6. '    
' → logprob: -7.26340389251709
    7. ''' → logprob: -7.38840389251709
    8. '(' → logprob: -7.63840389251709
    9. '"' → logprob: -7.88840389251709
    10. ' :' → logprob: -8.38840389251709

Token 11: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042330607771873474
    2. '```' → logprob: -3.917330503463745
    3. ':' → logprob: -4.542330741882324
    4. 'n' → logprob: -5.667330741882324
    5. '    ' → logprob: -6.542330741882324
    6. '       ' → logprob: -6.542330741882324
    7. ' ' → logprob: -7.167330741882324
    8. '`' → logprob: -7.667330741882324
    9. 'max' → logprob: -7.667330741882324
    10. ''' → logprob: -7.792330741882324

Token 12: '   ' (ID: 271)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.3956701159477234
    2. '   ' → logprob: -1.8956701755523682
    3. 'stack' → logprob: -2.020670175552368
    4. '       ' → logprob: -4.520669937133789
    5. ' n' → logprob: -4.770669937133789
    6. 'n' → logprob: -4.770669937133789
    7. ' ' → logprob: -5.145669937133789
    8. '    ' → logprob: -6.270669937133789
    9. ' max' → logprob: -6.270669937133789
    10. '	stack' → logprob: -6.270669937133789

Token 13: ' Calculate' (ID: 38942)
  Prédit: 'Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.4718492031097412
    2. '"""' → logprob: -2.221849203109741
    3. ' Finds' → logprob: -2.221849203109741
    4. 'Calculate' (adapté à ' Calculate') → logprob: -2.846849203109741
    5. 'Calcul' → logprob: -3.471849203109741
    6. ' """' → logprob: -4.09684944152832
    7. '   ' → logprob: -4.34684944152832
    8. 'Returns' → logprob: -4.47184944152832
    9. ' Find' → logprob: -5.09684944152832
    10. ' Calculates' → logprob: -5.34684944152832

Token 14: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.02816222421824932
    2. ' largest' → logprob: -4.028162002563477
    3. ' ' → logprob: -5.528162002563477
    4. 'the' → logprob: -5.528162002563477
    5. '_' → logprob: -7.653162002563477
    6. 'largest' → logprob: -7.653162002563477
    7. 'Largest' → logprob: -7.903162002563477
    8. ' a' → logprob: -9.278162002563477
    9. ' Largest' → logprob: -9.403162002563477
    10. '<|end|>' → logprob: -9.403162002563477

Token 15: ' largest' (ID: 10574)
  Prédit: ' largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largest' → logprob: -0.015230105258524418
    2. ' area' → logprob: -4.515230178833008
    3. ' ' → logprob: -5.640230178833008
    4. 'largest' → logprob: -7.890230178833008
    5. '   ' → logprob: -9.390230178833008
    6. ' space' → logprob: -10.015230178833008
    7. ' l' → logprob: -10.765230178833008
    8. ' maximum' → logprob: -10.890230178833008
    9. '  ' → logprob: -10.890230178833008
    10. ' max' → logprob: -11.640230178833008

Token 16: ' rectangle' (ID: 45808)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08040278404951096
    2. ' ' → logprob: -2.8304028511047363
    3. ' _' → logprob: -4.580402851104736
    4. '_rectangle' → logprob: -4.955402851104736
    5. '_space' → logprob: -7.705402851104736
    6. ' rectangle' → logprob: -8.955402374267578
    7. ' space' → logprob: -9.080402374267578
    8. '_area' → logprob: -10.205402374267578
    9. '   ' → logprob: -10.205402374267578
    10. '  ' → logprob: -10.330402374267578

Token 17: ' area' (ID: 3624)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013723612762987614
    2. ' ' → logprob: -4.638723850250244
    3. ' in' → logprob: -6.138723850250244
    4. ' _' → logprob: -7.263723850250244
    5. '_area' → logprob: -7.388723850250244
    6. '   ' → logprob: -8.513723373413086
    7. ' area' → logprob: -9.638723373413086
    8. '_in' → logprob: -10.013723373413086
    9. '    ' → logprob: -10.638723373413086
    10. '```' → logprob: -10.638723373413086

Token 18: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3741699159145355
    2. '   ' → logprob: -1.874169945716858
    3. ' ' → logprob: -2.4991698265075684
    4. ' in' → logprob: -3.6241698265075684
    5. '```' → logprob: -4.124169826507568
    6. '(' → logprob: -4.499169826507568
    7. '`' → logprob: -4.874169826507568
    8. ''' → logprob: -5.249169826507568
    9. ')' → logprob: -6.624169826507568
    10. ' that' → logprob: -6.749169826507568

Token 19: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1768968403339386
    2. ' the' → logprob: -2.176896810531616
    3. ' ' → logprob: -4.176897048950195
    4. ' an' → logprob: -4.301897048950195
    5. ' histogram' → logprob: -4.301897048950195
    6. '_hist' → logprob: -6.176897048950195
    7. 'the' → logprob: -6.801897048950195
    8. '   ' → logprob: -7.176897048950195
    9. 'hist' → logprob: -7.176897048950195
    10. ' hist' → logprob: -7.301897048950195

Token 20: ' histogram' (ID: 81482)
  Prédit: ' histogram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' histogram' → logprob: -0.008722944185137749
    2. 'hist' → logprob: -5.38372278213501
    3. ' ' → logprob: -6.38372278213501
    4. 'n' → logprob: -6.88372278213501
    5. '_hist' → logprob: -7.13372278213501
    6. ' hist' → logprob: -8.258723258972168
    7. '   ' → logprob: -8.758723258972168
    8. ' list' → logprob: -9.883723258972168
    9. 'Histogram' → logprob: -10.383723258972168
    10. ' given' → logprob: -11.133723258972168

Token 21: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25982165336608887
    2. '(' → logprob: -2.259821653366089
    3. '```' → logprob: -2.759821653366089
    4. ':' → logprob: -3.134821653366089
    5. '       ' → logprob: -5.634821891784668
    6. '(
' → logprob: -5.634821891784668
    7. '.' → logprob: -6.384821891784668
    8. ':
' → logprob: -6.634821891784668
    9. '    
' → logprob: -6.759821891784668
    10. '`' → logprob: -7.009821891784668

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030789554119110107
    2. '```' → logprob: -4.280789375305176
    3. '\n' → logprob: -4.405789375305176
    4. '\' → logprob: -7.030789375305176
    5. '    
' → logprob: -7.155789375305176
    6. '       ' → logprob: -7.405789375305176
    7. '    ' → logprob: -8.155789375305176
    8. ':' → logprob: -8.530789375305176
    9. '`' → logprob: -8.780789375305176
    10. '
' → logprob: -8.780789375305176

Token 23: ' Uses' (ID: 69986)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03326087445020676
    2. '\n' → logprob: -4.158260822296143
    3. '```' → logprob: -4.533260822296143
    4. '    
' → logprob: -6.033260822296143
    5. '\' → logprob: -7.033260822296143
    6. '       ' → logprob: -7.158260822296143
    7. '    ' → logprob: -7.533260822296143
    8. '   
' → logprob: -8.0332612991333
    9. '
' → logprob: -8.2832612991333
    10. ':' → logprob: -8.4082612991333

Token 24: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.016855783760547638
    2. ' stack' → logprob: -4.141855716705322
    3. '   ' → logprob: -8.14185619354248
    4. 'a' → logprob: -8.26685619354248
    5. '    ' → logprob: -9.64185619354248
    6. ' an' → logprob: -9.76685619354248
    7. ' the' → logprob: -9.89185619354248
    8. 'stack' → logprob: -10.14185619354248
    9. ' stacks' → logprob: -11.01685619354248
    10. '_stack' → logprob: -11.51685619354248

Token 25: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.0007344625773839653
    2. 'stack' → logprob: -7.625734329223633
    3. ' monot' → logprob: -8.625734329223633
    4. 'mon' → logprob: -10.500734329223633
    5. '   ' → logprob: -10.625734329223633
    6. ' ' → logprob: -12.375734329223633
    7. ' monoton' → logprob: -12.375734329223633
    8. ' single' → logprob: -13.000734329223633
    9. '    ' → logprob: -13.500734329223633
    10. '	stack' → logprob: -14.250734329223633

Token 26: '-based' (ID: 8235)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9020107388496399
    2. ' to' → logprob: -0.9020107388496399
    3. ' for' → logprob: -2.152010679244995
    4. ' ' → logprob: -4.277010917663574
    5. '    ' → logprob: -4.652010917663574
    6. '-based' → logprob: -4.652010917663574
    7. '       ' → logprob: -4.902010917663574
    8. ')' → logprob: -5.402010917663574
    9. '_' → logprob: -5.777010917663574
    10. '.' → logprob: -5.902010917663574

Token 27: ' approach' (ID: 7139)
  Prédit: ' approach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.007567703258246183
    2. ' ' → logprob: -5.882567882537842
    3. ' method' → logprob: -6.007567882537842
    4. '   ' → logprob: -7.007567882537842
    5. 'appro' → logprob: -7.507567882537842
    6. ' algorithm' → logprob: -8.007567405700684
    7. '    ' → logprob: -8.757567405700684
    8. '_' → logprob: -9.007567405700684
    9. ' solution' → logprob: -10.257567405700684
    10. ' )' → logprob: -10.882567405700684

Token 28: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12222810834646225
    2. '```' → logprob: -2.4972281455993652
    3. '.' → logprob: -4.872228145599365
    4. ':' → logprob: -4.997228145599365
    5. '\n' → logprob: -5.122228145599365
    6. '``' → logprob: -5.872228145599365
    7. '
' → logprob: -6.247228145599365
    8. '    
' → logprob: -6.372228145599365
    9. ')' → logprob: -7.122228145599365
    10. '\' → logprob: -7.247228145599365

Token 29: ' O' (ID: 532)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3549180030822754
    2. ' maintaining' → logprob: -1.4799180030822754
    3. ' finding' → logprob: -2.2299180030822754
    4. '   ' → logprob: -2.3549180030822754
    5. ' an' → logprob: -2.8549180030822754
    6. ' calculating' → logprob: -2.8549180030822754
    7. ' O' → logprob: -3.1049180030822754
    8. ' linear' → logprob: -3.6049180030822754
    9. ' keeping' → logprob: -3.6049180030822754
    10. ' ' → logprob: -3.9799180030822754

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008739020675420761
    2. '(' → logprob: -4.883738994598389
    3. 'n' → logprob: -7.258738994598389
    4. '(N' → logprob: -8.008739471435547
    5. '-' → logprob: -10.258739471435547
    6. '(
' → logprob: -11.008739471435547
    7. '(log' → logprob: -12.508739471435547
    8. '()' → logprob: -12.633739471435547
    9. 'N' → logprob: -12.633739471435547
    10. 'b' → logprob: -12.758739471435547

Token 31: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020783171930816025
    2. ' )' → logprob: -8.500207901000977
    3. 'log' → logprob: -12.750207901000977
    4. ')
' → logprob: -14.375207901000977
    5. '   ' → logprob: -15.750207901000977
    6. ' ' → logprob: -16.000207901000977
    7. ')-' → logprob: -16.250207901000977
    8. '),' → logprob: -16.500207901000977
    9. 'time' → logprob: -16.875207901000977
    10. ').' → logprob: -17.000207901000977

Token 32: ' time' (ID: 1058)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031258516013622284
    2. ':' → logprob: -4.656258583068848
    3. ' ' → logprob: -5.281258583068848
    4. '    ' → logprob: -5.656258583068848
    5. '):' → logprob: -5.781258583068848
    6. '_' → logprob: -6.406258583068848
    7. '    
' → logprob: -6.406258583068848
    8. '```' → logprob: -6.531258583068848
    9. ' :' → logprob: -6.656258583068848
    10. '  ' → logprob: -7.406258583068848

Token 33: ' complexity' (ID: 37588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004529688972979784
    2. ':' → logprob: -6.8795294761657715
    3. '):' → logprob: -7.3795294761657715
    4. '```' → logprob: -7.6295294761657715
    5. '    
' → logprob: -7.7545294761657715
    6. ')' → logprob: -7.7545294761657715
    7. '  ' → logprob: -8.37952995300293
    8. '
' → logprob: -8.37952995300293
    9. ')
' → logprob: -8.50452995300293
    10. '    ' → logprob: -8.50452995300293

Token 34: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7883386015892029
    2. '   ' → logprob: -0.9133386015892029
    3. '):' → logprob: -2.2883386611938477
    4. ')' → logprob: -3.5383386611938477
    5. ':
' → logprob: -5.413338661193848
    6. '```' → logprob: -5.413338661193848
    7. '):
' → logprob: -6.538338661193848
    8. '\n' → logprob: -7.163338661193848
    9. ')
' → logprob: -7.413338661193848
    10. '
' → logprob: -7.413338661193848

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07227697223424911
    2. '```' → logprob: -2.822277069091797
    3. '    
' → logprob: -5.447277069091797
    4. '
' → logprob: -6.072277069091797
    5. '\n' → logprob: -6.572277069091797
    6. '``' → logprob: -7.197277069091797
    7. '"""
' → logprob: -7.322277069091797
    8. '  
' → logprob: -9.072277069091797
    9. '   
' → logprob: -9.072277069091797
    10. '"""' → logprob: -9.197277069091797

Token 36: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007809496950358152
    2. '```' → logprob: -5.382809638977051
    3. '    
' → logprob: -7.132809638977051
    4. '\n' → logprob: -7.132809638977051
    5. 'n' → logprob: -7.257809638977051
    6. '    ' → logprob: -8.25780963897705
    7. '
' → logprob: -8.50780963897705
    8. '       ' → logprob: -9.13280963897705
    9. '   
' → logprob: -9.75780963897705
    10. '\' → logprob: -10.25780963897705

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009172387421131134
    2. 'stack' → logprob: -5.759172439575195
    3. ' stack' → logprob: -5.759172439575195
    4. '    
' → logprob: -6.509172439575195
    5. 'n' → logprob: -7.884172439575195
    6. '
' → logprob: -8.134172439575195
    7. '       ' → logprob: -8.384172439575195
    8. '	stack' → logprob: -9.259172439575195
    9. '    ' → logprob: -9.509172439575195
    10. '\n' → logprob: -9.634172439575195

Token 38: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.7546843886375427
    2. 'stack' (adapté à ' stack') → logprob: -1.1296844482421875
    3. '   ' → logprob: -1.8796844482421875
    4. ' n' → logprob: -3.5046844482421875
    5. 'n' → logprob: -3.8796844482421875
    6. 'max' → logprob: -7.1296844482421875
    7. ' heights' → logprob: -7.1296844482421875
    8. ' max' → logprob: -7.2546844482421875
    9. '       ' → logprob: -8.254684448242188
    10. '	stack' → logprob: -9.004684448242188

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0020153596997261047
    2. '=' → logprob: -6.252015590667725
    3. '=[]' → logprob: -9.627015113830566
    4. ' ' → logprob: -12.002015113830566
    5. '   ' → logprob: -12.752015113830566
    6. '[:]' → logprob: -13.252015113830566
    7. '[' → logprob: -13.502015113830566
    8. ' =[' → logprob: -13.877015113830566
    9. '    ' → logprob: -14.002015113830566
    10. '[]' → logprob: -14.002015113830566

Token 40: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.47414082288742065
    2. ' []' → logprob: -0.9741408228874207
    3. '[-' → logprob: -10.724141120910645
    4. '[' → logprob: -11.099141120910645
    5. ' ' → logprob: -11.724141120910645
    6. '[]}' → logprob: -11.974141120910645
    7. '[:]' → logprob: -12.474141120910645
    8. '=[]' → logprob: -12.474141120910645
    9. '  ' → logprob: -14.349141120910645
    10. ' [' → logprob: -14.349141120910645

Token 41: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01554905902594328
    2. '    
' → logprob: -4.890549182891846
    3. 'max' → logprob: -6.140549182891846
    4. '    ' → logprob: -6.890549182891846
    5. '
' → logprob: -7.015549182891846
    6. '     
' → logprob: -7.765549182891846
    7. ' max' → logprob: -7.765549182891846
    8. ' ' → logprob: -7.765549182891846
    9. '  
' → logprob: -7.890549182891846
    10. '   
' → logprob: -8.015548706054688

Token 42: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3348899185657501
    2. '   ' → logprob: -1.4598898887634277
    3. 'for' → logprob: -3.9598898887634277
    4. '    
' → logprob: -4.584889888763428
    5. 'result' → logprob: -4.959889888763428
    6. 'area' → logprob: -5.459889888763428
    7. 'largest' → logprob: -5.709889888763428
    8. 'he' → logprob: -6.084889888763428
    9. '
' → logprob: -6.459889888763428
    10. ' for' → logprob: -7.459889888763428

Token 43: ' stack' (ID: 10825)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3601607382297516
    2. ' indices' → logprob: -2.3601608276367188
    3. '[]' → logprob: -2.6101608276367188
    4. '(stack' → logprob: -3.4851608276367188
    5. 'indices' → logprob: -3.6101608276367188
    6. ' stack' → logprob: -4.235160827636719
    7. '(' → logprob: -4.360160827636719
    8. ' stores' → logprob: -4.360160827636719
    9. ' []' → logprob: -4.610160827636719
    10. 'stack' → logprob: -5.735160827636719

Token 44: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6025763154029846
    2. '<|end|>' → logprob: -1.8525762557983398
    3. ',' → logprob: -2.35257625579834
    4. ')' → logprob: -2.85257625579834
    5. ' =' → logprob: -2.97757625579834
    6. ' for' → logprob: -4.22757625579834
    7. '<|end|>' → logprob: -4.22757625579834
    8. ' ' → logprob: -4.72757625579834
    9. '=' → logprob: -5.10257625579834
    10. '(' → logprob: -5.35257625579834

Token 45: ' keep' (ID: 3357)
  Prédit: ' store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.13988375663757324
    2. 'store' → logprob: -2.1398837566375732
    3. ' keep' → logprob: -4.514883995056152
    4. 'keep' → logprob: -6.639883995056152
    5. ' hold' → logprob: -8.264883995056152
    6. '(store' → logprob: -9.389883995056152
    7. '_store' → logprob: -10.014883995056152
    8. ' ' → logprob: -10.139883995056152
    9. '	store' → logprob: -10.264883995056152
    10. 'indices' → logprob: -11.014883995056152

Token 46: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.47755497694015503
    2. ' indices' → logprob: -1.4775550365447998
    3. 'indexes' → logprob: -3.2275550365448
    4. '(indices' → logprob: -3.3525550365448
    5. 'track' → logprob: -4.227554798126221
    6. ' track' → logprob: -4.227554798126221
    7. ' (' → logprob: -4.477554798126221
    8. '(track' → logprob: -4.477554798126221
    9. '(index' → logprob: -4.977554798126221
    10. '(' → logprob: -5.102554798126221

Token 47: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04088762775063515
    2. 'he' → logprob: -4.290887832641602
    3. ' for' → logprob: -4.915887832641602
    4. 'max' → logprob: -5.415887832641602
    5. 'for' → logprob: -5.415887832641602
    6. 'result' → logprob: -5.915887832641602
    7. ',' → logprob: -6.665887832641602
    8. '```' → logprob: -6.790887832641602
    9. '    
' → logprob: -6.915887832641602
    10. 'i' → logprob: -7.165887832641602

Token 48: ' bars' (ID: 21821)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0029661727603524923
    2. 'in' → logprob: -6.377966403961182
    3. 'the' → logprob: -6.877966403961182
    4. ' heights' → logprob: -9.377965927124023
    5. '   ' → logprob: -10.252965927124023
    6. 'bars' → logprob: -10.252965927124023
    7. 'stack' → logprob: -10.752965927124023
    8. ' the' → logprob: -10.877965927124023
    9. ' ' → logprob: -11.877965927124023
    10. 'hist' → logprob: -12.002965927124023

Token 49: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014765791594982147
    2. 'max' → logprob: -5.264765739440918
    3. ' for' → logprob: -5.764765739440918
    4. ' max' → logprob: -6.139765739440918
    5. 'area' → logprob: -6.889765739440918
    6. '    
' → logprob: -7.139765739440918
    7. 'for' → logprob: -7.639765739440918
    8. 'he' → logprob: -7.889765739440918
    9. '```' → logprob: -7.889765739440918
    10. 'result' → logprob: -8.264765739440918

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33918800950050354
    2. 'max' → logprob: -1.4641879796981812
    3. ' max' → logprob: -3.3391880989074707
    4. 'area' → logprob: -4.089188098907471
    5. ' area' → logprob: -6.089188098907471
    6. 'largest' → logprob: -6.714188098907471
    7. 'areas' → logprob: -8.839187622070312
    8. '    
' → logprob: -8.964187622070312
    9. 'n' → logprob: -9.464187622070312
    10. ' n' → logprob: -9.964187622070312

Token 51: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.18045559525489807
    2. ' max' → logprob: -2.0554556846618652
    3. '   ' → logprob: -3.3054556846618652
    4. 'area' → logprob: -8.680455207824707
    5. 'largest' → logprob: -9.055455207824707
    6. ' area' → logprob: -10.180455207824707
    7. 'res' → logprob: -10.930455207824707
    8. '    
' → logprob: -11.680455207824707
    9. ' largest' → logprob: -11.805455207824707
    10. 'result' → logprob: -11.930455207824707

Token 52: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.0001652796781854704
    2. '_' → logprob: -8.875164985656738
    3. '_height' → logprob: -10.625164985656738
    4. 'area' → logprob: -15.125164985656738
    5. '_width' → logprob: -15.625164985656738
    6. '_stack' → logprob: -15.750164985656738
    7. '_length' → logprob: -16.125165939331055
    8. 'Area' → logprob: -16.125165939331055
    9. '_val' → logprob: -16.250165939331055
    10. '_value' → logprob: -16.375165939331055

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002477677771821618
    2. '=' → logprob: -6.002477645874023
    3. ' ' → logprob: -13.252477645874023
    4. ',' → logprob: -15.877477645874023
    5. ' ,' → logprob: -17.252477645874023
    6. ' =
' → logprob: -17.377477645874023
    7. '_' → logprob: -17.377477645874023
    8. '  ' → logprob: -17.377477645874023
    9. ')' → logprob: -17.877477645874023
    10. 's' → logprob: -18.002477645874023

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164921827614307
    2. ' ' → logprob: -4.264164924621582
    3. '   ' → logprob: -13.639164924621582
    4. ' ' → logprob: -16.639163970947266
    5. '  ' → logprob: -17.639163970947266
    6. '۰' → logprob: -18.514163970947266
    7. '    ' → logprob: -18.764163970947266
    8. '=' → logprob: -18.889163970947266
    9. '```' → logprob: -18.889163970947266
    10. '       ' → logprob: -19.076663970947266

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.750024795532227
    4. '۰' → logprob: -17.312524795532227
    5. '[' → logprob: -18.187524795532227
    6. '000' → logprob: -18.250024795532227
    7. '  ' → logprob: -18.375024795532227
    8. '=' → logprob: -18.375024795532227
    9. '```' → logprob: -18.812524795532227
    10. ' ' → logprob: -18.875024795532227

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39735153317451477
    2. '   ' → logprob: -2.0223515033721924
    3. '    
' → logprob: -2.2723515033721924
    4. ' 
' → logprob: -3.6473515033721924
    5. '  
' → logprob: -4.1473517417907715
    6. '\n' → logprob: -4.1473517417907715
    7. '\' → logprob: -5.0223517417907715
    8. ',' → logprob: -5.0223517417907715
    9. '   
' → logprob: -5.1473517417907715
    10. '<|end|>' → logprob: -6.0223517417907715

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013629894703626633
    2. ' for' → logprob: -4.638629913330078
    3. '    
' → logprob: -6.013629913330078
    4. '
' → logprob: -7.513629913330078
    5. 'for' → logprob: -7.638629913330078
    6. '    ' → logprob: -9.513629913330078
    7. '```' → logprob: -9.888629913330078
    8. 'n' → logprob: -10.263629913330078
    9. ' heights' → logprob: -10.513629913330078
    10. ' 
' → logprob: -10.513629913330078

Token 58: ' index' (ID: 3472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0156445503234863
    2. '   ' → logprob: -1.3906445503234863
    3. 'for' → logprob: -1.5156445503234863
    4. 'i' → logprob: -1.8906445503234863
    5. ' i' → logprob: -4.390644550323486
    6. 'n' → logprob: -6.015644550323486
    7. 'index' (adapté à ' index') → logprob: -6.640644550323486
    8. 'he' → logprob: -7.015644550323486
    9. '    
' → logprob: -8.265644073486328
    10. '    ' → logprob: -8.390644073486328

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010313623584806919
    2. ' ' → logprob: -4.885313510894775
    3. '=' → logprob: -6.010313510894775
    4. '  ' → logprob: -9.010313987731934
    5. ' +=' → logprob: -10.135313987731934
    6. '<|end|>' → logprob: -10.635313987731934
    7. ' =)' → logprob: -11.135313987731934
    8. '    ' → logprob: -12.010313987731934
    9. ' ,' → logprob: -12.135313987731934
    10. ')' → logprob: -12.385313987731934

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020871460437775
    2. ' ' → logprob: -2.3502087593078613
    3. '   ' → logprob: -14.600208282470703
    4. '  ' → logprob: -14.850208282470703
    5. '<|end|>' → logprob: -15.100208282470703
    6. ' ' → logprob: -15.475208282470703
    7. '۰' → logprob: -15.850208282470703
    8. '```' → logprob: -15.912708282470703
    9. ' =' → logprob: -16.787708282470703
    10. ')' → logprob: -16.787708282470703

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.37502670288086
    4. '```' → logprob: -17.62502670288086
    5. '۰' → logprob: -17.62502670288086
    6. '  ' → logprob: -19.00002670288086
    7. '=' → logprob: -19.37502670288086
    8. '[' → logprob: -19.68752670288086
    9. 's' → logprob: -19.93752670288086
    10. '０' → logprob: -20.50002670288086

Token 62: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.775183379650116
    2. '   ' → logprob: -1.5251834392547607
    3. '<|end|>' → logprob: -2.2751834392547607
    4. '  ' → logprob: -3.2751834392547607
    5. ':' → logprob: -3.4001834392547607
    6. '\n' → logprob: -3.7751834392547607
    7. '
' → logprob: -4.150183200836182
    8. '\' → logprob: -4.150183200836182
    9. ' while' → logprob: -4.275183200836182
    10. ',' → logprob: -4.525183200836182

Token 63: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6424708962440491
    2. '   ' → logprob: -1.7674708366394043
    3. ' ' → logprob: -2.2674708366394043
    4. '
' → logprob: -2.8924708366394043
    5. ' while' → logprob: -3.2674708366394043
    6. 'while' → logprob: -3.5174708366394043
    7. '\n' → logprob: -3.6424708366394043
    8. '```' → logprob: -4.892470836639404
    9. ' 
' → logprob: -5.017470836639404
    10. '   
' → logprob: -5.392470836639404

Token 64: ' n' (ID: 297)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.039564609527588
    2. '   ' → logprob: -1.164564609527588
    3. ' while' → logprob: -1.164564609527588
    4. '```' → logprob: -5.164564609527588
    5. '\n' → logprob: -5.289564609527588
    6. ' ' → logprob: -5.664564609527588
    7. '	while' → logprob: -6.164564609527588
    8. '    ' → logprob: -6.414564609527588
    9. 'n' (adapté à ' n') → logprob: -7.039564609527588
    10. '    
' → logprob: -7.289564609527588

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5250282883644104
    2. '=' → logprob: -0.9000282883644104
    3. ' ' → logprob: -7.275028228759766
    4. '  ' → logprob: -8.400028228759766
    5. ' <' → logprob: -8.525028228759766
    6. ' >' → logprob: -8.900028228759766
    7. '>' → logprob: -8.900028228759766
    8. ':' → logprob: -8.900028228759766
    9. '   ' → logprob: -9.150028228759766
    10. ')' → logprob: -9.775028228759766

Token 66: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.04858771339058876
    2. 'len' → logprob: -3.0485877990722656
    3. '(len' → logprob: -16.298587799072266
    4. '	len' → logprob: -16.673587799072266
    5. '   ' → logprob: -16.798587799072266
    6. '=len' → logprob: -16.798587799072266
    7. '[len' → logprob: -17.048587799072266
    8. ' ' → logprob: -18.548587799072266
    9. '<len' → logprob: -19.048587799072266
    10. '```' → logprob: -20.173587799072266

Token 67: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.7697225252486533e-06
    2. ' (' → logprob: -13.375003814697266
    3. '(
' → logprob: -13.500003814697266
    4. '(height' → logprob: -14.875003814697266
    5. 'he' → logprob: -15.375003814697266
    6. '(

' → logprob: -16.625003814697266
    7. ' heights' → logprob: -17.375003814697266
    8. '(heap' → logprob: -17.625003814697266
    9. '(h' → logprob: -18.375003814697266
    10. '_he' → logprob: -18.375003814697266

Token 68: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.00023774817236699164
    2. ' heights' → logprob: -8.375237464904785
    3. ')' → logprob: -12.500237464904785
    4. '(' → logprob: -13.125237464904785
    5. 'height' → logprob: -14.500237464904785
    6. '_he' → logprob: -15.125237464904785
    7. ' he' → logprob: -15.625237464904785
    8. 'h' → logprob: -16.2502384185791
    9. 'hei' → logprob: -16.2502384185791
    10. 'heur' → logprob: -16.3752384185791

Token 69: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -2.3438327843905427e-05
    2. 'igh' → logprob: -11.50002384185791
    3. 'ight' → logprob: -12.75002384185791
    4. 'ig' → logprob: -13.00002384185791
    5. 'IGHTS' → logprob: -13.12502384185791
    6. 'i' → logprob: -13.75002384185791
    7. 'ght' → logprob: -13.87502384185791
    8. 'igts' → logprob: -14.12502384185791
    9. '```' → logprob: -14.12502384185791
    10. '   ' → logprob: -14.62502384185791

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.203409844194539e-05
    2. ' )' → logprob: -10.375041961669922
    3. '   ' → logprob: -12.125041961669922
    4. ')
' → logprob: -12.500041961669922
    5. '):' → logprob: -14.500041961669922
    6. ' ' → logprob: -15.375041961669922
    7. ')n' → logprob: -15.625041961669922
    8. ':' → logprob: -15.750041961669922
    9. '),' → logprob: -16.625041961669922
    10. '```' → logprob: -16.750041961669922

Token 71: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5038906335830688
    2. '
' → logprob: -1.5038906335830688
    3. '    
' → logprob: -2.0038905143737793
    4. 'while' → logprob: -4.753890514373779
    5. '  
' → logprob: -4.878890514373779
    6. ' while' → logprob: -4.878890514373779
    7. '\n' → logprob: -5.503890514373779
    8. ' 
' → logprob: -5.628890514373779
    9. '```' → logprob: -5.753890514373779
    10. '   
' → logprob: -6.503890514373779

Token 72: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7778605222702026
    2. ' while' → logprob: -0.9028605222702026
    3. '   ' → logprob: -2.027860641479492
    4. ' ' → logprob: -6.652860641479492
    5. '\n' → logprob: -7.277860641479492
    6. '```' → logprob: -7.402860641479492
    7. '	while' → logprob: -7.402860641479492
    8. '    
' → logprob: -9.027860641479492
    9. '    ' → logprob: -9.277860641479492
    10. 'While' → logprob: -10.027860641479492

Token 73: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.001726584043353796
    2. ' while' → logprob: -6.3767266273498535
    3. '   ' → logprob: -10.876726150512695
    4. '```' → logprob: -13.001726150512695
    5. 'While' → logprob: -13.126726150512695
    6. '	while' → logprob: -13.876726150512695
    7. 'for' → logprob: -16.126726150512695
    8. ' ' → logprob: -16.251726150512695
    9. '    ' → logprob: -17.376726150512695
    10. '`' → logprob: -18.001726150512695

Token 74: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.003606244223192334
    2. 'index' → logprob: -5.62860631942749
    3. ' ' → logprob: -12.253605842590332
    4. '(index' → logprob: -14.253605842590332
    5. '	index' → logprob: -14.503605842590332
    6. ' ' → logprob: -16.37860679626465
    7. '_index' → logprob: -16.75360679626465
    8. ' (' → logprob: -17.00360679626465
    9. '#index' → logprob: -17.12860679626465
    10. '[index' → logprob: -17.37860679626465

Token 75: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0018697367049753666
    2. '<' → logprob: -6.3768696784973145
    3. ' ' → logprob: -9.126870155334473
    4. ' <=' → logprob: -10.126870155334473
    5. '[' → logprob: -12.001870155334473
    6. '<len' → logprob: -12.126870155334473
    7. '  ' → logprob: -13.251870155334473
    8. '   ' → logprob: -14.001870155334473
    9. ' <
' → logprob: -14.001870155334473
    10. '<size' → logprob: -14.376870155334473

Token 76: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019289902411401272
    2. ' n' → logprob: -6.251928806304932
    3. '	n' → logprob: -16.126928329467773
    4. '   ' → logprob: -16.251928329467773
    5. 'len' → logprob: -16.376928329467773
    6. '<|end|>' → logprob: -16.876928329467773
    7. ' ' → logprob: -17.376928329467773
    8. '```' → logprob: -17.751928329467773
    9. '
' → logprob: -18.626928329467773
    10. '  ' → logprob: -18.751928329467773

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001979378139367327
    2. ' :' → logprob: -8.750198364257812
    3. ':**' → logprob: -11.125198364257812
    4. ':
' → logprob: -11.375198364257812
    5. '):' → logprob: -11.500198364257812
    6. ' and' → logprob: -14.125198364257812
    7. '   ' → logprob: -14.250198364257812
    8. '():' → logprob: -15.375198364257812
    9. '<|end|>' → logprob: -16.000198364257812
    10. '#:' → logprob: -16.125198364257812

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13916270434856415
    2. '   ' → logprob: -3.01416277885437
    3. '    ' → logprob: -3.88916277885437
    4. ' ' → logprob: -4.014162540435791
    5. ':' → logprob: -4.264162540435791
    6. ' if' → logprob: -4.514162540435791
    7. ' :' → logprob: -5.014162540435791
    8. '        
' → logprob: -5.514162540435791
    9. 'if' → logprob: -6.764162540435791
    10. '<|end|>' → logprob: -7.139162540435791

Token 79: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14462991058826447
    2. ' ' → logprob: -3.019629955291748
    3. '    ' → logprob: -3.394629955291748
    4. '   ' → logprob: -4.019629955291748
    5. 'if' → logprob: -4.144629955291748
    6. '       ' → logprob: -4.519629955291748
    7. '        ' → logprob: -6.019629955291748
    8. '     
' → logprob: -6.769629955291748
    9. '```' → logprob: -6.894629955291748
    10. '  ' → logprob: -7.519629955291748

Token 80: ' If' (ID: 1843)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.32349893450737
    2. ' heights' → logprob: -1.8234989643096924
    3. ' if' → logprob: -2.4484989643096924
    4. 'if' → logprob: -3.9484989643096924
    5. ' he' → logprob: -5.323498725891113
    6. 'len' → logprob: -6.698498725891113
    7. ' stack' → logprob: -6.698498725891113
    8. 'stack' → logprob: -7.198498725891113
    9. 'If' → logprob: -8.073498725891113
    10. 'He' → logprob: -8.698498725891113

Token 81: ' this' (ID: 495)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12216944992542267
    2. 'not' → logprob: -2.2471694946289062
    3. '(not' → logprob: -4.872169494628906
    4. ' (' → logprob: -6.747169494628906
    5. '(' → logprob: -8.622169494628906
    6. 'he' → logprob: -9.372169494628906
    7. '(stack' → logprob: -9.622169494628906
    8. '(len' → logprob: -10.247169494628906
    9. ' heights' → logprob: -10.372169494628906
    10. ' stack' → logprob: -10.497169494628906

Token 82: ' bar' (ID: 3608)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.9938048124313354
    2. '[' → logprob: -1.9938048124313354
    3. 's' → logprob: -2.118804931640625
    4. 'index' → logprob: -2.493804931640625
    5. 'stack' → logprob: -2.618804931640625
    6. '[index' → logprob: -2.743804931640625
    7. ' is' → logprob: -3.493804931640625
    8. ' heights' → logprob: -3.743804931640625
    9. 'height' → logprob: -3.868804931640625
    10. ' or' → logprob: -4.743804931640625

Token 83: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.29042112827301025
    2. '[' → logprob: -1.7904211282730103
    3. ' ' → logprob: -3.2904210090637207
    4. 'height' → logprob: -5.165421009063721
    5. '[]' → logprob: -5.415421009063721
    6. ' ==' → logprob: -5.415421009063721
    7. 's' → logprob: -5.540421009063721
    8. ' has' → logprob: -5.540421009063721
    9. '   ' → logprob: -5.665421009063721
    10. 'is' → logprob: -5.915421009063721

Token 84: ' higher' (ID: 7266)
  Prédit: 'higher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'higher' → logprob: -0.11408736556768417
    2. ' higher' → logprob: -2.4890873432159424
    3. '   ' → logprob: -4.7390875816345215
    4. 'empty' → logprob: -5.9890875816345215
    5. ' ' → logprob: -5.9890875816345215
    6. 'he' → logprob: -6.3640875816345215
    7. '    ' → logprob: -6.6140875816345215
    8. 's' → logprob: -6.7390875816345215
    9. 'Higher' → logprob: -6.8640875816345215
    10. 'height' → logprob: -6.8640875816345215

Token 85: ' than' (ID: 1572)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0057679726742208
    2. ' ' → logprob: -5.630767822265625
    3. 'or' → logprob: -7.005767822265625
    4. '[' → logprob: -8.005767822265625
    5. ' and' → logprob: -8.630767822265625
    6. '  ' → logprob: -8.755767822265625
    7. '   ' → logprob: -8.880767822265625
    8. '    ' → logprob: -9.005767822265625
    9. '[]' → logprob: -9.505767822265625
    10. 's' → logprob: -9.505767822265625

Token 86: ' the' (ID: 290)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8383545279502869
    2. ' the' → logprob: -1.0883545875549316
    3. 'he' → logprob: -2.4633545875549316
    4. ' or' → logprob: -2.9633545875549316
    5. '(stack' → logprob: -3.4633545875549316
    6. 'the' → logprob: -3.9633545875549316
    7. ' stack' → logprob: -4.463354587554932
    8. 'stack' → logprob: -5.088354587554932
    9. 's' → logprob: -5.213354587554932
    10. ' heights' → logprob: -5.463354587554932

Token 87: ' bar' (ID: 3608)
  Prédit: ' bar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bar' → logprob: -0.3958718478679657
    2. 'stack' → logprob: -1.770871877670288
    3. 'bar' → logprob: -1.895871877670288
    4. ' stack' → logprob: -6.020871639251709
    5. 'last' → logprob: -6.520871639251709
    6. 'top' → logprob: -7.145871639251709
    7. ' or' → logprob: -7.270871639251709
    8. 'or' → logprob: -7.520871639251709
    9. '   ' → logprob: -9.270872116088867
    10. 'he' → logprob: -9.770872116088867

Token 88: ' on' (ID: 402)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.3427896201610565
    2. 's' → logprob: -1.342789649963379
    3. ' on' → logprob: -4.592789649963379
    4. ' or' → logprob: -4.717789649963379
    5. '[' → logprob: -5.967789649963379
    6. 'stack' → logprob: -6.342789649963379
    7. ' ' → logprob: -6.592789649963379
    8. ''s' → logprob: -6.967789649963379
    9. '   ' → logprob: -7.342789649963379
    10. '        ' → logprob: -7.467789649963379

Token 89: ' top' (ID: 2344)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6113401651382446
    2. ' top' → logprob: -1.6113401651382446
    3. 'stack' → logprob: -2.236340045928955
    4. ' stack' → logprob: -2.361340045928955
    5. 'the' → logprob: -3.361340045928955
    6. 'top' → logprob: -3.861340045928955
    7. ' ' → logprob: -7.361340045928955
    8. '[top' → logprob: -9.611340522766113
    9. '(stack' → logprob: -10.111340522766113
    10. '  ' → logprob: -10.236340522766113

Token 90: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7211520671844482
    2. ' or' → logprob: -0.7211520671844482
    3. ' ' → logprob: -5.096152305603027
    4. 'of' → logprob: -5.096152305603027
    5. 's' → logprob: -5.221152305603027
    6. '    ' → logprob: -5.846152305603027
    7. '(stack' → logprob: -6.221152305603027
    8. 'or' → logprob: -6.346152305603027
    9. '  ' → logprob: -6.971152305603027
    10. '   ' → logprob: -7.346152305603027

Token 91: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07605607807636261
    2. 'the' → logprob: -3.4510560035705566
    3. ' stack' → logprob: -3.5760560035705566
    4. ' the' → logprob: -4.326056003570557
    5. '	stack' → logprob: -8.701056480407715
    6. '(stack' → logprob: -9.451056480407715
    7. 's' → logprob: -10.451056480407715
    8. '_stack' → logprob: -10.951056480407715
    9. ' ' → logprob: -11.826056480407715
    10. '<|end|>' → logprob: -11.826056480407715

Token 92: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.015351379290223122
    2. ':' → logprob: -4.515351295471191
    3. 'or' → logprob: -6.765351295471191
    4. ',' → logprob: -6.765351295471191
    5. ' ' → logprob: -7.015351295471191
    6. '   ' → logprob: -8.015351295471191
    7. '[' → logprob: -8.265351295471191
    8. ' and' → logprob: -8.765351295471191
    9. '  ' → logprob: -9.140351295471191
    10. '    ' → logprob: -9.515351295471191

Token 93: ' stack' (ID: 10825)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.018164340406656265
    2. ' stack' → logprob: -4.143164157867432
    3. ' heights' → logprob: -6.768164157867432
    4. 'not' → logprob: -7.268164157867432
    5. 'he' → logprob: -8.76816463470459
    6. ' he' → logprob: -9.89316463470459
    7. 'stack' → logprob: -10.01816463470459
    8. ' the' → logprob: -11.01816463470459
    9. ' len' → logprob: -12.89316463470459
    10. ' ' → logprob: -13.01816463470459

Token 94: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1543819159269333
    2. ' is' → logprob: -2.5293819904327393
    3. ' ==' → logprob: -3.6543819904327393
    4. 'is' → logprob: -4.27938175201416
    5. '=' → logprob: -4.52938175201416
    6. '[' → logprob: -5.90438175201416
    7. '[]' → logprob: -6.27938175201416
    8. '===' → logprob: -6.65438175201416
    9. '=[]' → logprob: -6.77938175201416
    10. ' and' → logprob: -6.90438175201416

Token 95: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.10274124890565872
    2. ' empty' → logprob: -2.352741241455078
    3. '[]' → logprob: -6.477741241455078
    4. '_empty' → logprob: -8.102741241455078
    5. ' []' → logprob: -8.727741241455078
    6. '  ' → logprob: -8.977741241455078
    7. ' ' → logprob: -9.102741241455078
    8. 'not' → logprob: -9.477741241455078
    9. 'Empty' → logprob: -9.852741241455078
    10. 'empt' → logprob: -9.852741241455078

Token 96: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3755725622177124
    2. ' or' → logprob: -1.6255725622177124
    3. ' and' → logprob: -2.875572681427002
    4. ',' → logprob: -2.875572681427002
    5. ' :' → logprob: -6.625572681427002
    6. ' ,' → logprob: -7.375572681427002
    7. '       ' → logprob: -7.625572681427002
    8. '   ' → logprob: -7.875572681427002
    9. 'and' → logprob: -8.375572204589844
    10. ' ' → logprob: -9.000572204589844

Token 97: ' push' (ID: 9349)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5959540009498596
    2. '    ' → logprob: -1.2209539413452148
    3. '   ' → logprob: -3.220953941345215
    4. '       ' → logprob: -3.345953941345215
    5. ':' → logprob: -4.345953941345215
    6. ' stack' → logprob: -4.720953941345215
    7. '        ' → logprob: -4.845953941345215
    8. '[' → logprob: -4.970953941345215
    9. '  ' → logprob: -5.345953941345215
    10. '(stack' → logprob: -5.595953941345215

Token 98: ' it' (ID: 480)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.14431627094745636
    2. 'index' → logprob: -2.0193161964416504
    3. '   ' → logprob: -7.26931619644165
    4. '(index' → logprob: -7.51931619644165
    5. ' the' → logprob: -9.144316673278809
    6. ' stack' → logprob: -9.769316673278809
    7. '    ' → logprob: -10.269316673278809
    8. '       ' → logprob: -10.394316673278809
    9. '[index' → logprob: -10.394316673278809
    10. 'he' → logprob: -10.394316673278809

Token 99: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7993471026420593
    2. ':' → logprob: -1.049347162246704
    3. '   ' → logprob: -2.299347162246704
    4. '    ' → logprob: -3.424347162246704
    5. '        ' → logprob: -4.049346923828125
    6. ',' → logprob: -4.549346923828125
    7. '):' → logprob: -5.049346923828125
    8. '           ' → logprob: -5.299346923828125
    9. '  ' → logprob: -5.674346923828125
    10. ' :' → logprob: -5.799346923828125

Token 100: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.4798336327075958
    2. ' stack' → logprob: -0.9798336029052734
    3. ' the' → logprob: -5.729833602905273
    4. 'the' → logprob: -6.229833602905273
    5. '   ' → logprob: -8.229833602905273
    6. '	stack' → logprob: -8.854833602905273
    7. 'index' → logprob: -10.354833602905273
    8. ' ' → logprob: -10.479833602905273
    9. '    ' → logprob: -10.604833602905273
    10. ' index' → logprob: -11.854833602905273

Token 101: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35433655977249146
    2. '       ' → logprob: -1.4793365001678467
    3. ' :' → logprob: -2.8543365001678467
    4. '   ' → logprob: -5.979336738586426
    5. '        ' → logprob: -6.354336738586426
    6. '    ' → logprob: -6.354336738586426
    7. ' ' → logprob: -6.604336738586426
    8. '):' → logprob: -7.104336738586426
    9. ',' → logprob: -7.229336738586426
    10. ' and' → logprob: -7.479336738586426

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2187248170375824
    2. ':' → logprob: -2.0937247276306152
    3. ' and' → logprob: -3.5937247276306152
    4. '   ' → logprob: -4.468724727630615
    5. ' if' → logprob: -4.593724727630615
    6. ' or' → logprob: -4.968724727630615
    7. ' :' → logprob: -5.093724727630615
    8. '    ' → logprob: -5.718724727630615
    9. '        ' → logprob: -6.218724727630615
    10. ':
' → logprob: -6.343724727630615

Token 103: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05659862607717514
    2. 'if' (adapté à ' if') → logprob: -2.931598663330078
    3. '       ' → logprob: -7.056598663330078
    4. '   ' → logprob: -8.306598663330078
    5. 'he' → logprob: -8.306598663330078
    6. ' heights' → logprob: -8.431598663330078
    7. '    ' → logprob: -10.056598663330078
    8. ' or' → logprob: -10.181598663330078
    9. '        ' → logprob: -10.556598663330078
    10. ' he' → logprob: -11.556598663330078

Token 104: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11428368836641312
    2. 'not' → logprob: -2.239283800125122
    3. ' (' → logprob: -7.489283561706543
    4. 'index' → logprob: -7.864283561706543
    5. ' index' → logprob: -7.864283561706543
    6. '(not' → logprob: -9.614283561706543
    7. '(index' → logprob: -10.739283561706543
    8. ' ' → logprob: -11.114283561706543
    9. ' stack' → logprob: -11.489283561706543
    10. '  ' → logprob: -12.489283561706543

Token 105: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.07899884134531021
    2. 'stack' → logprob: -2.5789988040924072
    3. '(stack' → logprob: -9.328998565673828
    4. '	stack' → logprob: -10.953998565673828
    5. ' ' → logprob: -13.703998565673828
    6. '_stack' → logprob: -14.078998565673828
    7. '.stack' → logprob: -14.828998565673828
    8. '<|end|>' → logprob: -15.203998565673828
    9. '  ' → logprob: -16.078998565673828
    10. 'stackoverflow' → logprob: -16.953998565673828

Token 106: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03804539144039154
    2. 'or' → logprob: -3.2880454063415527
    3. ' ' → logprob: -13.538044929504395
    4. '[]' → logprob: -13.913044929504395
    5. '	or' → logprob: -14.038044929504395
    6. '  ' → logprob: -15.538044929504395
    7. '[' → logprob: -15.663044929504395
    8. ')' → logprob: -15.788044929504395
    9. '   ' → logprob: -15.913044929504395
    10. ' and' → logprob: -16.28804588317871

Token 107: ' heights' (ID: 57359)
  Prédit: ' heights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.3133131265640259
    2. 'he' → logprob: -1.3133131265640259
    3. 'height' → logprob: -10.438313484191895
    4. 'He' → logprob: -11.813313484191895
    5. ' he' → logprob: -12.063313484191895
    6. '_he' → logprob: -12.563313484191895
    7. '   ' → logprob: -13.313313484191895
    8. ' ' → logprob: -13.688313484191895
    9. ' ' → logprob: -14.188313484191895
    10. ' height' → logprob: -14.313313484191895

Token 108: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.00029637437546625733
    2. '[' → logprob: -8.125296592712402
    3. ' [' → logprob: -16.125295639038086
    4. '[Index' → logprob: -16.125295639038086
    5. '```' → logprob: -16.375295639038086
    6. '[ind' → logprob: -17.625295639038086
    7. '[current' → logprob: -18.000295639038086
    8. '[idx' → logprob: -18.375295639038086
    9. '[token' → logprob: -18.375295639038086
    10. '[
' → logprob: -18.500295639038086

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013228232972323895
    2. ']>=' → logprob: -4.388228416442871
    3. ' ]' → logprob: -8.013228416442871
    4. ']>' → logprob: -8.138228416442871
    5. '[' → logprob: -9.388228416442871
    6. '>' → logprob: -12.263228416442871
    7. '>=' → logprob: -12.763228416442871
    8. ' >=' → logprob: -14.138228416442871
    9. '   ' → logprob: -14.513228416442871
    10. ' ' → logprob: -14.638228416442871

Token 110: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8516028523445129
    2. '[' → logprob: -1.3516027927398682
    3. ' >=' → logprob: -1.3516027927398682
    4. '>' → logprob: -3.601602792739868
    5. ']>=' → logprob: -3.976602792739868
    6. ']' → logprob: -4.976603031158447
    7. ' >' → logprob: -6.226603031158447
    8. ')>=' → logprob: -8.101602554321289
    9. '">' → logprob: -9.476602554321289
    10. ' ' → logprob: -9.601602554321289

Token 111: ' heights' (ID: 57359)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.018171953037381172
    2. ' heights' → logprob: -4.018171787261963
    3. ' he' → logprob: -11.393172264099121
    4. 'height' → logprob: -12.018172264099121
    5. '_he' → logprob: -13.143172264099121
    6. '   ' → logprob: -14.018172264099121
    7. ' ' → logprob: -14.518172264099121
    8. 'He' → logprob: -15.143172264099121
    9. 'heap' → logprob: -15.393172264099121
    10. '```' → logprob: -15.643172264099121

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.396757089532912e-05
    2. 'stack' → logprob: -9.8750638961792
    3. '[index' → logprob: -12.0000638961792
    4. '```' → logprob: -13.5000638961792
    5. '(stack' → logprob: -13.6250638961792
    6. ' stack' → logprob: -14.2500638961792
    7. '[
' → logprob: -14.3750638961792
    8. ' ' → logprob: -14.3750638961792
    9. '	stack' → logprob: -14.5000638961792
    10. ']' → logprob: -14.6250638961792

Token 113: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -2.117345684382599e-05
    2. ' stack' → logprob: -11.250020980834961
    3. '[' → logprob: -11.875020980834961
    4. 'index' → logprob: -14.625020980834961
    5. '(stack' → logprob: -15.125020980834961
    6. '	stack' → logprob: -15.125020980834961
    7. ']' → logprob: -16.50002098083496
    8. '_stack' → logprob: -17.87502098083496
    9. ' ' → logprob: -18.75002098083496
    10. '.stack' → logprob: -19.00002098083496

Token 114: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.7432603272027336e-06
    2. '-' → logprob: -13.500001907348633
    3. '[' → logprob: -15.500001907348633
    4. '   ' → logprob: -16.125001907348633
    5. '][-' → logprob: -17.375001907348633
    6. ' [-' → logprob: -18.250001907348633
    7. '```' → logprob: -18.500001907348633
    8. ' ' → logprob: -18.500001907348633
    9. ']' → logprob: -19.125001907348633
    10. '  ' → logprob: -19.625001907348633

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033347986172884703
    2. '-' → logprob: -5.753334999084473
    3. 'len' → logprob: -10.628334999084473
    4. '])' → logprob: -10.753334999084473
    5. ' ' → logprob: -10.878334999084473
    6. ' -' → logprob: -10.878334999084473
    7. '[-' → logprob: -10.878334999084473
    8. '   ' → logprob: -11.128334999084473
    9. '(' → logprob: -11.128334999084473
    10. '(-' → logprob: -12.378334999084473

Token 116: ']]:
' (ID: 183340)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.10438904911279678
    2. ']:' → logprob: -2.854388952255249
    3. ']]:
' → logprob: -3.479388952255249
    4. ']' → logprob: -4.604389190673828
    5. ' ]' → logprob: -7.604389190673828
    6. ')]' → logprob: -10.229389190673828
    7. '[' → logprob: -10.604389190673828
    8. ':' → logprob: -10.729389190673828
    9. ']):' → logprob: -10.979389190673828
    10. ' ]]' → logprob: -11.104389190673828

Token 117: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3006490468978882
    2. '           ' → logprob: -1.9256490468978882
    3. '       ' → logprob: -2.8006491661071777
    4. '):' → logprob: -3.0506491661071777
    5. ':
' → logprob: -5.550649166107178
    6. ' :' → logprob: -7.550649166107178
    7. ')' → logprob: -7.550649166107178
    8. '):
' → logprob: -8.30064868927002
    9. '   ' → logprob: -9.30064868927002
    10. ' ):' → logprob: -9.42564868927002

Token 118: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.053110308945178986
    2. 'stack' (adapté à ' stack') → logprob: -3.178110361099243
    3. '           ' → logprob: -4.928110122680664
    4. '               ' → logprob: -7.178110122680664
    5. '            ' → logprob: -7.178110122680664
    6. '(stack' → logprob: -8.053110122680664
    7. '	stack' → logprob: -8.678110122680664
    8. ' 
' → logprob: -8.803110122680664
    9. '       ' → logprob: -9.303110122680664
    10. '.stack' → logprob: -9.428110122680664

Token 119: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015059324214234948
    2. '.' → logprob: -6.5015058517456055
    3. '.push' → logprob: -12.876505851745605
    4. ' .' → logprob: -14.626505851745605
    5. '.extend' → logprob: -15.376505851745605
    6. '.app' → logprob: -15.501505851745605
    7. '   ' → logprob: -16.751506805419922
    8. 'append' → logprob: -16.751506805419922
    9. ').' → logprob: -17.126506805419922
    10. '.Append' → logprob: -17.501506805419922

Token 120: '(index' (ID: 13517)
  Prédit: '(index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.014179266057908535
    2. '(' → logprob: -4.264179229736328
    3. 'index' → logprob: -11.139179229736328
    4. '(
' → logprob: -14.639179229736328
    5. ' (' → logprob: -14.639179229736328
    6. ' index' → logprob: -16.639179229736328
    7. '(ind' → logprob: -16.639179229736328
    8. '	index' → logprob: -17.514179229736328
    9. '(

' → logprob: -17.639179229736328
    10. '#index' → logprob: -17.764179229736328

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006746751256287098
    2. ')
' → logprob: -5.006746768951416
    3. '       ' → logprob: -10.881746292114258
    4. '   ' → logprob: -12.381746292114258
    5. '           ' → logprob: -13.131746292114258
    6. ')
' → logprob: -13.381746292114258
    7. ' )' → logprob: -14.006746292114258
    8. ')\
' → logprob: -14.381746292114258
    9. ')return' → logprob: -14.756746292114258
    10. ')n' → logprob: -14.881746292114258

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002341161947697401
    2. '
' → logprob: -7.127341270446777
    3. 'index' → logprob: -7.252341270446777
    4. '            
' → logprob: -7.877341270446777
    5. '\n' → logprob: -8.877341270446777
    6. ' 
' → logprob: -9.127341270446777
    7. '    
' → logprob: -9.752341270446777
    8. '       ' → logprob: -9.752341270446777
    9. ' index' → logprob: -10.002341270446777
    10. '   ' → logprob: -11.377341270446777

Token 123: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.01420381385833025
    2. ' index' → logprob: -4.264204025268555
    3. '       ' → logprob: -11.139204025268555
    4. '   ' → logprob: -11.389204025268555
    5. '
' → logprob: -11.764204025268555
    6. '           ' → logprob: -12.139204025268555
    7. '	index' → logprob: -14.389204025268555
    8. '_index' → logprob: -14.514204025268555
    9. '#index' → logprob: -16.764204025268555
    10. '            
' → logprob: -16.889204025268555

Token 124: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.35780712962150574
    2. '+' → logprob: -1.4828071594238281
    3. ' +=' → logprob: -2.607807159423828
    4. '1' → logprob: -9.982807159423828
    5. ' +' → logprob: -11.357807159423828
    6. '<|end|>' → logprob: -11.357807159423828
    7. '=' → logprob: -11.482807159423828
    8. ']+=' → logprob: -12.357807159423828
    9. ')' → logprob: -12.732807159423828
    10. '+='' → logprob: -12.857807159423828

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.625158309936523
    4. '```' → logprob: -19.125158309936523
    5. '１' → logprob: -21.250158309936523
    6. '۱' → logprob: -21.500158309936523
    7. '  ' → logprob: -22.000158309936523
    8. ' ' → logprob: -22.437658309936523
    9. '<|end|>' → logprob: -22.500158309936523
    10. '0' → logprob: -22.937658309936523

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.500003814697266
    4. '   ' → logprob: -19.875003814697266
    5. '۱' → logprob: -20.125003814697266
    6. '１' → logprob: -20.875003814697266
    7. '  ' → logprob: -21.437503814697266
    8. '१' → logprob: -21.687503814697266
    9. '0' → logprob: -21.937503814697266
    10. '<|end|>' → logprob: -22.000003814697266

Token 127: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004701514728367329
    2. 'else' → logprob: -5.504701614379883
    3. ' else' → logprob: -7.754701614379883
    4. ')' → logprob: -9.379701614379883
    5. '   ' → logprob: -9.504701614379883
    6. 'elif' → logprob: -10.504701614379883
    7. '```' → logprob: -12.379701614379883
    8. ' elif' → logprob: -14.004701614379883
    9. '
' → logprob: -14.754701614379883
    10. '	else' → logprob: -15.004701614379883

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02219575271010399
    2. 'else' → logprob: -3.897195816040039
    3. ' else' → logprob: -6.522195816040039
    4. 'elif' → logprob: -9.522195816040039
    5. '   ' → logprob: -9.772195816040039
    6. ')' → logprob: -10.647195816040039
    7. '```' → logprob: -10.772195816040039
    8. ' elif' → logprob: -13.272195816040039
    9. '<|end|>' → logprob: -13.772195816040039
    10. '        
' → logprob: -14.022195816040039

Token 129: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.007822979241609573
    2. ' else' → logprob: -5.2578229904174805
    3. '       ' → logprob: -6.0078229904174805
    4. '   ' → logprob: -9.00782299041748
    5. 'elif' → logprob: -13.00782299041748
    6. '```' → logprob: -13.88282299041748
    7. '	else' → logprob: -14.38282299041748
    8. ')' → logprob: -16.882822036743164
    9. '_else' → logprob: -18.007822036743164
    10. '}else' → logprob: -18.507822036743164

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.162956103682518
    2. ':
' → logprob: -1.9129561185836792
    3. '       ' → logprob: -6.412956237792969
    4. '           ' → logprob: -7.162956237792969
    5. '):
' → logprob: -9.287956237792969
    6. '<|end|>' → logprob: -9.412956237792969
    7. '   ' → logprob: -10.037956237792969
    8. '):' → logprob: -10.287956237792969
    9. ' :' → logprob: -11.662956237792969
    10. ',' → logprob: -11.912956237792969

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011266445508226752
    2. '       ' → logprob: -7.626126766204834
    3. '   ' → logprob: -8.126126289367676
    4. '            
' → logprob: -9.126126289367676
    5. '```' → logprob: -9.126126289367676
    6. 'top' → logprob: -10.126126289367676
    7. 'pop' → logprob: -10.376126289367676
    8. '	       ' → logprob: -11.376126289367676
    9. '            ' → logprob: -11.751126289367676
    10. '               ' → logprob: -11.876126289367676

Token 132: ' #' (ID: 1069)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.03940414637327194
    2. '           ' → logprob: -3.2894041538238525
    3. 'tp' → logprob: -7.039403915405273
    4. 'height' → logprob: -8.914403915405273
    5. ' top' → logprob: -9.039403915405273
    6. '            
' → logprob: -9.164403915405273
    7. '```' → logprob: -9.914403915405273
    8. '   ' → logprob: -10.539403915405273
    9. 'pop' → logprob: -10.539403915405273
    10. '               ' → logprob: -11.539403915405273

Token 133: ' Pop' (ID: 12494)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0015658074989914894
    2. '   ' → logprob: -7.126565933227539
    3. 'tp' → logprob: -7.751565933227539
    4. ' top' → logprob: -8.126565933227539
    5. '           ' → logprob: -10.626565933227539
    6. '       ' → logprob: -13.251565933227539
    7. '	top' → logprob: -13.376565933227539
    8. 'pop' → logprob: -13.501565933227539
    9. '    ' → logprob: -13.626565933227539
    10. '  ' → logprob: -13.876565933227539

Token 134: ' the' (ID: 290)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0013296448159962893
    2. ' top' → logprob: -6.87632942199707
    3. 'stack' → logprob: -8.37632942199707
    4. 'tp' → logprob: -10.87632942199707
    5. '```' → logprob: -11.37632942199707
    6. '   ' → logprob: -11.50132942199707
    7. 't' → logprob: -12.25132942199707
    8. '_top' → logprob: -12.50132942199707
    9. 'height' → logprob: -12.75132942199707
    10. '           ' → logprob: -12.75132942199707

Token 135: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.006189241539686918
    2. ' top' → logprob: -5.131189346313477
    3. 'stack' → logprob: -8.381189346313477
    4. '   ' → logprob: -12.006189346313477
    5. ' stack' → logprob: -12.256189346313477
    6. '[top' → logprob: -12.506189346313477
    7. '       ' → logprob: -12.881189346313477
    8. 't' → logprob: -12.881189346313477
    9. 'tp' → logprob: -12.881189346313477
    10. '	top' → logprob: -13.006189346313477

Token 136: ' of' (ID: 328)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.984849750995636
    2. 'of' → logprob: -1.2348496913909912
    3. ')' → logprob: -1.7348496913909912
    4. ' of' → logprob: -3.484849691390991
    5. '=' → logprob: -3.734849691390991
    6. 'index' → logprob: -3.859849691390991
    7. ']' → logprob: -4.35984992980957
    8. '           ' → logprob: -4.35984992980957
    9. '       ' → logprob: -4.85984992980957
    10. '   ' → logprob: -5.23484992980957

Token 137: ' the' (ID: 290)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.001293808571062982
    2. ' stack' → logprob: -6.751293659210205
    3. 'the' → logprob: -9.126294136047363
    4. '	stack' → logprob: -11.626294136047363
    5. ' the' → logprob: -12.626294136047363
    6. '(stack' → logprob: -13.501294136047363
    7. '_stack' → logprob: -14.876294136047363
    8. 'st' → logprob: -15.001294136047363
    9. 'stackoverflow' → logprob: -15.001294136047363
    10. '.stack' → logprob: -16.251293182373047

Token 138: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0006278486107476056
    2. ' stack' → logprob: -7.3756279945373535
    3. 'stackoverflow' → logprob: -14.500627517700195
    4. '	stack' → logprob: -14.750627517700195
    5. '_stack' → logprob: -16.000627517700195
    6. '(stack' → logprob: -16.375627517700195
    7. 'Stack' → logprob: -17.000627517700195
    8. '.stack' → logprob: -17.000627517700195
    9. '-stack' → logprob: -17.375627517700195
    10. 's' → logprob: -17.375627517700195

Token 139: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33718666434288025
    2. 'top' → logprob: -1.3371866941452026
    3. 'height' → logprob: -4.337186813354492
    4. '            
' → logprob: -5.962186813354492
    5. ' top' → logprob: -6.837186813354492
    6. '[top' → logprob: -6.962186813354492
    7. 'tp' → logprob: -7.087186813354492
    8. '               ' → logprob: -7.212186813354492
    9. 'pop' → logprob: -7.337186813354492
    10. '```' → logprob: -7.587186813354492

Token 140: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.5339420437812805
    2. 'height' → logprob: -1.1589419841766357
    3. ' calculate' → logprob: -2.6589419841766357
    4. 'he' → logprob: -4.408942222595215
    5. ' height' → logprob: -4.658942222595215
    6. '   ' → logprob: -5.658942222595215
    7. '           ' → logprob: -6.408942222595215
    8. '```' → logprob: -7.533942222595215
    9. '       ' → logprob: -7.658942222595215
    10. 'width' → logprob: -8.033942222595215

Token 141: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.029605258256196976
    2. 'height' → logprob: -3.7796051502227783
    3. ' area' → logprob: -5.154605388641357
    4. '   ' → logprob: -8.7796049118042
    5. 'top' → logprob: -9.5296049118042
    6. '           ' → logprob: -9.7796049118042
    7. 'he' → logprob: -9.7796049118042
    8. ' height' → logprob: -9.7796049118042
    9. '_area' → logprob: -9.7796049118042
    10. '```' → logprob: -9.9046049118042

Token 142: '
' (ID: 198)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.8436467051506042
    2. '=' → logprob: -1.843646764755249
    3. '_height' → logprob: -1.843646764755249
    4. 'top' → logprob: -2.343646764755249
    5. '           ' → logprob: -2.593646764755249
    6. ')' → logprob: -4.34364652633667
    7. '[top' → logprob: -4.71864652633667
    8. '       ' → logprob: -4.96864652633667
    9. '_top' → logprob: -5.21864652633667
    10. '   ' → logprob: -5.21864652633667

Token 143: '           ' (ID: 352)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.6671332716941833
    2. '           ' → logprob: -0.9171332716941833
    3. '=' → logprob: -3.167133331298828
    4. 'height' → logprob: -4.042133331298828
    5. '       ' → logprob: -4.417133331298828
    6. 'tp' → logprob: -5.417133331298828
    7. '[top' → logprob: -6.417133331298828
    8. 'pop' → logprob: -6.417133331298828
    9. '   ' → logprob: -6.542133331298828
    10. '               ' → logprob: -6.792133331298828

Token 144: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' (adapté à ' top') → logprob: -0.04286238178610802
    2. '           ' → logprob: -3.5428624153137207
    3. ' top' → logprob: -5.042862415313721
    4. '   ' → logprob: -5.542862415313721
    5. 'tp' → logprob: -6.167862415313721
    6. '       ' → logprob: -8.167861938476562
    7. '```' → logprob: -9.167861938476562
    8. '               ' → logprob: -9.292861938476562
    9. '            
' → logprob: -10.417861938476562
    10. 'height' → logprob: -11.042861938476562

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20188826322555542
    2. ' =' → logprob: -1.7018883228302002
    3. '_index' → logprob: -8.201888084411621
    4. '_height' → logprob: -9.451888084411621
    5. ']' → logprob: -9.951888084411621
    6. '=_' → logprob: -10.826888084411621
    7. ']=' → logprob: -11.451888084411621
    8. '_stack' → logprob: -11.576888084411621
    9. '_idx' → logprob: -11.826888084411621
    10. '_' → logprob: -11.826888084411621

Token 146: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0024909991770982742
    2. ' stack' → logprob: -6.002490997314453
    3. '	stack' → logprob: -11.127490997314453
    4. '(stack' → logprob: -15.377490997314453
    5. '   ' → logprob: -15.752490997314453
    6. 'stackoverflow' → logprob: -15.752490997314453
    7. 'st' → logprob: -16.502490997314453
    8. ' ' → logprob: -17.127490997314453
    9. '.stack' → logprob: -17.377490997314453
    10. '_stack' → logprob: -17.877490997314453

Token 147: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -14.000001907348633
    3. 'pop' → logprob: -14.000001907348633
    4. '-pop' → logprob: -17.000001907348633
    5. ').' → logprob: -17.125001907348633
    6. '].' → logprob: -17.375001907348633
    7. ' .' → logprob: -17.875001907348633
    8. '_pop' → logprob: -18.500001907348633
    9. '	pop' → logprob: -18.875001907348633
    10. ' pop' → logprob: -19.000001907348633

Token 148: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04075578600168228
    2. '()
' → logprob: -3.6657557487487793
    3. ')' → logprob: -4.540755748748779
    4. '(' → logprob: -5.915755748748779
    5. '       ' → logprob: -8.040756225585938
    6. ']' → logprob: -8.165756225585938
    7. '   ' → logprob: -8.790756225585938
    8. ')
' → logprob: -10.040756225585938
    9. '_height' → logprob: -10.165756225585938
    10. 'height' → logprob: -10.540756225585938

Token 149: '           ' (ID: 352)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.359152615070343
    2. '           ' → logprob: -1.3591525554656982
    3. 'area' → logprob: -4.109152793884277
    4. '            
' → logprob: -4.359152793884277
    5. ' height' → logprob: -5.734152793884277
    6. 'width' → logprob: -5.859152793884277
    7. '            ' → logprob: -6.109152793884277
    8. '       ' → logprob: -6.109152793884277
    9. ')' → logprob: -6.984152793884277
    10. ' area' → logprob: -7.234152793884277

Token 150: ' #' (ID: 1069)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.37288129329681396
    2. 'width' → logprob: -1.872881293296814
    3. '           ' → logprob: -2.3728814125061035
    4. 'area' → logprob: -3.4978814125061035
    5. ' height' → logprob: -4.2478814125061035
    6. ' width' → logprob: -4.3728814125061035
    7. '            
' → logprob: -5.6228814125061035
    8. ' area' → logprob: -6.1228814125061035
    9. 'if' → logprob: -7.7478814125061035
    10. '       ' → logprob: -8.372880935668945

Token 151: ' If' (ID: 1843)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.6136300563812256
    2. 'width' → logprob: -1.1136300563812256
    3. 'area' → logprob: -2.1136300563812256
    4. '           ' → logprob: -5.488630294799805
    5. '       ' → logprob: -6.613630294799805
    6. ' width' → logprob: -6.738630294799805
    7. 'if' → logprob: -6.863630294799805
    8. '   ' → logprob: -7.738630294799805
    9. ' area' → logprob: -8.238630294799805
    10. ' height' → logprob: -8.238630294799805

Token 152: ' stack' (ID: 10825)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1428018808364868
    2. 'not' → logprob: -1.1428018808364868
    3. 'stack' → logprob: -1.1428018808364868
    4. ' stack' → logprob: -3.1428017616271973
    5. 'len' → logprob: -9.892802238464355
    6. ' len' → logprob: -12.017802238464355
    7. '(stack' → logprob: -12.517802238464355
    8. ' ' → logprob: -13.392802238464355
    9. '	stack' → logprob: -13.517802238464355
    10. '_stack' → logprob: -14.142802238464355

Token 153: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005895022302865982
    2. '=' → logprob: -6.505895137786865
    3. ':
' → logprob: -6.880895137786865
    4. ' is' → logprob: -7.005895137786865
    5. '==' → logprob: -7.130895137786865
    6. 'empty' → logprob: -7.255895137786865
    7. 'is' → logprob: -8.505894660949707
    8. 'else' → logprob: -8.755894660949707
    9. 'isempty' → logprob: -9.005894660949707
    10. 's' → logprob: -9.380894660949707

Token 154: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.10679815709590912
    2. 'not' → logprob: -2.3567981719970703
    3. ' not' → logprob: -5.73179817199707
    4. ' empty' → logprob: -5.73179817199707
    5. '_empty' → logprob: -9.98179817199707
    6. 'Empty' → logprob: -10.48179817199707
    7. 'isempty' → logprob: -12.73179817199707
    8. '-empty' → logprob: -12.98179817199707
    9. 'stack' → logprob: -12.98179817199707
    10. '.empty' → logprob: -13.35679817199707

Token 155: ' means' (ID: 4748)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007629703730344772
    2. ':
' → logprob: -5.507629871368408
    3. '=' → logprob: -5.757629871368408
    4. ' =' → logprob: -9.38262939453125
    5. '):' → logprob: -9.63262939453125
    6. ')' → logprob: -10.00762939453125
    7. ',' → logprob: -10.00762939453125
    8. '):
' → logprob: -10.13262939453125
    9. ' :' → logprob: -10.25762939453125
    10. 'area' → logprob: -11.38262939453125

Token 156: ' everything' (ID: 5519)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.41734737157821655
    2. ' area' → logprob: -1.7923474311828613
    3. 'width' → logprob: -3.1673474311828613
    4. 'index' → logprob: -3.2923474311828613
    5. 'stack' → logprob: -4.042347431182861
    6. ' the' → logprob: -4.292347431182861
    7. '           ' → logprob: -4.667347431182861
    8. 'the' → logprob: -4.917347431182861
    9. 'height' → logprob: -5.417347431182861
    10. 'max' → logprob: -5.542347431182861

Token 157: ' till' (ID: 7892)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.19632072746753693
    2. 'to' → logprob: -2.3213207721710205
    3. 'left' → logprob: -3.4463207721710205
    4. ' before' → logprob: -4.696320533752441
    5. ' is' → logprob: -4.821320533752441
    6. 'before' → logprob: -5.321320533752441
    7. ' till' → logprob: -5.446320533752441
    8. ' was' → logprob: -5.821320533752441
    9. ' up' → logprob: -5.946320533752441
    10. 'right' → logprob: -6.321320533752441

Token 158: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0041675567626953125
    2. ' index' → logprob: -5.504167556762695
    3. 'now' → logprob: -10.129167556762695
    4. '   ' → logprob: -10.879167556762695
    5. '=index' → logprob: -11.254167556762695
    6. ' now' → logprob: -11.379167556762695
    7. '_index' → logprob: -13.504167556762695
    8. ' ' → logprob: -13.629167556762695
    9. '#index' → logprob: -14.254167556762695
    10. '[index' → logprob: -14.379167556762695

Token 159: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.631652295589447
    2. ' is' → logprob: -1.1316523551940918
    3. 'is' → logprob: -3.131652355194092
    4. ' can' → logprob: -3.381652355194092
    5. 'has' → logprob: -3.506652355194092
    6. ' was' → logprob: -4.756652355194092
    7. ' to' → logprob: -5.381652355194092
    8. ' from' → logprob: -5.756652355194092
    9. 'can' → logprob: -5.756652355194092
    10. ',' → logprob: -5.881652355194092

Token 160: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.07332537323236465
    2. 'been' → logprob: -3.4483253955841064
    3. 'right' → logprob: -4.698325157165527
    4. 'he' → logprob: -4.698325157165527
    5. ' height' → logprob: -5.198325157165527
    6. 'occur' → logprob: -5.698325157165527
    7. 'width' → logprob: -6.073325157165527
    8. ' been' → logprob: -6.823325157165527
    9. 'p' → logprob: -6.948325157165527
    10. 'stack' → logprob: -7.073325157165527

Token 161: ' >=' (ID: 5064)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.9634957909584045
    2. ' heights' → logprob: -1.3384957313537598
    3. '=' → logprob: -1.5884957313537598
    4. ' =' → logprob: -2.8384957313537598
    5. '[' → logprob: -3.2134957313537598
    6. '   ' → logprob: -4.71349573135376
    7. ' at' → logprob: -4.96349573135376
    8. '[index' → logprob: -5.08849573135376
    9. '[top' → logprob: -5.08849573135376
    10. ' of' → logprob: -5.46349573135376

Token 162: ' heights' (ID: 57359)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.00033784625702537596
    2. ' heights' → logprob: -8.000337600708008
    3. 'height' → logprob: -13.625337600708008
    4. '_he' → logprob: -14.500337600708008
    5. ' he' → logprob: -15.375337600708008
    6. '```' → logprob: -15.750337600708008
    7. '`' → logprob: -15.875337600708008
    8. '   ' → logprob: -17.000337600708008
    9. ' ' → logprob: -17.000337600708008
    10. '.he' → logprob: -18.000337600708008

Token 163: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -5.438573680294212e-06
    2. 'top' → logprob: -12.250005722045898
    3. '[' → logprob: -14.625005722045898
    4. '```' → logprob: -17.5000057220459
    5. '(top' → logprob: -17.6250057220459
    6. ' top' → logprob: -17.7500057220459
    7. '	top' → logprob: -18.1250057220459
    8. ' [' → logprob: -19.5000057220459
    9. ' ' → logprob: -19.5000057220459
    10. '   ' → logprob: -20.1250057220459

Token 164: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15849746763706207
    2. '],' → logprob: -2.5334975719451904
    3. ']
' → logprob: -2.9084975719451904
    4. ')' → logprob: -5.533497333526611
    5. '])' → logprob: -6.033497333526611
    6. ' ]' → logprob: -6.408497333526611
    7. '])
' → logprob: -7.408497333526611
    8. ']:
' → logprob: -7.533497333526611
    9. ' ],' → logprob: -7.908497333526611
    10. ')
' → logprob: -7.908497333526611

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37819957733154297
    2. 'area' → logprob: -1.503199577331543
    3. 'width' → logprob: -2.628199577331543
    4. ' area' → logprob: -4.753199577331543
    5. 'height' → logprob: -5.753199577331543
    6. ',' → logprob: -5.878199577331543
    7. '            
' → logprob: -6.128199577331543
    8. ' width' → logprob: -6.378199577331543
    9. 'if' → logprob: -7.878199577331543
    10. ' if' → logprob: -8.003199577331543

Token 166: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' (adapté à ' width') → logprob: -0.48826920986175537
    2. ' width' → logprob: -1.8632692098617554
    3. 'area' → logprob: -1.8632692098617554
    4. ' area' → logprob: -3.238269329071045
    5. '           ' → logprob: -3.488269329071045
    6. 'if' → logprob: -5.738269329071045
    7. 'height' → logprob: -6.613269329071045
    8. ' if' → logprob: -6.863269329071045
    9. '            
' → logprob: -8.613268852233887
    10. 'left' → logprob: -9.488268852233887

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.328889846801758
    4. '=index' → logprob: -16.828889846801758
    5. '   ' → logprob: -17.328889846801758
    6. '=

' → logprob: -17.453889846801758
    7. 's' → logprob: -17.578889846801758
    8. '=len' → logprob: -18.078889846801758
    9. '＝' → logprob: -18.203889846801758
    10. ')' → logprob: -18.453889846801758

Token 168: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.12717671692371368
    2. 'index' → logprob: -2.1271767616271973
    3. ' ' → logprob: -9.002176284790039
    4. '   ' → logprob: -9.627176284790039
    5. '	index' → logprob: -11.127176284790039
    6. '(index' → logprob: -11.377176284790039
    7. ' ' → logprob: -12.002176284790039
    8. '[index' → logprob: -12.127176284790039
    9. '  ' → logprob: -12.127176284790039
    10. ' (' → logprob: -12.627176284790039

Token 169: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008302619680762291
    2. 'if' → logprob: -4.883302688598633
    3. ' -' → logprob: -7.383302688598633
    4. '-' → logprob: -9.633302688598633
    5. ' ' → logprob: -12.258302688598633
    6. '	if' → logprob: -13.633302688598633
    7. '-if' → logprob: -13.633302688598633
    8. '   ' → logprob: -14.633302688598633
    9. ' stack' → logprob: -15.133302688598633
    10. 'stack' → logprob: -15.133302688598633

Token 170: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5759417414665222
    2. ' not' → logprob: -0.8259417414665222
    3. '(not' → logprob: -13.825942039489746
    4. '   ' → logprob: -14.825942039489746
    5. '	not' → logprob: -14.950942039489746
    6. '!' → logprob: -15.575942039489746
    7. 'len' → logprob: -15.825942039489746
    8. ' ' → logprob: -16.32594108581543
    9. 'stack' → logprob: -16.95094108581543
    10. '_not' → logprob: -17.45094108581543

Token 171: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07889363914728165
    2. ' stack' → logprob: -2.5788936614990234
    3. '	stack' → logprob: -12.828893661499023
    4. '(stack' → logprob: -13.953893661499023
    5. ' ' → logprob: -15.953893661499023
    6. '_stack' → logprob: -16.203893661499023
    7. '   ' → logprob: -16.578893661499023
    8. '.stack' → logprob: -16.703893661499023
    9. 'stackoverflow' → logprob: -17.203893661499023
    10. 'Stack' → logprob: -18.453893661499023

Token 172: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06200353056192398
    2. 'else' → logprob: -2.8120036125183105
    3. '[]' → logprob: -10.937003135681152
    4. '	else' → logprob: -11.812003135681152
    5. ' ' → logprob: -12.312003135681152
    6. '_else' → logprob: -12.437003135681152
    7. '==' → logprob: -14.562003135681152
    8. '<|end|>' → logprob: -15.187003135681152
    9. '```' → logprob: -15.687003135681152
    10. 'Else' → logprob: -15.687003135681152

Token 173: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.1003052294254303
    2. 'index' → logprob: -2.3503053188323975
    3. ' ' → logprob: -9.725305557250977
    4. '(index' → logprob: -10.975305557250977
    5. '	index' → logprob: -11.975305557250977
    6. ' (' → logprob: -12.100305557250977
    7. '   ' → logprob: -12.350305557250977
    8. '  ' → logprob: -12.850305557250977
    9. '_index' → logprob: -14.100305557250977
    10. ' ' → logprob: -14.350305557250977

Token 174: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02975570224225521
    2. '-' → logprob: -3.5297555923461914
    3. ' ' → logprob: -12.904755592346191
    4. '"' → logprob: -14.154755592346191
    5. '-stack' → logprob: -14.404755592346191
    6. ' ' → logprob: -15.029755592346191
    7. '   ' → logprob: -15.279755592346191
    8. ' stack' → logprob: -15.654755592346191
    9. '```' → logprob: -15.904755592346191
    10. 'stack' → logprob: -16.654756546020508

Token 175: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0006136707379482687
    2. ' stack' → logprob: -7.500613689422607
    3. '1' → logprob: -10.00061321258545
    4. '(stack' → logprob: -11.25061321258545
    5. '	stack' → logprob: -13.00061321258545
    6. ' ' → logprob: -16.125614166259766
    7. '_stack' → logprob: -17.500614166259766
    8. 'stackoverflow' → logprob: -17.750614166259766
    9. '   ' → logprob: -18.875614166259766
    10. '.stack' → logprob: -19.125614166259766

Token 176: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.722539834911004e-05
    2. '-' → logprob: -9.250097274780273
    3. '```' → logprob: -14.375097274780273
    4. '1' → logprob: -15.375097274780273
    5. '`' → logprob: -16.875097274780273
    6. '...' → logprob: -17.375097274780273
    7. '
' → logprob: -17.500097274780273
    8. ' [-' → logprob: -17.500097274780273
    9. '][-' → logprob: -17.625097274780273
    10. '[' → logprob: -17.750097274780273

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. ' ' → logprob: -10.875020027160645
    3. '-' → logprob: -15.125020027160645
    4. '<|end|>' → logprob: -15.125020027160645
    5. '```' → logprob: -16.12502098083496
    6. '
' → logprob: -16.37502098083496
    7. '<|end|>' → logprob: -16.87502098083496
    8. ']' → logprob: -16.93752098083496
    9. '۱' → logprob: -17.06252098083496
    10. '...' → logprob: -17.81252098083496

Token 178: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6332976818084717
    2. ' -' → logprob: -0.7582976818084717
    3. '1' → logprob: -7.883297920227051
    4. ' ' → logprob: -8.63329792022705
    5. '[' → logprob: -9.75829792022705
    6. '```' → logprob: -10.25829792022705
    7. ')' → logprob: -10.50829792022705
    8. 's' → logprob: -12.13329792022705
    9. ']' → logprob: -12.63329792022705
    10. '()-' → logprob: -13.13329792022705

Token 179: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16133293509483337
    2. ' -' → logprob: -1.9113329648971558
    3. '1' → logprob: -7.286333084106445
    4. '[-' → logprob: -8.536333084106445
    5. '[' → logprob: -9.036333084106445
    6. ' ' → logprob: -9.661333084106445
    7. '```' → logprob: -10.286333084106445
    8. '   ' → logprob: -13.411333084106445
    9. '2' → logprob: -13.911333084106445
    10. 's' → logprob: -14.036333084106445

Token 180: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.250005722045898
    3. '```' → logprob: -15.000005722045898
    4. '<|end|>' → logprob: -15.750005722045898
    5. '   ' → logprob: -18.6250057220459
    6. '<|end|>' → logprob: -19.0000057220459
    7. '۱' → logprob: -19.0000057220459
    8. '１' → logprob: -20.3750057220459
    9. '
' → logprob: -20.4375057220459
    10. '...' → logprob: -20.5000057220459

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '<|end|>' → logprob: -16.125
    5. '۱' → logprob: -17.375
    6. '11' → logprob: -18.5625
    7. '119' → logprob: -18.5625
    8. '116' → logprob: -18.9375
    9. '118' → logprob: -19.1875
    10. '129' → logprob: -19.5

Token 182: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020086901262402534
    2. 'area' → logprob: -4.145086765289307
    3. ' area' → logprob: -6.020086765289307
    4. '
' → logprob: -7.395086765289307
    5. '            
' → logprob: -7.770086765289307
    6. ')' → logprob: -8.520087242126465
    7. '       ' → logprob: -9.020087242126465
    8. ')
' → logprob: -9.270087242126465
    9. '  
' → logprob: -10.770087242126465
    10. '   ' → logprob: -11.020087242126465

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12722332775592804
    2. 'area' → logprob: -2.127223253250122
    3. ' area' → logprob: -9.002223014831543
    4. 'height' → logprob: -9.627223014831543
    5. '            
' → logprob: -9.752223014831543
    6. 'max' → logprob: -11.377223014831543
    7. '       ' → logprob: -11.502223014831543
    8. '
' → logprob: -11.627223014831543
    9. '   ' → logprob: -12.127223014831543
    10. 'top' → logprob: -12.502223014831543

Token 184: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.006091846618801355
    2. '           ' → logprob: -5.256092071533203
    3. ' area' → logprob: -7.631092071533203
    4. 'max' → logprob: -8.756092071533203
    5. 'height' → logprob: -8.756092071533203
    6. 'current' → logprob: -10.131092071533203
    7. '            
' → logprob: -11.756092071533203
    8. '_area' → logprob: -12.131092071533203
    9. '```' → logprob: -13.381092071533203
    10. '   ' → logprob: -13.631092071533203

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313262403011322
    2. ' =' → logprob: -1.3132624626159668
    3. 's' → logprob: -15.438261985778809
    4. ' +=' → logprob: -15.688261985778809
    5. '	' → logprob: -16.313262939453125
    6. '   ' → logprob: -16.313262939453125
    7. ' ' → logprob: -16.563262939453125
    8. '=max' → logprob: -17.063262939453125
    9. ' ' → logprob: -17.188262939453125
    10. '+=' → logprob: -17.563262939453125

Token 186: ' heights' (ID: 57359)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.004082909319549799
    2. ' heights' → logprob: -5.504082679748535
    3. '   ' → logprob: -12.754082679748535
    4. 'height' → logprob: -13.629082679748535
    5. '_he' → logprob: -15.254082679748535
    6. ' he' → logprob: -16.00408363342285
    7. '	' → logprob: -17.37908363342285
    8. 'He' → logprob: -17.75408363342285
    9. ' ' → logprob: -18.12908363342285
    10. ' ' → logprob: -18.75408363342285

Token 187: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. 'top' → logprob: -16.375
    4. ' [' → logprob: -17.125
    5. ' top' → logprob: -18.5
    6. '(top' → logprob: -19.625
    7. '[
' → logprob: -20.25
    8. '[token' → logprob: -21.375
    9. '	top' → logprob: -21.375
    10. '[temp' → logprob: -21.625

Token 188: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01129266619682312
    2. '*' → logprob: -4.761292457580566
    3. ']' → logprob: -6.136292457580566
    4. '[top' → logprob: -7.636292457580566
    5. ')' → logprob: -11.886292457580566
    6. ' ' → logprob: -12.011292457580566
    7. ']*' → logprob: -12.136292457580566
    8. '[' → logprob: -12.511292457580566
    9. '[token' → logprob: -12.886292457580566
    10. ' ]' → logprob: -12.886292457580566

Token 189: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.474077433347702
    2. '*' → logprob: -0.9740774631500244
    3. ' ' → logprob: -15.474077224731445
    4. ' ' → logprob: -15.974077224731445
    5. '   ' → logprob: -16.474077224731445
    6. ')' → logprob: -16.724077224731445
    7. '```' → logprob: -17.349077224731445
    8. '*
' → logprob: -18.224077224731445
    9. '*object' → logprob: -18.599077224731445
    10. '#' → logprob: -18.724077224731445

Token 190: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.06196768581867218
    2. ' width' → logprob: -2.811967611312866
    3. '(width' → logprob: -16.936967849731445
    4. '	width' → logprob: -17.186967849731445
    5. ' ' → logprob: -19.061967849731445
    6. '   ' → logprob: -19.686967849731445
    7. '_width' → logprob: -20.436967849731445
    8. 'wide' → logprob: -20.936967849731445
    9. ',width' → logprob: -20.936967849731445
    10. '
' → logprob: -21.186967849731445

Token 191: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6342199444770813
    2. '           ' → logprob: -0.7592199444770813
    3. '            
' → logprob: -7.134220123291016
    4. 'max' → logprob: -8.634220123291016
    5. ' if' → logprob: -8.884220123291016
    6. 'if' → logprob: -8.884220123291016
    7. '
' → logprob: -9.384220123291016
    8. '<|end|>' → logprob: -9.759220123291016
    9. ',
' → logprob: -10.009220123291016
    10. '    
' → logprob: -10.509220123291016

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004966066684573889
    2. 'if' → logprob: -5.7549662590026855
    3. ' if' → logprob: -6.8799662590026855
    4. '
' → logprob: -7.6299662590026855
    5. 'max' → logprob: -9.129965782165527
    6. '       ' → logprob: -9.254965782165527
    7. '   ' → logprob: -10.254965782165527
    8. '            
' → logprob: -10.879965782165527
    9. ' max' → logprob: -12.879965782165527
    10. '               ' → logprob: -12.879965782165527

Token 193: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7938936352729797
    2. '           ' → logprob: -1.293893575668335
    3. 'max' → logprob: -1.793893575668335
    4. ' if' → logprob: -2.293893575668335
    5. ' max' → logprob: -5.168893814086914
    6. '   ' → logprob: -7.918893814086914
    7. '
' → logprob: -8.043893814086914
    8. '       ' → logprob: -9.168893814086914
    9. '            
' → logprob: -11.543893814086914
    10. '               ' → logprob: -11.668893814086914

Token 194: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.01815216802060604
    2. 'area' → logprob: -4.018152236938477
    3. ' max' → logprob: -13.143152236938477
    4. '(area' → logprob: -16.018152236938477
    5. 'max' → logprob: -16.893152236938477
    6. ' ' → logprob: -18.268152236938477
    7. ' ' → logprob: -18.768152236938477
    8. '   ' → logprob: -18.893152236938477
    9. ' área' → logprob: -19.143152236938477
    10. '_area' → logprob: -19.518152236938477

Token 195: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.005937686190009117
    2. '>' → logprob: -5.130937576293945
    3. ' ' → logprob: -11.755937576293945
    4. '   ' → logprob: -14.505937576293945
    5. ' ' → logprob: -15.755937576293945
    6. ' >

' → logprob: -16.255937576293945
    7. ' >
' → logprob: -16.255937576293945
    8. ' >
' → logprob: -16.505937576293945
    9. ')' → logprob: -16.755937576293945
    10. '  ' → logprob: -17.130937576293945

Token 196: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.47407716512680054
    2. ' max' → logprob: -0.9740771651268005
    3. '           ' → logprob: -16.849077224731445
    4. '	max' → logprob: -17.224077224731445
    5. '_max' → logprob: -17.974077224731445
    6. '   ' → logprob: -18.849077224731445
    7. '
' → logprob: -19.349077224731445
    8. '(max' → logprob: -19.474077224731445
    9. '=max' → logprob: -20.099077224731445
    10. '[max' → logprob: -20.349077224731445

Token 197: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. 'area' → logprob: -18.25
    4. ' _' → logprob: -18.625
    5. '_max' → logprob: -19.375
    6. 'Area' → logprob: -19.625
    7. '   ' → logprob: -20.0
    8. '```' → logprob: -20.0
    9. '_space' → logprob: -20.625
    10. '_AREA' → logprob: -20.625

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.63868647813797
    2. ':
' → logprob: -0.76368647813797
    3. '               ' → logprob: -5.388686656951904
    4. '           ' → logprob: -6.638686656951904
    5. '):
' → logprob: -9.138686180114746
    6. '       ' → logprob: -10.638686180114746
    7. 'max' → logprob: -11.888686180114746
    8. '=' → logprob: -11.888686180114746
    9. ':
' → logprob: -12.263686180114746
    10. ' :
' → logprob: -12.263686180114746

Token 199: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006496482528746128
    2. ' max' → logprob: -7.750649452209473
    3. '           ' → logprob: -9.125649452209473
    4. '                
' → logprob: -10.125649452209473
    5. 'max' → logprob: -11.000649452209473
    6. '   ' → logprob: -11.250649452209473
    7. '
' → logprob: -11.750649452209473
    8. ' 
' → logprob: -12.000649452209473
    9. '<|end|>' → logprob: -12.125649452209473
    10. '```' → logprob: -12.125649452209473

Token 200: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2368186116218567
    2. '                   ' → logprob: -2.111818552017212
    3. '               ' → logprob: -2.486818552017212
    4. 'max' (adapté à ' max') → logprob: -5.111818790435791
    5. '           ' → logprob: -8.361818313598633
    6. '   ' → logprob: -8.611818313598633
    7. '                       ' → logprob: -9.111818313598633
    8. '                ' → logprob: -10.111818313598633
    9. '```' → logprob: -10.486818313598633
    10. '       ' → logprob: -11.361818313598633

Token 201: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.0
    3. 'area' → logprob: -17.0
    4. ' _' → logprob: -17.875
    5. 'Area' → logprob: -18.0
    6. '   ' → logprob: -18.625
    7. '_space' → logprob: -19.125
    8. '_are' → logprob: -19.5
    9. '_AREA' → logprob: -19.875
    10. '_code' → logprob: -20.0

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692873179912567
    2. '=' → logprob: -2.1269288063049316
    3. ' =
' → logprob: -15.501928329467773
    4. '               ' → logprob: -15.751928329467773
    5. '                ' → logprob: -16.001928329467773
    6. ' ' → logprob: -16.501928329467773
    7. '＝' → logprob: -16.626928329467773
    8. '=

' → logprob: -17.126928329467773
    9. '            ' → logprob: -17.751928329467773
    10. ' =
' → logprob: -17.751928329467773

Token 203: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.3868710398674011
    2. 'area' → logprob: -1.136871099472046
    3. ' área' → logprob: -18.511871337890625
    4. '_area' → logprob: -19.136871337890625
    5. '(area' → logprob: -19.136871337890625
    6. 'Area' → logprob: -19.511871337890625
    7. ' ' → logprob: -20.011871337890625
    8. ' ' → logprob: -20.636871337890625
    9. '.area' → logprob: -20.636871337890625
    10. '   ' → logprob: -20.761871337890625

Token 204: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07323908805847168
    2. '    
' → logprob: -3.3232390880584717
    3. '
' → logprob: -3.8232390880584717
    4. '       ' → logprob: -4.948239326477051
    5. '\n' → logprob: -5.573239326477051
    6. 'return' → logprob: -7.073239326477051
    7. '           ' → logprob: -8.82323932647705
    8. '<|end|>' → logprob: -8.82323932647705
    9. '        
' → logprob: -9.07323932647705
    10. '  
' → logprob: -9.07323932647705

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024195095524191856
    2. 'return' → logprob: -3.8991951942443848
    3. 'while' → logprob: -6.274195194244385
    4. '    
' → logprob: -6.399195194244385
    5. '
' → logprob: -10.774194717407227
    6. '       ' → logprob: -10.899194717407227
    7. '        
' → logprob: -11.274194717407227
    8. ' return' → logprob: -11.524194717407227
    9. ' while' → logprob: -11.524194717407227
    10. '```' → logprob: -11.774194717407227

Token 206: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3593314290046692
    2. '   ' → logprob: -1.2343313694000244
    3. ' while' → logprob: -4.8593316078186035
    4. '    
' → logprob: -6.1093316078186035
    5. '
' → logprob: -8.359331130981445
    6. '#' (adapté à ' #') → logprob: -8.484331130981445
    7. '```' → logprob: -8.859331130981445
    8. 'return' → logprob: -9.109331130981445
    9. '\n' → logprob: -10.609331130981445
    10. '  
' → logprob: -10.859331130981445

Token 207: ' Now' (ID: 6549)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -8.780830830801278e-05
    2. ' while' → logprob: -10.12508773803711
    3. '   ' → logprob: -10.50008773803711
    4. '#' → logprob: -11.50008773803711
    5. 'While' → logprob: -11.75008773803711
    6. 'return' → logprob: -13.37508773803711
    7. '    
' → logprob: -15.37508773803711
    8. '	while' → logprob: -15.87508773803711
    9. '```' → logprob: -16.37508773803711
    10. 'wh' → logprob: -16.75008773803711

Token 208: ' pop' (ID: 2735)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2116754949092865
    2. ' while' → logprob: -1.8366755247116089
    3. '   ' → logprob: -3.4616754055023193
    4. '  ' → logprob: -11.711675643920898
    5. ' ' → logprob: -11.836675643920898
    6. '    
' → logprob: -11.836675643920898
    7. ',' → logprob: -11.961675643920898
    8. '#' → logprob: -12.086675643920898
    9. '	while' → logprob: -12.086675643920898
    10. '    ' → logprob: -12.836675643920898

Token 209: ' the' (ID: 290)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21519283950328827
    2. 'remaining' → logprob: -2.4651927947998047
    3. ' while' → logprob: -3.0901927947998047
    4. ' remaining' → logprob: -3.9651927947998047
    5. 'the' → logprob: -4.465192794799805
    6. ' the' → logprob: -4.590192794799805
    7. 'all' → logprob: -4.840192794799805
    8. '   ' → logprob: -4.965192794799805
    9. ' all' → logprob: -5.840192794799805
    10. '(' → logprob: -6.715192794799805

Token 210: ' remaining' (ID: 15448)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8600842356681824
    2. 'remaining' → logprob: -0.9850842356681824
    3. ' remaining' → logprob: -2.110084295272827
    4. ' while' → logprob: -2.985084295272827
    5. 'stack' → logprob: -3.735084295272827
    6. ' stack' → logprob: -5.485084056854248
    7. '   ' → logprob: -6.360084056854248
    8. 'rest' → logprob: -7.110084056854248
    9. ' elements' → logprob: -8.610084533691406
    10. ' ' → logprob: -8.610084533691406

Token 211: ' bars' (ID: 21821)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.601273238658905
    2. 'elements' → logprob: -1.8512732982635498
    3. ' elements' → logprob: -2.47627329826355
    4. 'while' → logprob: -2.47627329826355
    5. ' stack' → logprob: -2.85127329826355
    6. ' bars' → logprob: -3.22627329826355
    7. 'bars' → logprob: -4.726273059844971
    8. ' while' → logprob: -4.851273059844971
    9. 's' → logprob: -5.351273059844971
    10. 'items' → logprob: -5.476273059844971

Token 212: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20856896042823792
    2. ' while' → logprob: -1.7085689306259155
    3. 'while' → logprob: -4.958569049835205
    4. ',' → logprob: -10.083568572998047
    5. ' and' → logprob: -10.958568572998047
    6. '       ' → logprob: -11.333568572998047
    7. '	while' → logprob: -11.583568572998047
    8. '    
' → logprob: -11.833568572998047
    9. ' in' → logprob: -12.208568572998047
    10. '    ' → logprob: -12.583568572998047

Token 213: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.019584476947784424
    2. 'the' → logprob: -4.519584655761719
    3. ' stack' → logprob: -5.019584655761719
    4. ' the' → logprob: -6.269584655761719
    5. '	stack' → logprob: -16.76958465576172
    6. '(stack' → logprob: -17.14458465576172
    7. '   ' → logprob: -18.14458465576172
    8. '  ' → logprob: -18.64458465576172
    9. ' ' → logprob: -18.76958465576172
    10. '.stack' → logprob: -19.01958465576172

Token 214: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1629701852798462
    2. ' while' → logprob: -2.0379700660705566
    3. 'while' → logprob: -3.9129700660705566
    4. ' and' → logprob: -9.412970542907715
    5. '	while' → logprob: -11.537970542907715
    6. ',' → logprob: -12.037970542907715
    7. '    
' → logprob: -12.287970542907715
    8. 'and' → logprob: -12.912970542907715
    9. '       ' → logprob: -13.037970542907715
    10. 'While' → logprob: -13.787970542907715

Token 215: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.023881105706095695
    2. 'while' → logprob: -4.523880958557129
    3. '   ' → logprob: -4.773880958557129
    4. ' calculate' → logprob: -5.648880958557129
    5. ' while' → logprob: -8.398880958557129
    6. 'process' → logprob: -8.648880958557129
    7. '  ' → logprob: -9.023880958557129
    8. '```' → logprob: -9.773880958557129
    9. 'compute' → logprob: -9.898880958557129
    10. '#' → logprob: -10.773880958557129

Token 216: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.1609213799238205
    2. ' area' → logprob: -1.910921335220337
    3. '   ' → logprob: -8.035921096801758
    4. 'while' → logprob: -8.535921096801758
    5. ' while' → logprob: -9.285921096801758
    6. ' their' → logprob: -10.160921096801758
    7. 'areas' → logprob: -11.535921096801758
    8. ' ' → logprob: -11.535921096801758
    9. 'their' → logprob: -11.910921096801758
    10. ' the' → logprob: -12.285921096801758

Token 217: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03674936294555664
    2. ' while' → logprob: -3.4117493629455566
    3. 'while' → logprob: -5.786749362945557
    4. '    
' → logprob: -11.036748886108398
    5. ',' → logprob: -12.161748886108398
    6. '	while' → logprob: -12.536748886108398
    7. '       ' → logprob: -13.036748886108398
    8. '
' → logprob: -13.661748886108398
    9. '```' → logprob: -14.036748886108398
    10. 'While' → logprob: -14.411748886108398

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015077815391123295
    2. ' while' → logprob: -4.265077590942383
    3. 'while' → logprob: -7.015077590942383
    4. '    
' → logprob: -11.265077590942383
    5. '	while' → logprob: -14.140077590942383
    6. '```' → logprob: -14.140077590942383
    7. 'While' → logprob: -14.765077590942383
    8. '
' → logprob: -15.265077590942383
    9. ',' → logprob: -15.265077590942383
    10. ' for' → logprob: -15.765077590942383

Token 219: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2528396248817444
    2. ' while' → logprob: -1.5028395652770996
    3. '   ' → logprob: -7.0028395652771
    4. '	while' → logprob: -14.877840042114258
    5. '```' → logprob: -15.252840042114258
    6. 'While' → logprob: -15.377840042114258
    7. '    
' → logprob: -17.752840042114258
    8. ' While' → logprob: -18.502840042114258
    9. ' ' → logprob: -18.752840042114258
    10. '       ' → logprob: -19.127840042114258

Token 220: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.5759434103965759
    2. 'stack' → logprob: -0.8259434103965759
    3. '(stack' → logprob: -12.950942993164062
    4. '	stack' → logprob: -13.450942993164062
    5. '   ' → logprob: -16.950942993164062
    6. 'Stack' → logprob: -17.200942993164062
    7. ' ' → logprob: -17.450942993164062
    8. 'not' → logprob: -17.575942993164062
    9. '_stack' → logprob: -18.450942993164062
    10. 'len' → logprob: -18.575942993164062

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06197451800107956
    2. ':
' → logprob: -2.81197452545166
    3. '.pop' → logprob: -13.06197452545166
    4. ':
' → logprob: -13.43697452545166
    5. '):
' → logprob: -13.56197452545166
    6. 'pop' → logprob: -14.56197452545166
    7. '=' → logprob: -14.81197452545166
    8. '   ' → logprob: -15.68697452545166
    9. ':

' → logprob: -15.93697452545166
    10. '():
' → logprob: -16.061973571777344

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6777836084365845
    2. ' top' → logprob: -0.8027836084365845
    3. 'top' → logprob: -3.802783489227295
    4. '   ' → logprob: -4.302783489227295
    5. '
' → logprob: -4.927783489227295
    6. '	top' → logprob: -7.177783489227295
    7. '[top' → logprob: -8.927783966064453
    8. '```' → logprob: -9.677783966064453
    9. '    
' → logprob: -10.427783966064453
    10. '(top' → logprob: -10.677783966064453

Token 223: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' (adapté à ' top') → logprob: -0.576097309589386
    2. ' top' → logprob: -0.826097309589386
    3. '   ' → logprob: -9.57609748840332
    4. '       ' → logprob: -9.57609748840332
    5. '           ' → logprob: -11.32609748840332
    6. '	top' → logprob: -11.95109748840332
    7. '[top' → logprob: -15.07609748840332
    8. '```' → logprob: -16.20109748840332
    9. '    ' → logprob: -16.57609748840332
    10. ' ' → logprob: -16.82609748840332

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759394764900208
    2. '=' → logprob: -0.8259394764900208
    3. ' ' → logprob: -17.450939178466797
    4. '   ' → logprob: -18.200939178466797
    5. '=

' → logprob: -19.450939178466797
    6. ' =
' → logprob: -19.575939178466797
    7. '=
' → logprob: -19.825939178466797
    8. '	' → logprob: -20.700939178466797
    9. 'stack' → logprob: -20.950939178466797
    10. '  ' → logprob: -20.950939178466797

Token 225: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.3132686913013458
    2. ' stack' → logprob: -1.3132686614990234
    3. '	stack' → logprob: -12.188268661499023
    4. '   ' → logprob: -14.188268661499023
    5. '(stack' → logprob: -14.188268661499023
    6. '.stack' → logprob: -15.688268661499023
    7. 'stackoverflow' → logprob: -16.813268661499023
    8. '_stack' → logprob: -16.938268661499023
    9. ' ' → logprob: -17.813268661499023
    10. '       ' → logprob: -18.813268661499023

Token 226: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -9.729906196298543e-06
    2. '.' → logprob: -11.750009536743164
    3. 'pop' → logprob: -13.250009536743164
    4. ' .' → logprob: -16.750009536743164
    5. '.p' → logprob: -16.750009536743164
    6. ' pop' → logprob: -20.125009536743164
    7. '.Pop' → logprob: -20.375009536743164
    8. '	pop' → logprob: -21.250009536743164
    9. '.append' → logprob: -21.500009536743164
    10. '   ' → logprob: -21.875009536743164

Token 227: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3132685124874115
    2. '()
' → logprob: -1.3132685422897339
    3. '()
' → logprob: -12.563268661499023
    4. '       ' → logprob: -13.438268661499023
    5. '()

' → logprob: -13.813268661499023
    6. '(
' → logprob: -15.188268661499023
    7. '   ' → logprob: -15.813268661499023
    8. '(' → logprob: -15.813268661499023
    9. ' ()' → logprob: -16.813268661499023
    10. '()\' → logprob: -17.313268661499023

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050728779286146164
    2. '
' → logprob: -3.3007287979125977
    3. 'width' → logprob: -4.800728797912598
    4. ' width' → logprob: -5.800728797912598
    5. '        
' → logprob: -7.050728797912598
    6. '   ' → logprob: -9.050728797912598
    7. ',width' → logprob: -9.175728797912598
    8. ' 
' → logprob: -10.175728797912598
    9. '```' → logprob: -10.300728797912598
    10. '(width' → logprob: -10.425728797912598

Token 229: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' (adapté à ' width') → logprob: -0.06238238513469696
    2. ' width' → logprob: -2.812382459640503
    3. '       ' → logprob: -7.812382221221924
    4. '#' → logprob: -11.937382698059082
    5. '   ' → logprob: -12.937382698059082
    6. ' #' → logprob: -14.312382698059082
    7. '	width' → logprob: -15.812382698059082
    8. 'height' → logprob: -16.437381744384766
    9. '```' → logprob: -17.187381744384766
    10. '           ' → logprob: -17.687381744384766

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888978719711304
    2. '=' → logprob: -2.578889846801758
    3. '   ' → logprob: -17.828889846801758
    4. ' ' → logprob: -19.203889846801758
    5. ' =
' → logprob: -19.203889846801758
    6. '＝' → logprob: -19.453889846801758
    7. '    ' → logprob: -20.203889846801758
    8. '=

' → logprob: -20.453889846801758
    9. '=
' → logprob: -20.953889846801758
    10. '=index' → logprob: -21.078889846801758

Token 231: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.021310636773705482
    2. ' n' → logprob: -4.021310806274414
    3. 'index' → logprob: -5.771310806274414
    4. ' index' → logprob: -10.271310806274414
    5. '   ' → logprob: -12.771310806274414
    6. '	n' → logprob: -13.396310806274414
    7. ' ' → logprob: -14.271310806274414
    8. '(n' → logprob: -15.271310806274414
    9. 'len' → logprob: -16.271310806274414
    10. '  ' → logprob: -16.521310806274414

Token 232: ' if' (ID: 538)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19505928456783295
    2. '-' → logprob: -1.9450592994689941
    3. ' if' → logprob: -3.445059299468994
    4. 'if' → logprob: -6.070059299468994
    5. '-if' → logprob: -11.570058822631836
    6. ' ' → logprob: -11.695058822631836
    7. '   ' → logprob: -12.820058822631836
    8. '-n' → logprob: -15.320058822631836
    9. '  ' → logprob: -16.445058822631836
    10. 'If' → logprob: -16.570058822631836

Token 233: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16022686660289764
    2. ' not' → logprob: -1.910226821899414
    3. '(not' → logprob: -13.660226821899414
    4. '!' → logprob: -13.785226821899414
    5. '	not' → logprob: -15.160226821899414
    6. '   ' → logprob: -16.410226821899414
    7. 'stack' → logprob: -17.035226821899414
    8. ':not' → logprob: -17.160226821899414
    9. 'n' → logprob: -17.285226821899414
    10. '_not' → logprob: -17.285226821899414

Token 234: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.6931576132774353
    2. 'stack' → logprob: -0.6931576132774353
    3. '(stack' → logprob: -12.068157196044922
    4. '	stack' → logprob: -12.818157196044922
    5. '_stack' → logprob: -13.943157196044922
    6. '.stack' → logprob: -14.318157196044922
    7. 'Stack' → logprob: -15.443157196044922
    8. 'stackoverflow' → logprob: -16.318157196044922
    9. ' ' → logprob: -16.943157196044922
    10. '   ' → logprob: -17.693157196044922

Token 235: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4741138815879822
    2. 'else' → logprob: -0.9741138815879822
    3. '-' → logprob: -10.474113464355469
    4. ' -' → logprob: -11.724113464355469
    5. '   ' → logprob: -15.599113464355469
    6. ' ' → logprob: -15.974113464355469
    7. '_else' → logprob: -17.22411346435547
    8. '        ' → logprob: -17.34911346435547
    9. '       ' → logprob: -17.34911346435547
    10. '	else' → logprob: -17.59911346435547

Token 236: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06196858361363411
    2. 'n' → logprob: -2.8119685649871826
    3. ' ' → logprob: -14.936968803405762
    4. '   ' → logprob: -15.186968803405762
    5. '	n' → logprob: -15.436968803405762
    6. '    ' → logprob: -16.811967849731445
    7. '(n' → logprob: -17.561967849731445
    8. '  ' → logprob: -17.811967849731445
    9. '_n' → logprob: -18.186967849731445
    10. ' (' → logprob: -18.811967849731445

Token 237: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1269298940896988
    2. '-' → logprob: -2.126929998397827
    3. ' ' → logprob: -14.001930236816406
    4. '   ' → logprob: -14.126930236816406
    5. '       ' → logprob: -16.376930236816406
    6. '-stack' → logprob: -16.876930236816406
    7. '           ' → logprob: -17.251930236816406
    8. '        ' → logprob: -17.376930236816406
    9. '    ' → logprob: -17.501930236816406
    10. '  ' → logprob: -17.876930236816406

Token 238: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.006732780486345291
    2. ' stack' → logprob: -5.006732940673828
    3. '1' → logprob: -11.006732940673828
    4. '	stack' → logprob: -14.506732940673828
    5. ' ' → logprob: -16.256732940673828
    6. '   ' → logprob: -16.381732940673828
    7. '(stack' → logprob: -16.506732940673828
    8. '.stack' → logprob: -16.756732940673828
    9. '_stack' → logprob: -17.381732940673828
    10. 'stackoverflow' → logprob: -18.006732940673828

Token 239: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.438573680294212e-06
    2. '-' → logprob: -12.250005722045898
    3. '   ' → logprob: -16.0000057220459
    4. '1' → logprob: -16.3750057220459
    5. '[' → logprob: -16.3750057220459
    6. '[:-' → logprob: -16.5000057220459
    7. 'len' → logprob: -16.7500057220459
    8. '```' → logprob: -17.2500057220459
    9. ' [-' → logprob: -17.3750057220459
    10. '`' → logprob: -17.5000057220459

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026968008023686707
    2. '-' → logprob: -8.250269889831543
    3. '[-' → logprob: -11.750269889831543
    4. '   ' → logprob: -15.625269889831543
    5. ' ' → logprob: -16.000268936157227
    6. '[' → logprob: -16.875268936157227
    7. '```' → logprob: -16.875268936157227
    8. ' -' → logprob: -17.375268936157227
    9. '
' → logprob: -18.250268936157227
    10. '(-' → logprob: -18.375268936157227

Token 241: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6539708971977234
    2. ' -' → logprob: -0.7789708971977234
    3. ']' → logprob: -3.903970956802368
    4. ']-' → logprob: -7.778970718383789
    5. '1' → logprob: -8.403970718383789
    6. '[' → logprob: -9.153970718383789
    7. ')' → logprob: -9.278970718383789
    8. ' ' → logprob: -10.028970718383789
    9. '   ' → logprob: -10.403970718383789
    10. ' ]' → logprob: -10.528970718383789

Token 242: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38688546419143677
    2. '-' → logprob: -1.136885404586792
    3. '[' → logprob: -11.886885643005371
    4. ' ' → logprob: -12.386885643005371
    5. '1' → logprob: -13.386885643005371
    6. '```' → logprob: -13.636885643005371
    7. 's' → logprob: -15.761885643005371
    8. '[-' → logprob: -16.261884689331055
    9. '   ' → logprob: -16.386884689331055
    10. '>' → logprob: -16.886884689331055

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. '```' → logprob: -15.000004768371582
    4. '   ' → logprob: -16.812503814697266
    5. '<|end|>' → logprob: -17.187503814697266
    6. '۱' → logprob: -17.312503814697266
    7. '116' → logprob: -18.187503814697266
    8. '１' → logprob: -18.500003814697266
    9. '' → logprob: -18.562503814697266
    10. '[' → logprob: -18.750003814697266

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.375017166137695
    3. '116' → logprob: -14.000017166137695
    4. '146' → logprob: -14.125017166137695
    5. '<|end|>' → logprob: -14.500017166137695
    6. '```' → logprob: -14.500017166137695
    7. '11' → logprob: -15.062517166137695
    8. '118' → logprob: -15.500017166137695
    9. '   ' → logprob: -15.625017166137695
    10. '114' → logprob: -15.687517166137695

Token 245: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1331070363521576
    2. '
' → logprob: -2.1331069469451904
    3. ' area' → logprob: -5.8831071853637695
    4. 'area' → logprob: -5.8831071853637695
    5. '   ' → logprob: -8.00810718536377
    6. '        
' → logprob: -8.88310718536377
    7. '           ' → logprob: -10.75810718536377
    8. '
' → logprob: -10.75810718536377
    9. '```' → logprob: -11.13310718536377
    10. ')
' → logprob: -11.50810718536377

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.119652658700943
    2. '
' → logprob: -2.49465274810791
    3. ' area' → logprob: -3.99465274810791
    4. 'area' → logprob: -4.49465274810791
    5. '   ' → logprob: -7.49465274810791
    6. '           ' → logprob: -9.61965274810791
    7. '        
' → logprob: -10.86965274810791
    8. '```' → logprob: -11.99465274810791
    9. '(area' → logprob: -12.49465274810791
    10. ' ' → logprob: -12.86965274810791

Token 247: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.0087158577516675
    2. ' area' → logprob: -4.758715629577637
    3. '       ' → logprob: -9.258715629577637
    4. '   ' → logprob: -12.133715629577637
    5. '           ' → logprob: -15.633715629577637
    6. '```' → logprob: -15.633715629577637
    7. '
' → logprob: -16.383716583251953
    8. 'height' → logprob: -16.758716583251953
    9. ' ' → logprob: -17.258716583251953
    10. '        ' → logprob: -17.383716583251953

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141343772411346
    2. '=' → logprob: -1.7014133930206299
    3. 's' → logprob: -16.701414108276367
    4. '_' → logprob: -17.826414108276367
    5. ' ' → logprob: -18.201414108276367
    6. ' =
' → logprob: -18.326414108276367
    7. ' ' → logprob: -18.701414108276367
    8. '   ' → logprob: -18.701414108276367
    9. ')' → logprob: -19.326414108276367
    10. '.' → logprob: -19.826414108276367

Token 249: ' heights' (ID: 57359)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.005952260922640562
    2. ' heights' → logprob: -5.13095235824585
    3. '   ' → logprob: -11.005951881408691
    4. ' he' → logprob: -12.380951881408691
    5. 'height' → logprob: -13.130951881408691
    6. '_he' → logprob: -15.130951881408691
    7. 'He' → logprob: -15.505951881408691
    8. ' ' → logprob: -15.755951881408691
    9. '	' → logprob: -16.130952835083008
    10. '       ' → logprob: -16.255952835083008

Token 250: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. 'top' → logprob: -17.375
    4. '[to' → logprob: -19.0
    5. '[
' → logprob: -20.0
    6. '(top' → logprob: -21.0
    7. ' top' → logprob: -21.0
    8. ' [' → logprob: -21.125
    9. '[temp' → logprob: -21.25
    10. '[token' → logprob: -21.375

Token 251: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03380037099123001
    2. '*' → logprob: -3.5338003635406494
    3. ']' → logprob: -5.5338006019592285
    4. ')' → logprob: -9.40880012512207
    5. ' ' → logprob: -12.78380012512207
    6. '[' → logprob: -13.40880012512207
    7. ' ' → logprob: -13.53380012512207
    8. ' ]' → logprob: -13.65880012512207
    9. ']*' → logprob: -13.90880012512207
    10. '}' → logprob: -14.28380012512207

Token 252: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25192946195602417
    2. '*' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.25192928314209
    4. ' ' → logprob: -15.62692928314209
    5. ')' → logprob: -19.376930236816406
    6. '```' → logprob: -19.376930236816406
    7. '   ' → logprob: -19.876930236816406
    8. '*object' → logprob: -20.001930236816406
    9. '**' → logprob: -20.626930236816406
    10. '  ' → logprob: -21.251930236816406

Token 253: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.00861456897109747
    2. ' width' → logprob: -4.758614540100098
    3. '(width' → logprob: -17.758615493774414
    4. ' ' → logprob: -18.383615493774414
    5. '	width' → logprob: -18.508615493774414
    6. '   ' → logprob: -18.883615493774414
    7. 'wide' → logprob: -19.508615493774414
    8. '```' → logprob: -19.758615493774414
    9. 'height' → logprob: -20.633615493774414
    10. ';width' → logprob: -20.758615493774414

Token 254: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4225447475910187
    2. '       ' → logprob: -1.1725447177886963
    3. ' if' → logprob: -3.4225447177886963
    4. '   ' → logprob: -6.297544956207275
    5. 'if' → logprob: -8.672544479370117
    6. '	if' → logprob: -9.047544479370117
    7. '        
' → logprob: -9.172544479370117
    8. ' 
' → logprob: -9.797544479370117
    9. '           ' → logprob: -10.297544479370117
    10. '<|end|>' → logprob: -10.547544479370117

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007702099159359932
    2. ' if' → logprob: -4.882701873779297
    3. 'if' → logprob: -10.132701873779297
    4. '           ' → logprob: -10.257701873779297
    5. '   ' → logprob: -11.007701873779297
    6. '
' → logprob: -13.257701873779297
    7. '	if' → logprob: -13.632701873779297
    8. '      ' → logprob: -14.757701873779297
    9. '               ' → logprob: -14.882701873779297
    10. '        
' → logprob: -15.257701873779297

Token 256: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18008588254451752
    2. ' if' → logprob: -1.9300858974456787
    3. '       ' → logprob: -3.9300858974456787
    4. '   ' → logprob: -10.805086135864258
    5. '           ' → logprob: -12.930086135864258
    6. '	if' → logprob: -14.305086135864258
    7. '```' → logprob: -15.680086135864258
    8. '
' → logprob: -16.180086135864258
    9. ' ' → logprob: -16.305086135864258
    10. 'If' → logprob: -17.430086135864258

Token 257: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.575939953327179
    2. ' area' → logprob: -0.825939953327179
    3. '(area' → logprob: -15.075940132141113
    4. '   ' → logprob: -16.200939178466797
    5. ' ' → logprob: -17.075939178466797
    6. 'Area' → logprob: -18.325939178466797
    7. '```' → logprob: -18.825939178466797
    8. '_area' → logprob: -18.950939178466797
    9. '.area' → logprob: -18.950939178466797
    10. '    ' → logprob: -19.325939178466797

Token 258: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5759403705596924
    2. '>' → logprob: -0.8259403705596924
    3. ' ' → logprob: -14.200940132141113
    4. '   ' → logprob: -15.825940132141113
    5. ' ' → logprob: -16.70094108581543
    6. ' >
' → logprob: -18.32594108581543
    7. ' >
' → logprob: -18.70094108581543
    8. '">' → logprob: -18.82594108581543
    9. '  ' → logprob: -19.07594108581543
    10. '&gt' → logprob: -19.20094108581543

Token 259: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4740770161151886
    2. ' max' → logprob: -0.9740769863128662
    3. '_max' → logprob: -18.349077224731445
    4. '	max' → logprob: -18.724077224731445
    5. '(max' → logprob: -19.099077224731445
    6. '   ' → logprob: -19.599077224731445
    7. '=max' → logprob: -19.724077224731445
    8. '[max' → logprob: -20.474077224731445
    9. '       ' → logprob: -21.224077224731445
    10. '           ' → logprob: -21.349077224731445

Token 260: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.3856492842023727e-06
    2. 'area' → logprob: -14.125000953674316
    3. '_max' → logprob: -14.500000953674316
    4. '_' → logprob: -16.750001907348633
    5. 'max' → logprob: -17.625001907348633
    6. 'Area' → logprob: -19.750001907348633
    7. '_space' → logprob: -19.875001907348633
    8. ' _' → logprob: -20.625001907348633
    9. '_size' → logprob: -21.375001907348633
    10. '_are' → logprob: -21.375001907348633

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6415095329284668
    2. ':
' → logprob: -0.8915095329284668
    3. '           ' → logprob: -2.766509532928467
    4. '=' → logprob: -8.016510009765625
    5. '               ' → logprob: -9.141510009765625
    6. '       ' → logprob: -9.641510009765625
    7. ' =' → logprob: -10.016510009765625
    8. ' :
' → logprob: -11.641510009765625
    9. ' :' → logprob: -11.891510009765625
    10. ':
' → logprob: -12.141510009765625

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008503355085849762
    2. ' max' → logprob: -5.133503437042236
    3. 'max' → logprob: -6.008503437042236
    4. '               ' → logprob: -9.133502960205078
    5. '          ' → logprob: -13.383502960205078
    6. '```' → logprob: -14.258502960205078
    7. ':' → logprob: -14.508502960205078
    8. ':
' → logprob: -14.633502960205078
    9. '(max' → logprob: -14.758502960205078
    10. '       ' → logprob: -14.758502960205078

Token 263: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.387556254863739
    2. 'max' (adapté à ' max') → logprob: -1.1375563144683838
    3. '           ' → logprob: -7.637556076049805
    4. '               ' → logprob: -8.512556076049805
    5. '       ' → logprob: -13.637556076049805
    6. '   ' → logprob: -14.887556076049805
    7. '	max' → logprob: -15.887556076049805
    8. '```' → logprob: -16.262556076049805
    9. '_max' → logprob: -16.637556076049805
    10. '                   ' → logprob: -16.762556076049805

Token 264: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.750000953674316
    3. ' _' → logprob: -14.750000953674316
    4. '_space' → logprob: -15.875000953674316
    5. 'area' → logprob: -16.375001907348633
    6. '_are' → logprob: -18.500001907348633
    7. '_code' → logprob: -18.750001907348633
    8. '_max' → logprob: -19.000001907348633
    9. '_size' → logprob: -19.375001907348633
    10. 'Area' → logprob: -19.500001907348633

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868716359138489
    2. '=' → logprob: -1.136871576309204
    3. '=max' → logprob: -15.386871337890625
    4. ' ' → logprob: -16.136871337890625
    5. '           ' → logprob: -16.761871337890625
    6. '            ' → logprob: -17.011871337890625
    7. ' =
' → logprob: -17.511871337890625
    8. '＝' → logprob: -17.511871337890625
    9. '.=' → logprob: -17.636871337890625
    10. '               ' → logprob: -17.636871337890625

Token 266: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.6931471824645996
    2. 'area' → logprob: -0.6931471824645996
    3. 'Area' → logprob: -17.943147659301758
    4. '_area' → logprob: -18.568147659301758
    5. '(area' → logprob: -19.068147659301758
    6. ' área' → logprob: -19.818147659301758
    7. '.area' → logprob: -20.818147659301758
    8. '-area' → logprob: -20.943147659301758
    9. ' ' → logprob: -21.068147659301758
    10. 'areas' → logprob: -21.068147659301758

Token 267: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7494745850563049
    2. '
' → logprob: -1.2494745254516602
    3. 'return' → logprob: -1.4994745254516602
    4. '    
' → logprob: -4.49947452545166
    5. ' return' → logprob: -5.12447452545166
    6. '            
' → logprob: -8.74947452545166
    7. '        
' → logprob: -8.74947452545166
    8. ' 
' → logprob: -9.87447452545166
    9. '  
' → logprob: -10.87447452545166
    10. '	return' → logprob: -11.74947452545166

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20176666975021362
    2. 'return' → logprob: -1.7017667293548584
    3. ' return' → logprob: -7.951766490936279
    4. '	return' → logprob: -13.701766967773438
    5. ' ' → logprob: -16.576766967773438
    6. '       ' → logprob: -17.576766967773438
    7. '  ' → logprob: -17.701766967773438
    8. '_return' → logprob: -18.076766967773438
    9. '    
' → logprob: -18.076766967773438
    10. ':return' → logprob: -18.076766967773438

Token 269: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -4.723352049040841e-06
    2. '   ' → logprob: -12.500004768371582
    3. ' return' → logprob: -14.000004768371582
    4. '	return' → logprob: -17.250003814697266
    5. '
' → logprob: -20.625003814697266
    6. '{return' → logprob: -21.625003814697266
    7. '    
' → logprob: -21.750003814697266
    8. '```' → logprob: -22.125003814697266
    9. 'eturn' → logprob: -22.250003814697266
    10. 'Return' → logprob: -22.500003814697266

Token 270: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.12693093717098236
    2. 'max' → logprob: -2.1269309520721436
    3. '_max' → logprob: -12.876931190490723
    4. ' ' → logprob: -16.001930236816406
    5. '(max' → logprob: -16.501930236816406
    6. '	max' → logprob: -16.876930236816406
    7. ',max' → logprob: -17.501930236816406
    8. '=max' → logprob: -17.751930236816406
    9. '[max' → logprob: -17.751930236816406
    10. '_' → logprob: -19.126930236816406

Token 271: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.625000953674316
    3. 'area' → logprob: -16.125
    4. '_space' → logprob: -18.125
    5. ' _' → logprob: -18.75
    6. '_AREA' → logprob: -18.75
    7. 'Area' → logprob: -19.875
    8. '_are' → logprob: -20.0
    9. '_ar' → logprob: -20.25
    10. '_size' → logprob: -21.0

Token 272: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: ' largest' (ID: 10574)
  Prédit: ' largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largest' → logprob: -0.6360794901847839
    2. ' maximal' → logprob: -1.2610795497894287
    3. 'largest' → logprob: -2.5110795497894287
    4. 'max' → logprob: -2.8860795497894287
    5. ' max' → logprob: -3.0110795497894287
    6. ' ' → logprob: -8.011079788208008
    7. ' maximum' → logprob: -8.011079788208008
    8. '  ' → logprob: -9.511079788208008
    9. '   ' → logprob: -9.511079788208008
    10. '_max' → logprob: -9.636079788208008

Token 275: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -0.004061897750943899
    2. '_hist' → logprob: -6.254061698913574
    3. '_square' → logprob: -6.254061698913574
    4. '_area' → logprob: -9.629061698913574
    5. 'Rectangle' → logprob: -9.629061698913574
    6. '_rect' → logprob: -11.004061698913574
    7. '_' → logprob: -11.504061698913574
    8. '_sub' → logprob: -11.754061698913574
    9. '_l' → logprob: -11.754061698913574
    10. 'rectangle' → logprob: -12.129061698913574

Token 276: '_of' (ID: 8023)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.49261054396629333
    2. '_area' → logprob: -0.9926105737686157
    3. '_hist' → logprob: -4.617610454559326
    4. '_under' → logprob: -5.242610454559326
    5. 'in' → logprob: -6.117610454559326
    6. 'hist' → logprob: -8.117610931396484
    7. 'area' → logprob: -8.367610931396484
    8. '(' → logprob: -8.867610931396484
    9. '(hist' → logprob: -8.867610931396484
    10. 'under' → logprob: -10.492610931396484

Token 277: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39222052693367004
    2. '1' → logprob: -1.1422204971313477
    3. 'ones' → logprob: -5.642220497131348
    4. '_one' → logprob: -7.517220497131348
    5. '```' → logprob: -8.142220497131348
    6. 'zeros' → logprob: -8.517220497131348
    7. 's' → logprob: -9.267220497131348
    8. 'def' → logprob: -9.267220497131348
    9. 'matrix' → logprob: -9.392220497131348
    10. ''' → logprob: -9.642220497131348

Token 278: 'ones' (ID: 3617)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3160216510295868
    2. 'ones' → logprob: -1.3160216808319092
    3. 'zeros' → logprob: -6.44102144241333
    4. 'matrix' → logprob: -7.19102144241333
    5. 'one' → logprob: -8.691021919250488
    6. '```' → logprob: -10.566021919250488
    7. 'on' → logprob: -10.816021919250488
    8. '0' → logprob: -11.066021919250488
    9. 'binary' → logprob: -11.066021919250488
    10. 'text' → logprob: -11.566021919250488

Token 279: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.5838334560394287
    2. '(' → logprob: -0.8338334560394287
    3. '_in' → logprob: -5.333833694458008
    4. '(grid' → logprob: -6.583833694458008
    5. '(arr' → logprob: -7.708833694458008
    6. '(m' → logprob: -8.583833694458008
    7. '_' → logprob: -8.583833694458008
    8. '(array' → logprob: -8.833833694458008
    9. '_matrix' → logprob: -8.833833694458008
    10. '(mat' → logprob: -8.958833694458008

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07237544655799866
    2. '(matrix' → logprob: -2.697375535964966
    3. '(' → logprob: -6.447375297546387
    4. ':' → logprob: -8.072375297546387
    5. ' ):' → logprob: -8.197375297546387
    6. '):
' → logprob: -9.322375297546387
    7. '(m' → logprob: -9.822375297546387
    8. '(mat' → logprob: -10.572375297546387
    9. '(row' → logprob: -10.822375297546387
    10. ')' → logprob: -10.822375297546387

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004343121778219938
    2. ' if' → logprob: -5.504343032836914
    3. ' rows' → logprob: -9.754343032836914
    4. '    
' → logprob: -9.879343032836914
    5. '<|end|>' → logprob: -10.379343032836914
    6. '    ' → logprob: -10.754343032836914
    7. '(rows' → logprob: -11.129343032836914
    8. 'rows' → logprob: -11.504343032836914
    9. ' ' → logprob: -11.504343032836914
    10. 'if' → logprob: -11.629343032836914

Token 282: ' """
' (ID: 7037)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10134030133485794
    2. '   ' → logprob: -2.3513402938842773
    3. 'if' → logprob: -6.976340293884277
    4. ' rows' → logprob: -8.601340293884277
    5. 'rows' → logprob: -11.601340293884277
    6. ' heights' → logprob: -13.226340293884277
    7. ' n' → logprob: -13.851340293884277
    8. '	if' → logprob: -13.976340293884277
    9. ' height' → logprob: -14.351340293884277
    10. ' def' → logprob: -15.101340293884277

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20506086945533752
    2. ' if' → logprob: -1.8300608396530151
    3. 'if' → logprob: -3.7050609588623047
    4. 'def' → logprob: -9.455060958862305
    5. '"' → logprob: -9.830060958862305
    6. ' """' → logprob: -10.080060958862305
    7. '"""' → logprob: -10.455060958862305
    8. ' None' → logprob: -10.580060958862305
    9. '    ' → logprob: -10.580060958862305
    10. ' n' → logprob: -10.580060958862305

Token 284: ' Given' (ID: 29844)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25580307841300964
    2. 'if' → logprob: -2.005803108215332
    3. '   ' → logprob: -2.505803108215332
    4. ' rows' → logprob: -5.880803108215332
    5. 'rows' → logprob: -6.255803108215332
    6. 'def' → logprob: -6.755803108215332
    7. ' n' → logprob: -6.880803108215332
    8. ' def' → logprob: -7.755803108215332
    9. 'Calculate' → logprob: -7.880803108215332
    10. ' """
' → logprob: -8.255803108215332

Token 285: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5771099328994751
    2. 'a' → logprob: -1.077109932899475
    3. 'matrix' → logprob: -2.8271098136901855
    4. ' matrix' → logprob: -3.3271098136901855
    5. '   ' → logprob: -6.3271098136901855
    6. 'binary' → logprob: -7.9521098136901855
    7. 'def' → logprob: -8.077110290527344
    8. ' ' → logprob: -8.952110290527344
    9. ' binary' → logprob: -9.077110290527344
    10. '(matrix' → logprob: -9.827110290527344

Token 286: ' ' (ID: 220)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.6959409117698669
    2. 'matrix' → logprob: -1.5709409713745117
    3. ' binary' → logprob: -1.8209409713745117
    4. ' matrix' → logprob: -2.0709409713745117
    5. ' list' → logprob: -5.820940971374512
    6. ' ' → logprob: -6.320940971374512
    7. 'list' → logprob: -7.695940971374512
    8. '   ' → logprob: -8.945940971374512
    9. '2' → logprob: -9.195940971374512
    10. 'm' → logprob: -9.695940971374512

Token 287: '5' (ID: 20)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.1678788661956787
    2. 'matrix' → logprob: -1.9178788661956787
    3. 'list' → logprob: -5.042879104614258
    4. '2' → logprob: -7.167879104614258
    5. ' binary' → logprob: -8.792879104614258
    6. ' matrix' → logprob: -9.042879104614258
    7. ' ' → logprob: -9.667879104614258
    8. ' list' → logprob: -10.417879104614258
    9. '   ' → logprob: -11.042879104614258
    10. 'def' → logprob: -11.917879104614258

Token 288: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7355749011039734
    2. ' x' → logprob: -0.9855749011039734
    3. '   ' → logprob: -2.235574960708618
    4. ' ' → logprob: -3.360574960708618
    5. 'def' → logprob: -6.110574722290039
    6. '  ' → logprob: -6.735574722290039
    7. ' matrix' → logprob: -6.985574722290039
    8. ' def' → logprob: -7.485574722290039
    9. '    ' → logprob: -7.735574722290039
    10. ' by' → logprob: -8.985574722290039

Token 289: '5' (ID: 20)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.08491382002830505
    2. '5' → logprob: -3.084913730621338
    3. 'matrix' → logprob: -3.709913730621338
    4. ' list' → logprob: -5.834913730621338
    5. ' binary' → logprob: -5.959913730621338
    6. 'm' → logprob: -6.709913730621338
    7. ' ' → logprob: -6.959913730621338
    8. 'n' → logprob: -7.084913730621338
    9. 'binary' → logprob: -7.584913730621338
    10. 'N' → logprob: -7.834913730621338

Token 290: ' binary' (ID: 15600)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.45635467767715454
    2. ' binary' → logprob: -1.2063546180725098
    3. 'binary' → logprob: -3.2063546180725098
    4. 'matrix' → logprob: -3.7063546180725098
    5. ' ' → logprob: -7.20635461807251
    6. ' list' → logprob: -7.45635461807251
    7. ' boolean' → logprob: -8.581355094909668
    8. ' grid' → logprob: -8.831355094909668
    9. '   ' → logprob: -8.956355094909668
    10. 'list' → logprob: -10.456355094909668

Token 291: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.25287508964538574
    2. 'matrix' → logprob: -1.5028750896453857
    3. '_matrix' → logprob: -7.127875328063965
    4. '   ' → logprob: -9.502875328063965
    5. 'def' → logprob: -10.127875328063965
    6. '
' → logprob: -12.127875328063965
    7. 'import' → logprob: -12.377875328063965
    8. 'array' → logprob: -12.627875328063965
    9. 'binary' → logprob: -12.752875328063965
    10. '(matrix' → logprob: -13.002875328063965

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5986988544464111
    2. ':
' → logprob: -1.8486988544464111
    3. '   ' → logprob: -1.9736988544464111
    4. ',
' → logprob: -3.223698854446411
    5. ' (' → logprob: -3.598698854446411
    6. 'def' → logprob: -3.598698854446411
    7. ':' → logprob: -4.223698616027832
    8. '
' → logprob: -4.598698616027832
    9. '(matrix' → logprob: -4.973698616027832
    10. '[' → logprob: -5.098698616027832

Token 293: ' find' (ID: 1646)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04186691343784332
    2. ' def' → logprob: -4.166866779327393
    3. ' heights' → logprob: -4.416866779327393
    4. ' rows' → logprob: -6.166866779327393
    5. ' max' → logprob: -6.291866779327393
    6. ' return' → logprob: -6.541866779327393
    7. '
' → logprob: -6.541866779327393
    8. 'def' → logprob: -6.916866779327393
    9. ' calculate' → logprob: -7.041866779327393
    10. ' n' → logprob: -7.041866779327393

Token 294: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.003882738295942545
    2. 'the' → logprob: -5.628882884979248
    3. '   ' → logprob: -8.37888240814209
    4. ' largest' → logprob: -10.62888240814209
    5. ' ' → logprob: -11.37888240814209
    6. '    ' → logprob: -12.12888240814209
    7. '  ' → logprob: -12.37888240814209
    8. 'largest' → logprob: -13.12888240814209
    9. ' a' → logprob: -13.62888240814209
    10. 'def' → logprob: -14.00388240814209

Token 295: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.2301400750875473
    2. ' largest' → logprob: -1.6051400899887085
    3. 'maximum' → logprob: -5.855140209197998
    4. 'max' → logprob: -7.230140209197998
    5. ' maximum' → logprob: -7.480140209197998
    6. ' area' → logprob: -8.48013973236084
    7. 'area' → logprob: -8.98013973236084
    8. ' maximal' → logprob: -9.10513973236084
    9. '   ' → logprob: -9.85513973236084
    10. 'def' → logprob: -10.73013973236084

Token 296: ' rectangular' (ID: 79707)
  Prédit: ' rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangle' → logprob: -0.023849092423915863
    2. 'rectangle' → logprob: -3.7738490104675293
    3. ' rectangular' → logprob: -8.148849487304688
    4. '_rectangle' → logprob: -8.273849487304688
    5. ' area' → logprob: -10.398849487304688
    6. 'rect' → logprob: -11.648849487304688
    7. ' ' → logprob: -11.898849487304688
    8. '   ' → logprob: -12.273849487304688
    9. '```' → logprob: -13.398849487304688
    10. '.rectangle' → logprob: -13.398849487304688

Token 297: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.0015896043041720986
    2. '_area' → logprob: -7.126589775085449
    3. ' sub' → logprob: -7.751589775085449
    4. ' block' → logprob: -8.37658977508545
    5. 'area' → logprob: -9.12658977508545
    6. ' region' → logprob: -12.12658977508545
    7. 'sub' → logprob: -12.62658977508545
    8. '_sub' → logprob: -13.25158977508545
    9. ' área' → logprob: -13.75158977508545
    10. ' rectangle' → logprob: -14.25158977508545

Token 298: ' consisting' (ID: 40449)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3640349209308624
    2. '   ' → logprob: -1.23903489112854
    3. ' consisting' → logprob: -4.864035129547119
    4. ' in' → logprob: -6.239035129547119
    5. ' composed' → logprob: -6.239035129547119
    6. 'of' → logprob: -6.364035129547119
    7. ' containing' → logprob: -7.364035129547119
    8. ' that' → logprob: -7.489035129547119
    9. ' with' → logprob: -7.989035129547119
    10. ' ' → logprob: -9.614034652709961

Token 299: ' only' (ID: 1606)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6368173360824585
    2. ' only' → logprob: -1.3868173360824585
    3. ' entirely' → logprob: -1.8868173360824585
    4. '   ' → logprob: -4.011817455291748
    5. ' exclusively' → logprob: -4.011817455291748
    6. ' solely' → logprob: -4.136817455291748
    7. 'only' → logprob: -4.886817455291748
    8. 'of' → logprob: -5.886817455291748
    9. '_only' → logprob: -5.886817455291748
    10. 'ent' → logprob: -6.386817455291748

Token 300: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.10096137970685959
    2. 'of' → logprob: -2.350961446762085
    3. '   ' → logprob: -7.350961208343506
    4. '  ' → logprob: -10.100961685180664
    5. '_of' → logprob: -10.225961685180664
    6. ' ' → logprob: -11.350961685180664
    7. '	of' → logprob: -11.475961685180664
    8. 'def' → logprob: -11.850961685180664
    9. '    
' → logprob: -13.850961685180664
    10. '
' → logprob: -13.850961685180664

Token 301: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008358351769857109
    2. ' ' → logprob: -7.37583589553833
    3. 'ones' → logprob: -9.000835418701172
    4. ' ones' → logprob: -9.375835418701172
    5. '   ' → logprob: -14.375835418701172
    6. '`' → logprob: -15.375835418701172
    7. '```' → logprob: -16.250835418701172
    8. 'only' → logprob: -16.625835418701172
    9. ''s' → logprob: -17.125835418701172
    10. '  ' → logprob: -17.375835418701172

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004248355980962515
    2. ' ' → logprob: -8.3754243850708
    3. 'ones' → logprob: -9.1254243850708
    4. ' ones' → logprob: -9.3754243850708
    5. '   ' → logprob: -15.5004243850708
    6. '`' → logprob: -15.8754243850708
    7. ''s' → logprob: -16.500425338745117
    8. ''' → logprob: -16.500425338745117
    9. '```' → logprob: -17.125425338745117
    10. '0' → logprob: -17.750425338745117

Token 303: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16964903473854065
    2. ' s' → logprob: -1.9196490049362183
    3. ''s' → logprob: -4.669649124145508
    4. '_s' → logprob: -13.419649124145508
    5. ' '' → logprob: -13.919649124145508
    6. '`s' → logprob: -14.044649124145508
    7. ' ' → logprob: -14.169649124145508
    8. ''' → logprob: -14.919649124145508
    9. '```' → logprob: -15.544649124145508
    10. '   ' → logprob: -15.794649124145508

Token 304: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03129051625728607
    2. 'def' → logprob: -4.406290531158447
    3. '(matrix' → logprob: -4.781290531158447
    4. ' in' → logprob: -5.656290531158447
    5. '.' → logprob: -6.031290531158447
    6. '(' → logprob: -6.531290531158447
    7. ':' → logprob: -7.281290531158447
    8. '
' → logprob: -7.656290531158447
    9. ':
' → logprob: -8.281290054321289
    10. ',' → logprob: -8.406290054321289

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008878213353455067
    2. '
' → logprob: -4.883878231048584
    3. '    
' → logprob: -7.133878231048584
    4. '"""
' → logprob: -8.383877754211426
    5. '```' → logprob: -9.508877754211426
    6. '"""' → logprob: -10.133877754211426
    7. '\n' → logprob: -10.133877754211426
    8. 'n' → logprob: -11.008877754211426
    9. 'def' → logprob: -11.133877754211426
    10. '  
' → logprob: -11.258877754211426

Token 306: ' Matrix' (ID: 23226)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022651299834251404
    2. '
' → logprob: -3.897651195526123
    3. '    
' → logprob: -6.272651195526123
    4. '    ' → logprob: -10.022651672363281
    5. '   
' → logprob: -10.147651672363281
    6. 'n' → logprob: -10.147651672363281
    7. '\n' → logprob: -10.522651672363281
    8. '```' → logprob: -11.272651672363281
    9. '"""
' → logprob: -11.397651672363281
    10. 'def' → logprob: -11.647651672363281

Token 307: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01928880624473095
    2. '   ' → logprob: -5.019289016723633
    3. ':' → logprob: -5.894289016723633
    4. '=' → logprob: -5.894289016723633
    5. ' is' → logprob: -6.144289016723633
    6. '_rows' → logprob: -6.394289016723633
    7. '_height' → logprob: -7.144289016723633
    8. ' rows' → logprob: -7.269289016723633
    9. ' def' → logprob: -7.894289016723633
    10. ' height' → logprob: -8.519289016723633

Token 308: ' list' (ID: 1562)
  Prédit: ' assumed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' assumed' → logprob: -0.5640020966529846
    2. ' a' → logprob: -1.1890020370483398
    3. ' expected' → logprob: -3.06400203704834
    4. ' given' → logprob: -3.18900203704834
    5. 'a' → logprob: -4.06400203704834
    6. ' represented' → logprob: -5.43900203704834
    7. 'ass' → logprob: -5.56400203704834
    8. 'expected' → logprob: -5.81400203704834
    9. '[' → logprob: -6.06400203704834
    10. ' provided' → logprob: -6.31400203704834

Token 309: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.21048280596733093
    2. '[' → logprob: -1.9604828357696533
    3. '[List' → logprob: -3.5854828357696533
    4. '[int' → logprob: -4.585482597351074
    5. 'of' → logprob: -5.335482597351074
    6. '[
' → logprob: -5.585482597351074
    7. '[list' → logprob: -6.460482597351074
    8. '[str' → logprob: -7.960482597351074
    9. '   ' → logprob: -8.210482597351074
    10. ' [' → logprob: -8.835482597351074

Token 310: ' lists' (ID: 19471)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.17203782498836517
    2. ' lists' → logprob: -2.4220378398895264
    3. 'list' → logprob: -2.6720378398895264
    4. ' list' → logprob: -8.547038078308105
    5. '[list' → logprob: -12.547038078308105
    6. 'List' → logprob: -13.672038078308105
    7. 'Lists' → logprob: -14.547038078308105
    8. ' ' → logprob: -14.797038078308105
    9. '[List' → logprob: -14.922038078308105
    10. '   ' → logprob: -15.422038078308105

Token 311: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5361496806144714
    2. '   ' → logprob: -0.9111496806144714
    3. ' with' → logprob: -5.036149501800537
    4. ',' → logprob: -6.536149501800537
    5. '[' → logprob: -6.786149501800537
    6. '[int' → logprob: -6.786149501800537
    7. 'def' → logprob: -6.911149501800537
    8. 'of' → logprob: -7.911149501800537
    9. ':' → logprob: -8.286149978637695
    10. 'with' → logprob: -8.911149978637695

Token 312: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.40066608786582947
    2. 'ints' → logprob: -2.1506659984588623
    3. ' int' → logprob: -2.2756659984588623
    4. ' integers' → logprob: -2.7756659984588623
    5. 'inte' → logprob: -3.1506659984588623
    6. ' ints' → logprob: -5.150666236877441
    7. '0' → logprob: -10.900666236877441
    8. '[int' → logprob: -11.400666236877441
    9. '1' → logprob: -11.400666236877441
    10. ' ' → logprob: -12.275666236877441

Token 313: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20171737670898438
    2. 'def' → logprob: -2.7017173767089844
    3. ' (' → logprob: -3.2017173767089844
    4. ' with' → logprob: -4.451717376708984
    5. ' where' → logprob: -4.451717376708984
    6. ':
' → logprob: -4.451717376708984
    7. ' representing' → logprob: -4.951717376708984
    8. ':' → logprob: -5.076717376708984
    9. ',' → logprob: -5.451717376708984
    10. '
' → logprob: -5.826717376708984

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5525491833686829
    2. ' int' → logprob: -1.802549123764038
    3. 'int' → logprob: -2.052549123764038
    4. '[int' → logprob: -2.552549123764038
    5. ')' → logprob: -3.677549123764038
    6. 'ints' → logprob: -4.802549362182617
    7. ' ' → logprob: -5.302549362182617
    8. ' ints' → logprob: -5.427549362182617
    9. '1' → logprob: -5.552549362182617
    10. '   ' → logprob: -5.677549362182617

Token 315: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018482115119695663
    2. 'or' → logprob: -4.643482208251953
    3. 's' → logprob: -4.893482208251953
    4. ' and' → logprob: -6.893482208251953
    5. 'and' → logprob: -8.768482208251953
    6. ',' → logprob: -11.643482208251953
    7. '	or' → logprob: -11.893482208251953
    8. 'def' → logprob: -13.893482208251953
    9. '   ' → logprob: -14.018482208251953
    10. ')' → logprob: -14.018482208251953

Token 316: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.000335693359375
    4. ' ' → logprob: -18.000335693359375
    5. ')' → logprob: -18.500335693359375
    6. '  ' → logprob: -19.625335693359375
    7. '```' → logprob: -20.750335693359375
    8. ',' → logprob: -21.000335693359375
    9. '<|end|>' → logprob: -21.000335693359375
    10. 's' → logprob: -21.125335693359375

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. ')' → logprob: -17.50009536743164
    4. '   ' → logprob: -18.75009536743164
    5. '```' → logprob: -20.25009536743164
    6. '0' → logprob: -20.50009536743164
    7. '  ' → logprob: -20.75009536743164
    8. 's' → logprob: -21.75009536743164
    9. ',' → logprob: -22.12509536743164
    10. 'int' → logprob: -22.25009536743164

Token 318: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0747937560081482
    2. ').' → logprob: -2.699793815612793
    3. '):
' → logprob: -6.074793815612793
    4. ')
' → logprob: -6.449793815612793
    5. ').
' → logprob: -8.074793815612793
    6. '   ' → logprob: -8.199793815612793
    7. '):' → logprob: -9.074793815612793
    8. '):

' → logprob: -9.324793815612793
    9. '),' → logprob: -9.949793815612793
    10. 'def' → logprob: -10.199793815612793

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002940613776445389
    2. '
' → logprob: -6.127940654754639
    3. '    
' → logprob: -7.502940654754639
    4. 'n' → logprob: -9.50294017791748
    5. '    ' → logprob: -9.87794017791748
    6. '"""
' → logprob: -10.62794017791748
    7. '```' → logprob: -10.87794017791748
    8. '"""' → logprob: -12.00294017791748
    9. '   
' → logprob: -12.12794017791748
    10. 'def' → logprob: -12.37794017791748

Token 320: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014354011043906212
    2. '
' → logprob: -4.514354228973389
    3. '    
' → logprob: -6.389354228973389
    4. ' heights' → logprob: -6.764354228973389
    5. 'height' → logprob: -8.38935375213623
    6. ' rows' → logprob: -9.88935375213623
    7. '    ' → logprob: -10.13935375213623
    8. ' height' → logprob: -10.63935375213623
    9. 'def' → logprob: -10.76435375213623
    10. 'rows' → logprob: -11.01435375213623

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014859511516988277
    2. 'rows' → logprob: -5.639859676361084
    3. 'if' → logprob: -5.764859676361084
    4. ' if' → logprob: -6.014859676361084
    5. 'he' → logprob: -6.389859676361084
    6. 'max' → logprob: -6.639859676361084
    7. 'n' → logprob: -7.389859676361084
    8. ' n' → logprob: -7.889859676361084
    9. ' heights' → logprob: -7.889859676361084
    10. ' max' → logprob: -8.014859199523926

Token 322: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5762476325035095
    2. 'if' → logprob: -0.8262476325035095
    3. '   ' → logprob: -8.451247215270996
    4. 'rows' → logprob: -10.326247215270996
    5. 'n' → logprob: -10.451247215270996
    6. ' if' → logprob: -10.701247215270996
    7. ' max' → logprob: -11.826247215270996
    8. 'def' → logprob: -13.701247215270996
    9. 'he' → logprob: -14.326247215270996
    10. 'm' → logprob: -15.076247215270996

Token 323: ' heights' (ID: 57359)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4801937937736511
    2. 'if' → logprob: -0.9801937937736511
    3. 'rows' → logprob: -5.480193614959717
    4. 'n' → logprob: -6.855193614959717
    5. ' if' → logprob: -7.980193614959717
    6. ' max' → logprob: -8.605194091796875
    7. 'm' → logprob: -9.605194091796875
    8. 'If' → logprob: -9.730194091796875
    9. 'dp' → logprob: -9.730194091796875
    10. 'he' → logprob: -9.855194091796875

Token 324: ' array' (ID: 2644)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196858361363411
    2. '=' → logprob: -2.8119685649871826
    3. '=[]' → logprob: -14.936968803405762
    4. ' =[' → logprob: -15.061968803405762
    5. '=[' → logprob: -15.436968803405762
    6. 's' → logprob: -16.561967849731445
    7. '=[]
' → logprob: -17.561967849731445
    8. '=zeros' → logprob: -19.061967849731445
    9. ' ' → logprob: -19.186967849731445
    10. ',' → logprob: -19.436967849731445

Token 325: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869871497154236
    2. '=' → logprob: -1.1369872093200684
    3. '=[' → logprob: -9.13698673248291
    4. ' =[' → logprob: -11.88698673248291
    5. '   ' → logprob: -14.13698673248291
    6. '[' → logprob: -14.88698673248291
    7. '=[]' → logprob: -15.01198673248291
    8. ',' → logprob: -16.261987686157227
    9. '=[]
' → logprob: -17.136987686157227
    10. ' [' → logprob: -17.261987686157227

Token 326: ' store' (ID: 4897)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -2.236549335066229e-05
    2. ' [' → logprob: -11.125021934509277
    3. '0' → logprob: -11.875021934509277
    4. '[len' → logprob: -15.625021934509277
    5. '[length' → logprob: -16.250022888183594
    6. '   ' → logprob: -16.625022888183594
    7. '[n' → logprob: -17.250022888183594
    8. 'len' → logprob: -17.250022888183594
    9. ' ' → logprob: -17.875022888183594
    10. '=[' → logprob: -17.875022888183594

Token 327: ' consecutive' (ID: 40840)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002730455482378602
    2. '0' → logprob: -6.127730369567871
    3. 'he' → logprob: -7.752730369567871
    4. ' [' → logprob: -9.877730369567871
    5. 'the' → logprob: -10.002730369567871
    6. ' heights' → logprob: -11.752730369567871
    7. ' the' → logprob: -12.627730369567871
    8. 'height' → logprob: -13.127730369567871
    9. '   ' → logprob: -13.627730369567871
    10. '[len' → logprob: -14.002730369567871

Token 328: ' ' (ID: 220)
  Prédit: ' ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ones' → logprob: -0.452373743057251
    2. 'ones' → logprob: -2.452373743057251
    3. '1' → logprob: -2.577373743057251
    4. ' ' → logprob: -2.577373743057251
    5. 'he' → logprob: -3.327373743057251
    6. ' heights' → logprob: -3.327373743057251
    7. ' counts' → logprob: -4.202373504638672
    8. '[' → logprob: -4.452373504638672
    9. '   ' → logprob: -5.202373504638672
    10. '_' → logprob: -5.327373504638672

Token 329: '1' (ID: 16)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.06911831349134445
    2. '1' → logprob: -2.8191182613372803
    3. 'he' → logprob: -5.569118499755859
    4. '[' → logprob: -5.819118499755859
    5. 'one' → logprob: -8.94411849975586
    6. 'rows' → logprob: -9.56911849975586
    7. 'counts' → logprob: -9.94411849975586
    8. ' ones' → logprob: -10.06911849975586
    9. 'zeros' → logprob: -11.06911849975586
    10. '0' → logprob: -11.31911849975586

Token 330: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004842962371185422
    2. ' s' → logprob: -8.625484466552734
    3. ''s' → logprob: -8.625484466552734
    4. '   ' → logprob: -9.875484466552734
    5. 'he' → logprob: -10.500484466552734
    6. '_counts' → logprob: -10.750484466552734
    7. '_s' → logprob: -11.250484466552734
    8. 'counts' → logprob: -12.125484466552734
    9. ' ' → logprob: -13.000484466552734
    10. '  ' → logprob: -13.875484466552734

Token 331: ' count' (ID: 3605)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3819371461868286
    2. '=' → logprob: -1.7569371461868286
    3. 'he' → logprob: -2.756937026977539
    4. ' in' → logprob: -3.631937026977539
    5. ' heights' → logprob: -4.006937026977539
    6. ' for' → logprob: -4.131937026977539
    7. ' of' → logprob: -4.881937026977539
    8. 's' → logprob: -5.256937026977539
    9. '   ' → logprob: -5.756937026977539
    10. '[' → logprob: -6.006937026977539

Token 332: ' above' (ID: 5151)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2376004159450531
    2. 'he' → logprob: -1.8626004457473755
    3. '   ' → logprob: -3.362600326538086
    4. '=' → logprob: -4.362600326538086
    5. ' heights' → logprob: -4.987600326538086
    6. '_he' → logprob: -7.112600326538086
    7. ' for' → logprob: -7.737600326538086
    8. ' in' → logprob: -8.112600326538086
    9. ' of' → logprob: -8.987600326538086
    10. ' he' → logprob: -9.612600326538086

Token 333: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35020673274993896
    2. ' each' → logprob: -2.2252068519592285
    3. 'he' → logprob: -2.8502068519592285
    4. 'each' → logprob: -3.2252068519592285
    5. '[i' → logprob: -3.7252068519592285
    6. '[row' → logprob: -4.2252068519592285
    7. 'row' → logprob: -4.3502068519592285
    8. ' [' → logprob: -4.7252068519592285
    9. ' row' → logprob: -5.4752068519592285
    10. '=[' → logprob: -5.7252068519592285

Token 334: 'including' (ID: 26167)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.0391318798065186
    2. ' each' → logprob: -1.2891318798065186
    3. '0' → logprob: -1.9141318798065186
    4. 'row' → logprob: -2.7891318798065186
    5. '[' → logprob: -3.1641318798065186
    6. ' row' → logprob: -3.9141318798065186
    7. ')' → logprob: -3.9141318798065186
    8. 'matrix' → logprob: -3.9141318798065186
    9. '[i' → logprob: -4.289132118225098
    10. ' matrix' → logprob: -4.914132118225098

Token 335: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.42182043194770813
    2. ' current' → logprob: -1.1718204021453857
    3. 'the' → logprob: -4.171820640563965
    4. ' the' → logprob: -4.421820640563965
    5. 'this' → logprob: -5.671820640563965
    6. ')' → logprob: -6.296820640563965
    7. ' this' → logprob: -7.296820640563965
    8. 'row' → logprob: -8.171820640563965
    9. 'matrix' → logprob: -8.171820640563965
    10. '   ' → logprob: -8.546820640563965

Token 336: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.20305395126342773
    2. 'row' → logprob: -1.7030539512634277
    3. ')' → logprob: -6.953053951263428
    4. '   ' → logprob: -7.828053951263428
    5. '_row' → logprob: -9.078054428100586
    6. '[row' → logprob: -9.453054428100586
    7. ' for' → logprob: -11.203054428100586
    8. ' )' → logprob: -11.453054428100586
    9. '	row' → logprob: -11.578054428100586
    10. '[i' → logprob: -11.828054428100586

Token 337: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07458510994911194
    2. ')
' → logprob: -3.074585199356079
    3. '   ' → logprob: -3.949585199356079
    4. ' for' → logprob: -5.4495849609375
    5. ',' → logprob: -7.0745849609375
    6. 'for' → logprob: -7.3245849609375
    7. ' )' → logprob: -8.9495849609375
    8. '):
' → logprob: -9.0745849609375
    9. ' in' → logprob: -9.4495849609375
    10. 's' → logprob: -9.6995849609375

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10585719347000122
    2. ' heights' → logprob: -2.7308571338653564
    3. 'he' → logprob: -3.3558571338653564
    4. 'height' → logprob: -8.980856895446777
    5. '    
' → logprob: -9.105856895446777
    6. '_he' → logprob: -9.605856895446777
    7. '    ' → logprob: -9.980856895446777
    8. ' he' → logprob: -11.355856895446777
    9. ' height' → logprob: -11.480856895446777
    10. ' ' → logprob: -11.980856895446777

Token 339: ' heights' (ID: 57359)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.007541195955127478
    2. ' heights' → logprob: -5.007541179656982
    3. '   ' → logprob: -7.132541179656982
    4. 'height' → logprob: -10.75754165649414
    5. ' he' → logprob: -13.38254165649414
    6. ' ' → logprob: -14.13254165649414
    7. 'h' → logprob: -14.25754165649414
    8. 'if' → logprob: -14.25754165649414
    9. '_he' → logprob: -14.88254165649414
    10. ' if' → logprob: -15.13254165649414

Token 340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197217106819153
    2. '=' → logprob: -2.811972141265869
    3. ' =[' → logprob: -13.061972618103027
    4. '   ' → logprob: -13.811972618103027
    5. '=[' → logprob: -14.061972618103027
    6. ' ' → logprob: -15.061972618103027
    7. '[' → logprob: -15.311972618103027
    8. '=[]' → logprob: -16.18697166442871
    9. '  ' → logprob: -17.18697166442871
    10. '[:]' → logprob: -17.68697166442871

Token 341: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06196768581867218
    2. ' [' → logprob: -2.811967611312866
    3. '   ' → logprob: -17.811967849731445
    4. ' ' → logprob: -18.936967849731445
    5. '[len' → logprob: -19.686967849731445
    6. '[m' → logprob: -20.311967849731445
    7. '[n' → logprob: -21.186967849731445
    8. '0' → logprob: -21.186967849731445
    9. ' ' → logprob: -21.436967849731445
    10. '([' → logprob: -21.436967849731445

Token 342: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.375027656555176
    4. '    ' → logprob: -18.000028610229492
    5. '۰' → logprob: -18.875028610229492
    6. '  ' → logprob: -18.937528610229492
    7. '     ' → logprob: -19.375028610229492
    8. '```' → logprob: -19.687528610229492
    9. '000' → logprob: -20.062528610229492
    10. '       ' → logprob: -20.250028610229492

Token 343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03356847167015076
    2. ' for' → logprob: -3.6585683822631836
    3. ']*' → logprob: -5.033568382263184
    4. ' ]' → logprob: -8.033568382263184
    5. ',' → logprob: -8.908568382263184
    6. '    ' → logprob: -9.158568382263184
    7. '   ' → logprob: -9.158568382263184
    8. 'for' → logprob: -10.408568382263184
    9. ' ' → logprob: -11.658568382263184
    10. ')' → logprob: -12.033568382263184

Token 344: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.153329536318779
    2. '*' → logprob: -2.528329610824585
    3. ' for' → logprob: -3.778329610824585
    4. '[' → logprob: -4.278329372406006
    5. '   ' → logprob: -4.403329372406006
    6. '    ' → logprob: -4.653329372406006
    7. ' ' → logprob: -6.278329372406006
    8. ']' → logprob: -7.528329372406006
    9. ',' → logprob: -7.903329372406006
    10. 'for' → logprob: -8.528329849243164

Token 345: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.16031216084957123
    2. 'len' → logprob: -1.9103121757507324
    3. ' len' → logprob: -9.410311698913574
    4. '(len' → logprob: -12.660311698913574
    5. ' ' → logprob: -13.035311698913574
    6. '   ' → logprob: -14.910311698913574
    7. '25' → logprob: -15.035311698913574
    8. '(' → logprob: -17.91031265258789
    9. '	len' → logprob: -17.91031265258789
    10. '[len' → logprob: -18.28531265258789

Token 346: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.004625341854989529
    2. 'len' → logprob: -5.37962532043457
    3. ' len' → logprob: -12.87962532043457
    4. '25' → logprob: -13.25462532043457
    5. ' ' → logprob: -14.75462532043457
    6. '(len' → logprob: -15.00462532043457
    7. '   ' → logprob: -16.50462532043457
    8. '```' → logprob: -18.50462532043457
    9. '(' → logprob: -18.75462532043457
    10. 'length' → logprob: -19.25462532043457

Token 347: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007969405502080917
    2. '    
' → logprob: -5.382969379425049
    3. '   ' → logprob: -6.257969379425049
    4. '<|end|>' → logprob: -7.382969379425049
    5. '  
' → logprob: -8.007969856262207
    6. ' for' → logprob: -8.507969856262207
    7. 'for' → logprob: -9.632969856262207
    8. ' 
' → logprob: -9.882969856262207
    9. '\n' → logprob: -10.007969856262207
    10. '   
' → logprob: -10.132969856262207

Token 348: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8538278341293335
    2. '   ' → logprob: -0.9788278341293335
    3. ' for' → logprob: -2.228827953338623
    4. 'for' → logprob: -2.978827953338623
    5. 'result' → logprob: -3.728827953338623
    6. '    
' → logprob: -4.478827953338623
    7. ' result' → logprob: -6.353827953338623
    8. 'max' → logprob: -6.603827953338623
    9. '  
' → logprob: -8.103827476501465
    10. ' max' → logprob: -8.478827476501465

Token 349: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.00010342398309148848
    2. ' max' → logprob: -9.500102996826172
    3. '   ' → logprob: -10.500102996826172
    4. 'result' → logprob: -14.125102996826172
    5. 'largest' → logprob: -16.125102996826172
    6. 'for' → logprob: -16.375102996826172
    7. '	max' → logprob: -17.875102996826172
    8. 'res' → logprob: -17.875102996826172
    9. 'maximum' → logprob: -18.250102996826172
    10. '
' → logprob: -18.375102996826172

Token 350: '_rectangle' (ID: 166619)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_area' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -12.250004768371582
    3. '_max' → logprob: -16.7500057220459
    4. 'area' → logprob: -16.8750057220459
    5. '_height' → logprob: -17.6250057220459
    6. '_size' → logprob: -17.7500057220459
    7. 'Area' → logprob: -18.0000057220459
    8. ' _' → logprob: -18.5000057220459
    9. '_space' → logprob: -18.8750057220459
    10. '_AREA' → logprob: -19.0000057220459

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6113242506980896
    2. '_area' → logprob: -1.3613243103027344
    3. ' =' → logprob: -1.6113243103027344
    4. 'area' → logprob: -7.236324310302734
    5. '_' → logprob: -7.861324310302734
    6. '   ' → logprob: -9.111324310302734
    7. ' area' → logprob: -9.236324310302734
    8. 'Area' → logprob: -9.611324310302734
    9. ' ' → logprob: -10.486324310302734
    10. '  ' → logprob: -12.361324310302734

Token 352: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002805110299959779
    2. ' ' → logprob: -5.877805233001709
    3. '   ' → logprob: -15.25280475616455
    4. '  ' → logprob: -18.565305709838867
    5. '=' → logprob: -18.627805709838867
    6. '۰' → logprob: -18.752805709838867
    7. ' ' → logprob: -19.315305709838867
    8. '[' → logprob: -19.315305709838867
    9. '00' → logprob: -19.877805709838867
    10. '000' → logprob: -19.940305709838867

Token 353: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.312528610229492
    4. '۰' → logprob: -17.312528610229492
    5. '000' → logprob: -17.562528610229492
    6. '00' → logprob: -18.000028610229492
    7. '=' → logprob: -18.125028610229492
    8. '[' → logprob: -18.125028610229492
    9. 'def' → logprob: -18.250028610229492
    10. '```' → logprob: -18.562528610229492

Token 354: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01331610418856144
    2. '    
' → logprob: -4.8883161544799805
    3. '   ' → logprob: -5.5133161544799805
    4. ' for' → logprob: -7.5133161544799805
    5. '  
' → logprob: -7.6383161544799805
    6. '\n' → logprob: -8.26331615447998
    7. ' 
' → logprob: -9.26331615447998
    8. '   
' → logprob: -9.38831615447998
    9. 'for' → logprob: -9.63831615447998
    10. '	
' → logprob: -9.88831615447998

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19679032266139984
    2. ' for' → logprob: -2.1967902183532715
    3. 'for' → logprob: -2.6967902183532715
    4. '	for' → logprob: -10.44679069519043
    5. '
' → logprob: -11.07179069519043
    6. '    
' → logprob: -11.44679069519043
    7. ' ' → logprob: -15.32179069519043
    8. ' 
' → logprob: -15.82179069519043
    9. '    ' → logprob: -16.19679069519043
    10. '       ' → logprob: -16.19679069519043

Token 356: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.702754474943504e-05
    2. ' for' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.37503719329834
    4. '
' → logprob: -19.250036239624023
    5. ' ' → logprob: -19.750036239624023
    6. '	for' → logprob: -20.500036239624023
    7. '```' → logprob: -22.250036239624023
    8. '  ' → logprob: -22.500036239624023
    9. '    
' → logprob: -22.750036239624023
    10. '5' → logprob: -22.750036239624023

Token 357: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.3132792115211487
    2. 'row' → logprob: -1.313279151916504
    3. 'i' → logprob: -11.313279151916504
    4. ' i' → logprob: -12.563279151916504
    5. '   ' → logprob: -14.063279151916504
    6. '	row' → logprob: -14.313279151916504
    7. ' ' → logprob: -15.813279151916504
    8. 'r' → logprob: -15.938279151916504
    9. '0' → logprob: -16.68828010559082
    10. '  ' → logprob: -18.31328010559082

Token 358: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00220818561501801
    2. 'in' → logprob: -6.127208232879639
    3. '   ' → logprob: -11.25220775604248
    4. ' ' → logprob: -11.87720775604248
    5. '    ' → logprob: -14.25220775604248
    6. '  ' → logprob: -14.25220775604248
    7. ',' → logprob: -14.25220775604248
    8. ' i' → logprob: -15.00220775604248
    9. '	in' → logprob: -15.50220775604248
    10. '_in' → logprob: -15.75220775604248

Token 359: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.014175384305417538
    2. ' matrix' → logprob: -4.2641754150390625
    3. 'range' → logprob: -11.514175415039062
    4. ' range' → logprob: -13.514175415039062
    5. '	matrix' → logprob: -14.889175415039062
    6. '(matrix' → logprob: -16.264175415039062
    7. '   ' → logprob: -17.389175415039062
    8. ' ' → logprob: -18.014175415039062
    9. '.matrix' → logprob: -18.264175415039062
    10. 'Matrix' → logprob: -18.639175415039062

Token 360: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016289368271827698
    2. ':
' → logprob: -4.141289234161377
    3. '   ' → logprob: -9.141289710998535
    4. '       ' → logprob: -9.891289710998535
    5. ' :' → logprob: -10.516289710998535
    6. '):' → logprob: -10.641289710998535
    7. '):
' → logprob: -10.891289710998535
    8. '=' → logprob: -11.266289710998535
    9. ' :
' → logprob: -12.641289710998535
    10. ',' → logprob: -12.891289710998535

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6413392424583435
    2. ' 
' → logprob: -1.7663393020629883
    3. '   ' → logprob: -2.0163393020629883
    4. '
' → logprob: -2.6413393020629883
    5. '    
' → logprob: -3.1413393020629883
    6. '        
' → logprob: -4.141339302062988
    7. ' ' → logprob: -4.766339302062988
    8. '  
' → logprob: -4.891339302062988
    9. '     
' → logprob: -5.016339302062988
    10. '    ' → logprob: -5.141339302062988

Token 362: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030994482338428497
    2. 'for' → logprob: -3.530994415283203
    3. '   ' → logprob: -6.905994415283203
    4. '       ' → logprob: -8.780994415283203
    5. '    ' → logprob: -9.905994415283203
    6. '	for' → logprob: -11.030994415283203
    7. ' ' → logprob: -11.405994415283203
    8. '    
' → logprob: -12.530994415283203
    9. '
' → logprob: -12.905994415283203
    10. '  ' → logprob: -13.655994415283203

Token 363: ' Update' (ID: 9152)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014174911193549633
    2. ' for' → logprob: -4.264174938201904
    3. '   ' → logprob: -12.014174461364746
    4. '       ' → logprob: -12.264174461364746
    5. ' ' → logprob: -15.514174461364746
    6. '	for' → logprob: -15.514174461364746
    7. '    ' → logprob: -17.139175415039062
    8. '  ' → logprob: -17.139175415039062
    9. '
' → logprob: -17.264175415039062
    10. '           ' → logprob: -17.889175415039062

Token 364: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.499266654253006
    2. 'for' → logprob: -1.3742666244506836
    3. 'he' → logprob: -2.3742666244506836
    4. ' heights' → logprob: -3.4992666244506836
    5. ' i' → logprob: -4.874266624450684
    6. 'i' → logprob: -5.249266624450684
    7. '[i' → logprob: -6.249266624450684
    8. '[' → logprob: -7.249266624450684
    9. '   ' → logprob: -7.374266624450684
    10. 'height' → logprob: -8.499266624450684

Token 365: ' heights' (ID: 57359)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0007249409682117403
    2. '[' → logprob: -8.000724792480469
    3. ' heights' → logprob: -8.500724792480469
    4. '[i' → logprob: -9.125724792480469
    5. 'for' → logprob: -9.625724792480469
    6. 'height' → logprob: -12.500724792480469
    7. ' for' → logprob: -13.000724792480469
    8. '[
' → logprob: -13.375724792480469
    9. '   ' → logprob: -13.500724792480469
    10. 'i' → logprob: -14.375724792480469

Token 366: ' histogram' (ID: 81482)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01297785621136427
    2. 'for' → logprob: -4.6379780769348145
    3. '       ' → logprob: -6.1379780769348145
    4. '[' → logprob: -7.1379780769348145
    5. '   ' → logprob: -8.762977600097656
    6. '[i' → logprob: -10.887977600097656
    7. '	for' → logprob: -10.887977600097656
    8. '        
' → logprob: -11.262977600097656
    9. ':' → logprob: -11.512977600097656
    10. '           ' → logprob: -11.762977600097656

Token 367: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3205112814903259
    2. '       ' → logprob: -1.3205113410949707
    3. 'for' → logprob: -4.945511341094971
    4. '[' → logprob: -9.695510864257812
    5. '   ' → logprob: -11.195510864257812
    6. '	for' → logprob: -12.070510864257812
    7. '        
' → logprob: -12.195510864257812
    8. ' with' → logprob: -12.320510864257812
    9. ' in' → logprob: -12.695510864257812
    10. ' ' → logprob: -13.195510864257812

Token 368: ' this' (ID: 495)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.0852290391921997
    2. 'row' → logprob: -1.7102290391921997
    3. ' each' → logprob: -2.08522891998291
    4. ' col' → logprob: -2.33522891998291
    5. 'each' → logprob: -2.46022891998291
    6. ' row' → logprob: -2.58522891998291
    7. 'i' → logprob: -3.33522891998291
    8. ' i' → logprob: -3.96022891998291
    9. 'range' → logprob: -4.08522891998291
    10. 'column' → logprob: -4.71022891998291

Token 369: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.6347517967224121
    2. 'row' → logprob: -0.7597517967224121
    3. ' i' → logprob: -7.134751796722412
    4. 'i' → logprob: -7.884751796722412
    5. ' ' → logprob: -7.884751796722412
    6. '   ' → logprob: -8.63475227355957
    7. 'column' → logprob: -8.75975227355957
    8. 'r' → logprob: -9.88475227355957
    9. 'col' → logprob: -10.13475227355957
    10. '  ' → logprob: -10.38475227355957

Token 370: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05721135437488556
    2. ' for' → logprob: -2.932211399078369
    3. 'for' → logprob: -6.557211399078369
    4. '        
' → logprob: -7.307211399078369
    5. '
' → logprob: -9.307210922241211
    6. '   ' → logprob: -9.932210922241211
    7. '[' → logprob: -10.432210922241211
    8. ' ' → logprob: -10.932210922241211
    9. ',' → logprob: -11.932210922241211
    10. ':' → logprob: -12.057210922241211

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049141138792037964
    2. ' for' → logprob: -3.0491411685943604
    3. 'for' → logprob: -7.924140930175781
    4. '        
' → logprob: -9.174140930175781
    5. '   ' → logprob: -10.174140930175781
    6. ' ' → logprob: -10.799140930175781
    7. '
' → logprob: -11.674140930175781
    8. '      ' → logprob: -12.299140930175781
    9. '[' → logprob: -12.549140930175781
    10. '	for' → logprob: -13.424140930175781

Token 372: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1603463888168335
    2. 'for' (adapté à ' for') → logprob: -1.9103463888168335
    3. '       ' → logprob: -9.660346031188965
    4. '   ' → logprob: -10.285346031188965
    5. ' heights' → logprob: -11.535346031188965
    6. '
' → logprob: -12.410346031188965
    7. '[' → logprob: -12.785346031188965
    8. ' ' → logprob: -13.035346031188965
    9. '	for' → logprob: -13.035346031188965
    10. '        
' → logprob: -13.785346031188965

Token 373: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1003013476729393
    2. ' i' → logprob: -2.3503012657165527
    3. 'col' → logprob: -10.350301742553711
    4. 'j' → logprob: -10.350301742553711
    5. 'idx' → logprob: -11.225301742553711
    6. ' col' → logprob: -11.475301742553711
    7. ' j' → logprob: -12.725301742553711
    8. 'index' → logprob: -13.100301742553711
    9. ' idx' → logprob: -13.350301742553711
    10. ' index' → logprob: -15.975301742553711

Token 374: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006512271240353584
    2. 'in' → logprob: -5.13151216506958
    3. ' ' → logprob: -7.63151216506958
    4. ',' → logprob: -9.381512641906738
    5. ' ,' → logprob: -11.881512641906738
    6. '  ' → logprob: -12.756512641906738
    7. '	in' → logprob: -13.506512641906738
    8. '0' → logprob: -14.381512641906738
    9. '   ' → logprob: -14.506512641906738
    10. '    ' → logprob: -14.756512641906738

Token 375: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868717551231384
    2. ' range' → logprob: -1.1368718147277832
    3. '(range' → logprob: -15.511871337890625
    4. '5' → logprob: -15.886871337890625
    5. '   ' → logprob: -16.011871337890625
    6. ' ' → logprob: -16.011871337890625
    7. '0' → logprob: -16.136871337890625
    8. '	range' → logprob: -17.011871337890625
    9. '  ' → logprob: -18.011871337890625
    10. ' xrange' → logprob: -19.011871337890625

Token 376: '(' (ID: 7)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.12350514531135559
    2. '(' → logprob: -2.248505115509033
    3. ' ' → logprob: -5.248505115509033
    4. '(len' → logprob: -5.373505115509033
    5. 'len' → logprob: -7.873505115509033
    6. ' len' → logprob: -8.248505592346191
    7. '   ' → logprob: -9.373505592346191
    8. ' (' → logprob: -12.998505592346191
    9. '    ' → logprob: -13.748505592346191
    10. '  ' → logprob: -13.873505592346191

Token 377: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00022272850037552416
    2. ' ' → logprob: -8.625223159790039
    3. 'len' → logprob: -10.125223159790039
    4. ' len' → logprob: -13.000223159790039
    5. '   ' → logprob: -14.000223159790039
    6. '  ' → logprob: -17.50022315979004
    7. ')' → logprob: -17.50022315979004
    8. '(len' → logprob: -18.00022315979004
    9. '    ' → logprob: -18.62522315979004
    10. ' five' → logprob: -18.62522315979004

Token 378: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07005258649587631
    2. '):' → logprob: -2.6950526237487793
    3. ':' → logprob: -10.070052146911621
    4. '       ' → logprob: -10.445052146911621
    5. '):
' → logprob: -11.195052146911621
    6. ' ):
' → logprob: -11.195052146911621
    7. ')' → logprob: -12.195052146911621
    8. ':
' → logprob: -12.320052146911621
    9. '   ' → logprob: -12.445052146911621
    10. '):

' → logprob: -13.320052146911621

Token 379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004556983185466379
    2. ' if' → logprob: -8.625455856323242
    3. '            
' → logprob: -9.000455856323242
    4. ' ' → logprob: -10.000455856323242
    5. ' 
' → logprob: -10.875455856323242
    6. '            ' → logprob: -10.875455856323242
    7. '<|end|>' → logprob: -10.875455856323242
    8. '               ' → logprob: -11.500455856323242
    9. '          ' → logprob: -11.625455856323242
    10. '       ' → logprob: -12.125455856323242

Token 380: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5643723607063293
    2. 'he' → logprob: -1.6893723011016846
    3. 'if' (adapté à ' if') → logprob: -1.9393723011016846
    4. ' heights' → logprob: -2.3143723011016846
    5. '           ' → logprob: -5.689372539520264
    6. ' he' → logprob: -8.564372062683105
    7. '       ' → logprob: -9.189372062683105
    8. '               ' → logprob: -9.189372062683105
    9. '   ' → logprob: -9.439372062683105
    10. '            ' → logprob: -9.564372062683105

Token 381: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.0040785204619169235
    2. 'row' → logprob: -5.504078388214111
    3. '	row' → logprob: -16.504077911376953
    4. '(row' → logprob: -18.254077911376953
    5. ' ' → logprob: -18.754077911376953
    6. '[row' → logprob: -19.254077911376953
    7. '$row' → logprob: -19.879077911376953
    8. '=row' → logprob: -20.379077911376953
    9. '   ' → logprob: -20.629077911376953
    10. '_row' → logprob: -21.379077911376953

Token 382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -18.625
    3. 'i' → logprob: -18.75
    4. ' [' → logprob: -19.0
    5. '   ' → logprob: -20.25
    6. '           ' → logprob: -20.25
    7. '[I' → logprob: -20.25
    8. '       ' → logprob: -21.375
    9. '\[' → logprob: -21.875
    10. '(i' → logprob: -22.0

Token 383: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07290321588516235
    2. ' ==' → logprob: -2.6979031562805176
    3. ']==' → logprob: -5.947903156280518
    4. ':' → logprob: -8.822903633117676
    5. ']' → logprob: -8.822903633117676
    6. ')==' → logprob: -10.697903633117676
    7. ':
' → logprob: -11.072903633117676
    8. '=' → logprob: -11.947903633117676
    9. '==
' → logprob: -12.822903633117676
    10. '']==' → logprob: -13.572903633117676

Token 384: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.112983837723732
    2. ' ==' → logprob: -2.2379839420318604
    3. ':' → logprob: -8.987983703613281
    4. '1' → logprob: -11.737983703613281
    5. ':
' → logprob: -11.862983703613281
    6. ']==' → logprob: -11.987983703613281
    7. ')==' → logprob: -11.987983703613281
    8. '=' → logprob: -12.987983703613281
    9. '==
' → logprob: -13.112983703613281
    10. '===' → logprob: -13.237983703613281

Token 385: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05489887297153473
    2. ' ' → logprob: -2.929898977279663
    3. '0' → logprob: -11.054899215698242
    4. '   ' → logprob: -14.179899215698242
    5. '  ' → logprob: -16.804899215698242
    6. '```' → logprob: -17.929899215698242
    7. '=' → logprob: -18.054899215698242
    8. '     ' → logprob: -18.429899215698242
    9. ' ' → logprob: -18.554899215698242
    10. '       ' → logprob: -18.804899215698242

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023250321100931615
    2. ' ' → logprob: -9.000232696533203
    3. '0' → logprob: -9.125232696533203
    4. '   ' → logprob: -16.250232696533203
    5. '```' → logprob: -18.000232696533203
    6. '=' → logprob: -18.812732696533203
    7. '  ' → logprob: -19.187732696533203
    8. '`' → logprob: -19.625232696533203
    9. '' → logprob: -20.000232696533203
    10. '	' → logprob: -20.125232696533203

Token 387: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5768352150917053
    2. ':' → logprob: -0.8268352150917053
    3. '               ' → logprob: -7.4518351554870605
    4. '           ' → logprob: -8.701835632324219
    5. '):
' → logprob: -8.951835632324219
    6. '       ' → logprob: -12.576835632324219
    7. ')' → logprob: -12.826835632324219
    8. '):' → logprob: -13.076835632324219
    9. ':
' → logprob: -13.201835632324219
    10. '=' → logprob: -13.576835632324219

Token 388: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04967089369893074
    2. ' heights' → logprob: -3.049670934677124
    3. '           ' → logprob: -7.049670696258545
    4. '                
' → logprob: -10.049671173095703
    5. '                ' → logprob: -10.424671173095703
    6. '              ' → logprob: -10.424671173095703
    7. '            ' → logprob: -10.674671173095703
    8. '   ' → logprob: -10.799671173095703
    9. 'he' → logprob: -11.174671173095703
    10. ':
' → logprob: -11.549671173095703

Token 389: ' heights' (ID: 57359)
  Prédit: ' heights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.10028808563947678
    2. 'he' → logprob: -2.350288152694702
    3. '               ' → logprob: -10.350288391113281
    4. 'height' → logprob: -10.850288391113281
    5. '   ' → logprob: -11.350288391113281
    6. '           ' → logprob: -11.475288391113281
    7. '                   ' → logprob: -12.850288391113281
    8. ' he' → logprob: -13.100288391113281
    9. '_he' → logprob: -13.475288391113281
    10. '       ' → logprob: -14.850288391113281

Token 390: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -15.5
    3. '[' → logprob: -17.0
    4. '[
' → logprob: -18.75
    5. 'i' → logprob: -18.875
    6. '```' → logprob: -19.375
    7. '
' → logprob: -20.625
    8. '[index' → logprob: -20.75
    9. '[I' → logprob: -20.75
    10. '\[' → logprob: -21.25

Token 391: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31353574991226196
    2. '+=' → logprob: -1.3135356903076172
    3. ']+=' → logprob: -8.438535690307617
    4. '=' → logprob: -9.813535690307617
    5. ']' → logprob: -13.563535690307617
    6. ' =' → logprob: -14.563535690307617
    7. '+' → logprob: -14.688535690307617
    8. '   ' → logprob: -14.813535690307617
    9. '    ' → logprob: -15.813535690307617
    10. ')' → logprob: -16.313535690307617

Token 392: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008628051728010178
    2. ' +=' → logprob: -4.758627891540527
    3. '=' → logprob: -11.258627891540527
    4. ']+=' → logprob: -14.258627891540527
    5. '+' → logprob: -18.383628845214844
    6. '+="' → logprob: -20.383628845214844
    7. '+='' → logprob: -20.508628845214844
    8. '   ' → logprob: -20.633628845214844
    9. ' =' → logprob: -21.008628845214844
    10. '+=(' → logprob: -21.133628845214844

Token 393: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.503177642822266
    4. '  ' → logprob: -20.753177642822266
    5. ' ' → logprob: -21.253177642822266
    6. '```' → logprob: -21.753177642822266
    7. '۱' → logprob: -23.128177642822266
    8. '0' → logprob: -23.378177642822266
    9. '１' → logprob: -23.378177642822266
    10. '    ' → logprob: -24.065677642822266

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.250003814697266
    4. '```' → logprob: -18.875003814697266
    5. '۱' → logprob: -21.375003814697266
    6. '  ' → logprob: -21.562503814697266
    7. 'def' → logprob: -21.875003814697266
    8. '`' → logprob: -22.250003814697266
    9. '１' → logprob: -22.625003814697266
    10. '<|end|>' → logprob: -22.750003814697266

Token 395: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038127838633954525
    2. 'else' → logprob: -5.753812789916992
    3. ' else' → logprob: -7.378812789916992
    4. '               ' → logprob: -12.503812789916992
    5. '	       ' → logprob: -13.003812789916992
    6. '		' → logprob: -13.503812789916992
    7. '       ' → logprob: -13.753812789916992
    8. '```' → logprob: -14.378812789916992
    9. '<|end|>' → logprob: -15.253812789916992
    10. '   ' → logprob: -15.503812789916992

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008046391420066357
    2. ' else' → logprob: -5.258046627044678
    3. 'else' → logprob: -5.883046627044678
    4. '       ' → logprob: -11.00804615020752
    5. '```' → logprob: -13.13304615020752
    6. '               ' → logprob: -13.88304615020752
    7. '	       ' → logprob: -13.88304615020752
    8. '		' → logprob: -14.63304615020752
    9. '          ' → logprob: -15.00804615020752
    10. '   ' → logprob: -15.38304615020752

Token 397: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0791107565164566
    2. ' else' → logprob: -2.829110860824585
    3. '       ' → logprob: -4.079110622406006
    4. '           ' → logprob: -9.579111099243164
    5. '```' → logprob: -12.829111099243164
    6. '	else' → logprob: -13.329111099243164
    7. '   ' → logprob: -14.204111099243164
    8. 'elif' → logprob: -16.579111099243164
    9. 'Else' → logprob: -16.829111099243164
    10. '	' → logprob: -17.079111099243164

Token 398: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06640974432229996
    2. ':
' → logprob: -3.4414098262786865
    3. ' heights' → logprob: -3.9414098262786865
    4. '           ' → logprob: -4.941409587860107
    5. ':' → logprob: -5.316409587860107
    6. '              ' → logprob: -8.816410064697266
    7. '   ' → logprob: -8.816410064697266
    8. '                   ' → logprob: -8.941410064697266
    9. '                ' → logprob: -9.941410064697266
    10. '            ' → logprob: -10.191410064697266

Token 399: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4774605929851532
    2. ' heights' → logprob: -0.9774606227874756
    3. 'he' → logprob: -5.9774603843688965
    4. '           ' → logprob: -7.7274603843688965
    5. ' he' → logprob: -8.602460861206055
    6. '   ' → logprob: -8.977460861206055
    7. '                   ' → logprob: -10.852460861206055
    8. '_he' → logprob: -11.102460861206055
    9. 'height' → logprob: -11.352460861206055
    10. '              ' → logprob: -11.477460861206055

Token 400: ' heights' (ID: 57359)
  Prédit: ' heights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.023328283801674843
    2. 'he' → logprob: -3.7733283042907715
    3. ' he' → logprob: -10.148327827453613
    4. '               ' → logprob: -10.523327827453613
    5. 'height' → logprob: -12.148327827453613
    6. ' height' → logprob: -12.773327827453613
    7. '_he' → logprob: -13.148327827453613
    8. '           ' → logprob: -13.398327827453613
    9. '                ' → logprob: -13.898327827453613
    10. '   ' → logprob: -13.898327827453613

Token 401: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.253090865968261e-06
    2. '[' → logprob: -12.250009536743164
    3. '=' → logprob: -12.625009536743164
    4. 'i' → logprob: -14.000009536743164
    5. '[
' → logprob: -15.625009536743164
    6. ' [' → logprob: -16.125009536743164
    7. '   ' → logprob: -18.500009536743164
    8. ' =' → logprob: -18.500009536743164
    9. '\[' → logprob: -18.500009536743164
    10. '
' → logprob: -18.750009536743164

Token 402: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011060323566198349
    2. ' =' → logprob: -4.5110602378845215
    3. ']' → logprob: -12.26106071472168
    4. '[i' → logprob: -12.51106071472168
    5. ']=' → logprob: -12.88606071472168
    6. '[' → logprob: -13.63606071472168
    7. ')' → logprob: -16.51106071472168
    8. '               ' → logprob: -16.51106071472168
    9. '                   ' → logprob: -17.26106071472168
    10. '           ' → logprob: -17.76106071472168

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '0' → logprob: -18.626928329467773
    4. '=
' → logprob: -19.626928329467773
    5. '.=' → logprob: -21.126928329467773
    6. ' ' → logprob: -21.626928329467773
    7. '=

' → logprob: -21.751928329467773
    8. '＝' → logprob: -21.876928329467773
    9. '[' → logprob: -22.501928329467773
    10. ']=' → logprob: -23.126928329467773

Token 404: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '   ' → logprob: -18.383615493774414
    4. ' ' → logprob: -19.633615493774414
    5. '۰' → logprob: -20.258615493774414
    6. '  ' → logprob: -20.758615493774414
    7. '000' → logprob: -21.008615493774414
    8. '	' → logprob: -21.508615493774414
    9. '```' → logprob: -21.821115493774414
    10. '00' → logprob: -21.883615493774414

Token 405: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -21.375
    4. '   ' → logprob: -21.875
    5. '000' → logprob: -22.625
    6. '```' → logprob: -23.25
    7. 'zero' → logprob: -23.25
    8. '０' → logprob: -23.5
    9. '00' → logprob: -23.5
    10. '٠' → logprob: -23.875

Token 406: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5740537643432617
    2. '       ' → logprob: -1.0740537643432617
    3. '        
' → logprob: -3.0740537643432617
    4. '    
' → logprob: -3.9490537643432617
    5. '  
' → logprob: -4.574053764343262
    6. ' 
' → logprob: -4.699053764343262
    7. '<|end|>' → logprob: -5.074053764343262
    8. '            
' → logprob: -6.574053764343262
    9. '   ' → logprob: -6.574053764343262
    10. '   
' → logprob: -8.074053764343262

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18559370934963226
    2. '
' → logprob: -2.060593605041504
    3. '        
' → logprob: -3.310593605041504
    4. '    
' → logprob: -6.185593605041504
    5. '<|end|>' → logprob: -6.310593605041504
    6. '            
' → logprob: -7.560593605041504
    7. '  
' → logprob: -7.810593605041504
    8. ' 
' → logprob: -9.060593605041504
    9. '   ' → logprob: -9.060593605041504
    10. '       
' → logprob: -9.185593605041504

Token 408: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6718167066574097
    2. ' area' → logprob: -1.1718167066574097
    3. ' max' → logprob: -2.171816825866699
    4. 'area' → logprob: -3.296816825866699
    5. 'max' → logprob: -4.546816825866699
    6. ' current' → logprob: -4.671816825866699
    7. '
' → logprob: -5.546816825866699
    8. '        
' → logprob: -6.171816825866699
    9. '   ' → logprob: -6.671816825866699
    10. 'current' → logprob: -7.546816825866699

Token 409: ' Calculate' (ID: 38942)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.4659578502178192
    2. ' area' → logprob: -1.5909578800201416
    3. '       ' → logprob: -2.7159578800201416
    4. 'max' → logprob: -3.0909578800201416
    5. ' max' → logprob: -3.2159578800201416
    6. ' current' → logprob: -4.8409576416015625
    7. 'current' → logprob: -4.8409576416015625
    8. '   ' → logprob: -7.3409576416015625
    9. ' curr' → logprob: -9.215957641601562
    10. 'curr' → logprob: -9.215957641601562

Token 410: ' largest' (ID: 10574)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.0244817733764648
    2. ' area' → logprob: -1.1494817733764648
    3. 'area' → logprob: -2.149481773376465
    4. 'max' → logprob: -2.149481773376465
    5. '       ' → logprob: -3.149481773376465
    6. ' current' → logprob: -3.274481773376465
    7. 'current' → logprob: -5.649481773376465
    8. 'largest' → logprob: -6.274481773376465
    9. ' largest' → logprob: -6.524481773376465
    10. ' rectangle' → logprob: -6.774481773376465

Token 411: ' rectangle' (ID: 45808)
  Prédit: '_rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -1.747814349073451e-05
    2. 'rectangle' → logprob: -11.500017166137695
    3. '_' → logprob: -12.750017166137695
    4. ' rectangle' → logprob: -13.000017166137695
    5. '_area' → logprob: -14.000017166137695
    6. ' _' → logprob: -14.125017166137695
    7. 'Rectangle' → logprob: -15.125017166137695
    8. '_triangle' → logprob: -15.875017166137695
    9. '_rect' → logprob: -16.875017166137695
    10. ' ' → logprob: -17.250017166137695

Token 412: ' in' (ID: 306)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.8118603825569153
    2. 'area' → logprob: -1.3118603229522705
    3. ' area' → logprob: -1.6868603229522705
    4. '_in' → logprob: -2.6868603229522705
    5. ' =' → logprob: -4.68686056137085
    6. ' in' → logprob: -5.18686056137085
    7. '       ' → logprob: -5.18686056137085
    8. 'in' → logprob: -5.31186056137085
    9. 'max' → logprob: -5.56186056137085
    10. '   ' → logprob: -6.43686056137085

Token 413: ' this' (ID: 495)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.8840681910514832
    2. '_hist' → logprob: -1.259068250656128
    3. ' heights' → logprob: -1.759068250656128
    4. 'hist' → logprob: -2.259068250656128
    5. '_he' → logprob: -4.259068012237549
    6. ' histogram' → logprob: -5.259068012237549
    7. 'largest' → logprob: -5.259068012237549
    8. ' hist' → logprob: -6.884068012237549
    9. ' largest' → logprob: -7.759068012237549
    10. ' the' → logprob: -9.134068489074707

Token 414: ' histogram' (ID: 81482)
  Prédit: '_hist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hist' → logprob: -0.41776177287101746
    2. ' histogram' → logprob: -1.5427618026733398
    3. ' heights' → logprob: -3.04276180267334
    4. 'hist' → logprob: -3.41776180267334
    5. 'he' → logprob: -3.66776180267334
    6. '_he' → logprob: -4.04276180267334
    7. ' _' → logprob: -6.54276180267334
    8. '   ' → logprob: -7.16776180267334
    9. '_' → logprob: -7.41776180267334
    10. ' hist' → logprob: -7.66776180267334

Token 415: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4913502335548401
    2. ' =' → logprob: -1.8663501739501953
    3. 'max' → logprob: -2.1163501739501953
    4. '=' → logprob: -2.8663501739501953
    5. ' max' → logprob: -3.3663501739501953
    6. '=max' → logprob: -4.741350173950195
    7. '(max' → logprob: -4.991350173950195
    8. ',' → logprob: -5.366350173950195
    9. '_max' → logprob: -8.366350173950195
    10. '   ' → logprob: -8.741350173950195

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3429410755634308
    2. ' max' → logprob: -1.5929410457611084
    3. 'max' → logprob: -2.9679410457611084
    4. ' area' → logprob: -3.4679410457611084
    5. 'area' → logprob: -5.5929412841796875
    6. '   ' → logprob: -8.342941284179688
    7. '
' → logprob: -8.842941284179688
    8. ' current' → logprob: -9.717941284179688
    9. '        
' → logprob: -9.967941284179688
    10. ' result' → logprob: -10.342941284179688

Token 417: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.4147702753543854
    2. ' max' → logprob: -1.289770245552063
    3. 'area' (adapté à ' area') → logprob: -3.6647703647613525
    4. '       ' → logprob: -3.9147703647613525
    5. 'max' → logprob: -4.664770126342773
    6. ' current' → logprob: -4.789770126342773
    7. 'current' → logprob: -7.789770126342773
    8. ' temp' → logprob: -8.789770126342773
    9. '   ' → logprob: -9.039770126342773
    10. ' result' → logprob: -9.664770126342773

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409215569496155
    2. ' =' → logprob: -0.9740921258926392
    3. ' +=' → logprob: -11.349092483520508
    4. '+=' → logprob: -13.599092483520508
    5. '_' → logprob: -13.724092483520508
    6. '_=' → logprob: -14.974092483520508
    7. ')' → logprob: -15.599092483520508
    8. '   ' → logprob: -15.974092483520508
    9. '.=' → logprob: -16.474092483520508
    10. ' ' → logprob: -16.849092483520508

Token 419: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.2519291639328003
    2. ' largest' → logprob: -1.5019291639328003
    3. 'Largest' → logprob: -16.126928329467773
    4. 'large' → logprob: -18.626928329467773
    5. '   ' → logprob: -18.751928329467773
    6. 'larg' → logprob: -19.251928329467773
    7. 'l' → logprob: -19.751928329467773
    8. '-largest' → logprob: -19.876928329467773
    9. ' ' → logprob: -20.376928329467773
    10. ' ' → logprob: -20.501928329467773

Token 420: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.125001907348633
    3. '_rect' → logprob: -16.375001907348633
    4. 'rectangle' → logprob: -17.500001907348633
    5. '_area' → logprob: -18.125001907348633
    6. '_triangle' → logprob: -18.125001907348633
    7. ' _' → logprob: -18.625001907348633
    8. 'Rectangle' → logprob: -19.000001907348633
    9. '_polygon' → logprob: -19.250001907348633
    10. '\' → logprob: -19.250001907348633

Token 421: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -3.7146746763028204e-05
    2. '_' → logprob: -10.62503719329834
    3. 'in' → logprob: -11.75003719329834
    4. '_area' → logprob: -13.00003719329834
    5. '_of' → logprob: -13.75003719329834
    6. '(' → logprob: -14.62503719329834
    7. ')' → logprob: -15.37503719329834
    8. '_for' → logprob: -15.50003719329834
    9. 'In' → logprob: -16.125036239624023
    10. 's' → logprob: -16.250036239624023

Token 422: '_hist' (ID: 70597)
  Prédit: '_hist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hist' → logprob: -2.868328920158092e-05
    2. 'hist' → logprob: -10.625028610229492
    3. '_he' → logprob: -13.000028610229492
    4. '_' → logprob: -13.500028610229492
    5. '(hist' → logprob: -15.125028610229492
    6. ' histogram' → logprob: -16.125028610229492
    7. 's' → logprob: -16.875028610229492
    8. 'he' → logprob: -17.250028610229492
    9. 'Histogram' → logprob: -17.250028610229492
    10. '```' → logprob: -17.500028610229492

Token 423: 'ogram' (ID: 21598)
  Prédit: 'ogram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogram' → logprob: -4.5491004129871726e-05
    2. 'og' → logprob: -11.625045776367188
    3. 'rogram' → logprob: -11.625045776367188
    4. 'gram' → logprob: -11.750045776367188
    5. '[' → logprob: -12.625045776367188
    6. 'm' → logprob: -12.750045776367188
    7. '   ' → logprob: -13.000045776367188
    8. 't' → logprob: -13.250045776367188
    9. 'um' → logprob: -13.375045776367188
    10. 'o' → logprob: -13.875045776367188

Token 424: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.292907877039397e-06
    2. ' (' → logprob: -12.75000286102295
    3. '(height' → logprob: -16.000003814697266
    4. 'he' → logprob: -16.750003814697266
    5. '(heap' → logprob: -17.250003814697266
    6. '(hist' → logprob: -17.500003814697266
    7. '_he' → logprob: -17.625003814697266
    8. '((' → logprob: -17.875003814697266
    9. '(
' → logprob: -18.250003814697266
    10. '```' → logprob: -18.375003814697266

Token 425: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -9.639096970204264e-05
    2. ' heights' → logprob: -9.250096321105957
    3. 'height' → logprob: -16.500097274780273
    4. '(' → logprob: -16.875097274780273
    5. '   ' → logprob: -17.625097274780273
    6. 'hei' → logprob: -18.750097274780273
    7. '_he' → logprob: -18.750097274780273
    8. ')' → logprob: -19.000097274780273
    9. 'He' → logprob: -19.125097274780273
    10. ' he' → logprob: -20.000097274780273

Token 426: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -5.9153885558771435e-06
    2. 'igts' → logprob: -13.125005722045898
    3. 'ig' → logprob: -13.750005722045898
    4. 'ight' → logprob: -14.125005722045898
    5. 'IGHTS' → logprob: -14.375005722045898
    6. 'its' → logprob: -14.750005722045898
    7. 'igh' → logprob: -14.875005722045898
    8. '[' → logprob: -15.500005722045898
    9. 'ght' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.3750057220459

Token 427: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0040830280631780624
    2. ')
' → logprob: -5.504083156585693
    3. '   ' → logprob: -13.004082679748535
    4. ')
' → logprob: -13.879082679748535
    5. '       ' → logprob: -14.129082679748535
    6. ' )' → logprob: -14.754082679748535
    7. '))' → logprob: -16.37908363342285
    8. '(' → logprob: -17.00408363342285
    9. ')`' → logprob: -17.25408363342285
    10. ')

' → logprob: -17.62908363342285

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05750008299946785
    2. '
' → logprob: -2.932500123977661
    3. ' if' → logprob: -6.682499885559082
    4. 'if' → logprob: -7.182499885559082
    5. '
' → logprob: -8.557499885559082
    6. '        
' → logprob: -8.807499885559082
    7. '   ' → logprob: -8.807499885559082
    8. '<|end|>' → logprob: -10.557499885559082
    9. ' 
' → logprob: -10.682499885559082
    10. '    
' → logprob: -11.182499885559082

Token 429: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6807892918586731
    2. ' if' → logprob: -1.1807892322540283
    3. 'if' (adapté à ' if') → logprob: -1.6807892322540283
    4. '
' → logprob: -7.805789470672607
    5. '   ' → logprob: -9.30578899383545
    6. 'max' → logprob: -11.55578899383545
    7. '	if' → logprob: -12.43078899383545
    8. '        
' → logprob: -13.05578899383545
    9. '
' → logprob: -13.55578899383545
    10. ' max' → logprob: -13.68078899383545

Token 430: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.47407710552215576
    2. ' area' → logprob: -0.9740771055221558
    3. '(area' → logprob: -16.724077224731445
    4. '   ' → logprob: -17.349077224731445
    5. 'Area' → logprob: -19.099077224731445
    6. '_area' → logprob: -20.099077224731445
    7. ' área' → logprob: -21.099077224731445
    8. ' ' → logprob: -21.099077224731445
    9. '.area' → logprob: -21.599077224731445
    10. '       ' → logprob: -22.224077224731445

Token 431: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02975395694375038
    2. '>' → logprob: -3.5297539234161377
    3. ' ' → logprob: -12.904753684997559
    4. '   ' → logprob: -14.779753684997559
    5. ' ' → logprob: -15.029753684997559
    6. ')' → logprob: -16.404754638671875
    7. '  ' → logprob: -16.654754638671875
    8. '">' → logprob: -16.779754638671875
    9. ')>' → logprob: -17.404754638671875
    10. '	' → logprob: -17.529754638671875

Token 432: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.048587825149297714
    2. 'max' → logprob: -3.0485877990722656
    3. '	max' → logprob: -15.673587799072266
    4. '(max' → logprob: -15.798587799072266
    5. '_max' → logprob: -17.048587799072266
    6. '0' → logprob: -17.548587799072266
    7. '=max' → logprob: -17.548587799072266
    8. '   ' → logprob: -17.673587799072266
    9. '[max' → logprob: -17.798587799072266
    10. '       ' → logprob: -17.923587799072266

Token 433: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: 0.0
    2. 'rectangle' → logprob: -17.625
    3. ' _' → logprob: -19.125
    4. '_rect' → logprob: -19.125
    5. '_area' → logprob: -20.0
    6. ' ' → logprob: -20.125
    7. '   ' → logprob: -20.125
    8. '_' → logprob: -20.5
    9. '_triangle' → logprob: -20.75
    10. '
' → logprob: -20.875

Token 434: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.308921754360199
    2. '           ' → logprob: -1.6839218139648438
    3. ':
' → logprob: -2.5589218139648438
    4. '=' → logprob: -6.433921813964844
    5. ' =' → logprob: -7.933921813964844
    6. '       ' → logprob: -8.183921813964844
    7. '):
' → logprob: -9.308921813964844
    8. '               ' → logprob: -9.558921813964844
    9. '<|end|>' → logprob: -9.808921813964844
    10. '=max' → logprob: -9.933921813964844

Token 435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06587360054254532
    2. ' max' → logprob: -2.815873622894287
    3. 'max' → logprob: -5.565873622894287
    4. '       ' → logprob: -9.815873146057129
    5. '               ' → logprob: -12.190873146057129
    6. '
' → logprob: -12.565873146057129
    7. '(max' → logprob: -13.190873146057129
    8. '   ' → logprob: -13.440873146057129
    9. '[max' → logprob: -13.440873146057129
    10. '	max' → logprob: -13.815873146057129

Token 436: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06295710802078247
    2. 'max' (adapté à ' max') → logprob: -2.8129570484161377
    3. '           ' → logprob: -6.937957286834717
    4. '               ' → logprob: -11.562956809997559
    5. '   ' → logprob: -13.062956809997559
    6. '(max' → logprob: -13.187956809997559
    7. '       ' → logprob: -13.187956809997559
    8. '	max' → logprob: -13.312956809997559
    9. '[max' → logprob: -13.812956809997559
    10. '_max' → logprob: -15.812956809997559

Token 437: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -1.9361264946837764e-07
    2. 'rectangle' → logprob: -16.375
    3. '_area' → logprob: -18.125
    4. '_rect' → logprob: -19.75
    5. '   ' → logprob: -20.25
    6. 'Rectangle' → logprob: -20.625
    7. 'area' → logprob: -21.25
    8. '_triangle' → logprob: -22.125
    9. '.rectangle' → logprob: -22.25
    10. ' ' → logprob: -22.375

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132617771625519
    2. ' =' → logprob: -1.3132617473602295
    3. '＝' → logprob: -17.313261032104492
    4. '.=' → logprob: -17.938261032104492
    5. '=max' → logprob: -18.188261032104492
    6. '               ' → logprob: -18.313261032104492
    7. '+=' → logprob: -18.688261032104492
    8. '           ' → logprob: -18.688261032104492
    9. ' ' → logprob: -19.063261032104492
    10. '            ' → logprob: -19.188261032104492

Token 439: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.4740770161151886
    2. 'area' → logprob: -0.9740769863128662
    3. '(area' → logprob: -18.349077224731445
    4. '   ' → logprob: -18.599077224731445
    5. '_area' → logprob: -18.974077224731445
    6. ' área' → logprob: -19.099077224731445
    7. ' ' → logprob: -19.349077224731445
    8. 'Area' → logprob: -19.599077224731445
    9. ' ' → logprob: -19.849077224731445
    10. '.area' → logprob: -20.474077224731445

Token 440: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6417357325553894
    2. '
' → logprob: -1.1417357921600342
    3. '   ' → logprob: -2.016735792160034
    4. '  
' → logprob: -4.891735553741455
    5. ' return' → logprob: -5.141735553741455
    6. ' 
' → logprob: -5.516735553741455
    7. 'return' → logprob: -6.266735553741455
    8. '   
' → logprob: -6.516735553741455
    9. '\n' → logprob: -8.641736030578613
    10. '        
' → logprob: -9.016736030578613

Token 441: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31629112362861633
    2. 'return' → logprob: -1.316291093826294
    3. ' return' → logprob: -5.816291332244873
    4. '
' → logprob: -10.191290855407715
    5. '	return' → logprob: -11.941290855407715
    6. '    
' → logprob: -13.316290855407715
    7. '```' → logprob: -15.816290855407715
    8. '  ' → logprob: -16.19129180908203
    9. ' ' → logprob: -16.19129180908203
    10. '_return' → logprob: -16.94129180908203

Token 442: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011406922712922096
    2. ' return' → logprob: -7.251140594482422
    3. '   ' → logprob: -7.751140594482422
    4. '	return' → logprob: -15.126140594482422
    5. '
' → logprob: -16.626140594482422
    6. '```' → logprob: -17.501140594482422
    7. '    
' → logprob: -18.001140594482422
    8. ' ' → logprob: -18.251140594482422
    9. 'eturn' → logprob: -18.626140594482422
    10. '  ' → logprob: -19.501140594482422

Token 443: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.575939416885376
    2. 'max' → logprob: -0.825939416885376
    3. '(max' → logprob: -18.450939178466797
    4. '_max' → logprob: -19.075939178466797
    5. '	max' → logprob: -20.825939178466797
    6. '=max' → logprob: -20.950939178466797
    7. '[max' → logprob: -21.075939178466797
    8. ',max' → logprob: -22.075939178466797
    9. '.max' → logprob: -23.575939178466797
    10. ':max' → logprob: -23.950939178466797

Token 444: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -9.088346359931165e-07
    2. 'rectangle' → logprob: -14.125000953674316
    3. '_rect' → logprob: -17.5
    4. '__' → logprob: -19.0
    5. 'Rectangle' → logprob: -19.125
    6. '_triangle' → logprob: -19.25
    7. '_area' → logprob: -19.75
    8. '___' → logprob: -20.125
    9. '_array' → logprob: -20.625
    10. '\' → logprob: -20.75

Token 445: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01595260761678219
    2. '<|end|>' → logprob: -4.2659525871276855
    3. '```' → logprob: -6.7659525871276855
    4. '[' → logprob: -7.8909525871276855
    5. 'def' → logprob: -9.015953063964844
    6. '
' → logprob: -9.890953063964844
    7. '<|end|>' → logprob: -10.640953063964844
    8. 'a' → logprob: -11.515953063964844
    9. '[
' → logprob: -11.515953063964844
    10. 'n' → logprob: -12.140953063964844

Token 447: ' main' (ID: 2758)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8297114372253418
    2. 'max' → logprob: -1.3297114372253418
    3. ' maximal' → logprob: -1.3297114372253418
    4. ' main' → logprob: -3.579711437225342
    5. 'main' → logprob: -6.079711437225342
    6. ' find' → logprob: -6.329711437225342
    7. ' maximum' → logprob: -6.579711437225342
    8. ' largest' → logprob: -7.204711437225342
    9. 'largest' → logprob: -8.5797119140625
    10. 'maximum' → logprob: -8.8297119140625

Token 448: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.165027217415627e-05
    2. ' ():' → logprob: -11.125021934509277
    3. '():
' → logprob: -12.125021934509277
    4. '(' → logprob: -14.625021934509277
    5. '()' → logprob: -14.625021934509277
    6. '()>' → logprob: -15.375021934509277
    7. '():
' → logprob: -15.750021934509277
    8. '_' → logprob: -17.25002098083496
    9. '(":' → logprob: -17.87502098083496
    10. '():

' → logprob: -18.00002098083496

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14250707626342773
    2. ' matrix' → logprob: -2.1425070762634277
    3. 'matrix' → logprob: -4.392507076263428
    4. '	matrix' → logprob: -6.767507076263428
    5. ' input' → logprob: -7.892507076263428
    6. 'import' → logprob: -8.017507553100586
    7. '```' → logprob: -8.267507553100586
    8. '_matrix' → logprob: -8.642507553100586
    9. 'input' → logprob: -8.767507553100586
    10. 'n' → logprob: -9.267507553100586

Token 450: ' import' (ID: 1588)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.01880646124482155
    2. 'matrix' → logprob: -4.393806457519531
    3. ' test' → logprob: -5.518806457519531
    4. ' sample' → logprob: -6.893806457519531
    5. '   ' → logprob: -7.018806457519531
    6. ' example' → logprob: -8.268806457519531
    7. '	matrix' → logprob: -10.268806457519531
    8. ' input' → logprob: -11.143806457519531
    9. ' #' → logprob: -11.393806457519531
    10. 'test' → logprob: -11.893806457519531

Token 451: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.061746932566165924
    2. 'sys' → logprob: -3.061746835708618
    3. ' random' → logprob: -4.811747074127197
    4. 'random' → logprob: -5.311747074127197
    5. '=sys' → logprob: -13.061746597290039
    6. 'json' → logprob: -13.811746597290039
    7. '	sys' → logprob: -14.186746597290039
    8. '(sys' → logprob: -14.311746597290039
    9. ' numpy' → logprob: -14.561746597290039
    10. '_random' → logprob: -14.561746597290039

Token 452: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2000730186700821
    2. '
' → logprob: -2.075073003768921
    3. 'input' → logprob: -3.075073003768921
    4. '    
' → logprob: -5.5750732421875
    5. 'data' → logprob: -6.7000732421875
    6. 'import' → logprob: -6.8250732421875
    7. ' lines' → logprob: -6.9500732421875
    8. 'def' → logprob: -7.4500732421875
    9. ' input' → logprob: -7.4500732421875
    10. '.readline' → logprob: -8.3250732421875

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005264237988740206
    2. '    
' → logprob: -6.2552642822265625
    3. '
' → logprob: -6.5052642822265625
    4. 'input' → logprob: -6.8802642822265625
    5. ' input' → logprob: -8.130264282226562
    6. 'import' → logprob: -8.755264282226562
    7. ' lines' → logprob: -9.880264282226562
    8. 'data' → logprob: -10.130264282226562
    9. 'matrix' → logprob: -10.130264282226562
    10. '```' → logprob: -10.255264282226562

Token 454: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7331401705741882
    2. ' matrix' → logprob: -1.358140230178833
    3. ' lines' → logprob: -1.858140230178833
    4. 'input' (adapté à ' input') → logprob: -3.483140230178833
    5. ' data' → logprob: -3.608140230178833
    6. '   ' → logprob: -3.733140230178833
    7. 'matrix' → logprob: -3.983140230178833
    8. 'data' → logprob: -5.608139991760254
    9. ' for' → logprob: -7.233139991760254
    10. ' n' → logprob: -7.733139991760254

Token 455: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.501790463924408
    2. '_data' → logprob: -1.5017905235290527
    3. '_line' → logprob: -2.3767905235290527
    4. '_lines' → logprob: -3.2517905235290527
    5. '=' → logprob: -3.5017905235290527
    6. ' =' → logprob: -5.001790523529053
    7. '_' → logprob: -6.001790523529053
    8. 'data' → logprob: -7.876790523529053
    9. '(' → logprob: -9.376790046691895
    10. '_text' → logprob: -9.751790046691895

Token 456: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.014163747429847717
    2. ' sys' → logprob: -4.264163970947266
    3. '	sys' → logprob: -15.889163970947266
    4. '=sys' → logprob: -16.014163970947266
    5. 'input' → logprob: -16.889163970947266
    6. '(sys' → logprob: -18.389163970947266
    7. 'lambda' → logprob: -20.014163970947266
    8. '_sys' → logprob: -21.514163970947266
    9. ' input' → logprob: -21.514163970947266
    10. '```' → logprob: -22.514163970947266

Token 457: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0017524146242067218
    2. '.stdout' → logprob: -7.2517523765563965
    3. '.' → logprob: -7.5017523765563965
    4. '.readline' → logprob: -8.126752853393555
    5. ' .' → logprob: -8.876752853393555
    6. 'stdin' → logprob: -10.751752853393555
    7. '.input' → logprob: -11.626752853393555
    8. '._' → logprob: -11.876752853393555
    9. '.argv' → logprob: -12.251752853393555
    10. '.std' → logprob: -12.751752853393555

Token 458: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.07917585223913193
    2. 'read' → logprob: -2.5791759490966797
    3. 'stdin' → logprob: -8.82917594909668
    4. ' readline' → logprob: -10.20417594909668
    5. '.read' → logprob: -10.45417594909668
    6. 'buffer' → logprob: -10.70417594909668
    7. 'reader' → logprob: -11.20417594909668
    8. '.stdin' → logprob: -11.82917594909668
    9. 're' → logprob: -11.95417594909668
    10. 'readonly' → logprob: -12.20417594909668

Token 459: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4291207194328308
    2. '().' → logprob: -1.0541207790374756
    3. '()
' → logprob: -8.054121017456055
    4. '()\' → logprob: -10.429121017456055
    5. '()

' → logprob: -10.429121017456055
    6. '<|end|>' → logprob: -11.179121017456055
    7. 'line' → logprob: -12.304121017456055
    8. '()>' → logprob: -12.429121017456055
    9. '(' → logprob: -12.554121017456055
    10. '();' → logprob: -12.679121017456055

Token 460: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0019294669618830085
    2. 'split' → logprob: -6.25192928314209
    3. 'rstrip' → logprob: -14.00192928314209
    4. 'decode' → logprob: -19.251930236816406
    5. ' strip' → logprob: -19.251930236816406
    6. 'replace' → logprob: -20.126930236816406
    7. '(strip' → logprob: -21.751930236816406
    8. '.strip' → logprob: -22.501930236816406
    9. ' split' → logprob: -22.751930236816406
    10. 'str' → logprob: -24.001930236816406

Token 461: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0077200825326144695
    2. '().' → logprob: -4.882719993591309
    3. '()
' → logprob: -9.257719993591309
    4. '()\' → logprob: -11.507719993591309
    5. '()`' → logprob: -13.132719993591309
    6. '(' → logprob: -13.382719993591309
    7. ' ()' → logprob: -13.632719993591309
    8. '()

' → logprob: -13.757719993591309
    9. '())' → logprob: -14.257719993591309
    10. '(),' → logprob: -14.632719993591309

Token 462: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07967012375593185
    2. '\n' → logprob: -2.5796701908111572
    3. ' \' → logprob: -7.454669952392578
    4. '
' → logprob: -9.329669952392578
    5. '\' → logprob: -9.954669952392578
    6. 'r' → logprob: -10.329669952392578
    7. ')' → logprob: -11.954669952392578
    8. '\r' → logprob: -12.079669952392578
    9. '')' → logprob: -12.204669952392578
    10. '()' → logprob: -12.829669952392578

Token 463: ' ')
' (ID: 49195)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02555001713335514
    2. ').' → logprob: -4.02554988861084
    3. '()' → logprob: -5.52554988861084
    4. '')' → logprob: -6.52554988861084
    5. ' )' → logprob: -6.90054988861084
    6. '').' → logprob: -8.02554988861084
    7. '())' → logprob: -8.15054988861084
    8. ')
' → logprob: -9.40054988861084
    9. ')\' → logprob: -9.90054988861084
    10. '(' → logprob: -10.52554988861084

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014641153626143932
    2. 'data' → logprob: -5.764641284942627
    3. '()' → logprob: -6.014641284942627
    4. ' lines' → logprob: -6.014641284942627
    5. 'lines' → logprob: -6.264641284942627
    6. '().' → logprob: -6.264641284942627
    7. '    
' → logprob: -6.514641284942627
    8. '()
' → logprob: -7.639641284942627
    9. '_lines' → logprob: -8.389640808105469
    10. '
' → logprob: -9.014640808105469

Token 465: ' #' (ID: 1069)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2967020571231842
    2. 'rows' → logprob: -1.5467020273208618
    3. 'matrix' → logprob: -3.9217021465301514
    4. 'data' → logprob: -4.046701908111572
    5. ' lines' → logprob: -5.171701908111572
    6. ' rows' → logprob: -8.29670238494873
    7. '   ' → logprob: -8.79670238494873
    8. 'inputs' → logprob: -8.92170238494873
    9. ' matrix' → logprob: -9.04670238494873
    10. 'input' → logprob: -10.17170238494873

Token 466: ' Split' (ID: 44687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.1340024769306183
    2. 'rows' → logprob: -2.634002447128296
    3. ' lines' → logprob: -3.634002447128296
    4. 'matrix' → logprob: -3.884002447128296
    5. 'data' → logprob: -5.134002685546875
    6. ' matrix' → logprob: -8.134002685546875
    7. ' rows' → logprob: -8.509002685546875
    8. 'if' → logprob: -9.509002685546875
    9. 'inputs' → logprob: -10.009002685546875
    10. 'mat' → logprob: -10.384002685546875

Token 467: ' input' (ID: 3422)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.007155891507863998
    2. 'rows' → logprob: -5.882155895233154
    3. ' lines' → logprob: -6.257155895233154
    4. 'input' → logprob: -6.507155895233154
    5. 'data' → logprob: -8.382155418395996
    6. '   ' → logprob: -8.632155418395996
    7. 'matrix' → logprob: -9.007155418395996
    8. '=' → logprob: -9.257155418395996
    9. '_lines' → logprob: -9.382155418395996
    10. ' =' → logprob: -9.882155418395996

Token 468: ' by' (ID: 656)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.19600260257720947
    2. '()' → logprob: -2.19600248336792
    3. 'lines' → logprob: -2.82100248336792
    4. 'data' → logprob: -6.32100248336792
    5. '().' → logprob: -6.69600248336792
    6. '_rows' → logprob: -7.07100248336792
    7. '=' → logprob: -7.32100248336792
    8. '_data' → logprob: -7.32100248336792
    9. 's' → logprob: -7.44600248336792
    10. ' =' → logprob: -8.196002960205078

Token 469: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.1605549454689026
    2. ''\' → logprob: -1.9105548858642578
    3. ''' → logprob: -8.910554885864258
    4. 'line' → logprob: -10.035554885864258
    5. ' lines' → logprob: -10.035554885864258
    6. '('\' → logprob: -10.160554885864258
    7. 'spaces' → logprob: -11.160554885864258
    8. 'new' → logprob: -11.285554885864258
    9. 'newline' → logprob: -11.285554885864258
    10. ' '\' → logprob: -11.535554885864258

Token 470: ' and' (ID: 326)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.140053153038025
    2. '()' → logprob: -1.515053153038025
    3. '_lines' → logprob: -1.640053153038025
    4. '()
' → logprob: -2.3900532722473145
    5. '   ' → logprob: -3.0150532722473145
    6. '().' → logprob: -3.1400532722473145
    7. ' =' → logprob: -3.7650532722473145
    8. '.split' → logprob: -4.1400532722473145
    9. 'split' → logprob: -4.3900532722473145
    10. ' lines' → logprob: -4.5150532722473145

Token 471: ' filter' (ID: 6690)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20534759759902954
    2. 'lines' → logprob: -2.3303475379943848
    3. ' lines' → logprob: -3.0803475379943848
    4. ' split' → logprob: -3.3303475379943848
    5. 'input' → logprob: -5.330347537994385
    6. ' input' → logprob: -6.830347537994385
    7. '   ' → logprob: -7.580347537994385
    8. 'strip' → logprob: -9.580348014831543
    9. 'rows' → logprob: -9.705348014831543
    10. 'inputs' → logprob: -10.455348014831543

Token 472: ' out' (ID: 842)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6008213758468628
    2. '()' → logprob: -1.4758213758468628
    3. 'input' → logprob: -2.8508214950561523
    4. 'def' → logprob: -3.3508214950561523
    5. ' lines' → logprob: -3.3508214950561523
    6. '(lambda' → logprob: -3.8508214950561523
    7. '()
' → logprob: -4.100821495056152
    8. 'empty' → logprob: -4.475821495056152
    9. 'lambda' → logprob: -4.600821495056152
    10. '[]' → logprob: -4.725821495056152

Token 473: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.08991344273090363
    2. ' empty' → logprob: -2.5899133682250977
    3. 'lambda' → logprob: -5.089913368225098
    4. 'lines' → logprob: -6.589913368225098
    5. ' lambda' → logprob: -6.964913368225098
    6. ' lines' → logprob: -7.089913368225098
    7. '''' → logprob: -7.089913368225098
    8. 'blank' → logprob: -7.714913368225098
    9. 'line' → logprob: -8.839913368225098
    10. ' blank' → logprob: -9.464913368225098

Token 474: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.008636434562504292
    2. ' lines' → logprob: -4.758636474609375
    3. '(lines' → logprob: -11.633636474609375
    4. 'input' → logprob: -12.258636474609375
    5. 'strings' → logprob: -12.383636474609375
    6. '_lines' → logprob: -12.758636474609375
    7. '()' → logprob: -14.508636474609375
    8. '[]' → logprob: -15.758636474609375
    9. '	lines' → logprob: -15.758636474609375
    10. 'inputs' → logprob: -16.008636474609375

Token 475: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7520704865455627
    2. '()
' → logprob: -1.502070426940918
    3. '()' → logprob: -2.127070426940918
    4. 'lines' → logprob: -2.502070426940918
    5. '().' → logprob: -3.127070426940918
    6. ' lines' → logprob: -4.002070426940918
    7. '
' → logprob: -4.127070426940918
    8. ' =' → logprob: -5.127070426940918
    9. '=' → logprob: -5.502070426940918
    10. '    
' → logprob: -5.752070426940918

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034738391637802124
    2. 'lines' → logprob: -3.909738302230835
    3. ' lines' → logprob: -5.034738540649414
    4. '
' → logprob: -5.159738540649414
    5. '    
' → logprob: -6.909738540649414
    6. 'input' → logprob: -7.909738540649414
    7. '(lines' → logprob: -8.659738540649414
    8. 'inputs' → logprob: -9.159738540649414
    9. 'rows' → logprob: -10.534738540649414
    10. '```' → logprob: -10.534738540649414

Token 477: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.01910252496600151
    2. ' lines' → logprob: -4.019102573394775
    3. '   ' → logprob: -7.269102573394775
    4. 'rows' → logprob: -8.394102096557617
    5. 'data' → logprob: -11.394102096557617
    6. 'matrix' → logprob: -11.894102096557617
    7. 'inputs' → logprob: -12.269102096557617
    8. 'input' → logprob: -12.394102096557617
    9. ' rows' → logprob: -14.519102096557617
    10. '	lines' → logprob: -14.644102096557617

Token 478: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478977203369
    2. ' =' → logprob: -0.6931478977203369
    3. '   ' → logprob: -15.818147659301758
    4. '=line' → logprob: -15.943147659301758
    5. '=input' → logprob: -15.943147659301758
    6. ' ' → logprob: -16.568147659301758
    7. '＝' → logprob: -16.568147659301758
    8. '=[]' → logprob: -16.818147659301758
    9. ' ' → logprob: -17.443147659301758
    10. ' =[' → logprob: -17.693147659301758

Token 479: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.043736133724451065
    2. 'input' → logprob: -3.293736219406128
    3. 'list' → logprob: -6.043735980987549
    4. '[' → logprob: -6.668735980987549
    5. '[list' → logprob: -6.668735980987549
    6. '[i' → logprob: -7.793735980987549
    7. ' [' → logprob: -8.793736457824707
    8. ' input' → logprob: -9.168736457824707
    9. '[x' → logprob: -10.043736457824707
    10. '[line' → logprob: -10.543736457824707

Token 480: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.3306015716807451e-05
    2. ' line' → logprob: -11.25001335144043
    3. 'l' → logprob: -15.25001335144043
    4. 'x' → logprob: -17.50001335144043
    5. '	line' → logprob: -20.75001335144043
    6. '(line' → logprob: -21.37501335144043
    7. '   ' → logprob: -21.62501335144043
    8. 'ln' → logprob: -21.75001335144043
    9. 'list' → logprob: -22.12501335144043
    10. 'lin' → logprob: -22.50001335144043

Token 481: '.strip' (ID: 40613)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47791847586631775
    2. 'for' → logprob: -0.9779185056686401
    3. '.strip' → logprob: -5.60291862487793
    4. '.split' → logprob: -8.85291862487793
    5. '	for' → logprob: -13.60291862487793
    6. 'split' → logprob: -13.85291862487793
    7. '.rstrip' → logprob: -14.35291862487793
    8. '   ' → logprob: -14.97791862487793
    9. 'strip' → logprob: -15.10291862487793
    10. '.' → logprob: -15.47791862487793

Token 482: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.090760431718081e-05
    2. 'for' → logprob: -9.375090599060059
    3. ' for' → logprob: -12.500090599060059
    4. ' ()' → logprob: -13.750090599060059
    5. '()
' → logprob: -14.500090599060059
    6. '()]' → logprob: -14.750090599060059
    7. '().' → logprob: -16.000091552734375
    8. '(' → logprob: -16.750091552734375
    9. '()

' → logprob: -17.500091552734375
    10. '())' → logprob: -17.500091552734375

Token 483: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26296377182006836
    2. 'for' → logprob: -1.5129637718200684
    3. ' for' → logprob: -4.512963771820068
    4. '()
' → logprob: -12.887964248657227
    5. ' ()' → logprob: -13.012964248657227
    6. ')' → logprob: -13.512964248657227
    7. '   ' → logprob: -14.262964248657227
    8. '	for' → logprob: -14.637964248657227
    9. '().' → logprob: -15.137964248657227
    10. ' ' → logprob: -15.262964248657227

Token 484: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07185292989015579
    2. ' line' → logprob: -3.321852922439575
    3. 'input' → logprob: -3.446852922439575
    4. ' input' → logprob: -6.571853160858154
    5. 'lines' → logprob: -15.071852684020996
    6. '	line' → logprob: -15.321852684020996
    7. ' ' → logprob: -15.571852684020996
    8. 'in' → logprob: -16.196853637695312
    9. '(line' → logprob: -16.446853637695312
    10. 'lin' → logprob: -16.571853637695312

Token 485: ' in' (ID: 306)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7455094456672668
    2. ' in' → logprob: -0.9955094456672668
    3. ' line' → logprob: -2.245509386062622
    4. 'in' → logprob: -2.995509386062622
    5. '(line' → logprob: -9.495509147644043
    6. '	line' → logprob: -11.995509147644043
    7. '_line' → logprob: -12.870509147644043
    8. ' ' → logprob: -13.870509147644043
    9. '=line' → logprob: -13.995509147644043
    10. '[line' → logprob: -14.120509147644043

Token 486: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001170225441455841
    2. ' input' → logprob: -6.7511701583862305
    3. '(input' → logprob: -18.501171112060547
    4. ' ' → logprob: -19.501171112060547
    5. '
' → logprob: -20.126171112060547
    6. 'output' → logprob: -20.251171112060547
    7. '[input' → logprob: -20.251171112060547
    8. '   ' → logprob: -20.376171112060547
    9. '<input' → logprob: -20.376171112060547
    10. '	input' → logprob: -20.501171112060547

Token 487: '.split' (ID: 10347)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15613143146038055
    2. 'in' → logprob: -2.0311315059661865
    3. 'if' → logprob: -5.031131267547607
    4. ' if' → logprob: -5.781131267547607
    5. '.split' → logprob: -6.031131267547607
    6. '()' → logprob: -7.531131267547607
    7. '().' → logprob: -8.406131744384766
    8. '   ' → logprob: -8.406131744384766
    9. 'split' → logprob: -8.906131744384766
    10. ']' → logprob: -9.031131744384766

Token 488: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.00021343429398257285
    2. 'lines' → logprob: -8.500213623046875
    3. ''\' → logprob: -11.625213623046875
    4. '("\' → logprob: -14.125213623046875
    5. '()' → logprob: -15.500213623046875
    6. '(' → logprob: -18.000213623046875
    7. '='\' → logprob: -18.750213623046875
    8. '()\' → logprob: -19.125213623046875
    9. '()
' → logprob: -19.375213623046875
    10. '('' → logprob: -19.625213623046875

Token 489: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2163131833076477
    2. ''\' → logprob: -1.716313123703003
    3. 'n' → logprob: -4.216313362121582
    4. '('\' → logprob: -10.591313362121582
    5. '\' → logprob: -12.466313362121582
    6. ''n' → logprob: -13.091313362121582
    7. '
' → logprob: -13.716313362121582
    8. '"\' → logprob: -13.716313362121582
    9. 'newline' → logprob: -13.716313362121582
    10. '\
' → logprob: -14.341313362121582

Token 490: '')]
' (ID: 115423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.013994814362377e-05
    2. 'if' → logprob: -10.62505054473877
    3. ' if' → logprob: -11.37505054473877
    4. ' )' → logprob: -11.62505054473877
    5. '')' → logprob: -12.37505054473877
    6. ')]' → logprob: -14.50005054473877
    7. '   ' → logprob: -15.75005054473877
    8. '")' → logprob: -15.87505054473877
    9. ')
' → logprob: -15.87505054473877
    10. ']' → logprob: -16.500049591064453

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7085376977920532
    2. 'matrix' → logprob: -0.7085376977920532
    3. ' matrix' → logprob: -4.208537578582764
    4. '    
' → logprob: -9.458538055419922
    5. 'rows' → logprob: -9.958538055419922
    6. 'if' → logprob: -10.083538055419922
    7. ' matrices' → logprob: -10.208538055419922
    8. '	matrix' → logprob: -10.208538055419922
    9. '```' → logprob: -10.458538055419922
    10. 'mat' → logprob: -10.583538055419922

Token 492: ' #' (ID: 1069)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.007232946809381247
    2. '   ' → logprob: -5.007233142852783
    3. ' matrix' → logprob: -7.757233142852783
    4. '    
' → logprob: -10.632232666015625
    5. 'while' → logprob: -11.007232666015625
    6. 'if' → logprob: -11.132232666015625
    7. '
' → logprob: -11.382232666015625
    8. 'mat' → logprob: -11.882232666015625
    9. 'lines' → logprob: -13.007232666015625
    10. 'for' → logprob: -13.007232666015625

Token 493: ' Remove' (ID: 18141)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.0012618985492736101
    2. 'if' → logprob: -7.6262617111206055
    3. ' matrix' → logprob: -7.6262617111206055
    4. '#' → logprob: -9.376261711120605
    5. 'mat' → logprob: -9.626261711120605
    6. 'lines' → logprob: -10.251261711120605
    7. 'assert' → logprob: -10.251261711120605
    8. 'while' → logprob: -10.501261711120605
    9. 'rows' → logprob: -11.126261711120605
    10. 'filtered' → logprob: -11.626261711120605

Token 494: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.13393555581569672
    2. ' empty' → logprob: -2.1339354515075684
    3. ' any' → logprob: -5.508935451507568
    4. 'any' → logprob: -6.383935451507568
    5. ' lines' → logprob: -7.133935451507568
    6. 'lines' → logprob: -7.883935451507568
    7. 'blank' → logprob: -10.508935928344727
    8. '[]' → logprob: -10.633935928344727
    9. ' blank' → logprob: -11.883935928344727
    10. '[line' → logprob: -13.258935928344727

Token 495: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.2521335780620575
    2. 'lines' → logprob: -1.5021336078643799
    3. '(lines' → logprob: -8.6271333694458
    4. '_lines' → logprob: -10.8771333694458
    5. '	lines' → logprob: -12.2521333694458
    6. 'strings' → logprob: -14.3771333694458
    7. 'line' → logprob: -14.3771333694458
    8. ' strings' → logprob: -15.7521333694458
    9. ' line' → logprob: -16.377134323120117
    10. '[line' → logprob: -17.127134323120117

Token 496: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4892134964466095
    2. 'lines' → logprob: -1.364213466644287
    3. '(lines' → logprob: -2.864213466644287
    4. ' =' → logprob: -3.239213466644287
    5. ' lines' → logprob: -4.114213466644287
    6. '
' → logprob: -5.114213466644287
    7. '=' → logprob: -5.364213466644287
    8. '	lines' → logprob: -5.614213466644287
    9. '    
' → logprob: -6.114213466644287
    10. '_lines' → logprob: -6.864213466644287

Token 497: ' separate' (ID: 13574)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.42941826581954956
    2. ' lines' → logprob: -1.0544183254241943
    3. '(lines' → logprob: -8.179418563842773
    4. 'continue' → logprob: -9.054418563842773
    5. '_lines' → logprob: -9.304418563842773
    6. 'remove' → logprob: -10.054418563842773
    7. '[' → logprob: -10.179418563842773
    8. '   ' → logprob: -10.929418563842773
    9. '[line' → logprob: -11.179418563842773
    10. '=' → logprob: -11.179418563842773

Token 498: ' maps' (ID: 24267)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.4686831831932068
    2. 'lines' → logprob: -1.2186832427978516
    3. ' lines' → logprob: -3.5936832427978516
    4. '[]' → logprob: -3.8436832427978516
    5. ' matrix' → logprob: -4.343683242797852
    6. '[line' → logprob: -5.468683242797852
    7. '[m' → logprob: -5.718683242797852
    8. '[' → logprob: -5.968683242797852
    9. '(lines' → logprob: -6.218683242797852
    10. '[][]' → logprob: -6.593683242797852

Token 499: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05827455595135689
    2. ' =' → logprob: -3.808274507522583
    3. 'maps' → logprob: -4.683274745941162
    4. '    
' → logprob: -5.183274745941162
    5. '
' → logprob: -5.433274745941162
    6. '_maps' → logprob: -6.058274745941162
    7. 's' → logprob: -6.183274745941162
    8. 'def' → logprob: -6.308274745941162
    9. '_lines' → logprob: -6.433274745941162
    10. '_map' → logprob: -6.558274745941162

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44354137778282166
    2. 'maps' → logprob: -1.068541407585144
    3. '
' → logprob: -5.068541526794434
    4. ' maps' → logprob: -5.193541526794434
    5. '    
' → logprob: -6.943541526794434
    6. 'map' → logprob: -7.693541526794434
    7. ',' → logprob: -8.193541526794434
    8. 'matrix' → logprob: -8.568541526794434
    9. 'def' → logprob: -8.693541526794434
    10. '_maps' → logprob: -8.943541526794434

Token 501: ' filtered' (ID: 31972)
  Prédit: 'maps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maps' → logprob: -0.022688716650009155
    2. 'matrix' → logprob: -4.772688865661621
    3. ' maps' → logprob: -4.897688865661621
    4. 'mat' → logprob: -5.522688865661621
    5. 'lines' → logprob: -7.147688865661621
    6. '   ' → logprob: -7.522688865661621
    7. ' matrices' → logprob: -8.147688865661621
    8. 'non' → logprob: -8.272688865661621
    9. 'data' → logprob: -9.022688865661621
    10. 'filtered' (adapté à ' filtered') → logprob: -9.272688865661621

Token 502: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.03962152451276779
    2. '_maps' → logprob: -3.289621591567993
    3. '=' → logprob: -6.914621353149414
    4. ' =' → logprob: -8.414621353149414
    5. 'lines' → logprob: -8.789621353149414
    6. '=[]' → logprob: -9.039621353149414
    7. 'maps' → logprob: -10.039621353149414
    8. '_' → logprob: -10.914621353149414
    9. '_map' → logprob: -12.039621353149414
    10. '=[]
' → logprob: -12.164621353149414

Token 503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07908442616462708
    2. ' =' → logprob: -2.5790843963623047
    3. '=[]' → logprob: -8.579084396362305
    4. '=[]
' → logprob: -12.079084396362305
    5. '=[' → logprob: -14.579084396362305
    6. ',' → logprob: -15.829084396362305
    7. '   ' → logprob: -16.454084396362305
    8. '[:]' → logprob: -16.454084396362305
    9. '=[]
' → logprob: -16.829084396362305
    10. ' =[' → logprob: -16.954084396362305

Token 504: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.6131290793418884
    2. '[' → logprob: -1.6131291389465332
    3. '[]' → logprob: -2.113129138946533
    4. '[]
' → logprob: -2.613129138946533
    5. '[line' → logprob: -2.863129138946533
    6. '[i' → logprob: -5.613129138946533
    7. ' [' → logprob: -6.738129138946533
    8. '[input' → logprob: -8.363128662109375
    9. '[item' → logprob: -8.488128662109375
    10. '[class' → logprob: -8.613128662109375

Token 505: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.8889261304575484e-06
    2. ' line' → logprob: -12.500003814697266
    3. 'l' → logprob: -16.375003814697266
    4. '[line' → logprob: -17.875003814697266
    5. 'list' → logprob: -19.750003814697266
    6. '```' → logprob: -20.000003814697266
    7. '	line' → logprob: -20.125003814697266
    8. '   ' → logprob: -20.250003814697266
    9. '(line' → logprob: -20.250003814697266
    10. 'ln' → logprob: -20.500003814697266

Token 506: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.251930832862854
    2. ' for' → logprob: -1.501930832862854
    3. '	for' → logprob: -13.626931190490723
    4. '   ' → logprob: -15.126931190490723
    5. '
' → logprob: -15.376931190490723
    6. ')' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.751930236816406
    8. '.strip' → logprob: -17.876930236816406
    9. '    ' → logprob: -18.626930236816406
    10. '           ' → logprob: -18.751930236816406

Token 507: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.011048170737922192
    2. ' line' → logprob: -4.511048316955566
    3. '	line' → logprob: -16.01104736328125
    4. '(line' → logprob: -16.38604736328125
    5. '=line' → logprob: -16.51104736328125
    6. '#line' → logprob: -17.38604736328125
    7. '[line' → logprob: -17.51104736328125
    8. 'lines' → logprob: -18.01104736328125
    9. 'Line' → logprob: -19.38604736328125
    10. '_line' → logprob: -20.13604736328125

Token 508: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6590129137039185
    2. 'in' → logprob: -0.9090129137039185
    3. 'line' → logprob: -2.534012794494629
    4. ' line' → logprob: -7.909012794494629
    5. '=line' → logprob: -12.409012794494629
    6. '(line' → logprob: -13.534012794494629
    7. '[line' → logprob: -13.909012794494629
    8. 'ine' → logprob: -13.909012794494629
    9. ' ' → logprob: -14.409012794494629
    10. ',line' → logprob: -14.784012794494629

Token 509: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0005564896273426712
    2. ' lines' → logprob: -7.500556468963623
    3. 'line' → logprob: -13.000556945800781
    4. '(lines' → logprob: -14.125556945800781
    5. '	lines' → logprob: -15.000556945800781
    6. 'filtered' → logprob: -16.12555694580078
    7. 'lined' → logprob: -17.12555694580078
    8. '.lines' → logprob: -18.50055694580078
    9. '_lines' → logprob: -19.00055694580078
    10. 'input' → logprob: -19.75055694580078

Token 510: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03804321587085724
    2. 'if' → logprob: -3.288043260574341
    3. ' in' → logprob: -13.538043022155762
    4. '    ' → logprob: -16.038043975830078
    5. '   ' → logprob: -16.163043975830078
    6. 'in' → logprob: -16.163043975830078
    7. '	if' → logprob: -16.788043975830078
    8. ']' → logprob: -17.913043975830078
    9. ' for' → logprob: -17.913043975830078
    10. ' ' → logprob: -18.288043975830078

Token 511: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00033581978641450405
    2. ' line' → logprob: -8.000335693359375
    3. 'len' → logprob: -15.000335693359375
    4. '(line' → logprob: -21.875335693359375
    5. '	line' → logprob: -22.625335693359375
    6. ' len' → logprob: -22.750335693359375
    7. '   ' → logprob: -23.125335693359375
    8. ' ' → logprob: -23.375335693359375
    9. '[line' → logprob: -24.375335693359375
    10. '=line' → logprob: -24.875335693359375

Token 512: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003168456256389618
    2. ']!=' → logprob: -6.50316858291626
    3. '!=' → logprob: -6.62816858291626
    4. '.strip' → logprob: -8.503168106079102
    5. ' !=' → logprob: -10.253168106079102
    6. ']!='' → logprob: -10.503168106079102
    7. '!='' → logprob: -10.878168106079102
    8. ']>' → logprob: -10.878168106079102
    9. '!="' → logprob: -11.253168106079102
    10. '<|end|>' → logprob: -11.753168106079102

Token 513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40943384170532227
    2. 'maps' → logprob: -1.1594338417053223
    3. ' maps' → logprob: -4.284433841705322
    4. 'matrix' → logprob: -5.284433841705322
    5. 'map' → logprob: -7.034433841705322
    6. '    
' → logprob: -7.909433841705322
    7. 'm' → logprob: -7.909433841705322
    8. ' matrices' → logprob: -8.034433364868164
    9. '_maps' → logprob: -8.284433364868164
    10. '
' → logprob: -8.409433364868164

Token 514: ' m' (ID: 284)
  Prédit: 'maps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maps' → logprob: -0.2917015850543976
    2. 'mat' → logprob: -1.6667015552520752
    3. 'matrix' → logprob: -3.041701555252075
    4. 'i' → logprob: -5.416701793670654
    5. '   ' → logprob: -5.666701793670654
    6. ' matrices' → logprob: -6.416701793670654
    7. 'index' → logprob: -6.666701793670654
    8. 'map' → logprob: -6.791701793670654
    9. ' maps' → logprob: -6.791701793670654
    10. 'current' → logprob: -6.791701793670654

Token 515: ' =' (ID: 314)
  Prédit: 'aps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.03249632194638252
    2. 'atrix' → logprob: -4.282496452331543
    3. 'ap' → logprob: -4.407496452331543
    4. 'atrices' → logprob: -5.532496452331543
    5. ' =' → logprob: -6.407496452331543
    6. '=' → logprob: -8.657496452331543
    7. 'a' → logprob: -8.782496452331543
    8. '   ' → logprob: -11.657496452331543
    9. 'at' → logprob: -11.907496452331543
    10. 'ats' → logprob: -12.032496452331543

Token 516: ' int' (ID: 677)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6607730984687805
    2. 'int' → logprob: -0.9107730984687805
    3. '[]' → logprob: -2.9107730388641357
    4. '5' → logprob: -4.160773277282715
    5. '0' → logprob: -4.910773277282715
    6. ' []' → logprob: -6.660773277282715
    7. '1' → logprob: -6.785773277282715
    8. '{}' → logprob: -7.660773277282715
    9. '[int' → logprob: -7.785773277282715
    10. ' len' → logprob: -8.160773277282715

Token 517: '(filtered' (ID: 143028)
  Prédit: '(filtered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(filtered' → logprob: -0.00020413640595506877
    2. 'filtered' → logprob: -8.500204086303711
    3. '(' → logprob: -15.000204086303711
    4. ' filtered' → logprob: -15.375204086303711
    5. '(filter' → logprob: -17.12520408630371
    6. '_filtered' → logprob: -17.62520408630371
    7. 'Filtered' → logprob: -17.62520408630371
    8. '(filters' → logprob: -18.62520408630371
    9. '(lines' → logprob: -19.50020408630371
    10. '(sorted' → logprob: -20.00020408630371

Token 518: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.5909561514854431
    2. 'filtered' → logprob: -1.340956211090088
    3. '(filtered' → logprob: -1.715956211090088
    4. 'lines' → logprob: -5.840956211090088
    5. 'Lines' → logprob: -6.840956211090088
    6. '_filtered' → logprob: -8.21595573425293
    7. 'user' → logprob: -8.71595573425293
    8. ')' → logprob: -9.21595573425293
    9. '[' → logprob: -9.34095573425293
    10. '()' → logprob: -9.71595573425293

Token 519: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. ')' → logprob: -16.00001335144043
    4. ' [' → logprob: -16.62501335144043
    5. '0' → logprob: -17.75001335144043
    6. '[-' → logprob: -18.00001335144043
    7. '```' → logprob: -18.75001335144043
    8. '[m' → logprob: -18.87501335144043
    9. '([' → logprob: -19.12501335144043
    10. '\[' → logprob: -19.12501335144043

Token 520: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.394135612528771e-05
    2. ' ' → logprob: -10.750043869018555
    3. '[' → logprob: -10.750043869018555
    4. '   ' → logprob: -14.500043869018555
    5. '(' → logprob: -16.000043869018555
    6. '1' → logprob: -16.250043869018555
    7. ']' → logprob: -16.500043869018555
    8. '```' → logprob: -16.750043869018555
    9. ')' → logprob: -17.125043869018555
    10. '
' → logprob: -17.187543869018555

Token 521: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.25546637177467346
    2. ')' → logprob: -1.505466341972351
    3. '])
' → logprob: -6.380466461181641
    4. ')
' → logprob: -6.380466461181641
    5. ']' → logprob: -9.38046646118164
    6. '])-' → logprob: -11.25546646118164
    7. ' ])' → logprob: -11.88046646118164
    8. ')])' → logprob: -12.00546646118164
    9. ')]' → logprob: -12.00546646118164
    10. '])+' → logprob: -12.25546646118164

Token 522: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010402463376522064
    2. '<|end|>' → logprob: -5.010402679443359
    3. '
' → logprob: -5.885402679443359
    4. '    
' → logprob: -8.38540267944336
    5. 'index' → logprob: -8.63540267944336
    6. '<|end|>' → logprob: -9.01040267944336
    7. 'idx' → logprob: -9.13540267944336
    8. '\n' → logprob: -9.51040267944336
    9. ' lines' → logprob: -10.26040267944336
    10. 'rows' → logprob: -11.38540267944336

Token 523: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06154194474220276
    2. 'idx' → logprob: -3.06154203414917
    3. 'index' → logprob: -5.18654203414917
    4. 'current' → logprob: -5.68654203414917
    5. 'line' → logprob: -6.31154203414917
    6. 'i' → logprob: -6.81154203414917
    7. 'lines' → logprob: -8.561541557312012
    8. ' idx' → logprob: -9.061541557312012
    9. 'start' → logprob: -9.186541557312012
    10. 'pos' → logprob: -9.311541557312012

Token 524: ' number' (ID: 2086)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8912981748580933
    2. ' map' → logprob: -2.141298294067383
    3. ' num' → logprob: -2.141298294067383
    4. ' number' → logprob: -2.266298294067383
    5. 'num' → logprob: -2.641298294067383
    6. ' current' → logprob: -2.766298294067383
    7. ' start' → logprob: -3.141298294067383
    8. ' index' → logprob: -3.266298294067383
    9. ' ' → logprob: -3.516298294067383
    10. ' m' → logprob: -3.641298294067383

Token 525: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 526: ' maps' (ID: 24267)
  Prédit: 'maps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maps' → logprob: -0.008265743963420391
    2. ' maps' → logprob: -5.258265972137451
    3. 'test' → logprob: -6.383265972137451
    4. ' test' → logprob: -7.383265972137451
    5. 'cases' → logprob: -8.008265495300293
    6. '_maps' → logprob: -9.008265495300293
    7. 'mat' → logprob: -9.633265495300293
    8. 'datasets' → logprob: -9.758265495300293
    9. 'map' → logprob: -10.133265495300293
    10. 'tests' → logprob: -10.633265495300293

Token 527: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21147510409355164
    2. '
' → logprob: -2.086475133895874
    3. 'idx' → logprob: -3.961475133895874
    4. '<|end|>' → logprob: -4.211474895477295
    5. 'index' → logprob: -4.586474895477295
    6. '\n' → logprob: -5.086474895477295
    7. ' lines' → logprob: -5.836474895477295
    8. 'i' → logprob: -6.211474895477295
    9. ' idx' → logprob: -6.461474895477295
    10. '    
' → logprob: -6.586474895477295

Token 528: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042538564652204514
    2. 'index' → logprob: -4.292538642883301
    3. 'idx' → logprob: -4.417538642883301
    4. '
' → logprob: -4.917538642883301
    5. 'current' → logprob: -6.042538642883301
    6. 'line' → logprob: -6.167538642883301
    7. '```' → logprob: -6.667538642883301
    8. 'lines' → logprob: -7.792538642883301
    9. ' index' → logprob: -7.917538642883301
    10. ' lines' → logprob: -7.917538642883301

Token 529: ' idx' (ID: 14016)
  Prédit: 'maps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maps' → logprob: -1.4449430704116821
    2. 'idx' (adapté à ' idx') → logprob: -1.5699430704116821
    3. ' maps' → logprob: -1.5699430704116821
    4. 'current' → logprob: -2.1949429512023926
    5. 'pos' → logprob: -2.5699429512023926
    6. ' idx' → logprob: -3.0699429512023926
    7. ' current' → logprob: -3.4449429512023926
    8. '   ' → logprob: -3.5699429512023926
    9. 'index' → logprob: -4.194942951202393
    10. ' pos' → logprob: -4.444942951202393

Token 530: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889155298471451
    2. '=' → logprob: -2.5788915157318115
    3. ' +=' → logprob: -13.32889175415039
    4. '+=' → logprob: -15.95389175415039
    5. ' ' → logprob: -16.57889175415039
    6. ' =
' → logprob: -19.07889175415039
    7. '```' → logprob: -19.32889175415039
    8. 's' → logprob: -19.70389175415039
    9. '   ' → logprob: -20.20389175415039
    10. '1' → logprob: -20.32889175415039

Token 531: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.500035285949707
    4. '```' → logprob: -18.625036239624023
    5. '  ' → logprob: -18.750036239624023
    6. '    ' → logprob: -19.937536239624023
    7. '=' → logprob: -20.500036239624023
    8. '１' → logprob: -21.062536239624023
    9. '۱' → logprob: -21.500036239624023
    10. '' → logprob: -21.750036239624023

Token 532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.25
    4. '  ' → logprob: -20.5
    5. '```' → logprob: -20.75
    6. '    ' → logprob: -21.6875
    7. '2' → logprob: -21.8125
    8. '۱' → logprob: -21.875
    9. '=' → logprob: -21.875
    10. '１' → logprob: -22.0625

Token 533: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08118502050638199
    2. '   ' → logprob: -2.5811851024627686
    3. '    
' → logprob: -7.0811848640441895
    4. '<|end|>' → logprob: -7.4561848640441895
    5. 'for' → logprob: -7.9561848640441895
    6. '  
' → logprob: -8.206185340881348
    7. ' for' → logprob: -9.081185340881348
    8. '   
' → logprob: -10.081185340881348
    9. 'while' → logprob: -10.956185340881348
    10. '```' → logprob: -11.206185340881348

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4969572424888611
    2. '
' → logprob: -1.1219573020935059
    3. 'maps' → logprob: -3.246957302093506
    4. 'for' → logprob: -4.496957302093506
    5. '    
' → logprob: -5.121957302093506
    6. ' maps' → logprob: -5.871957302093506
    7. 'results' → logprob: -6.121957302093506
    8. 'while' → logprob: -6.621957302093506
    9. ' for' → logprob: -7.496957302093506
    10. 'result' → logprob: -7.496957302093506

Token 535: ' results' (ID: 4376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31353652477264404
    2. 'results' (adapté à ' results') → logprob: -1.813536524772644
    3. 'maps' → logprob: -2.8135366439819336
    4. ' for' → logprob: -3.9385366439819336
    5. 'result' → logprob: -4.563536643981934
    6. '   ' → logprob: -4.938536643981934
    7. '
' → logprob: -5.688536643981934
    8. ' results' → logprob: -5.813536643981934
    9. ' maps' → logprob: -6.563536643981934
    10. 'while' → logprob: -7.813536643981934

Token 536: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602267622947693
    2. '=' → logprob: -1.910226821899414
    3. '=[]' → logprob: -12.910226821899414
    4. '[]' → logprob: -16.785226821899414
    5. '=[]
' → logprob: -17.285226821899414
    6. ' ' → logprob: -17.660226821899414
    7. ',' → logprob: -18.410226821899414
    8. '.' → logprob: -19.285226821899414
    9. '[' → logprob: -19.785226821899414
    10. ':' → logprob: -20.160226821899414

Token 537: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004086116328835487
    2. ' []' → logprob: -5.504086017608643
    3. '[]
' → logprob: -12.3790864944458
    4. '[' → logprob: -12.6290864944458
    5. '[]}' → logprob: -16.879085540771484
    6. '[]"' → logprob: -17.129085540771484
    7. '=[]' → logprob: -17.129085540771484
    8. ' []
' → logprob: -17.254085540771484
    9. '[])' → logprob: -17.254085540771484
    10. '   ' → logprob: -17.379085540771484

Token 538: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5558947920799255
    2. '   ' → logprob: -1.5558948516845703
    3. '
' → logprob: -2.0558948516845703
    4. 'while' → logprob: -2.8058948516845703
    5. ' for' → logprob: -4.18089485168457
    6. '    
' → logprob: -4.80589485168457
    7. ' while' → logprob: -6.68089485168457
    8. '```' → logprob: -7.55589485168457
    9. '	for' → logprob: -7.68089485168457
    10. '	while' → logprob: -8.18089485168457

Token 539: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006735622882843018
    2. 'while' → logprob: -5.006735801696777
    3. ' for' → logprob: -11.256735801696777
    4. '   ' → logprob: -11.881735801696777
    5. '
' → logprob: -15.631735801696777
    6. ' while' → logprob: -15.756735801696777
    7. '```' → logprob: -17.88173484802246
    8. '	for' → logprob: -18.00673484802246
    9. '    
' → logprob: -19.00673484802246
    10. 'from' → logprob: -19.63173484802246

Token 540: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006844899617135525
    2. ' _' → logprob: -5.006844997406006
    3. '_map' → logprob: -9.131844520568848
    4. 'i' → logprob: -12.256844520568848
    5. ' map' → logprob: -12.506844520568848
    6. '_i' → logprob: -13.131844520568848
    7. ' i' → logprob: -13.131844520568848
    8. '_maps' → logprob: -13.131844520568848
    9. 'map' → logprob: -13.381844520568848
    10. '_m' → logprob: -13.381844520568848

Token 541: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0693013072013855
    2. 'in' → logprob: -2.8193013668060303
    3. 'range' → logprob: -4.944301128387451
    4. ' range' → logprob: -8.69430160522461
    5. 'm' → logprob: -11.94430160522461
    6. ' ' → logprob: -12.06930160522461
    7. 's' → logprob: -14.81930160522461
    8. '  ' → logprob: -14.94430160522461
    9. 'i' → logprob: -14.94430160522461
    10. '_' → logprob: -15.19430160522461

Token 542: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. 'm' → logprob: -18.12507438659668
    4. '(range' → logprob: -18.12507438659668
    5. '	range' → logprob: -18.25007438659668
    6. '
' → logprob: -18.75007438659668
    7. '   ' → logprob: -19.25007438659668
    8. '```' → logprob: -19.37507438659668
    9. '_range' → logprob: -19.50007438659668
    10. '0' → logprob: -20.12507438659668

Token 543: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0031975586898624897
    2. 'm' → logprob: -6.37819766998291
    3. ' m' → logprob: -7.12819766998291
    4. ' (' → logprob: -7.75319766998291
    5. '(' → logprob: -8.25319766998291
    6. '(
' → logprob: -14.37819766998291
    7. ',' → logprob: -15.00319766998291
    8. '(len' → logprob: -15.25319766998291
    9. '(range' → logprob: -15.50319766998291
    10. 'range' → logprob: -15.75319766998291

Token 544: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24257640540599823
    2. ':' → logprob: -1.6175763607025146
    3. '):
' → logprob: -4.742576599121094
    4. '   ' → logprob: -5.117576599121094
    5. ',' → logprob: -6.992576599121094
    6. '       ' → logprob: -7.742576599121094
    7. ')' → logprob: -7.867576599121094
    8. ':
' → logprob: -8.367576599121094
    9. '<|end|>' → logprob: -8.742576599121094
    10. '():' → logprob: -9.367576599121094

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006971347611397505
    2. '   ' → logprob: -5.13197135925293
    3. '<|end|>' → logprob: -7.13197135925293
    4. '        
' → logprob: -9.50697135925293
    5. ',' → logprob: -10.63197135925293
    6. '#' → logprob: -11.00697135925293
    7. '```' → logprob: -11.25697135925293
    8. '    ' → logprob: -11.50697135925293
    9. '<|end|>' → logprob: -11.50697135925293
    10. '
' → logprob: -11.63197135925293

Token 546: ' #' (ID: 1069)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.0055044605396687984
    2. ' matrix' → logprob: -5.880504608154297
    3. '   ' → logprob: -6.380504608154297
    4. '       ' → logprob: -7.255504608154297
    5. 'size' → logprob: -9.130504608154297
    6. '5' → logprob: -9.755504608154297
    7. 'grid' → logprob: -9.880504608154297
    8. 'map' → logprob: -10.755504608154297
    9. 'n' → logprob: -10.880504608154297
    10. 'rows' → logprob: -11.130504608154297

Token 547: ' Each' (ID: 11555)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.0033516634721308947
    2. 'size' → logprob: -6.00335168838501
    3. ' matrix' → logprob: -7.62835168838501
    4. '   ' → logprob: -8.378351211547852
    5. 'n' → logprob: -9.753351211547852
    6. 'rows' → logprob: -10.003351211547852
    7. 'map' → logprob: -11.128351211547852
    8. 'grid' → logprob: -11.128351211547852
    9. 'current' → logprob: -12.003351211547852
    10. '       ' → logprob: -12.128351211547852

Token 548: ' map' (ID: 4014)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.06180195137858391
    2. ' matrix' → logprob: -3.0618019104003906
    3. '5' → logprob: -5.061801910400391
    4. 'map' → logprob: -5.686801910400391
    5. '25' → logprob: -7.061801910400391
    6. 'grid' → logprob: -7.311801910400391
    7. '   ' → logprob: -7.686801910400391
    8. ' map' → logprob: -8.06180191040039
    9. 'size' → logprob: -8.31180191040039
    10. '#' → logprob: -8.43680191040039

Token 549: ' has' (ID: 853)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.09957429766654968
    2. '_matrix' → logprob: -2.724574327468872
    3. ' matrix' → logprob: -3.849574327468872
    4. '       ' → logprob: -5.724574089050293
    5. ' =' → logprob: -6.099574089050293
    6. '   ' → logprob: -6.724574089050293
    7. '=' → logprob: -8.349574089050293
    8. 'rows' → logprob: -8.724574089050293
    9. '_lines' → logprob: -8.974574089050293
    10. 'mat' → logprob: -9.099574089050293

Token 550: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0002067588793579489
    2. '25' → logprob: -9.37520694732666
    3. 'matrix' → logprob: -10.12520694732666
    4. ' ' → logprob: -10.25020694732666
    5. 'a' → logprob: -11.00020694732666
    6. 'size' → logprob: -12.37520694732666
    7. 'lines' → logprob: -12.37520694732666
    8. 'rows' → logprob: -12.62520694732666
    9. '[]' → logprob: -12.62520694732666
    10. 'next' → logprob: -12.75020694732666

Token 551: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0009088410879485309
    2. 'matrix' → logprob: -7.250908851623535
    3. 'a' → logprob: -9.375908851623535
    4. '[]' → logprob: -10.250908851623535
    5. ' ' → logprob: -10.500908851623535
    6. '25' → logprob: -10.625908851623535
    7. '[][]' → logprob: -11.750908851623535
    8. ' matrix' → logprob: -12.750908851623535
    9. 'next' → logprob: -13.000908851623535
    10. '[' → logprob: -13.000908851623535

Token 552: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.8517571687698364
    2. 'lines' → logprob: -0.8517571687698364
    3. 'rows' → logprob: -1.9767571687698364
    4. '<|end|>' → logprob: -5.976757049560547
    5. ' rows' → logprob: -6.226757049560547
    6. 'matrix' → logprob: -6.476757049560547
    7. 'for' → logprob: -6.976757049560547
    8. '_lines' → logprob: -8.101757049560547
    9. 'x' → logprob: -8.476757049560547
    10. ' matrix' → logprob: -9.101757049560547

Token 553: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002472089836373925
    2. '<|end|>' → logprob: -6.377471923828125
    3. ' for' → logprob: -8.002471923828125
    4. ',' → logprob: -9.127471923828125
    5. 'matrix' → logprob: -9.252471923828125
    6. 'for' → logprob: -9.252471923828125
    7. 'rows' → logprob: -10.252471923828125
    8. '   ' → logprob: -10.877471923828125
    9. '<|end|>' → logprob: -11.377471923828125
    10. '        
' → logprob: -11.627471923828125

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.400689305039123e-05
    2. '   ' → logprob: -10.750094413757324
    3. '<|end|>' → logprob: -10.750094413757324
    4. 'for' → logprob: -11.250094413757324
    5. '        
' → logprob: -11.750094413757324
    6. '
' → logprob: -11.750094413757324
    7. ' for' → logprob: -11.875094413757324
    8. '           ' → logprob: -12.750094413757324
    9. 'def' → logprob: -13.125094413757324
    10. ',' → logprob: -13.250094413757324

Token 555: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.05519954487681389
    2. '       ' → logprob: -3.30519962310791
    3. 'grid' → logprob: -4.93019962310791
    4. ' matrix' → logprob: -5.30519962310791
    5. 'map' → logprob: -5.43019962310791
    6. 'rows' → logprob: -8.18019962310791
    7. '   ' → logprob: -9.93019962310791
    8. 'mat' → logprob: -10.30519962310791
    9. ' grid' → logprob: -10.80519962310791
    10. ' map' → logprob: -11.55519962310791

Token 556: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1271020770072937
    2. '=' → logprob: -2.1271021366119385
    3. '=[]' → logprob: -8.75210189819336
    4. '   ' → logprob: -11.37710189819336
    5. '=[]
' → logprob: -12.75210189819336
    6. '[]' → logprob: -15.25210189819336
    7. '       ' → logprob: -15.25210189819336
    8. '=[]
' → logprob: -15.37710189819336
    9. '=[' → logprob: -15.50210189819336
    10. '    ' → logprob: -16.00210189819336

Token 557: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30430105328559875
    2. '[]' → logprob: -2.0543010234832764
    3. ' [' → logprob: -2.5543010234832764
    4. '[]
' → logprob: -3.0543010234832764
    5. '[
' → logprob: -6.0543012619018555
    6. '[[' → logprob: -6.0543012619018555
    7. ' []' → logprob: -6.0543012619018555
    8. '[list' → logprob: -7.5543012619018555
    9. '[array' → logprob: -7.9293012619018555
    10. '[line' → logprob: -8.429301261901855

Token 558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009827983565628529
    2. '<|end|>' → logprob: -5.134828090667725
    3. ' for' → logprob: -5.759828090667725
    4. 'for' → logprob: -7.634828090667725
    5. '<|end|>' → logprob: -9.259827613830566
    6. '   ' → logprob: -9.384827613830566
    7. '	' → logprob: -11.009827613830566
    8. '
' → logprob: -11.259827613830566
    9. '        
' → logprob: -11.884827613830566
    10. '[' → logprob: -12.134827613830566

Token 559: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31821408867836
    2. '       ' → logprob: -1.3182140588760376
    3. ' for' → logprob: -5.318213939666748
    4. '   ' → logprob: -10.318214416503906
    5. 'while' → logprob: -12.568214416503906
    6. '	for' → logprob: -13.693214416503906
    7. '           ' → logprob: -14.193214416503906
    8. ' ' → logprob: -15.818214416503906
    9. '	   ' → logprob: -17.193214416503906
    10. '```' → logprob: -17.318214416503906

Token 560: ' _' (ID: 1175)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44346731901168823
    2. '_' → logprob: -1.943467378616333
    3. ' i' → logprob: -2.443467378616333
    4. ' _' → logprob: -2.818467378616333
    5. '__' → logprob: -3.068467378616333
    6. '_i' → logprob: -4.068467140197754
    7. ' __' → logprob: -5.568467140197754
    8. '___' → logprob: -7.943467140197754
    9. ' ' → logprob: -8.318467140197754
    10. '5' → logprob: -8.943467140197754

Token 561: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7996399998664856
    2. ' in' → logprob: -0.7996399998664856
    3. 'range' → logprob: -2.299639940261841
    4. ' range' → logprob: -7.42464017868042
    5. 'i' → logprob: -9.299639701843262
    6. 'idx' → logprob: -11.174639701843262
    7. ' ' → logprob: -11.549639701843262
    8. '_' → logprob: -12.174639701843262
    9. '   ' → logprob: -12.674639701843262
    10. '  ' → logprob: -13.424639701843262

Token 562: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '	range' → logprob: -19.62520408630371
    4. '   ' → logprob: -19.75020408630371
    5. '(range' → logprob: -20.00020408630371
    6. ' ' → logprob: -20.25020408630371
    7. '5' → logprob: -20.87520408630371
    8. '  ' → logprob: -21.50020408630371
    9. '    ' → logprob: -22.37520408630371
    10. '[' → logprob: -22.75020408630371

Token 563: '(' (ID: 7)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0011154505191370845
    2. ' ' → logprob: -7.001115322113037
    3. '(' → logprob: -8.501115798950195
    4. '   ' → logprob: -14.251115798950195
    5. ' five' → logprob: -17.126115798950195
    6. '    ' → logprob: -18.626115798950195
    7. '  ' → logprob: -19.126115798950195
    8. ' (' → logprob: -19.626115798950195
    9. ' vijf' → logprob: -20.501115798950195
    10. ' cinco' → logprob: -21.001115798950195

Token 564: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -16.625
    4. '```' → logprob: -19.375
    5. ')' → logprob: -19.875
    6. '۵' → logprob: -20.75
    7. '٥' → logprob: -20.75
    8. 'five' → logprob: -21.4375
    9. '    ' → logprob: -21.5625
    10. '  ' → logprob: -21.5625

Token 565: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08053146302700043
    2. '):' → logprob: -2.705531358718872
    3. ':' → logprob: -5.080531597137451
    4. ':
' → logprob: -5.830531597137451
    5. '       ' → logprob: -7.455531597137451
    6. '           ' → logprob: -8.205531120300293
    7. '):
' → logprob: -8.330531120300293
    8. '():
' → logprob: -9.330531120300293
    9. '   ' → logprob: -9.705531120300293
    10. '<|end|>' → logprob: -10.080531120300293

Token 566: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005617309361696243
    2. '       ' → logprob: -8.125561714172363
    3. '	       ' → logprob: -9.375561714172363
    4. '<|end|>' → logprob: -9.375561714172363
    5. '<|end|>' → logprob: -10.625561714172363
    6. ' line' → logprob: -10.875561714172363
    7. 'tokens' → logprob: -11.875561714172363
    8. ',' → logprob: -12.125561714172363
    9. '          ' → logprob: -12.625561714172363
    10. '```' → logprob: -12.625561714172363

Token 567: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.38631483912467957
    2. 'line' → logprob: -2.136314868927002
    3. ' row' → logprob: -2.386314868927002
    4. 'matrix' → logprob: -2.386314868927002
    5. ' line' → logprob: -4.636314868927002
    6. ' matrix' → logprob: -5.386314868927002
    7. '           ' → logprob: -5.761314868927002
    8. 'numbers' → logprob: -7.636314868927002
    9. 'nums' → logprob: -8.511314392089844
    10. 'values' → logprob: -9.386314392089844

Token 568: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008370272698812187
    2. '=' → logprob: -7.1258368492126465
    3. '_tokens' → logprob: -11.500837326049805
    4. '_values' → logprob: -12.125837326049805
    5. '_line' → logprob: -12.500837326049805
    6. '           ' → logprob: -12.625837326049805
    7. '=line' → logprob: -12.875837326049805
    8. '_vals' → logprob: -13.125837326049805
    9. '_data' → logprob: -13.625837326049805
    10. '   ' → logprob: -13.875837326049805

Token 569: ' filtered' (ID: 31972)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00013786651834379882
    2. '[list' → logprob: -9.250138282775879
    3. '[' → logprob: -10.750138282775879
    4. ' list' → logprob: -11.500138282775879
    5. 'filtered' → logprob: -11.500138282775879
    6. ' [' → logprob: -18.000137329101562
    7. '=list' → logprob: -18.250137329101562
    8. '(list' → logprob: -18.250137329101562
    9. '[List' → logprob: -19.875137329101562
    10. 'tuple' → logprob: -20.500137329101562

Token 570: '_lines' (ID: 42980)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06433878093957901
    2. '().' → logprob: -3.8143386840820312
    3. 'strip' → logprob: -4.314338684082031
    4. '_lines' → logprob: -4.439338684082031
    5. '.split' → logprob: -5.189338684082031
    6. 'line' → logprob: -6.064338684082031
    7. '(split' → logprob: -6.189338684082031
    8. 'lines' → logprob: -7.314338684082031
    9. '()' → logprob: -7.439338684082031
    10. 'filter' → logprob: -7.689338684082031

Token 571: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.277553620748222e-05
    2. 'idx' → logprob: -9.750062942504883
    3. '           ' → logprob: -13.500062942504883
    4. '(idx' → logprob: -14.000062942504883
    5. '       ' → logprob: -14.250062942504883
    6. '[' → logprob: -14.875062942504883
    7. '   ' → logprob: -15.125062942504883
    8. ' idx' → logprob: -15.125062942504883
    9. '[index' → logprob: -15.250062942504883
    10. '[id' → logprob: -16.750062942504883

Token 572: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00012821101699955761
    2. ']' → logprob: -9.125127792358398
    3. '.split' → logprob: -11.625127792358398
    4. ' ].' → logprob: -11.750127792358398
    5. ']
' → logprob: -14.000127792358398
    6. ').' → logprob: -14.375127792358398
    7. '()].' → logprob: -15.250127792358398
    8. '][' → logprob: -15.750127792358398
    9. ''].' → logprob: -15.875127792358398
    10. '().' → logprob: -16.2501277923584

Token 573: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.5597102396423e-05
    2. 'strip' → logprob: -10.250035285949707
    3. 'replace' → logprob: -15.750035285949707
    4. ' split' → logprob: -18.000036239624023
    5. 'rstrip' → logprob: -18.500036239624023
    6. 'spl' → logprob: -21.500036239624023
    7. '.split' → logprob: -21.500036239624023
    8. '_split' → logprob: -22.375036239624023
    9. '(split' → logprob: -24.750036239624023
    10. 'Split' → logprob: -24.875036239624023

Token 574: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005087109748274088
    2. '('' → logprob: -7.625508785247803
    3. '(' → logprob: -11.500508308410645
    4. '())' → logprob: -12.875508308410645
    5. '()
' → logprob: -13.625508308410645
    6. '()]' → logprob: -13.625508308410645
    7. '()?>' → logprob: -13.750508308410645
    8. '()[' → logprob: -14.125508308410645
    9. '()='' → logprob: -14.250508308410645
    10. '<|end|>' → logprob: -14.500508308410645

Token 575: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26206037402153015
    2. 'idx' → logprob: -1.5120604038238525
    3. '[idx' → logprob: -4.887060165405273
    4. '               ' → logprob: -7.512060165405273
    5. 'tokens' → logprob: -7.637060165405273
    6. ' idx' → logprob: -8.512060165405273
    7. '[' → logprob: -8.512060165405273
    8. '<|end|>' → logprob: -8.512060165405273
    9. '(idx' → logprob: -8.637060165405273
    10. '       ' → logprob: -8.887060165405273

Token 576: ' idx' (ID: 14016)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.6308344602584839
    2. 'idx' (adapté à ' idx') → logprob: -1.3808344602584839
    3. '           ' → logprob: -2.1308345794677734
    4. 'row' → logprob: -2.3808345794677734
    5. ' matrix' → logprob: -6.130834579467773
    6. 'he' → logprob: -6.505834579467773
    7. '       ' → logprob: -7.255834579467773
    8. ' idx' → logprob: -8.130834579467773
    9. ' row' → logprob: -8.255834579467773
    10. 'int' → logprob: -9.130834579467773

Token 577: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005371310282498598
    2. ' +=' → logprob: -5.25537109375
    3. '+' → logprob: -9.00537109375
    4. '++' → logprob: -12.25537109375
    5. ']+=' → logprob: -12.25537109375
    6. ')' → logprob: -14.00537109375
    7. '=' → logprob: -14.00537109375
    8. '<|end|>' → logprob: -14.13037109375
    9. '           ' → logprob: -14.25537109375
    10. '```' → logprob: -14.75537109375

Token 578: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.500001907348633
    4. '   ' → logprob: -20.375001907348633
    5. '<|end|>' → logprob: -22.625001907348633
    6. '۱' → logprob: -22.750001907348633
    7. '0' → logprob: -22.875001907348633
    8. '+' → logprob: -23.250001907348633
    9. '１' → logprob: -23.562501907348633
    10. '=' → logprob: -23.875001907348633

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '5' → logprob: -16.375
    4. '```' → logprob: -18.25
    5. '   ' → logprob: -20.375
    6. '0' → logprob: -21.5
    7. '１' → logprob: -22.625
    8. '-' → logprob: -23.0
    9. '  ' → logprob: -23.25
    10. '(' → logprob: -23.375

Token 580: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02539406158030033
    2. '           ' → logprob: -4.025393962860107
    3. 'matrix' → logprob: -5.275393962860107
    4. 'row' → logprob: -6.650393962860107
    5. '[' → logprob: -7.900393962860107
    6. ' matrix' → logprob: -8.650394439697266
    7. '   ' → logprob: -9.275394439697266
    8. '[row' → logprob: -9.900394439697266
    9. '```' → logprob: -10.775394439697266
    10. ',' → logprob: -10.900394439697266

Token 581: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47599315643310547
    2. '           ' → logprob: -0.9759931564331055
    3. 'matrix' → logprob: -6.3509931564331055
    4. '   ' → logprob: -9.100993156433105
    5. ' matrix' → logprob: -10.100993156433105
    6. '```' → logprob: -12.100993156433105
    7. '[' → logprob: -12.225993156433105
    8. 'row' → logprob: -13.475993156433105
    9. ',' → logprob: -14.475993156433105
    10. '	matrix' → logprob: -14.600993156433105

Token 582: ' #' (ID: 1069)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.1685890555381775
    2. 'row' → logprob: -1.9185891151428223
    3. ' matrix' → logprob: -5.293589115142822
    4. '           ' → logprob: -5.918589115142822
    5. ' row' → logprob: -7.543589115142822
    6. '       ' → logprob: -10.293588638305664
    7. '   ' → logprob: -11.293588638305664
    8. 'int' → logprob: -11.793588638305664
    9. 'numbers' → logprob: -11.918588638305664
    10. '#' (adapté à ' #') → logprob: -12.543588638305664

Token 583: ' Convert' (ID: 15629)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.19070690870285034
    2. 'row' → logprob: -1.8157069683074951
    3. ' matrix' → logprob: -4.690706729888916
    4. ' row' → logprob: -6.440706729888916
    5. '           ' → logprob: -9.315707206726074
    6. 'map' → logprob: -11.565707206726074
    7. 'int' → logprob: -12.065707206726074
    8. 'nums' → logprob: -12.440707206726074
    9. 'numbers' → logprob: -12.440707206726074
    10. 'vector' → logprob: -13.315707206726074

Token 584: ' each' (ID: 2454)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.004688692279160023
    2. ' row' → logprob: -6.004688739776611
    3. 'list' → logprob: -6.879688739776611
    4. '[row' → logprob: -7.504688739776611
    5. 'to' → logprob: -8.129688262939453
    6. '(row' → logprob: -8.754688262939453
    7. ' to' → logprob: -9.879688262939453
    8. 'map' → logprob: -10.254688262939453
    9. 'int' → logprob: -10.629688262939453
    10. ' list' → logprob: -11.129688262939453

Token 585: ' element' (ID: 3577)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.02682361751794815
    2. 'element' → logprob: -4.0268235206604
    3. ' token' → logprob: -5.4018235206604
    4. 'int' → logprob: -6.6518235206604
    5. 'value' → logprob: -7.0268235206604
    6. 'cell' → logprob: -7.1518235206604
    7. 'x' → logprob: -8.151823997497559
    8. 'item' → logprob: -8.151823997497559
    9. ' element' → logprob: -8.276823997497559
    10. 'elem' → logprob: -8.901823997497559

Token 586: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.09585165977478027
    2. ' to' → logprob: -2.4708516597747803
    3. 'int' → logprob: -5.720851898193359
    4. '           ' → logprob: -6.595851898193359
    5. 'into' → logprob: -7.220851898193359
    6. '(int' → logprob: -7.345851898193359
    7. ' into' → logprob: -7.845851898193359
    8. '=' → logprob: -9.09585189819336
    9. '_to' → logprob: -9.09585189819336
    10. '=int' → logprob: -9.22085189819336

Token 587: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.512236498361744e-07
    2. ' int' → logprob: -14.500000953674316
    3. 'integer' → logprob: -19.0
    4. '```' → logprob: -20.875
    5. '[int' → logprob: -21.125
    6. '=int' → logprob: -21.25
    7. '<int' → logprob: -21.25
    8. '(int' → logprob: -21.5
    9. '	int' → logprob: -23.0
    10. 'inte' → logprob: -23.375

Token 588: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23421774804592133
    2. '(row' → logprob: -1.8592177629470825
    3. 'row' → logprob: -3.984217643737793
    4. ')' → logprob: -4.984217643737793
    5. '[' → logprob: -5.109217643737793
    6. '(' → logprob: -5.234217643737793
    7. ',' → logprob: -5.359217643737793
    8. '[row' → logprob: -5.609217643737793
    9. '               ' → logprob: -6.734217643737793
    10. '(int' → logprob: -6.859217643737793

Token 589: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0023452038876712322
    2. ')' → logprob: -6.752345085144043
    3. ' int' → logprob: -6.877345085144043
    4. 'map' → logprob: -9.627345085144043
    5. '           ' → logprob: -10.877345085144043
    6. '               ' → logprob: -11.127345085144043
    7. '0' → logprob: -11.252345085144043
    8. '[int' → logprob: -11.627345085144043
    9. 'num' → logprob: -12.627345085144043
    10. 'val' → logprob: -12.752345085144043

Token 590: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07187412679195404
    2. ' or' → logprob: -3.1968741416931152
    3. ' if' → logprob: -4.571874141693115
    4. 'if' → logprob: -4.571874141693115
    5. ',' → logprob: -5.696874141693115
    6. 'or' → logprob: -6.321874141693115
    7. '           ' → logprob: -6.321874141693115
    8. ' )' → logprob: -9.071873664855957
    9. '<|end|>' → logprob: -9.196873664855957
    10. ')
' → logprob: -9.571873664855957

Token 591: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.875335693359375
    4. '  ' → logprob: -19.000335693359375
    5. 'int' → logprob: -19.250335693359375
    6. ' ' → logprob: -20.000335693359375
    7. ')' → logprob: -20.375335693359375
    8. '0' → logprob: -20.750335693359375
    9. '```' → logprob: -20.750335693359375
    10. '
' → logprob: -21.875335693359375

Token 592: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. 'int' → logprob: -16.75
    4. '```' → logprob: -19.375
    5. '   ' → logprob: -19.75
    6. '
' → logprob: -19.875
    7. '0' → logprob: -20.125
    8. ')' → logprob: -20.625
    9. '  ' → logprob: -21.0
    10. '``' → logprob: -21.875

Token 593: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0278469230979681
    2. '           ' → logprob: -3.7778468132019043
    3. ')
' → logprob: -5.402846813201904
    4. '               ' → logprob: -10.152847290039062
    5. ',' → logprob: -11.152847290039062
    6. ' )' → logprob: -12.152847290039062
    7. '):
' → logprob: -12.402847290039062
    8. '<|end|>' → logprob: -12.402847290039062
    9. '),' → logprob: -12.777847290039062
    10. '       ' → logprob: -13.277847290039062

Token 594: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001993227982893586
    2. ')' → logprob: -6.501993179321289
    3. ',' → logprob: -8.626993179321289
    4. '<|end|>' → logprob: -9.126993179321289
    5. '[' → logprob: -10.126993179321289
    6. '       ' → logprob: -10.251993179321289
    7. ' and' → logprob: -10.751993179321289
    8. '   ' → logprob: -11.001993179321289
    9. '          ' → logprob: -11.501993179321289
    10. '            
' → logprob: -11.876993179321289

Token 595: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.25661131739616394
    2. 'row' → logprob: -1.6316113471984863
    3. ' matrix' → logprob: -4.006611347198486
    4. '           ' → logprob: -4.881611347198486
    5. ' row' → logprob: -5.381611347198486
    6. '[' → logprob: -9.381610870361328
    7. 'map' → logprob: -9.381610870361328
    8. 'list' → logprob: -9.881610870361328
    9. '[row' → logprob: -10.381610870361328
    10. 'nums' → logprob: -10.881610870361328

Token 596: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001359997782856226
    2. '=' → logprob: -7.001359939575195
    3. ' =' → logprob: -7.751359939575195
    4. '.extend' → logprob: -11.501359939575195
    5. '.' → logprob: -12.751359939575195
    6. 'append' → logprob: -13.126359939575195
    7. '           ' → logprob: -13.751359939575195
    8. '   ' → logprob: -14.001359939575195
    9. '_row' → logprob: -14.876359939575195
    10. '+=' → logprob: -15.626359939575195

Token 597: '([' (ID: 5194)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.008867703378200531
    2. 'list' → logprob: -4.7588677406311035
    3. '[' → logprob: -9.008867263793945
    4. '(list' → logprob: -9.508867263793945
    5. ' list' → logprob: -10.508867263793945
    6. '[List' → logprob: -11.008867263793945
    7. '[int' → logprob: -11.633867263793945
    8. ' [' → logprob: -12.883867263793945
    9. '[line' → logprob: -14.258867263793945
    10. '([' → logprob: -14.508867263793945

Token 598: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ' int' → logprob: -17.25
    3. '1' → logprob: -19.75
    4. '0' → logprob: -21.25
    5. '(int' → logprob: -21.25
    6. '[int' → logprob: -22.875
    7. '   ' → logprob: -23.875
    8. '<int' → logprob: -24.0
    9. '```' → logprob: -24.25
    10. '
' → logprob: -24.625

Token 599: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04030441865324974
    2. '(num' → logprob: -3.66530442237854
    3. '(cell' → logprob: -5.665304183959961
    4. '(val' → logprob: -5.915304183959961
    5. '(elem' → logprob: -6.040304183959961
    6. '(c' → logprob: -6.790304183959961
    7. '(e' → logprob: -6.915304183959961
    8. 'x' → logprob: -7.040304183959961
    9. '(el' → logprob: -7.040304183959961
    10. 'num' → logprob: -7.415304183959961

Token 600: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0046985456719994545
    2. '(x' → logprob: -5.379698753356934
    3. 'for' → logprob: -10.629698753356934
    4. ')]' → logprob: -11.129698753356934
    5. ')x' → logprob: -11.629698753356934
    6. ' )' → logprob: -11.754698753356934
    7. ')])' → logprob: -11.754698753356934
    8. '(' → logprob: -12.504698753356934
    9. 'x' → logprob: -12.504698753356934
    10. ' for' → logprob: -13.504698753356934

Token 601: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7984718680381775
    2. '(x' → logprob: -1.0484719276428223
    3. ' for' → logprob: -2.0484719276428223
    4. ')' → logprob: -2.6734719276428223
    5. 'x' → logprob: -6.798471927642822
    6. ']' → logprob: -8.673471450805664
    7. '(' → logprob: -9.673471450805664
    8. '           ' → logprob: -10.173471450805664
    9. ')]' → logprob: -10.298471450805664
    10. ' x' → logprob: -10.423471450805664

Token 602: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009757270105183125
    2. ' x' → logprob: -4.634757041931152
    3. 'row' → logprob: -14.134757041931152
    4. '(x' → logprob: -14.759757041931152
    5. ' row' → logprob: -16.75975799560547
    6. '	x' → logprob: -18.25975799560547
    7. ' ' → logprob: -18.63475799560547
    8. 'in' → logprob: -18.63475799560547
    9. '_x' → logprob: -18.75975799560547
    10. ' in' → logprob: -18.75975799560547

Token 603: ' in' (ID: 306)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1631627082824707
    2. ' in' → logprob: -2.4131627082824707
    3. 'in' → logprob: -3.2881627082824707
    4. ' x' → logprob: -3.7881627082824707
    5. '(x' → logprob: -7.163162708282471
    6. 'row' → logprob: -8.538162231445312
    7. '<|end|>' → logprob: -10.288162231445312
    8. 'line' → logprob: -11.288162231445312
    9. ' row' → logprob: -11.413162231445312
    10. ' ' → logprob: -12.913162231445312

Token 604: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.014163863845169544
    2. ' row' → logprob: -4.264163970947266
    3. '(row' → logprob: -15.264163970947266
    4. 'x' → logprob: -17.764163970947266
    5. 'line' → logprob: -17.764163970947266
    6. '	row' → logprob: -18.139163970947266
    7. 'ro' → logprob: -18.639163970947266
    8. 'r' → logprob: -18.889163970947266
    9. ' ' → logprob: -19.139163970947266
    10. '$row' → logprob: -19.389163970947266

Token 605: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.000492268183734268
    2. '           ' → logprob: -7.875492095947266
    3. '])
' → logprob: -9.500492095947266
    4. '       ' → logprob: -10.500492095947266
    5. ' ])' → logprob: -11.750492095947266
    6. '])
' → logprob: -14.625492095947266
    7. '               ' → logprob: -15.500492095947266
    8. '   ' → logprob: -15.750492095947266
    9. ')' → logprob: -15.875492095947266
    10. ')])' → logprob: -16.000492095947266

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07452703267335892
    2. '
' → logprob: -3.0745270252227783
    3. '   ' → logprob: -4.449527263641357
    4. '<|end|>' → logprob: -4.949527263641357
    5. '        
' → logprob: -5.449527263641357
    6. '    
' → logprob: -6.324527263641357
    7. '```' → logprob: -7.824527263641357
    8. '  
' → logprob: -8.8245267868042
    9. '<|end|>' → logprob: -9.1995267868042
    10. '            
' → logprob: -10.9495267868042

Token 607: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8505629897117615
    2. 'area' → logprob: -1.3505630493164062
    3. ' area' → logprob: -1.4755630493164062
    4. '   ' → logprob: -3.4755630493164062
    5. 'result' → logprob: -3.6005630493164062
    6. ' result' → logprob: -3.8505630493164062
    7. '
' → logprob: -6.350563049316406
    8. '```' → logprob: -6.725563049316406
    9. ' results' → logprob: -7.100563049316406
    10. 'results' → logprob: -7.225563049316406

Token 608: ' Compute' (ID: 45438)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.2144380360841751
    2. 'result' → logprob: -1.8394380807876587
    3. ' area' → logprob: -4.089437961578369
    4. '   ' → logprob: -4.714437961578369
    5. ' result' → logprob: -5.339437961578369
    6. 'results' → logprob: -5.839437961578369
    7. '       ' → logprob: -8.214438438415527
    8. 'res' → logprob: -8.464438438415527
    9. ' results' → logprob: -8.714438438415527
    10. ' res' → logprob: -11.714438438415527

Token 609: ' largest' (ID: 10574)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2550320625305176
    2. 'area' → logprob: -1.7550320625305176
    3. ' result' → logprob: -3.2550320625305176
    4. ' area' → logprob: -5.130032062530518
    5. 'max' → logprob: -5.380032062530518
    6. 'res' → logprob: -6.755032062530518
    7. '   ' → logprob: -7.005032062530518
    8. ' max' → logprob: -7.505032062530518
    9. 'largest' → logprob: -8.50503158569336
    10. '       ' → logprob: -8.88003158569336

Token 610: ' rectangle' (ID: 45808)
  Prédit: '_rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -0.00038419815246015787
    2. 'rectangle' → logprob: -7.875384330749512
    3. ' rectangle' → logprob: -12.500384330749512
    4. 'Rectangle' → logprob: -15.500384330749512
    5. 'area' → logprob: -16.500383377075195
    6. '```' → logprob: -17.125383377075195
    7. '
' → logprob: -17.625383377075195
    8. '.rectangle' → logprob: -17.750383377075195
    9. '   ' → logprob: -17.875383377075195
    10. '_rect' → logprob: -18.125383377075195

Token 611: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.108880877494812
    2. '_area' → logprob: -1.483880877494812
    3. 'area' → logprob: -1.483880877494812
    4. '_of' → logprob: -2.1088809967041016
    5. '       ' → logprob: -3.2338809967041016
    6. ' area' → logprob: -3.9838809967041016
    7. 'of' → logprob: -4.483880996704102
    8. '   ' → logprob: -4.733880996704102
    9. '=' → logprob: -4.858880996704102
    10. 'in' → logprob: -5.983880996704102

Token 612: ' ' (ID: 220)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.581456184387207
    2. '_' → logprob: -0.831456184387207
    3. ' ones' → logprob: -5.206456184387207
    4. '1' → logprob: -11.581456184387207
    5. ' ' → logprob: -12.331456184387207
    6. 'one' → logprob: -13.706456184387207
    7. '_one' → logprob: -13.956456184387207
    8. '.ones' → logprob: -13.956456184387207
    9. '```' → logprob: -14.206456184387207
    10. 'zeros' → logprob: -14.206456184387207

Token 613: '1' (ID: 16)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.0009601775673218071
    2. '_' → logprob: -7.125960350036621
    3. ' ones' → logprob: -8.875960350036621
    4. '1' → logprob: -11.125960350036621
    5. '```' → logprob: -14.375960350036621
    6. '.ones' → logprob: -15.250960350036621
    7. 'one' → logprob: -16.000959396362305
    8. 'ONES' → logprob: -16.375959396362305
    9. 'zeros' → logprob: -17.125959396362305
    10. 'on' → logprob: -17.250959396362305

Token 614: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9837849140167236
    2. '       ' → logprob: -1.1087849140167236
    3. ' area' → logprob: -2.2337849140167236
    4. 'area' → logprob: -2.2337849140167236
    5. '   ' → logprob: -3.2337849140167236
    6. ' in' → logprob: -3.8587849140167236
    7. '_area' → logprob: -4.4837846755981445
    8. '(area' → logprob: -6.3587846755981445
    9. 'in' → logprob: -6.4837846755981445
    10. '_of' → logprob: -6.8587846755981445

Token 615: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08504391461610794
    2. 'result' → logprob: -3.8350439071655273
    3. 'area' → logprob: -3.9600439071655273
    4. '   ' → logprob: -3.9600439071655273
    5. ' area' → logprob: -4.460043907165527
    6. 'results' → logprob: -5.835043907165527
    7. ' result' → logprob: -5.835043907165527
    8. ' in' → logprob: -6.460043907165527
    9. ' results' → logprob: -6.710043907165527
    10. '```' → logprob: -7.085043907165527

Token 616: ' the' (ID: 290)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.015613025985658169
    2. 'the' → logprob: -4.515613079071045
    3. ' matrix' → logprob: -5.515613079071045
    4. 'this' → logprob: -7.640613079071045
    5. ' the' → logprob: -10.140612602233887
    6. '(matrix' → logprob: -12.515612602233887
    7. ' this' → logprob: -12.890612602233887
    8. 'each' → logprob: -13.140612602233887
    9. '   ' → logprob: -13.390612602233887
    10. '	matrix' → logprob: -13.890612602233887

Token 617: ' current' (ID: 2208)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.043215442448854446
    2. ' matrix' → logprob: -3.41821551322937
    3. 'current' → logprob: -5.043215274810791
    4. ' current' → logprob: -5.793215274810791
    5. 'map' → logprob: -10.91821575164795
    6. '(matrix' → logprob: -13.54321575164795
    7. '	matrix' → logprob: -13.66821575164795
    8. '```' → logprob: -14.54321575164795
    9. ' map' → logprob: -14.79321575164795
    10. 'mat' → logprob: -15.54321575164795

Token 618: ' map' (ID: 4014)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.47760456800460815
    2. ' matrix' → logprob: -0.9776045680046082
    3. 'map' → logprob: -5.852604389190674
    4. ' map' → logprob: -7.352604389190674
    5. '_matrix' → logprob: -13.227604866027832
    6. '(matrix' → logprob: -13.227604866027832
    7. '       ' → logprob: -13.727604866027832
    8. '	matrix' → logprob: -13.977604866027832
    9. '   ' → logprob: -14.102604866027832
    10. '
' → logprob: -14.227604866027832

Token 619: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03914911672472954
    2. 'area' → logprob: -4.164149284362793
    3. '   ' → logprob: -4.664149284362793
    4. 'result' → logprob: -4.789149284362793
    5. 'results' → logprob: -5.789149284362793
    6. ' area' → logprob: -6.664149284362793
    7. '
' → logprob: -8.164149284362793
    8. '```' → logprob: -8.539149284362793
    9. ' result' → logprob: -8.914149284362793
    10. ' results' → logprob: -9.289149284362793

Token 620: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1984393447637558
    2. 'result' → logprob: -2.448439359664917
    3. '   ' → logprob: -3.573439359664917
    4. 'results' → logprob: -3.573439359664917
    5. 'area' → logprob: -4.323439121246338
    6. ' result' → logprob: -4.323439121246338
    7. ' results' → logprob: -5.073439121246338
    8. ' area' → logprob: -5.573439121246338
    9. '```' → logprob: -7.198439121246338
    10. '
' → logprob: -9.573439598083496

Token 621: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.48135650157928467
    2. 'area' → logprob: -1.4813565015792847
    3. 'results' → logprob: -2.231356620788574
    4. ' result' → logprob: -3.356356620788574
    5. ' area' → logprob: -5.106356620788574
    6. ' results' → logprob: -5.106356620788574
    7. '   ' → logprob: -8.731356620788574
    8. '       ' → logprob: -8.731356620788574
    9. '```' → logprob: -10.731356620788574
    10. 'res' → logprob: -11.481356620788574

Token 622: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6974679827690125
    2. ' =' → logprob: -0.6974679827690125
    3. 's' → logprob: -5.447467803955078
    4. '.append' → logprob: -12.822467803955078
    5. '_' → logprob: -13.947467803955078
    6. '   ' → logprob: -15.447467803955078
    7. ')' → logprob: -15.697467803955078
    8. '=s' → logprob: -15.947467803955078
    9. ' ' → logprob: -16.447467803955078
    10. '=_' → logprob: -17.197467803955078

Token 623: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.0024756586644798517
    2. ' largest' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.62747573852539
    4. 'Largest' → logprob: -18.37747573852539
    5. 'larg' → logprob: -18.87747573852539
    6. 'large' → logprob: -20.00247573852539
    7. '```' → logprob: -21.25247573852539
    8. '-largest' → logprob: -21.37747573852539
    9. '       ' → logprob: -21.62747573852539
    10. '`' → logprob: -21.62747573852539

Token 624: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: 0.0
    2. 'rectangle' → logprob: -16.875
    3. '_triangle' → logprob: -19.625
    4. '_rect' → logprob: -19.75
    5. 'Rectangle' → logprob: -20.125
    6. '_of' → logprob: -20.5
    7. '```' → logprob: -20.875
    8. '_' → logprob: -21.25
    9. '_polygon' → logprob: -21.375
    10. 'of' → logprob: -21.375

Token 625: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.9361264946837764e-07
    2. 'of' → logprob: -16.0
    3. ' of' → logprob: -17.625
    4. '   ' → logprob: -18.75
    5. '_for' → logprob: -19.125
    6. '```' → logprob: -19.75
    7. '	of' → logprob: -19.875
    8. '_OF' → logprob: -20.625
    9. '\' → logprob: -20.625
    10. '_in' → logprob: -20.625

Token 626: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.088346359931165e-07
    2. 'ones' → logprob: -14.500000953674316
    3. '```' → logprob: -15.500000953674316
    4. '_one' → logprob: -16.5
    5. '_on' → logprob: -17.75
    6. '`' → logprob: -17.875
    7. 's' → logprob: -17.875
    8. '_
' → logprob: -18.25
    9. 'def' → logprob: -18.5
    10. '\' → logprob: -18.875

Token 627: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.0015137888258323073
    2. '_' → logprob: -6.501513957977295
    3. ' ones' → logprob: -12.876513481140137
    4. '```' → logprob: -13.001513481140137
    5. '1' → logprob: -13.126513481140137
    6. '.ones' → logprob: -13.376513481140137
    7. 'onen' → logprob: -14.126513481140137
    8. 'on' → logprob: -14.876513481140137
    9. 'one' → logprob: -14.876513481140137
    10. 'zeros' → logprob: -14.876513481140137

Token 628: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.375000953674316
    3. 'matrix' → logprob: -15.625000953674316
    4. ' (' → logprob: -16.625
    5. '(
' → logprob: -16.75
    6. '(m' → logprob: -17.875
    7. '```' → logprob: -18.125
    8. ' matrix' → logprob: -18.625
    9. '(mat' → logprob: -19.125
    10. '(Matrix' → logprob: -19.25

Token 629: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026152553036808968
    2. ')
' → logprob: -6.002615451812744
    3. '   ' → logprob: -9.502614974975586
    4. '(matrix' → logprob: -10.752614974975586
    5. '       ' → logprob: -11.002614974975586
    6. '(result' → logprob: -11.127614974975586
    7. '(' → logprob: -12.002614974975586
    8. ')
' → logprob: -13.502614974975586
    9. '[' → logprob: -14.377614974975586
    10. ')`' → logprob: -14.502614974975586

Token 630: '       ' (ID: 309)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.010644878260791302
    2. '       ' → logprob: -5.260644912719727
    3. ' results' → logprob: -6.135644912719727
    4. '   ' → logprob: -6.385644912719727
    5. '
' → logprob: -7.010644912719727
    6. '(results' → logprob: -7.760644912719727
    7. '	results' → logprob: -8.760644912719727
    8. '.results' → logprob: -10.885644912719727
    9. '```' → logprob: -11.510644912719727
    10. '_results' → logprob: -12.135644912719727

Token 631: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.006902801804244518
    2. ' results' → logprob: -5.006902694702148
    3. '
' → logprob: -8.881902694702148
    4. '	results' → logprob: -10.756902694702148
    5. '       ' → logprob: -10.881902694702148
    6. '   ' → logprob: -11.881902694702148
    7. '(results' → logprob: -14.381902694702148
    8. '```' → logprob: -14.756902694702148
    9. '.results' → logprob: -15.506902694702148
    10. '``' → logprob: -16.38190269470215

Token 632: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008085522567853332
    2. '.' → logprob: -7.1258087158203125
    3. '.extend' → logprob: -13.250808715820312
    4. '.app' → logprob: -13.500808715820312
    5. '.push' → logprob: -14.875808715820312
    6. '.Append' → logprob: -15.250808715820312
    7. '.setdefault' → logprob: -15.625808715820312
    8. '.ap' → logprob: -16.625808715820312
    9. '.add' → logprob: -16.750808715820312
    10. '​.' → logprob: -17.750808715820312

Token 633: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -9.162282367469743e-05
    2. '(' → logprob: -9.500091552734375
    3. 'result' → logprob: -11.000091552734375
    4. '(
' → logprob: -17.500091552734375
    5. '(results' → logprob: -18.375091552734375
    6. '(res' → logprob: -18.375091552734375
    7. ' result' → logprob: -19.125091552734375
    8. ' (' → logprob: -19.375091552734375
    9. '((' → logprob: -19.750091552734375
    10. '(resultado' → logprob: -19.750091552734375

Token 634: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011548303999006748
    2. ')
' → logprob: -5.1365485191345215
    3. '   ' → logprob: -5.6365485191345215
    4. '       ' → logprob: -6.7615485191345215
    5. '
' → logprob: -7.6365485191345215
    6. '<|end|>' → logprob: -8.511548042297363
    7. '    
' → logprob: -9.761548042297363
    8. '[' → logprob: -10.511548042297363
    9. ']' → logprob: -11.511548042297363
    10. '```' → logprob: -11.636548042297363

Token 635: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03289366886019707
    2. '   ' → logprob: -3.657893657684326
    3. '    
' → logprob: -5.407893657684326
    4. 'for' → logprob: -6.907893657684326
    5. '  
' → logprob: -7.657893657684326
    6. '```' → logprob: -8.282894134521484
    7. '\n' → logprob: -8.657894134521484
    8. '
' → logprob: -10.032894134521484
    9. '   
' → logprob: -10.407894134521484
    10. '

' → logprob: -10.657894134521484

Token 636: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13727252185344696
    2. '   ' → logprob: -2.637272596359253
    3. '
' → logprob: -2.887272596359253
    4. ' for' → logprob: -7.137272357940674
    5. '    
' → logprob: -8.762272834777832
    6. '```' → logprob: -10.762272834777832
    7. 'print' → logprob: -12.262272834777832
    8. '	for' → logprob: -12.762272834777832
    9. '  
' → logprob: -14.012272834777832
    10. '
' → logprob: -14.387272834777832

Token 637: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.749814019713085e-06
    2. ' for' → logprob: -12.250006675720215
    3. 'print' → logprob: -14.000006675720215
    4. '   ' → logprob: -14.250006675720215
    5. '
' → logprob: -15.000006675720215
    6. '```' → logprob: -17.25000762939453
    7. '    
' → logprob: -21.12500762939453
    8. '``' → logprob: -22.00000762939453
    9. '	for' → logprob: -22.62500762939453
    10. 'return' → logprob: -23.75000762939453

Token 638: ' Print' (ID: 13103)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3856492842023727e-06
    2. ' for' → logprob: -13.750000953674316
    3. '   ' → logprob: -15.500000953674316
    4. 'print' → logprob: -17.750001907348633
    5. '
' → logprob: -19.375001907348633
    6. '#' → logprob: -21.875001907348633
    7. '```' → logprob: -23.125001907348633
    8. 'return' → logprob: -23.500001907348633
    9. 'output' → logprob: -24.375001907348633
    10. 'from' → logprob: -24.500001907348633

Token 639: ' results' (ID: 4376)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14332041144371033
    2. '('\' → logprob: -3.268320322036743
    3. '(*' → logprob: -3.393320322036743
    4. '()
' → logprob: -3.393320322036743
    5. '(' → logprob: -4.518320560455322
    6. '('' → logprob: -5.018320560455322
    7. 'results' → logprob: -5.393320560455322
    8. '(
' → logprob: -5.518320560455322
    9. '("\' → logprob: -7.643320560455322
    10. '()\' → logprob: -8.018320083618164

Token 640: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09939191490411758
    2. 'for' → logprob: -3.5993919372558594
    3. '()
' → logprob: -4.099391937255859
    4. ' for' → logprob: -4.349391937255859
    5. '```' → logprob: -4.724391937255859
    6. '()' → logprob: -4.849391937255859
    7. '
' → logprob: -4.974391937255859
    8. '(' → logprob: -5.099391937255859
    9. '('\' → logprob: -5.349391937255859
    10. '("\' → logprob: -6.599391937255859

Token 641: ' each' (ID: 2454)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.0626973882317543
    2. ' res' → logprob: -3.187697410583496
    3. 'result' → logprob: -4.687697410583496
    4. ' map' → logprob: -5.187697410583496
    5. ' each' → logprob: -6.187697410583496
    6. ' r' → logprob: -6.687697410583496
    7. ' ' → logprob: -7.187697410583496
    8. 'res' → logprob: -8.312697410583496
    9. ' m' → logprob: -8.562697410583496
    10. ' i' → logprob: -9.812697410583496

Token 642: ' map' (ID: 4014)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6935482621192932
    2. 'result' → logprob: -0.6935482621192932
    3. ' map' → logprob: -8.318548202514648
    4. 'map' → logprob: -8.943548202514648
    5. '
' → logprob: -11.443548202514648
    6. '   ' → logprob: -12.193548202514648
    7. '```' → logprob: -12.443548202514648
    8. '(result' → logprob: -12.693548202514648
    9. 'print' → logprob: -13.818548202514648
    10. '_result' → logprob: -14.568548202514648

Token 643: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4804767668247223
    2. '
' → logprob: -1.2304767370224
    3. ' for' → logprob: -2.8554768562316895
    4. 'for' → logprob: -3.4804768562316895
    5. '    
' → logprob: -7.3554768562316895
    6. '```' → logprob: -8.855476379394531
    7. '  
' → logprob: -9.230476379394531
    8. '\n' → logprob: -9.480476379394531
    9. '	for' → logprob: -10.605476379394531
    10. ' 
' → logprob: -11.730476379394531

Token 644: ' separate' (ID: 13574)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.03687047213315964
    2. ' results' → logprob: -3.4118704795837402
    3. ' separate' → logprob: -6.66187047958374
    4. 'range' → logprob: -7.66187047958374
    5. 'se' → logprob: -7.91187047958374
    6. '   ' → logprob: -8.161870002746582
    7. '
' → logprob: -8.411870002746582
    8. 'a' → logprob: -9.161870002746582
    9. ' range' → logprob: -9.786870002746582
    10. ' a' → logprob: -9.911870002746582

Token 645: ' line' (ID: 2543)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.4019968807697296
    2. 'line' → logprob: -1.6519968509674072
    3. 'print' → logprob: -2.4019968509674072
    4. ' lines' → logprob: -3.1519968509674072
    5. ' line' → logprob: -5.651997089385986
    6. '
' → logprob: -7.151997089385986
    7. '   ' → logprob: -7.276997089385986
    8. 'for' → logprob: -7.401997089385986
    9. '\n' → logprob: -8.026996612548828
    10. ' print' → logprob: -9.651996612548828

Token 646: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48846086859703064
    2. '
' → logprob: -0.988460898399353
    3. 'for' → logprob: -4.363461017608643
    4. ' for' → logprob: -6.988461017608643
    5. '    
' → logprob: -7.488461017608643
    6. '\n' → logprob: -10.238460540771484
    7. '```' → logprob: -11.363460540771484
    8. '  
' → logprob: -11.988460540771484
    9. ' 
' → logprob: -13.613460540771484
    10. '\' → logprob: -13.738460540771484

Token 647: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045507270842790604
    2. 'for' → logprob: -3.2955071926116943
    3. ' for' → logprob: -5.545507431030273
    4. '
' → logprob: -5.670507431030273
    5. '```' → logprob: -10.045507431030273
    6. '    
' → logprob: -10.295507431030273
    7. '\n' → logprob: -12.295507431030273
    8. '``' → logprob: -12.795507431030273
    9. '  
' → logprob: -13.795507431030273
    10. '  ' → logprob: -15.170507431030273

Token 648: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.273621405242011e-05
    2. '   ' → logprob: -10.500032424926758
    3. ' for' → logprob: -12.750032424926758
    4. '
' → logprob: -13.000032424926758
    5. '```' → logprob: -18.375032424926758
    6. '    
' → logprob: -18.750032424926758
    7. 'print' → logprob: -19.625032424926758
    8. '\n' → logprob: -21.250032424926758
    9. '``' → logprob: -21.375032424926758
    10. '	for' → logprob: -21.375032424926758

Token 649: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14881134033203125
    2. ' result' → logprob: -2.3988113403320312
    3. 'res' → logprob: -3.1488113403320312
    4. ' res' → logprob: -5.398811340332031
    5. 'r' → logprob: -11.023811340332031
    6. ' r' → logprob: -14.273811340332031
    7. '   ' → logprob: -14.648811340332031
    8. '```' → logprob: -16.77381134033203
    9. '`' → logprob: -18.27381134033203
    10. '       ' → logprob: -18.52381134033203

Token 650: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025365441106259823
    2. 'in' → logprob: -6.002536773681641
    3. ':' → logprob: -10.37753677368164
    4. ' ' → logprob: -12.37753677368164
    5. 's' → logprob: -12.50253677368164
    6. '```' → logprob: -12.50253677368164
    7. ')' → logprob: -12.62753677368164
    8. '(res' → logprob: -12.75253677368164
    9. '   ' → logprob: -13.37753677368164
    10. 'print' → logprob: -13.75253677368164

Token 651: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.008614926598966122
    2. ' results' → logprob: -4.758615016937256
    3. '(results' → logprob: -15.008614540100098
    4. '	results' → logprob: -18.633615493774414
    5. '
' → logprob: -18.758615493774414
    6. '.results' → logprob: -19.383615493774414
    7. '_results' → logprob: -20.008615493774414
    8. 'result' → logprob: -20.883615493774414
    9. 'Results' → logprob: -21.383615493774414
    10. '   ' → logprob: -22.758615493774414

Token 652: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.677053689956665
    2. ':
' → logprob: -0.802053689956665
    3. '       ' → logprob: -3.427053689956665
    4. '   ' → logprob: -4.927053451538086
    5. 'print' → logprob: -6.052053451538086
    6. '():
' → logprob: -7.802053451538086
    7. '):
' → logprob: -7.927053451538086
    8. ' print' → logprob: -8.302053451538086
    9. '.print' → logprob: -8.802053451538086
    10. '):' → logprob: -9.552053451538086

Token 653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4276113212108612
    2. '   ' → logprob: -1.4276113510131836
    3. 'print' → logprob: -2.8026113510131836
    4. ' print' → logprob: -3.0526113510131836
    5. '```' → logprob: -8.802611351013184
    6. '	print' → logprob: -12.552611351013184
    7. '`' → logprob: -12.677611351013184
    8. '``' → logprob: -13.177611351013184
    9. '
' → logprob: -13.302611351013184
    10. ' ' → logprob: -13.302611351013184

Token 654: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1472419600977446e-06
    2. ' print' → logprob: -14.000000953674316
    3. '```' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.250001907348633
    5. '``' → logprob: -20.750001907348633
    6. '       ' → logprob: -23.375001907348633
    7. '`' → logprob: -23.500001907348633
    8. '	print' → logprob: -23.500001907348633
    9. 'println' → logprob: -24.875001907348633
    10. '
' → logprob: -24.875001907348633

Token 655: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.001502598519437015
    2. 'res' → logprob: -6.501502513885498
    3. ' res' → logprob: -16.251502990722656
    4. '(' → logprob: -16.376502990722656
    5. '(f' → logprob: -18.626502990722656
    6. '$res' → logprob: -19.751502990722656
    7. ',res' → logprob: -20.876502990722656
    8. '_res' → logprob: -21.126502990722656
    9. '=res' → logprob: -21.126502990722656
    10. '	res' → logprob: -21.626502990722656

Token 656: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -14.500001907348633
    3. '()' → logprob: -14.875001907348633
    4. ')`' → logprob: -15.000001907348633
    5. '())' → logprob: -15.500001907348633
    6. '')' → logprob: -16.500001907348633
    7. '`)' → logprob: -16.750001907348633
    8. ' )' → logprob: -17.250001907348633
    9. '))' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.125001907348633

Token 657: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006927779759280384
    2. '<|end|>' → logprob: -7.875692844390869
    3. '
' → logprob: -8.875692367553711
    4. '#' → logprob: -9.750692367553711
    5. '```' → logprob: -10.000692367553711
    6. ' if' → logprob: -10.375692367553711
    7. 'main' → logprob: -10.500692367553711
    8. '\n' → logprob: -12.000692367553711
    9. '\' → logprob: -13.375692367553711
    10. '<|end|>' → logprob: -14.375692367553711

Token 658: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03808750957250595
    2. '__' → logprob: -3.2880876064300537
    3. '_' → logprob: -10.288087844848633
    4. '_name' → logprob: -11.788087844848633
    5. ' ' → logprob: -13.538087844848633
    6. 'name' → logprob: -13.788087844848633
    7. '___' → logprob: -14.538087844848633
    8. ' _' → logprob: -14.538087844848633
    9. ' ' → logprob: -14.663087844848633
    10. 'Name' → logprob: -15.663087844848633

Token 659: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.016077890992164612
    2. '==' → logprob: -4.266077995300293
    3. ' ==' → logprob: -6.391077995300293
    4. '=="' → logprob: -9.766077995300293
    5. ' __' → logprob: -9.891077995300293
    6. 'name' → logprob: -10.141077995300293
    7. '__.__' → logprob: -10.141077995300293
    8. '.__' → logprob: -10.891077995300293
    9. '=' → logprob: -12.016077995300293
    10. '[' → logprob: -12.641077995300293

Token 660: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00041518008220009506
    2. '==' → logprob: -8.000414848327637
    3. ' ==' → logprob: -10.250414848327637
    4. '__.__' → logprob: -10.250414848327637
    5. '=="' → logprob: -12.125414848327637
    6. '=='' → logprob: -13.000414848327637
    7. '__('' → logprob: -15.000414848327637
    8. '__.' → logprob: -15.375414848327637
    9. '__["' → logprob: -15.625414848327637
    10. '___' → logprob: -15.875414848327637

Token 661: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5072720050811768
    2. '==' → logprob: -1.0072720050811768
    3. ' ==' → logprob: -3.5072720050811768
    4. '=="' → logprob: -6.132271766662598
    5. '=='' → logprob: -7.632271766662598
    6. '==
' → logprob: -12.257271766662598
    7. '=' → logprob: -12.882271766662598
    8. '===' → logprob: -13.507271766662598
    9. '"' → logprob: -13.632271766662598
    10. '__.__' → logprob: -13.632271766662598

Token 662: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.25195401906967163
    2. ''' → logprob: -1.5019540786743164
    3. '__' → logprob: -10.876954078674316
    4. ' "__' → logprob: -12.376954078674316
    5. ' '__' → logprob: -14.126954078674316
    6. '"'' → logprob: -15.001954078674316
    7. ''"' → logprob: -15.126954078674316
    8. ''_' → logprob: -15.876954078674316
    9. '"_' → logprob: -16.251953125
    10. '   ' → logprob: -16.376953125

Token 663: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.842555426876061e-06
    2. '__' → logprob: -13.000004768371582
    3. 'name' → logprob: -13.875004768371582
    4. 'py' → logprob: -14.375004768371582
    5. 'python' → logprob: -15.125004768371582
    6. ' main' → logprob: -15.875004768371582
    7. '_main' → logprob: -16.1250057220459
    8. 'built' → logprob: -16.2500057220459
    9. 'm' → logprob: -16.5000057220459
    10. '```' → logprob: -16.7500057220459

Token 664: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.01827121526002884
    2. '__' → logprob: -4.018271446228027
    3. '__':
' → logprob: -9.018271446228027
    4. '__["' → logprob: -16.01827049255371
    5. '```' → logprob: -17.76827049255371
    6. '__("' → logprob: -17.89327049255371
    7. '__
' → logprob: -18.14327049255371
    8. '__
' → logprob: -18.14327049255371
    9. '__",' → logprob: -18.26827049255371
    10. '__:' → logprob: -18.76827049255371

Token 665: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00020461321400944144
    2. ' main' → logprob: -8.500205039978027
    3. '	main' → logprob: -14.125205039978027
    4. '   ' → logprob: -15.750205039978027
    5. '__' → logprob: -15.750205039978027
    6. '_main' → logprob: -17.25020408630371
    7. '(main' → logprob: -18.75020408630371
    8. '.main' → logprob: -21.25020408630371
    9. 'Main' → logprob: -21.87520408630371
    10. '
' → logprob: -22.00020408630371

Token 666: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.319370302458992e-06
    2. ' main' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.750005722045898
    4. '	main' → logprob: -17.5000057220459
    5. '(main' → logprob: -22.5000057220459
    6. '_main' → logprob: -23.1250057220459
    7. 'import' → logprob: -23.2500057220459
    8. '.main' → logprob: -23.3750057220459
    9. ' ' → logprob: -24.2500057220459
    10. '  ' → logprob: -24.8750057220459

Token 667: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 665
Tokens correctement prédits (1ère position, stricte): 270
Tokens correctement prédits (1ère position, avec adaptation): 299
Tokens correctement prédits (top 10): 549
Précision stricte (1ère position): 40.60%
Précision adaptée (1ère position): 44.96%
Précision (top 10): 82.56%
================================================================================
