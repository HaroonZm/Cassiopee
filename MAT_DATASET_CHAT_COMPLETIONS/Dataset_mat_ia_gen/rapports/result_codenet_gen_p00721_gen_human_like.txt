================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
import sys

def bfs(start, grid, w, h):
    dist = [[-1]*w for _ in range(h)]
    dist[start[1]][start[0]] = 0
    queue = deque([start])
    while queue:
        x, y = queue.popleft()
        for dx, dy in ((1,0),(-1,0),(0,1),(0,-1)):
            nx, ny = x+dx, y+dy
            if 0 <= nx < w and 0 <= ny < h:
                if grid[ny][nx] != 'x' and dist[ny][nx] == -1:
                    dist[ny][nx] = dist[y][x] + 1
                    queue.append((nx, ny))
    return dist

def main():
    input = sys.stdin.readline
    while True:
        w, h = map(int, input().split())
        if w == 0 and h == 0:
            break
        
        grid = [list(input().rstrip('\n')) for _ in range(h)]
        dirty = []
        start = None
        
        for y in range(h):
            for x in range(w):
                if grid[y][x] == 'o':
                    start = (x, y)
                elif grid[y][x] == '*':
                    dirty.append((x, y))
        
        points = [start] + dirty
        n = len(points)
        
        # Compute distances between every pair of points
        dist_map = []
        for p in points:
            dist_map.append(bfs(p, grid, w, h))
        
        dist = [[-1]*n for _ in range(n)]
        possible = True
        for i in range(n):
            for j in range(n):
                d = dist_map[i][points[j][1]][points[j][0]]
                dist[i][j] = d
                if i != j and d == -1:
                    # No path between dirty tiles or start
                    if i == 0 or j == 0 or (i > 0 and j > 0):
                        if i == 0 or j == 0 or dist[i][j] == -1:
                            # If any dirty tile not reachable, no solution
                            if i == 0 or j == 0:
                                # From start to dirty tile
                                if j != 0 and dist[i][j] == -1:
                                    possible = False
                            else:
                                # Between dirty tiles
                                if dist[i][j] == -1:
                                    # May be OK, but keep consistent check
                                    pass
        
        if not possible:
            print(-1)
            continue
        
        # DP: bitmask over dirty tiles (max 10)
        # dp[mask][i]: min moves to have cleaned tiles in mask ending at point i
        SIZE = 1 << (n-1)
        dp = [[-1]*n for _ in range(SIZE)]
        dp[0][0] = 0
        
        for mask in range(SIZE):
            for i in range(n):
                if dp[mask][i] == -1:
                    continue
                for j in range(1, n):
                    if (mask & (1 << (j-1))) == 0 and dist[i][j] != -1:
                        new_mask = mask | (1 << (j-1))
                        val = dp[mask][i] + dist[i][j]
                        if dp[new_mask][j] == -1 or dp[new_mask][j] > val:
                            dp[new_mask][j] = val
        
        res = -1
        full_mask = SIZE - 1
        for i in range(n):
            if dp[full_mask][i] != -1:
                if res == -1 or res > dp[full_mask][i]:
                    res = dp[full_mask][i]
        print(res)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0071395635604858
    2. 'default' → logprob: -1.1321395635604858
    3. 'abc' → logprob: -1.8821395635604858
    4. 'Counter' → logprob: -2.5071396827697754
    5. ' defaultdict' → logprob: -2.7571396827697754
    6. 'named' → logprob: -5.382139682769775
    7. ' Counter' → logprob: -5.507139682769775
    8. ' abc' → logprob: -6.007139682769775
    9. ' deque' → logprob: -6.382139682769775
    10. '```' → logprob: -6.882139682769775

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011728105135262012
    2. '\' → logprob: -5.636728286743164
    3. '\n' → logprob: -6.386728286743164
    4. '\(' → logprob: -6.511728286743164
    5. '.' → logprob: -6.636728286743164
    6. '[' → logprob: -7.011728286743164
    7. '```' → logprob: -7.261728286743164
    8. '(
' → logprob: -7.511728286743164
    9. ' (' → logprob: -8.136728286743164
    10. '`' → logprob: -8.386728286743164

Token 5: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9679120182991028
    2. 'd' → logprob: -1.342911958694458
    3. '\n' → logprob: -2.467911958694458
    4. 'a' → logprob: -2.717911958694458
    5. '\' → logprob: -2.717911958694458
    6. '
' → logprob: -3.467911958694458
    7. 'newline' → logprob: -4.092912197113037
    8. '.' → logprob: -4.092912197113037
    9. ' ' → logprob: -4.592912197113037
    10. '```' → logprob: -4.592912197113037

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.13187642395496368
    2. ' collections' → logprob: -2.5068764686584473
    3. ' os' → logprob: -3.3818764686584473
    4. ' queue' → logprob: -5.881876468658447
    5. ' itertools' → logprob: -6.256876468658447
    6. ' re' → logprob: -6.631876468658447
    7. ' ' → logprob: -7.506876468658447
    8. ' heap' → logprob: -7.881876468658447
    9. ' json' → logprob: -8.381875991821289
    10. ' math' → logprob: -8.756875991821289

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2257426381111145
    2. '\' → logprob: -1.8507425785064697
    3. '
' → logprob: -4.100742816925049
    4. '.' → logprob: -4.350742816925049
    5. 'newline' → logprob: -4.600742816925049
    6. '```' → logprob: -7.100742816925049
    7. 'for' → logprob: -7.475742816925049
    8. '\r' → logprob: -7.725742816925049
    9. 'data' → logprob: -7.725742816925049
    10. '' → logprob: -7.725742816925049

Token 8: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7944290637969971
    2. 'data' → logprob: -2.044429063796997
    3. 'd' → logprob: -2.169429063796997
    4. 'for' → logprob: -3.044429063796997
    5. '`' → logprob: -3.169429063796997
    6. '=' → logprob: -3.419429063796997
    7. '\' → logprob: -3.544429063796997
    8. 'input' → logprob: -3.669429063796997
    9. 'def' → logprob: -3.919429063796997
    10. '_' → logprob: -3.919429063796997

Token 9: ' bfs' (ID: 147571)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023234643042087555
    2. ' process' → logprob: -4.773234844207764
    3. ' bfs' → logprob: -4.773234844207764
    4. ' space' → logprob: -7.023234844207764
    5. ' read' → logprob: -7.523234844207764
    6. ' main' → logprob: -7.648234844207764
    7. ' dfs' → logprob: -8.148234367370605
    8. ' de' → logprob: -8.398234367370605
    9. ' deque' → logprob: -8.523234367370605
    10. ' breadth' → logprob: -8.648234367370605

Token 10: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008423840627074242
    2. '(node' → logprob: -7.875842571258545
    3. '_' → logprob: -8.250842094421387
    4. ' (' → logprob: -9.625842094421387
    5. '(nodes' → logprob: -11.000842094421387
    6. '(root' → logprob: -11.375842094421387
    7. '(queue' → logprob: -11.375842094421387
    8. ')' → logprob: -11.875842094421387
    9. '(tree' → logprob: -11.875842094421387
    10. '_nodes' → logprob: -12.125842094421387

Token 11: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1641320437192917
    2. ',' → logprob: -1.914131999015808
    3. ')' → logprob: -5.789132118225098
    4. '(' → logprob: -7.664132118225098
    5. '):
' → logprob: -8.789132118225098
    6. ' ):' → logprob: -9.664132118225098
    7. '):

' → logprob: -10.289132118225098
    8. ':' → logprob: -10.914132118225098
    9. '(node' → logprob: -11.039132118225098
    10. '_node' → logprob: -11.164132118225098

Token 12: ' grid' (ID: 10586)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6355544328689575
    2. 'graph' → logprob: -0.7605544328689575
    3. 'adj' → logprob: -6.885554313659668
    4. ' adj' → logprob: -7.385554313659668
    5. ' visited' → logprob: -7.885554313659668
    6. 'visited' → logprob: -8.010554313659668
    7. ' adjacency' → logprob: -8.885554313659668
    8. '   ' → logprob: -9.510554313659668
    9. ' edges' → logprob: -9.635554313659668
    10. '	graph' → logprob: -10.135554313659668

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3136005699634552
    2. '):' → logprob: -1.3136005401611328
    3. ')' → logprob: -8.063600540161133
    4. '):
' → logprob: -12.063600540161133
    5. ' ,' → logprob: -12.188600540161133
    6. ' ):' → logprob: -12.563600540161133
    7. '   ' → logprob: -13.063600540161133
    8. ' ' → logprob: -13.313600540161133
    9. ':' → logprob: -13.688600540161133
    10. '),' → logprob: -14.313600540161133

Token 14: ' w' (ID: 286)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.36544135212898254
    2. 'visited' → logprob: -1.9904413223266602
    3. ' rows' → logprob: -2.99044132232666
    4. ' goal' → logprob: -3.11544132232666
    5. ' target' → logprob: -4.24044132232666
    6. 'rows' → logprob: -4.36544132232666
    7. ' distances' → logprob: -4.49044132232666
    8. ' n' → logprob: -4.49044132232666
    9. 'n' → logprob: -5.61544132232666
    10. ' queue' → logprob: -5.61544132232666

Token 15: ',' (ID: 11)
  Prédit: 'idth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idth' → logprob: -0.22806818783283234
    2. ',' → logprob: -1.603068232536316
    3. 'ith' → logprob: -7.1030683517456055
    4. ')' → logprob: -7.3530683517456055
    5. 'id' → logprob: -7.8530683517456055
    6. 'e' → logprob: -7.9780683517456055
    7. '):' → logprob: -9.103068351745605
    8. 'IDTH' → logprob: -9.603068351745605
    9. 'eight' → logprob: -9.728068351745605
    10. 'ight' → logprob: -9.978068351745605

Token 16: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2811535894870758
    2. ' h' → logprob: -1.4061535596847534
    3. '	h' → logprob: -13.781153678894043
    4. ' ' → logprob: -13.906153678894043
    5. ')' → logprob: -14.656153678894043
    6. '```' → logprob: -14.781153678894043
    7. '   ' → logprob: -16.156152725219727
    8. 'H' → logprob: -16.531152725219727
    9. 'height' → logprob: -16.656152725219727
    10. '_h' → logprob: -16.656152725219727

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00118856446351856
    2. ')' → logprob: -7.0011887550354
    3. ',' → logprob: -8.251188278198242
    4. ' ):' → logprob: -11.251188278198242
    5. '):
' → logprob: -13.876188278198242
    6. ''):' → logprob: -14.251188278198242
    7. ':' → logprob: -14.376188278198242
    8. '),' → logprob: -15.626188278198242
    9. ')):' → logprob: -15.751188278198242
    10. ')：' → logprob: -16.001188278198242

Token 18: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6549873948097229
    2. '   ' → logprob: -0.7799873948097229
    3. '):' → logprob: -4.154987335205078
    4. ',' → logprob: -6.404987335205078
    5. ' :' → logprob: -6.904987335205078
    6. ' queue' → logprob: -7.279987335205078
    7. '```' → logprob: -7.404987335205078
    8. ':
' → logprob: -7.529987335205078
    9. '	queue' → logprob: -7.654987335205078
    10. 'queue' → logprob: -7.779987335205078

Token 19: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7326215505599976
    2. ' queue' → logprob: -0.8576215505599976
    3. ' visited' → logprob: -2.482621669769287
    4. 'queue' → logprob: -5.232621669769287
    5. ' q' → logprob: -5.982621669769287
    6. '```' → logprob: -6.357621669769287
    7. 'visited' → logprob: -7.357621669769287
    8. ' deque' → logprob: -7.857621669769287
    9. '`' → logprob: -8.607621192932129
    10. '	queue' → logprob: -8.732621192932129

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20214404165744781
    2. '=' → logprob: -1.7021440267562866
    3. '[' → logprob: -7.827144145965576
    4. '[start' → logprob: -8.452143669128418
    5. ' ' → logprob: -9.452143669128418
    6. '   ' → logprob: -11.202143669128418
    7. ',' → logprob: -12.202143669128418
    8. '=[' → logprob: -12.452143669128418
    9. '  ' → logprob: -13.327143669128418
    10. '=[]' → logprob: -13.327143669128418

Token 21: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.5239073038101196
    2. ' [[' → logprob: -1.7739073038101196
    3. '[-' → logprob: -2.02390718460083
    4. '[' → logprob: -2.64890718460083
    5. '{' → logprob: -3.64890718460083
    6. 'deque' → logprob: -5.27390718460083
    7. ' [' → logprob: -6.02390718460083
    8. ' [-' → logprob: -7.14890718460083
    9. ' {' → logprob: -7.77390718460083
    10. ' deque' → logprob: -9.273907661437988

Token 22: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024676902685314417
    2. ' -' → logprob: -6.752467632293701
    3. 'float' → logprob: -7.252467632293701
    4. '-inf' → logprob: -7.502467632293701
    5. ' float' → logprob: -11.25246810913086
    6. 'None' → logprob: -11.87746810913086
    7. '-f' → logprob: -12.25246810913086
    8. '-in' → logprob: -13.25246810913086
    9. '-w' → logprob: -13.25246810913086
    10. '0' → logprob: -13.25246810913086

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. 'sys' → logprob: -18.0
    4. '```' → logprob: -18.0
    5. '-' → logprob: -18.125
    6. '   ' → logprob: -18.375
    7. '

' → logprob: -18.375
    8. '2' → logprob: -18.75
    9. 'inf' → logprob: -18.875
    10. '`' → logprob: -20.0

Token 24: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007940074428915977
    2. 'for' → logprob: -5.132940292358398
    3. ']' → logprob: -6.632940292358398
    4. ']*' → logprob: -7.507940292358398
    5. ' ]' → logprob: -10.007940292358398
    6. ' ' → logprob: -10.382940292358398
    7. '	for' → logprob: -10.382940292358398
    8. '   ' → logprob: -10.882940292358398
    9. ')' → logprob: -12.257940292358398
    10. '    ' → logprob: -12.757940292358398

Token 25: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00047166430158540606
    2. ' w' → logprob: -7.750471591949463
    3. '(w' → logprob: -10.125472068786621
    4. '	w' → logprob: -15.000472068786621
    5. '(' → logprob: -15.375472068786621
    6. '   ' → logprob: -15.750472068786621
    7. ' (' → logprob: -16.250471115112305
    8. 'W' → logprob: -17.125471115112305
    9. '_w' → logprob: -17.625471115112305
    10. ' ' → logprob: -17.750471115112305

Token 26: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011057492345571518
    2. 'for' → logprob: -4.511057376861572
    3. ')' → logprob: -12.13605785369873
    4. '	for' → logprob: -13.13605785369873
    5. '   ' → logprob: -14.13605785369873
    6. ']' → logprob: -14.63605785369873
    7. '```' → logprob: -14.76105785369873
    8. ' ' → logprob: -15.13605785369873
    9. '<|end|>' → logprob: -16.511056900024414
    10. ',' → logprob: -16.886056900024414

Token 27: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6232056021690369
    2. ' _' → logprob: -0.8732056021690369
    3. ' range' → logprob: -3.4982056617736816
    4. '_range' → logprob: -5.248205661773682
    5. 'range' → logprob: -5.623205661773682
    6. '_i' → logprob: -5.748205661773682
    7. ' in' → logprob: -6.873205661773682
    8. '_row' → logprob: -7.623205661773682
    9. ' ' → logprob: -7.623205661773682
    10. ' i' → logprob: -7.748205661773682

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054302774369716644
    2. 'in' → logprob: -3.17930269241333
    3. 'range' → logprob: -4.55430269241333
    4. ' range' → logprob: -8.054303169250488
    5. ' ' → logprob: -8.304303169250488
    6. ']' → logprob: -9.804303169250488
    7. '  ' → logprob: -10.554303169250488
    8. 'w' → logprob: -11.429303169250488
    9. ')' → logprob: -11.554303169250488
    10. '(range' → logprob: -11.679303169250488

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061980124562978745
    2. ' range' → logprob: -2.8119800090789795
    3. '(range' → logprob: -12.061980247497559
    4. '	range' → logprob: -12.436980247497559
    5. '   ' → logprob: -13.436980247497559
    6. ')' → logprob: -15.436980247497559
    7. ' xrange' → logprob: -15.436980247497559
    8. ' ' → logprob: -15.561980247497559
    9. ']' → logprob: -15.811980247497559
    10. '[' → logprob: -16.061979293823242

Token 30: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0002900565741583705
    2. 'h' → logprob: -8.250289916992188
    3. '(' → logprob: -10.625289916992188
    4. '	h' → logprob: -13.375289916992188
    5. ' (' → logprob: -13.875289916992188
    6. ' h' → logprob: -14.375289916992188
    7. ')' → logprob: -15.000289916992188
    8. '   ' → logprob: -15.250289916992188
    9. '(w' → logprob: -15.375289916992188
    10. '(H' → logprob: -15.875289916992188

Token 31: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.746380237629637e-05
    2. ')' → logprob: -9.500097274780273
    3. ']' → logprob: -11.750097274780273
    4. ')]
' → logprob: -12.375097274780273
    5. ')])' → logprob: -12.750097274780273
    6. ')],' → logprob: -13.000097274780273
    7. ' )' → logprob: -13.375097274780273
    8. '])]' → logprob: -14.000097274780273
    9. ')]
' → logprob: -14.750097274780273
    10. '   ' → logprob: -14.750097274780273

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47180894017219543
    2. 'dist' → logprob: -1.096808910369873
    3. ' dist' → logprob: -4.346808910369873
    4. '	dist' → logprob: -4.471808910369873
    5. ')' → logprob: -4.971808910369873
    6. '
' → logprob: -5.346808910369873
    7. '<|end|>' → logprob: -6.471808910369873
    8. ' ' → logprob: -6.721808910369873
    9. '    
' → logprob: -6.971808910369873
    10. 'def' → logprob: -6.971808910369873

Token 33: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.12635958194732666
    2. ' dist' → logprob: -2.751359462738037
    3. '   ' → logprob: -3.001359462738037
    4. '	dist' → logprob: -6.001359462738037
    5. '
' → logprob: -6.501359462738037
    6. '    
' → logprob: -7.126359462738037
    7. '```' → logprob: -9.751359939575195
    8. ' 
' → logprob: -9.751359939575195
    9. '  
' → logprob: -9.876359939575195
    10. ' ' → logprob: -10.126359939575195

Token 34: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0002993544621858746
    2. '[' → logprob: -8.125299453735352
    3. '```' → logprob: -13.875299453735352
    4. '[s' → logprob: -14.250299453735352
    5. ' [' → logprob: -15.000299453735352
    6. '[
' → logprob: -15.125299453735352
    7. '[end' → logprob: -15.125299453735352
    8. '[source' → logprob: -15.500299453735352
    9. '[src' → logprob: -15.750299453735352
    10. '[current' → logprob: -16.00029945373535

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.1782583391759545e-05
    2. ']' → logprob: -10.500031471252441
    3. '][' → logprob: -12.750031471252441
    4. ' [' → logprob: -15.000031471252441
    5. '])' → logprob: -15.500031471252441
    6. ')]' → logprob: -15.750031471252441
    7. '```' → logprob: -15.750031471252441
    8. 'y' → logprob: -16.000032424926758
    9. '   ' → logprob: -16.875032424926758
    10. ')' → logprob: -16.875032424926758

Token 36: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002026900416240096
    2. '1' → logprob: -6.2520270347595215
    3. ']' → logprob: -10.377026557922363
    4. ' ' → logprob: -10.377026557922363
    5. '[' → logprob: -11.377026557922363
    6. ')]' → logprob: -12.127026557922363
    7. '])' → logprob: -12.502026557922363
    8. ']]' → logprob: -12.752026557922363
    9. 'y' → logprob: -13.002026557922363
    10. 'x' → logprob: -13.252026557922363

Token 37: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.172378808259964
    2. ']' → logprob: -1.9223787784576416
    3. ']][' → logprob: -5.047379016876221
    4. ' ][' → logprob: -5.547379016876221
    5. ')][' → logprob: -7.297379016876221
    6. ' ]' → logprob: -7.672379016876221
    7. ')]' → logprob: -8.422378540039062
    8. ']]' → logprob: -8.672378540039062
    9. ',' → logprob: -9.422378540039062
    10. '()][' → logprob: -9.922378540039062

Token 38: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.306760805164231e-05
    2. ' start' → logprob: -11.25001335144043
    3. '[start' → logprob: -20.00001335144043
    4. '(start' → logprob: -21.37501335144043
    5. ':start' → logprob: -21.75001335144043
    6. '	start' → logprob: -22.00001335144043
    7. '0' → logprob: -22.62501335144043
    8. '   ' → logprob: -22.75001335144043
    9. '```' → logprob: -23.25001335144043
    10. '=start' → logprob: -23.50001335144043

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.75000286102295
    3. ']' → logprob: -14.25000286102295
    4. '0' → logprob: -14.50000286102295
    5. '[
' → logprob: -15.62500286102295
    6. '   ' → logprob: -17.250001907348633
    7. '```' → logprob: -17.250001907348633
    8. '.' → logprob: -17.500001907348633
    9. '1' → logprob: -17.875001907348633
    10. ' [' → logprob: -18.125001907348633

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -18.25
    4. '۰' → logprob: -18.375
    5. '1' → logprob: -18.8125
    6. '   ' → logprob: -18.9375
    7. '[' → logprob: -19.1875
    8. '
' → logprob: -20.25
    9. '०' → logprob: -20.4375
    10. '０' → logprob: -20.5

Token 41: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4052514135837555
    2. ')]' → logprob: -1.155251383781433
    3. ']]' → logprob: -4.030251502990723
    4. ' ]' → logprob: -8.280251502990723
    5. ']=' → logprob: -10.530251502990723
    6. '])]' → logprob: -10.530251502990723
    7. ')' → logprob: -10.655251502990723
    8. '')]' → logprob: -11.155251502990723
    9. ']]=' → logprob: -11.280251502990723
    10. ' ]]' → logprob: -11.405251502990723

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693209946155548
    2. '=' → logprob: -2.126932144165039
    3. ']' → logprob: -12.751932144165039
    4. ' ' → logprob: -14.876932144165039
    5. ']=' → logprob: -15.501932144165039
    6. ',' → logprob: -15.751932144165039
    7. ' ]' → logprob: -15.876932144165039
    8. ')' → logprob: -16.25193214416504
    9. ' =)' → logprob: -16.75193214416504
    10. '```' → logprob: -17.37693214416504

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -20.62501335144043
    4. '۰' → logprob: -21.75001335144043
    5. ' ' → logprob: -22.75001335144043
    6. '０' → logprob: -23.37501335144043
    7. '  ' → logprob: -23.50001335144043
    8. '```' → logprob: -23.87501335144043
    9. '٠' → logprob: -23.87501335144043
    10. '00' → logprob: -24.00001335144043

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -20.750001907348633
    4. '   ' → logprob: -21.375001907348633
    5. '０' → logprob: -22.000001907348633
    6. '```' → logprob: -22.125001907348633
    7. ' ' → logprob: -22.375001907348633
    8. '  ' → logprob: -22.875001907348633
    9. '٠' → logprob: -23.000001907348633
    10. '`' → logprob: -23.000001907348633

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002469232538715005
    2. '   ' → logprob: -6.377469062805176
    3. '
' → logprob: -8.127469062805176
    4. '    
' → logprob: -8.127469062805176
    5. '  
' → logprob: -9.502469062805176
    6. '\n' → logprob: -10.877469062805176
    7. ' 
' → logprob: -11.002469062805176
    8. '<|end|>' → logprob: -11.002469062805176
    9. '' → logprob: -11.377469062805176
    10. '   
' → logprob: -11.627469062805176

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41998618841171265
    2. '   ' → logprob: -1.1699862480163574
    3. '<|end|>' → logprob: -4.544986248016357
    4. '    
' → logprob: -4.794986248016357
    5. ' 
' → logprob: -5.544986248016357
    6. 'd' → logprob: -6.169986248016357
    7. '\n' → logprob: -6.544986248016357
    8. ')' → logprob: -6.669986248016357
    9. '  
' → logprob: -6.669986248016357
    10. ',' → logprob: -6.919986248016357

Token 47: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.5331972241401672
    2. '   ' → logprob: -1.0331971645355225
    3. 'queue' (adapté à ' queue') → logprob: -3.0331971645355225
    4. ' q' → logprob: -5.408197402954102
    5. '	queue' → logprob: -6.783197402954102
    6. '
' → logprob: -6.783197402954102
    7. 'q' → logprob: -7.033197402954102
    8. ' que' → logprob: -7.533197402954102
    9. ' dq' → logprob: -7.533197402954102
    10. 'dq' → logprob: -8.408197402954102

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006016841623932123
    2. '=' → logprob: -5.131016731262207
    3. '.append' → logprob: -9.631016731262207
    4. '.' → logprob: -11.381016731262207
    5. '.enqueue' → logprob: -12.506016731262207
    6. '.extend' → logprob: -13.131016731262207
    7. '<|end|>' → logprob: -13.381016731262207
    8. '.dequeue' → logprob: -14.381016731262207
    9. '.add' → logprob: -14.631016731262207
    10. ')' → logprob: -14.631016731262207

Token 49: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.4740793704986572
    2. ' deque' → logprob: -0.9740793704986572
    3. 'de' → logprob: -13.599079132080078
    4. 'Deque' → logprob: -13.974079132080078
    5. ' dequeue' → logprob: -16.099079132080078
    6. '```' → logprob: -16.974079132080078
    7. '	de' → logprob: -17.099079132080078
    8. 'queue' → logprob: -18.099079132080078
    9. ' de' → logprob: -18.474079132080078
    10. '(de' → logprob: -18.474079132080078

Token 50: '([' (ID: 5194)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.5251988172531128
    2. '([' → logprob: -1.2751988172531128
    3. '(' → logprob: -2.2751989364624023
    4. '()' → logprob: -3.7751989364624023
    5. '((' → logprob: -6.525198936462402
    6. '(start' → logprob: -6.900198936462402
    7. '[(' → logprob: -7.525198936462402
    8. '([]' → logprob: -8.400198936462402
    9. '([
' → logprob: -9.525198936462402
    10. '([...' → logprob: -9.775198936462402

Token 51: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0001984146365430206
    2. '(start' → logprob: -9.000198364257812
    3. ' start' → logprob: -9.500198364257812
    4. '[start' → logprob: -16.125198364257812
    5. '(' → logprob: -17.125198364257812
    6. ')' → logprob: -17.750198364257812
    7. '   ' → logprob: -19.000198364257812
    8. '	start' → logprob: -19.000198364257812
    9. ' (' → logprob: -19.125198364257812
    10. ',start' → logprob: -19.250198364257812

Token 52: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0038498362991958857
    2. ')])' → logprob: -6.128849983215332
    3. ')' → logprob: -6.503849983215332
    4. ')]' → logprob: -9.253849983215332
    5. '])]' → logprob: -10.128849983215332
    6. ' ])' → logprob: -11.253849983215332
    7. ']))' → logprob: -12.628849983215332
    8. '))' → logprob: -12.628849983215332
    9. ']' → logprob: -12.753849983215332
    10. '])
' → logprob: -12.878849983215332

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09348359704017639
    2. '
' → logprob: -3.3434836864471436
    3. ' while' → logprob: -3.7184836864471436
    4. '    
' → logprob: -4.3434834480285645
    5. 'while' → logprob: -4.5934834480285645
    6. '```' → logprob: -5.7184834480285645
    7. '  
' → logprob: -6.5934834480285645
    8. ' 
' → logprob: -7.7184834480285645
    9. ')' → logprob: -7.8434834480285645
    10. '   
' → logprob: -7.9684834480285645

Token 54: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.028122067451477
    2. 'while' (adapté à ' while') → logprob: -1.278122067451477
    3. ' while' → logprob: -1.403122067451477
    4. '    
' → logprob: -2.9031219482421875
    5. '
' → logprob: -3.2781219482421875
    6. '  
' → logprob: -5.0281219482421875
    7. ' 
' → logprob: -5.6531219482421875
    8. ' ' → logprob: -5.9031219482421875
    9. '\n' → logprob: -6.0281219482421875
    10. '   
' → logprob: -6.0281219482421875

Token 55: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.25199949741363525
    2. 'queue' → logprob: -1.5019994974136353
    3. '(queue' → logprob: -10.001999855041504
    4. '	queue' → logprob: -11.001999855041504
    5. ' len' → logprob: -12.751999855041504
    6. ' ' → logprob: -13.251999855041504
    7. 'len' → logprob: -13.251999855041504
    8. 'que' → logprob: -14.251999855041504
    9. '.queue' → logprob: -15.126999855041504
    10. '   ' → logprob: -15.251999855041504

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017935218289494514
    2. '):' → logprob: -4.767935276031494
    3. '.p' → logprob: -5.017935276031494
    4. '>:' → logprob: -6.892935276031494
    5. '.pop' → logprob: -7.267935276031494
    6. '.' → logprob: -8.267934799194336
    7. '():' → logprob: -8.517934799194336
    8. '.append' → logprob: -8.767934799194336
    9. 'opleft' → logprob: -9.517934799194336
    10. ':not' → logprob: -10.017934799194336

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006432149093598127
    2. ',' → logprob: -8.500642776489258
    3. 'current' → logprob: -9.000642776489258
    4. ' current' → logprob: -9.125642776489258
    5. '   ' → logprob: -10.000642776489258
    6. ':' → logprob: -10.625642776489258
    7. 'x' → logprob: -11.000642776489258
    8. ' x' → logprob: -11.000642776489258
    9. '      ' → logprob: -11.500642776489258
    10. '    ' → logprob: -11.500642776489258

Token 58: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5996411442756653
    2. 'x' (adapté à ' x') → logprob: -1.2246410846710205
    3. ' current' → logprob: -2.2246410846710205
    4. 'current' → logprob: -3.3496410846710205
    5. '       ' → logprob: -5.0996413230896
    6. 'cur' → logprob: -6.4746413230896
    7. ' cur' → logprob: -6.7246413230896
    8. ' curr' → logprob: -6.9746413230896
    9. 'curr' → logprob: -6.9746413230896
    10. '           ' → logprob: -7.0996413230896

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007528089336119592
    2. ',y' → logprob: -7.500752925872803
    3. ' ,' → logprob: -9.000752449035645
    4. ',x' → logprob: -9.625752449035645
    5. ',current' → logprob: -13.375752449035645
    6. ',user' → logprob: -13.875752449035645
    7. ',next' → logprob: -13.875752449035645
    8. ',j' → logprob: -14.125752449035645
    9. ',n' → logprob: -14.125752449035645
    10. ',q' → logprob: -14.250752449035645

Token 60: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020678490400314
    2. ' y' → logprob: -2.3502068519592285
    3. '	y' → logprob: -16.22520637512207
    4. '   ' → logprob: -17.47520637512207
    5. '    ' → logprob: -18.60020637512207
    6. ',y' → logprob: -18.97520637512207
    7. ' ' → logprob: -19.35020637512207
    8. ')y' → logprob: -20.10020637512207
    9. '  ' → logprob: -20.35020637512207
    10. ',' → logprob: -20.72520637512207

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07967254519462585
    2. '=' → logprob: -2.5796725749969482
    3. ')' → logprob: -7.204672336578369
    4. ']' → logprob: -11.204672813415527
    5. '   ' → logprob: -11.329672813415527
    6. ')=' → logprob: -11.954672813415527
    7. '    ' → logprob: -12.954672813415527
    8. ' ' → logprob: -13.329672813415527
    9. ',' → logprob: -14.079672813415527
    10. '       ' → logprob: -14.204672813415527

Token 62: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.0031812789384275675
    2. 'queue' → logprob: -5.753181457519531
    3. '	queue' → logprob: -13.003181457519531
    4. '(queue' → logprob: -14.128181457519531
    5. ' que' → logprob: -15.253181457519531
    6. ' deque' → logprob: -15.628181457519531
    7. '.queue' → logprob: -16.12818145751953
    8. ' ' → logprob: -18.12818145751953
    9. 'que' → logprob: -18.37818145751953
    10. 'deque' → logprob: -18.87818145751953

Token 63: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.392824874026701e-05
    2. '.' → logprob: -10.50003433227539
    3. '.pop' → logprob: -12.37503433227539
    4. ').' → logprob: -14.25003433227539
    5. ' .' → logprob: -14.37503433227539
    6. 'p' → logprob: -14.87503433227539
    7. 'opleft' → logprob: -15.62503433227539
    8. '.dequeue' → logprob: -15.87503433227539
    9. '   ' → logprob: -16.25003433227539
    10. '].' → logprob: -16.75003433227539

Token 64: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0005268189124763012
    2. 'op' → logprob: -7.6255269050598145
    3. 'ople' → logprob: -10.250526428222656
    4. 'opl' → logprob: -12.625526428222656
    5. 'opt' → logprob: -17.250526428222656
    6. 'oplevel' → logprob: -17.375526428222656
    7. 'p' → logprob: -17.500526428222656
    8. 'opup' → logprob: -18.250526428222656
    9. '0' → logprob: -19.000526428222656
    10. 'opf' → logprob: -19.000526428222656

Token 65: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016623330884613097
    2. '(' → logprob: -9.375165939331055
    3. '()
' → logprob: -10.000165939331055
    4. ')' → logprob: -10.500165939331055
    5. '())' → logprob: -12.625165939331055
    6. '()]' → logprob: -13.250165939331055
    7. ' ()' → logprob: -13.750165939331055
    8. '       ' → logprob: -14.250165939331055
    9. '()`' → logprob: -14.375165939331055
    10. '()\' → logprob: -15.375165939331055

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024304785765707493
    2. '<|end|>' → logprob: -6.377430438995361
    3. '        
' → logprob: -8.25243091583252
    4. '   ' → logprob: -8.50243091583252
    5. ' for' → logprob: -9.25243091583252
    6. '
' → logprob: -9.87743091583252
    7. '<|end|>' → logprob: -10.62743091583252
    8. ',' → logprob: -10.75243091583252
    9. ')' → logprob: -11.12743091583252
    10. ' ' → logprob: -12.12743091583252

Token 67: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5468574166297913
    2. '       ' → logprob: -1.2968573570251465
    3. 'for' (adapté à ' for') → logprob: -1.9218573570251465
    4. ' directions' → logprob: -7.6718573570251465
    5. '   ' → logprob: -8.296857833862305
    6. '<|end|>' → logprob: -8.546857833862305
    7. '        
' → logprob: -8.796857833862305
    8. '        ' → logprob: -9.671857833862305
    9. 'd' → logprob: -9.796857833862305
    10. ',' → logprob: -10.296857833862305

Token 68: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.0862378403544426
    2. 'dx' → logprob: -2.586237907409668
    3. ' nx' → logprob: -5.336237907409668
    4. '```' → logprob: -7.086237907409668
    5. 'nx' → logprob: -7.211237907409668
    6. '(dx' → logprob: -7.586237907409668
    7. '   ' → logprob: -8.836237907409668
    8. '(nx' → logprob: -8.961237907409668
    9. '_dx' → logprob: -9.336237907409668
    10. '  ' → logprob: -10.336237907409668

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1523813009262085
    2. ' in' → logprob: -2.027381420135498
    3. '<|end|>' → logprob: -4.902381420135498
    4. ' ,' → logprob: -6.902381420135498
    5. 'in' → logprob: -6.902381420135498
    6. '<|end|>' → logprob: -9.15238094329834
    7. ',d' → logprob: -10.15238094329834
    8. ',in' → logprob: -10.52738094329834
    9. ',y' → logprob: -11.65238094329834
    10. ' ' → logprob: -12.27738094329834

Token 70: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.12696589529514313
    2. ' dy' → logprob: -2.1269659996032715
    3. '<|end|>' → logprob: -10.251965522766113
    4. 'd' → logprob: -14.251965522766113
    5. '<|end|>' → logprob: -14.626965522766113
    6. ' ' → logprob: -14.751965522766113
    7. '.dy' → logprob: -14.876965522766113
    8. 'Dy' → logprob: -15.126965522766113
    9. 'dym' → logprob: -16.00196647644043
    10. 'y' → logprob: -16.62696647644043

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004232496954500675
    2. 'in' → logprob: -5.629232406616211
    3. '<|end|>' → logprob: -7.379232406616211
    4. '<|end|>' → logprob: -12.754232406616211
    5. ')' → logprob: -13.129232406616211
    6. ',' → logprob: -13.629232406616211
    7. ' ' → logprob: -14.129232406616211
    8. 's' → logprob: -14.629232406616211
    9. 'In' → logprob: -15.691732406616211
    10. ' =' → logprob: -16.12923240661621

Token 72: ' ((' (ID: 3536)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.1305599957704544
    2. '[(' → logprob: -2.1305599212646484
    3. '[' → logprob: -6.130559921264648
    4. ' [' → logprob: -6.630559921264648
    5. ' ' → logprob: -9.505559921264648
    6. ' ((' → logprob: -10.505559921264648
    7. '[((' → logprob: -11.755559921264648
    8. '<|end|>' → logprob: -11.880559921264648
    9. '([(' → logprob: -12.255559921264648
    10. ' directions' → logprob: -13.005559921264648

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1329578012228012
    2. '0' → logprob: -2.132957696914673
    3. '-' → logprob: -5.132957935333252
    4. ' ' → logprob: -9.132957458496094
    5. ' -' → logprob: -12.632957458496094
    6. '```' → logprob: -15.007957458496094
    7. '(' → logprob: -15.507957458496094
    8. '+' → logprob: -15.507957458496094
    9. ')' → logprob: -15.632957458496094
    10. '   ' → logprob: -16.007957458496094

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002680112374946475
    2. ' ,' → logprob: -8.50026798248291
    3. '0' → logprob: -9.75026798248291
    4. '),' → logprob: -12.50026798248291
    5. '<|end|>' → logprob: -13.50026798248291
    6. ',),' → logprob: -14.62526798248291
    7. ')' → logprob: -15.62526798248291
    8. ' ' → logprob: -16.250268936157227
    9. '‌,' → logprob: -16.250268936157227
    10. ' ),' → logprob: -16.625268936157227

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020542122423648834
    2. ' ' → logprob: -3.8955421447753906
    3. ' ' → logprob: -16.39554214477539
    4. '۰' → logprob: -17.52054214477539
    5. '  ' → logprob: -17.58304214477539
    6. ' )' → logprob: -18.14554214477539
    7. '<|end|>' → logprob: -18.20804214477539
    8. ')' → logprob: -18.27054214477539
    9. '```' → logprob: -18.64554214477539
    10. ' ),' → logprob: -18.83304214477539

Token 76: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.010137337259948254
    2. '),(' → logprob: -4.635137557983398
    3. ' ),' → logprob: -8.135137557983398
    4. '),
' → logprob: -10.135137557983398
    5. ')' → logprob: -10.135137557983398
    6. '),

' → logprob: -12.010137557983398
    7. ',' → logprob: -13.510137557983398
    8. ''),' → logprob: -15.385137557983398
    9. ' ' → logprob: -15.760137557983398
    10. ',),' → logprob: -15.760137557983398

Token 77: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7077978849411011
    2. ' (' → logprob: -1.332797884941101
    3. '0' → logprob: -1.582797884941101
    4. ' ' → logprob: -3.4577980041503906
    5. '(-' → logprob: -5.332798004150391
    6. ' (-' → logprob: -6.582798004150391
    7. ' -' → logprob: -8.45779800415039
    8. '-' → logprob: -8.83279800415039
    9. '<|end|>' → logprob: -9.83279800415039
    10. ',' → logprob: -12.58279800415039

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '১' → logprob: -18.75
    4. '۱' → logprob: -18.9375
    5. '0' → logprob: -19.0625
    6. '１' → logprob: -19.1875
    7. '१' → logprob: -19.1875
    8. '<|end|>' → logprob: -19.4375
    9. '-' → logprob: -19.8125
    10. '```' → logprob: -20.0625

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003092631697654724
    2. '0' → logprob: -5.8780927658081055
    3. ' ,' → logprob: -8.253092765808105
    4. '),' → logprob: -10.878092765808105
    5. '<|end|>' → logprob: -12.253092765808105
    6. ')' → logprob: -13.503092765808105
    7. '),(' → logprob: -13.628092765808105
    8. ' ' → logprob: -14.753092765808105
    9. '‌,' → logprob: -15.878092765808105
    10. '```' → logprob: -16.12809181213379

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۰' → logprob: -18.250003814697266
    4. '1' → logprob: -19.250003814697266
    5. '```' → logprob: -20.187503814697266
    6. '<|end|>' → logprob: -20.500003814697266
    7. ')' → logprob: -20.687503814697266
    8. ',' → logprob: -21.375003814697266
    9. '٠' → logprob: -21.375003814697266
    10. '０' → logprob: -21.625003814697266

Token 81: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.22564589977264404
    2. '),' → logprob: -1.600645899772644
    3. ')' → logprob: -8.725646018981934
    4. ' ),' → logprob: -10.100646018981934
    5. '),
' → logprob: -11.100646018981934
    6. ',' → logprob: -11.725646018981934
    7. '),

' → logprob: -13.225646018981934
    8. '(' → logprob: -13.600646018981934
    9. ')(' → logprob: -14.225646018981934
    10. ' ' → logprob: -14.600646018981934

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7835754988482222e-05
    2. ' ' → logprob: -11.000018119812012
    3. '1' → logprob: -14.625018119812012
    4. '```' → logprob: -15.500018119812012
    5. ',' → logprob: -16.187517166137695
    6. '   ' → logprob: -16.625017166137695
    7. '۰' → logprob: -16.937517166137695
    8. '

' → logprob: -17.500017166137695
    9. '  ' → logprob: -17.562517166137695
    10. '
' → logprob: -18.000017166137695

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.195421494543552e-05
    2. '1' → logprob: -9.62507152557373
    3. ' ,' → logprob: -12.12507152557373
    4. ',-' → logprob: -15.62507152557373
    5. '-' → logprob: -17.250072479248047
    6. ',

' → logprob: -17.375072479248047
    7. ',
' → logprob: -17.375072479248047
    8. '<|end|>' → logprob: -17.500072479248047
    9. ')' → logprob: -18.000072479248047
    10. ',)' → logprob: -18.250072479248047

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. '-' → logprob: -11.375016212463379
    3. ' ' → logprob: -12.375016212463379
    4. '```' → logprob: -18.000015258789062
    5. ' -' → logprob: -18.250015258789062
    6. '

' → logprob: -19.250015258789062
    7. '１' → logprob: -19.625015258789062
    8. '   ' → logprob: -19.750015258789062
    9. ')' → logprob: -19.750015258789062
    10. '+' → logprob: -20.125015258789062

Token 85: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.018183069303631783
    2. '),' → logprob: -4.01818323135376
    3. ')' → logprob: -11.143182754516602
    4. ' ),' → logprob: -11.518182754516602
    5. ',' → logprob: -12.518182754516602
    6. '))' → logprob: -13.143182754516602
    7. '),
' → logprob: -13.643182754516602
    8. '),

' → logprob: -14.393182754516602
    9. ')(' → logprob: -15.268182754516602
    10. ',(' → logprob: -15.268182754516602

Token 86: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -18.0
    3. '0' → logprob: -18.75
    4. '−' → logprob: -19.0
    5. '1' → logprob: -19.125
    6. '```' → logprob: -21.125
    7. '-)' → logprob: -21.25
    8. '–' → logprob: -21.25
    9. '‑' → logprob: -21.5
    10. '-​' → logprob: -22.125

Token 87: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5760056972503662
    2. ',-' → logprob: -0.8260056972503662
    3. '-' → logprob: -9.826005935668945
    4. '1' → logprob: -12.701005935668945
    5. ',-

' → logprob: -12.951005935668945
    6. ' ,' → logprob: -13.451005935668945
    7. ' ,-' → logprob: -13.576005935668945
    8. ',(' → logprob: -14.326005935668945
    9. ',

' → logprob: -14.451005935668945
    10. ',)' → logprob: -14.576005935668945

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.250001907348633
    3. '))' → logprob: -14.250001907348633
    4. '```' → logprob: -15.500001907348633
    5. ')' → logprob: -17.000001907348633
    6. ')):
' → logprob: -17.625001907348633
    7. ')))' → logprob: -18.125001907348633
    8. '0' → logprob: -18.250001907348633
    9. ')):' → logprob: -18.250001907348633
    10. '-' → logprob: -18.812501907348633

Token 89: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4413003921508789
    2. ')):' → logprob: -1.191300392150879
    3. ')' → logprob: -3.066300392150879
    4. '))' → logprob: -5.066300392150879
    5. ' ):' → logprob: -10.816300392150879
    6. '),' → logprob: -11.066300392150879
    7. ':' → logprob: -11.066300392150879
    8. ')):
' → logprob: -11.816300392150879
    9. ' ))' → logprob: -12.941300392150879
    10. ')))' → logprob: -13.191300392150879

Token 90: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4694182872772217
    2. '       ' → logprob: -1.2194182872772217
    3. '):' → logprob: -3.5944182872772217
    4. '<|end|>' → logprob: -4.094418525695801
    5. ' :' → logprob: -4.594418525695801
    6. ')' → logprob: -4.719418525695801
    7. '        ' → logprob: -5.719418525695801
    8. ' ' → logprob: -5.719418525695801
    9. ',' → logprob: -5.969418525695801
    10. '           ' → logprob: -6.094418525695801

Token 91: ' nx' (ID: 50118)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04212284833192825
    2. ' 
' → logprob: -4.042122840881348
    3. '<|end|>' → logprob: -5.042122840881348
    4. '            ' → logprob: -5.667122840881348
    5. ')' → logprob: -5.667122840881348
    6. 'n' → logprob: -5.917122840881348
    7. 'x' → logprob: -6.167122840881348
    8. ' )' → logprob: -6.792122840881348
    9. '             
' → logprob: -7.042122840881348
    10. ' x' → logprob: -7.292122840881348

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04413837939500809
    2. '=' → logprob: -3.5441384315490723
    3. ' =' → logprob: -4.419138431549072
    4. ' ,' → logprob: -6.169138431549072
    5. ',n' → logprob: -9.294137954711914
    6. '<|end|>' → logprob: -10.794137954711914
    7. ',x' → logprob: -11.419137954711914
    8. '=n' → logprob: -11.919137954711914
    9. ')' → logprob: -12.544137954711914
    10. ',y' → logprob: -12.794137954711914

Token 93: ' ny' (ID: 4423)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1339336782693863
    2. ' x' → logprob: -2.1339337825775146
    3. ' =' → logprob: -6.1339335441589355
    4. '=' → logprob: -6.5089335441589355
    5. '<|end|>' → logprob: -6.6339335441589355
    6. 'y' → logprob: -6.7589335441589355
    7. ' ' → logprob: -7.5089335441589355
    8. ' y' → logprob: -8.383934020996094
    9. ',' → logprob: -10.258934020996094
    10. '0' → logprob: -11.383934020996094

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141547918319702
    2. '=' → logprob: -1.7014155387878418
    3. ')' → logprob: -14.451415061950684
    4. ',' → logprob: -14.576415061950684
    5. ' ' → logprob: -14.951415061950684
    6. ' =)' → logprob: -15.201415061950684
    7. '<|end|>' → logprob: -15.576415061950684
    8. ' =
' → logprob: -16.326416015625
    9. '＝' → logprob: -16.451416015625
    10. '=int' → logprob: -16.951416015625

Token 95: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3132624924182892
    2. 'x' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.063262939453125
    4. '(x' → logprob: -15.938262939453125
    5. '	x' → logprob: -16.063262939453125
    6. ')x' → logprob: -16.938262939453125
    7. '<|end|>' → logprob: -16.938262939453125
    8. '"x' → logprob: -17.813262939453125
    9. ' 
' → logprob: -19.188262939453125
    10. ' (' → logprob: -19.313262939453125

Token 96: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16023702919483185
    2. ' +' → logprob: -1.9102370738983154
    3. '<|end|>' → logprob: -11.535237312316895
    4. '+x' → logprob: -13.410237312316895
    5. '+xml' → logprob: -15.035237312316895
    6. '+n' → logprob: -15.285237312316895
    7. ' plus' → logprob: -15.410237312316895
    8. ' ' → logprob: -15.660237312316895
    9. '＋' → logprob: -15.785237312316895
    10. ' +
' → logprob: -16.285236358642578

Token 97: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -2.7848862373502925e-05
    2. ' dx' → logprob: -10.500027656555176
    3. '_dx' → logprob: -15.500027656555176
    4. '(dx' → logprob: -16.250028610229492
    5. ' ' → logprob: -18.875028610229492
    6. '.dx' → logprob: -19.000028610229492
    7. 'd' → logprob: -19.875028610229492
    8. 'Dx' → logprob: -19.875028610229492
    9. '1' → logprob: -21.500028610229492
    10. ',' → logprob: -21.625028610229492

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041696816333569586
    2. ' ,' → logprob: -7.8754167556762695
    3. ',y' → logprob: -10.75041675567627
    4. ',n' → logprob: -11.62541675567627
    5. '<|end|>' → logprob: -12.12541675567627
    6. '‌,' → logprob: -15.25041675567627
    7. ',
' → logprob: -15.50041675567627
    8. ')' → logprob: -16.125417709350586
    9. '```' → logprob: -16.500417709350586
    10. ' ' → logprob: -16.625417709350586

Token 99: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0076081594452261925
    2. 'y' → logprob: -4.882607936859131
    3. ' ' → logprob: -13.632608413696289
    4. ' ' → logprob: -14.382608413696289
    5. '<|end|>' → logprob: -15.882608413696289
    6. '	y' → logprob: -16.75760841369629
    7. ' ny' → logprob: -18.00760841369629
    8. ''y' → logprob: -19.00760841369629
    9. '(y' → logprob: -19.50760841369629
    10. ' ' → logprob: -19.63260841369629

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00033665422233752906
    2. '+y' → logprob: -8.250336647033691
    3. ' +' → logprob: -9.500336647033691
    4. '<|end|>' → logprob: -15.875336647033691
    5. '+
' → logprob: -16.000337600708008
    6. '+n' → logprob: -16.375337600708008
    7. '+h' → logprob: -16.500337600708008
    8. '+w' → logprob: -16.750337600708008
    9. '+x' → logprob: -16.875337600708008
    10. '+d' → logprob: -17.000337600708008

Token 101: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0003202114312443882
    2. 'y' → logprob: -8.500320434570312
    3. ' dy' → logprob: -9.125320434570312
    4. '.dy' → logprob: -12.875320434570312
    5. 'ny' → logprob: -13.375320434570312
    6. 'd' → logprob: -13.750320434570312
    7. 'ddy' → logprob: -13.750320434570312
    8. 'dym' → logprob: -15.125320434570312
    9. 'dx' → logprob: -15.250320434570312
    10. '1' → logprob: -15.500320434570312

Token 102: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519521713256836
    2. '0' → logprob: -1.5019521713256836
    3. ' nx' → logprob: -12.001952171325684
    4. '(nx' → logprob: -12.001952171325684
    5. ' ' → logprob: -12.876952171325684
    6. ' (' → logprob: -13.126952171325684
    7. ' not' → logprob: -13.251952171325684
    8. ' ny' → logprob: -13.251952171325684
    9. 'nx' → logprob: -13.626952171325684
    10. '(' → logprob: -15.001952171325684

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028093906585127115
    2. ' ' → logprob: -5.877809524536133
    3. 'nx' → logprob: -13.627809524536133
    4. '   ' → logprob: -14.127809524536133
    5. '(nx' → logprob: -14.252809524536133
    6. ' not' → logprob: -14.752809524536133
    7. ' nx' → logprob: -15.127809524536133
    8. 'not' → logprob: -15.252809524536133
    9. ' ' → logprob: -16.127809524536133
    10. '(' → logprob: -16.190309524536133

Token 107: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.003609458915889263
    2. '<=' → logprob: -5.628609657287598
    3. ' ' → logprob: -12.378609657287598
    4. ' <' → logprob: -12.628609657287598
    5. ' ≤' → logprob: -14.128609657287598
    6. '<' → logprob: -14.253609657287598
    7. '<|end|>' → logprob: -15.378609657287598
    8. ')<=' → logprob: -16.12860870361328
    9. ' ' → logprob: -16.75360870361328
    10. ' <=",' → logprob: -16.87860870361328

Token 108: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.03020039200782776
    2. ' nx' → logprob: -3.530200481414795
    3. 'ny' → logprob: -8.155200004577637
    4. '(nx' → logprob: -8.780200004577637
    5. ' ny' → logprob: -11.655200004577637
    6. '	n' → logprob: -17.030200958251953
    7. 'n' → logprob: -17.155200958251953
    8. '```' → logprob: -17.280200958251953
    9. 'Nx' → logprob: -17.405200958251953
    10. ' ' → logprob: -18.405200958251953

Token 109: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0700967088341713
    2. ' <' → logprob: -2.695096731185913
    3. ' and' → logprob: -9.570096969604492
    4. 'and' → logprob: -9.570096969604492
    5. '<|end|>' → logprob: -11.070096969604492
    6. '<w' → logprob: -13.070096969604492
    7. '<n' → logprob: -14.195096969604492
    8. '<len' → logprob: -14.695096969604492
    9. ' ' → logprob: -15.195096969604492
    10. '<size' → logprob: -15.445096969604492

Token 110: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005233763717114925
    2. ' w' → logprob: -5.2552337646484375
    3. '	w' → logprob: -18.130233764648438
    4. '_w' → logprob: -20.880233764648438
    5. '=w' → logprob: -21.380233764648438
    6. '>w' → logprob: -21.505233764648438
    7. '<w' → logprob: -21.880233764648438
    8. '```' → logprob: -22.255233764648438
    9. '   ' → logprob: -22.380233764648438
    10. ' ' → logprob: -22.505233764648438

Token 111: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06197183206677437
    2. 'and' → logprob: -2.81197190284729
    3. ' ' → logprob: -12.436971664428711
    4. '<|end|>' → logprob: -15.686971664428711
    5. '	and' → logprob: -18.31197166442871
    6. ' ' → logprob: -18.93697166442871
    7. ' 
' → logprob: -19.43697166442871
    8. ' и' → logprob: -19.56197166442871
    9. ')' → logprob: -19.56197166442871
    10. '0' → logprob: -19.68697166442871

Token 112: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10024560242891312
    2. '0' → logprob: -2.350245714187622
    3. ' ny' → logprob: -10.600245475769043
    4. ' ' → logprob: -11.600245475769043
    5. 'y' → logprob: -13.475245475769043
    6. ' y' → logprob: -13.600245475769043
    7. '<|end|>' → logprob: -14.350245475769043
    8. 'ny' → logprob: -14.725245475769043
    9. '  ' → logprob: -14.975245475769043
    10. ' 
' → logprob: -15.350245475769043

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000712670327629894
    2. ' ' → logprob: -7.250712871551514
    3. 'ny' → logprob: -13.125712394714355
    4. ' ny' → logprob: -14.375712394714355
    5. '<|end|>' → logprob: -16.000713348388672
    6. '  ' → logprob: -18.375713348388672
    7. 'y' → logprob: -19.000713348388672
    8. '   ' → logprob: -19.250713348388672
    9. ' ' → logprob: -19.625713348388672
    10. '
' → logprob: -19.750713348388672

Token 114: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.041396837681531906
    2. ' <=' → logprob: -3.9163968563079834
    3. '<' → logprob: -4.291396617889404
    4. ' ' → logprob: -5.666396617889404
    5. '<|end|>' → logprob: -5.916396617889404
    6. '<=' → logprob: -7.666396617889404
    7. '        ' → logprob: -9.416397094726562
    8. 'y' → logprob: -10.291397094726562
    9. ' y' → logprob: -10.541397094726562
    10. '0' → logprob: -10.666397094726562

Token 115: ' ny' (ID: 4423)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07889308780431747
    2. ' h' → logprob: -2.5788931846618652
    3. ' ny' → logprob: -13.828892707824707
    4. 'y' → logprob: -14.453892707824707
    5. 'ny' → logprob: -14.578892707824707
    6. ' ' → logprob: -14.703892707824707
    7. 'hy' → logprob: -15.203892707824707
    8. '	h' → logprob: -15.328892707824707
    9. '<|end|>' → logprob: -15.828892707824707
    10. '(h' → logprob: -16.328893661499023

Token 116: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0012380871921777725
    2. '<' → logprob: -6.751237869262695
    3. ' ' → logprob: -10.001237869262695
    4. '<|end|>' → logprob: -10.876237869262695
    5. '<h' → logprob: -13.626237869262695
    6. 'h' → logprob: -14.251237869262695
    7. ' h' → logprob: -14.626237869262695
    8. 'w' → logprob: -14.751237869262695
    9. ' <
' → logprob: -15.001237869262695
    10. ' ' → logprob: -15.626237869262695

Token 117: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00861528143286705
    2. ' h' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.383615493774414
    4. '<|end|>' → logprob: -15.883615493774414
    5. '	h' → logprob: -17.883615493774414
    6. '
' → logprob: -18.258615493774414
    7. ' ' → logprob: -18.633615493774414
    8. '<h' → logprob: -19.383615493774414
    9. '[h' → logprob: -19.383615493774414
    10. '   ' → logprob: -19.508615493774414

Token 118: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008628287352621555
    2. 'and' → logprob: -4.7586283683776855
    3. '           ' → logprob: -12.633627891540527
    4. ':' → logprob: -12.758627891540527
    5. ' ' → logprob: -12.883627891540527
    6. '<|end|>' → logprob: -13.633627891540527
    7. '            ' → logprob: -13.758627891540527
    8. ',' → logprob: -14.383627891540527
    9. '               ' → logprob: -14.508627891540527
    10. ')' → logprob: -14.883627891540527

Token 119: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005905331112444401
    2. 'and' → logprob: -5.2559051513671875
    3. '           ' → logprob: -8.505905151367188
    4. ' ' → logprob: -8.630905151367188
    5. '            ' → logprob: -8.880905151367188
    6. '               ' → logprob: -9.005905151367188
    7. '<|end|>' → logprob: -12.005905151367188
    8. '                ' → logprob: -12.130905151367188
    9. '              ' → logprob: -12.505905151367188
    10. '             ' → logprob: -12.880905151367188

Token 120: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3490442633628845
    2. '               ' → logprob: -2.0990443229675293
    3. ' if' → logprob: -2.3490443229675293
    4. '                   ' → logprob: -3.3490443229675293
    5. '                ' → logprob: -4.224044322967529
    6. '<|end|>' → logprob: -4.474044322967529
    7. 'and' → logprob: -5.224044322967529
    8. ' ' → logprob: -5.474044322967529
    9. '           ' → logprob: -6.724044322967529
    10. '                
' → logprob: -7.099044322967529

Token 121: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.11782275140285492
    2. ' dist' → logprob: -2.2428226470947266
    3. 'grid' → logprob: -5.742822647094727
    4. 'dist' → logprob: -6.367822647094727
    5. '	grid' → logprob: -10.742822647094727
    6. ' ' → logprob: -11.117822647094727
    7. '(grid' → logprob: -11.367822647094727
    8. '(dist' → logprob: -12.680322647094727
    9. '	dist' → logprob: -12.680322647094727
    10. '```' → logprob: -12.992822647094727

Token 122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5690089639974758e-05
    2. '][' → logprob: -12.000015258789062
    3. '[y' → logprob: -12.125015258789062
    4. ' [' → logprob: -13.000015258789062
    5. ')[' → logprob: -15.000015258789062
    6. '[
' → logprob: -15.375015258789062
    7. '[n' → logprob: -15.500015258789062
    8. '```' → logprob: -15.500015258789062
    9. '
' → logprob: -16.000015258789062
    10. ']' → logprob: -16.500015258789062

Token 123: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.9743012671824545e-05
    2. ' ny' → logprob: -11.250020027160645
    3. 'y' → logprob: -12.500020027160645
    4. 'n' → logprob: -14.125020027160645
    5. '][' → logprob: -14.375020027160645
    6. 'nyi' → logprob: -14.375020027160645
    7. ']' → logprob: -14.500020027160645
    8. '[' → logprob: -15.750020027160645
    9. ''ny' → logprob: -16.000019073486328
    10. 'yn' → logprob: -16.625019073486328

Token 124: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009311101748608053
    2. '[n' → logprob: -7.125931262969971
    3. ']' → logprob: -9.250930786132812
    4. ' ][' → logprob: -11.000930786132812
    5. '[' → logprob: -11.375930786132812
    6. '[y' → logprob: -14.500930786132812
    7. '"][' → logprob: -14.500930786132812
    8. '(nx' → logprob: -15.375930786132812
    9. ''][' → logprob: -15.750930786132812
    10. '
' → logprob: -16.000930786132812

Token 125: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00012856863031629473
    2. ' nx' → logprob: -9.000128746032715
    3. '(nx' → logprob: -12.250128746032715
    4. 'x' → logprob: -16.3751277923584
    5. 'n' → logprob: -16.5001277923584
    6. 'Nx' → logprob: -17.0001277923584
    7. 'xn' → logprob: -17.1251277923584
    8. ']' → logprob: -18.3751277923584
    9. '   ' → logprob: -18.8751277923584
    10. '
' → logprob: -19.5001277923584

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03243665769696236
    2. ']==' → logprob: -3.6574366092681885
    3. ' ]' → logprob: -5.407436847686768
    4. ']!=' → logprob: -6.657436847686768
    5. ']=='' → logprob: -8.65743637084961
    6. ']!='' → logprob: -9.78243637084961
    7. '==' → logprob: -10.15743637084961
    8. ')' → logprob: -10.65743637084961
    9. ' ==' → logprob: -10.90743637084961
    10. ' !=' → logprob: -11.15743637084961

Token 127: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5083057880401611
    2. ' !=' → logprob: -1.6333057880401611
    3. '==' → logprob: -2.008305788040161
    4. '!=' → logprob: -2.758305788040161
    5. ' and' → logprob: -6.508305549621582
    6. ')' → logprob: -7.133305549621582
    7. '=='' → logprob: -7.383305549621582
    8. '!='' → logprob: -7.633305549621582
    9. ' not' → logprob: -7.758305549621582
    10. ' ' → logprob: -8.008305549621582

Token 128: ' '' (ID: 461)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.06287024915218353
    2. ' '#'' → logprob: -3.0628702640533447
    3. ''' → logprob: -4.812870025634766
    4. '#' → logprob: -5.562870025634766
    5. '"#' → logprob: -7.312870025634766
    6. ' ' → logprob: -7.687870025634766
    7. ' '#' → logprob: -8.437870025634766
    8. '1' → logprob: -8.937870025634766
    9. ' "#"' → logprob: -9.187870025634766
    10. '"' → logprob: -9.437870025634766

Token 129: 'x' (ID: 87)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0002100965939462185
    2. ''#' → logprob: -9.00020980834961
    3. 'x' → logprob: -10.25020980834961
    4. 'X' → logprob: -11.25020980834961
    5. '.' → logprob: -11.87520980834961
    6. '#w' → logprob: -12.00020980834961
    7. '1' → logprob: -12.87520980834961
    8. 'W' → logprob: -12.87520980834961
    9. '#"' → logprob: -12.87520980834961
    10. ' '#'' → logprob: -13.25020980834961

Token 130: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1683463156223297
    2. ' and' → logprob: -1.9183462858200073
    3. ' '' → logprob: -5.168346405029297
    4. 'and' → logprob: -6.168346405029297
    5. '')' → logprob: -8.293346405029297
    6. ''s' → logprob: -11.043346405029297
    7. '<|end|>' → logprob: -12.043346405029297
    8. ' ' → logprob: -12.168346405029297
    9. ' ')' → logprob: -12.293346405029297
    10. ')' → logprob: -12.418346405029297

Token 131: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018183069303631783
    2. 'and' → logprob: -4.01818323135376
    3. ' ' → logprob: -10.393182754516602
    4. '<|end|>' → logprob: -14.018182754516602
    5. '                ' → logprob: -14.393182754516602
    6. ')' → logprob: -15.393182754516602
    7. '               ' → logprob: -15.393182754516602
    8. '                   ' → logprob: -15.393182754516602
    9. ' )' → logprob: -16.2681827545166
    10. '            ' → logprob: -16.3931827545166

Token 132: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.07889331132173538
    2. 'dist' → logprob: -2.5788934230804443
    3. '	dist' → logprob: -12.828893661499023
    4. '(dist' → logprob: -14.453893661499023
    5. '    ' → logprob: -16.203893661499023
    6. '   ' → logprob: -16.453893661499023
    7. 'Dist' → logprob: -16.453893661499023
    8. '.dist' → logprob: -16.828893661499023
    9. '_dist' → logprob: -17.078893661499023
    10. ' ' → logprob: -17.203893661499023

Token 133: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.375000953674316
    3. ' [' → logprob: -14.875000953674316
    4. '[
' → logprob: -17.000001907348633
    5. 'ny' → logprob: -17.625001907348633
    6. '][' → logprob: -18.500001907348633
    7. '   ' → logprob: -18.750001907348633
    8. '``' → logprob: -18.750001907348633
    9. '[n' → logprob: -19.062501907348633
    10. ' ny' → logprob: -19.250001907348633

Token 134: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.07978053390979767
    2. '[' → logprob: -2.5797805786132812
    3. ' ny' → logprob: -7.079780578613281
    4. 'y' → logprob: -10.829780578613281
    5. 'yn' → logprob: -12.579780578613281
    6. '][' → logprob: -12.579780578613281
    7. '   ' → logprob: -12.829780578613281
    8. 'n' → logprob: -12.829780578613281
    9. '```' → logprob: -13.329780578613281
    10. 'vy' → logprob: -13.454780578613281

Token 135: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.17564325034618378
    2. '][' → logprob: -2.3006432056427
    3. '[' → logprob: -2.8006432056427
    4. '}[' → logprob: -10.300642967224121
    5. '"][' → logprob: -11.050642967224121
    6. '>[' → logprob: -11.300642967224121
    7. '```' → logprob: -11.550642967224121
    8. ' [' → logprob: -12.050642967224121
    9. ''][' → logprob: -12.300642967224121
    10. ']' → logprob: -12.300642967224121

Token 136: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.023875167593359947
    2. 'x' → logprob: -3.7738752365112305
    3. ' nx' → logprob: -7.3988752365112305
    4. '(nx' → logprob: -11.27387523651123
    5. 'xn' → logprob: -13.02387523651123
    6. 'n' → logprob: -13.39887523651123
    7. '0' → logprob: -15.27387523651123
    8. '```' → logprob: -15.64887523651123
    9. '[x' → logprob: -16.023874282836914
    10. 'Nx' → logprob: -16.148874282836914

Token 137: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5833402276039124
    2. ' ==' → logprob: -1.3333401679992676
    3. ']==' → logprob: -2.0833401679992676
    4. ' ]' → logprob: -4.083340167999268
    5. '==' → logprob: -4.333340167999268
    6. '==-' → logprob: -4.458340167999268
    7. ' ' → logprob: -5.083340167999268
    8. ')' → logprob: -5.208340167999268
    9. ')==' → logprob: -8.833340644836426
    10. ' )' → logprob: -8.958340644836426

Token 138: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6277642250061035
    2. '==' → logprob: -1.1277642250061035
    3. '==-' → logprob: -2.0027642250061035
    4. '<' → logprob: -6.3777642250061035
    5. ']==' → logprob: -6.3777642250061035
    6. ' ' → logprob: -6.7527642250061035
    7. ')' → logprob: -6.8777642250061035
    8. ')==' → logprob: -7.5027642250061035
    9. '=' → logprob: -7.6277642250061035
    10. '[' → logprob: -7.7527642250061035

Token 139: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013259568950161338
    2. ' -' → logprob: -6.626326084136963
    3. ' ' → logprob: -17.251325607299805
    4. '   ' → logprob: -17.501325607299805
    5. '	' → logprob: -18.376325607299805
    6. '−' → logprob: -18.751325607299805
    7. '```' → logprob: -19.751325607299805
    8. '<|end|>' → logprob: -20.001325607299805
    9. '‌' → logprob: -20.126325607299805
    10. '  ' → logprob: -20.251325607299805

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8921695047756657e-05
    2. ' ' → logprob: -10.500028610229492
    3. '<|end|>' → logprob: -14.500028610229492
    4. '0' → logprob: -15.375028610229492
    5. '```' → logprob: -15.625028610229492
    6. '   ' → logprob: -15.625028610229492
    7. '.' → logprob: -16.687528610229492
    8. '2' → logprob: -16.750028610229492
    9. '  ' → logprob: -16.937528610229492
    10. ',' → logprob: -17.750028610229492

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006178391631692648
    2. ':
' → logprob: -7.875617980957031
    3. '):' → logprob: -8.750617980957031
    4. ' :' → logprob: -9.875617980957031
    5. ' and' → logprob: -11.375617980957031
    6. '<|end|>' → logprob: -11.875617980957031
    7. ')' → logprob: -12.625617980957031
    8. ':

' → logprob: -13.500617980957031
    9. '):
' → logprob: -13.750617980957031
    10. ',' → logprob: -14.250617980957031

Token 142: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18724510073661804
    2. '<|end|>' → logprob: -2.8122451305389404
    3. '               ' → logprob: -3.0622451305389404
    4. '                       ' → logprob: -3.6872451305389404
    5. ':' → logprob: -4.312244892120361
    6. '                               ' → logprob: -5.062244892120361
    7. '                ' → logprob: -5.187244892120361
    8. ')' → logprob: -5.812244892120361
    9. '                    ' → logprob: -5.937244892120361
    10. ' ' → logprob: -6.687244892120361

Token 143: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.19460907578468323
    2. 'dist' (adapté à ' dist') → logprob: -2.3196091651916504
    3. '                       ' → logprob: -2.8196091651916504
    4. '                   ' → logprob: -4.06960916519165
    5. '                    ' → logprob: -6.94460916519165
    6. '               ' → logprob: -8.194608688354492
    7. '                        ' → logprob: -8.694608688354492
    8. '	dist' → logprob: -8.944608688354492
    9. '                ' → logprob: -9.819608688354492
    10. '                           ' → logprob: -10.694608688354492

Token 144: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -15.750000953674316
    3. '```' → logprob: -15.875000953674316
    4. '<|end|>' → logprob: -16.25
    5. '[
' → logprob: -16.875
    6. '][' → logprob: -17.75
    7. ')[' → logprob: -18.125
    8. ' ' → logprob: -19.1875
    9. '<|end|>' → logprob: -19.1875
    10. '​' → logprob: -19.25

Token 145: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00010998018842656165
    2. ' ny' → logprob: -9.125109672546387
    3. '[' → logprob: -14.375109672546387
    4. 'y' → logprob: -15.875109672546387
    5. 'nyi' → logprob: -16.000110626220703
    6. 'yn' → logprob: -16.750110626220703
    7. 'n' → logprob: -16.875110626220703
    8. '   ' → logprob: -17.500110626220703
    9. 'ni' → logprob: -17.625110626220703
    10. ''ny' → logprob: -18.250110626220703

Token 146: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18048526346683502
    2. '[' → logprob: -1.8054852485656738
    3. '                   ' → logprob: -8.555485725402832
    4. '               ' → logprob: -9.055485725402832
    5. '                       ' → logprob: -9.555485725402832
    6. ']' → logprob: -9.680485725402832
    7. ''][' → logprob: -9.680485725402832
    8. ']][' → logprob: -10.430485725402832
    9. ' ][' → logprob: -10.430485725402832
    10. '```' → logprob: -10.430485725402832

Token 147: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.6457282304763794
    2. 'x' → logprob: -0.7707282304763794
    3. ' nx' → logprob: -4.64572811126709
    4. '(nx' → logprob: -6.14572811126709
    5. 'ny' → logprob: -7.27072811126709
    6. '1' → logprob: -8.52072811126709
    7. ' ny' → logprob: -9.52072811126709
    8. '[' → logprob: -9.89572811126709
    9. 'xn' → logprob: -9.89572811126709
    10. '0' → logprob: -10.02072811126709

Token 148: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008114510215818882
    2. ' =' → logprob: -5.633114337921143
    3. ' ]' → logprob: -6.008114337921143
    4. ']=' → logprob: -7.008114337921143
    5. '=' → logprob: -7.133114337921143
    6. ')' → logprob: -8.0081148147583
    7. ' ' → logprob: -12.8831148147583
    8. ' )' → logprob: -13.0081148147583
    9. ')=' → logprob: -13.5081148147583
    10. '```' → logprob: -13.8831148147583

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004621780011802912
    2. '=' → logprob: -5.379621982574463
    3. ' ' → logprob: -13.879621505737305
    4. ' =
' → logprob: -15.004621505737305
    5. ')' → logprob: -15.754621505737305
    6. ']' → logprob: -16.379621505737305
    7. '```' → logprob: -17.129621505737305
    8. ' ' → logprob: -17.629621505737305
    9. '<|end|>' → logprob: -17.754621505737305
    10. ' =)' → logprob: -18.254621505737305

Token 150: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4740840196609497
    2. ' dist' → logprob: -0.9740840196609497
    3. '	dist' → logprob: -12.22408390045166
    4. '(dist' → logprob: -14.34908390045166
    5. 'd' → logprob: -14.84908390045166
    6. ' ' → logprob: -15.09908390045166
    7. '_dist' → logprob: -15.47408390045166
    8. '0' → logprob: -15.59908390045166
    9. '.dist' → logprob: -15.97408390045166
    10. 'Dist' → logprob: -16.099084854125977

Token 151: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00018244501552544534
    2. '[' → logprob: -9.000182151794434
    3. 'y' → logprob: -9.750182151794434
    4. '```' → logprob: -15.250182151794434
    5. '   ' → logprob: -15.625182151794434
    6. ' [' → logprob: -16.12518310546875
    7. '[user' → logprob: -16.87518310546875
    8. ' y' → logprob: -17.00018310546875
    9. '	y' → logprob: -17.25018310546875
    10. ',y' → logprob: -18.25018310546875

Token 152: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006210576975718141
    2. '[' → logprob: -7.6256208419799805
    3. ' ][' → logprob: -9.12562084197998
    4. '[x' → logprob: -11.50062084197998
    5. ',' → logprob: -12.87562084197998
    6. '"][' → logprob: -12.87562084197998
    7. ']' → logprob: -13.87562084197998
    8. 'x' → logprob: -14.00062084197998
    9. ']+' → logprob: -14.00062084197998
    10. ',x' → logprob: -14.00062084197998

Token 153: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.764977686339989e-05
    2. ' x' → logprob: -9.875057220458984
    3. '0' → logprob: -12.375057220458984
    4. 'nx' → logprob: -14.625057220458984
    5. 'y' → logprob: -14.875057220458984
    6. ')x' → logprob: -15.125057220458984
    7. ']' → logprob: -15.875057220458984
    8. '```' → logprob: -16.000057220458984
    9. '(nx' → logprob: -16.125057220458984
    10. '
' → logprob: -16.500057220458984

Token 154: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1970071643590927
    2. ']+' → logprob: -2.322007179260254
    3. ']' → logprob: -2.947007179260254
    4. ' +' → logprob: -3.572007179260254
    5. ')+' → logprob: -9.697007179260254
    6. '}+' → logprob: -10.822007179260254
    7. ')' → logprob: -11.072007179260254
    8. '[' → logprob: -11.072007179260254
    9. ' ]' → logprob: -11.697007179260254
    10. '+]' → logprob: -12.197007179260254

Token 155: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02324652671813965
    2. ' +' → logprob: -3.7732465267181396
    3. '1' → logprob: -15.148246765136719
    4. '```' → logprob: -15.898246765136719
    5. ']+' → logprob: -16.27324676513672
    6. ' plus' → logprob: -16.27324676513672
    7. '[' → logprob: -16.52324676513672
    8. ' ' → logprob: -16.64824676513672
    9. '＋' → logprob: -17.02324676513672
    10. ' ' → logprob: -17.39824676513672

Token 156: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011705794604495168
    2. ' ' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.75117015838623
    4. '   ' → logprob: -15.75117015838623
    5. '```' → logprob: -16.001171112060547
    6. '
' → logprob: -18.751171112060547
    7. '  ' → logprob: -18.876171112060547
    8. '`' → logprob: -18.876171112060547
    9. '<|end|>' → logprob: -19.751171112060547
    10. '[' → logprob: -20.563671112060547

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -17.1250057220459
    4. '   ' → logprob: -17.5000057220459
    5. '
' → logprob: -20.0000057220459
    6. '`' → logprob: -20.3750057220459
    7. '  ' → logprob: -20.6875057220459
    8. '                   ' → logprob: -20.7500057220459
    9. ' ' → logprob: -20.9375057220459
    10. '<|end|>' → logprob: -21.0625057220459

Token 158: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012071614153683186
    2. '
' → logprob: -4.63707160949707
    3. '                    
' → logprob: -7.13707160949707
    4. '               ' → logprob: -7.76207160949707
    5. 'queue' → logprob: -7.88707160949707
    6. ' queue' → logprob: -8.26207160949707
    7. '           ' → logprob: -9.51207160949707
    8. '
' → logprob: -9.76207160949707
    9. '                       ' → logprob: -10.01207160949707
    10. '                    ' → logprob: -10.13707160949707

Token 159: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004621422383934259
    2. '                    
' → logprob: -6.129621505737305
    3. '               ' → logprob: -7.129621505737305
    4. '
' → logprob: -7.629621505737305
    5. '<|end|>' → logprob: -8.129621505737305
    6. '           ' → logprob: -8.879621505737305
    7. 'queue' → logprob: -9.129621505737305
    8. '                    ' → logprob: -9.254621505737305
    9. '                       ' → logprob: -9.504621505737305
    10. '       ' → logprob: -9.629621505737305

Token 160: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.008623674511909485
    2. ' queue' → logprob: -4.7586236000061035
    3. '                   ' → logprob: -11.883624076843262
    4. '(queue' → logprob: -13.383624076843262
    5. '	queue' → logprob: -15.383624076843262
    6. 'deque' → logprob: -15.758624076843262
    7. '.queue' → logprob: -16.133623123168945
    8. 'que' → logprob: -16.633623123168945
    9. '                       ' → logprob: -17.883623123168945
    10. 'enqueue' → logprob: -18.258623123168945

Token 161: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.129266067640856e-05
    2. '.' → logprob: -11.500020980834961
    3. '.extend' → logprob: -12.000020980834961
    4. '.app' → logprob: -12.750020980834961
    5. '.enqueue' → logprob: -14.125020980834961
    6. 'append' → logprob: -14.250020980834961
    7. '.Append' → logprob: -15.250020980834961
    8. ').' → logprob: -16.12502098083496
    9. '.add' → logprob: -16.62502098083496
    10. '_append' → logprob: -16.87502098083496

Token 162: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.125015258789062
    3. ' ((' → logprob: -15.250015258789062
    4. '(((' → logprob: -16.375015258789062
    5. '(
' → logprob: -16.750015258789062
    6. '[(' → logprob: -19.125015258789062
    7. '```' → logprob: -19.250015258789062
    8. ' ' → logprob: -19.375015258789062
    9. ')((' → logprob: -19.375015258789062
    10. ' (' → logprob: -20.250015258789062

Token 163: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0005171707598492503
    2. ' nx' → logprob: -7.62551736831665
    3. '(nx' → logprob: -10.500516891479492
    4. 'n' → logprob: -13.500516891479492
    5. '```' → logprob: -16.500516891479492
    6. '   ' → logprob: -16.750516891479492
    7. '
' → logprob: -17.000516891479492
    8. 'ny' → logprob: -17.125516891479492
    9. ' ' → logprob: -18.125516891479492
    10. '

' → logprob: -18.750516891479492

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ' ,' → logprob: -12.125007629394531
    3. ',y' → logprob: -13.750007629394531
    4. '<|end|>' → logprob: -15.250007629394531
    5. ',
' → logprob: -15.375007629394531
    6. ',n' → logprob: -16.25000762939453
    7. '‌,' → logprob: -16.62500762939453
    8. '```' → logprob: -17.62500762939453
    9. 'y' → logprob: -19.00000762939453
    10. ')' → logprob: -19.25000762939453

Token 165: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00408053956925869
    2. ' ny' → logprob: -5.504080772399902
    3. 'nyi' → logprob: -14.379080772399902
    4. ' ' → logprob: -15.129080772399902
    5. ' ' → logprob: -15.379080772399902
    6. '   ' → logprob: -15.629080772399902
    7. 'yn' → logprob: -16.254079818725586
    8. 'Ny' → logprob: -16.379079818725586
    9. '```' → logprob: -16.504079818725586
    10. 'iy' → logprob: -16.504079818725586

Token 166: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25207167863845825
    2. ')' → logprob: -1.5020716190338135
    3. '))
' → logprob: -9.502071380615234
    4. ')
' → logprob: -9.627071380615234
    5. ')))' → logprob: -13.377071380615234
    6. ' ))' → logprob: -16.252071380615234
    7. ' )' → logprob: -16.502071380615234
    8. '                   ' → logprob: -17.127071380615234
    9. '),' → logprob: -17.252071380615234
    10. ')}' → logprob: -17.252071380615234

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03194885328412056
    2. ')' → logprob: -4.156949043273926
    3. '<|end|>' → logprob: -5.406949043273926
    4. ' return' → logprob: -6.031949043273926
    5. '                   ' → logprob: -6.531949043273926
    6. 'return' → logprob: -6.656949043273926
    7. ':return' → logprob: -7.031949043273926
    8. '       ' → logprob: -7.031949043273926
    9. '    ' → logprob: -7.156949043273926
    10. '#' → logprob: -7.781949043273926

Token 168: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19015707075595856
    2. '   ' → logprob: -2.190157175064087
    3. ' return' → logprob: -2.815157175064087
    4. '	return' → logprob: -7.315156936645508
    5. '       ' → logprob: -8.065156936645508
    6. '<|end|>' → logprob: -8.565156936645508
    7. ':return' → logprob: -9.815156936645508
    8. ')' → logprob: -10.065156936645508
    9. ' ' → logprob: -10.315156936645508
    10. '  ' → logprob: -10.815156936645508

Token 169: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00020354038861114532
    2. ' dist' → logprob: -8.500203132629395
    3. '	dist' → logprob: -18.87520408630371
    4. '(dist' → logprob: -19.50020408630371
    5. '_dist' → logprob: -20.50020408630371
    6. 'Dist' → logprob: -21.25020408630371
    7. '[' → logprob: -23.00020408630371
    8. '.dist' → logprob: -23.12520408630371
    9. 'd' → logprob: -24.37520408630371
    10. '-dist' → logprob: -24.62520408630371

Token 170: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: 'def' (ID: 1314)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8033849000930786
    2. 'def' → logprob: -0.9283849000930786
    3. 'n' → logprob: -2.803384780883789
    4. '#' → logprob: -3.803384780883789
    5. '.' → logprob: -3.803384780883789
    6. 'start' → logprob: -4.553384780883789
    7. 'r' → logprob: -4.803384780883789
    8. 's' → logprob: -5.428384780883789
    9. 'grid' → logprob: -5.428384780883789
    10. 'if' → logprob: -5.553384780883789

Token 172: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.004617391619831324
    2. 'main' → logprob: -5.504617214202881
    3. ' solve' → logprob: -7.629617214202881
    4. 'solve' → logprob: -10.629617691040039
    5. ' find' → logprob: -11.379617691040039
    6. ' shortest' → logprob: -11.504617691040039
    7. ' parse' → logprob: -13.129617691040039
    8. ' calculate' → logprob: -14.129617691040039
    9. ' read' → logprob: -14.129617691040039
    10. '	main' → logprob: -14.379617691040039

Token 173: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.0391463193809614e-05
    2. '(' → logprob: -10.125060081481934
    3. ' ():' → logprob: -11.125060081481934
    4. '()' → logprob: -12.625060081481934
    5. '():
' → logprob: -13.250060081481934
    6. ':' → logprob: -16.25006103515625
    7. '(":' → logprob: -16.37506103515625
    8. '()>' → logprob: -16.75006103515625
    9. '(:' → logprob: -17.62506103515625
    10. '()(' → logprob: -17.75006103515625

Token 174: '   ' (ID: 271)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.118842713534832
    2. '   ' → logprob: -2.493842601776123
    3. 'w' → logprob: -3.743842601776123
    4. ' h' → logprob: -5.743842601776123
    5. ' input' → logprob: -6.993842601776123
    6. ' line' → logprob: -7.993842601776123
    7. ' readline' → logprob: -8.118843078613281
    8. '	w' → logprob: -8.618843078613281
    9. 'h' → logprob: -8.993843078613281
    10. ' lines' → logprob: -9.368843078613281

Token 175: ' input' (ID: 3422)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.24485477805137634
    2. 'while' → logprob: -1.7448548078536987
    3. 'input' (adapté à ' input') → logprob: -4.244854927062988
    4. 'for' → logprob: -4.744854927062988
    5. 'h' → logprob: -4.869854927062988
    6. ' w' → logprob: -5.619854927062988
    7. ' while' → logprob: -5.744854927062988
    8. '   ' → logprob: -6.369854927062988
    9. 'line' → logprob: -6.994854927062988
    10. 'W' → logprob: -7.619854927062988

Token 176: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1980304718017578
    2. '_line' → logprob: -2.573030471801758
    3. '_data' → logprob: -3.073030471801758
    4. '_lines' → logprob: -3.573030471801758
    5. ' =' → logprob: -3.823030471801758
    6. '().' → logprob: -5.823030471801758
    7. '=' → logprob: -6.073030471801758
    8. '_' → logprob: -7.323030471801758
    9. 'data' → logprob: -8.448030471801758
    10. 'line' → logprob: -8.573030471801758

Token 177: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.575941264629364
    2. ' sys' → logprob: -0.825941264629364
    3. '	sys' → logprob: -13.95094108581543
    4. '=sys' → logprob: -13.95094108581543
    5. '(sys' → logprob: -15.70094108581543
    6. 'lambda' → logprob: -17.45094108581543
    7. ' lambda' → logprob: -19.07594108581543
    8. '_sys' → logprob: -19.70094108581543
    9. 'input' → logprob: -19.82594108581543
    10. '/sys' → logprob: -20.82594108581543

Token 178: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0025703064166009426
    2. '.' → logprob: -6.002570152282715
    3. '.stdout' → logprob: -9.627570152282715
    4. '.readline' → logprob: -11.002570152282715
    5. '.argv' → logprob: -12.502570152282715
    6. '.std' → logprob: -12.502570152282715
    7. 'stdin' → logprob: -12.752570152282715
    8. '.st' → logprob: -14.377570152282715
    9. '.setdefault' → logprob: -15.252570152282715
    10. '.input' → logprob: -15.877570152282715

Token 179: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000488110730657354
    2. 'read' → logprob: -7.87548828125
    3. '.read' → logprob: -9.37548828125
    4. '.readlines' → logprob: -11.75048828125
    5. ' readline' → logprob: -11.87548828125
    6. '_read' → logprob: -12.25048828125
    7. '.stdin' → logprob: -14.25048828125
    8. '.' → logprob: -14.37548828125
    9. 'stdin' → logprob: -14.87548828125
    10. 'buffer' → logprob: -14.87548828125

Token 180: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02933291532099247
    2. '()
' → logprob: -3.6543328762054443
    3. '().' → logprob: -6.654333114624023
    4. '   ' → logprob: -7.029333114624023
    5. '()\' → logprob: -7.279333114624023
    6. '
' → logprob: -10.779333114624023
    7. '()

' → logprob: -11.029333114624023
    8. 'while' → logprob: -11.154333114624023
    9. '<|end|>' → logprob: -11.279333114624023
    10. '()>' → logprob: -11.279333114624023

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001867829472757876
    2. ' while' → logprob: -6.626867771148682
    3. 'while' → logprob: -7.751867771148682
    4. '	while' → logprob: -10.25186824798584
    5. 'w' → logprob: -10.75186824798584
    6. ',' → logprob: -11.37686824798584
    7. '()' → logprob: -11.62686824798584
    8. '    
' → logprob: -12.00186824798584
    9. '(' → logprob: -12.00186824798584
    10. ' w' → logprob: -12.62686824798584

Token 182: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4748956263065338
    2. 'w' → logprob: -0.9748955965042114
    3. '   ' → logprob: -7.724895477294922
    4. ' while' → logprob: -8.724895477294922
    5. 'h' → logprob: -8.974895477294922
    6. 'W' → logprob: -9.599895477294922
    7. 'wh' → logprob: -11.974895477294922
    8. ' w' → logprob: -12.724895477294922
    9. '```' → logprob: -13.224895477294922
    10. 'for' → logprob: -13.599895477294922

Token 183: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03805594891309738
    2. 'True' → logprob: -3.288055896759033
    3. '(True' → logprob: -11.163056373596191
    4. '=True' → logprob: -15.413056373596191
    5. ' Tru' → logprob: -17.538055419921875
    6. '1' → logprob: -18.288055419921875
    7. ' ' → logprob: -18.413055419921875
    8. '   ' → logprob: -19.163055419921875
    9. '_true' → logprob: -19.413055419921875
    10. '.True' → logprob: -20.163055419921875

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001627217628993094
    2. ':
' → logprob: -6.876627445220947
    3. ' :' → logprob: -7.876627445220947
    4. '():' → logprob: -9.501626968383789
    5. ',' → logprob: -9.626626968383789
    6. '   ' → logprob: -9.876626968383789
    7. '):' → logprob: -11.376626968383789
    8. ' :
' → logprob: -12.751626968383789
    9. '():
' → logprob: -13.001626968383789
    10. '       ' → logprob: -13.501626968383789

Token 185: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11282198131084442
    2. '       ' → logprob: -2.3628220558166504
    3. ' line' → logprob: -5.11282205581665
    4. '    ' → logprob: -6.23782205581665
    5. ' w' → logprob: -6.23782205581665
    6. ' n' → logprob: -6.86282205581665
    7. 'n' → logprob: -7.48782205581665
    8. 'line' → logprob: -7.73782205581665
    9. 'w' → logprob: -8.612821578979492
    10. ' ' → logprob: -9.987821578979492

Token 186: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.14208106696605682
    2. ' w' → logprob: -2.1420810222625732
    3. ' line' → logprob: -5.017081260681152
    4. 'line' → logprob: -5.767081260681152
    5. 'W' → logprob: -6.142081260681152
    6. ' W' → logprob: -6.767081260681152
    7. '       ' → logprob: -7.392081260681152
    8. '   ' → logprob: -8.017081260681152
    9. 'wh' → logprob: -8.142081260681152
    10. 'l' → logprob: -8.892081260681152

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08949628472328186
    2. ',h' → logprob: -2.464496374130249
    3. ' ,' → logprob: -7.96449613571167
    4. ',s' → logprob: -9.339496612548828
    5. ',n' → logprob: -9.714496612548828
    6. '=' → logprob: -11.464496612548828
    7. ',w' → logprob: -11.464496612548828
    8. ',height' → logprob: -12.214496612548828
    9. ',c' → logprob: -12.339496612548828
    10. ',input' → logprob: -12.714496612548828

Token 188: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10020720958709717
    2. ' h' → logprob: -2.3502073287963867
    3. ',h' → logprob: -14.475207328796387
    4. ' ' → logprob: -17.72520637512207
    5. ',' → logprob: -17.85020637512207
    6. '	h' → logprob: -18.47520637512207
    7. ' ' → logprob: -20.72520637512207
    8. 's' → logprob: -20.85020637512207
    9. ' ,' → logprob: -21.35020637512207
    10. '_h' → logprob: -21.72520637512207

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132636249065399
    2. ' =' → logprob: -1.3132636547088623
    3. ')' → logprob: -14.563263893127441
    4. ',' → logprob: -14.938263893127441
    5. '=input' → logprob: -15.063263893127441
    6. '＝' → logprob: -15.438263893127441
    7. ' ' → logprob: -15.938263893127441
    8. '<|end|>' → logprob: -15.938263893127441
    9. '>' → logprob: -16.563262939453125
    10. '=line' → logprob: -16.688262939453125

Token 190: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5759403705596924
    2. ' map' → logprob: -0.8259403705596924
    3. '	map' → logprob: -14.450940132141113
    4. '(map' → logprob: -15.700940132141113
    5. 'list' → logprob: -15.825940132141113
    6. ' list' → logprob: -17.32594108581543
    7. '[' → logprob: -17.70094108581543
    8. 'input' → logprob: -17.95094108581543
    9. ' ' → logprob: -17.95094108581543
    10. 'm' → logprob: -18.20094108581543

Token 191: '(int' (ID: 2742)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6287157535552979
    2. '(int' → logprob: -0.8787157535552979
    3. '(' → logprob: -3.003715753555298
    4. '(str' → logprob: -6.378715515136719
    5. 'input' → logprob: -10.378715515136719
    6. '(lambda' → logprob: -10.378715515136719
    7. '(list' → logprob: -10.878715515136719
    8. 'int' → logprob: -12.003715515136719
    9. ' (' → logprob: -12.128715515136719
    10. ',input' → logprob: -12.753715515136719

Token 192: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006654980126768351
    2. '(' → logprob: -5.756655216217041
    3. ',input' → logprob: -6.006655216217041
    4. ')' → logprob: -7.756655216217041
    5. 'input' → logprob: -7.881655216217041
    6. ',' → logprob: -8.631654739379883
    7. ' (' → logprob: -11.881654739379883
    8. '=input' → logprob: -12.006654739379883
    9. ' input' → logprob: -12.631654739379883
    10. '(
' → logprob: -12.631654739379883

Token 193: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006715728435665369
    2. ' input' → logprob: -5.006715774536133
    3. '(input' → logprob: -15.631715774536133
    4. ',input' → logprob: -16.256715774536133
    5. '=input' → logprob: -17.131715774536133
    6. '	input' → logprob: -17.381715774536133
    7. '_input' → logprob: -17.756715774536133
    8. ')' → logprob: -17.756715774536133
    9. 'Input' → logprob: -17.881715774536133
    10. 'sys' → logprob: -18.256715774536133

Token 194: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '()' → logprob: -12.87500286102295
    3. ' ().' → logprob: -16.625001907348633
    4. '()
' → logprob: -18.250001907348633
    5. '())' → logprob: -19.750001907348633
    6. '(' → logprob: -20.750001907348633
    7. ')' → logprob: -21.000001907348633
    8. '.readline' → logprob: -21.125001907348633
    9. '().
' → logprob: -21.250001907348633
    10. '.' → logprob: -22.125001907348633

Token 195: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3879750967025757
    2. 'strip' → logprob: -1.1379750967025757
    3. 'rstrip' → logprob: -6.887975215911865
    4. 'read' → logprob: -9.512974739074707
    5. '(split' → logprob: -12.262974739074707
    6. ' strip' → logprob: -13.762974739074707
    7. '().' → logprob: -13.762974739074707
    8. ' split' → logprob: -13.762974739074707
    9. '(strip' → logprob: -14.012974739074707
    10. '_split' → logprob: -15.512974739074707

Token 196: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.020969707518815994
    2. ')' → logprob: -4.020969867706299
    3. '()' → logprob: -5.895969867706299
    4. '())
' → logprob: -10.14596939086914
    5. '(' → logprob: -11.27096939086914
    6. '))' → logprob: -11.89596939086914
    7. '()))' → logprob: -12.27096939086914
    8. ' ())' → logprob: -14.64596939086914
    9. '())

' → logprob: -15.52096939086914
    10. ')`' → logprob: -15.64596939086914

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0160357765853405
    2. '<|end|>' → logprob: -4.266035556793213
    3. ' if' → logprob: -7.766035556793213
    4. '   ' → logprob: -7.891035556793213
    5. '
' → logprob: -8.391036033630371
    6. 'if' → logprob: -9.141036033630371
    7. '\' → logprob: -9.266036033630371
    8. '\n' → logprob: -9.266036033630371
    9. '<|end|>' → logprob: -9.516036033630371
    10. '	' → logprob: -9.516036033630371

Token 198: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11901882290840149
    2. '       ' → logprob: -2.369018793106079
    3. 'if' (adapté à ' if') → logprob: -3.994018793106079
    4. '<|end|>' → logprob: -9.7440185546875
    5. '   ' → logprob: -10.3690185546875
    6. ',' → logprob: -10.4940185546875
    7. '\n' → logprob: -10.8690185546875
    8. '	if' → logprob: -11.3690185546875
    9. '        
' → logprob: -11.7440185546875
    10. ' 
' → logprob: -12.1190185546875

Token 199: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.31326979398727417
    2. 'w' → logprob: -1.313269853591919
    3. '(w' → logprob: -11.81326961517334
    4. ' (' → logprob: -15.06326961517334
    5. ' not' → logprob: -15.18826961517334
    6. '(' → logprob: -16.688270568847656
    7. '	w' → logprob: -17.063270568847656
    8. ' ' → logprob: -17.313270568847656
    9. 'W' → logprob: -18.563270568847656
    10. '_w' → logprob: -19.063270568847656

Token 200: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07892316579818726
    2. ' ==' → logprob: -2.578923225402832
    3. '=' → logprob: -10.703923225402832
    4. ' ' → logprob: -11.953923225402832
    5. '0' → logprob: -12.828923225402832
    6. '===' → logprob: -14.703923225402832
    7. '()==' → logprob: -15.078923225402832
    8. '```' → logprob: -15.203923225402832
    9. '==
' → logprob: -15.328923225402832
    10. ')==' → logprob: -16.078922271728516

Token 201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00360019039362669
    2. ' ' → logprob: -5.628600120544434
    3. '  ' → logprob: -17.00360107421875
    4. '```' → logprob: -17.87860107421875
    5. ' ' → logprob: -18.12860107421875
    6. 'h' → logprob: -18.25360107421875
    7. '０' → logprob: -18.25360107421875
    8. '
' → logprob: -18.50360107421875
    9. ' 
' → logprob: -18.62860107421875
    10. '   ' → logprob: -18.62860107421875

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'h' → logprob: -16.250009536743164
    4. '０' → logprob: -18.125009536743164
    5. '```' → logprob: -18.375009536743164
    6. '۰' → logprob: -19.500009536743164
    7. 's' → logprob: -20.250009536743164
    8. 'and' → logprob: -20.375009536743164
    9. 'o' → logprob: -20.437509536743164
    10. ' ' → logprob: -20.500009536743164

Token 203: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0380634106695652
    2. 'and' → logprob: -3.2880635261535645
    3. ' or' → logprob: -10.788063049316406
    4. ' ' → logprob: -14.163063049316406
    5. '	and' → logprob: -15.038063049316406
    6. '<|end|>' → logprob: -15.663063049316406
    7. '0' → logprob: -16.413063049316406
    8. '   ' → logprob: -17.038063049316406
    9. ' ' → logprob: -17.663063049316406
    10. 'or' → logprob: -17.913063049316406

Token 204: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.25192928314208984
    2. 'h' → logprob: -1.5019292831420898
    3. '	h' → logprob: -15.87692928314209
    4. ' ' → logprob: -17.126930236816406
    5. ' ' → logprob: -19.376930236816406
    6. '   ' → logprob: -20.251930236816406
    7. '"h' → logprob: -20.251930236816406
    8. '_h' → logprob: -20.501930236816406
    9. ',h' → logprob: -20.626930236816406
    10. '    ' → logprob: -20.751930236816406

Token 205: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04859157279133797
    2. '==' → logprob: -3.0485916137695312
    3. ' ' → logprob: -13.798591613769531
    4. ')==' → logprob: -14.048591613769531
    5. '0' → logprob: -14.173591613769531
    6. '=' → logprob: -14.423591613769531
    7. ' ' → logprob: -15.423591613769531
    8. ']==' → logprob: -15.673591613769531
    9. ')' → logprob: -15.923591613769531
    10. '[' → logprob: -16.04859161376953

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '   ' → logprob: -17.875295639038086
    4. '  ' → logprob: -19.187795639038086
    5. ' ' → logprob: -19.312795639038086
    6. '۰' → logprob: -19.937795639038086
    7. '```' → logprob: -20.125295639038086
    8. '０' → logprob: -21.187795639038086
    9. ' ' → logprob: -21.625295639038086
    10. '	' → logprob: -21.812795639038086

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -21.125001907348633
    4. '```' → logprob: -21.875001907348633
    5. '   ' → logprob: -22.000001907348633
    6. '  ' → logprob: -22.000001907348633
    7. '０' → logprob: -22.375001907348633
    8. ' ' → logprob: -22.437501907348633
    9. '<|end|>' → logprob: -22.812501907348633
    10. '
' → logprob: -22.937501907348633

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008629930205643177
    2. ':
' → logprob: -4.75862979888916
    3. ':return' → logprob: -11.63362979888916
    4. '           ' → logprob: -12.75862979888916
    5. '       ' → logprob: -13.75862979888916
    6. '):' → logprob: -14.38362979888916
    7. '   ' → logprob: -14.50862979888916
    8. ':
' → logprob: -15.00862979888916
    9. ',' → logprob: -15.13362979888916
    10. '):
' → logprob: -15.50862979888916

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00047583275591023266
    2. '       ' → logprob: -8.375475883483887
    3. ':' → logprob: -9.750475883483887
    4. ' break' → logprob: -10.000475883483887
    5. ':
' → logprob: -10.500475883483887
    6. '		' → logprob: -10.500475883483887
    7. '   ' → logprob: -11.000475883483887
    8. ',' → logprob: -11.000475883483887
    9. '          ' → logprob: -11.500475883483887
    10. '<|end|>' → logprob: -11.625475883483887

Token 210: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.22218696773052216
    2. ' break' → logprob: -1.7221869230270386
    3. 'return' → logprob: -4.222187042236328
    4. '           ' → logprob: -5.222187042236328
    5. ' return' → logprob: -7.972187042236328
    6. '       ' → logprob: -9.472187042236328
    7. '               ' → logprob: -9.972187042236328
    8. '	break' → logprob: -10.847187042236328
    9. '
' → logprob: -12.097187042236328
    10. '   ' → logprob: -13.722187042236328

Token 211: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6417683362960815
    2. '
' → logprob: -0.7667683362960815
    3. '        
' → logprob: -5.391768455505371
    4. '<|end|>' → logprob: -5.516768455505371
    5. '  
' → logprob: -8.516768455505371
    6. '    
' → logprob: -9.641768455505371
    7. '
' → logprob: -9.891768455505371
    8. ' 
' → logprob: -10.516768455505371
    9. '```' → logprob: -10.516768455505371
    10. '#' → logprob: -10.641768455505371

Token 212: '       ' (ID: 309)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.442103773355484
    2. ' grid' → logprob: -1.1921037435531616
    3. '       ' → logprob: -2.942103862762451
    4. '   ' → logprob: -7.067103862762451
    5. '	grid' → logprob: -9.442103385925293
    6. ' lines' → logprob: -11.942103385925293
    7. '_grid' → logprob: -12.192103385925293
    8. ' grids' → logprob: -12.567103385925293
    9. '.grid' → logprob: -12.692103385925293
    10. 'graph' → logprob: -12.817103385925293

Token 213: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -4.966313281329349e-05
    2. ' grid' → logprob: -10.125049591064453
    3. '       ' → logprob: -11.750049591064453
    4. 'graph' → logprob: -13.875049591064453
    5. '   ' → logprob: -15.625049591064453
    6. '	grid' → logprob: -15.625049591064453
    7. '        
' → logprob: -16.000049591064453
    8. '_grid' → logprob: -16.625049591064453
    9. '.grid' → logprob: -17.375049591064453
    10. 'room' → logprob: -17.500049591064453

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0430758073925972
    2. '=' → logprob: -3.1680757999420166
    3. '=[]' → logprob: -9.543075561523438
    4. ',' → logprob: -13.793075561523438
    5. '[]' → logprob: -14.168075561523438
    6. '[' → logprob: -14.293075561523438
    7. '   ' → logprob: -14.293075561523438
    8. ' =[' → logprob: -14.418075561523438
    9. '[:]' → logprob: -14.793075561523438
    10. ' ' → logprob: -15.293075561523438

Token 215: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004545350559055805
    2. '[input' → logprob: -6.004545211791992
    3. '[h' → logprob: -7.504545211791992
    4. '[str' → logprob: -8.004545211791992
    5. '[s' → logprob: -8.254545211791992
    6. '[line' → logprob: -8.629545211791992
    7. '[int' → logprob: -9.629545211791992
    8. '[key' → logprob: -10.004545211791992
    9. '[list' → logprob: -10.004545211791992
    10. '[data' → logprob: -10.129545211791992

Token 216: 'list' (ID: 2641)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6933169960975647
    2. 'list' → logprob: -0.6933169960975647
    3. ' input' → logprob: -9.318317413330078
    4. ' list' → logprob: -9.443317413330078
    5. '[input' → logprob: -14.318317413330078
    6. '<input' → logprob: -16.693317413330078
    7. '(input' → logprob: -17.693317413330078
    8. '	input' → logprob: -17.943317413330078
    9. '[list' → logprob: -18.193317413330078
    10. '(list' → logprob: -18.818317413330078

Token 217: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.941161776310764e-05
    2. 'input' → logprob: -10.250039100646973
    3. '(sys' → logprob: -12.750039100646973
    4. '(map' → logprob: -14.375039100646973
    5. '(' → logprob: -14.625039100646973
    6. '(str' → logprob: -17.12504005432129
    7. '=input' → logprob: -18.25004005432129
    8. 'sys' → logprob: -18.37504005432129
    9. ',input' → logprob: -18.75004005432129
    10. '[input' → logprob: -19.12504005432129

Token 218: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '())' → logprob: -12.87500286102295
    3. '()' → logprob: -15.12500286102295
    4. ' ().' → logprob: -18.375001907348633
    5. 'rstrip' → logprob: -18.875001907348633
    6. '.rstrip' → logprob: -19.250001907348633
    7. '.strip' → logprob: -19.375001907348633
    8. '(' → logprob: -19.625001907348633
    9. '.readline' → logprob: -19.750001907348633
    10. '()
' → logprob: -20.125001907348633

Token 219: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.5759403109550476
    2. 'strip' → logprob: -0.8259403109550476
    3. 'r' → logprob: -14.950940132141113
    4. ' strip' → logprob: -15.200940132141113
    5. 'read' → logprob: -15.450940132141113
    6. '.rstrip' → logprob: -17.32594108581543
    7. '_strip' → logprob: -18.70094108581543
    8. 'rs' → logprob: -18.82594108581543
    9. '(strip' → logprob: -19.70094108581543
    10. 'rip' → logprob: -20.07594108581543

Token 220: '('\' (ID: 24345)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06703568994998932
    2. '('\' → logprob: -2.817035675048828
    3. '()))' → logprob: -5.317035675048828
    4. '())
' → logprob: -10.192035675048828
    5. ''\' → logprob: -10.442035675048828
    6. ')' → logprob: -10.942035675048828
    7. '("\' → logprob: -11.067035675048828
    8. '()' → logprob: -11.192035675048828
    9. '))' → logprob: -11.192035675048828
    10. '()\' → logprob: -11.317035675048828

Token 221: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.696889623621246e-06
    2. '\n' → logprob: -12.87500286102295
    3. '
' → logprob: -18.625001907348633
    4. ' n' → logprob: -19.375001907348633
    5. 'newline' → logprob: -19.750001907348633
    6. 'r' → logprob: -19.875001907348633
    7. 'x' → logprob: -21.750001907348633
    8. '

' → logprob: -22.500001907348633
    9. 'ndef' → logprob: -22.750001907348633
    10. '''' → logprob: -22.750001907348633

Token 222: ''))' (ID: 7974)
  Prédit: ''))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.006686483509838581
    2. '))' → logprob: -5.131686687469482
    3. ')' → logprob: -8.006686210632324
    4. '')))' → logprob: -8.506686210632324
    5. '()' → logprob: -9.006686210632324
    6. '"))' → logprob: -10.506686210632324
    7. '')' → logprob: -11.131686210632324
    8. '()))' → logprob: -11.256686210632324
    9. ''))
' → logprob: -11.381686210632324
    10. ''' → logprob: -12.006686210632324

Token 223: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.013395622372627258
    2. 'for' → logprob: -4.3883957862854
    3. '	for' → logprob: -7.5133957862854
    4. '       ' → logprob: -8.513395309448242
    5. ')' → logprob: -9.263395309448242
    6. '           ' → logprob: -10.763395309448242
    7. '   ' → logprob: -12.263395309448242
    8. '	' → logprob: -12.388395309448242
    9. '<|end|>' → logprob: -12.888395309448242
    10. '		' → logprob: -13.013395309448242

Token 224: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004173848778009415
    2. ' _' → logprob: -5.504173755645752
    3. ' range' → logprob: -9.37917423248291
    4. '_range' → logprob: -11.75417423248291
    5. 'range' → logprob: -13.25417423248291
    6. '_i' → logprob: -14.37917423248291
    7. ' in' → logprob: -15.62917423248291
    8. '_=' → logprob: -16.004173278808594
    9. ' i' → logprob: -16.254173278808594
    10. '_in' → logprob: -16.629173278808594

Token 225: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014090164564549923
    2. ' range' → logprob: -5.014090061187744
    3. ' in' → logprob: -5.014090061187744
    4. 'in' → logprob: -7.264090061187744
    5. '(range' → logprob: -12.639090538024902
    6. '	range' → logprob: -16.014089584350586
    7. ')' → logprob: -16.889089584350586
    8. ' ' → logprob: -16.889089584350586
    9. 'h' → logprob: -17.014089584350586
    10. '(' → logprob: -17.514089584350586

Token 226: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -17.875036239624023
    4. ')' → logprob: -19.625036239624023
    5. '   ' → logprob: -20.000036239624023
    6. '	range' → logprob: -20.750036239624023
    7. 'ange' → logprob: -21.875036239624023
    8. ' ' → logprob: -22.375036239624023
    9. '
' → logprob: -22.500036239624023
    10. ']' → logprob: -22.750036239624023

Token 227: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.6047699318733066e-05
    2. 'h' → logprob: -11.250016212463379
    3. ' (' → logprob: -13.250016212463379
    4. ' h' → logprob: -13.750016212463379
    5. '(' → logprob: -16.125015258789062
    6. '	h' → logprob: -18.625015258789062
    7. '   ' → logprob: -18.625015258789062
    8. '<h' → logprob: -20.125015258789062
    9. '           ' → logprob: -20.250015258789062
    10. '       ' → logprob: -21.125015258789062

Token 228: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04920003563165665
    2. ')' → logprob: -3.0492000579833984
    3. ']' → logprob: -7.424200057983398
    4. '       ' → logprob: -11.799200057983398
    5. ')
' → logprob: -13.049200057983398
    6. '   ' → logprob: -13.049200057983398
    7. ')])' → logprob: -14.174200057983398
    8. ' )' → logprob: -14.299200057983398
    9. ')]
' → logprob: -14.924200057983398
    10. '）' → logprob: -14.924200057983398

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15360163152217865
    2. '        
' → logprob: -2.02860164642334
    3. 's' → logprob: -5.27860164642334
    4. 'd' → logprob: -6.65360164642334
    5. 'dust' → logprob: -6.77860164642334
    6. '.' → logprob: -7.90360164642334
    7. 'targets' → logprob: -8.15360164642334
    8. 'start' → logprob: -8.40360164642334
    9. '        
        
' → logprob: -8.65360164642334
    10. ',' → logprob: -8.77860164642334

Token 230: ' dirty' (ID: 32042)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirty' (adapté à ' dirty') → logprob: -0.40487924218177795
    2. 'd' → logprob: -2.654879331588745
    3. 'points' → logprob: -2.654879331588745
    4. 'dust' → logprob: -2.654879331588745
    5. 'start' → logprob: -2.779879331588745
    6. 'targets' → logprob: -4.279879093170166
    7. 'positions' → logprob: -4.779879093170166
    8. 'clean' → logprob: -5.279879093170166
    9. 'spots' → logprob: -5.279879093170166
    10. 'starts' → logprob: -5.279879093170166

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8663854598999023
    2. '_sp' → logprob: -1.2413854598999023
    3. '_positions' → logprob: -1.4913854598999023
    4. 's' → logprob: -3.8663854598999023
    5. '=' → logprob: -4.491385459899902
    6. '_points' → logprob: -4.866385459899902
    7. '_indices' → logprob: -5.241385459899902
    8. '_pos' → logprob: -5.366385459899902
    9. 'spots' → logprob: -5.616385459899902
    10. '_idx' → logprob: -6.116385459899902

Token 232: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00020258675795048475
    2. ' []' → logprob: -9.000202178955078
    3. '[(' → logprob: -10.250202178955078
    4. '[' → logprob: -10.375202178955078
    5. '[]
' → logprob: -11.500202178955078
    6. '[]}' → logprob: -13.125202178955078
    7. '[]

' → logprob: -15.750202178955078
    8. '[]>' → logprob: -15.875202178955078
    9. '[]=' → logprob: -16.875202178955078
    10. '[
' → logprob: -16.875202178955078

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13683533668518066
    2. ' for' → logprob: -2.1368353366851807
    3. 'for' → logprob: -4.636835098266602
    4. '        
' → logprob: -9.511835098266602
    5. ',' → logprob: -10.386835098266602
    6. '<|end|>' → logprob: -10.761835098266602
    7. '        ' → logprob: -11.261835098266602
    8. '	' → logprob: -12.261835098266602
    9. '	for' → logprob: -12.386835098266602
    10. '      ' → logprob: -12.761835098266602

Token 234: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40790894627571106
    2. 'start' (adapté à ' start') → logprob: -1.1579089164733887
    3. '       ' → logprob: -4.282908916473389
    4. 's' → logprob: -6.282908916473389
    5. ' for' → logprob: -6.532908916473389
    6. 'robot' → logprob: -6.907908916473389
    7. 'sx' → logprob: -7.157908916473389
    8. 'clean' → logprob: -7.657908916473389
    9. '        
' → logprob: -8.282909393310547
    10. 'robots' → logprob: -8.907909393310547

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25255286693573
    2. '=' → logprob: -1.50255286693573
    3. '_' → logprob: -8.12755298614502
    4. '<|end|>' → logprob: -9.25255298614502
    5. ')' → logprob: -9.50255298614502
    6. ',' → logprob: -9.75255298614502
    7. '_idx' → logprob: -10.87755298614502
    8. '=[]' → logprob: -11.12755298614502
    9. '_positions' → logprob: -11.25255298614502
    10. '<|end|>' → logprob: -11.50255298614502

Token 236: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.11888790130615234
    2. ' None' → logprob: -2.2438879013061523
    3. '(' → logprob: -5.743887901306152
    4. '(None' → logprob: -5.993887901306152
    5. '(-' → logprob: -8.368887901306152
    6. ' (' → logprob: -9.118887901306152
    7. ' (-' → logprob: -12.368887901306152
    8. ' ' → logprob: -13.993887901306152
    9. '_None' → logprob: -14.368887901306152
    10. '()' → logprob: -14.368887901306152

Token 237: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01862395368516445
    2. ' for' → logprob: -4.2686238288879395
    3. '
' → logprob: -6.1436238288879395
    4. '        
' → logprob: -6.7686238288879395
    5. '<|end|>' → logprob: -7.2686238288879395
    6. 'for' → logprob: -8.268624305725098
    7. '  
' → logprob: -10.018624305725098
    8. ',' → logprob: -10.268624305725098
    9. ' 
' → logprob: -10.518624305725098
    10. '	' → logprob: -11.268624305725098

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02731858193874359
    2. ' for' → logprob: -3.6523184776306152
    3. 'for' → logprob: -6.902318477630615
    4. '   ' → logprob: -12.277318954467773
    5. '	for' → logprob: -13.152318954467773
    6. '	' → logprob: -13.277318954467773
    7. '      ' → logprob: -13.777318954467773
    8. ' ' → logprob: -14.777318954467773
    9. '<|end|>' → logprob: -14.902318954467773
    10. '    ' → logprob: -14.902318954467773

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.047134305234067e-05
    2. ' for' → logprob: -10.500030517578125
    3. '       ' → logprob: -12.750030517578125
    4. '   ' → logprob: -20.250030517578125
    5. '	for' → logprob: -20.625030517578125
    6. '           ' → logprob: -21.250030517578125
    7. '        ' → logprob: -21.625030517578125
    8. '
' → logprob: -22.250030517578125
    9. '        
' → logprob: -22.875030517578125
    10. '#' → logprob: -23.875030517578125

Token 240: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.05049974471330643
    2. 'y' → logprob: -3.050499677658081
    3. ' i' → logprob: -6.55049991607666
    4. 'i' → logprob: -7.67549991607666
    5. '   ' → logprob: -11.67549991607666
    6. ' ' → logprob: -11.92549991607666
    7. '	y' → logprob: -14.55049991607666
    8. ' ' → logprob: -15.17549991607666
    9. ' _' → logprob: -15.80049991607666
    10. 'j' → logprob: -16.050498962402344

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16026079654693604
    2. 'in' → logprob: -1.910260796546936
    3. ',' → logprob: -10.410261154174805
    4. ' ' → logprob: -12.285261154174805
    5. ' ,' → logprob: -14.285261154174805
    6. '```' → logprob: -14.910261154174805
    7. 'range' → logprob: -15.160261154174805
    8. '	in' → logprob: -15.160261154174805
    9. 'In' → logprob: -16.535261154174805
    10. ' ' → logprob: -16.785261154174805

Token 242: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -17.25247573852539
    4. '	range' → logprob: -18.12747573852539
    5. '_range' → logprob: -19.62747573852539
    6. ' xrange' → logprob: -20.75247573852539
    7. 'ange' → logprob: -21.25247573852539
    8. '.range' → logprob: -21.25247573852539
    9. ')' → logprob: -21.37747573852539
    10. ' ' → logprob: -21.62747573852539

Token 243: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -7.584239938296378e-06
    2. 'h' → logprob: -13.000007629394531
    3. ' h' → logprob: -13.125007629394531
    4. '(' → logprob: -13.125007629394531
    5. ' (' → logprob: -13.625007629394531
    6. '	h' → logprob: -17.62500762939453
    7. '   ' → logprob: -19.00000762939453
    8. '<h' → logprob: -19.25000762939453
    9. ',h' → logprob: -19.25000762939453
    10. ',' → logprob: -19.50000762939453

Token 244: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20149880647659302
    2. '):
' → logprob: -1.7014987468719482
    3. ':' → logprob: -10.201498985290527
    4. '   ' → logprob: -10.951498985290527
    5. '       ' → logprob: -11.576498985290527
    6. '):
' → logprob: -11.701498985290527
    7. ')' → logprob: -12.076498985290527
    8. '+' → logprob: -12.701498985290527
    9. '):

' → logprob: -13.701498985290527
    10. ':
' → logprob: -14.076498985290527

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000523842521943152
    2. ' for' → logprob: -8.375523567199707
    3. '	       ' → logprob: -9.000523567199707
    4. '<|end|>' → logprob: -9.750523567199707
    5. '   ' → logprob: -10.750523567199707
    6. '    	   ' → logprob: -10.875523567199707
    7. ',' → logprob: -11.000523567199707
    8. '       ' → logprob: -11.125523567199707
    9. ':' → logprob: -11.750523567199707
    10. '<|end|>' → logprob: -12.000523567199707

Token 246: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.26797688007354736
    2. ' for' → logprob: -1.5179768800735474
    3. '   ' → logprob: -4.267976760864258
    4. '           ' → logprob: -6.267976760864258
    5. '	for' → logprob: -11.642976760864258
    6. '       ' → logprob: -12.892976760864258
    7. ' ' → logprob: -13.267976760864258
    8. '               ' → logprob: -14.892976760864258
    9. '    ' → logprob: -17.017976760864258
    10. '   ' → logprob: -17.267976760864258

Token 247: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02324547804892063
    2. ' x' → logprob: -3.7732455730438232
    3. '0' → logprob: -17.273244857788086
    4. ' ' → logprob: -18.023244857788086
    5. '	x' → logprob: -18.023244857788086
    6. '   ' → logprob: -18.273244857788086
    7. '```' → logprob: -19.648244857788086
    8. '(x' → logprob: -20.023244857788086
    9. ')x' → logprob: -20.398244857788086
    10. 'w' → logprob: -20.398244857788086

Token 248: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029754776507616043
    2. 'in' → logprob: -3.529754877090454
    3. '	in' → logprob: -13.529754638671875
    4. ' ' → logprob: -14.529754638671875
    5. 'In' → logprob: -15.029754638671875
    6. '<|end|>' → logprob: -15.279754638671875
    7. '           ' → logprob: -15.404754638671875
    8. '        ' → logprob: -15.404754638671875
    9. ',' → logprob: -15.529754638671875
    10. '            ' → logprob: -15.904754638671875

Token 249: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029751067981123924
    2. ' range' → logprob: -3.5297510623931885
    3. '(range' → logprob: -14.27975082397461
    4. '	range' → logprob: -21.15475082397461
    5. '(' → logprob: -22.02975082397461
    6. ' ' → logprob: -22.27975082397461
    7. ')' → logprob: -22.77975082397461
    8. '_range' → logprob: -22.77975082397461
    9. 'w' → logprob: -22.90475082397461
    10. '.range' → logprob: -23.02975082397461

Token 250: '(w' (ID: 7420)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.4741365313529968
    2. '(w' → logprob: -0.9741365313529968
    3. '(' → logprob: -10.099136352539062
    4. ' (' → logprob: -12.099136352539062
    5. 'h' → logprob: -12.349136352539062
    6. '(s' → logprob: -12.849136352539062
    7. 'w' → logprob: -12.974136352539062
    8. '   ' → logprob: -14.349136352539062
    9. '(x' → logprob: -14.599136352539062
    10. '       ' → logprob: -14.599136352539062

Token 251: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04415002092719078
    2. '):
' → logprob: -3.1691501140594482
    3. ':' → logprob: -7.044149875640869
    4. ')' → logprob: -8.294150352478027
    5. '           ' → logprob: -12.294150352478027
    6. '):

' → logprob: -12.294150352478027
    7. '):
' → logprob: -12.419150352478027
    8. 'if' → logprob: -12.544150352478027
    9. '():' → logprob: -13.169150352478027
    10. ':
' → logprob: -13.794150352478027

Token 252: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020449401927180588
    2. '<|end|>' → logprob: -9.750204086303711
    3. '           ' → logprob: -10.000204086303711
    4. ':' → logprob: -10.375204086303711
    5. '              ' → logprob: -10.875204086303711
    6. ' if' → logprob: -11.500204086303711
    7. ',' → logprob: -11.750204086303711
    8. '                
' → logprob: -11.875204086303711
    9. '                ' → logprob: -12.000204086303711
    10. '            ' → logprob: -12.500204086303711

Token 253: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30829083919525146
    2. '                   ' → logprob: -1.4332908391952515
    3. 'if' (adapté à ' if') → logprob: -3.808290958404541
    4. '               ' → logprob: -5.433290958404541
    5. '           ' → logprob: -8.933290481567383
    6. '                ' → logprob: -10.433290481567383
    7. '                    ' → logprob: -11.558290481567383
    8. '```' → logprob: -11.808290481567383
    9. '   ' → logprob: -11.933290481567383
    10. '                       ' → logprob: -12.058290481567383

Token 254: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.07889287173748016
    2. 'grid' → logprob: -2.578892946243286
    3. '	grid' → logprob: -13.078892707824707
    4. '(grid' → logprob: -13.953892707824707
    5. '.grid' → logprob: -16.953893661499023
    6. ':grid' → logprob: -17.078893661499023
    7. '                   ' → logprob: -17.953893661499023
    8. '           ' → logprob: -18.078893661499023
    9. '_grid' → logprob: -18.328893661499023
    10. '               ' → logprob: -18.828893661499023

Token 255: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.00000286102295
    3. '[x' → logprob: -15.12500286102295
    4. '[user' → logprob: -16.125003814697266
    5. '][' → logprob: -16.625003814697266
    6. 'y' → logprob: -17.375003814697266
    7. '```' → logprob: -17.625003814697266
    8. ' [' → logprob: -17.750003814697266
    9. '[Y' → logprob: -18.125003814697266
    10. ')[' → logprob: -18.375003814697266

Token 256: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18021759390830994
    2. '[x' → logprob: -2.0552175045013428
    3. '[y' → logprob: -3.3052175045013428
    4. ']' → logprob: -10.055217742919922
    5. '[' → logprob: -10.555217742919922
    6. ')[' → logprob: -10.680217742919922
    7. '
' → logprob: -11.180217742919922
    8. '   ' → logprob: -11.930217742919922
    9. ' ][' → logprob: -12.305217742919922
    10. ' [' → logprob: -12.430217742919922

Token 257: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.6656825866666622e-05
    2. ' x' → logprob: -10.62502670288086
    3. ''x' → logprob: -13.25002670288086
    4. ')x' → logprob: -15.50002670288086
    5. '[x' → logprob: -16.25002670288086
    6. '"x' → logprob: -16.50002670288086
    7. '	x' → logprob: -16.87502670288086
    8. '
' → logprob: -18.00002670288086
    9. '][' → logprob: -18.37502670288086
    10. 'start' → logprob: -18.50002670288086

Token 258: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5182704925537109
    2. ' ==' → logprob: -1.393270492553711
    3. ']' → logprob: -2.018270492553711
    4. ']==' → logprob: -4.143270492553711
    5. ')' → logprob: -5.393270492553711
    6. '=='' → logprob: -6.393270492553711
    7. ']=='' → logprob: -6.893270492553711
    8. ')==' → logprob: -9.393270492553711
    9. '']=='' → logprob: -10.143270492553711
    10. ' ]' → logprob: -10.893270492553711

Token 259: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.24414072930812836
    2. ' ==' → logprob: -1.6191407442092896
    3. '=='' → logprob: -3.994140625
    4. ' =='' → logprob: -9.369140625
    5. '=="' → logprob: -10.994140625
    6. ']==' → logprob: -11.619140625
    7. '=' → logprob: -12.369140625
    8. ']=='' → logprob: -12.744140625
    9. ')==' → logprob: -12.869140625
    10. '==
' → logprob: -12.994140625

Token 260: ' '' (ID: 461)
  Prédit: ''o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''o' → logprob: -0.01995006948709488
    2. ''l' → logprob: -4.519949913024902
    3. ''' → logprob: -5.269949913024902
    4. ' '' → logprob: -6.769949913024902
    5. ''s' → logprob: -7.269949913024902
    6. ''*' → logprob: -7.269949913024902
    7. ''O' → logprob: -7.519949913024902
    8. ''L' → logprob: -8.269949913024902
    9. ''ol' → logprob: -8.894949913024902
    10. ''a' → logprob: -9.894949913024902

Token 261: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -3.273621405242011e-05
    2. ''o' → logprob: -10.500032424926758
    3. 's' → logprob: -13.250032424926758
    4. '.o' → logprob: -13.500032424926758
    5. ' o' → logprob: -14.000032424926758
    6. ''' → logprob: -15.000032424926758
    7. '$o' → logprob: -15.125032424926758
    8. ''s' → logprob: -15.750032424926758
    9. '*' → logprob: -15.875032424926758
    10. '{o' → logprob: -16.375032424926758

Token 262: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.045225679874420166
    2. '':
' → logprob: -3.1702256202697754
    3. ''' → logprob: -6.170225620269775
    4. ':' → logprob: -9.795226097106934
    5. '':
' → logprob: -10.670226097106934
    6. ''):' → logprob: -11.420226097106934
    7. '):' → logprob: -11.670226097106934
    8. ''):
' → logprob: -11.670226097106934
    9. '':

' → logprob: -11.795226097106934
    10. ' ':' → logprob: -12.670226097106934

Token 263: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028721967712044716
    2. '               ' → logprob: -4.278721809387207
    3. '<|end|>' → logprob: -5.278721809387207
    4. '                       ' → logprob: -5.403721809387207
    5. '		           ' → logprob: -7.278721809387207
    6. 'start' → logprob: -7.278721809387207
    7. '
' → logprob: -7.278721809387207
    8. ':
' → logprob: -7.903721809387207
    9. '                    
' → logprob: -8.153721809387207
    10. '[start' → logprob: -8.153721809387207

Token 264: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.07890675216913223
    2. 'start' (adapté à ' start') → logprob: -2.578906774520874
    3. '                   ' → logprob: -11.328907012939453
    4. '                       ' → logprob: -13.203907012939453
    5. '[start' → logprob: -13.828907012939453
    6. ' ' → logprob: -14.453907012939453
    7. '
' → logprob: -15.078907012939453
    8. '	start' → logprob: -15.703907012939453
    9. '               ' → logprob: -15.703907012939453
    10. '                    ' → logprob: -15.953907012939453

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006719759665429592
    2. '=' → logprob: -5.006719589233398
    3. ' =(' → logprob: -12.881719589233398
    4. '=(' → logprob: -14.131719589233398
    5. '<|end|>' → logprob: -14.756719589233398
    6. ')' → logprob: -15.131719589233398
    7. ',' → logprob: -15.131719589233398
    8. ' =
' → logprob: -15.881719589233398
    9. ' ' → logprob: -16.8817195892334
    10. '＝' → logprob: -17.0067195892334

Token 266: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02336648665368557
    2. ' (' → logprob: -3.7733664512634277
    3. '(' → logprob: -9.023366928100586
    4. 'x' → logprob: -14.648366928100586
    5. '   ' → logprob: -17.773366928100586
    6. '[x' → logprob: -18.023366928100586
    7. '
' → logprob: -18.398366928100586
    8. '（' → logprob: -18.898366928100586
    9. ' ' → logprob: -19.148366928100586
    10. ' x' → logprob: -19.523366928100586

Token 267: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.2729995988775045e-06
    2. ' x' → logprob: -12.000006675720215
    3. ')x' → logprob: -16.7500057220459
    4. '	x' → logprob: -19.3750057220459
    5. ',x' → logprob: -21.2500057220459
    6. '"x' → logprob: -22.1250057220459
    7. '                   ' → logprob: -22.1250057220459
    8. '(x' → logprob: -22.2500057220459
    9. '{x' → logprob: -23.1250057220459
    10. '$x' → logprob: -23.1250057220459

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002615016885101795
    2. ',y' → logprob: -6.002614974975586
    3. ' ,' → logprob: -9.502614974975586
    4. ')' → logprob: -9.877614974975586
    5. '<|end|>' → logprob: -11.502614974975586
    6. ',
' → logprob: -14.252614974975586
    7. ',)' → logprob: -14.252614974975586
    8. ',x' → logprob: -14.502614974975586
    9. ',user' → logprob: -15.252614974975586
    10. '),' → logprob: -16.002614974975586

Token 269: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005236360710114241
    2. ' y' → logprob: -5.2552361488342285
    3. ')y' → logprob: -13.505236625671387
    4. '<|end|>' → logprob: -14.880236625671387
    5. ')' → logprob: -15.380236625671387
    6. '	y' → logprob: -15.630236625671387
    7. '0' → logprob: -16.50523567199707
    8. ' ' → logprob: -16.63023567199707
    9. ''y' → logprob: -16.88023567199707
    10. '
' → logprob: -17.00523567199707

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013035668234806508
    2. ')
' → logprob: -9.000130653381348
    3. '               ' → logprob: -12.875130653381348
    4. ' )' → logprob: -13.250130653381348
    5. '<|end|>' → logprob: -14.250130653381348
    6. '                   ' → logprob: -14.375130653381348
    7. ')#' → logprob: -15.125130653381348
    8. ')

' → logprob: -15.250130653381348
    9. '')' → logprob: -16.37512969970703
    10. ')
' → logprob: -17.00012969970703

Token 271: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011061598779633641
    2. '<|end|>' → logprob: -7.001106262207031
    3. 'elif' → logprob: -9.376106262207031
    4. ' elif' → logprob: -10.376106262207031
    5. '                ' → logprob: -10.751106262207031
    6. ',' → logprob: -10.876106262207031
    7. '.' → logprob: -11.876106262207031
    8. '
' → logprob: -12.001106262207031
    9. '			' → logprob: -12.501106262207031
    10. '              ' → logprob: -12.501106262207031

Token 272: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.08445566892623901
    2. '               ' → logprob: -2.584455728530884
    3. ' elif' → logprob: -5.209455490112305
    4. 'if' → logprob: -9.459455490112305
    5. ' if' → logprob: -12.584455490112305
    6. '	elif' → logprob: -12.584455490112305
    7. '           ' → logprob: -15.584455490112305
    8. '                
' → logprob: -16.084455490112305
    9. 'elseif' → logprob: -16.084455490112305
    10. '       ' → logprob: -16.459455490112305

Token 273: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.1602376252412796
    2. 'grid' → logprob: -1.9102376699447632
    3. '(grid' → logprob: -11.410237312316895
    4. '	grid' → logprob: -13.410237312316895
    5. '.grid' → logprob: -15.160237312316895
    6. ' ' → logprob: -15.160237312316895
    7. ':grid' → logprob: -15.160237312316895
    8. ' ' → logprob: -16.16023826599121
    9. '-grid' → logprob: -18.41023826599121
    10. 'Grid' → logprob: -18.66023826599121

Token 274: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -13.125006675720215
    3. '[x' → logprob: -13.500006675720215
    4. ' [' → logprob: -13.500006675720215
    5. 'y' → logprob: -14.625006675720215
    6. ''y' → logprob: -14.875006675720215
    7. '   ' → logprob: -14.875006675720215
    8. '['' → logprob: -15.375006675720215
    9. ''[' → logprob: -15.750006675720215
    10. '[
' → logprob: -16.12500762939453

Token 275: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08520770072937012
    2. '[x' → logprob: -2.83520770072937
    3. '[y' → logprob: -5.085207939147949
    4. ' ==' → logprob: -5.210207939147949
    5. '==' → logprob: -5.460207939147949
    6. ']' → logprob: -6.085207939147949
    7. '[' → logprob: -6.585207939147949
    8. '=='' → logprob: -7.210207939147949
    9. ']==' → logprob: -7.585207939147949
    10. ']=='' → logprob: -7.835207939147949

Token 276: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7931084632873535
    2. ''x' → logprob: -1.4181084632873535
    3. ''' → logprob: -1.9181084632873535
    4. ''d' → logprob: -3.0431084632873535
    5. 'd' → logprob: -3.1681084632873535
    6. ''*' → logprob: -3.7931084632873535
    7. 'dirty' → logprob: -4.1681084632873535
    8. ''s' → logprob: -4.4181084632873535
    9. ''.' → logprob: -6.2931084632873535
    10. 'y' → logprob: -6.4181084632873535

Token 277: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31652626395225525
    2. '==' → logprob: -1.4415262937545776
    3. ')' → logprob: -3.566526174545288
    4. ']' → logprob: -5.691526412963867
    5. '=='' → logprob: -6.566526412963867
    6. ']==' → logprob: -6.816526412963867
    7. ')==' → logprob: -7.941526412963867
    8. ' )' → logprob: -9.691526412963867
    9. ']=='' → logprob: -9.691526412963867
    10. '=' → logprob: -10.316526412963867

Token 278: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3188914954662323
    2. '==' → logprob: -1.3188915252685547
    3. '=='' → logprob: -5.193891525268555
    4. ' =='' → logprob: -10.443891525268555
    5. '=' → logprob: -11.068891525268555
    6. ''' → logprob: -11.818891525268555
    7. '==
' → logprob: -12.818891525268555
    8. ' ' → logprob: -13.193891525268555
    9. ' '' → logprob: -13.568891525268555
    10. '=="' → logprob: -14.068891525268555

Token 279: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -8.196732960641384e-05
    2. ''' → logprob: -9.875082015991211
    3. ''d' → logprob: -10.750082015991211
    4. ' '*'' → logprob: -12.375082015991211
    5. ''t' → logprob: -13.125082015991211
    6. ''l' → logprob: -13.625082015991211
    7. ''w' → logprob: -14.750082015991211
    8. ''.' → logprob: -15.125082015991211
    9. ''o' → logprob: -15.375082015991211
    10. ' '*' → logprob: -15.375082015991211

Token 280: '':
' (ID: 7669)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.5750430822372437
    2. ''):' → logprob: -1.5750430822372437
    3. '':' → logprob: -2.075043201446533
    4. '')' → logprob: -2.825043201446533
    5. '':
' → logprob: -4.200043201446533
    6. '',' → logprob: -4.575043201446533
    7. ''' → logprob: -5.325043201446533
    8. ',' → logprob: -5.450043201446533
    9. '):
' → logprob: -5.450043201446533
    10. '):' → logprob: -5.825043201446533

Token 281: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07768351584672928
    2. ' dirty' → logprob: -3.077683448791504
    3. 'dirty' → logprob: -3.577683448791504
    4. '_dirty' → logprob: -7.952683448791504
    5. '               ' → logprob: -9.077683448791504
    6. 'd' → logprob: -9.452683448791504
    7. ',d' → logprob: -9.952683448791504
    8. '                       ' → logprob: -10.077683448791504
    9. 'Dirty' → logprob: -11.202683448791504
    10. ' dirt' → logprob: -11.577683448791504

Token 282: ' dirty' (ID: 32042)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirty' (adapté à ' dirty') → logprob: -0.4744044840335846
    2. ' dirty' → logprob: -0.9744044542312622
    3. '                   ' → logprob: -8.099404335021973
    4. '_dirty' → logprob: -11.099404335021973
    5. '                       ' → logprob: -12.974404335021973
    6. 'd' → logprob: -13.224404335021973
    7. '               ' → logprob: -13.599404335021973
    8. 'clean' → logprob: -14.599404335021973
    9. '   ' → logprob: -14.724404335021973
    10. 'dust' → logprob: -15.099404335021973

Token 283: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026455431361682713
    2. '.' → logprob: -8.250264167785645
    3. ' .' → logprob: -13.375264167785645
    4. 'append' → logprob: -13.875264167785645
    5. '.app' → logprob: -15.125264167785645
    6. '].' → logprob: -15.875264167785645
    7. '.Append' → logprob: -16.25026512145996
    8. ').' → logprob: -16.25026512145996
    9. '.ap' → logprob: -16.25026512145996
    10. '.push' → logprob: -17.12526512145996

Token 284: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00011653638648567721
    2. '(' → logprob: -9.375116348266602
    3. '(x' → logprob: -10.375116348266602
    4. ' ((' → logprob: -15.250116348266602
    5. ' (' → logprob: -15.875116348266602
    6. '[(' → logprob: -16.8751163482666
    7. '(
' → logprob: -19.5001163482666
    8. ',' → logprob: -20.7501163482666
    9. '>((' → logprob: -20.8751163482666
    10. '(y' → logprob: -21.0001163482666

Token 285: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.896309739408025e-07
    2. ' x' → logprob: -14.250000953674316
    3. ')x' → logprob: -17.25
    4. '(x' → logprob: -18.375
    5. ')' → logprob: -19.375
    6. '
' → logprob: -19.875
    7. '"x' → logprob: -20.75
    8. '	x' → logprob: -21.125
    9. ''x' → logprob: -21.5
    10. '```' → logprob: -21.625

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.269565634895116e-05
    2. ' ,' → logprob: -10.000092506408691
    3. ',y' → logprob: -10.125092506408691
    4. ',
' → logprob: -13.000092506408691
    5. ')' → logprob: -13.375092506408691
    6. '<|end|>' → logprob: -13.500092506408691
    7. '‌,' → logprob: -13.875092506408691
    8. '),' → logprob: -15.500092506408691
    9. '[' → logprob: -15.750092506408691
    10. '',' → logprob: -15.750092506408691

Token 287: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023245826363563538
    2. ' y' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.898245811462402
    4. '
' → logprob: -17.02324676513672
    5. ')y' → logprob: -17.02324676513672
    6. '	y' → logprob: -17.52324676513672
    7. ',y' → logprob: -17.77324676513672
    8. ')' → logprob: -18.39824676513672
    9. '<|end|>' → logprob: -18.52324676513672
    10. '   ' → logprob: -18.52324676513672

Token 288: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011098281480371952
    2. ')' → logprob: -4.511098384857178
    3. '))
' → logprob: -10.26109790802002
    4. ')))' → logprob: -12.01109790802002
    5. '                   ' → logprob: -12.26109790802002
    6. '               ' → logprob: -13.51109790802002
    7. ')
' → logprob: -13.76109790802002
    8. '),' → logprob: -14.13609790802002
    9. ' ))' → logprob: -14.63609790802002
    10. ')}' → logprob: -15.26109790802002

Token 289: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3417155146598816
    2. '        
' → logprob: -1.5917155742645264
    3. '
' → logprob: -2.7167155742645264
    4. '<|end|>' → logprob: -4.091715335845947
    5. '        ' → logprob: -6.591715335845947
    6. ',' → logprob: -8.091715812683105
    7. ')' → logprob: -8.341715812683105
    8. '
        
' → logprob: -8.841715812683105
    9. '<|end|>' → logprob: -9.091715812683105
    10. '    
' → logprob: -9.216715812683105

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3622378408908844
    2. ' points' → logprob: -2.4872379302978516
    3. 'points' → logprob: -2.8622379302978516
    4. ' n' → logprob: -3.2372379302978516
    5. ' all' → logprob: -4.112237930297852
    6. 'all' → logprob: -4.237237930297852
    7. 'n' → logprob: -4.237237930297852
    8. '        
' → logprob: -4.487237930297852
    9. ' positions' → logprob: -4.487237930297852
    10. 'positions' → logprob: -4.737237930297852

Token 291: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.015528989024460316
    2. 'positions' → logprob: -5.515529155731201
    3. 'all' → logprob: -5.640529155731201
    4. 'if' → logprob: -5.765529155731201
    5. ' points' → logprob: -6.265529155731201
    6. 'from' → logprob: -7.265529155731201
    7. 'nodes' → logprob: -7.515529155731201
    8. 'd' → logprob: -8.015528678894043
    9. 'dist' → logprob: -8.140528678894043
    10. 'targets' → logprob: -8.515528678894043

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013350016670301557
    2. '=' → logprob: -6.626335144042969
    3. ')' → logprob: -12.126335144042969
    4. '<|end|>' → logprob: -12.876335144042969
    5. ' =
' → logprob: -15.751335144042969
    6. ' =[' → logprob: -15.876335144042969
    7. ' =)' → logprob: -15.876335144042969
    8. ' ' → logprob: -16.00133514404297
    9. '=[]' → logprob: -16.12633514404297
    10. '＝' → logprob: -16.62633514404297

Token 293: ' [' (ID: 723)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.17835994064807892
    2. ' [' → logprob: -1.9283599853515625
    3. '[' → logprob: -4.3033599853515625
    4. '[d' → logprob: -5.4283599853515625
    5. '[(' → logprob: -10.803359985351562
    6. 'dirty' → logprob: -11.678359985351562
    7. '[end' → logprob: -11.928359985351562
    8. ' dirty' → logprob: -12.803359985351562
    9. ' ' → logprob: -12.803359985351562
    10. '[len' → logprob: -13.678359985351562

Token 294: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.547789674485102e-05
    2. ' start' → logprob: -10.250035285949707
    3. ')' → logprob: -19.125036239624023
    4. '(start' → logprob: -19.125036239624023
    5. '   ' → logprob: -19.625036239624023
    6. '[start' → logprob: -20.250036239624023
    7. ']' → logprob: -20.625036239624023
    8. '
' → logprob: -21.125036239624023
    9. '	start' → logprob: -21.250036239624023
    10. '_start' → logprob: -22.500036239624023

Token 295: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010518652852624655
    2. ']+' → logprob: -6.876051902770996
    3. ' ]' → logprob: -10.876051902770996
    4. ')' → logprob: -17.25105094909668
    5. ']+=' → logprob: -17.25105094909668
    6. ')]' → logprob: -17.50105094909668
    7. '"]' → logprob: -17.50105094909668
    8. ']
' → logprob: -17.62605094909668
    9. '']' → logprob: -18.25105094909668
    10. ',' → logprob: -18.37605094909668

Token 296: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2016523778438568
    2. '+' → logprob: -1.7016524076461792
    3. '<|end|>' → logprob: -8.951652526855469
    4. ' +
' → logprob: -9.826652526855469
    5. '+
' → logprob: -10.326652526855469
    6. '+[' → logprob: -12.201652526855469
    7. '.extend' → logprob: -12.451652526855469
    8. ')' → logprob: -12.826652526855469
    9. '       ' → logprob: -13.451652526855469
    10. '+d' → logprob: -13.576652526855469

Token 297: ' dirty' (ID: 32042)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirty' → logprob: -0.06197104603052139
    2. ' dirty' → logprob: -2.8119709491729736
    3. '_dirty' → logprob: -13.936970710754395
    4. '[' → logprob: -14.186970710754395
    5. 'dust' → logprob: -14.311970710754395
    6. 'Dirty' → logprob: -14.686970710754395
    7. ' dirt' → logprob: -15.686970710754395
    8. 'd' → logprob: -15.686970710754395
    9. 'clean' → logprob: -15.811970710754395
    10. 'dry' → logprob: -16.06197166442871

Token 298: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1152111291885376
    2. '       ' → logprob: -2.865211009979248
    3. '        
' → logprob: -3.740211009979248
    4. '<|end|>' → logprob: -3.865211009979248
    5. ',' → logprob: -6.115211009979248
    6. ',
' → logprob: -6.865211009979248
    7. '<|end|>' → logprob: -7.615211009979248
    8. 'dist' → logprob: -7.615211009979248
    9. ' distances' → logprob: -7.990211009979248
    10. '
' → logprob: -8.115211486816406

Token 299: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9140886068344116
    2. '       ' → logprob: -1.2890886068344116
    3. '
' → logprob: -1.7890886068344116
    4. ' distances' → logprob: -2.289088726043701
    5. 'distance' → logprob: -3.914088726043701
    6. '        
' → logprob: -4.289088726043701
    7. '_dist' → logprob: -5.164088726043701
    8. ' distance' → logprob: -5.789088726043701
    9. ',' → logprob: -6.164088726043701
    10. ' dist' → logprob: -6.414088726043701

Token 300: ' n' (ID: 297)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3339970111846924
    2. 'n' (adapté à ' n') → logprob: -1.5839970111846924
    3. ' n' → logprob: -3.0839970111846924
    4. '       ' → logprob: -4.208996772766113
    5. 'd' → logprob: -4.833996772766113
    6. ' dist' → logprob: -4.958996772766113
    7. ' distances' → logprob: -6.708996772766113
    8. 'dp' → logprob: -7.083996772766113
    9. 'num' → logprob: -7.958996772766113
    10. 'distance' → logprob: -8.708996772766113

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021905910689383745
    2. '=' → logprob: -6.127190589904785
    3. '_points' → logprob: -12.627190589904785
    4. '_' → logprob: -14.252190589904785
    5. ' ' → logprob: -15.002190589904785
    6. '=len' → logprob: -15.252190589904785
    7. ' =
' → logprob: -15.627190589904785
    8. ',' → logprob: -16.2521915435791
    9. ' =)' → logprob: -16.2521915435791
    10. 'ext' → logprob: -16.3771915435791

Token 302: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2519896924495697
    2. ' len' → logprob: -1.501989722251892
    3. '(len' → logprob: -9.751989364624023
    4. '[len' → logprob: -13.626989364624023
    5. '=len' → logprob: -13.876989364624023
    6. '	len' → logprob: -16.001989364624023
    7. ',len' → logprob: -16.626989364624023
    8. '<len' → logprob: -17.126989364624023
    9. '<|end|>' → logprob: -19.376989364624023
    10. '
' → logprob: -20.251989364624023

Token 303: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -2.816093228830141e-06
    2. 'points' → logprob: -12.87500286102295
    3. ' points' → logprob: -16.875001907348633
    4. '(' → logprob: -17.250001907348633
    5. '	points' → logprob: -17.500001907348633
    6. '(parts' → logprob: -19.250001907348633
    7. ' (' → logprob: -19.875001907348633
    8. '(
' → logprob: -20.000001907348633
    9. '(point' → logprob: -20.500001907348633
    10. '_points' → logprob: -20.875001907348633

Token 304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026455431361682713
    2. ')
' → logprob: -8.500264167785645
    3. ' )' → logprob: -9.750264167785645
    4. '<|end|>' → logprob: -13.500264167785645
    5. '))' → logprob: -15.750264167785645
    6. ')n' → logprob: -16.00026512145996
    7. ')

' → logprob: -16.12526512145996
    8. '<|end|>' → logprob: -16.25026512145996
    9. '),' → logprob: -16.37526512145996
    10. ')...' → logprob: -16.50026512145996

Token 305: '        
' (ID: 3564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6419026255607605
    2. '       ' → logprob: -1.5169026851654053
    3. '
' → logprob: -1.7669026851654053
    4. '        
' → logprob: -3.3919026851654053
    5. ' distances' → logprob: -3.7669026851654053
    6. 'distance' → logprob: -4.266902446746826
    7. ' dist' → logprob: -5.391902446746826
    8. ',
' → logprob: -6.391902446746826
    9. 'dp' → logprob: -6.766902446746826
    10. ',' → logprob: -6.766902446746826

Token 306: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023895302787423134
    2. '       ' → logprob: -3.898895263671875
    3. ' dist' → logprob: -6.023895263671875
    4. ' distances' → logprob: -8.148895263671875
    5. 'd' → logprob: -8.398895263671875
    6. 'dp' → logprob: -8.648895263671875
    7. 'distance' → logprob: -9.523895263671875
    8. 'graph' → logprob: -10.023895263671875
    9. '   ' → logprob: -10.023895263671875
    10. '        
' → logprob: -10.148895263671875

Token 307: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001026854501105845
    2. 'd' → logprob: -7.001026630401611
    3. 'dp' → logprob: -9.62602710723877
    4. 'graph' → logprob: -10.37602710723877
    5. ' dist' → logprob: -11.50102710723877
    6. 'distance' → logprob: -13.25102710723877
    7. 'INF' → logprob: -13.25102710723877
    8. '   ' → logprob: -13.62602710723877
    9. '#' (adapté à ' #') → logprob: -13.87602710723877
    10. '
' → logprob: -14.62602710723877

Token 308: ' Compute' (ID: 45438)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001874262816272676
    2. ' dist' → logprob: -7.1268744468688965
    3. 'd' → logprob: -7.6268744468688965
    4. '#' → logprob: -8.126873970031738
    5. 'distance' → logprob: -8.751873970031738
    6. 'dp' → logprob: -9.876873970031738
    7. 'def' → logprob: -10.626873970031738
    8. 'graph' → logprob: -11.251873970031738
    9. 'INF' → logprob: -12.001873970031738
    10. ' distances' → logprob: -12.126873970031738

Token 309: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.019100768491625786
    2. ' dist' → logprob: -4.019100666046143
    3. 'd' → logprob: -7.144100666046143
    4. ' distances' → logprob: -9.2691011428833
    5. '   ' → logprob: -10.5191011428833
    6. 'graph' → logprob: -11.0191011428833
    7. ' d' → logprob: -11.3941011428833
    8. 'distance' → logprob: -11.8941011428833
    9. 'dp' → logprob: -13.5191011428833
    10. ' graph' → logprob: -13.6441011428833

Token 310: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026397479698061943
    2. 'dist' → logprob: -4.151397705078125
    3. ' between' → logprob: -5.526397705078125
    4. ',' → logprob: -6.151397705078125
    5. ' distances' → logprob: -6.776397705078125
    6. ' for' → logprob: -7.401397705078125
    7. 'distance' → logprob: -7.651397705078125
    8. ' =' → logprob: -7.901397705078125
    9. ' dist' → logprob: -8.026397705078125
    10. 'between' → logprob: -8.401397705078125

Token 311: ' every' (ID: 1753)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4024963974952698
    2. ' all' → logprob: -1.152496337890625
    3. ' points' → logprob: -4.652496337890625
    4. 'points' → logprob: -5.277496337890625
    5. 'each' → logprob: -8.027496337890625
    6. ' pairs' → logprob: -8.777496337890625
    7. ' each' → logprob: -8.777496337890625
    8. 'pairs' → logprob: -9.027496337890625
    9. 'every' → logprob: -10.652496337890625
    10. ' every' → logprob: -10.652496337890625

Token 312: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.31536343693733215
    2. ' pair' → logprob: -1.3153634071350098
    3. 'point' → logprob: -6.69036340713501
    4. 'i' → logprob: -7.94036340713501
    5. ' i' → logprob: -8.190363883972168
    6. 'pairs' → logprob: -9.315363883972168
    7. ' ' → logprob: -10.065363883972168
    8. '   ' → logprob: -10.565363883972168
    9. ' point' → logprob: -10.815363883972168
    10. 'points' → logprob: -11.440363883972168

Token 313: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5755704641342163
    2. '       ' → logprob: -0.9505704641342163
    3. ' for' → logprob: -4.075570583343506
    4. '   ' → logprob: -4.575570583343506
    5. 'points' → logprob: -5.075570583343506
    6. 'for' → logprob: -5.575570583343506
    7. ' points' → logprob: -5.575570583343506
    8. '(points' → logprob: -5.575570583343506
    9. 'of' → logprob: -5.700570583343506
    10. 'dist' → logprob: -7.450570583343506

Token 314: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.01817510649561882
    2. ' points' → logprob: -4.01817512512207
    3. '	points' → logprob: -11.76817512512207
    4. 'nodes' → logprob: -12.01817512512207
    5. '(points' → logprob: -12.01817512512207
    6. 'oints' → logprob: -13.14317512512207
    7. '_points' → logprob: -13.64317512512207
    8. '.points' → logprob: -14.39317512512207
    9. 'i' → logprob: -14.76817512512207
    10. 'indices' → logprob: -15.51817512512207

Token 315: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11864147335290909
    2. 'dist' → logprob: -2.3686413764953613
    3. ',' → logprob: -5.368641376495361
    4. ' distances' → logprob: -5.618641376495361
    5. 'distance' → logprob: -5.743641376495361
    6. '
' → logprob: -5.993641376495361
    7. '        
' → logprob: -6.493641376495361
    8. ' dist' → logprob: -6.743641376495361
    9. ':' → logprob: -7.993641376495361
    10. 'd' → logprob: -8.11864185333252

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08247413486242294
    2. 'dist' → logprob: -2.8324742317199707
    3. ',' → logprob: -5.207474231719971
    4. ' distances' → logprob: -5.457474231719971
    5. ' dist' → logprob: -5.832474231719971
    6. '        
' → logprob: -5.957474231719971
    7. '
' → logprob: -6.207474231719971
    8. 'distance' → logprob: -6.582474231719971
    9. ' distance' → logprob: -7.957474231719971
    10. ',
' → logprob: -8.207473754882812

Token 317: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.018843432888388634
    2. ' dist' → logprob: -4.518843650817871
    3. '       ' → logprob: -5.018843650817871
    4. 'd' → logprob: -7.393843650817871
    5. ' distances' → logprob: -8.643843650817871
    6. 'dp' → logprob: -8.893843650817871
    7. 'distance' → logprob: -9.143843650817871
    8. 'graph' → logprob: -9.768843650817871
    9. '        
' → logprob: -10.893843650817871
    10. ' d' → logprob: -11.518843650817871

Token 318: '_map' (ID: 11824)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5567912459373474
    2. ' =' → logprob: -0.9317912459373474
    3. 's' → logprob: -3.806791305541992
    4. '_matrix' → logprob: -4.681791305541992
    5. 'ances' → logprob: -6.806791305541992
    6. 'ance' → logprob: -9.181791305541992
    7. 'matrix' → logprob: -9.181791305541992
    8. '_' → logprob: -10.056791305541992
    9. '=[' → logprob: -10.056791305541992
    10. '=[]' → logprob: -10.056791305541992

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06200835481286049
    2. '=' → logprob: -2.8120083808898926
    3. 's' → logprob: -10.437007904052734
    4. '[' → logprob: -12.312007904052734
    5. ' =[' → logprob: -13.062007904052734
    6. '=[]' → logprob: -13.562007904052734
    7. ' ' → logprob: -13.812007904052734
    8. ',' → logprob: -14.062007904052734
    9. '=[' → logprob: -14.687007904052734
    10. ' =
' → logprob: -15.062007904052734

Token 320: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10538310557603836
    2. '[]
' → logprob: -3.1053831577301025
    3. '[[' → logprob: -3.3553831577301025
    4. ' [' → logprob: -4.355382919311523
    5. '[]' → logprob: -5.105382919311523
    6. '[n' → logprob: -7.105382919311523
    7. '[array' → logprob: -9.480382919311523
    8. ' [[' → logprob: -9.730382919311523
    9. '[node' → logprob: -9.730382919311523
    10. '[s' → logprob: -10.355382919311523

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03461909666657448
    2. ' for' → logprob: -3.534619092941284
    3. 'for' → logprob: -5.534619331359863
    4. '=' → logprob: -8.284619331359863
    5. ' =' → logprob: -8.534619331359863
    6. '   ' → logprob: -8.534619331359863
    7. ':' → logprob: -9.284619331359863
    8. '        
' → logprob: -10.159619331359863
    9. ',' → logprob: -10.409619331359863
    10. ')' → logprob: -10.659619331359863

Token 322: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07528775185346603
    2. ' for' → logprob: -2.8252878189086914
    3. '       ' → logprob: -4.325287818908691
    4. '	for' → logprob: -14.075287818908691
    5. '   ' → logprob: -14.575287818908691
    6. '        
' → logprob: -15.200287818908691
    7. ')' → logprob: -15.825287818908691
    8. '[' → logprob: -16.325286865234375
    9. ' ' → logprob: -16.700286865234375
    10. '```' → logprob: -16.950286865234375

Token 323: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.658206582069397
    2. 'i' → logprob: -0.908206582069397
    3. 'point' → logprob: -3.4082064628601074
    4. ' i' → logprob: -3.9082064628601074
    5. ' p' → logprob: -4.283206462860107
    6. ' point' → logprob: -5.158206462860107
    7. 'pt' → logprob: -5.658206462860107
    8. 'px' → logprob: -6.283206462860107
    9. ' px' → logprob: -7.533206462860107
    10. ' pt' → logprob: -8.908206939697266

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09182936698198318
    2. 'in' → logprob: -2.716829299926758
    3. 'oints' → logprob: -4.091829299926758
    4. 'oint' → logprob: -5.341829299926758
    5. 'i' → logprob: -9.091829299926758
    6. 't' → logprob: -11.466829299926758
    7. 'os' → logprob: -11.591829299926758
    8. 'p' → logprob: -12.591829299926758
    9. 'idx' → logprob: -12.591829299926758
    10. 'o' → logprob: -12.966829299926758

Token 325: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00015872348740231246
    2. ' points' → logprob: -8.750158309936523
    3. 'oints' → logprob: -15.250158309936523
    4. '(points' → logprob: -18.250158309936523
    5. '	points' → logprob: -19.375158309936523
    6. '[' → logprob: -21.375158309936523
    7. 'point' → logprob: -21.875158309936523
    8. '.points' → logprob: -22.125158309936523
    9. '_points' → logprob: -22.625158309936523
    10. 'Points' → logprob: -24.125158309936523

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10395896434783936
    2. ':
' → logprob: -2.353959083557129
    3. '):' → logprob: -6.228959083557129
    4. '):
' → logprob: -6.478959083557129
    5. '       ' → logprob: -9.228959083557129
    6. '   ' → logprob: -10.228959083557129
    7. '=' → logprob: -10.478959083557129
    8. ',' → logprob: -10.603959083557129
    9. ')' → logprob: -10.853959083557129
    10. ' =' → logprob: -11.853959083557129

Token 327: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09339316189289093
    2. '           ' → logprob: -3.218393087387085
    3. '       ' → logprob: -3.343393087387085
    4. ' dist' → logprob: -5.593393325805664
    5. 'dist' → logprob: -5.843393325805664
    6. '    
' → logprob: -5.843393325805664
    7. ':' → logprob: -6.718393325805664
    8. '):
' → logprob: -7.218393325805664
    9. ',' → logprob: -7.593393325805664
    10. '
' → logprob: -7.843393325805664

Token 328: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.3290558457374573
    2. ' dist' → logprob: -1.4540557861328125
    3. '   ' → logprob: -3.0790557861328125
    4. '           ' → logprob: -8.079055786132812
    5. 'd' → logprob: -8.454055786132812
    6. '	dist' → logprob: -8.954055786132812
    7. '       ' → logprob: -9.829055786132812
    8. ' distances' → logprob: -10.829055786132812
    9. '_dist' → logprob: -11.579055786132812
    10. '               ' → logprob: -11.704055786132812

Token 329: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.048756666481494904
    2. '=' → logprob: -3.7987565994262695
    3. ' =' → logprob: -3.9237565994262695
    4. 'map' → logprob: -5.5487565994262695
    5. '.append' → logprob: -6.9237565994262695
    6. 'dist' → logprob: -8.54875659942627
    7. 'append' → logprob: -9.17375659942627
    8. 'p' → logprob: -9.79875659942627
    9. '_dist' → logprob: -10.29875659942627
    10. '_' → logprob: -10.42375659942627

Token 330: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002700377954170108
    2. '=' → logprob: -6.377700328826904
    3. '.' → logprob: -7.502700328826904
    4. 'append' → logprob: -8.002700805664062
    5. ' =' → logprob: -9.252700805664062
    6. ' .' → logprob: -11.627700805664062
    7. ' append' → logprob: -12.877700805664062
    8. '.=' → logprob: -13.627700805664062
    9. ')' → logprob: -13.752700805664062
    10. '.extend' → logprob: -14.252700805664062

Token 331: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00010533124441280961
    2. 'b' → logprob: -9.250104904174805
    3. '(' → logprob: -11.625104904174805
    4. ' bfs' → logprob: -15.500104904174805
    5. ' (' → logprob: -17.500104904174805
    6. '(
' → logprob: -18.250104904174805
    7. '=b' → logprob: -18.375104904174805
    8. ',b' → logprob: -19.875104904174805
    9. ')b' → logprob: -19.875104904174805
    10. '((' → logprob: -20.250104904174805

Token 332: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -7.896309739408025e-07
    2. ' fs' → logprob: -15.125000953674316
    3. 'FS' → logprob: -15.250000953674316
    4. 'f' → logprob: -16.25
    5. '(fs' → logprob: -16.75
    6. 'fsp' → logprob: -17.125
    7. 's' → logprob: -18.5
    8. '_fs' → logprob: -18.625
    9. 'ps' → logprob: -18.625
    10. 'sf' → logprob: -19.75

Token 333: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0002338144404347986
    2. '(' → logprob: -9.00023365020752
    3. ')(' → logprob: -10.12523365020752
    4. ')' → logprob: -10.37523365020752
    5. ' (' → logprob: -10.50023365020752
    6. 'p' → logprob: -12.25023365020752
    7. '((' → logprob: -12.50023365020752
    8. ')p' → logprob: -13.75023365020752
    9. '(
' → logprob: -13.87523365020752
    10. '(*' → logprob: -14.87523365020752

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04337799921631813
    2. ',p' → logprob: -3.7933781147003174
    3. '(p' → logprob: -4.168377876281738
    4. 'p' → logprob: -6.043377876281738
    5. '(' → logprob: -6.918377876281738
    6. ' ,' → logprob: -7.418377876281738
    7. ' p' → logprob: -8.793377876281738
    8. ',w' → logprob: -9.543377876281738
    9. '[' → logprob: -10.168377876281738
    10. ' (' → logprob: -10.293377876281738

Token 335: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0007104054093360901
    2. ' grid' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.750710487365723
    4. '	grid' → logprob: -16.250709533691406
    5. '(grid' → logprob: -16.375709533691406
    6. ')' → logprob: -17.875709533691406
    7. '
' → logprob: -18.000709533691406
    8. '.grid' → logprob: -18.375709533691406
    9. ' ' → logprob: -18.750709533691406
    10. '[' → logprob: -18.875709533691406

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018444780260324478
    2. ',w' → logprob: -4.018445014953613
    3. ' ,' → logprob: -8.518445014953613
    4. ',len' → logprob: -9.643445014953613
    5. 'w' → logprob: -10.893445014953613
    6. '))' → logprob: -13.268445014953613
    7. '[' → logprob: -13.518445014953613
    8. '   ' → logprob: -13.643445014953613
    9. ')' → logprob: -13.893445014953613
    10. '       ' → logprob: -14.018445014953613

Token 337: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0004307884373702109
    2. ' w' → logprob: -7.750430583953857
    3. '	w' → logprob: -17.375431060791016
    4. '   ' → logprob: -18.000431060791016
    5. ')' → logprob: -18.875431060791016
    6. '<w' → logprob: -19.750431060791016
    7. '    ' → logprob: -19.875431060791016
    8. ''w' → logprob: -19.875431060791016
    9. '*w' → logprob: -20.000431060791016
    10. '[w' → logprob: -20.250431060791016

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003382038848940283
    2. ',h' → logprob: -8.000338554382324
    3. ' ,' → logprob: -12.875338554382324
    4. ',
' → logprob: -15.875338554382324
    5. ',w' → logprob: -16.875337600708008
    6. ',b' → logprob: -17.500337600708008
    7. ')' → logprob: -18.125337600708008
    8. 'h' → logprob: -18.250337600708008
    9. '   ' → logprob: -18.375337600708008
    10. ',y' → logprob: -18.375337600708008

Token 339: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0004306692280806601
    2. ' h' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.125431060791016
    4. '	h' → logprob: -20.000431060791016
    5. ')' → logprob: -21.375431060791016
    6. '<h' → logprob: -21.625431060791016
    7. '       ' → logprob: -22.250431060791016
    8. ',h' → logprob: -22.375431060791016
    9. '    ' → logprob: -22.625431060791016
    10. '[h' → logprob: -23.375431060791016

Token 340: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007127894787117839
    2. ')' → logprob: -7.250712871551514
    3. '))
' → logprob: -13.375712394714355
    4. ' ))' → logprob: -14.250712394714355
    5. ')))' → logprob: -15.625712394714355
    6. '));' → logprob: -16.000713348388672
    7. '   ' → logprob: -16.250713348388672
    8. '),' → logprob: -16.375713348388672
    9. '       ' → logprob: -16.375713348388672
    10. ')
' → logprob: -16.750713348388672

Token 341: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3578729033470154
    2. '        
' → logprob: -1.6078729629516602
    3. '
' → logprob: -2.48287296295166
    4. '  
' → logprob: -5.10787296295166
    5. '    
' → logprob: -5.73287296295166
    6. ' for' → logprob: -6.10787296295166
    7. ' distances' → logprob: -6.85787296295166
    8. '<|end|>' → logprob: -6.85787296295166
    9. 'for' → logprob: -7.10787296295166
    10. ' 
' → logprob: -7.35787296295166

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3218611776828766
    2. '        
' → logprob: -2.3218612670898438
    3. ' distances' → logprob: -2.6968612670898438
    4. '
' → logprob: -3.4468612670898438
    5. 'distance' → logprob: -3.8218612670898438
    6. 'dist' → logprob: -3.9468612670898438
    7. ' distance' → logprob: -4.571861267089844
    8. ' dist' → logprob: -4.821861267089844
    9. 'd' → logprob: -5.446861267089844
    10. 'dp' → logprob: -5.821861267089844

Token 343: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.5129587650299072
    2. 'dp' → logprob: -1.2629587650299072
    3. '       ' → logprob: -3.1379587650299072
    4. 'distance' → logprob: -3.5129587650299072
    5. ' distances' → logprob: -4.637958526611328
    6. ' dist' → logprob: -4.762958526611328
    7. 'd' → logprob: -4.887958526611328
    8. 'for' → logprob: -5.637958526611328
    9. 'ans' → logprob: -5.762958526611328
    10. ' dp' → logprob: -6.012958526611328

Token 344: ' =' (ID: 314)
  Prédit: '_matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.08571343868970871
    2. ' =' → logprob: -3.2107133865356445
    3. '=' → logprob: -3.8357133865356445
    4. '_map' → logprob: -4.7107133865356445
    5. '_mat' → logprob: -5.4607133865356445
    6. '_' → logprob: -6.2107133865356445
    7. 's' → logprob: -6.5857133865356445
    8. '_pairs' → logprob: -7.0857133865356445
    9. '=[' → logprob: -7.3357133865356445
    10. '_array' → logprob: -8.085713386535645

Token 345: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0631808489561081
    2. ' [[' → logprob: -2.813180923461914
    3. '[' → logprob: -6.813180923461914
    4. ' [' → logprob: -9.313180923461914
    5. '[
' → logprob: -10.813180923461914
    6. '[n' → logprob: -14.063180923461914
    7. '[]
' → logprob: -14.063180923461914
    8. '[]' → logprob: -14.313180923461914
    9. ' ' → logprob: -15.938180923461914
    10. '[['' → logprob: -16.188180923461914

Token 346: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08411017805337906
    2. '0' → logprob: -2.9591102600097656
    3. 'dist' → logprob: -3.7091102600097656
    4. ' -' → logprob: -6.459110260009766
    5. 'float' → logprob: -6.459110260009766
    6. '-dist' → logprob: -7.209110260009766
    7. ' dist' → logprob: -8.334110260009766
    8. ' ' → logprob: -9.584110260009766
    9. '   ' → logprob: -9.959110260009766
    10. 'None' → logprob: -10.584110260009766

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '2' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.750001907348633
    4. 'float' → logprob: -16.937501907348633
    5. '999' → logprob: -17.437501907348633
    6. 'int' → logprob: -17.562501907348633
    7. '100' → logprob: -17.625001907348633
    8. '-' → logprob: -17.750001907348633
    9. 'sys' → logprob: -17.750001907348633
    10. '   ' → logprob: -18.000001907348633

Token 348: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13669873774051666
    2. 'for' → logprob: -2.7616987228393555
    3. ']*' → logprob: -2.8866987228393555
    4. ']*(' → logprob: -5.3866987228393555
    5. ']' → logprob: -5.5116987228393555
    6. '	for' → logprob: -8.761698722839355
    7. ' ]' → logprob: -10.511698722839355
    8. '   ' → logprob: -11.761698722839355
    9. ' if' → logprob: -13.136698722839355
    10. ']+' → logprob: -13.386698722839355

Token 349: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.7697225252486533e-06
    2. ' n' → logprob: -13.000003814697266
    3. '(n' → logprob: -13.500003814697266
    4. 'len' → logprob: -18.125003814697266
    5. '
' → logprob: -18.625003814697266
    6. '	n' → logprob: -19.750003814697266
    7. '   ' → logprob: -20.000003814697266
    8. '_n' → logprob: -20.375003814697266
    9. ')n' → logprob: -21.750003814697266
    10. '$n' → logprob: -21.875003814697266

Token 350: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011056549847126007
    2. 'for' → logprob: -4.511056423187256
    3. '	for' → logprob: -11.761056900024414
    4. '   ' → logprob: -14.886056900024414
    5. ']' → logprob: -15.386056900024414
    6. ' ' → logprob: -15.511056900024414
    7. '       ' → logprob: -15.886056900024414
    8. ' ' → logprob: -16.886056900024414
    9. ')' → logprob: -17.136056900024414
    10. '
' → logprob: -17.511056900024414

Token 351: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08255559206008911
    2. 'in' → logprob: -2.7075555324554443
    3. '_' → logprob: -5.082555770874023
    4. ' range' → logprob: -5.832555770874023
    5. 'range' → logprob: -5.832555770874023
    6. ' _' → logprob: -8.582555770874023
    7. '_range' → logprob: -8.707555770874023
    8. '_in' → logprob: -9.332555770874023
    9. 'n' → logprob: -11.082555770874023
    10. '_n' → logprob: -11.207555770874023

Token 352: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7071295380592346
    2. 'range' → logprob: -0.7071295380592346
    3. ' in' → logprob: -4.45712947845459
    4. ' range' → logprob: -6.08212947845459
    5. 'n' → logprob: -12.58212947845459
    6. '(range' → logprob: -13.83212947845459
    7. ' ' → logprob: -14.83212947845459
    8. 'ange' → logprob: -15.20712947845459
    9. '	range' → logprob: -15.33212947845459
    10. '   ' → logprob: -15.70712947845459

Token 353: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00525273010134697
    2. ' range' → logprob: -5.255252838134766
    3. 'n' → logprob: -10.880252838134766
    4. '(range' → logprob: -16.630252838134766
    5. '	range' → logprob: -18.880252838134766
    6. '   ' → logprob: -19.130252838134766
    7. ' n' → logprob: -19.255252838134766
    8. '_range' → logprob: -19.755252838134766
    9. '.range' → logprob: -20.130252838134766
    10. ' ' → logprob: -20.130252838134766

Token 354: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011673200875520706
    2. ' n' → logprob: -4.5116729736328125
    3. '(n' → logprob: -7.3866729736328125
    4. 'range' → logprob: -12.886672973632812
    5. ' range' → logprob: -13.261672973632812
    6. '   ' → logprob: -14.511672973632812
    7. ' (' → logprob: -15.011672973632812
    8. '       ' → logprob: -15.386672973632812
    9. '_n' → logprob: -15.886672973632812
    10. '	n' → logprob: -16.011672973632812

Token 355: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.476756751537323
    2. ']' → logprob: -0.976756751537323
    3. ']
' → logprob: -6.726756572723389
    4. ')' → logprob: -6.851756572723389
    5. ')]
' → logprob: -7.851756572723389
    6. '       ' → logprob: -10.976757049560547
    7. ' ]' → logprob: -12.226757049560547
    8. '   ' → logprob: -12.601757049560547
    9. ')
' → logprob: -13.476757049560547
    10. '>]' → logprob: -13.976757049560547

Token 356: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5308854579925537
    2. ' for' → logprob: -1.0308854579925537
    3. '       ' → logprob: -2.9058854579925537
    4. '
' → logprob: -8.780885696411133
    5. '   ' → logprob: -9.155885696411133
    6. '        
' → logprob: -9.280885696411133
    7. '	for' → logprob: -9.280885696411133
    8. '<|end|>' → logprob: -10.780885696411133
    9. '```' → logprob: -11.030885696411133
    10. ' ' → logprob: -11.655885696411133

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09097998589277267
    2. '=' → logprob: -2.465980052947998
    3. '[' → logprob: -6.590980052947998
    4. ' ' → logprob: -8.46597957611084
    5. '=True' → logprob: -8.84097957611084
    6. ',' → logprob: -9.21597957611084
    7. 'for' → logprob: -10.46597957611084
    8. '<|end|>' → logprob: -10.46597957611084
    9. '_' → logprob: -10.96597957611084
    10. '   ' → logprob: -10.96597957611084

Token 359: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.001171112060547
    4. '(True' → logprob: -19.001171112060547
    5. '=True' → logprob: -19.876171112060547
    6. ' ' → logprob: -20.751171112060547
    7. 'true' → logprob: -20.876171112060547
    8. '       ' → logprob: -21.501171112060547
    9. '  ' → logprob: -22.376171112060547
    10. 'Tr' → logprob: -22.501171112060547

Token 360: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3138045072555542
    2. '       ' → logprob: -1.9388045072555542
    3. '<|end|>' → logprob: -2.6888046264648438
    4. '        
' → logprob: -3.4388046264648438
    5. '  
' → logprob: -4.438804626464844
    6. ' for' → logprob: -5.563804626464844
    7. '    
' → logprob: -5.563804626464844
    8. ' 
' → logprob: -6.313804626464844
    9. '\n' → logprob: -6.813804626464844
    10. '<|end|>' → logprob: -7.188804626464844

Token 361: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33334463834762573
    2. '       ' → logprob: -1.5833446979522705
    3. ' for' → logprob: -3.8333446979522705
    4. '<|end|>' → logprob: -3.9583446979522705
    5. '        
' → logprob: -4.083344459533691
    6. ' 
' → logprob: -4.708344459533691
    7. '  
' → logprob: -5.208344459533691
    8. '    
' → logprob: -6.208344459533691
    9. '   ' → logprob: -6.833344459533691
    10. '		
' → logprob: -7.833344459533691

Token 362: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36860400438308716
    2. ' for' → logprob: -1.2436039447784424
    3. 'for' (adapté à ' for') → logprob: -4.6186041831970215
    4. '
' → logprob: -5.3686041831970215
    5. '        
' → logprob: -5.7436041831970215
    6. ' 
' → logprob: -7.3686041831970215
    7. '	for' → logprob: -8.243603706359863
    8. '   ' → logprob: -8.243603706359863
    9. ' ' → logprob: -8.368603706359863
    10. '<|end|>' → logprob: -8.368603706359863

Token 363: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038043901324272156
    2. ' i' → logprob: -3.288043975830078
    3. '   ' → logprob: -13.288043975830078
    4. ' ' → logprob: -14.913043975830078
    5. '	i' → logprob: -15.038043975830078
    6. '    ' → logprob: -16.788043975830078
    7. '(i' → logprob: -17.038043975830078
    8. '_i' → logprob: -17.538043975830078
    9. '  ' → logprob: -17.788043975830078
    10. '       ' → logprob: -17.913043975830078

Token 364: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026314815506339073
    2. 'in' → logprob: -3.6513147354125977
    3. ' ' → logprob: -11.901314735412598
    4. '	in' → logprob: -12.401314735412598
    5. ',' → logprob: -13.026314735412598
    6. '   ' → logprob: -15.651314735412598
    7. 'In' → logprob: -15.776314735412598
    8. 'range' → logprob: -15.901314735412598
    9. '```' → logprob: -15.901314735412598
    10. ' ,' → logprob: -16.151315689086914

Token 365: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804183006286621
    2. ' range' → logprob: -3.288041830062866
    3. '(range' → logprob: -15.163042068481445
    4. ' ' → logprob: -15.913042068481445
    5. '	range' → logprob: -17.413042068481445
    6. '   ' → logprob: -18.663042068481445
    7. '  ' → logprob: -19.663042068481445
    8. 'n' → logprob: -20.163042068481445
    9. '```' → logprob: -20.413042068481445
    10. '0' → logprob: -20.913042068481445

Token 366: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31383809447288513
    2. 'n' → logprob: -1.3138381242752075
    3. ' n' → logprob: -8.063838005065918
    4. '(' → logprob: -8.313838005065918
    5. ' (' → logprob: -11.313838005065918
    6. 'range' → logprob: -13.563838005065918
    7. '   ' → logprob: -14.563838005065918
    8. '	n' → logprob: -14.813838005065918
    9. '1' → logprob: -14.938838005065918
    10. 'in' → logprob: -14.938838005065918

Token 367: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03506706282496452
    2. '):' → logprob: -3.410067081451416
    3. '+' → logprob: -6.910067081451416
    4. ')' → logprob: -8.535066604614258
    5. '   ' → logprob: -8.910066604614258
    6. '       ' → logprob: -10.785066604614258
    7. '):
' → logprob: -11.285066604614258
    8. ':' → logprob: -11.285066604614258
    9. ':
' → logprob: -11.535066604614258
    10. ',' → logprob: -12.160066604614258

Token 368: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010635798797011375
    2. ' for' → logprob: -5.010635852813721
    3. '   ' → logprob: -6.010635852813721
    4. '       ' → logprob: -7.010635852813721
    5. '	       ' → logprob: -8.385635375976562
    6. '<|end|>' → logprob: -8.885635375976562
    7. '	   ' → logprob: -9.385635375976562
    8. '<|end|>' → logprob: -11.010635375976562
    9. '		   ' → logprob: -11.260635375976562
    10. ' ' → logprob: -11.260635375976562

Token 369: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10068278014659882
    2. ' for' → logprob: -2.3506827354431152
    3. '           ' → logprob: -7.975682735443115
    4. '   ' → logprob: -9.100683212280273
    5. '       ' → logprob: -10.975683212280273
    6. '	for' → logprob: -13.350683212280273
    7. 'dist' → logprob: -13.975683212280273
    8. ' ' → logprob: -14.475683212280273
    9. 'j' → logprob: -15.600683212280273
    10. '```' → logprob: -15.725683212280273

Token 370: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0788937583565712
    2. ' j' → logprob: -2.5788936614990234
    3. ' range' → logprob: -13.953893661499023
    4. '   ' → logprob: -14.078893661499023
    5. 'range' → logprob: -14.078893661499023
    6. '_j' → logprob: -14.203893661499023
    7. '	j' → logprob: -14.953893661499023
    8. '0' → logprob: -15.578893661499023
    9. 'i' → logprob: -16.703893661499023
    10. '$j' → logprob: -16.828893661499023

Token 371: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055425480008125305
    2. 'in' → logprob: -2.9304254055023193
    3. '	in' → logprob: -8.430425643920898
    4. '=' → logprob: -9.305425643920898
    5. ' ' → logprob: -9.680425643920898
    6. ' =' → logprob: -10.055425643920898
    7. ' i' → logprob: -10.180425643920898
    8. '<|end|>' → logprob: -11.180425643920898
    9. '   ' → logprob: -11.430425643920898
    10. '=i' → logprob: -11.430425643920898

Token 372: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05140696093440056
    2. ' range' → logprob: -3.0514068603515625
    3. 'n' → logprob: -5.9264068603515625
    4. ' n' → logprob: -9.551406860351562
    5. '(n' → logprob: -10.176406860351562
    6. '(range' → logprob: -10.301406860351562
    7. 'i' → logprob: -12.551406860351562
    8. '(i' → logprob: -14.551406860351562
    9. ' i' → logprob: -15.176406860351562
    10. '   ' → logprob: -15.801406860351562

Token 373: '(n' (ID: 2406)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.14093782007694244
    2. '(n' → logprob: -2.1409378051757812
    3. '(range' → logprob: -5.265937805175781
    4. ' (' → logprob: -5.765937805175781
    5. 'range' → logprob: -5.890937805175781
    6. ' range' → logprob: -6.390937805175781
    7. '(' → logprob: -6.765937805175781
    8. 'i' → logprob: -11.890937805175781
    9. '(j' → logprob: -12.640937805175781
    10. 'n' → logprob: -13.265937805175781

Token 374: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06169268861413002
    2. '):
' → logprob: -2.936692714691162
    3. '+' → logprob: -5.561692714691162
    4. ')' → logprob: -6.186692714691162
    5. ':' → logprob: -8.311692237854004
    6. ' ):' → logprob: -8.561692237854004
    7. ',' → logprob: -9.811692237854004
    8. '           ' → logprob: -9.811692237854004
    9. '       ' → logprob: -10.186692237854004
    10. '   ' → logprob: -10.311692237854004

Token 375: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003843659767881036
    2. ' if' → logprob: -5.753843784332275
    3. '           ' → logprob: -8.503843307495117
    4. '                ' → logprob: -9.378843307495117
    5. '<|end|>' → logprob: -9.378843307495117
    6. '[' → logprob: -9.878843307495117
    7. ' 
' → logprob: -10.503843307495117
    8. '                
' → logprob: -10.628843307495117
    9. ' ' → logprob: -10.753843307495117
    10. ',' → logprob: -10.753843307495117

Token 376: ' d' (ID: 272)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.09746921807527542
    2. '                   ' → logprob: -2.9724693298339844
    3. 'dist' → logprob: -3.5974693298339844
    4. ' if' → logprob: -4.847469329833984
    5. '               ' → logprob: -5.472469329833984
    6. ' d' → logprob: -6.597469329833984
    7. '	dist' → logprob: -8.347469329833984
    8. 'if' → logprob: -8.847469329833984
    9. '           ' → logprob: -8.847469329833984
    10. '   ' → logprob: -9.347469329833984

Token 377: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0021013717632740736
    2. 'ist' → logprob: -6.627101421356201
    3. '[' → logprob: -8.127100944519043
    4. ' =' → logprob: -8.252100944519043
    5. '=' → logprob: -9.002100944519043
    6. 'i' → logprob: -10.502100944519043
    7. 'istance' → logprob: -11.377100944519043
    8. 'ists' → logprob: -11.377100944519043
    9. ' [' → logprob: -11.502100944519043
    10. 's' → logprob: -12.002100944519043

Token 378: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009114635176956654
    2. ' dist' → logprob: -7.000911235809326
    3. '	dist' → logprob: -17.000911712646484
    4. '   ' → logprob: -19.000911712646484
    5. '(dist' → logprob: -19.000911712646484
    6. 'diff' → logprob: -19.000911712646484
    7. '.dist' → logprob: -20.000911712646484
    8. 'd' → logprob: -20.500911712646484
    9. '```' → logprob: -20.500911712646484
    10. ' ' → logprob: -21.000911712646484

Token 379: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0005150251090526581
    2. '[i' → logprob: -7.750514984130859
    3. 'map' → logprob: -9.62551498413086
    4. 'i' → logprob: -11.37551498413086
    5. 'dist' → logprob: -12.87551498413086
    6. '[' → logprob: -13.75051498413086
    7. 'Map' → logprob: -14.00051498413086
    8. '[j' → logprob: -14.87551498413086
    9. '```' → logprob: -14.87551498413086
    10. '_MAP' → logprob: -15.25051498413086

Token 380: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[j' → logprob: -14.250000953674316
    3. '[
' → logprob: -15.500000953674316
    4. 'i' → logprob: -15.625000953674316
    5. '[' → logprob: -16.625001907348633
    6. ' [' → logprob: -18.125001907348633
    7. '```' → logprob: -18.375001907348633
    8. '
' → logprob: -18.750001907348633
    9. '[I' → logprob: -19.125001907348633
    10. '(i' → logprob: -19.625001907348633

Token 381: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28150951862335205
    2. '][' → logprob: -1.406509518623352
    3. '[j' → logprob: -9.281509399414062
    4. ')[' → logprob: -9.281509399414062
    5. ' [' → logprob: -10.281509399414062
    6. '[p' → logprob: -10.531509399414062
    7. '}[' → logprob: -10.656509399414062
    8. '
' → logprob: -11.031509399414062
    9. ']' → logprob: -11.156509399414062
    10. ' ][' → logprob: -11.406509399414062

Token 382: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0001246348983841017
    2. ' points' → logprob: -9.00012493133545
    3. '
' → logprob: -13.87512493133545
    4. '	points' → logprob: -16.250123977661133
    5. '[' → logprob: -16.875123977661133
    6. '   ' → logprob: -17.000123977661133
    7. '(points' → logprob: -17.875123977661133
    8. '```' → logprob: -18.875123977661133
    9. 'j' → logprob: -19.375123977661133
    10. 'point' → logprob: -19.375123977661133

Token 383: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.375000953674316
    3. 'j' → logprob: -16.25
    4. '[i' → logprob: -16.75
    5. '
' → logprob: -17.75
    6. '[
' → logprob: -18.25
    7. '   ' → logprob: -18.5
    8. '```' → logprob: -19.125
    9. ' [' → logprob: -20.25
    10. '][' → logprob: -20.625

Token 384: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. '][' → logprob: -13.125003814697266
    3. '1' → logprob: -14.250003814697266
    4. '0' → logprob: -15.250003814697266
    5. ' [' → logprob: -15.250003814697266
    6. '
' → logprob: -15.875003814697266
    7. ']' → logprob: -16.125003814697266
    8. '[
' → logprob: -16.375003814697266
    9. '```' → logprob: -16.750003814697266
    10. '[j' → logprob: -17.000003814697266

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010342398309148848
    2. '0' → logprob: -9.250102996826172
    3. '
' → logprob: -12.875102996826172
    4. '   ' → logprob: -13.750102996826172
    5. ' ' → logprob: -13.875102996826172
    6. '[' → logprob: -14.125102996826172
    7. ']' → logprob: -14.812602996826172
    8. 'y' → logprob: -14.812602996826172
    9. '```' → logprob: -15.062602996826172
    10. '
' → logprob: -15.375102996826172

Token 386: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.25314638018608093
    2. ']][' → logprob: -1.5031464099884033
    3. ')][' → logprob: -6.753146171569824
    4. ']' → logprob: -10.128146171569824
    5. ' ][' → logprob: -12.378146171569824
    6. '()][' → logprob: -13.128146171569824
    7. '[' → logprob: -13.628146171569824
    8. ']]' → logprob: -14.128146171569824
    9. ']
' → logprob: -15.003146171569824
    10. '
' → logprob: -15.628146171569824

Token 387: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00015860427811276168
    2. ' points' → logprob: -8.750158309936523
    3. '	points' → logprob: -16.125158309936523
    4. '(points' → logprob: -17.250158309936523
    5. '   ' → logprob: -19.875158309936523
    6. 'oints' → logprob: -20.125158309936523
    7. '
' → logprob: -20.375158309936523
    8. '[' → logprob: -20.750158309936523
    9. 'point' → logprob: -20.875158309936523
    10. '.points' → logprob: -21.250158309936523

Token 388: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2015339881181717
    2. 'j' → logprob: -1.7015340328216553
    3. '[' → logprob: -9.076534271240234
    4. ' j' → logprob: -13.076534271240234
    5. '[
' → logprob: -13.576534271240234
    6. '	j' → logprob: -14.076534271240234
    7. '[i' → logprob: -14.201534271240234
    8. '][' → logprob: -14.701534271240234
    9. '```' → logprob: -14.701534271240234
    10. '
' → logprob: -16.076534271240234

Token 389: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03368685021996498
    2. '0' → logprob: -3.408686876296997
    3. '][' → logprob: -10.408686637878418
    4. '.' → logprob: -12.533686637878418
    5. '[
' → logprob: -12.908686637878418
    6. 'x' → logprob: -13.908686637878418
    7. '()[' → logprob: -14.283686637878418
    8. ']' → logprob: -14.408686637878418
    9. '```' → logprob: -14.408686637878418
    10. '[j' → logprob: -14.783686637878418

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.629921436891891e-05
    2. 'x' → logprob: -10.62502670288086
    3. 'points' → logprob: -13.62502670288086
    4. 'j' → logprob: -15.00002670288086
    5. '[' → logprob: -15.87502670288086
    6. '
' → logprob: -15.87502670288086
    7. ' ' → logprob: -17.00002670288086
    8. '```' → logprob: -17.00002670288086
    9. 'i' → logprob: -17.37502670288086
    10. '   ' → logprob: -17.75002670288086

Token 391: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016945181414484978
    2. ']
' → logprob: -8.75016975402832
    3. ' ]' → logprob: -11.50016975402832
    4. ']

' → logprob: -15.12516975402832
    5. ')]' → logprob: -15.62516975402832
    6. '               ' → logprob: -15.87516975402832
    7. ']
' → logprob: -16.87516975402832
    8. ']]' → logprob: -17.12516975402832
    9. '           ' → logprob: -17.37516975402832
    10. ']>' → logprob: -17.37516975402832

Token 392: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019710339256562293
    2. '<|end|>' → logprob: -9.500197410583496
    3. '                
' → logprob: -9.875197410583496
    4. '                ' → logprob: -10.750197410583496
    5. '
' → logprob: -11.500197410583496
    6. ' if' → logprob: -11.750197410583496
    7. '           ' → logprob: -11.875197410583496
    8. '                   ' → logprob: -12.000197410583496
    9. '              ' → logprob: -12.375197410583496
    10. '<|end|>' → logprob: -13.000197410583496

Token 393: ' dist' (ID: 3601)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6168254017829895
    2. ' if' → logprob: -1.2418253421783447
    3. ' dist' → logprob: -2.3668253421783447
    4. 'dist' (adapté à ' dist') → logprob: -2.7418253421783447
    5. 'if' → logprob: -4.741825580596924
    6. ' 
' → logprob: -6.366825580596924
    7. '                ' → logprob: -6.866825580596924
    8. '                
' → logprob: -7.116825580596924
    9. ' ' → logprob: -8.866825103759766
    10. '                   ' → logprob: -9.241825103759766

Token 394: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.438573680294212e-06
    2. '[I' → logprob: -12.750005722045898
    3. '[' → logprob: -13.125005722045898
    4. '[
' → logprob: -15.250005722045898
    5. ' [' → logprob: -17.0000057220459
    6. '\[' → logprob: -17.1250057220459
    7. '[j' → logprob: -17.3750057220459
    8. '][' → logprob: -17.8750057220459
    9. '[u' → logprob: -18.1250057220459
    10. '[int' → logprob: -18.6250057220459

Token 395: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00012630375567823648
    2. ']' → logprob: -9.875125885009766
    3. '[j' → logprob: -10.250125885009766
    4. '[' → logprob: -10.875125885009766
    5. ' ][' → logprob: -11.000125885009766
    6. '[i' → logprob: -13.375125885009766
    7. ']][' → logprob: -14.500125885009766
    8. '][]' → logprob: -15.125125885009766
    9. '][_' → logprob: -15.750125885009766
    10. '       ' → logprob: -16.125125885009766

Token 396: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.696889623621246e-06
    2. ' j' → logprob: -12.87500286102295
    3. '[j' → logprob: -17.125001907348633
    4. '
' → logprob: -17.250001907348633
    5. '	j' → logprob: -17.750001907348633
    6. ']' → logprob: -18.000001907348633
    7. '```' → logprob: -18.875001907348633
    8. '           ' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '$j' → logprob: -19.500001907348633

Token 397: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3432161509990692
    2. ' =' → logprob: -1.3432161808013916
    3. ']' → logprob: -3.8432161808013916
    4. ']=' → logprob: -4.8432159423828125
    5. ' ]' → logprob: -8.718215942382812
    6. ')' → logprob: -10.968215942382812
    7. ')=' → logprob: -11.093215942382812
    8. ']==' → logprob: -14.093215942382812
    9. '==' → logprob: -14.218215942382812
    10. ' =)' → logprob: -14.218215942382812

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602245420217514
    2. ' =' → logprob: -1.9102245569229126
    3. '=d' → logprob: -15.410224914550781
    4. '=int' → logprob: -16.28522491455078
    5. '＝' → logprob: -17.03522491455078
    6. ' =
' → logprob: -17.66022491455078
    7. ',' → logprob: -18.16022491455078
    8. '=

' → logprob: -18.16022491455078
    9. '=
' → logprob: -18.53522491455078
    10. '.=' → logprob: -18.66022491455078

Token 399: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01416350994259119
    2. ' d' → logprob: -4.264163494110107
    3. '	d' → logprob: -20.139163970947266
    4. ' ' → logprob: -20.514163970947266
    5. '
' → logprob: -21.014163970947266
    6. ' ' → logprob: -21.639163970947266
    7. ')d' → logprob: -21.639163970947266
    8. '_d' → logprob: -22.264163970947266
    9. '"d' → logprob: -23.014163970947266
    10. '               ' → logprob: -23.014163970947266

Token 400: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00026419671485200524
    2. '
' → logprob: -8.750264167785645
    3. '<|end|>' → logprob: -9.875264167785645
    4. '			' → logprob: -11.125264167785645
    5. '		       ' → logprob: -11.125264167785645
    6. '                
' → logprob: -12.000264167785645
    7. '	           ' → logprob: -12.625264167785645
    8. ' if' → logprob: -13.125264167785645
    9. '                ' → logprob: -13.375264167785645
    10. '                   ' → logprob: -13.500264167785645

Token 401: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009943190030753613
    2. '<|end|>' → logprob: -4.884943008422852
    3. '                
' → logprob: -6.884943008422852
    4. '                ' → logprob: -7.509943008422852
    5. '
' → logprob: -9.009943008422852
    6. '\n' → logprob: -9.134943008422852
    7. '  
' → logprob: -9.259943008422852
    8. ' if' → logprob: -9.384943008422852
    9. '                   ' → logprob: -9.884943008422852
    10. '           ' → logprob: -10.009943008422852

Token 402: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16262657940387726
    2. '               ' → logprob: -1.9126266241073608
    3. ' if' → logprob: -6.03762674331665
    4. '
' → logprob: -12.537626266479492
    5. '           ' → logprob: -12.662626266479492
    6. '                   ' → logprob: -13.162626266479492
    7. '	if' → logprob: -13.662626266479492
    8. 'If' → logprob: -13.912626266479492
    9. ';if' → logprob: -14.787626266479492
    10. ' ' → logprob: -15.287626266479492

Token 403: ' i' (ID: 575)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2296629548072815
    2. ' d' → logprob: -1.6046628952026367
    3. ' i' → logprob: -6.104662895202637
    4. 'i' → logprob: -6.354662895202637
    5. 'dist' → logprob: -9.604662895202637
    6. ' dist' → logprob: -9.854662895202637
    7. 'j' → logprob: -9.979662895202637
    8. ' j' → logprob: -10.354662895202637
    9. ' (' → logprob: -11.229662895202637
    10. '(i' → logprob: -11.229662895202637

Token 404: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.42977797985076904
    2. '!=' → logprob: -1.179777979850769
    3. '==' → logprob: -3.8047780990600586
    4. ' ==' → logprob: -3.9297780990600586
    5. ' ' → logprob: -10.554778099060059
    6. '=' → logprob: -11.054778099060059
    7. '<|end|>' → logprob: -11.679778099060059
    8. ']!=' → logprob: -11.929778099060059
    9. '[' → logprob: -12.554778099060059
    10. '][' → logprob: -12.679778099060059

Token 405: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004882152716163546
    2. ' j' → logprob: -7.62548828125
    3. ' ' → logprob: -16.37548828125
    4. '	j' → logprob: -16.75048828125
    5. '0' → logprob: -17.12548828125
    6. 'i' → logprob: -17.50048828125
    7. '   ' → logprob: -18.37548828125
    8. '
' → logprob: -20.00048828125
    9. '    ' → logprob: -20.37548828125
    10. ' ' → logprob: -20.50048828125

Token 406: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02975395694375038
    2. 'and' → logprob: -3.5297539234161377
    3. '               ' → logprob: -13.904753684997559
    4. '                   ' → logprob: -14.154753684997559
    5. '	and' → logprob: -14.279753684997559
    6. '           ' → logprob: -14.529753684997559
    7. ' ' → logprob: -15.029753684997559
    8. '                       ' → logprob: -15.779753684997559
    9. '            ' → logprob: -16.779754638671875
    10. '                ' → logprob: -16.904754638671875

Token 407: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03806169703602791
    2. ' d' → logprob: -3.2880616188049316
    3. 'dist' → logprob: -11.91306209564209
    4. ' dist' → logprob: -12.03806209564209
    5. '(d' → logprob: -13.03806209564209
    6. '	d' → logprob: -13.41306209564209
    7. '   ' → logprob: -14.03806209564209
    8. '                   ' → logprob: -14.03806209564209
    9. '               ' → logprob: -14.78806209564209
    10. ' ' → logprob: -15.28806209564209

Token 408: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.024240002036094666
    2. '==' → logprob: -3.899240016937256
    3. '==-' → logprob: -5.649240016937256
    4. ' ' → logprob: -9.274239540100098
    5. ' <' → logprob: -10.274239540100098
    6. '<' → logprob: -10.274239540100098
    7. ' -' → logprob: -12.774239540100098
    8. '   ' → logprob: -14.024239540100098
    9. ')==' → logprob: -14.024239540100098
    10. ']==' → logprob: -14.274239540100098

Token 409: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012356207298580557
    2. ' -' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.750123977661133
    4. '                   ' → logprob: -17.375123977661133
    5. '               ' → logprob: -19.125123977661133
    6. '           ' → logprob: -19.250123977661133
    7. ' ' → logprob: -19.750123977661133
    8. '```' → logprob: -20.000123977661133
    9. '  ' → logprob: -20.500123977661133
    10. '	' → logprob: -20.750123977661133

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.875001907348633
    3. '
' → logprob: -15.187501907348633
    4. '```' → logprob: -15.312501907348633
    5. '<|end|>' → logprob: -15.937501907348633
    6. ',' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '

' → logprob: -17.937501907348633
    9. '-' → logprob: -18.125001907348633
    10. '`' → logprob: -18.187501907348633

Token 411: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7223113179206848
    2. ':
' → logprob: -0.7223113179206848
    3. '                   ' → logprob: -3.59731125831604
    4. '                       ' → logprob: -7.222311496734619
    5. '               ' → logprob: -7.847311496734619
    6. '                           ' → logprob: -9.222311019897461
    7. '           ' → logprob: -10.222311019897461
    8. '):
' → logprob: -10.222311019897461
    9. ':

' → logprob: -11.847311019897461
    10. ':
' → logprob: -11.972311019897461

Token 412: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0029573773499578238
    2. ' possible' → logprob: -6.252957344055176
    3. 'possible' → logprob: -7.127957344055176
    4. '   ' → logprob: -9.252957344055176
    5. '           ' → logprob: -10.127957344055176
    6. '
' → logprob: -10.252957344055176
    7. '                       ' → logprob: -10.377957344055176
    8. '               ' → logprob: -11.627957344055176
    9. '                    
' → logprob: -11.752957344055176
    10. '    
' → logprob: -13.002957344055176

Token 413: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.007816236466169357
    2. ' possible' → logprob: -5.257816314697266
    3. '                   ' → logprob: -6.007816314697266
    4. '   ' → logprob: -9.757816314697266
    5. '       ' → logprob: -10.882816314697266
    6. '           ' → logprob: -11.007816314697266
    7. '                       ' → logprob: -11.257816314697266
    8. '
' → logprob: -11.882816314697266
    9. '               ' → logprob: -12.007816314697266
    10. '_possible' → logprob: -15.007816314697266

Token 414: ' No' (ID: 3004)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.014263764023780823
    2. ' possible' → logprob: -4.26426362991333
    3. '                   ' → logprob: -9.264264106750488
    4. '       ' → logprob: -13.389264106750488
    5. '           ' → logprob: -13.514264106750488
    6. '               ' → logprob: -14.014264106750488
    7. '   ' → logprob: -14.389264106750488
    8. '
' → logprob: -14.639264106750488
    9. 'Possible' → logprob: -14.889264106750488
    10. '                       ' → logprob: -15.264264106750488

Token 415: ' path' (ID: 3104)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.395572692155838
    2. 'possible' → logprob: -2.2705726623535156
    3. ' possible' → logprob: -2.3955726623535156
    4. '               ' → logprob: -3.6455726623535156
    5. '       ' → logprob: -3.8955726623535156
    6. ' ' → logprob: -4.395572662353516
    7. '                    
' → logprob: -4.395572662353516
    8. '           ' → logprob: -4.395572662353516
    9. '<|end|>' → logprob: -4.395572662353516
    10. '   ' → logprob: -5.145572662353516

Token 416: ' between' (ID: 2870)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016266029328107834
    2. ' to' → logprob: -5.391265869140625
    3. '                       ' → logprob: -6.016265869140625
    4. '               ' → logprob: -6.391265869140625
    5. '           ' → logprob: -6.516265869140625
    6. 'possible' → logprob: -6.641265869140625
    7. ' possible' → logprob: -6.891265869140625
    8. ',' → logprob: -7.016265869140625
    9. ' exists' → logprob: -7.391265869140625
    10. ' between' → logprob: -8.016265869140625

Token 417: ' dirty' (ID: 32042)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.1558394432067871
    2. 'i' → logprob: -2.030839443206787
    3. ' points' → logprob: -4.405839443206787
    4. ' i' → logprob: -7.155839443206787
    5. 'p' → logprob: -10.155839920043945
    6. 'point' → logprob: -11.530839920043945
    7. 'start' → logprob: -11.655839920043945
    8. 'the' → logprob: -11.780839920043945
    9. '
' → logprob: -12.405839920043945
    10. 'two' → logprob: -12.530839920043945

Token 418: ' tiles' (ID: 33001)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cells' → logprob: -1.729293704032898
    2. 'points' → logprob: -2.1042938232421875
    3. '<|end|>' → logprob: -2.3542938232421875
    4. 'cells' → logprob: -2.4792938232421875
    5. ' spots' → logprob: -2.6042938232421875
    6. ' points' → logprob: -2.6042938232421875
    7. ')' → logprob: -2.7292938232421875
    8. ' cell' → logprob: -2.7292938232421875
    9. ' point' → logprob: -3.2292938232421875
    10. 'cell' → logprob: -3.2292938232421875

Token 419: ' or' (ID: 503)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00154533376917243
    2. ',' → logprob: -7.126545429229736
    3. '                       ' → logprob: -8.501544952392578
    4. '
' → logprob: -8.501544952392578
    5. '           ' → logprob: -9.251544952392578
    6. '               ' → logprob: -9.251544952392578
    7. '                    
' → logprob: -9.876544952392578
    8. ' or' → logprob: -11.251544952392578
    9. 'possible' → logprob: -11.626544952392578
    10. ' possible' → logprob: -11.626544952392578

Token 420: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.036501239985227585
    2. ' start' → logprob: -3.411501169204712
    3. 'the' → logprob: -6.536501407623291
    4. ' the' → logprob: -8.286500930786133
    5. 'possible' → logprob: -8.286500930786133
    6. '#' → logprob: -8.536500930786133
    7. 'starting' → logprob: -8.536500930786133
    8. 'ob' → logprob: -9.536500930786133
    9. 'points' → logprob: -9.786500930786133
    10. 'o' → logprob: -9.786500930786133

Token 421: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012257448397576809
    2. ',' → logprob: -5.5122575759887695
    3. '               ' → logprob: -6.1372575759887695
    4. 'possible' → logprob: -6.3872575759887695
    5. '
' → logprob: -6.5122575759887695
    6. '                       ' → logprob: -7.1372575759887695
    7. '           ' → logprob: -7.2622575759887695
    8. '                    
' → logprob: -7.5122575759887695
    9. ' possible' → logprob: -8.38725757598877
    10. '       ' → logprob: -9.38725757598877

Token 422: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00013798571308143437
    2. '                       ' → logprob: -9.875138282775879
    3. ' possible' → logprob: -10.375138282775879
    4. '           ' → logprob: -11.000138282775879
    5. '               ' → logprob: -11.250138282775879
    6. 'possible' → logprob: -11.750138282775879
    7. '   ' → logprob: -12.375138282775879
    8. '
' → logprob: -12.500138282775879
    9. '                           ' → logprob: -12.875138282775879
    10. '                    
' → logprob: -13.375138282775879

Token 423: ' if' (ID: 538)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0007188651943579316
    2. ' possible' → logprob: -7.25071907043457
    3. '                   ' → logprob: -11.75071907043457
    4. '
' → logprob: -14.25071907043457
    5. '           ' → logprob: -15.62571907043457
    6. '```' → logprob: -16.25071907043457
    7. '               ' → logprob: -17.00071907043457
    8. '_possible' → logprob: -17.12571907043457
    9. '   ' → logprob: -17.50071907043457
    10. '       ' → logprob: -18.25071907043457

Token 424: ' i' (ID: 575)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.2750104069709778
    2. 'i' → logprob: -2.150010347366333
    3. 'j' → logprob: -3.525010347366333
    4. 'not' → logprob: -3.650010347366333
    5. ' possible' → logprob: -3.650010347366333
    6. ' not' → logprob: -4.900010585784912
    7. ' i' → logprob: -5.025010585784912
    8. 'False' → logprob: -5.400010585784912
    9. 'points' → logprob: -5.400010585784912
    10. 'dist' → logprob: -5.525010585784912

Token 425: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6436181664466858
    2. '!=' → logprob: -0.8936181664466858
    3. '==' → logprob: -3.018618106842041
    4. ' ==' → logprob: -4.143618106842041
    5. '   ' → logprob: -9.3936185836792
    6. ']!=' → logprob: -9.3936185836792
    7. ' <' → logprob: -9.5186185836792
    8. '<' → logprob: -9.5186185836792
    9. ' ' → logprob: -9.8936185836792
    10. '!' → logprob: -10.5186185836792

Token 426: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01209928933531046
    2. 'j' → logprob: -4.512099266052246
    3. ' ' → logprob: -7.137099266052246
    4. 'start' → logprob: -8.887099266052246
    5. 'n' → logprob: -9.762099266052246
    6. '1' → logprob: -10.887099266052246
    7. ' j' → logprob: -11.012099266052246
    8. '
' → logprob: -11.887099266052246
    9. 'len' → logprob: -12.137099266052246
    10. '   ' → logprob: -13.012099266052246

Token 427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011210747994482517
    2. 'j' → logprob: -4.511210918426514
    3. ' ' → logprob: -8.886210441589355
    4. 'n' → logprob: -11.136210441589355
    5. ' j' → logprob: -12.511210441589355
    6. 'start' → logprob: -13.448710441589355
    7. '   ' → logprob: -13.761210441589355
    8. '1' → logprob: -14.011210441589355
    9. 'len' → logprob: -14.261210441589355
    10. 'i' → logprob: -14.761210441589355

Token 428: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13024871051311493
    2. 'and' → logprob: -2.505248785018921
    3. ' or' → logprob: -3.255248785018921
    4. ':
' → logprob: -7.255248546600342
    5. ':' → logprob: -7.380248546600342
    6. 'or' → logprob: -8.2552490234375
    7. '                           ' → logprob: -9.0052490234375
    8. '                       ' → logprob: -9.6302490234375
    9. '                   ' → logprob: -10.1302490234375
    10. '           ' → logprob: -10.6302490234375

Token 429: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012085512280464172
    2. ' j' → logprob: -4.512085437774658
    3. '   ' → logprob: -8.137085914611816
    4. '                   ' → logprob: -8.512085914611816
    5. 'i' → logprob: -8.762085914611816
    6. '    ' → logprob: -10.137085914611816
    7. '	j' → logprob: -10.137085914611816
    8. 'points' → logprob: -10.262085914611816
    9. 'dist' → logprob: -10.387085914611816
    10. '1' → logprob: -10.637085914611816

Token 430: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14357437193393707
    2. '==' → logprob: -2.1435744762420654
    3. ' !=' → logprob: -4.143574237823486
    4. '!=' → logprob: -8.268574714660645
    5. '<|end|>' → logprob: -8.393574714660645
    6. ' ' → logprob: -9.268574714660645
    7. '<|end|>' → logprob: -10.518574714660645
    8. ']==' → logprob: -11.768574714660645
    9. ')==' → logprob: -12.518574714660645
    10. '0' → logprob: -12.518574714660645

Token 431: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023262249305844307
    2. ' ' → logprob: -3.7732622623443604
    3. 'n' → logprob: -11.898262023925781
    4. ' n' → logprob: -12.460762023925781
    5. '   ' → logprob: -13.710762023925781
    6. 'i' → logprob: -14.210762023925781
    7. '  ' → logprob: -14.460762023925781
    8. '1' → logprob: -14.585762023925781
    9. '=' → logprob: -14.898262023925781
    10. ' i' → logprob: -15.523262023925781

Token 432: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002189045073464513
    2. ' ' → logprob: -6.1271891593933105
    3. 'i' → logprob: -13.127188682556152
    4. '   ' → logprob: -14.877188682556152
    5. 'n' → logprob: -15.189688682556152
    6. ' i' → logprob: -15.252188682556152
    7. '  ' → logprob: -15.502188682556152
    8. '=' → logprob: -16.56468963623047
    9. '>' → logprob: -16.81468963623047
    10. '
' → logprob: -16.93968963623047

Token 433: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34186574816703796
    2. ':
' → logprob: -1.3418657779693604
    3. '                       ' → logprob: -3.7168657779693604
    4. '                   ' → logprob: -6.091865539550781
    5. ' and' → logprob: -6.966865539550781
    6. '                           ' → logprob: -8.591865539550781
    7. '):
' → logprob: -9.091865539550781
    8. ' or' → logprob: -9.216865539550781
    9. ',' → logprob: -10.091865539550781
    10. '               ' → logprob: -10.091865539550781

Token 434: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1035559177398682
    2. 'True' → logprob: -1.2285559177398682
    3. 'grid' → logprob: -2.603555917739868
    4. 'dist' → logprob: -2.728555917739868
    5. 'i' → logprob: -2.978555917739868
    6. 'points' → logprob: -3.228555917739868
    7. 'd' → logprob: -3.478555917739868
    8. 'any' → logprob: -3.728555917739868
    9. 'len' → logprob: -3.728555917739868
    10. '1' → logprob: -4.853555679321289

Token 435: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42098468542099
    2. 'dist' → logprob: -1.9209847450256348
    3. 'points' → logprob: -2.6709847450256348
    4. 'j' → logprob: -3.0459847450256348
    5. 'True' → logprob: -4.045984745025635
    6. 'grid' → logprob: -4.295984745025635
    7. '(i' → logprob: -4.545984745025635
    8. 'False' → logprob: -4.795984745025635
    9. 'd' → logprob: -4.920984745025635
    10. '1' → logprob: -5.170984745025635

Token 436: ' >' (ID: 1424)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.03632456809282303
    2. '!=' → logprob: -3.4113245010375977
    3. ' ==' → logprob: -6.536324501037598
    4. '<|end|>' → logprob: -8.036324501037598
    5. '==' → logprob: -8.161324501037598
    6. ' >' → logprob: -8.786324501037598
    7. ')' → logprob: -9.661324501037598
    8. ',' → logprob: -9.661324501037598
    9. ' <' → logprob: -9.661324501037598
    10. ' ' → logprob: -9.911324501037598

Token 437: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006301311310380697
    2. ' ' → logprob: -5.131301403045654
    3. '=' → logprob: -8.506300926208496
    4. '   ' → logprob: -9.881300926208496
    5. '1' → logprob: -10.256300926208496
    6. 'n' → logprob: -10.881300926208496
    7. '           ' → logprob: -11.381300926208496
    8. 'j' → logprob: -11.756300926208496
    9. '                   ' → logprob: -12.193800926208496
    10. '  ' → logprob: -12.256300926208496

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008383385138586164
    2. ' ' → logprob: -7.125838279724121
    3. '   ' → logprob: -11.875838279724121
    4. '=' → logprob: -11.875838279724121
    5. 'n' → logprob: -11.875838279724121
    6. '1' → logprob: -12.000838279724121
    7. 'j' → logprob: -13.250838279724121
    8. '
' → logprob: -14.000838279724121
    9. 'i' → logprob: -14.438338279724121
    10. '  ' → logprob: -14.500838279724121

Token 439: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07903233170509338
    2. 'and' → logprob: -2.5790324211120605
    3. ' or' → logprob: -10.204031944274902
    4. ' ' → logprob: -10.329031944274902
    5. ')' → logprob: -10.704031944274902
    6. '   ' → logprob: -11.079031944274902
    7. '    ' → logprob: -11.954031944274902
    8. '           ' → logprob: -12.204031944274902
    9. '  ' → logprob: -12.579031944274902
    10. '       ' → logprob: -12.704031944274902

Token 440: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007660346571356058
    2. ' j' → logprob: -4.882660388946533
    3. '   ' → logprob: -11.132659912109375
    4. ' ' → logprob: -12.132659912109375
    5. 'i' → logprob: -12.132659912109375
    6. '  ' → logprob: -12.257659912109375
    7. 'dist' → logprob: -12.257659912109375
    8. '    ' → logprob: -12.757659912109375
    9. '0' → logprob: -13.132659912109375
    10. '(j' → logprob: -13.632659912109375

Token 441: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04325585439801216
    2. '>' → logprob: -3.1682558059692383
    3. ')' → logprob: -8.918255805969238
    4. ' !=' → logprob: -9.168255805969238
    5. ' ' → logprob: -12.043255805969238
    6. '!=' → logprob: -12.793255805969238
    7. ')>' → logprob: -13.043255805969238
    8. ' ==' → logprob: -13.418255805969238
    9. '   ' → logprob: -13.668255805969238
    10. ' >
' → logprob: -13.918255805969238

Token 442: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009799649938941002
    2. ' ' → logprob: -4.634799480438232
    3. '                   ' → logprob: -11.00979995727539
    4. '   ' → logprob: -11.25979995727539
    5. '  ' → logprob: -12.75979995727539
    6. '               ' → logprob: -13.00979995727539
    7. 'i' → logprob: -13.13479995727539
    8. ')' → logprob: -13.75979995727539
    9. '                    ' → logprob: -14.38479995727539
    10. '>' → logprob: -14.44729995727539

Token 443: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009284949628636241
    2. ' ' → logprob: -7.0009284019470215
    3. 'i' → logprob: -11.75092887878418
    4. '   ' → logprob: -12.75092887878418
    5. ')' → logprob: -13.50092887878418
    6. '  ' → logprob: -14.31342887878418
    7. '=' → logprob: -14.50092887878418
    8. '```' → logprob: -14.50092887878418
    9. '>' → logprob: -14.87592887878418
    10. 'j' → logprob: -14.87592887878418

Token 444: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1626184731721878
    2. '):
' → logprob: -2.412618398666382
    3. 'and' → logprob: -3.287618398666382
    4. '):' → logprob: -4.162618637084961
    5. ')' → logprob: -5.287618637084961
    6. '                   ' → logprob: -6.787618637084961
    7. '                       ' → logprob: -7.287618637084961
    8. ' ):
' → logprob: -8.412618637084961
    9. '                           ' → logprob: -8.912618637084961
    10. ':' → logprob: -10.037618637084961

Token 445: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.35187965631484985
    2. '                   ' → logprob: -1.226879596710205
    3. ' possible' → logprob: -7.601879596710205
    4. '
' → logprob: -7.726879596710205
    5. '                        
' → logprob: -7.726879596710205
    6. '                    
' → logprob: -7.976879596710205
    7. 'possible' → logprob: -7.976879596710205
    8. ':
' → logprob: -8.351880073547363
    9. ',' → logprob: -8.601880073547363
    10. '               ' → logprob: -8.976880073547363

Token 446: ' if' (ID: 538)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.10846292972564697
    2. '                   ' → logprob: -2.6084628105163574
    3. ' possible' → logprob: -3.9834628105163574
    4. '                       ' → logprob: -5.233462810516357
    5. '           ' → logprob: -5.983462810516357
    6. '   ' → logprob: -6.358462810516357
    7. '               ' → logprob: -7.858462810516357
    8. '                           ' → logprob: -8.108463287353516
    9. '       ' → logprob: -8.483463287353516
    10. ' ' → logprob: -11.733463287353516

Token 447: ' i' (ID: 575)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.2004404067993164
    2. 'False' → logprob: -1.3254404067993164
    3. 'd' → logprob: -1.9504404067993164
    4. 'True' → logprob: -2.3254404067993164
    5. 'not' → logprob: -2.4504404067993164
    6. 'dist' → logprob: -2.5754404067993164
    7. 'i' → logprob: -4.450440406799316
    8. ' not' → logprob: -5.575440406799316
    9. ' False' → logprob: -6.200440406799316
    10. ' possible' → logprob: -6.325440406799316

Token 448: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0923994779586792
    2. '!=' → logprob: -2.8423995971679688
    3. ' ==' → logprob: -3.8423995971679688
    4. '==' → logprob: -4.967399597167969
    5. ' >' → logprob: -7.217399597167969
    6. ' ' → logprob: -8.342399597167969
    7. '<|end|>' → logprob: -8.342399597167969
    8. ' <' → logprob: -9.342399597167969
    9. ' <=' → logprob: -10.092399597167969
    10. '0' → logprob: -10.217399597167969

Token 449: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02972954884171486
    2. ' ' → logprob: -3.6547296047210693
    3. 'j' → logprob: -5.77972936630249
    4. ' j' → logprob: -8.279729843139648
    5. '1' → logprob: -10.529729843139648
    6. '
' → logprob: -11.467229843139648
    7. '   ' → logprob: -11.779729843139648
    8. 'n' → logprob: -12.467229843139648
    9. '=' → logprob: -12.467229843139648
    10. '  ' → logprob: -12.654729843139648

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007360986899584532
    2. ' ' → logprob: -5.007360935211182
    3. 'j' → logprob: -7.382360935211182
    4. ' j' → logprob: -11.13236141204834
    5. '1' → logprob: -12.50736141204834
    6. '
' → logprob: -13.88236141204834
    7. 'i' → logprob: -14.38236141204834
    8. '  ' → logprob: -14.69486141204834
    9. 'n' → logprob: -14.69486141204834
    10. '   ' → logprob: -15.06986141204834

Token 451: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06152849271893501
    2. ' and' → logprob: -2.936528444290161
    3. 'or' → logprob: -5.56152868270874
    4. 'and' → logprob: -6.56152868270874
    5. '                           ' → logprob: -6.81152868270874
    6. ' ' → logprob: -9.436528205871582
    7. '                       ' → logprob: -9.936528205871582
    8. ':' → logprob: -10.311528205871582
    9. '           ' → logprob: -11.061528205871582
    10. '                            ' → logprob: -11.061528205871582

Token 452: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03876857832074165
    2. ' j' → logprob: -3.2887685298919678
    3. '                           ' → logprob: -8.163768768310547
    4. '                       ' → logprob: -8.663768768310547
    5. '                   ' → logprob: -9.538768768310547
    6. 'i' → logprob: -10.413768768310547
    7. '                        ' → logprob: -10.413768768310547
    8. '                            ' → logprob: -10.413768768310547
    9. '                               ' → logprob: -11.288768768310547
    10. '   ' → logprob: -11.663768768310547

Token 453: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1583208292722702
    2. '==' → logprob: -2.158320903778076
    3. ' !=' → logprob: -3.533320903778076
    4. '0' → logprob: -7.283320903778076
    5. '!=' → logprob: -7.533320903778076
    6. ' ' → logprob: -7.908320903778076
    7. ' >' → logprob: -9.783320426940918
    8. '                           ' → logprob: -11.408320426940918
    9. '<|end|>' → logprob: -12.033320426940918
    10. '                       ' → logprob: -12.533320426940918

Token 454: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2254166156053543
    2. ' ' → logprob: -1.600416660308838
    3. '  ' → logprob: -13.85041618347168
    4. '   ' → logprob: -14.03791618347168
    5. '1' → logprob: -15.35041618347168
    6. '    ' → logprob: -15.53791618347168
    7. ' ' → logprob: -15.66291618347168
    8. ')' → logprob: -15.85041618347168
    9. 'n' → logprob: -16.03791618347168
    10. '>' → logprob: -16.10041618347168

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014239625306800008
    2. ' ' → logprob: -8.875142097473145
    3. '   ' → logprob: -14.562642097473145
    4. '```' → logprob: -14.625142097473145
    5. '                   ' → logprob: -15.250142097473145
    6. '  ' → logprob: -15.375142097473145
    7. '<|end|>' → logprob: -15.625142097473145
    8. '>' → logprob: -15.625142097473145
    9. '1' → logprob: -16.50014305114746
    10. '               ' → logprob: -16.75014305114746

Token 456: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7196981906890869
    2. '                           ' → logprob: -1.219698190689087
    3. ':' → logprob: -1.594698190689087
    4. '                       ' → logprob: -4.844697952270508
    5. ' and' → logprob: -5.219697952270508
    6. ' or' → logprob: -7.719697952270508
    7. '                   ' → logprob: -7.969697952270508
    8. '):
' → logprob: -8.469697952270508
    9. ' :
' → logprob: -9.469697952270508
    10. ' :' → logprob: -9.969697952270508

Token 457: ' dist' (ID: 3601)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.7491441965103149
    2. 'True' → logprob: -1.124144196510315
    3. 'i' → logprob: -2.1241440773010254
    4. ' True' → logprob: -3.8741440773010254
    5. ' False' → logprob: -3.8741440773010254
    6. ' i' → logprob: -4.874144077301025
    7. 'd' → logprob: -4.999144077301025
    8. 'j' → logprob: -5.624144077301025
    9. '(i' → logprob: -5.624144077301025
    10. '(True' → logprob: -5.749144077301025

Token 458: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013764221221208572
    2. '[j' → logprob: -6.751376628875732
    3. '[' → logprob: -9.626376152038574
    4. 'i' → logprob: -10.001376152038574
    5. '_map' → logprob: -10.251376152038574
    6. 'd' → logprob: -10.751376152038574
    7. 'dist' → logprob: -11.876376152038574
    8. '[d' → logprob: -12.126376152038574
    9. 'Map' → logprob: -12.626376152038574
    10. '
' → logprob: -12.876376152038574

Token 459: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.13188676536083221
    2. '[i' → logprob: -2.3818867206573486
    3. '][' → logprob: -3.7568867206573486
    4. '[' → logprob: -5.256886959075928
    5. 'j' → logprob: -6.881886959075928
    6. 'i' → logprob: -7.506886959075928
    7. ']' → logprob: -8.13188648223877
    8. '```' → logprob: -8.38188648223877
    9. ']==' → logprob: -9.88188648223877
    10. '[
' → logprob: -10.13188648223877

Token 460: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001992490579141304
    2. 'i' → logprob: -9.000199317932129
    3. '[j' → logprob: -10.375199317932129
    4. ' j' → logprob: -11.000199317932129
    5. '
' → logprob: -11.625199317932129
    6. '0' → logprob: -12.250199317932129
    7. '```' → logprob: -12.875199317932129
    8. ']' → logprob: -13.125199317932129
    9. '][' → logprob: -13.125199317932129
    10. '   ' → logprob: -13.375199317932129

Token 461: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7149989008903503
    2. ' ==' → logprob: -1.3399989604949951
    3. ']' → logprob: -1.9649989604949951
    4. ']==' → logprob: -2.589998960494995
    5. '==-' → logprob: -3.589998960494995
    6. '[' → logprob: -5.589998722076416
    7. '[i' → logprob: -7.339998722076416
    8. '!=' → logprob: -8.089999198913574
    9. '[j' → logprob: -8.214999198913574
    10. '][' → logprob: -8.839999198913574

Token 462: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2666763663291931
    2. ' ==' → logprob: -1.516676425933838
    3. '==-' → logprob: -4.266676425933838
    4. ' is' → logprob: -9.39167594909668
    5. ']==' → logprob: -9.51667594909668
    6. '==
' → logprob: -9.64167594909668
    7. '!=' → logprob: -10.01667594909668
    8. '                   ' → logprob: -10.01667594909668
    9. ')==' → logprob: -10.39167594909668
    10. '```' → logprob: -10.39167594909668

Token 463: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002690840628929436
    2. ' -' → logprob: -8.250268936157227
    3. '                   ' → logprob: -13.000268936157227
    4. '   ' → logprob: -13.375268936157227
    5. ' ' → logprob: -13.625268936157227
    6. '```' → logprob: -14.125268936157227
    7. '0' → logprob: -14.750268936157227
    8. '           ' → logprob: -14.750268936157227
    9. '               ' → logprob: -15.000268936157227
    10. '                       ' → logprob: -15.625268936157227

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7133641196996905e-05
    2. '-' → logprob: -11.25002670288086
    3. '```' → logprob: -12.62502670288086
    4. '2' → logprob: -12.81252670288086
    5. ' ' → logprob: -13.18752670288086
    6. ' -' → logprob: -13.31252670288086
    7. '<|end|>' → logprob: -15.43752670288086
    8. '
' → logprob: -15.62502670288086
    9. '   ' → logprob: -15.62502670288086
    10. '``' → logprob: -15.68752670288086

Token 465: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5799440145492554
    2. ':' → logprob: -0.9549440145492554
    3. '                           ' → logprob: -3.079944133758545
    4. '                       ' → logprob: -4.954944133758545
    5. '                   ' → logprob: -7.079944133758545
    6. '):
' → logprob: -7.704944133758545
    7. '==' → logprob: -8.329943656921387
    8. '):' → logprob: -9.329943656921387
    9. ' and' → logprob: -9.704943656921387
    10. '                            ' → logprob: -9.704943656921387

Token 466: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.29253482818603516
    2. '                       ' → logprob: -2.167534828186035
    3. ':
' → logprob: -2.917534828186035
    4. '                   ' → logprob: -3.167534828186035
    5. '
' → logprob: -3.542534828186035
    6. '   ' → logprob: -6.042534828186035
    7. '                        
' → logprob: -6.167534828186035
    8. ':' → logprob: -6.417534828186035
    9. '    
' → logprob: -6.792534828186035
    10. '\n' → logprob: -7.042534828186035

Token 467: ' #' (ID: 1069)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.0899488925933838
    2. 'possible' → logprob: -1.2149488925933838
    3. '                               ' → logprob: -2.089948892593384
    4. '                           ' → logprob: -2.339948892593384
    5. '   ' → logprob: -2.964948892593384
    6. '                                   ' → logprob: -3.714948892593384
    7. '                   ' → logprob: -3.714948892593384
    8. '           ' → logprob: -4.089948654174805
    9. '               ' → logprob: -4.339948654174805
    10. '
' → logprob: -4.714948654174805

Token 468: ' If' (ID: 1843)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0010818752925843
    2. ' possible' → logprob: -7.126081943511963
    3. '                   ' → logprob: -9.376081466674805
    4. '                       ' → logprob: -9.626081466674805
    5. 'break' → logprob: -9.751081466674805
    6. 'print' → logprob: -11.001081466674805
    7. '           ' → logprob: -11.126081466674805
    8. '                           ' → logprob: -11.126081466674805
    9. '
' → logprob: -11.751081466674805
    10. '   ' → logprob: -12.126081466674805

Token 469: ' any' (ID: 1062)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.18251614272594452
    2. 'not' → logprob: -2.182516098022461
    3. 'False' → logprob: -3.307516098022461
    4. ' False' → logprob: -4.932516098022461
    5. 'possible' → logprob: -6.057516098022461
    6. 'dist' → logprob: -6.432516098022461
    7. ' possible' → logprob: -6.682516098022461
    8. ' d' → logprob: -6.682516098022461
    9. ' i' → logprob: -6.932516098022461
    10. 'd' → logprob: -7.432516098022461

Token 470: ' dirty' (ID: 32042)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6068717837333679
    2. ' dist' → logprob: -1.7318718433380127
    3. 'd' → logprob: -2.2318718433380127
    4. ' d' → logprob: -2.6068718433380127
    5. ' i' → logprob: -3.3568718433380127
    6. ' not' → logprob: -3.8568718433380127
    7. 'i' → logprob: -4.731871604919434
    8. 'not' → logprob: -5.356871604919434
    9. ' path' → logprob: -5.481871604919434
    10. 'path' → logprob: -6.106871604919434

Token 471: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.27660220861434937
    2. 'tile' → logprob: -1.5266022682189941
    3. '<|end|>' → logprob: -4.401602268218994
    4. ')' → logprob: -5.651602268218994
    5. ' point' → logprob: -6.401602268218994
    6. ' and' → logprob: -6.901602268218994
    7. ' or' → logprob: -7.026602268218994
    8. 'point' → logprob: -7.276602268218994
    9. '_tile' → logprob: -7.651602268218994
    10. '
' → logprob: -7.776602268218994

Token 472: ' not' (ID: 625)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7219916582107544
    2. ' or' → logprob: -1.2219916582107544
    3. 'cannot' → logprob: -2.221991539001465
    4. ' cannot' → logprob: -3.096991539001465
    5. 'is' → logprob: -4.346991539001465
    6. 'or' → logprob: -4.471991539001465
    7. ' has' → logprob: -4.596991539001465
    8. ' can't' → logprob: -5.221991539001465
    9. '                           ' → logprob: -5.471991539001465
    10. ' and' → logprob: -5.971991539001465

Token 473: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.40040668845176697
    2. ' reachable' → logprob: -1.1504067182540894
    3. 'connected' → logprob: -5.150406837463379
    4. ' connected' → logprob: -5.775406837463379
    5. 'found' → logprob: -7.025406837463379
    6. 'accessible' → logprob: -7.150406837463379
    7. ' is' → logprob: -7.400406837463379
    8. '
' → logprob: -7.900406837463379
    9. ' accessible' → logprob: -8.150406837463379
    10. 'visited' → logprob: -8.275406837463379

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38960543274879456
    2. ' from' → logprob: -2.0146055221557617
    3. '                           ' → logprob: -2.8896055221557617
    4. ':
' → logprob: -3.3896055221557617
    5. 'from' → logprob: -3.5146055221557617
    6. '                               ' → logprob: -3.7646055221557617
    7. ' by' → logprob: -3.8896055221557617
    8. ':' → logprob: -4.014605522155762
    9. ' or' → logprob: -6.014605522155762
    10. '                       ' → logprob: -6.139605522155762

Token 475: ' no' (ID: 860)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3284914791584015
    2. '                               ' → logprob: -1.953491449356079
    3. ' possible' → logprob: -2.078491449356079
    4. '                           ' → logprob: -4.828491687774658
    5. '                                   ' → logprob: -6.703491687774658
    6. '                   ' → logprob: -6.703491687774658
    7. '                       ' → logprob: -7.328491687774658
    8. '           ' → logprob: -7.328491687774658
    9. '               ' → logprob: -7.328491687774658
    10. '   ' → logprob: -7.953491687774658

Token 476: ' solution' (ID: 7578)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0867606401443481
    2. '\n' → logprob: -1.8367606401443481
    3. ' 
' → logprob: -2.2117605209350586
    4. ' solution' → logprob: -2.3367605209350586
    5. 'solution' → logprob: -2.8367605209350586
    6. 'return' → logprob: -3.2117605209350586
    7. '<|end|>' → logprob: -3.2117605209350586
    8. ' return' → logprob: -3.9617605209350586
    9. ' ' → logprob: -4.211760520935059
    10. 'print' → logprob: -4.336760520935059

Token 477: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7091978788375854
    2. '                           ' → logprob: -1.3341978788375854
    3. '                       ' → logprob: -2.584197998046875
    4. '                               ' → logprob: -2.834197998046875
    5. ':' → logprob: -3.459197998046875
    6. '\n' → logprob: -4.209197998046875
    7. '.' → logprob: -4.334197998046875
    8. '
' → logprob: -4.834197998046875
    9. '                   ' → logprob: -4.959197998046875
    10. '):
' → logprob: -4.959197998046875

Token 478: '                           ' (ID: 1686)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.2125672847032547
    2. '                           ' → logprob: -1.7125673294067383
    3. ',' → logprob: -5.462567329406738
    4. ':
' → logprob: -6.337567329406738
    5. '                       ' → logprob: -6.587567329406738
    6. '                                   ' → logprob: -6.837567329406738
    7. '                   ' → logprob: -7.087567329406738
    8. '
' → logprob: -7.712567329406738
    9. ':' → logprob: -7.837567329406738
    10. '):
' → logprob: -8.712567329406738

Token 479: ' if' (ID: 538)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.013017749413847923
    2. ' possible' → logprob: -4.763017654418945
    3. '           ' → logprob: -6.638017654418945
    4. '                           ' → logprob: -7.013017654418945
    5. '                   ' → logprob: -7.013017654418945
    6. '                       ' → logprob: -7.638017654418945
    7. '   ' → logprob: -8.013017654418945
    8. '               ' → logprob: -8.638017654418945
    9. '       ' → logprob: -9.013017654418945
    10. '                               ' → logprob: -9.138017654418945

Token 480: ' i' (ID: 575)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5922337174415588
    2. ' not' → logprob: -1.967233657836914
    3. 'False' → logprob: -1.967233657836914
    4. 'd' → logprob: -2.467233657836914
    5. 'dist' → logprob: -3.592233657836914
    6. 'possible' → logprob: -3.842233657836914
    7. ' d' → logprob: -4.717233657836914
    8. 'True' → logprob: -5.092233657836914
    9. ' False' → logprob: -5.342233657836914
    10. 'i' → logprob: -5.717233657836914

Token 481: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3873509466648102
    2. '==' → logprob: -1.1373509168624878
    3. ' !=' → logprob: -8.012351036071777
    4. '!=' → logprob: -10.262351036071777
    5. '<|end|>' → logprob: -10.387351036071777
    6. ' ' → logprob: -10.637351036071777
    7. '0' → logprob: -11.012351036071777
    8. ']==' → logprob: -11.762351036071777
    9. ' >' → logprob: -12.137351036071777
    10. ')==' → logprob: -12.137351036071777

Token 482: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018217843025922775
    2. ' ' → logprob: -4.018218040466309
    3. 'j' → logprob: -10.268218040466309
    4. '1' → logprob: -11.018218040466309
    5. ' j' → logprob: -12.393218040466309
    6. 'i' → logprob: -12.768218040466309
    7. 'n' → logprob: -13.268218040466309
    8. '   ' → logprob: -13.643218040466309
    9. '
' → logprob: -13.705718040466309
    10. '  ' → logprob: -13.768218040466309

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002128137508407235
    2. ' ' → logprob: -6.2521281242370605
    3. 'j' → logprob: -8.627128601074219
    4. '1' → logprob: -11.877128601074219
    5. 'n' → logprob: -12.627128601074219
    6. ' j' → logprob: -13.064628601074219
    7. '-' → logprob: -13.564628601074219
    8. 'i' → logprob: -13.627128601074219
    9. '=' → logprob: -14.127128601074219
    10. 'len' → logprob: -14.627128601074219

Token 484: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03721601888537407
    2. 'or' → logprob: -3.9122159481048584
    3. ' and' → logprob: -4.2872161865234375
    4. 'and' → logprob: -5.9122161865234375
    5. '<|end|>' → logprob: -10.162216186523438
    6. ' ' → logprob: -10.662216186523438
    7. ')' → logprob: -12.037216186523438
    8. '                           ' → logprob: -12.162216186523438
    9. '               ' → logprob: -12.912216186523438
    10. '	or' → logprob: -13.537216186523438

Token 485: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08914808928966522
    2. ' j' → logprob: -2.4641480445861816
    3. '                   ' → logprob: -10.08914852142334
    4. '                           ' → logprob: -10.08914852142334
    5. 'True' → logprob: -11.08914852142334
    6. 'i' → logprob: -11.21414852142334
    7. '                       ' → logprob: -11.71414852142334
    8. '   ' → logprob: -11.96414852142334
    9. '           ' → logprob: -12.08914852142334
    10. '```' → logprob: -12.21414852142334

Token 486: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28292402625083923
    2. '==' → logprob: -1.4079240560531616
    3. ' !=' → logprob: -6.782924175262451
    4. ' ' → logprob: -8.532923698425293
    5. '0' → logprob: -8.657923698425293
    6. '!=' → logprob: -9.032923698425293
    7. ']==' → logprob: -9.907923698425293
    8. ' or' → logprob: -10.532923698425293
    9. '<|end|>' → logprob: -10.532923698425293
    10. '[' → logprob: -11.657923698425293

Token 487: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013307139743119478
    2. ' ' → logprob: -6.626330852508545
    3. '   ' → logprob: -14.313830375671387
    4. '  ' → logprob: -14.376330375671387
    5. '
' → logprob: -14.688830375671387
    6. '```' → logprob: -15.126330375671387
    7. 'j' → logprob: -15.376330375671387
    8. '    ' → logprob: -15.563830375671387
    9. ')' → logprob: -15.626330375671387
    10. '`' → logprob: -15.688830375671387

Token 488: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009163398644886911
    2. ' ' → logprob: -7.000916481018066
    3. '   ' → logprob: -13.938416481018066
    4. '  ' → logprob: -14.688416481018066
    5. '
' → logprob: -15.063416481018066
    6. '-' → logprob: -15.063416481018066
    7. 'n' → logprob: -15.188416481018066
    8. '```' → logprob: -15.188416481018066
    9. ' -' → logprob: -15.188416481018066
    10. ')' → logprob: -15.625916481018066

Token 489: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2512857913970947
    2. ' and' → logprob: -2.0012857913970947
    3. ':
' → logprob: -2.8762857913970947
    4. ' or' → logprob: -4.376285552978516
    5. '                           ' → logprob: -4.751285552978516
    6. '                               ' → logprob: -6.001285552978516
    7. '                       ' → logprob: -6.126285552978516
    8. 'and' → logprob: -6.251285552978516
    9. '<|end|>' → logprob: -7.001285552978516
    10. ')' → logprob: -7.251285552978516

Token 490: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5023137927055359
    2. ':' → logprob: -1.3773138523101807
    3. '                           ' → logprob: -2.7523138523101807
    4. ':
' → logprob: -2.8773138523101807
    5. '                       ' → logprob: -4.002313613891602
    6. ' and' → logprob: -7.502313613891602
    7. '<|end|>' → logprob: -7.752313613891602
    8. '                              ' → logprob: -7.877313613891602
    9. '                   ' → logprob: -8.127313613891602
    10. '                                   ' → logprob: -8.127313613891602

Token 491: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.22249428927898407
    2. '                   ' → logprob: -2.84749436378479
    3. '                               ' → logprob: -2.97249436378479
    4. '                           ' → logprob: -3.59749436378479
    5. '                       ' → logprob: -3.84749436378479
    6. ' possible' → logprob: -3.97249436378479
    7. '           ' → logprob: -4.722494125366211
    8. '                                   ' → logprob: -5.097494125366211
    9. '   ' → logprob: -5.847494125366211
    10. '               ' → logprob: -6.097494125366211

Token 492: ' From' (ID: 7217)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.07307909429073334
    2. 'print' → logprob: -3.0730791091918945
    3. ' possible' → logprob: -3.8230791091918945
    4. 'return' → logprob: -6.8230791091918945
    5. '                   ' → logprob: -7.0730791091918945
    6. ' print' → logprob: -8.698079109191895
    7. '                       ' → logprob: -9.698079109191895
    8. ' return' → logprob: -10.198079109191895
    9. '                           ' → logprob: -10.448079109191895
    10. 'Possible' → logprob: -10.573079109191895

Token 493: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1958368569612503
    2. ' start' → logprob: -2.6958367824554443
    3. 'i' → logprob: -3.6958367824554443
    4. 'dist' → logprob: -3.6958367824554443
    5. 'not' → logprob: -4.070837020874023
    6. ' not' → logprob: -4.320837020874023
    7. 'points' → logprob: -4.945837020874023
    8. 'False' → logprob: -5.320837020874023
    9. 'dirty' → logprob: -5.695837020874023
    10. '0' → logprob: -6.195837020874023

Token 494: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5634552836418152
    2. ' or' → logprob: -0.9384552836418152
    3. '                               ' → logprob: -4.313455104827881
    4. '                           ' → logprob: -4.563455104827881
    5. ',' → logprob: -5.688455104827881
    6. ')' → logprob: -5.938455104827881
    7. '                   ' → logprob: -6.188455104827881
    8. 'to' → logprob: -6.313455104827881
    9. ':' → logprob: -6.438455104827881
    10. ' and' → logprob: -7.063455104827881

Token 495: ' dirty' (ID: 32042)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.4359622001647949
    2. 'dirty' → logprob: -1.060962200164795
    3. 'some' → logprob: -6.185962200164795
    4. ' any' → logprob: -6.185962200164795
    5. ' dirty' → logprob: -6.685962200164795
    6. 'a' → logprob: -6.685962200164795
    7. 'all' → logprob: -9.185962677001953
    8. 'i' → logprob: -9.435962677001953
    9. 'Any' → logprob: -9.810962677001953
    10. 'clean' → logprob: -9.935962677001953

Token 496: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.3089626431465149
    2. ' or' → logprob: -1.9339625835418701
    3. 'tile' → logprob: -2.30896258354187
    4. ')' → logprob: -4.433962821960449
    5. ' point' → logprob: -5.933962821960449
    6. '<|end|>' → logprob: -5.933962821960449
    7. ' and' → logprob: -6.683962821960449
    8. ' tiles' → logprob: -7.558962821960449
    9. '(tile' → logprob: -8.05896282196045
    10. 'or' → logprob: -8.18396282196045

Token 497: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27437400817871094
    2. '                           ' → logprob: -2.524374008178711
    3. '                               ' → logprob: -2.774374008178711
    4. ' or' → logprob: -3.274374008178711
    5. ')' → logprob: -4.149374008178711
    6. ':
' → logprob: -4.149374008178711
    7. ' and' → logprob: -5.149374008178711
    8. '<|end|>' → logprob: -5.399374008178711
    9. '):' → logprob: -6.024374008178711
    10. '                   ' → logprob: -6.149374008178711

Token 498: '                               ' (ID: 2419)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4565674960613251
    2. '                               ' → logprob: -1.8315675258636475
    3. ':' → logprob: -2.0815675258636475
    4. '                           ' → logprob: -3.9565675258636475
    5. ' and' → logprob: -4.331567287445068
    6. '<|end|>' → logprob: -4.456567287445068
    7. '                                   ' → logprob: -4.456567287445068
    8. ':
' → logprob: -4.581567287445068
    9. ')' → logprob: -5.331567287445068
    10. '                   ' → logprob: -6.206567287445068

Token 499: ' if' (ID: 538)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3952605128288269
    2. 'print' → logprob: -1.2702605724334717
    3. 'return' → logprob: -4.270260334014893
    4. ' possible' → logprob: -4.395260334014893
    5. '                               ' → logprob: -4.895260334014893
    6. 'break' → logprob: -5.395260334014893
    7. '                           ' → logprob: -6.270260334014893
    8. '                   ' → logprob: -6.520260334014893
    9. '                                   ' → logprob: -6.895260334014893
    10. ' print' → logprob: -7.145260334014893

Token 500: ' j' (ID: 441)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8338338732719421
    2. 'dist' → logprob: -1.458833932876587
    3. 'False' → logprob: -1.708833932876587
    4. 'True' → logprob: -2.208833932876587
    5. 'i' → logprob: -4.083833694458008
    6. ' d' → logprob: -4.958833694458008
    7. ' dist' → logprob: -5.833833694458008
    8. 'not' → logprob: -5.833833694458008
    9. ' False' → logprob: -5.958833694458008
    10. ' True' → logprob: -5.958833694458008

Token 501: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2534588575363159
    2. ' ==' → logprob: -1.878458857536316
    3. '!=' → logprob: -3.3784589767456055
    4. ' !=' → logprob: -3.7534589767456055
    5. '>' → logprob: -5.2534589767456055
    6. '>=' → logprob: -5.6284589767456055
    7. ')' → logprob: -6.8784589767456055
    8. ' >=' → logprob: -6.8784589767456055
    9. ' >' → logprob: -7.0034589767456055
    10. ']==' → logprob: -7.5034589767456055

Token 502: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001426782924681902
    2. ' ' → logprob: -7.126426696777344
    3. 'i' → logprob: -7.501426696777344
    4. '-' → logprob: -9.876426696777344
    5. ' i' → logprob: -12.251426696777344
    6. ' -' → logprob: -12.626426696777344
    7. 'n' → logprob: -13.001426696777344
    8. '1' → logprob: -13.251426696777344
    9. '   ' → logprob: -13.876426696777344
    10. 'None' → logprob: -14.063926696777344

Token 503: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007362506585195661
    2. 'i' → logprob: -7.750736236572266
    3. ' ' → logprob: -8.125736236572266
    4. '-' → logprob: -12.750736236572266
    5. ' i' → logprob: -13.250736236572266
    6. 'n' → logprob: -13.250736236572266
    7. ' -' → logprob: -14.438236236572266
    8. 'j' → logprob: -15.000736236572266
    9. '=' → logprob: -15.250736236572266
    10. 'None' → logprob: -15.375736236572266

Token 504: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13406513631343842
    2. ' or' → logprob: -2.8840651512145996
    3. ':' → logprob: -3.2590651512145996
    4. 'and' → logprob: -4.2590651512146
    5. '                               ' → logprob: -5.3840651512146
    6. '<|end|>' → logprob: -5.5090651512146
    7. '):' → logprob: -6.0090651512146
    8. '                           ' → logprob: -6.1340651512146
    9. ')' → logprob: -6.7590651512146
    10. ':
' → logprob: -7.1340651512146

Token 505: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22029635310173035
    2. 'd' → logprob: -1.8452963829040527
    3. ' dist' → logprob: -3.8452963829040527
    4. 'True' → logprob: -4.720296382904053
    5. ' d' → logprob: -5.345296382904053
    6. 'i' → logprob: -6.345296382904053
    7. 'not' → logprob: -7.470296382904053
    8. 'False' → logprob: -7.595296382904053
    9. '(dist' → logprob: -7.720296382904053
    10. ' i' → logprob: -8.470295906066895

Token 506: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005557693541049957
    2. '[j' → logprob: -5.380557537078857
    3. '[' → logprob: -7.380557537078857
    4. 'i' → logprob: -8.255558013916016
    5. '```' → logprob: -11.505558013916016
    6. 'j' → logprob: -11.630558013916016
    7. '][' → logprob: -11.880558013916016
    8. '                   ' → logprob: -12.380558013916016
    9. ')[' → logprob: -13.255558013916016
    10. '               ' → logprob: -13.255558013916016

Token 507: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05197841674089432
    2. '[i' → logprob: -3.801978349685669
    3. '[j' → logprob: -3.801978349685669
    4. '[' → logprob: -5.301978588104248
    5. ']' → logprob: -7.676978588104248
    6. ']][' → logprob: -9.05197811126709
    7. ']==' → logprob: -9.17697811126709
    8. ' ][' → logprob: -10.05197811126709
    9. '                   ' → logprob: -10.17697811126709
    10. '               ' → logprob: -10.42697811126709

Token 508: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8074162653647363e-05
    2. ' j' → logprob: -11.375018119812012
    3. 'i' → logprob: -13.625018119812012
    4. '0' → logprob: -13.625018119812012
    5. '][' → logprob: -13.750018119812012
    6. '[j' → logprob: -13.875018119812012
    7. '```' → logprob: -14.000018119812012
    8. ']' → logprob: -14.500018119812012
    9. ' ' → logprob: -15.250018119812012
    10. '[' → logprob: -15.625018119812012

Token 509: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09857810288667679
    2. ']==' → logprob: -2.4735782146453857
    3. ' ==' → logprob: -5.473577976226807
    4. '==' → logprob: -5.473577976226807
    5. ' ]' → logprob: -7.348577976226807
    6. '[' → logprob: -8.348578453063965
    7. '                           ' → logprob: -8.973578453063965
    8. '==-' → logprob: -10.348578453063965
    9. '           ' → logprob: -11.098578453063965
    10. '                   ' → logprob: -11.098578453063965

Token 510: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4814935624599457
    2. ' ==' → logprob: -0.9814935922622681
    3. '==-' → logprob: -4.9814934730529785
    4. ']==' → logprob: -8.606493949890137
    5. '                           ' → logprob: -8.981493949890137
    6. ')==' → logprob: -9.981493949890137
    7. ')' → logprob: -10.356493949890137
    8. ' ' → logprob: -10.606493949890137
    9. '[' → logprob: -10.731493949890137
    10. ']' → logprob: -11.231493949890137

Token 511: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.623244553338736e-05
    2. ' -' → logprob: -9.625065803527832
    3. '                   ' → logprob: -17.00006675720215
    4. '   ' → logprob: -17.12506675720215
    5. '```' → logprob: -17.37506675720215
    6. '           ' → logprob: -18.62506675720215
    7. ' ' → logprob: -18.87506675720215
    8. '               ' → logprob: -19.62506675720215
    9. '`' → logprob: -19.87506675720215
    10. '  ' → logprob: -20.00006675720215

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. '-' → logprob: -13.000008583068848
    3. '```' → logprob: -13.375008583068848
    4. ' ' → logprob: -13.437508583068848
    5. '<|end|>' → logprob: -13.500008583068848
    6. '2' → logprob: -14.875008583068848
    7. '`' → logprob: -15.875008583068848
    8. ' -' → logprob: -16.000009536743164
    9. '>' → logprob: -16.187509536743164
    10. '...' → logprob: -16.312509536743164

Token 513: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021733351051807404
    2. ':
' → logprob: -4.646733283996582
    3. '                               ' → logprob: -5.271733283996582
    4. '):' → logprob: -5.771733283996582
    5. '                           ' → logprob: -6.771733283996582
    6. ' or' → logprob: -6.896733283996582
    7. ')' → logprob: -7.646733283996582
    8. '                                   ' → logprob: -8.146733283996582
    9. '<|end|>' → logprob: -8.646733283996582
    10. ' and' → logprob: -9.021733283996582

Token 514: '                                   ' (ID: 3523)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8536368012428284
    2. '                                   ' → logprob: -1.3536367416381836
    3. '                               ' → logprob: -1.3536367416381836
    4. ':
' → logprob: -3.6036367416381836
    5. '                           ' → logprob: -4.103636741638184
    6. '                                ' → logprob: -5.603636741638184
    7. '                       ' → logprob: -6.228636741638184
    8. '):' → logprob: -6.603636741638184
    9. '                                    ' → logprob: -6.603636741638184
    10. '                   ' → logprob: -6.853636741638184

Token 515: ' possible' (ID: 4149)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.5508884191513062
    2. ' print' → logprob: -1.8008884191513062
    3. 'print' → logprob: -2.1758885383605957
    4. '                               ' → logprob: -2.1758885383605957
    5. ' continue' → logprob: -2.4258885383605957
    6. '                                   ' → logprob: -2.5508885383605957
    7. 'return' → logprob: -2.8008885383605957
    8. 'continue' → logprob: -2.8008885383605957
    9. ' break' → logprob: -3.5508885383605957
    10. ' raise' → logprob: -3.5508885383605957

Token 516: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8357663154602051
    2. '=' → logprob: -1.585766315460205
    3. '                               ' → logprob: -2.210766315460205
    4. ' =' → logprob: -2.585766315460205
    5. ':
' → logprob: -2.960766315460205
    6. '                           ' → logprob: -3.210766315460205
    7. '                       ' → logprob: -3.960766315460205
    8. '                   ' → logprob: -4.710766315460205
    9. '                                   ' → logprob: -4.710766315460205
    10. '               ' → logprob: -4.960766315460205

Token 517: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. '=False' → logprob: -20.37520408630371
    4. 'false' → logprob: -20.50020408630371
    5. '(False' → logprob: -20.87520408630371
    6. 'True' → logprob: -21.12520408630371
    7. 'F' → logprob: -21.75020408630371
    8. '   ' → logprob: -23.12520408630371
    9. '_false' → logprob: -23.50020408630371
    10. '.False' → logprob: -23.50020408630371

Token 518: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: '                           ' (ID: 1686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: ' else' (ID: 1203)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.4592992067337036
    2. '                       ' → logprob: -1.7092992067337036
    3. '<|end|>' → logprob: -1.7092992067337036
    4. ')' → logprob: -2.209299087524414
    5. 'else' (adapté à ' else') → logprob: -2.209299087524414
    6. '                               ' → logprob: -2.834299087524414
    7. '                            ' → logprob: -4.084299087524414
    8. '    ' → logprob: -4.334299087524414
    9. ' else' → logprob: -4.459299087524414
    10. '                        ' → logprob: -4.459299087524414

Token 521: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.01374183688312769
    2. 'if' → logprob: -5.013741970062256
    3. '                           ' → logprob: -5.513741970062256
    4. ' if' → logprob: -6.388741970062256
    5. '                       ' → logprob: -7.388741970062256
    6. '                                   ' → logprob: -8.888741493225098
    7. ':' → logprob: -9.013741493225098
    8. '       ' → logprob: -9.638741493225098
    9. '   ' → logprob: -9.763741493225098
    10. '               ' → logprob: -9.888741493225098

Token 522: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.02833164483308792
    2. '                           ' → logprob: -4.653331756591797
    3. 'possible' → logprob: -5.403331756591797
    4. 'if' → logprob: -5.778331756591797
    5. '                       ' → logprob: -5.903331756591797
    6. '   ' → logprob: -6.153331756591797
    7. '                                   ' → logprob: -6.403331756591797
    8. '                   ' → logprob: -7.153331756591797
    9. '               ' → logprob: -7.153331756591797
    10. '       ' → logprob: -7.153331756591797

Token 523: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.04901321977376938
    2. '                               ' → logprob: -3.799013137817383
    3. 'if' → logprob: -4.424013137817383
    4. '                           ' → logprob: -4.924013137817383
    5. ' possible' → logprob: -5.924013137817383
    6. '                                   ' → logprob: -6.424013137817383
    7. 'pass' → logprob: -7.549013137817383
    8. ' if' → logprob: -7.799013137817383
    9. '                       ' → logprob: -8.299013137817383
    10. '           ' → logprob: -8.549013137817383

Token 524: ' Between' (ID: 43355)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.1508188545703888
    2. 'if' → logprob: -2.1508188247680664
    3. ' possible' → logprob: -4.400818824768066
    4. ' if' → logprob: -4.650818824768066
    5. '                           ' → logprob: -7.150818824768066
    6. 'continue' → logprob: -8.650818824768066
    7. '                               ' → logprob: -8.775818824768066
    8. 'for' → logprob: -9.150818824768066
    9. '                                   ' → logprob: -9.775818824768066
    10. 'Possible' → logprob: -9.775818824768066

Token 525: ' dirty' (ID: 32042)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12453029304742813
    2. ' i' → logprob: -2.49953031539917
    3. 'dirty' → logprob: -3.74953031539917
    4. ' dirty' → logprob: -4.87453031539917
    5. '0' → logprob: -6.74953031539917
    6. 'dist' → logprob: -7.49953031539917
    7. '(' → logprob: -7.74953031539917
    8. ' points' → logprob: -7.99953031539917
    9. ' ' → logprob: -8.124529838562012
    10. 'points' → logprob: -8.499529838562012

Token 526: ' tiles' (ID: 33001)
  Prédit: ' tile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.06958790123462677
    2. ' tiles' → logprob: -3.3195879459381104
    3. 'tile' → logprob: -3.5695879459381104
    4. 'tiles' → logprob: -6.319587707519531
    5. '_tile' → logprob: -7.069587707519531
    6. '_tiles' → logprob: -8.694587707519531
    7. ' points' → logprob: -11.444587707519531
    8. ',' → logprob: -11.444587707519531
    9. '_' → logprob: -11.444587707519531
    10. ' ' → logprob: -12.069587707519531

Token 527: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.49995020031929016
    2. ' if' → logprob: -1.3749501705169678
    3. '                           ' → logprob: -3.2499501705169678
    4. '                                   ' → logprob: -3.6249501705169678
    5. 'if' → logprob: -3.8749501705169678
    6. '<|end|>' → logprob: -3.9999501705169678
    7. ' and' → logprob: -4.749950408935547
    8. '=' → logprob: -5.124950408935547
    9. ')' → logprob: -5.499950408935547
    10. '                   ' → logprob: -5.499950408935547

Token 528: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.34828194975852966
    2. ' if' → logprob: -1.973281979560852
    3. 'if' → logprob: -2.0982818603515625
    4. '                           ' → logprob: -3.7232818603515625
    5. '                                   ' → logprob: -5.4732818603515625
    6. '               ' → logprob: -7.5982818603515625
    7. ' and' → logprob: -7.7232818603515625
    8. '                   ' → logprob: -7.7232818603515625
    9. '<|end|>' → logprob: -7.8482818603515625
    10. ',' → logprob: -7.9732818603515625

Token 529: ' if' (ID: 538)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.19696468114852905
    2. 'if' (adapté à ' if') → logprob: -1.8219647407531738
    3. ' if' → logprob: -4.821964740753174
    4. ' possible' → logprob: -5.571964740753174
    5. '                           ' → logprob: -6.071964740753174
    6. '                   ' → logprob: -7.196964740753174
    7. 'pass' → logprob: -7.196964740753174
    8. '   ' → logprob: -7.821964740753174
    9. '                       ' → logprob: -7.946964740753174
    10. '                               ' → logprob: -8.196964263916016

Token 530: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.048483461141586304
    2. 'i' → logprob: -3.673483371734619
    3. ' dist' → logprob: -4.548483371734619
    4. 'd' → logprob: -4.798483371734619
    5. 'j' → logprob: -6.173483371734619
    6. ' i' → logprob: -7.798483371734619
    7. '   ' → logprob: -8.923483848571777
    8. ' d' → logprob: -9.673483848571777
    9. ' j' → logprob: -9.798483848571777
    10. 'not' → logprob: -10.298483848571777

Token 531: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010103991371579468
    2. 'i' → logprob: -9.625101089477539
    3. '[j' → logprob: -10.625101089477539
    4. '[' → logprob: -12.875101089477539
    5. '                   ' → logprob: -13.375101089477539
    6. '```' → logprob: -13.875101089477539
    7. '                               ' → logprob: -14.375101089477539
    8. '                           ' → logprob: -14.375101089477539
    9. '][' → logprob: -14.500101089477539
    10. '               ' → logprob: -14.625101089477539

Token 532: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16025175154209137
    2. '][' → logprob: -2.4102518558502197
    3. '[j' → logprob: -2.9102518558502197
    4. '[' → logprob: -5.785251617431641
    5. ')[' → logprob: -7.535251617431641
    6. 'i' → logprob: -10.28525161743164
    7. '}[' → logprob: -11.41025161743164
    8. '[][' → logprob: -11.66025161743164
    9. ''][' → logprob: -11.78525161743164
    10. '[s' → logprob: -11.78525161743164

Token 533: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.5822400857578032e-05
    2. '[j' → logprob: -11.375025749206543
    3. 'i' → logprob: -12.250025749206543
    4. '][' → logprob: -12.500025749206543
    5. ' j' → logprob: -12.625025749206543
    6. '```' → logprob: -14.125025749206543
    7. ']' → logprob: -14.500025749206543
    8. '[' → logprob: -14.750025749206543
    9. '
' → logprob: -15.500025749206543
    10. '   ' → logprob: -15.625025749206543

Token 534: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1148151084780693
    2. '==' → logprob: -2.2398149967193604
    3. ']' → logprob: -6.7398152351379395
    4. ']==' → logprob: -7.9898152351379395
    5. '==-' → logprob: -8.614814758300781
    6. '                           ' → logprob: -9.239814758300781
    7. ')' → logprob: -9.364814758300781
    8. '                               ' → logprob: -10.489814758300781
    9. '```' → logprob: -11.239814758300781
    10. ')==' → logprob: -11.239814758300781

Token 535: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3872631788253784
    2. '==' → logprob: -1.1372631788253784
    3. '==-' → logprob: -8.512263298034668
    4. '                           ' → logprob: -9.512263298034668
    5. '                               ' → logprob: -10.262263298034668
    6. ')' → logprob: -10.887263298034668
    7. ')==' → logprob: -10.887263298034668
    8. ']==' → logprob: -11.012263298034668
    9. '                            ' → logprob: -12.262263298034668
    10. '```' → logprob: -12.387263298034668

Token 536: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013260759878903627
    2. ' -' → logprob: -6.626326084136963
    3. '   ' → logprob: -16.626325607299805
    4. '```' → logprob: -17.126325607299805
    5. ' ' → logprob: -17.626325607299805
    6. '           ' → logprob: -18.251325607299805
    7. '  ' → logprob: -19.376325607299805
    8. '                   ' → logprob: -19.501325607299805
    9. '`' → logprob: -19.751325607299805
    10. '	' → logprob: -20.251325607299805

Token 537: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5690089639974758e-05
    2. '-' → logprob: -11.375015258789062
    3. ' ' → logprob: -13.625015258789062
    4. '```' → logprob: -13.812515258789062
    5. '<|end|>' → logprob: -14.375015258789062
    6. ' -' → logprob: -14.562515258789062
    7. '2' → logprob: -15.937515258789062
    8. '`' → logprob: -16.500015258789062
    9. '...' → logprob: -17.125015258789062
    10. '<' → logprob: -17.375015258789062

Token 538: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42038023471832275
    2. ':' → logprob: -1.4203802347183228
    3. '                               ' → logprob: -2.670380115509033
    4. '):
' → logprob: -4.295380115509033
    5. '                                   ' → logprob: -4.920380115509033
    6. '                           ' → logprob: -5.920380115509033
    7. '=' → logprob: -6.045380115509033
    8. ' and' → logprob: -6.420380115509033
    9. ' =' → logprob: -6.795380115509033
    10. '==' → logprob: -6.795380115509033

Token 539: '                                   ' (ID: 3523)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -1.0742417573928833
    2. '                                   ' → logprob: -1.0742417573928833
    3. ' =' → logprob: -1.4492417573928833
    4. ':
' → logprob: -3.3242416381835938
    5. '=' → logprob: -4.324241638183594
    6. ':' → logprob: -4.449241638183594
    7. '                   ' → logprob: -4.699241638183594
    8. '                           ' → logprob: -5.949241638183594
    9. '=False' → logprob: -6.449241638183594
    10. '           ' → logprob: -6.574241638183594

Token 540: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.008711721748113632
    2. ' possible' → logprob: -4.758711814880371
    3. '                               ' → logprob: -9.883711814880371
    4. '                                   ' → logprob: -11.008711814880371
    5. '                   ' → logprob: -11.508711814880371
    6. '   ' → logprob: -12.133711814880371
    7. '           ' → logprob: -12.258711814880371
    8. '               ' → logprob: -12.758711814880371
    9. '                           ' → logprob: -13.008711814880371
    10. '                       ' → logprob: -13.133711814880371

Token 541: ' May' (ID: 4273)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.03407324478030205
    2. ' possible' → logprob: -3.4090733528137207
    3. 'break' → logprob: -9.034072875976562
    4. '                                   ' → logprob: -9.159072875976562
    5. 'Possible' → logprob: -9.909072875976562
    6. '                           ' → logprob: -10.284072875976562
    7. '                   ' → logprob: -10.409072875976562
    8. '                               ' → logprob: -10.784072875976562
    9. '           ' → logprob: -10.784072875976562
    10. ' break' → logprob: -11.284072875976562

Token 542: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -1.104108452796936
    2. ' not' → logprob: -1.479108452796936
    3. ' be' → logprob: -1.604108452796936
    4. 'continue' → logprob: -3.2291083335876465
    5. '                                   ' → logprob: -3.3541083335876465
    6. 'not' → logprob: -3.4791083335876465
    7. 'possible' → logprob: -3.6041083335876465
    8. 'break' → logprob: -4.1041083335876465
    9. '                               ' → logprob: -4.2291083335876465
    10. ' continue' → logprob: -4.2291083335876465

Token 543: ' OK' (ID: 11339)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.9745767712593079
    2. ' possible' → logprob: -1.599576711654663
    3. 'False' → logprob: -1.724576711654663
    4. ' impossible' → logprob: -2.099576711654663
    5. ' False' → logprob: -2.349576711654663
    6. 'continue' → logprob: -4.474576950073242
    7. ' continue' → logprob: -5.349576950073242
    8. 'break' → logprob: -6.849576950073242
    9. '                           ' → logprob: -7.099576950073242
    10. ' not' → logprob: -7.224576950073242

Token 544: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: ' but' (ID: 889)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.18314196169376373
    2. 'continue' → logprob: -2.0581419467926025
    3. ' pass' → logprob: -4.308142185211182
    4. '                                   ' → logprob: -4.558142185211182
    5. '                               ' → logprob: -4.683142185211182
    6. '                           ' → logprob: -6.558142185211182
    7. 'pass' → logprob: -7.058142185211182
    8. '                                       ' → logprob: -7.308142185211182
    9. ' possible' → logprob: -7.683142185211182
    10. ' but' → logprob: -7.808142185211182

Token 546: ' keep' (ID: 3357)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3029966354370117
    2. ' possible' → logprob: -1.4279966354370117
    3. '                                   ' → logprob: -5.052996635437012
    4. 'pass' → logprob: -5.427996635437012
    5. 'continue' → logprob: -5.427996635437012
    6. ' pass' → logprob: -6.052996635437012
    7. ' continue' → logprob: -6.302996635437012
    8. 'break' → logprob: -7.552996635437012
    9. ' break' → logprob: -7.677996635437012
    10. '                               ' → logprob: -7.677996635437012

Token 547: ' consistent' (ID: 20434)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0014325011288747191
    2. ' possible' → logprob: -7.376432418823242
    3. 'going' → logprob: -8.001432418823242
    4. 'False' → logprob: -8.501432418823242
    5. 'checking' → logprob: -8.626432418823242
    6. ' going' → logprob: -11.251432418823242
    7. '                           ' → logprob: -11.376432418823242
    8. 'im' → logprob: -11.626432418823242
    9. 'Possible' → logprob: -11.626432418823242
    10. 'false' → logprob: -12.376432418823242

Token 548: ' check' (ID: 2371)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: '                                   ' (ID: 3523)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 551: ' pass' (ID: 1853)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.8649619221687317
    2. 'possible' → logprob: -1.489961862564087
    3. ' possible' → logprob: -1.614961862564087
    4. ' pass' → logprob: -2.739961862564087
    5. 'pass' (adapté à ' pass') → logprob: -2.989961862564087
    6. 'continue' → logprob: -4.739962100982666
    7. ' continue' → logprob: -4.864962100982666
    8. '                               ' → logprob: -5.239962100982666
    9. '                   ' → logprob: -5.364962100982666
    10. '                           ' → logprob: -5.489962100982666

Token 552: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 553: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2828817069530487
    2. '<|end|>' → logprob: -2.157881736755371
    3. '        
' → logprob: -3.157881736755371
    4. '
' → logprob: -3.157881736755371
    5. ' if' → logprob: -3.657881736755371
    6. 'if' (adapté à ' if') → logprob: -4.032881736755371
    7. '        ' → logprob: -7.782881736755371
    8. ',' → logprob: -8.157881736755371
    9. '<|end|>' → logprob: -8.157881736755371
    10. '                        
' → logprob: -8.782881736755371

Token 555: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.026352325454354286
    2. 'not' → logprob: -3.6513524055480957
    3. ' possible' → logprob: -10.401351928710938
    4. 'possible' → logprob: -10.901351928710938
    5. '	not' → logprob: -13.651351928710938
    6. '   ' → logprob: -13.651351928710938
    7. ' ' → logprob: -15.276351928710938
    8. ' ' → logprob: -15.651351928710938
    9. '!' → logprob: -15.776351928710938
    10. '
' → logprob: -15.901351928710938

Token 556: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.0031784253660589457
    2. 'possible' → logprob: -5.753178596496582
    3. ' posible' → logprob: -15.128178596496582
    4. '_possible' → logprob: -15.128178596496582
    5. ' ' → logprob: -15.753178596496582
    6. ' ' → logprob: -18.253177642822266
    7. ' possibile' → logprob: -18.878177642822266
    8. ' poss' → logprob: -19.253177642822266
    9. ' possível' → logprob: -19.378177642822266
    10. ' possibles' → logprob: -19.753177642822266

Token 557: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22799824178218842
    2. ':
' → logprob: -1.6029982566833496
    3. '           ' → logprob: -5.97799825668335
    4. ':return' → logprob: -10.227997779846191
    5. ':

' → logprob: -12.977997779846191
    6. '():
' → logprob: -13.477997779846191
    7. '       ' → logprob: -13.602997779846191
    8. '               ' → logprob: -13.852997779846191
    9. ':
' → logprob: -13.977997779846191
    10. ',' → logprob: -14.102997779846191

Token 558: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.100059156073257e-05
    2. '
' → logprob: -10.375070571899414
    3. 'print' → logprob: -10.875070571899414
    4. ' print' → logprob: -11.750070571899414
    5. '```' → logprob: -13.000070571899414
    6. '       ' → logprob: -13.125070571899414
    7. ',' → logprob: -13.375070571899414
    8. ':
' → logprob: -13.500070571899414
    9. '            
' → logprob: -13.500070571899414
    10. '               ' → logprob: -14.250070571899414

Token 559: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003087397664785385
    2. '       ' → logprob: -6.628087520599365
    3. ' print' → logprob: -7.003087520599365
    4. '           ' → logprob: -7.253087520599365
    5. '   ' → logprob: -8.878087043762207
    6. '```' → logprob: -13.128087043762207
    7. '	print' → logprob: -15.128087043762207
    8. '-' → logprob: -15.253087043762207
    9. 'printf' → logprob: -15.503087043762207
    10. '
' → logprob: -15.753087043762207

Token 560: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005290837725624442
    2. '(-' → logprob: -7.7505292892456055
    3. ' -' → logprob: -9.250529289245605
    4. '   ' → logprob: -13.000529289245605
    5. '       ' → logprob: -16.50052833557129
    6. '(' → logprob: -17.12552833557129
    7. '```' → logprob: -17.62552833557129
    8. '           ' → logprob: -17.87552833557129
    9. '−' → logprob: -18.12552833557129
    10. '("-' → logprob: -18.25052833557129

Token 561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -18.0
    3. ' ' → logprob: -20.375
    4. '１' → logprob: -20.9375
    5. '۱' → logprob: -21.125
    6. '```' → logprob: -21.25
    7. ')' → logprob: -21.5
    8. '3' → logprob: -21.5625
    9. '11' → logprob: -21.6875
    10. '9' → logprob: -21.9375

Token 562: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007245833403430879
    2. ')
' → logprob: -7.250724792480469
    3. '       ' → logprob: -11.500724792480469
    4. ')return' → logprob: -13.500724792480469
    5. ')
' → logprob: -14.500724792480469
    6. ' )' → logprob: -14.875724792480469
    7. '           ' → logprob: -14.875724792480469
    8. '   ' → logprob: -15.250724792480469
    9. '`)' → logprob: -15.250724792480469
    10. ')`' → logprob: -15.375724792480469

Token 563: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5785509943962097
    2. '           ' → logprob: -0.8285509943962097
    3. '   ' → logprob: -7.828550815582275
    4. '<|end|>' → logprob: -7.828550815582275
    5. ' continue' → logprob: -7.953550815582275
    6. '	       ' → logprob: -7.953550815582275
    7. '	continue' → logprob: -8.203551292419434
    8. 'continue' → logprob: -8.328551292419434
    9. '               ' → logprob: -9.203551292419434
    10. '	   ' → logprob: -9.328551292419434

Token 564: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024535416159778833
    2. '       ' → logprob: -6.377453327178955
    3. 'continue' (adapté à ' continue') → logprob: -7.502453327178955
    4. ' continue' → logprob: -8.752453804016113
    5. '		' → logprob: -11.002453804016113
    6. '	continue' → logprob: -11.252453804016113
    7. '   ' → logprob: -12.877453804016113
    8. '               ' → logprob: -13.002453804016113
    9. '	' → logprob: -13.252453804016113
    10. '	       ' → logprob: -13.377453804016113

Token 565: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06311246752738953
    2. '        
' → logprob: -2.813112497329712
    3. '<|end|>' → logprob: -8.188112258911133
    4. 'from' → logprob: -8.313112258911133
    5. 'import' → logprob: -8.813112258911133
    6. 'dp' → logprob: -9.188112258911133
    7. '
' → logprob: -9.438112258911133
    8. '```' → logprob: -9.813112258911133
    9. '        ' → logprob: -10.063112258911133
    10. '       
' → logprob: -10.313112258911133

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2942759394645691
    2. 'dp' → logprob: -1.5442759990692139
    3. 'from' → logprob: -3.294275999069214
    4. 'import' → logprob: -5.794275760650635
    5. '#' → logprob: -8.044276237487793
    6. 'memo' → logprob: -8.044276237487793
    7. 'visited' → logprob: -8.419276237487793
    8. '   ' → logprob: -8.544276237487793
    9. 'dist' → logprob: -9.169276237487793
    10. ' from' → logprob: -10.544276237487793

Token 567: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0406000092625618
    2. 'from' → logprob: -3.665600061416626
    3. '       ' → logprob: -4.415599822998047
    4. 'import' → logprob: -7.290599822998047
    5. ' dp' → logprob: -7.665599822998047
    6. 'memo' → logprob: -8.165599822998047
    7. '   ' → logprob: -9.540599822998047
    8. 'min' → logprob: -9.540599822998047
    9. 'dist' → logprob: -9.540599822998047
    10. ' from' → logprob: -9.665599822998047

Token 568: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.36845266819000244
    2. 'from' → logprob: -1.2434526681900024
    3. 'import' → logprob: -4.493452548980713
    4. ' dp' → logprob: -5.493452548980713
    5. ' from' → logprob: -6.118452548980713
    6. '   ' → logprob: -7.618452548980713
    7. 'visited' → logprob: -7.993452548980713
    8. 'memo' → logprob: -8.243453025817871
    9. 'for' → logprob: -8.493453025817871
    10. 'INF' → logprob: -8.618453025817871

Token 569: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40128177404403687
    2. '       ' → logprob: -1.9012818336486816
    3. ' dp' → logprob: -2.5262818336486816
    4. '
' → logprob: -2.9012818336486816
    5. '   ' → logprob: -4.151281833648682
    6. ' =' → logprob: -4.776281833648682
    7. '(dp' → logprob: -5.151281833648682
    8. 'size' → logprob: -5.276281833648682
    9. 'dist' → logprob: -6.026281833648682
    10. ' size' → logprob: -6.151281833648682

Token 570: ' bit' (ID: 3546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24411039054393768
    2. ' dp' → logprob: -2.369110345840454
    3. 'from' → logprob: -2.869110345840454
    4. 'INF' → logprob: -3.994110345840454
    5. ' from' → logprob: -4.369110584259033
    6. '   ' → logprob: -4.369110584259033
    7. 'size' → logprob: -4.744110584259033
    8. ' size' → logprob: -4.869110584259033
    9. ' INF' → logprob: -6.494110584259033
    10. 'SIZE' → logprob: -7.494110584259033

Token 571: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.010849134996533394
    2. 'm' → logprob: -4.7608489990234375
    3. '_mask' → logprob: -6.3858489990234375
    4. '   ' → logprob: -8.885848999023438
    5. ' mask' → logprob: -9.135848999023438
    6. ' ' → logprob: -9.885848999023438
    7. ')' → logprob: -10.260848999023438
    8. '       ' → logprob: -10.510848999023438
    9. 'MASK' → logprob: -10.510848999023438
    10. '
' → logprob: -11.010848999023438

Token 572: ' over' (ID: 1072)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.863654375076294
    2. ' dp' → logprob: -1.363654375076294
    3. 'dp' → logprob: -1.988654375076294
    4. ' =' → logprob: -2.363654375076294
    5. '       ' → logprob: -3.113654375076294
    6. '   ' → logprob: -3.738654375076294
    7. ' ,' → logprob: -3.988654375076294
    8. '_dp' → logprob: -6.238654136657715
    9. ',
' → logprob: -7.988654136657715
    10. '=' → logprob: -7.988654136657715

Token 573: ' dirty' (ID: 32042)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0341821163892746
    2. 'dirty' → logprob: -4.409182071685791
    3. 'range' → logprob: -4.659182071685791
    4. '1' → logprob: -5.534182071685791
    5. 'all' → logprob: -6.034182071685791
    6. 'the' → logprob: -6.284182071685791
    7. '(' → logprob: -6.784182071685791
    8. '(n' → logprob: -6.784182071685791
    9. ' n' → logprob: -7.409182071685791
    10. '   ' → logprob: -8.40918254852295

Token 574: ' tiles' (ID: 33001)
  Prédit: '_tiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -0.2364053726196289
    2. '_' → logprob: -2.236405372619629
    3. 'tiles' → logprob: -3.361405372619629
    4. '_mask' → logprob: -3.986405372619629
    5. '_bits' → logprob: -4.736405372619629
    6. ',' → logprob: -4.861405372619629
    7. '_t' → logprob: -4.986405372619629
    8. ')' → logprob: -5.236405372619629
    9. '_dirty' → logprob: -5.236405372619629
    10. '   ' → logprob: -5.986405372619629

Token 575: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4632546901702881
    2. ',' → logprob: -2.213254690170288
    3. '
' → logprob: -2.338254690170288
    4. ' dp' → logprob: -2.838254690170288
    5. '   ' → logprob: -2.963254690170288
    6. 'dp' → logprob: -3.088254690170288
    7. ',
' → logprob: -5.588254928588867
    8. 'dist' → logprob: -6.963254928588867
    9. ' ,' → logprob: -6.963254928588867
    10. '        
' → logprob: -7.463254928588867

Token 576: 'max' (ID: 3228)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6345614194869995
    2. ' ,' → logprob: -1.5095614194869995
    3. ',' → logprob: -2.009561538696289
    4. ' +' → logprob: -3.384561538696289
    5. '+' → logprob: -3.759561538696289
    6. '1' → logprob: -3.884561538696289
    7. ' n' → logprob: -5.134561538696289
    8. ' )' → logprob: -5.134561538696289
    9. '),' → logprob: -5.259561538696289
    10. 'range' → logprob: -5.259561538696289

Token 577: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6458779573440552
    2. ')' → logprob: -2.0208778381347656
    3. '1' → logprob: -2.1458778381347656
    4. '_dirty' → logprob: -2.1458778381347656
    5. ' ,' → logprob: -2.5208778381347656
    6. 'd' → logprob: -2.6458778381347656
    7. '   ' → logprob: -3.0208778381347656
    8. 'n' → logprob: -3.5208778381347656
    9. 'dirty' → logprob: -3.6458778381347656
    10. ',' → logprob: -3.7708778381347656

Token 578: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8103695511817932
    2. 'n' → logprob: -1.1853694915771484
    3. '(' → logprob: -2.3103694915771484
    4. '=' → logprob: -3.5603694915771484
    5. 'dirty' → logprob: -3.5603694915771484
    6. 'd' → logprob: -3.9353694915771484
    7. 'k' → logprob: -4.185369491577148
    8. '(n' → logprob: -4.310369491577148
    9. 'bits' → logprob: -4.810369491577148
    10. 'len' → logprob: -4.935369491577148

Token 579: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009566369466483593
    2. '+' → logprob: -5.509566307067871
    3. ')
' → logprob: -6.509566307067871
    4. '),' → logprob: -6.634566307067871
    5. ' +' → logprob: -7.009566307067871
    6. ' )' → logprob: -7.509566307067871
    7. '       ' → logprob: -8.759566307067871
    8. '):
' → logprob: -8.759566307067871
    9. 'dirty' → logprob: -8.759566307067871
    10. '   ' → logprob: -9.384566307067871

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002986024832352996
    2. ' dp' → logprob: -6.627985954284668
    3. 'dp' → logprob: -7.127985954284668
    4. '   ' → logprob: -7.877985954284668
    5. ',' → logprob: -8.252985954284668
    6. 'mask' → logprob: -9.502985954284668
    7. ' mask' → logprob: -10.627985954284668
    8. '        
' → logprob: -10.877985954284668
    9. ' for' → logprob: -10.877985954284668
    10. '           ' → logprob: -11.627985954284668

Token 581: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1829027235507965
    2. ' dp' → logprob: -1.9329026937484741
    3. '       ' → logprob: -4.432902812957764
    4. '   ' → logprob: -4.807902812957764
    5. ' from' → logprob: -6.932902812957764
    6. 'from' → logprob: -7.432902812957764
    7. ' size' → logprob: -8.432902336120605
    8. 'INF' → logprob: -8.682902336120605
    9. ' full' → logprob: -9.557902336120605
    10. 'size' → logprob: -9.932902336120605

Token 582: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19616180658340454
    2. ' dp' → logprob: -2.4461617469787598
    3. 'from' → logprob: -3.5711617469787598
    4. '   ' → logprob: -3.6961617469787598
    5. ' from' → logprob: -4.57116174697876
    6. 'for' → logprob: -4.82116174697876
    7. ' for' → logprob: -5.32116174697876
    8. '       ' → logprob: -5.44616174697876
    9. ' size' → logprob: -5.82116174697876
    10. ' full' → logprob: -6.32116174697876

Token 583: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002494087442755699
    2. '=' → logprob: -6.127493858337402
    3. '[' → logprob: -8.627493858337402
    4. '=[' → logprob: -10.002493858337402
    5. ' =[' → logprob: -11.377493858337402
    6. ')' → logprob: -11.502493858337402
    7. ' ' → logprob: -11.502493858337402
    8. ']' → logprob: -11.627493858337402
    9. '_size' → logprob: -11.627493858337402
    10. '_' → logprob: -11.877493858337402

Token 584: 'mask' (ID: 22527)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3036353290081024
    2. '(' → logprob: -1.4286353588104248
    3. '][' → logprob: -4.678635120391846
    4. 'mask' → logprob: -5.053635120391846
    5. ']' → logprob: -5.803635120391846
    6. '0' → logprob: -6.303635120391846
    7. 'i' → logprob: -7.303635120391846
    8. 'bit' → logprob: -8.803635597229004
    9. '
' → logprob: -8.928635597229004
    10. 'n' → logprob: -9.053635597229004

Token 585: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01438315212726593
    2. ']' → logprob: -4.264383316040039
    3. ' ][' → logprob: -8.764383316040039
    4. ']=' → logprob: -10.514383316040039
    5. '][]' → logprob: -11.389383316040039
    6. '[' → logprob: -12.139383316040039
    7. ' =' → logprob: -12.264383316040039
    8. '][-' → logprob: -12.639383316040039
    9. '   ' → logprob: -12.764383316040039
    10. ' ]' → logprob: -13.014383316040039

Token 586: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.041638366878032684
    2. 'pos' → logprob: -3.4166383743286133
    3. 'u' → logprob: -5.291638374328613
    4. '0' → logprob: -6.541638374328613
    5. 'idx' → logprob: -7.041638374328613
    6. 'last' → logprob: -8.291638374328613
    7. '
' → logprob: -9.041638374328613
    8. 'j' → logprob: -9.416638374328613
    9. ']' → logprob: -10.416638374328613
    10. 'v' → logprob: -10.541638374328613

Token 587: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031512193381786346
    2. '][' → logprob: -6.2531514167785645
    3. ' ]' → logprob: -7.0031514167785645
    4. ']=' → logprob: -8.253150939941406
    5. ' ][' → logprob: -11.003150939941406
    6. '][]' → logprob: -11.253150939941406
    7. ']=(' → logprob: -11.628150939941406
    8. '   ' → logprob: -13.128150939941406
    9. ']+=' → logprob: -13.253150939941406
    10. '[' → logprob: -13.253150939941406

Token 588: ' min' (ID: 1349)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.169835090637207
    2. '0' → logprob: -1.419835090637207
    3. '-' → logprob: -1.919835090637207
    4. ' dist' → logprob: -3.044835090637207
    5. 'dist' → logprob: -3.044835090637207
    6. 'distance' → logprob: -3.294835090637207
    7. '   ' → logprob: -3.419835090637207
    8. ' distance' → logprob: -3.669835090637207
    9. 'min' → logprob: -4.169835090637207
    10. ' distances' → logprob: -4.169835090637207

Token 589: ' moves' (ID: 19523)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.43817219138145447
    2. '_dist' → logprob: -2.1881721019744873
    3. '_' → logprob: -2.3131721019744873
    4. ' _' → logprob: -3.3131721019744873
    5. ' distance' → logprob: -3.5631721019744873
    6. 'distance' → logprob: -3.6881721019744873
    7. ' =' → logprob: -3.9381721019744873
    8. 'dist' → logprob: -4.313172340393066
    9. '[' → logprob: -5.188172340393066
    10. '_cost' → logprob: -5.688172340393066

Token 590: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10068817436695099
    2. '[' → logprob: -2.9756882190704346
    3. '=' → logprob: -4.1006879806518555
    4. '   ' → logprob: -4.7256879806518555
    5. ']' → logprob: -5.6006879806518555
    6. '       ' → logprob: -5.8506879806518555
    7. ' to' → logprob: -5.8506879806518555
    8. '```' → logprob: -6.3506879806518555
    9. ' for' → logprob: -6.6006879806518555
    10. '][' → logprob: -6.6006879806518555

Token 591: ' have' (ID: 679)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.11895108968019485
    2. 'visit' → logprob: -2.2439510822296143
    3. ' reach' → logprob: -5.993951320648193
    4. 'get' → logprob: -6.618951320648193
    5. 'be' → logprob: -7.243951320648193
    6. 'cover' → logprob: -7.368951320648193
    7. 'go' → logprob: -8.743950843811035
    8. ' visit' → logprob: -8.868950843811035
    9. 'i' → logprob: -8.993950843811035
    10. 'have' → logprob: -9.118950843811035

Token 592: ' cleaned' (ID: 37639)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.26752933859825134
    2. 'clean' → logprob: -1.5175293684005737
    3. 'col' → logprob: -4.892529487609863
    4. ' cleaned' → logprob: -5.142529487609863
    5. ' visited' → logprob: -6.517529487609863
    6. 'mask' → logprob: -9.017529487609863
    7. 'covered' → logprob: -9.267529487609863
    8. 'i' → logprob: -9.392529487609863
    9. 'finished' → logprob: -9.642529487609863
    10. 'all' → logprob: -9.767529487609863

Token 593: ' tiles' (ID: 33001)
  Prédit: ' mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.5283958911895752
    2. ' all' → logprob: -1.4033958911895752
    3. 'mask' → logprob: -2.153395891189575
    4. 'all' → logprob: -3.528395891189575
    5. '[' → logprob: -5.528395652770996
    6. ' the' → logprob: -5.653395652770996
    7. ' ' → logprob: -5.778395652770996
    8. '_mask' → logprob: -6.278395652770996
    9. '   ' → logprob: -6.278395652770996
    10. ' [' → logprob: -6.528395652770996

Token 594: ' in' (ID: 306)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5607585906982422
    2. '[' → logprob: -1.1857585906982422
    3. 'mask' → logprob: -2.685758590698242
    4. ',' → logprob: -4.060758590698242
    5. ' =' → logprob: -5.185758590698242
    6. ' mask' → logprob: -5.435758590698242
    7. '_mask' → logprob: -5.685758590698242
    8. '=' → logprob: -5.935758590698242
    9. ']' → logprob: -5.935758590698242
    10. '   ' → logprob: -6.060758590698242

Token 595: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.01605748012661934
    2. ' mask' → logprob: -4.14105749130249
    3. 'dp' → logprob: -11.891057014465332
    4. '[' → logprob: -12.766057014465332
    5. '	mask' → logprob: -12.766057014465332
    6. '   ' → logprob: -12.891057014465332
    7. '_mask' → logprob: -14.141057014465332
    8. '(mask' → logprob: -14.141057014465332
    9. ' ' → logprob: -14.266057014465332
    10. 'visited' → logprob: -14.391057014465332

Token 596: ' ending' (ID: 22013)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4941027760505676
    2. '[i' → logprob: -1.4941027164459229
    3. '[' → logprob: -3.119102716445923
    4. ' ][' → logprob: -3.369102716445923
    5. '   ' → logprob: -3.619102716445923
    6. ' [' → logprob: -3.994102716445923
    7. '       ' → logprob: -4.119102954864502
    8. ',' → logprob: -4.869102954864502
    9. '
' → logprob: -5.619102954864502
    10. ' for' → logprob: -6.244102954864502

Token 597: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.18456776440143585
    2. 'at' → logprob: -1.8095678091049194
    3. '_at' → logprob: -5.934567928314209
    4. '[' → logprob: -7.559567928314209
    5. '   ' → logprob: -7.684567928314209
    6. '[i' → logprob: -7.809567928314209
    7. '_' → logprob: -8.30956745147705
    8. ' ' → logprob: -9.05956745147705
    9. '       ' → logprob: -9.93456745147705
    10. '    ' → logprob: -10.05956745147705

Token 598: ' point' (ID: 2438)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1269504725933075
    2. ' i' → logprob: -2.12695050239563
    3. '`' → logprob: -11.50195026397705
    4. '   ' → logprob: -12.75195026397705
    5. ' ' → logprob: -13.62695026397705
    6. 'the' → logprob: -13.75195026397705
    7. ')' → logprob: -14.12695026397705
    8. ' (' → logprob: -14.12695026397705
    9. '
' → logprob: -14.25195026397705
    10. ' the' → logprob: -14.62695026397705

Token 599: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12721650302410126
    2. '[' → logprob: -2.6272165775299072
    3. ' [' → logprob: -4.252216339111328
    4. '][' → logprob: -4.377216339111328
    5. ' i' → logprob: -5.252216339111328
    6. 'i' → logprob: -5.502216339111328
    7. '
' → logprob: -5.752216339111328
    8. '`' → logprob: -7.002216339111328
    9. ' =' → logprob: -7.127216339111328
    10. '   ' → logprob: -7.377216339111328

Token 600: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09149675071239471
    2. '
' → logprob: -3.591496706008911
    3. '   ' → logprob: -3.841496706008911
    4. '        
' → logprob: -4.46649694442749
    5. '[' → logprob: -5.09149694442749
    6. ' =' → logprob: -5.46649694442749
    7. ',' → logprob: -5.59149694442749
    8. ']' → logprob: -5.71649694442749
    9. '[]' → logprob: -6.46649694442749
    10. '[
' → logprob: -6.96649694442749

Token 601: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010656783124431968
    2. '   ' → logprob: -7.751065731048584
    3. ',' → logprob: -8.876065254211426
    4. '
' → logprob: -8.876065254211426
    5. '        
' → logprob: -9.501065254211426
    6. '[' → logprob: -9.626065254211426
    7. ' =' → logprob: -10.001065254211426
    8. ')' → logprob: -10.626065254211426
    9. '```' → logprob: -10.626065254211426
    10. '           ' → logprob: -10.751065254211426

Token 602: ' SIZE' (ID: 51412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06951650977134705
    2. ' dp' → logprob: -2.94451642036438
    3. 'dp' → logprob: -4.819516658782959
    4. '   ' → logprob: -5.069516658782959
    5. '	dp' → logprob: -9.6945161819458
    6. '        ' → logprob: -10.9445161819458
    7. '        
' → logprob: -11.0695161819458
    8. '    ' → logprob: -11.1945161819458
    9. '
' → logprob: -11.4445161819458
    10. '_dp' → logprob: -11.5695161819458

Token 603: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004122092388570309
    2. '=' → logprob: -5.504122257232666
    3. '   ' → logprob: -10.379121780395508
    4. '_' → logprob: -13.129121780395508
    5. '    ' → logprob: -13.254121780395508
    6. ' ' → logprob: -13.504121780395508
    7. ',' → logprob: -13.629121780395508
    8. ' =
' → logprob: -13.629121780395508
    9. '```' → logprob: -13.879121780395508
    10. ' ,' → logprob: -14.379121780395508

Token 604: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008250252343714237
    2. 'n' → logprob: -4.8832502365112305
    3. 'len' → logprob: -8.13325023651123
    4. '10' → logprob: -8.38325023651123
    5. '(' → logprob: -9.63325023651123
    6. '(n' → logprob: -11.00825023651123
    7. '102' → logprob: -11.13325023651123
    8. '11' → logprob: -11.38325023651123
    9. '2' → logprob: -12.13325023651123
    10. '101' → logprob: -13.50825023651123

Token 605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16520260274410248
    2. 'n' → logprob: -2.1652026176452637
    3. 'len' → logprob: -3.4152026176452637
    4. '11' → logprob: -6.165202617645264
    5. '(' → logprob: -6.665202617645264
    6. '10' → logprob: -7.540202617645264
    7. '(n' → logprob: -7.790202617645264
    8. 'w' → logprob: -9.415202140808105
    9. '(len' → logprob: -9.665202140808105
    10. '21' → logprob: -10.415202140808105

Token 606: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.06832456588745117
    2. ' <<' → logprob: -2.818324565887451
    3. '0' → logprob: -5.068324565887451
    4. '<<(' → logprob: -10.44332504272461
    5. '<<<' → logprob: -12.31832504272461
    6. '   ' → logprob: -12.69332504272461
    7. ' <<=' → logprob: -13.06832504272461
    8. '```' → logprob: -13.94332504272461
    9. '       ' → logprob: -14.06832504272461
    10. '<' → logprob: -14.19332504272461

Token 607: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24318017065525055
    2. '(n' → logprob: -1.8681801557540894
    3. 'len' → logprob: -3.368180274963379
    4. '(len' → logprob: -3.618180274963379
    5. ' (' → logprob: -9.618180274963379
    6. '(' → logprob: -9.868180274963379
    7. ' n' → logprob: -10.618180274963379
    8. '10' → logprob: -11.493180274963379
    9. '           ' → logprob: -12.118180274963379
    10. '```' → logprob: -12.368180274963379

Token 608: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5587455630302429
    2. '(n' → logprob: -1.1837456226348877
    3. 'len' → logprob: -2.3087456226348877
    4. '(len' → logprob: -3.8087456226348877
    5. ' (' → logprob: -8.058745384216309
    6. ' n' → logprob: -10.308745384216309
    7. ' len' → logprob: -11.558745384216309
    8. '[n' → logprob: -12.808745384216309
    9. '(' → logprob: -12.933745384216309
    10. '```' → logprob: -13.058745384216309

Token 609: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17405927181243896
    2. '-' → logprob: -1.924059271812439
    3. ' -' → logprob: -4.6740593910217285
    4. '[' → logprob: -6.6740593910217285
    5. ')-' → logprob: -7.0490593910217285
    6. '<|end|>' → logprob: -7.0490593910217285
    7. '1' → logprob: -8.04905891418457
    8. '0' → logprob: -8.17405891418457
    9. '       ' → logprob: -8.29905891418457
    10. ' )' → logprob: -9.42405891418457

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.625006675720215
    3. '
' → logprob: -13.875006675720215
    4. '0' → logprob: -14.437506675720215
    5. '   ' → logprob: -14.500006675720215
    6. '```' → logprob: -15.000006675720215
    7. '       ' → logprob: -15.375006675720215
    8. ')' → logprob: -15.937506675720215
    9. '           ' → logprob: -16.0000057220459
    10. '2' → logprob: -16.9375057220459

Token 611: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004097993019968271
    2. ')
' → logprob: -5.504097938537598
    3. '       ' → logprob: -11.629097938537598
    4. ' )' → logprob: -11.754097938537598
    5. ')

' → logprob: -14.254097938537598
    6. ')
' → logprob: -14.379097938537598
    7. ')`' → logprob: -14.879097938537598
    8. '   ' → logprob: -15.254097938537598
    9. ' )
' → logprob: -15.504097938537598
    10. '),' → logprob: -15.504097938537598

Token 612: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026707788929343224
    2. '
' → logprob: -4.651707649230957
    3. 'dp' → logprob: -5.026707649230957
    4. '	dp' → logprob: -5.776707649230957
    5. '   ' → logprob: -5.901707649230957
    6. ' dp' → logprob: -6.901707649230957
    7. '```' → logprob: -6.901707649230957
    8. '        
' → logprob: -7.401707649230957
    9. '	' → logprob: -7.651707649230957
    10. ',' → logprob: -7.776707649230957

Token 613: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03916367515921593
    2. ' dp' → logprob: -3.289163589477539
    3. '   ' → logprob: -7.539163589477539
    4. '       ' → logprob: -7.789163589477539
    5. '	dp' → logprob: -8.789163589477539
    6. '```' → logprob: -11.039163589477539
    7. '_dp' → logprob: -12.164163589477539
    8. ' ' → logprob: -14.164163589477539
    9. 'import' → logprob: -15.164163589477539
    10. '(dp' → logprob: -15.664163589477539

Token 614: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975292131304741
    2. '=' → logprob: -3.5297529697418213
    3. '[' → logprob: -14.279752731323242
    4. '=[' → logprob: -14.529752731323242
    5. ' =[' → logprob: -14.904752731323242
    6. '   ' → logprob: -15.029752731323242
    7. '=[[' → logprob: -15.279752731323242
    8. ' ' → logprob: -15.404752731323242
    9. ')' → logprob: -16.029752731323242
    10. ']' → logprob: -16.529752731323242

Token 615: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -8.506661833962426e-05
    2. ' [[' → logprob: -9.50008487701416
    3. '[' → logprob: -11.50008487701416
    4. '[['' → logprob: -20.125085830688477
    5. '([[' → logprob: -20.625085830688477
    6. '[
' → logprob: -20.625085830688477
    7. ' [' → logprob: -20.625085830688477
    8. '[(' → logprob: -20.875085830688477
    9. '[-' → logprob: -21.000085830688477
    10. '   ' → logprob: -21.000085830688477

Token 616: '-' (ID: 12)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04131573811173439
    2. '10' → logprob: -3.791315793991089
    3. '-' → logprob: -4.04131555557251
    4. 'sys' → logprob: -8.041316032409668
    5. 'int' → logprob: -12.416316032409668
    6. ' float' → logprob: -12.666316032409668
    7. '1' → logprob: -13.291316032409668
    8. '-f' → logprob: -14.291316032409668
    9. 'None' → logprob: -14.541316032409668
    10. '100' → logprob: -14.791316032409668

Token 617: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '2' → logprob: -12.75000286102295
    3. ' ' → logprob: -17.125003814697266
    4. '-' → logprob: -18.125003814697266
    5. '１' → logprob: -19.312503814697266
    6. 'sys' → logprob: -19.375003814697266
    7. '   ' → logprob: -19.750003814697266
    8. '10' → logprob: -19.812503814697266
    9. '(' → logprob: -20.250003814697266
    10. '99' → logprob: -20.375003814697266

Token 618: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.3553759455680847
    2. ']*(' → logprob: -1.8553760051727295
    3. ']' → logprob: -2.3553760051727295
    4. ' for' → logprob: -3.3553760051727295
    5. 'for' → logprob: -4.35537576675415
    6. ' ]' → logprob: -10.230376243591309
    7. ']+' → logprob: -10.480376243591309
    8. '   ' → logprob: -10.855376243591309
    9. '	for' → logprob: -11.730376243591309
    10. '][' → logprob: -12.480376243591309

Token 619: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.796184723294573e-06
    2. '(n' → logprob: -12.500005722045898
    3. ' n' → logprob: -13.375005722045898
    4. '(' → logprob: -15.000005722045898
    5. '   ' → logprob: -17.0000057220459
    6. '	n' → logprob: -18.0000057220459
    7. '
' → logprob: -18.5000057220459
    8. '_n' → logprob: -18.7500057220459
    9. ')n' → logprob: -18.7500057220459
    10. ' (' → logprob: -20.0000057220459

Token 620: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01131906732916832
    2. 'for' → logprob: -4.511319160461426
    3. ']' → logprob: -8.511319160461426
    4. '	for' → logprob: -10.511319160461426
    5. ' ]' → logprob: -11.261319160461426
    6. '       ' → logprob: -11.886319160461426
    7. '[' → logprob: -12.261319160461426
    8. ']*' → logprob: -12.511319160461426
    9. '   ' → logprob: -12.761319160461426
    10. ' ' → logprob: -13.011319160461426

Token 621: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.043483346700668335
    2. ' _' → logprob: -3.168483257293701
    3. ' range' → logprob: -7.793483257293701
    4. ' in' → logprob: -10.91848373413086
    5. 'range' → logprob: -11.29348373413086
    6. '_SIZE' → logprob: -11.91848373413086
    7. ' size' → logprob: -12.04348373413086
    8. '_]' → logprob: -12.04348373413086
    9. '   ' → logprob: -12.41848373413086
    10. '_S' → logprob: -12.41848373413086

Token 622: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0032743257470428944
    2. ' range' → logprob: -5.753274440765381
    3. 'in' → logprob: -9.378273963928223
    4. '(range' → logprob: -12.128273963928223
    5. ' in' → logprob: -12.378273963928223
    6. 'size' → logprob: -13.503273963928223
    7. 'ange' → logprob: -14.878273963928223
    8. '_range' → logprob: -16.25327491760254
    9. '0' → logprob: -16.50327491760254
    10. '   ' → logprob: -16.50327491760254

Token 623: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04986201599240303
    2. ' range' → logprob: -3.0498619079589844
    3. '(range' → logprob: -7.049861907958984
    4. '(S' → logprob: -8.049861907958984
    5. 'SIZE' → logprob: -9.674861907958984
    6. '[S' → logprob: -11.924861907958984
    7. '[' → logprob: -12.299861907958984
    8. 'size' → logprob: -12.424861907958984
    9. '   ' → logprob: -12.924861907958984
    10. '(' → logprob: -13.174861907958984

Token 624: '(S' (ID: 6181)
  Prédit: 'SIZE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SIZE' → logprob: -0.04464535415172577
    2. 'n' → logprob: -3.544645309448242
    3. '(S' → logprob: -4.544645309448242
    4. '(' → logprob: -6.044645309448242
    5. '(n' → logprob: -7.169645309448242
    6. ' SIZE' → logprob: -7.794645309448242
    7. '1' → logprob: -8.294645309448242
    8. 'S' → logprob: -8.919645309448242
    9. ' n' → logprob: -9.794645309448242
    10. '   ' → logprob: -9.794645309448242

Token 625: 'IZE' (ID: 5950)
  Prédit: 'IZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IZE' → logprob: -0.1497078388929367
    2. 'SIZE' → logprob: -2.899707794189453
    3. 'n' → logprob: -3.399707794189453
    4. ')' → logprob: -3.399707794189453
    5. '[' → logprob: -4.774707794189453
    6. 'Z' → logprob: -6.274707794189453
    7. '])' → logprob: -6.399707794189453
    8. ']' → logprob: -7.024707794189453
    9. ')n' → logprob: -7.399707794189453
    10. '_SIZE' → logprob: -7.399707794189453

Token 626: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00042686203960329294
    2. ')]
' → logprob: -8.00042724609375
    3. '       ' → logprob: -9.50042724609375
    4. ')' → logprob: -11.75042724609375
    5. '   ' → logprob: -12.62542724609375
    6. ']' → logprob: -13.50042724609375
    7. '+' → logprob: -13.50042724609375
    8. ')][' → logprob: -14.25042724609375
    9. ')]
' → logprob: -14.37542724609375
    10. ' )' → logprob: -14.50042724609375

Token 627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15447190403938293
    2. '	dp' → logprob: -2.4044718742370605
    3. 'dp' → logprob: -3.1544718742370605
    4. ' dp' → logprob: -5.0294718742370605
    5. '   ' → logprob: -6.2794718742370605
    6. '<|end|>' → logprob: -7.5294718742370605
    7. '[' → logprob: -7.6544718742370605
    8. '(dp' → logprob: -7.7794718742370605
    9. '        
' → logprob: -9.529472351074219
    10. '	' → logprob: -10.154472351074219

Token 628: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.13491860032081604
    2. ' dp' → logprob: -2.384918689727783
    3. '       ' → logprob: -3.384918689727783
    4. '	dp' → logprob: -8.634918212890625
    5. '   ' → logprob: -10.134918212890625
    6. '_dp' → logprob: -11.634918212890625
    7. '(dp' → logprob: -12.134918212890625
    8. '[' → logprob: -14.009918212890625
    9. '        
' → logprob: -14.384918212890625
    10. ' ' → logprob: -14.384918212890625

Token 629: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. '0' → logprob: -12.125007629394531
    3. '][' → logprob: -14.375007629394531
    4. ' [' → logprob: -14.625007629394531
    5. '=' → logprob: -15.375007629394531
    6. ')[' → logprob: -16.12500762939453
    7. '```' → logprob: -16.12500762939453
    8. '   ' → logprob: -17.00000762939453
    9. '\[' → logprob: -17.12500762939453
    10. '[[' → logprob: -17.62500762939453

Token 630: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009174126898869872
    2. '1' → logprob: -7.000917434692383
    3. '[' → logprob: -12.250917434692383
    4. '(' → logprob: -14.750917434692383
    5. '][' → logprob: -15.500917434692383
    6. ' ' → logprob: -15.625917434692383
    7. '000' → logprob: -16.000917434692383
    8. '
' → logprob: -16.250917434692383
    9. '   ' → logprob: -16.750917434692383
    10. '01' → logprob: -16.938417434692383

Token 631: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006743439007550478
    2. '[' → logprob: -5.006743431091309
    3. ']' → logprob: -11.256743431091309
    4. ' ][' → logprob: -11.631743431091309
    5. '0' → logprob: -13.381743431091309
    6. ')][' → logprob: -14.006743431091309
    7. '>[' → logprob: -14.256743431091309
    8. ')[' → logprob: -14.256743431091309
    9. '       ' → logprob: -14.381743431091309
    10. '   ' → logprob: -14.506743431091309

Token 632: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '۰' → logprob: -18.875
    4. '০' → logprob: -20.125
    5. 'start' → logprob: -20.875
    6. '０' → logprob: -21.8125
    7. '٠' → logprob: -21.875
    8. 'a' → logprob: -22.25
    9. '000' → logprob: -22.25
    10. '=' → logprob: -22.4375

Token 633: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001564586127642542
    2. ']=' → logprob: -9.12515640258789
    3. '=' → logprob: -10.37515640258789
    4. ' ]' → logprob: -11.37515640258789
    5. ' =' → logprob: -12.25015640258789
    6. ']=-' → logprob: -18.00015640258789
    7. ')' → logprob: -18.37515640258789
    8. '`]' → logprob: -18.50015640258789
    9. ']+=' → logprob: -18.75015640258789
    10. '[' → logprob: -19.00015640258789

Token 634: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868713676929474
    2. ' =' → logprob: -1.136871337890625
    3. ']=' → logprob: -16.261871337890625
    4. ',' → logprob: -16.761871337890625
    5. '＝' → logprob: -16.761871337890625
    6. ']' → logprob: -17.011871337890625
    7. '0' → logprob: -17.136871337890625
    8. ' ' → logprob: -17.136871337890625
    9. ' ' → logprob: -17.761871337890625
    10. '	' → logprob: -18.011871337890625

Token 635: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '۰' → logprob: -20.375
    4. '   ' → logprob: -21.5
    5. '０' → logprob: -22.375
    6. '=' → logprob: -23.0
    7. '```' → logprob: -23.5
    8. '00' → logprob: -23.5
    9. '٠' → logprob: -23.875
    10. '000' → logprob: -24.0

Token 636: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '۰' → logprob: -21.625
    4. '   ' → logprob: -22.875
    5. '０' → logprob: -23.375
    6. '=' → logprob: -24.0
    7. '০' → logprob: -25.125
    8. '٠' → logprob: -25.25
    9. '00' → logprob: -25.5
    10. '000' → logprob: -25.625

Token 637: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4857308864593506
    2. '<|end|>' → logprob: -1.1107308864593506
    3. '
' → logprob: -3.9857308864593506
    4. ' for' → logprob: -4.73573112487793
    5. '   ' → logprob: -5.23573112487793
    6. ' 
' → logprob: -5.48573112487793
    7. '        
' → logprob: -5.61073112487793
    8. '  
' → logprob: -6.11073112487793
    9. ' ' → logprob: -6.48573112487793
    10. 'for' → logprob: -6.61073112487793

Token 638: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01643361896276474
    2. ' for' → logprob: -4.7664337158203125
    3. '   ' → logprob: -5.3914337158203125
    4. '
' → logprob: -6.6414337158203125
    5. 'for' → logprob: -7.7664337158203125
    6. ' 
' → logprob: -8.141433715820312
    7. '	' → logprob: -8.266433715820312
    8. ' ' → logprob: -8.891433715820312
    9. '        
' → logprob: -8.891433715820312
    10. '    ' → logprob: -9.016433715820312

Token 639: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.025072090327739716
    2. ' for' → logprob: -4.27507209777832
    3. '       ' → logprob: -4.52507209777832
    4. '   ' → logprob: -11.15007209777832
    5. '           ' → logprob: -15.02507209777832
    6. '        ' → logprob: -15.52507209777832
    7. '	for' → logprob: -15.65007209777832
    8. 'from' → logprob: -16.40007209777832
    9. 'mask' → logprob: -16.90007209777832
    10. '    ' → logprob: -17.15007209777832

Token 640: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0003384422743692994
    2. ' mask' → logprob: -8.000338554382324
    3. '_mask' → logprob: -13.125338554382324
    4. 'm' → logprob: -14.500338554382324
    5. '(mask' → logprob: -15.750338554382324
    6. '	mask' → logprob: -15.750338554382324
    7. '   ' → logprob: -17.125337600708008
    8. 'ms' → logprob: -17.625337600708008
    9. 'i' → logprob: -17.750337600708008
    10. 'MASK' → logprob: -18.750337600708008

Token 641: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017167085316032171
    2. 'in' → logprob: -6.376716613769531
    3. ' ' → logprob: -11.751716613769531
    4. '1' → logprob: -13.001716613769531
    5. ',' → logprob: -13.876716613769531
    6. '[' → logprob: -14.376716613769531
    7. ' ,' → logprob: -14.751716613769531
    8. '   ' → logprob: -14.876716613769531
    9. '_' → logprob: -15.251716613769531
    10. ' ' → logprob: -15.251716613769531

Token 642: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043221889063715935
    2. ' range' → logprob: -7.750432014465332
    3. '(range' → logprob: -13.625432014465332
    4. 'SIZE' → logprob: -15.375432014465332
    5. ')' → logprob: -17.12543296813965
    6. '(S' → logprob: -17.25043296813965
    7. '
' → logprob: -17.62543296813965
    8. 'r' → logprob: -18.25043296813965
    9. '(' → logprob: -18.37543296813965
    10. 'size' → logprob: -18.50043296813965

Token 643: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.013319872319698334
    2. '(' → logprob: -4.388319969177246
    3. '1' → logprob: -7.638319969177246
    4. 'SIZE' → logprob: -8.263319969177246
    5. '   ' → logprob: -10.638319969177246
    6. 'S' → logprob: -11.013319969177246
    7. ' (' → logprob: -11.388319969177246
    8. '0' → logprob: -12.388319969177246
    9. ')' → logprob: -12.388319969177246
    10. ' SIZE' → logprob: -12.638319969177246

Token 644: 'IZE' (ID: 5950)
  Prédit: 'IZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IZE' → logprob: -0.14286138117313385
    2. 'Z' → logprob: -3.2678613662719727
    3. '1' → logprob: -3.5178613662719727
    4. '+' → logprob: -4.142861366271973
    5. 'I' → logprob: -4.392861366271973
    6. ')' → logprob: -4.767861366271973
    7. 'ize' → logprob: -5.142861366271973
    8. 'SIZE' → logprob: -5.142861366271973
    9. '   ' → logprob: -5.517861366271973
    10. '(' → logprob: -5.642861366271973

Token 645: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.533225417137146
    2. '):' → logprob: -0.908225417137146
    3. '+' → logprob: -5.6582255363464355
    4. ' ):' → logprob: -6.1582255363464355
    5. '   ' → logprob: -6.2832255363464355
    6. ' ):
' → logprob: -7.0332255363464355
    7. ')' → logprob: -7.4082255363464355
    8. '       ' → logprob: -7.7832255363464355
    9. ' +' → logprob: -8.158225059509277
    10. ':' → logprob: -8.783225059509277

Token 646: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004499192815274
    2. '	       ' → logprob: -6.1294989585876465
    3. '       ' → logprob: -6.8794989585876465
    4. '   ' → logprob: -6.8794989585876465
    5. ' for' → logprob: -9.254499435424805
    6. '	   ' → logprob: -9.379499435424805
    7. '               ' → logprob: -10.379499435424805
    8. '		' → logprob: -10.879499435424805
    9. '		   ' → logprob: -11.379499435424805
    10. '	           ' → logprob: -13.004499435424805

Token 647: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12949317693710327
    2. '           ' → logprob: -2.754493236541748
    3. 'for' (adapté à ' for') → logprob: -3.254493236541748
    4. '   ' → logprob: -4.379493236541748
    5. '       ' → logprob: -5.129493236541748
    6. '               ' → logprob: -7.629493236541748
    7. '	       ' → logprob: -9.37949275970459
    8. ' ' → logprob: -9.50449275970459
    9. '	for' → logprob: -9.50449275970459
    10. ' ' → logprob: -11.12949275970459

Token 648: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002508239820599556
    2. 'u' → logprob: -6.002508163452148
    3. ' i' → logprob: -10.752508163452148
    4. 'cur' → logprob: -12.127508163452148
    5. 'current' → logprob: -12.877508163452148
    6. 'curr' → logprob: -13.002508163452148
    7. 'j' → logprob: -14.252508163452148
    8. 'pos' → logprob: -15.752508163452148
    9. ' u' → logprob: -16.12750816345215
    10. 'last' → logprob: -16.37750816345215

Token 649: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10021918267011642
    2. 'in' → logprob: -2.350219249725342
    3. '	in' → logprob: -11.725218772888184
    4. 'n' → logprob: -13.100218772888184
    5. ' ' → logprob: -13.600218772888184
    6. '   ' → logprob: -14.850218772888184
    7. '0' → logprob: -15.850218772888184
    8. 'In' → logprob: -16.2252197265625
    9. '1' → logprob: -16.2252197265625
    10. '  ' → logprob: -16.4752197265625

Token 650: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04450968652963638
    2. 'n' → logprob: -3.2945096492767334
    3. ' range' → logprob: -5.0445098876953125
    4. '[n' → logprob: -13.544509887695312
    5. '(range' → logprob: -14.294509887695312
    6. ' n' → logprob: -14.669509887695312
    7. '(n' → logprob: -15.419509887695312
    8. '
' → logprob: -15.919509887695312
    9. '0' → logprob: -16.169509887695312
    10. '	range' → logprob: -18.044509887695312

Token 651: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031929241959005594
    2. '(n' → logprob: -5.753192901611328
    3. ' n' → logprob: -11.878192901611328
    4. '	n' → logprob: -13.128192901611328
    5. ')n' → logprob: -13.128192901611328
    6. '           ' → logprob: -13.253192901611328
    7. '   ' → logprob: -14.503192901611328
    8. '[n' → logprob: -14.503192901611328
    9. '(' → logprob: -14.628192901611328
    10. '       ' → logprob: -15.253192901611328

Token 652: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20174913108348846
    2. '):' → logprob: -1.7017490863800049
    3. ')' → logprob: -8.201748847961426
    4. '):

' → logprob: -10.451748847961426
    5. '           ' → logprob: -11.451748847961426
    6. '):
' → logprob: -11.951748847961426
    7. '       ' → logprob: -12.451748847961426
    8. '               ' → logprob: -12.826748847961426
    9. ' ):
' → logprob: -13.701748847961426
    10. ' ):' → logprob: -13.951748847961426

Token 653: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002142650482710451
    2. ' if' → logprob: -9.875214576721191
    3. '                
' → logprob: -10.250214576721191
    4. '<|end|>' → logprob: -10.625214576721191
    5. '           ' → logprob: -11.250214576721191
    6. '	           ' → logprob: -11.375214576721191
    7. '                ' → logprob: -11.500214576721191
    8. ' ' → logprob: -11.750214576721191
    9. ',' → logprob: -11.875214576721191
    10. '		       ' → logprob: -12.000214576721191

Token 654: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3127407729625702
    2. '                   ' → logprob: -1.8127408027648926
    3. ' if' → logprob: -2.3127408027648926
    4. '                ' → logprob: -5.562740802764893
    5. 'if' (adapté à ' if') → logprob: -7.062740802764893
    6. '	               ' → logprob: -7.937740802764893
    7. '                       ' → logprob: -8.187740325927734
    8. '			' → logprob: -8.937740325927734
    9. '				' → logprob: -9.312740325927734
    10. '                    ' → logprob: -9.312740325927734

Token 655: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002614550176076591
    2. ' dp' → logprob: -8.250261306762695
    3. '	dp' → logprob: -16.125261306762695
    4. '   ' → logprob: -18.750261306762695
    5. '(dp' → logprob: -19.750261306762695
    6. 'd' → logprob: -20.375261306762695
    7. '_dp' → logprob: -21.125261306762695
    8. '0' → logprob: -21.250261306762695
    9. '           ' → logprob: -21.375261306762695
    10. '
' → logprob: -22.250261306762695

Token 656: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. ' [' → logprob: -13.12500286102295
    3. '][' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '[i' → logprob: -16.625001907348633
    6. 'mask' → logprob: -16.750001907348633
    7. '[m' → logprob: -16.875001907348633
    8. ')[' → logprob: -16.875001907348633
    9. '```' → logprob: -17.125001907348633
    10. '
' → logprob: -18.000001907348633

Token 657: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -2.2961512513575144e-05
    2. ' mask' → logprob: -11.000022888183594
    3. '	mask' → logprob: -13.375022888183594
    4. '[' → logprob: -13.500022888183594
    5. '(mask' → logprob: -14.125022888183594
    6. 'i' → logprob: -14.250022888183594
    7. '   ' → logprob: -14.375022888183594
    8. 'm' → logprob: -15.125022888183594
    9. '0' → logprob: -15.250022888183594
    10. ' ' → logprob: -15.250022888183594

Token 658: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.29953357577323914
    2. '][' → logprob: -1.4245336055755615
    3. '[' → logprob: -4.674533367156982
    4. '                   ' → logprob: -5.674533367156982
    5. '               ' → logprob: -6.549533367156982
    6. ']' → logprob: -6.674533367156982
    7. ' ][' → logprob: -7.174533367156982
    8. '[j' → logprob: -7.924533367156982
    9. '                       ' → logprob: -7.924533367156982
    10. '[
' → logprob: -8.92453384399414

Token 659: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.704273118884885e-07
    2. ' i' → logprob: -14.375000953674316
    3. '-' → logprob: -17.75
    4. '   ' → logprob: -18.125
    5. '0' → logprob: -18.75
    6. '[i' → logprob: -19.375
    7. '
' → logprob: -19.375
    8. '	i' → logprob: -19.5
    9. '```' → logprob: -20.625
    10. 'I' → logprob: -20.875

Token 660: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1654207557439804
    2. '!=' → logprob: -2.5404207706451416
    3. '==-' → logprob: -3.6654207706451416
    4. ' ==' → logprob: -3.7904207706451416
    5. '>=' → logprob: -4.7904205322265625
    6. ' !=' → logprob: -4.7904205322265625
    7. '!=-' → logprob: -4.9154205322265625
    8. ')' → logprob: -6.7904205322265625
    9. ']==' → logprob: -8.665420532226562
    10. ']' → logprob: -9.790420532226562

Token 661: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25182586908340454
    2. '!=' → logprob: -2.1268258094787598
    3. '==-' → logprob: -2.7518258094787598
    4. '!=-' → logprob: -4.25182580947876
    5. ' ==' → logprob: -4.37682580947876
    6. ' !=' → logprob: -5.00182580947876
    7. '>=' → logprob: -5.12682580947876
    8. '<' → logprob: -9.251826286315918
    9. ')' → logprob: -12.126826286315918
    10. '==
' → logprob: -12.501826286315918

Token 662: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.676292231422849e-05
    2. ' -' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.875017166137695
    4. ' ' → logprob: -20.750017166137695
    5. '0' → logprob: -21.375017166137695
    6. '	' → logprob: -21.625017166137695
    7. 'not' → logprob: -21.750017166137695
    8. '-not' → logprob: -22.250017166137695
    9. '  ' → logprob: -22.375017166137695
    10. '```' → logprob: -23.500017166137695

Token 663: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -16.750001907348633
    4. '-' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '2' → logprob: -17.250001907348633
    7. '
' → logprob: -17.500001907348633
    8. '`' → logprob: -18.375001907348633
    9. '``' → logprob: -18.812501907348633
    10. ' -' → logprob: -18.875001907348633

Token 664: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.045994408428668976
    2. ':' → logprob: -3.295994520187378
    3. ':
' → logprob: -5.545994281768799
    4. ' or' → logprob: -6.295994281768799
    5. '                       ' → logprob: -6.420994281768799
    6. '               ' → logprob: -8.045994758605957
    7. '                           ' → logprob: -10.045994758605957
    8. '                  ' → logprob: -10.420994758605957
    9. ' continue' → logprob: -10.420994758605957
    10. '   ' → logprob: -11.170994758605957

Token 665: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005742017645388842
    2. '                       ' → logprob: -5.380742073059082
    3. '               ' → logprob: -7.505742073059082
    4. '                    
' → logprob: -8.880742073059082
    5. '	               ' → logprob: -9.255742073059082
    6. ' continue' → logprob: -9.505742073059082
    7. '                    ' → logprob: -10.380742073059082
    8. '                               ' → logprob: -10.505742073059082
    9. '				' → logprob: -10.630742073059082
    10. '                ' → logprob: -10.880742073059082

Token 666: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5141400098800659
    2. 'continue' (adapté à ' continue') → logprob: -1.014140009880066
    3. '                   ' → logprob: -3.7641401290893555
    4. '                       ' → logprob: -4.2641401290893555
    5. '	continue' → logprob: -6.3891401290893555
    6. '               ' → logprob: -9.014140129089355
    7. '                           ' → logprob: -9.639140129089355
    8. '                               ' → logprob: -10.014140129089355
    9. '_continue' → logprob: -10.264140129089355
    10. '				' → logprob: -11.014140129089355

Token 667: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13440191745758057
    2. '                   ' → logprob: -2.259401798248291
    3. '                    
' → logprob: -5.134401798248291
    4. '                
' → logprob: -5.259401798248291
    5. '                ' → logprob: -5.884401798248291
    6. ' 
' → logprob: -6.009401798248291
    7. '
' → logprob: -6.634401798248291
    8. '                       ' → logprob: -7.009401798248291
    9. '                        
' → logprob: -7.634401798248291
    10. '           ' → logprob: -8.50940227508545

Token 668: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03653687238693237
    2. '                   ' → logprob: -3.911536931991577
    3. '                
' → logprob: -4.661536693572998
    4. '                ' → logprob: -5.786536693572998
    5. '                    
' → logprob: -6.161536693572998
    6. ' 
' → logprob: -8.286537170410156
    7. '                 
' → logprob: -8.661537170410156
    8. '                       ' → logprob: -9.161537170410156
    9. '                        
' → logprob: -9.161537170410156
    10. '                    ' → logprob: -9.911537170410156

Token 669: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21468180418014526
    2. '               ' → logprob: -1.96468186378479
    3. ' for' → logprob: -2.96468186378479
    4. '                   ' → logprob: -6.714681625366211
    5. '   ' → logprob: -8.589681625366211
    6. 'next' → logprob: -11.714681625366211
    7. '	for' → logprob: -11.964681625366211
    8. '           ' → logprob: -12.089681625366211
    9. '                ' → logprob: -13.339681625366211
    10. ' ' → logprob: -13.464681625366211

Token 670: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006371197756379843
    2. 'next' → logprob: -5.381371021270752
    3. ' nxt' → logprob: -7.006371021270752
    4. 'k' → logprob: -7.131371021270752
    5. 'nj' → logprob: -11.00637149810791
    6. ' j' → logprob: -11.75637149810791
    7. 'nx' → logprob: -11.75637149810791
    8. 'n' → logprob: -13.00637149810791
    9. 'nid' → logprob: -13.38137149810791
    10. 'to' → logprob: -13.63137149810791

Token 671: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994132697582245
    2. 'in' → logprob: -2.694941282272339
    3. '	in' → logprob: -13.194941520690918
    4. '1' → logprob: -13.944941520690918
    5. ' ' → logprob: -14.069941520690918
    6. '0' → logprob: -14.944941520690918
    7. 'i' → logprob: -16.0699405670166
    8. ',' → logprob: -16.1949405670166
    9. '_in' → logprob: -16.1949405670166
    10. 'n' → logprob: -16.3199405670166

Token 672: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804849088191986
    2. ' range' → logprob: -3.288048505783081
    3. '(range' → logprob: -11.91304874420166
    4. 'n' → logprob: -16.038047790527344
    5. '1' → logprob: -16.288047790527344
    6. 'in' → logprob: -16.913047790527344
    7. '(' → logprob: -17.788047790527344
    8. '	range' → logprob: -17.913047790527344
    9. ' in' → logprob: -18.038047790527344
    10. '   ' → logprob: -19.288047790527344

Token 673: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.595088005065918
    2. '1' → logprob: -0.845088005065918
    3. '(n' → logprob: -4.095088005065918
    4. 'n' → logprob: -6.095088005065918
    5. 'range' → logprob: -10.470088005065918
    6. ' ' → logprob: -11.220088005065918
    7. ' (' → logprob: -11.720088005065918
    8. '   ' → logprob: -12.845088005065918
    9. ' n' → logprob: -13.095088005065918
    10. '
' → logprob: -13.970088005065918

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003872974484693259
    2. 'n' → logprob: -7.875387191772461
    3. ' ' → logprob: -12.125387191772461
    4. '   ' → logprob: -14.000387191772461
    5. '
' → logprob: -15.375387191772461
    6. '(' → logprob: -15.500387191772461
    7. ' n' → logprob: -15.625387191772461
    8. '

' → logprob: -16.87538719177246
    9. '           ' → logprob: -17.00038719177246
    10. '(n' → logprob: -17.25038719177246

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.61194908618927
    2. ',n' → logprob: -0.86194908618927
    3. 'n' → logprob: -3.3619489669799805
    4. '               ' → logprob: -8.86194896697998
    5. ' n' → logprob: -8.98694896697998
    6. ' ,' → logprob: -9.11194896697998
    7. '(n' → logprob: -9.61194896697998
    8. '<n' → logprob: -9.61194896697998
    9. '                   ' → logprob: -9.98694896697998
    10. '           ' → logprob: -10.11194896697998

Token 676: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.2994620242971e-06
    2. ' n' → logprob: -11.750008583068848
    3. ')n' → logprob: -15.250008583068848
    4. '	n' → logprob: -16.75000762939453
    5. '(n' → logprob: -18.37500762939453
    6. '_n' → logprob: -18.62500762939453
    7. ',n' → logprob: -19.12500762939453
    8. '<n' → logprob: -19.37500762939453
    9. 'n't' → logprob: -19.50000762939453
    10. '<|end|>' → logprob: -19.75000762939453

Token 677: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.038442377001047134
    2. '):' → logprob: -3.288442373275757
    3. '                   ' → logprob: -9.663442611694336
    4. ')' → logprob: -9.788442611694336
    5. '               ' → logprob: -10.038442611694336
    6. ']:
' → logprob: -10.163442611694336
    7. '():
' → logprob: -10.288442611694336
    8. '                       ' → logprob: -10.663442611694336
    9. '):

' → logprob: -11.038442611694336
    10. ':
' → logprob: -11.038442611694336

Token 678: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.032923076301813126
    2. '<|end|>' → logprob: -4.907923221588135
    3. '                       ' → logprob: -5.157923221588135
    4. '               ' → logprob: -5.157923221588135
    5. '                               ' → logprob: -6.032923221588135
    6. '                    
' → logprob: -6.157923221588135
    7. '                ' → logprob: -6.407923221588135
    8. '                           ' → logprob: -6.407923221588135
    9. '                    ' → logprob: -6.782923221588135
    10. ' ' → logprob: -6.782923221588135

Token 679: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5941787958145142
    2. '                   ' → logprob: -1.3441787958145142
    3. ' if' → logprob: -1.9691787958145142
    4. '                    ' → logprob: -3.8441786766052246
    5. '               ' → logprob: -4.969178676605225
    6. 'if' (adapté à ' if') → logprob: -5.344178676605225
    7. ' ' → logprob: -5.469178676605225
    8. '                ' → logprob: -5.844178676605225
    9. '                        ' → logprob: -5.969178676605225
    10. ',' → logprob: -6.719178676605225

Token 680: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9227763414382935
    2. '(mask' → logprob: -0.9227763414382935
    3. 'not' → logprob: -1.7977763414382935
    4. ' (' → logprob: -4.047776222229004
    5. '(not' → logprob: -4.172776222229004
    6. 'mask' → logprob: -5.547776222229004
    7. '((' → logprob: -6.297776222229004
    8. ' mask' → logprob: -7.672776222229004
    9. '(dp' → logprob: -8.922776222229004
    10. '(' → logprob: -9.172776222229004

Token 681: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.03962084278464317
    2. '(mask' → logprob: -3.289620876312256
    3. 'not' → logprob: -6.789620876312256
    4. ' mask' → logprob: -7.914620876312256
    5. ' (' → logprob: -10.914620399475098
    6. ' not' → logprob: -11.039620399475098
    7. '(not' → logprob: -11.164620399475098
    8. '(' → logprob: -12.039620399475098
    9. '_mask' → logprob: -12.039620399475098
    10. '	mask' → logprob: -12.164620399475098

Token 682: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.01822439394891262
    2. '&' → logprob: -4.143224239349365
    3. '>>' → logprob: -6.518224239349365
    4. '&(' → logprob: -7.393224239349365
    5. ' >>' → logprob: -9.893224716186523
    6. ' &(' → logprob: -11.393224716186523
    7. '|' → logprob: -11.893224716186523
    8. '>>(' → logprob: -12.018224716186523
    9. '&nbsp' → logprob: -12.143224716186523
    10. '&amp' → logprob: -12.768224716186523

Token 683: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011060434393584728
    2. ' (' → logprob: -4.5110602378845215
    3. '((' → logprob: -11.88606071472168
    4. '(j' → logprob: -12.51106071472168
    5. ')' → logprob: -14.01106071472168
    6. '   ' → logprob: -14.38606071472168
    7. '1' → logprob: -15.13606071472168
    8. ' ((' → logprob: -16.38606071472168
    9. 'j' → logprob: -17.13606071472168
    10. '
' → logprob: -17.13606071472168

Token 684: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00537581043317914
    2. '1' → logprob: -5.255375862121582
    3. ' (' → logprob: -8.880375862121582
    4. '(j' → logprob: -14.005375862121582
    5. ')' → logprob: -14.130375862121582
    6. '
' → logprob: -14.505375862121582
    7. ' ' → logprob: -15.130375862121582
    8. '(S' → logprob: -15.255375862121582
    9. '   ' → logprob: -15.380375862121582
    10. '(mask' → logprob: -16.130374908447266

Token 685: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0028274620417505503
    2. '<<(' → logprob: -6.2528276443481445
    3. ' <<' → logprob: -7.1278276443481445
    4. '<' → logprob: -9.502827644348145
    5. ')' → logprob: -11.627827644348145
    6. '(' → logprob: -12.627827644348145
    7. '1' → logprob: -13.252827644348145
    8. '   ' → logprob: -13.502827644348145
    9. '>>' → logprob: -13.627827644348145
    10. ')<<' → logprob: -14.127827644348145

Token 686: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.5928495486150496e-05
    2. ' (' → logprob: -11.500016212463379
    3. '(' → logprob: -12.500016212463379
    4. 'j' → logprob: -13.875016212463379
    5. '   ' → logprob: -14.750016212463379
    6. '((' → logprob: -15.125016212463379
    7. '[j' → logprob: -15.625016212463379
    8. '
' → logprob: -16.625015258789062
    9. '(
' → logprob: -16.625015258789062
    10. '(J' → logprob: -17.625015258789062

Token 687: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008643174543976784
    2. '(j' → logprob: -4.75864315032959
    3. ' j' → logprob: -10.88364315032959
    4. '
' → logprob: -12.38364315032959
    5. '[j' → logprob: -13.38364315032959
    6. ' (' → logprob: -13.38364315032959
    7. '   ' → logprob: -13.63364315032959
    8. '	j' → logprob: -15.00864315032959
    9. '(' → logprob: -15.13364315032959
    10. ',j' → logprob: -16.008644104003906

Token 688: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018182484433054924
    2. ' -' → logprob: -4.018182277679443
    3. '1' → logprob: -10.768182754516602
    4. '
' → logprob: -12.893182754516602
    5. '-
' → logprob: -13.268182754516602
    6. '))' → logprob: -13.643182754516602
    7. ')' → logprob: -13.643182754516602
    8. '   ' → logprob: -13.643182754516602
    9. ' ' → logprob: -14.518182754516602
    10. '[' → logprob: -14.768182754516602

Token 689: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '0' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '
' → logprob: -16.875001907348633
    6. '

' → logprob: -17.000001907348633
    7. ')' → logprob: -17.125001907348633
    8. 'j' → logprob: -17.250001907348633
    9. '```' → logprob: -17.875001907348633
    10. '2' → logprob: -18.937501907348633

Token 690: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009176511666737497
    2. ')))' → logprob: -7.000917434692383
    3. ')' → logprob: -12.500917434692383
    4. ' ))' → logprob: -13.000917434692383
    5. '0' → logprob: -16.625917434692383
    6. ' ' → logprob: -17.625917434692383
    7. ''))' → logprob: -17.750917434692383
    8. '   ' → logprob: -17.875917434692383
    9. '==' → logprob: -18.750917434692383
    10. '}))' → logprob: -19.000917434692383

Token 691: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07644079625606537
    2. ' ==' → logprob: -2.7014408111572266
    3. ')==' → logprob: -5.451440811157227
    4. ')' → logprob: -6.201440811157227
    5. ']==' → logprob: -8.826440811157227
    6. '==
' → logprob: -11.951440811157227
    7. '===' → logprob: -12.701440811157227
    8. '=' → logprob: -13.076440811157227
    9. ']' → logprob: -13.076440811157227
    10. '0' → logprob: -13.076440811157227

Token 692: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -21.50000762939453
    4. '０' → logprob: -22.00000762939453
    5. ')' → logprob: -22.50000762939453
    6. ' ' → logprob: -22.75000762939453
    7. '   ' → logprob: -23.00000762939453
    8. '	' → logprob: -23.12500762939453
    9. '  ' → logprob: -23.50000762939453
    10. '00' → logprob: -23.62500762939453

Token 693: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -22.125001907348633
    4. '۰' → logprob: -22.875001907348633
    5. '```' → logprob: -23.250001907348633
    6. '000' → logprob: -23.250001907348633
    7. '                   ' → logprob: -23.625001907348633
    8. '０' → logprob: -23.875001907348633
    9. '00' → logprob: -24.250001907348633
    10. '  ' → logprob: -24.250001907348633

Token 694: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06321004778146744
    2. '                       ' → logprob: -2.9382100105285645
    3. ':' → logprob: -5.3132100105285645
    4. ':
' → logprob: -6.5632100105285645
    5. '                   ' → logprob: -6.9382100105285645
    6. 'and' → logprob: -7.6882100105285645
    7. '                        ' → logprob: -8.938210487365723
    8. '                    ' → logprob: -9.313210487365723
    9. '                           ' → logprob: -9.563210487365723
    10. ',' → logprob: -9.688210487365723

Token 695: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009138475870713592
    2. ' dist' → logprob: -7.000913619995117
    3. '                   ' → logprob: -13.875913619995117
    4. '(dist' → logprob: -14.125913619995117
    5. '	dist' → logprob: -14.625913619995117
    6. '                       ' → logprob: -16.250913619995117
    7. '                           ' → logprob: -16.250913619995117
    8. '               ' → logprob: -16.875913619995117
    9. '   ' → logprob: -17.375913619995117
    10. '_dist' → logprob: -18.875913619995117

Token 696: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[j' → logprob: -14.375001907348633
    3. 'i' → logprob: -14.500001907348633
    4. ' [' → logprob: -16.625001907348633
    5. '[I' → logprob: -16.625001907348633
    6. '[' → logprob: -17.000001907348633
    7. '```' → logprob: -18.625001907348633
    8. ')[' → logprob: -18.625001907348633
    9. '[
' → logprob: -18.750001907348633
    10. '[u' → logprob: -19.125001907348633

Token 697: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3486558496952057
    2. '[j' → logprob: -1.2236558198928833
    3. '[' → logprob: -9.598655700683594
    4. ')[' → logprob: -9.723655700683594
    5. ']' → logprob: -10.723655700683594
    6. 'j' → logprob: -11.473655700683594
    7. ' ][' → logprob: -11.723655700683594
    8. '}[' → logprob: -11.848655700683594
    9. '```' → logprob: -12.098655700683594
    10. '>[' → logprob: -12.348655700683594

Token 698: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.5941604690160602e-05
    2. '[j' → logprob: -11.000025749206543
    3. ' j' → logprob: -11.625025749206543
    4. '	j' → logprob: -16.50002670288086
    5. '][' → logprob: -16.87502670288086
    6. '[' → logprob: -18.37502670288086
    7. '   ' → logprob: -18.75002670288086
    8. ' ' → logprob: -19.00002670288086
    9. '_j' → logprob: -19.00002670288086
    10. '```' → logprob: -19.25002670288086

Token 699: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.8973598480224609
    2. ' !=' → logprob: -1.022359848022461
    3. ']' → logprob: -2.272359848022461
    4. '!=-' → logprob: -2.897359848022461
    5. ']!=' → logprob: -3.147359848022461
    6. ')' → logprob: -3.647359848022461
    7. ')!=' → logprob: -5.522359848022461
    8. '>' → logprob: -7.397359848022461
    9. '>=' → logprob: -8.522359848022461
    10. '                   ' → logprob: -9.022359848022461

Token 700: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.030494702979922295
    2. '!=-' → logprob: -3.6554946899414062
    3. ' !=' → logprob: -5.530494689941406
    4. '>=' → logprob: -8.655494689941406
    5. ']!=' → logprob: -11.405494689941406
    6. ')!=' → logprob: -11.405494689941406
    7. '!==' → logprob: -11.530494689941406
    8. '()!=' → logprob: -11.905494689941406
    9. '>' → logprob: -11.905494689941406
    10. '```' → logprob: -15.280494689941406

Token 701: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.941850526549388e-06
    2. ' -' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.00000762939453
    4. '	' → logprob: -20.87500762939453
    5. ' ' → logprob: -21.00000762939453
    6. '```' → logprob: -21.75000762939453
    7. '  ' → logprob: -22.87500762939453
    8. '−' → logprob: -23.50000762939453
    9. '‌' → logprob: -23.87500762939453
    10. '\-' → logprob: -24.75000762939453

Token 702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. '-' → logprob: -12.625005722045898
    3. '```' → logprob: -13.750005722045898
    4. ' ' → logprob: -14.125005722045898
    5. ' -' → logprob: -14.875005722045898
    6. '2' → logprob: -15.875005722045898
    7. '   ' → logprob: -16.6250057220459
    8. '``' → logprob: -17.5000057220459
    9. '0' → logprob: -17.5625057220459
    10. '`' → logprob: -17.6875057220459

Token 703: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3563862144947052
    2. ':
' → logprob: -1.4813861846923828
    3. '                       ' → logprob: -3.231386184692383
    4. ' and' → logprob: -3.731386184692383
    5. '                   ' → logprob: -4.856386184692383
    6. '):
' → logprob: -8.356386184692383
    7. '                           ' → logprob: -8.481386184692383
    8. 'and' → logprob: -8.731386184692383
    9. ',' → logprob: -9.106386184692383
    10. ':

' → logprob: -9.481386184692383

Token 704: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.029206257313489914
    2. '                   ' → logprob: -4.529206275939941
    3. ' ' → logprob: -5.279206275939941
    4. '                    ' → logprob: -5.654206275939941
    5. '                        ' → logprob: -6.154206275939941
    6. '                           ' → logprob: -6.279206275939941
    7. '                        
' → logprob: -6.529206275939941
    8. '                               ' → logprob: -6.779206275939941
    9. '<|end|>' → logprob: -7.279206275939941
    10. '[' → logprob: -7.779206275939941

Token 705: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7208186984062195
    2. ' next' → logprob: -1.4708187580108643
    3. ' dp' → logprob: -1.7208187580108643
    4. ' nd' → logprob: -3.4708187580108643
    5. 'dp' → logprob: -4.095818519592285
    6. ' cost' → logprob: -4.095818519592285
    7. ' if' → logprob: -4.095818519592285
    8. ' nxt' → logprob: -4.970818519592285
    9. 'next' → logprob: -5.220818519592285
    10. 'new' (adapté à ' new') → logprob: -6.095818519592285

Token 706: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0005623269826173782
    2. 'mask' → logprob: -7.5005621910095215
    3. 'Mask' → logprob: -11.87556266784668
    4. '_' → logprob: -13.75056266784668
    5. '_MASK' → logprob: -15.12556266784668
    6. '_dist' → logprob: -15.62556266784668
    7. ' mask' → logprob: -15.87556266784668
    8. '_cost' → logprob: -15.87556266784668
    9. '_masks' → logprob: -15.87556266784668
    10. ' _' → logprob: -16.12556266784668

Token 707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132617771625519
    2. ' =' → logprob: -1.3132617473602295
    3. '＝' → logprob: -16.813261032104492
    4. '[' → logprob: -17.813261032104492
    5. ')' → logprob: -18.188261032104492
    6. ' ' → logprob: -18.438261032104492
    7. '=
' → logprob: -18.438261032104492
    8. ' =
' → logprob: -19.563261032104492
    9. ']' → logprob: -19.688261032104492
    10. '	' → logprob: -19.688261032104492

Token 708: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.029795266687870026
    2. ' mask' → logprob: -3.5297951698303223
    3. '(mask' → logprob: -10.02979564666748
    4. '	mask' → logprob: -14.27979564666748
    5. '   ' → logprob: -17.029794692993164
    6. ' ' → logprob: -17.404794692993164
    7. '_mask' → logprob: -17.529794692993164
    8. 'Mask' → logprob: -19.029794692993164
    9. '.mask' → logprob: -19.654794692993164
    10. '  ' → logprob: -20.154794692993164

Token 709: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.12707330286502838
    2. '|' → logprob: -2.127073287963867
    3. '|(' → logprob: -8.877073287963867
    4. '│' → logprob: -13.252073287963867
    5. ' |=' → logprob: -13.502073287963867
    6. ' ' → logprob: -13.627073287963867
    7. '[' → logprob: -15.252073287963867
    8. ')' → logprob: -15.877073287963867
    9. ' |
' → logprob: -15.877073287963867
    10. '|(
' → logprob: -15.877073287963867

Token 710: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759397745132446
    2. ' (' → logprob: -0.8259397745132446
    3. '1' → logprob: -15.200940132141113
    4. '                           ' → logprob: -16.950939178466797
    5. '                        ' → logprob: -17.450939178466797
    6. '                               ' → logprob: -17.700939178466797
    7. ' ' → logprob: -17.825939178466797
    8. '                       ' → logprob: -17.950939178466797
    9. '```' → logprob: -18.075939178466797
    10. ' ' → logprob: -18.450939178466797

Token 711: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007094219792634249
    2. ' (' → logprob: -5.007094383239746
    3. '1' → logprob: -7.882094383239746
    4. ' ' → logprob: -13.757094383239746
    5. '                           ' → logprob: -16.00709342956543
    6. '                               ' → logprob: -17.00709342956543
    7. '```' → logprob: -17.50709342956543
    8. '                       ' → logprob: -17.63209342956543
    9. '   ' → logprob: -17.88209342956543
    10. ')' → logprob: -18.00709342956543

Token 712: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.584791898727417
    2. ' <<' → logprob: -0.834791898727417
    3. '<<(' → logprob: -5.209792137145996
    4. '(' → logprob: -5.959792137145996
    5. '<' → logprob: -7.959792137145996
    6. '1' → logprob: -8.334792137145996
    7. ' (' → logprob: -9.209792137145996
    8. ')' → logprob: -11.209792137145996
    9. '```' → logprob: -11.584792137145996
    10. '                               ' → logprob: -11.584792137145996

Token 713: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -9.65101717156358e-05
    2. ' (' → logprob: -9.250096321105957
    3. 'j' → logprob: -15.875096321105957
    4. '(' → logprob: -15.875096321105957
    5. '((' → logprob: -16.750097274780273
    6. '   ' → logprob: -17.875097274780273
    7. '[j' → logprob: -18.000097274780273
    8. '(i' → logprob: -19.750097274780273
    9. '(
' → logprob: -20.375097274780273
    10. '(job' → logprob: -20.375097274780273

Token 714: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.31334030628204346
    2. 'j' → logprob: -1.3133403062820435
    3. ' (' → logprob: -10.063340187072754
    4. ' j' → logprob: -11.063340187072754
    5. '(' → logprob: -11.938340187072754
    6. '[j' → logprob: -12.688340187072754
    7. '(
' → logprob: -12.938340187072754
    8. '
' → logprob: -13.063340187072754
    9. '   ' → logprob: -13.563340187072754
    10. '	j' → logprob: -13.563340187072754

Token 715: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.9795445849886164e-05
    2. ' -' → logprob: -9.750060081481934
    3. ')-' → logprob: -14.000060081481934
    4. '1' → logprob: -15.500060081481934
    5. '-j' → logprob: -16.625059127807617
    6. ''-' → logprob: -16.625059127807617
    7. '[' → logprob: -17.000059127807617
    8. ')' → logprob: -17.125059127807617
    9. '[j' → logprob: -17.250059127807617
    10. '           ' → logprob: -17.375059127807617

Token 716: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011069540778407827
    2. 'j' → logprob: -10.125110626220703
    3. '(j' → logprob: -10.125110626220703
    4. '(' → logprob: -11.125110626220703
    5. ' ' → logprob: -12.250110626220703
    6. '-' → logprob: -12.625110626220703
    7. ' (' → logprob: -13.125110626220703
    8. '(i' → logprob: -13.500110626220703
    9. ')' → logprob: -13.750110626220703
    10. '0' → logprob: -14.375110626220703

Token 717: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012523548677563667
    2. ')
' → logprob: -4.387523651123047
    3. ')
' → logprob: -11.762523651123047
    4. ' )' → logprob: -13.262523651123047
    5. '                       ' → logprob: -13.762523651123047
    6. ')`' → logprob: -14.262523651123047
    7. '                           ' → logprob: -14.387523651123047
    8. ')

' → logprob: -14.387523651123047
    9. '))' → logprob: -14.512523651123047
    10. ' )
' → logprob: -15.762523651123047

Token 718: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0028141476213932037
    2. '                        
' → logprob: -6.877814292907715
    3. '                        ' → logprob: -7.627814292907715
    4. 'dp' → logprob: -7.877814292907715
    5. ',' → logprob: -8.627814292907715
    6. '                           ' → logprob: -8.877814292907715
    7. '
' → logprob: -9.252814292907715
    8. ')' → logprob: -9.252814292907715
    9. '					' → logprob: -9.252814292907715
    10. ' dp' → logprob: -10.127814292907715

Token 719: ' val' (ID: 1459)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1915796995162964
    2. 'if' → logprob: -1.3165796995162964
    3. 'new' → logprob: -1.6915796995162964
    4. ' new' → logprob: -2.441579818725586
    5. ' nd' → logprob: -2.566579818725586
    6. 'nd' → logprob: -3.566579818725586
    7. 'next' → logprob: -4.066579818725586
    8. 'cost' → logprob: -4.191579818725586
    9. 'val' (adapté à ' val') → logprob: -5.566579818725586
    10. ' next' → logprob: -5.691579818725586

Token 720: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142211019992828
    2. '=' → logprob: -1.701422095298767
    3. '   ' → logprob: -12.576421737670898
    4. '       ' → logprob: -13.951421737670898
    5. '           ' → logprob: -14.451421737670898
    6. '                   ' → logprob: -14.451421737670898
    7. '    ' → logprob: -14.701421737670898
    8. ']' → logprob: -14.701421737670898
    9. '                       ' → logprob: -14.701421737670898
    10. ' ' → logprob: -15.076421737670898

Token 721: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008616108447313309
    2. ' dp' → logprob: -4.758615970611572
    3. '	dp' → logprob: -13.63361644744873
    4. '(dp' → logprob: -15.00861644744873
    5. '.dp' → logprob: -18.133615493774414
    6. '   ' → logprob: -18.133615493774414
    7. 'd' → logprob: -18.258615493774414
    8. '_dp' → logprob: -18.383615493774414
    9. '                       ' → logprob: -18.883615493774414
    10. '                   ' → logprob: -18.883615493774414

Token 722: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -16.125
    3. '```' → logprob: -17.25
    4. '[m' → logprob: -17.5
    5. 'mask' → logprob: -18.0
    6. '][' → logprob: -18.625
    7. '[mem' → logprob: -18.75
    8. '(mask' → logprob: -18.875
    9. '[token' → logprob: -19.625
    10. '[new' → logprob: -19.75

Token 723: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -9.253090865968261e-06
    2. ' mask' → logprob: -11.875009536743164
    3. '[' → logprob: -13.125009536743164
    4. '(mask' → logprob: -15.625009536743164
    5. '	mask' → logprob: -16.250009536743164
    6. 'm' → logprob: -17.250009536743164
    7. '_mask' → logprob: -18.000009536743164
    8. 'MASK' → logprob: -18.875009536743164
    9. ' ' → logprob: -20.000009536743164
    10. 'max' → logprob: -20.625009536743164

Token 724: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.055085159838199615
    2. '[i' → logprob: -2.9300851821899414
    3. ')[' → logprob: -9.180085182189941
    4. ' ][' → logprob: -10.680085182189941
    5. '[j' → logprob: -10.805085182189941
    6. ' [' → logprob: -11.430085182189941
    7. '[I' → logprob: -11.805085182189941
    8. '                       ' → logprob: -11.930085182189941
    9. '"][' → logprob: -12.055085182189941
    10. ''][' → logprob: -12.555085182189941

Token 725: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.45848218582978e-06
    2. ' i' → logprob: -13.75000286102295
    3. 'j' → logprob: -14.12500286102295
    4. '[i' → logprob: -14.37500286102295
    5. '][' → logprob: -18.125001907348633
    6. '[' → logprob: -18.750001907348633
    7. '	i' → logprob: -19.125001907348633
    8. 'I' → logprob: -19.125001907348633
    9. ')i' → logprob: -19.125001907348633
    10. '<|end|>' → logprob: -19.375001907348633

Token 726: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.576016902923584
    2. '+' → logprob: -0.826016902923584
    3. ']+' → logprob: -10.576017379760742
    4. '+
' → logprob: -10.701017379760742
    5. ']' → logprob: -11.201017379760742
    6. ')' → logprob: -12.451017379760742
    7. ')+' → logprob: -12.451017379760742
    8. ' +
' → logprob: -12.576017379760742
    9. '+d' → logprob: -12.951017379760742
    10. ' plus' → logprob: -15.201017379760742

Token 727: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16026221215724945
    2. ' +' → logprob: -1.9102622270584106
    3. 'if' → logprob: -11.535262107849121
    4. '+
' → logprob: -11.535262107849121
    5. '+d' → logprob: -11.910262107849121
    6. ' if' → logprob: -12.285262107849121
    7. '                       ' → logprob: -13.285262107849121
    8. '+j' → logprob: -13.785262107849121
    9. '                           ' → logprob: -13.910262107849121
    10. ' +
' → logprob: -14.285262107849121

Token 728: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0031777136027812958
    2. ' dist' → logprob: -5.753177642822266
    3. '	dist' → logprob: -17.753177642822266
    4. '(dist' → logprob: -19.253177642822266
    5. '_dist' → logprob: -20.503177642822266
    6. '.dist' → logprob: -21.503177642822266
    7. 'Dist' → logprob: -21.753177642822266
    8. 'd' → logprob: -22.003177642822266
    9. 'diff' → logprob: -23.753177642822266
    10. '-dist' → logprob: -23.878177642822266

Token 729: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.625004768371582
    3. '[j' → logprob: -13.625004768371582
    4. '```' → logprob: -14.750004768371582
    5. ' [' → logprob: -17.3750057220459
    6. '[
' → logprob: -17.6250057220459
    7. '][' → logprob: -17.8750057220459
    8. '[I' → logprob: -18.5000057220459
    9. 'i' → logprob: -19.1250057220459
    10. '\[' → logprob: -19.1250057220459

Token 730: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0030433088541030884
    2. '[j' → logprob: -5.878043174743652
    3. '[i' → logprob: -8.878043174743652
    4. ']' → logprob: -9.503043174743652
    5. ' ][' → logprob: -11.378043174743652
    6. '[' → logprob: -11.503043174743652
    7. ',j' → logprob: -14.878043174743652
    8. ']][' → logprob: -15.128043174743652
    9. '}[' → logprob: -15.253043174743652
    10. '```' → logprob: -15.253043174743652

Token 731: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0280383548888494e-06
    2. ' j' → logprob: -14.625000953674316
    3. '[j' → logprob: -14.875000953674316
    4. '	j' → logprob: -16.375001907348633
    5. '```' → logprob: -17.000001907348633
    6. '$j' → logprob: -17.625001907348633
    7. '
' → logprob: -17.875001907348633
    8. ')' → logprob: -18.500001907348633
    9. ']' → logprob: -18.500001907348633
    10. 'jx' → logprob: -19.000001907348633

Token 732: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14802168309688568
    2. '                       ' → logprob: -2.148021697998047
    3. ']' → logprob: -4.648021697998047
    4. '<|end|>' → logprob: -4.648021697998047
    5. '                           ' → logprob: -7.148021697998047
    6. '                        
' → logprob: -8.648021697998047
    7. '                        ' → logprob: -9.023021697998047
    8. '                               ' → logprob: -9.398021697998047
    9. '
' → logprob: -9.773021697998047
    10. ')
' → logprob: -9.773021697998047

Token 733: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006997034884989262
    2. '                        
' → logprob: -6.006997108459473
    3. '                           ' → logprob: -6.506997108459473
    4. 'if' → logprob: -7.006997108459473
    5. ' if' → logprob: -7.131997108459473
    6. '                        ' → logprob: -8.256997108459473
    7. ')' → logprob: -8.631997108459473
    8. '               ' → logprob: -8.881997108459473
    9. '                            
' → logprob: -9.006997108459473
    10. '                               ' → logprob: -9.006997108459473

Token 734: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7945345640182495
    2. 'if' (adapté à ' if') → logprob: -1.2945345640182495
    3. ' if' → logprob: -1.2945345640182495
    4. '                           ' → logprob: -9.294534683227539
    5. '                        
' → logprob: -10.919534683227539
    6. '               ' → logprob: -11.294534683227539
    7. '                   ' → logprob: -11.544534683227539
    8. '```' → logprob: -12.169534683227539
    9. '           ' → logprob: -12.294534683227539
    10. '                        ' → logprob: -12.419534683227539

Token 735: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004953970201313496
    2. '(dp' → logprob: -6.004953861236572
    3. ' dp' → logprob: -6.004953861236572
    4. ' (' → logprob: -12.87995433807373
    5. '                       ' → logprob: -12.87995433807373
    6. '                           ' → logprob: -13.62995433807373
    7. '	dp' → logprob: -13.75495433807373
    8. '                   ' → logprob: -14.62995433807373
    9. '(' → logprob: -15.25495433807373
    10. '           ' → logprob: -15.37995433807373

Token 736: '[new' (ID: 89436)
  Prédit: '[new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.25193095207214355
    2. '[' → logprob: -1.5019309520721436
    3. 'new' → logprob: -14.626931190490723
    4. '[next' → logprob: -14.876931190490723
    5. '[mem' → logprob: -15.126931190490723
    6. ' [' → logprob: -15.376931190490723
    7. '[val' → logprob: -15.501931190490723
    8. '[msg' → logprob: -16.126930236816406
    9. '[max' → logprob: -16.626930236816406
    10. '[m' → logprob: -17.001930236816406

Token 737: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.1262514591217041
    2. '[' → logprob: -2.376251459121704
    3. '[new' → logprob: -4.626251220703125
    4. 'mask' → logprob: -4.626251220703125
    5. 'new' → logprob: -5.126251220703125
    6. '][' → logprob: -10.001251220703125
    7. '_MASK' → logprob: -10.501251220703125
    8. '_' → logprob: -10.751251220703125
    9. '	mask' → logprob: -11.251251220703125
    10. '```' → logprob: -11.501251220703125

Token 738: '][' (ID: 2696)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.018813248723745346
    2. '[j' → logprob: -4.018813133239746
    3. '][' → logprob: -7.518813133239746
    4. '[' → logprob: -9.643813133239746
    5. '[next' → logprob: -10.143813133239746
    6. 'new' → logprob: -11.768813133239746
    7. '[val' → logprob: -12.643813133239746
    8. '[js' → logprob: -13.768813133239746
    9. '
' → logprob: -14.643813133239746
    10. '[temp' → logprob: -14.768813133239746

Token 739: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0028254427015781403
    2. '[j' → logprob: -5.8778252601623535
    3. '<|end|>' → logprob: -12.252825736999512
    4. ' j' → logprob: -12.502825736999512
    5. '```' → logprob: -13.252825736999512
    6. '	j' → logprob: -13.252825736999512
    7. '_j' → logprob: -13.627825736999512
    8. ',j' → logprob: -14.002825736999512
    9. 'jax' → logprob: -14.127825736999512
    10. '$j' → logprob: -14.627825736999512

Token 740: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9278335571289062
    2. ']==' → logprob: -1.0528335571289062
    3. '==-' → logprob: -1.9278335571289062
    4. '==' → logprob: -2.4278335571289062
    5. ' ==' → logprob: -4.427833557128906
    6. '[' → logprob: -5.052833557128906
    7. '===' → logprob: -7.052833557128906
    8. ')' → logprob: -7.052833557128906
    9. ')==' → logprob: -8.177833557128906
    10. '']==' → logprob: -8.302833557128906

Token 741: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3489953875541687
    2. ' ==' → logprob: -1.5989954471588135
    3. '==-' → logprob: -2.4739954471588135
    4. '<' → logprob: -4.848995208740234
    5. '=' → logprob: -8.723995208740234
    6. '===' → logprob: -9.223995208740234
    7. '[' → logprob: -9.473995208740234
    8. ' <' → logprob: -10.598995208740234
    9. ']==' → logprob: -10.848995208740234
    10. ')' → logprob: -11.473995208740234

Token 742: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.088346359931165e-07
    2. ' -' → logprob: -14.000000953674316
    3. '   ' → logprob: -22.0
    4. '```' → logprob: -23.625
    5. '\-' → logprob: -24.0
    6. '−' → logprob: -24.375
    7. '  ' → logprob: -24.875
    8. ' ' → logprob: -25.125
    9. '	' → logprob: -25.5
    10. '‌' → logprob: -26.0

Token 743: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '   ' → logprob: -18.125
    4. '```' → logprob: -18.25
    5. '0' → logprob: -18.8125
    6. '           ' → logprob: -19.9375
    7. '2' → logprob: -20.5
    8. '       ' → logprob: -20.5
    9. ' -' → logprob: -20.625
    10. '-' → logprob: -20.625

Token 744: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.01893501915037632
    2. 'or' → logprob: -4.018935203552246
    3. '                           ' → logprob: -7.518935203552246
    4. '	or' → logprob: -8.518935203552246
    5. '                               ' → logprob: -11.768935203552246
    6. '						' → logprob: -11.768935203552246
    7. '                       ' → logprob: -12.018935203552246
    8. '                            ' → logprob: -12.018935203552246
    9. '							' → logprob: -12.643935203552246
    10. '=' → logprob: -13.393935203552246

Token 745: ' dp' (ID: 21546)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.300307959318161
    2. 'dp' → logprob: -2.0503079891204834
    3. ' val' → logprob: -2.3003079891204834
    4. ' dp' → logprob: -3.6753079891204834
    5. '                           ' → logprob: -5.300307750701904
    6. '                       ' → logprob: -9.675308227539062
    7. '                               ' → logprob: -9.675308227539062
    8. '	val' → logprob: -12.050308227539062
    9. '                            ' → logprob: -12.425308227539062
    10. '	dp' → logprob: -12.675308227539062

Token 746: '[new' (ID: 89436)
  Prédit: '[new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -2.451116051815916e-05
    2. 'new' → logprob: -10.625024795532227
    3. ' new' → logprob: -17.750024795532227
    4. ')new' → logprob: -17.875024795532227
    5. '[' → logprob: -18.750024795532227
    6. '=new' → logprob: -18.875024795532227
    7. '```' → logprob: -18.875024795532227
    8. '	new' → logprob: -19.250024795532227
    9. '[next' → logprob: -19.250024795532227
    10. '(new' → logprob: -20.000024795532227

Token 747: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -6.408677290892228e-05
    2. '[new' → logprob: -9.8750638961792
    3. 'new' → logprob: -11.6250638961792
    4. 'mask' → logprob: -13.1250638961792
    5. '_MASK' → logprob: -14.0000638961792
    6. '[' → logprob: -14.6250638961792
    7. 'Mask' → logprob: -16.000064849853516
    8. '_new' → logprob: -16.750064849853516
    9. '```' → logprob: -16.875064849853516
    10. 'MASK' → logprob: -17.375064849853516

Token 748: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20210734009742737
    2. '][' → logprob: -1.827107310295105
    3. '[new' → logprob: -3.9521074295043945
    4. '[j' → logprob: -6.4521074295043945
    5. '[token' → logprob: -8.077107429504395
    6. '[next' → logprob: -8.327107429504395
    7. '[m' → logprob: -8.827107429504395
    8. '[user' → logprob: -8.827107429504395
    9. '[current' → logprob: -9.452107429504395
    10. '[mem' → logprob: -9.827107429504395

Token 749: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0016163812251761556
    2. 'i' → logprob: -6.501616477966309
    3. '[j' → logprob: -9.126616477966309
    4. '[i' → logprob: -13.001616477966309
    5. ' j' → logprob: -13.126616477966309
    6. '```' → logprob: -15.001616477966309
    7. '[' → logprob: -15.876616477966309
    8. '   ' → logprob: -15.876616477966309
    9. 'mask' → logprob: -15.876616477966309
    10. '][' → logprob: -16.251615524291992

Token 750: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20423723757266998
    2. ' >' → logprob: -1.7042372226715088
    3. ']>' → logprob: -6.579237461090088
    4. ']' → logprob: -6.954237461090088
    5. '[' → logprob: -8.95423698425293
    6. ' ' → logprob: -9.32923698425293
    7. '   ' → logprob: -9.82923698425293
    8. ' ' → logprob: -10.82923698425293
    9. '">' → logprob: -11.07923698425293
    10. '```' → logprob: -11.07923698425293

Token 751: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.003606363432481885
    2. ' >' → logprob: -5.62860631942749
    3. '＞' → logprob: -13.128606796264648
    4. '()>' → logprob: -14.128606796264648
    5. '>`' → logprob: -14.628606796264648
    6. '">' → logprob: -14.753606796264648
    7. '>tag' → logprob: -14.878606796264648
    8. ']>' → logprob: -15.003606796264648
    9. '```' → logprob: -15.128606796264648
    10. ')>' → logprob: -15.378606796264648

Token 752: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.04858805239200592
    2. ' val' → logprob: -3.0485880374908447
    3. '	val' → logprob: -14.173587799072266
    4. '_val' → logprob: -18.548587799072266
    5. '[val' → logprob: -18.923587799072266
    6. '(val' → logprob: -19.048587799072266
    7. '```' → logprob: -20.048587799072266
    8. ',val' → logprob: -20.423587799072266
    9. '.val' → logprob: -20.673587799072266
    10. '           ' → logprob: -21.048587799072266

Token 753: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007906599901616573
    2. '=' → logprob: -5.757906436920166
    3. ':
' → logprob: -6.007906436920166
    4. '                           ' → logprob: -6.757906436920166
    5. '                       ' → logprob: -7.257906436920166
    6. '):' → logprob: -8.257906913757324
    7. '):
' → logprob: -10.382906913757324
    8. '                               ' → logprob: -10.382906913757324
    9. ')' → logprob: -10.882906913757324
    10. ' =' → logprob: -11.382906913757324

Token 754: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.044950488954782486
    2. '                               ' → logprob: -3.669950485229492
    3. '                       ' → logprob: -4.044950485229492
    4. '                                   ' → logprob: -8.294950485229492
    5. '                            ' → logprob: -9.044950485229492
    6. '                   ' → logprob: -9.544950485229492
    7. ' =' → logprob: -9.669950485229492
    8. '						' → logprob: -9.919950485229492
    9. '                                       ' → logprob: -9.919950485229492
    10. '                        ' → logprob: -10.044950485229492

Token 755: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.04870296269655228
    2. ' dp' → logprob: -3.0487029552459717
    3. '                               ' → logprob: -9.42370319366455
    4. '                           ' → logprob: -10.29870319366455
    5. '	dp' → logprob: -14.67370319366455
    6. '(dp' → logprob: -14.79870319366455
    7. '                                   ' → logprob: -15.67370319366455
    8. '_dp' → logprob: -16.298702239990234
    9. '                       ' → logprob: -16.798702239990234
    10. '.dp' → logprob: -17.923702239990234

Token 756: '[new' (ID: 89436)
  Prédit: '[new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -2.935296834039036e-06
    2. 'new' → logprob: -12.75000286102295
    3. '=new' → logprob: -20.000003814697266
    4. '[' → logprob: -20.250003814697266
    5. ' new' → logprob: -20.500003814697266
    6. '```' → logprob: -21.125003814697266
    7. ')new' → logprob: -21.500003814697266
    8. '[next' → logprob: -22.000003814697266
    9. '	new' → logprob: -22.125003814697266
    10. '_new' → logprob: -22.750003814697266

Token 757: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -3.47626737493556e-05
    2. '[new' → logprob: -10.75003433227539
    3. 'new' → logprob: -11.37503433227539
    4. 'mask' → logprob: -13.62503433227539
    5. '_MASK' → logprob: -15.37503433227539
    6. '_map' → logprob: -15.75003433227539
    7. '[' → logprob: -16.62503433227539
    8. '```' → logprob: -16.75003433227539
    9. '_masks' → logprob: -17.50003433227539
    10. '_new' → logprob: -17.62503433227539

Token 758: '][' (ID: 2696)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.16119222342967987
    2. '][' → logprob: -1.9111921787261963
    3. '[j' → logprob: -7.036192417144775
    4. '[' → logprob: -10.786191940307617
    5. '[next' → logprob: -11.036191940307617
    6. 'new' → logprob: -11.036191940307617
    7. '[user' → logprob: -12.786191940307617
    8. ']' → logprob: -12.911191940307617
    9. '[js' → logprob: -13.036191940307617
    10. ')[' → logprob: -13.161191940307617

Token 759: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.2200749754119897e-06
    2. ' j' → logprob: -13.375001907348633
    3. '[j' → logprob: -14.375001907348633
    4. '	j' → logprob: -17.375001907348633
    5. '$j' → logprob: -17.500001907348633
    6. '```' → logprob: -17.750001907348633
    7. '_j' → logprob: -19.000001907348633
    8. 'i' → logprob: -19.500001907348633
    9. ',j' → logprob: -20.000001907348633
    10. 'jx' → logprob: -20.375001907348633

Token 760: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869028687477112
    2. '=' → logprob: -1.1369028091430664
    3. ']=' → logprob: -11.011902809143066
    4. ']' → logprob: -11.386902809143066
    5. '<|end|>' → logprob: -13.261902809143066
    6. ')' → logprob: -14.511902809143066
    7. ')=' → logprob: -15.011902809143066
    8. '=value' → logprob: -15.011902809143066
    9. '＝' → logprob: -15.136902809143066
    10. ' ' → logprob: -16.511903762817383

Token 761: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022463142871857
    2. ' =' → logprob: -1.9102246761322021
    3. '＝' → logprob: -16.16022491455078
    4. '=value' → logprob: -16.28522491455078
    5. '.=' → logprob: -17.16022491455078
    6. '=v' → logprob: -17.66022491455078
    7. '=
' → logprob: -18.03522491455078
    8. '=True' → logprob: -18.16022491455078
    9. '=int' → logprob: -18.16022491455078
    10. '=user' → logprob: -18.78522491455078

Token 762: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.03804149478673935
    2. ' val' → logprob: -3.288041591644287
    3. '	val' → logprob: -18.663042068481445
    4. '_val' → logprob: -19.538042068481445
    5. '[val' → logprob: -20.538042068481445
    6. 'va' → logprob: -21.038042068481445
    7. 'v' → logprob: -21.538042068481445
    8. 'Val' → logprob: -21.788042068481445
    9. '(val' → logprob: -21.913042068481445
    10. '.val' → logprob: -22.288042068481445

Token 763: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 764: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49992966651916504
    2. '   ' → logprob: -1.249929666519165
    3. 'for' → logprob: -2.749929666519165
    4. ' for' → logprob: -3.624929666519165
    5. '
' → logprob: -4.749929428100586
    6. '    
' → logprob: -6.499929428100586
    7. 'print' → logprob: -6.749929428100586
    8. '```' → logprob: -6.749929428100586
    9. '        
' → logprob: -6.999929428100586
    10. ')' → logprob: -7.374929428100586

Token 765: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.32483673095703125
    2. 'result' → logprob: -2.3248367309570312
    3. 'print' → logprob: -2.8248367309570312
    4. 'ans' → logprob: -2.8248367309570312
    5. 'answer' → logprob: -2.8248367309570312
    6. '       ' → logprob: -7.074836730957031
    7. ' res' → logprob: -7.949836730957031
    8. '   ' → logprob: -8.199836730957031
    9. ' ans' → logprob: -9.824836730957031
    10. '```' → logprob: -10.449836730957031

Token 766: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859895631670952
    2. '=' → logprob: -3.0485990047454834
    3. 's' → logprob: -13.048599243164062
    4. '=max' → logprob: -13.173599243164062
    5. '=[]' → logprob: -13.673599243164062
    6. 'ult' → logprob: -14.048599243164062
    7. ',' → logprob: -14.673599243164062
    8. '=[' → logprob: -14.673599243164062
    9. ' =[' → logprob: -14.673599243164062
    10. ')' → logprob: -14.798599243164062

Token 767: ' -' (ID: 533)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.023248974233865738
    2. ' min' → logprob: -3.7732489109039307
    3. '-min' → logprob: -12.773248672485352
    4. '	min' → logprob: -15.398248672485352
    5. '[min' → logprob: -16.27324867248535
    6. '
' → logprob: -16.39824867248535
    7. 'max' → logprob: -16.52324867248535
    8. '   ' → logprob: -16.52324867248535
    9. 'float' → logprob: -16.64824867248535
    10. '(min' → logprob: -16.64824867248535

Token 768: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '       ' → logprob: -14.500000953674316
    3. 'dp' → logprob: -15.125000953674316
    4. ' ' → logprob: -17.0
    5. '2' → logprob: -18.125
    6. '-' → logprob: -18.25
    7. '   ' → logprob: -18.75
    8. '```' → logprob: -19.125
    9. '           ' → logprob: -19.875
    10. 'max' → logprob: -19.875

Token 769: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6233963966369629
    2. '       ' → logprob: -1.123396396636963
    3. ' for' → logprob: -2.373396396636963
    4. 'for' → logprob: -3.248396396636963
    5. '        
' → logprob: -5.123396396636963
    6. ' 
' → logprob: -7.873396396636963
    7. '  
' → logprob: -9.498395919799805
    8. '<|end|>' → logprob: -9.498395919799805
    9. '
' → logprob: -10.498395919799805
    10. '		
' → logprob: -10.623395919799805

Token 770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6990446448326111
    2. ' for' → logprob: -0.9490446448326111
    3. 'for' → logprob: -2.449044704437256
    4. '
' → logprob: -3.574044704437256
    5. 'mask' → logprob: -7.574044704437256
    6. ' mask' → logprob: -7.824044704437256
    7. '        
' → logprob: -8.199044227600098
    8. '<|end|>' → logprob: -9.324044227600098
    9. '```' → logprob: -11.074044227600098
    10. '_mask' → logprob: -11.074044227600098

Token 771: ' full' (ID: 3149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014978687977418303
    2. '       ' → logprob: -9.500149726867676
    3. ' for' → logprob: -9.500149726867676
    4. '	for' → logprob: -17.625150680541992
    5. '   ' → logprob: -17.875150680541992
    6. 'res' → logprob: -18.875150680541992
    7. 'final' → logprob: -19.375150680541992
    8. 'full' (adapté à ' full') → logprob: -20.125150680541992
    9. '        
' → logprob: -21.125150680541992
    10. 'result' → logprob: -21.125150680541992

Token 772: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.000205566844670102
    2. '_MASK' → logprob: -9.375205993652344
    3. ' =' → logprob: -9.750205993652344
    4. 'mask' → logprob: -10.000205993652344
    5. '_size' → logprob: -12.125205993652344
    6. '=' → logprob: -12.625205993652344
    7. 'Mask' → logprob: -13.000205993652344
    8. '_' → logprob: -13.250205993652344
    9. '```' → logprob: -13.500205993652344
    10. 'MASK' → logprob: -14.125205993652344

Token 773: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16040903329849243
    2. '=' → logprob: -1.9104089736938477
    3. ' ==' → logprob: -9.160408973693848
    4. '[' → logprob: -10.660408973693848
    5. '==' → logprob: -10.910408973693848
    6. '<|end|>' → logprob: -11.285408973693848
    7. ')' → logprob: -11.785408973693848
    8. ' =
' → logprob: -12.035408973693848
    9. '```' → logprob: -12.535408973693848
    10. '=
' → logprob: -13.660408973693848

Token 774: ' SIZE' (ID: 51412)
  Prédit: 'SIZE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SIZE' → logprob: -0.34923702478408813
    2. '(S' → logprob: -1.2242369651794434
    3. '(' → logprob: -7.349236965179443
    4. '(size' → logprob: -9.599237442016602
    5. ' (' → logprob: -10.224237442016602
    6. ' SIZE' → logprob: -10.599237442016602
    7. '((' → logprob: -11.599237442016602
    8. '(Size' → logprob: -12.599237442016602
    9. 'S' → logprob: -13.474237442016602
    10. 'SZ' → logprob: -13.724237442016602

Token 775: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20141363143920898
    2. ' -' → logprob: -1.701413631439209
    3. '       ' → logprob: -15.576414108276367
    4. '   ' → logprob: -17.076414108276367
    5. '–' → logprob: -17.076414108276367
    6. ' ' → logprob: -17.326414108276367
    7. '1' → logprob: -17.451414108276367
    8. '—' → logprob: -17.826414108276367
    9. '−' → logprob: -17.951414108276367
    10. '()-' → logprob: -18.076414108276367

Token 776: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -19.0
    4. '<|end|>' → logprob: -19.625
    5. '۱' → logprob: -21.0
    6. '   ' → logprob: -21.125
    7. '１' → logprob: -21.75
    8. ')' → logprob: -21.75
    9. '
' → logprob: -21.875
    10. '0' → logprob: -22.0

Token 777: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '<|end|>' → logprob: -18.25
    4. '```' → logprob: -18.75
    5. '0' → logprob: -20.625
    6. '۱' → logprob: -21.9375
    7. '   ' → logprob: -21.9375
    8. '{' → logprob: -22.125
    9. '১' → logprob: -22.1875
    10. '{
' → logprob: -22.375

Token 778: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009102334268391132
    2. '       ' → logprob: -5.1341023445129395
    3. ' for' → logprob: -6.6341023445129395
    4. 'for' → logprob: -6.8841023445129395
    5. '        
' → logprob: -7.2591023445129395
    6. '
' → logprob: -10.384101867675781
    7. '<|end|>' → logprob: -10.509101867675781
    8. '  
' → logprob: -11.259101867675781
    9. '\n' → logprob: -11.634101867675781
    10. ' 
' → logprob: -11.634101867675781

Token 779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18284344673156738
    2. ' for' → logprob: -2.4328434467315674
    3. '
' → logprob: -2.9328434467315674
    4. 'for' → logprob: -3.6828434467315674
    5. '        
' → logprob: -7.432843208312988
    6. '<|end|>' → logprob: -8.432843208312988
    7. '   ' → logprob: -10.307843208312988
    8. '	for' → logprob: -10.807843208312988
    9. ' 
' → logprob: -11.932843208312988
    10. ',' → logprob: -11.932843208312988

Token 780: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.9424725148128346e-05
    2. ' for' → logprob: -10.500049591064453
    3. '       ' → logprob: -10.750049591064453
    4. '
' → logprob: -15.250049591064453
    5. '```' → logprob: -16.750049591064453
    6. '        
' → logprob: -17.500049591064453
    7. '	for' → logprob: -17.625049591064453
    8. '``' → logprob: -19.375049591064453
    9. '   ' → logprob: -19.625049591064453
    10. '           ' → logprob: -20.875049591064453

Token 781: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759480595588684
    2. 'j' → logprob: -0.8259480595588684
    3. ' j' → logprob: -12.200947761535645
    4. ' i' → logprob: -12.575947761535645
    5. 'end' → logprob: -16.45094871520996
    6. '   ' → logprob: -17.32594871520996
    7. 'k' → logprob: -17.70094871520996
    8. '```' → logprob: -17.70094871520996
    9. 'last' → logprob: -18.95094871520996
    10. 'x' → logprob: -19.32594871520996

Token 782: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021920178551226854
    2. 'in' → logprob: -6.12719202041626
    3. ' ' → logprob: -13.127191543579102
    4. '<|end|>' → logprob: -13.127191543579102
    5. '	in' → logprob: -13.377191543579102
    6. '[' → logprob: -14.627191543579102
    7. 'range' → logprob: -15.627191543579102
    8. ',' → logprob: -15.877191543579102
    9. 'In' → logprob: -16.0021915435791
    10. '
' → logprob: -16.3771915435791

Token 783: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.842555426876061e-06
    2. ' range' → logprob: -12.250004768371582
    3. '(range' → logprob: -21.5000057220459
    4. 'Range' → logprob: -26.0000057220459
    5. '	range' → logprob: -26.2500057220459
    6. '_range' → logprob: -27.2500057220459
    7. '   ' → logprob: -28.1250057220459
    8. 'in' → logprob: -28.2500057220459
    9. 'rang' → logprob: -28.6250057220459
    10. 'r' → logprob: -28.6250057220459

Token 784: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5001417994499207
    2. 'n' → logprob: -1.2501418590545654
    3. '(' → logprob: -2.2501418590545654
    4. '1' → logprob: -6.375141620635986
    5. ' n' → logprob: -13.625142097473145
    6. '(S' → logprob: -13.875142097473145
    7. ',n' → logprob: -14.750142097473145
    8. '_n' → logprob: -15.125142097473145
    9. '	n' → logprob: -15.500142097473145
    10. '(size' → logprob: -16.250141143798828

Token 785: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28347596526145935
    2. '):' → logprob: -1.4084759950637817
    3. ')' → logprob: -6.158475875854492
    4. '):

' → logprob: -9.783475875854492
    5. '):
' → logprob: -10.283475875854492
    6. '<|end|>' → logprob: -10.283475875854492
    7. ':' → logprob: -10.783475875854492
    8. '       ' → logprob: -11.033475875854492
    9. '```' → logprob: -11.533475875854492
    10. '   ' → logprob: -12.283475875854492

Token 786: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014048675075173378
    2. ' if' → logprob: -5.1390485763549805
    3. '   ' → logprob: -5.5140485763549805
    4. '       ' → logprob: -5.6390485763549805
    5. 'if' → logprob: -7.7640485763549805
    6. '<|end|>' → logprob: -11.13904857635498
    7. '	       ' → logprob: -11.26404857635498
    8. '```' → logprob: -11.38904857635498
    9. ' ' → logprob: -11.51404857635498
    10. '	   ' → logprob: -12.01404857635498

Token 787: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14767690002918243
    2. 'if' (adapté à ' if') → logprob: -2.147676944732666
    3. ' if' → logprob: -3.897676944732666
    4. '   ' → logprob: -8.897676467895508
    5. '```' → logprob: -10.147676467895508
    6. '               ' → logprob: -10.272676467895508
    7. ' ' → logprob: -11.022676467895508
    8. '       ' → logprob: -12.147676467895508
    9. 'val' → logprob: -12.897676467895508
    10. 'num' → logprob: -13.272676467895508

Token 788: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.023246875032782555
    2. ' dp' → logprob: -3.7732467651367188
    3. '(dp' → logprob: -14.273246765136719
    4. '	dp' → logprob: -14.523246765136719
    5. '           ' → logprob: -15.898246765136719
    6. '   ' → logprob: -17.64824676513672
    7. '_dp' → logprob: -18.27324676513672
    8. 'res' → logprob: -18.89824676513672
    9. '       ' → logprob: -19.27324676513672
    10. '.dp' → logprob: -19.52324676513672

Token 789: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. 'full' → logprob: -13.25000286102295
    3. '[new' → logprob: -14.62500286102295
    4. ' [' → logprob: -15.50000286102295
    5. ' full' → logprob: -15.50000286102295
    6. '```' → logprob: -16.375001907348633
    7. '_full' → logprob: -17.375001907348633
    8. '[size' → logprob: -17.500001907348633
    9. '(full' → logprob: -17.500001907348633
    10. '][' → logprob: -17.750001907348633

Token 790: 'full' (ID: 15393)
  Prédit: 'full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -4.320199877838604e-07
    2. ' full' → logprob: -14.75
    3. '(full' → logprob: -19.0
    4. 'ful' → logprob: -21.375
    5. '[' → logprob: -22.375
    6. '	full' → logprob: -22.875
    7. '
' → logprob: -23.25
    8. '_full' → logprob: -23.75
    9. 'FULL' → logprob: -23.875
    10. 'Full' → logprob: -23.875

Token 791: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.4498052223643754e-05
    2. '_MASK' → logprob: -11.750014305114746
    3. 'mask' → logprob: -12.250014305114746
    4. '_size' → logprob: -14.500014305114746
    5. '```' → logprob: -15.375014305114746
    6. ')' → logprob: -15.500014305114746
    7. '
' → logprob: -16.000015258789062
    8. '[i' → logprob: -16.000015258789062
    9. '_masks' → logprob: -16.500015258789062
    10. '[' → logprob: -16.500015258789062

Token 792: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07894707471132278
    2. '][' → logprob: -2.578947067260742
    3. ')[' → logprob: -10.078947067260742
    4. '[' → logprob: -12.078947067260742
    5. '>[' → logprob: -12.953947067260742
    6. ' [' → logprob: -13.203947067260742
    7. '"][' → logprob: -13.578947067260742
    8. 'i' → logprob: -13.953947067260742
    9. '}[' → logprob: -14.328947067260742
    10. ' ][' → logprob: -14.578947067260742

Token 793: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: 0.0
    2. ' i' → logprob: -16.75
    3. '<|end|>' → logprob: -20.0
    4. '[i' → logprob: -20.75
    5. '
' → logprob: -21.875
    6. '```' → logprob: -22.125
    7. '	i' → logprob: -22.25
    8. ')i' → logprob: -22.5
    9. 'n' → logprob: -22.625
    10. '{i' → logprob: -22.75

Token 794: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.511812686920166
    2. ' !=' → logprob: -1.386812686920166
    3. '!=-' → logprob: -2.136812686920166
    4. ']!=' → logprob: -3.886812686920166
    5. ']' → logprob: -5.136812686920166
    6. ')' → logprob: -5.636812686920166
    7. '>' → logprob: -6.761812686920166
    8. ')!=' → logprob: -6.886812686920166
    9. '()!=' → logprob: -9.011812210083008
    10. '!==' → logprob: -9.136812210083008

Token 795: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0816694051027298
    2. ' !=' → logprob: -2.706669330596924
    3. '!=-' → logprob: -4.456669330596924
    4. ')!=' → logprob: -11.081669807434082
    5. ']!=' → logprob: -11.206669807434082
    6. '!==' → logprob: -11.581669807434082
    7. '>' → logprob: -11.706669807434082
    8. '==' → logprob: -12.456669807434082
    9. ')' → logprob: -12.706669807434082
    10. '()!=' → logprob: -12.956669807434082

Token 796: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.7697225252486533e-06
    2. ' -' → logprob: -12.500003814697266
    3. '   ' → logprob: -21.375003814697266
    4. '```' → logprob: -21.625003814697266
    5. ' ' → logprob: -24.000003814697266
    6. '	' → logprob: -24.500003814697266
    7. '−' → logprob: -24.625003814697266
    8. '  ' → logprob: -24.750003814697266
    9. '0' → logprob: -25.875003814697266
    10. '‌' → logprob: -25.875003814697266

Token 797: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '-' → logprob: -13.500001907348633
    3. '```' → logprob: -14.625001907348633
    4. ' ' → logprob: -16.500001907348633
    5. '``' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '2' → logprob: -17.000001907348633
    8. ' -' → logprob: -18.000001907348633
    9. '           ' → logprob: -18.750001907348633
    10. '       ' → logprob: -19.000001907348633

Token 798: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.032784879207611084
    2. 'and' → logprob: -3.907784938812256
    3. '               ' → logprob: -4.907784938812256
    4. '           ' → logprob: -6.157784938812256
    5. ':
' → logprob: -6.532784938812256
    6. ':' → logprob: -6.907784938812256
    7. '                   ' → logprob: -9.782784461975098
    8. '                           ' → logprob: -10.532784461975098
    9. '                       ' → logprob: -10.532784461975098
    10. '                               ' → logprob: -10.782784461975098

Token 799: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4318009316921234
    2. '           ' → logprob: -1.0568009614944458
    3. ' if' → logprob: -5.931800842285156
    4. '   ' → logprob: -8.806800842285156
    5. '```' → logprob: -9.431800842285156
    6. 'if' → logprob: -9.806800842285156
    7. '<|end|>' → logprob: -10.556800842285156
    8. '       ' → logprob: -10.556800842285156
    9. '                   ' → logprob: -10.806800842285156
    10. '                       ' → logprob: -11.056800842285156

Token 800: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7043216824531555
    2. '           ' → logprob: -1.4543216228485107
    3. 'res' → logprob: -1.9543216228485107
    4. '               ' → logprob: -2.5793216228485107
    5. ' if' → logprob: -2.9543216228485107
    6. ' res' → logprob: -6.32932186126709
    7. '   ' → logprob: -8.32932186126709
    8. '                   ' → logprob: -8.82932186126709
    9. 'result' → logprob: -10.07932186126709
    10. 'answer' → logprob: -10.07932186126709

Token 801: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00027301779482513666
    2. ' res' → logprob: -8.250272750854492
    3. '                   ' → logprob: -11.500272750854492
    4. '               ' → logprob: -13.500272750854492
    5. '                       ' → logprob: -16.375272750854492
    6. '	res' → logprob: -17.875272750854492
    7. '           ' → logprob: -18.000272750854492
    8. '_res' → logprob: -18.125272750854492
    9. '(res' → logprob: -18.375272750854492
    10. '                  ' → logprob: -18.750272750854492

Token 802: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07754474878311157
    2. '==' → logprob: -3.077544689178467
    3. '==-' → logprob: -3.577544689178467
    4. '=' → logprob: -8.452545166015625
    5. ' is' → logprob: -8.452545166015625
    6. ' ' → logprob: -9.202545166015625
    7. '===' → logprob: -10.577545166015625
    8. ' =' → logprob: -11.202545166015625
    9. ' ===' → logprob: -11.702545166015625
    10. '<' → logprob: -12.202545166015625

Token 803: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.935296834039036e-06
    2. ' -' → logprob: -12.75000286102295
    3. '   ' → logprob: -21.750003814697266
    4. '```' → logprob: -22.375003814697266
    5. ' ' → logprob: -23.250003814697266
    6. '  ' → logprob: -24.375003814697266
    7. '−' → logprob: -24.750003814697266
    8. '\-' → logprob: -24.875003814697266
    9. '       ' → logprob: -27.125003814697266
    10. '           ' → logprob: -27.250003814697266

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.618001053633634e-05
    2. '2' → logprob: -11.375025749206543
    3. '```' → logprob: -12.375025749206543
    4. 'res' → logprob: -13.125025749206543
    5. '-' → logprob: -13.750025749206543
    6. '``' → logprob: -13.875025749206543
    7. '`' → logprob: -14.250025749206543
    8. 'inf' → logprob: -14.375025749206543
    9. '   ' → logprob: -14.625025749206543
    10. ' ' → logprob: -14.812525749206543

Token 805: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.38695111870765686
    2. 'or' → logprob: -1.1369510889053345
    3. '                   ' → logprob: -9.761951446533203
    4. '               ' → logprob: -11.386951446533203
    5. '	or' → logprob: -12.136951446533203
    6. '                       ' → logprob: -12.636951446533203
    7. ' ' → logprob: -14.761951446533203
    8. '   ' → logprob: -14.886951446533203
    9. '                           ' → logprob: -14.886951446533203
    10. '           ' → logprob: -15.136951446533203

Token 806: ' res' (ID: 694)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1173701360821724
    2. ' dp' → logprob: -2.367370128631592
    3. 'res' → logprob: -4.117370128631592
    4. ' res' → logprob: -7.242370128631592
    5. '                           ' → logprob: -12.49237060546875
    6. '(dp' → logprob: -12.74237060546875
    7. '                   ' → logprob: -12.86737060546875
    8. '                       ' → logprob: -13.49237060546875
    9. '	dp' → logprob: -13.74237060546875
    10. '               ' → logprob: -13.86737060546875

Token 807: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.001702675479464233
    2. ' >' → logprob: -6.376702785491943
    3. '>d' → logprob: -16.5017032623291
    4. '   ' → logprob: -16.6267032623291
    5. '>`' → logprob: -17.1267032623291
    6. '>-' → logprob: -17.1267032623291
    7. '>
' → logprob: -17.6267032623291
    8. '＞' → logprob: -17.6267032623291
    9. '>end' → logprob: -17.6267032623291
    10. ' ' → logprob: -17.7517032623291

Token 808: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004078639671206474
    2. ' dp' → logprob: -5.5040788650512695
    3. '	dp' → logprob: -16.879077911376953
    4. '           ' → logprob: -17.754077911376953
    5. '(dp' → logprob: -17.879077911376953
    6. '               ' → logprob: -18.129077911376953
    7. '   ' → logprob: -19.129077911376953
    8. '_dp' → logprob: -19.254077911376953
    9. '                   ' → logprob: -19.629077911376953
    10. '.dp' → logprob: -20.629077911376953

Token 809: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.77627644513268e-06
    2. 'full' → logprob: -11.750008583068848
    3. '```' → logprob: -14.625008583068848
    4. 'dp' → logprob: -15.500008583068848
    5. '_full' → logprob: -15.625008583068848
    6. ' full' → logprob: -17.250009536743164
    7. 'Full' → logprob: -18.625009536743164
    8. '``' → logprob: -18.750009536743164
    9. '[
' → logprob: -19.125009536743164
    10. '[new' → logprob: -19.250009536743164

Token 810: 'full' (ID: 15393)
  Prédit: 'full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.500004768371582
    3. ' full' → logprob: -13.750004768371582
    4. '_full' → logprob: -16.2500057220459
    5. '(full' → logprob: -17.8750057220459
    6. '	full' → logprob: -18.2500057220459
    7. 'Full' → logprob: -18.3750057220459
    8. 'final' → logprob: -18.8750057220459
    9. 'max' → logprob: -19.5000057220459
    10. 'FULL' → logprob: -19.6250057220459

Token 811: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.250006675720215
    3. 'mask' → logprob: -13.250006675720215
    4. '_MASK' → logprob: -14.875006675720215
    5. 'Mask' → logprob: -15.875006675720215
    6. 'MASK' → logprob: -17.50000762939453
    7. '```' → logprob: -18.00000762939453
    8. '_map' → logprob: -18.25000762939453
    9. 'ask' → logprob: -19.12500762939453
    10. '_masks' → logprob: -19.62500762939453

Token 812: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0031821096781641245
    2. '[i' → logprob: -5.7531819343566895
    3. '[' → logprob: -13.753182411193848
    4. ' ][' → logprob: -14.378182411193848
    5. 'i' → logprob: -14.628182411193848
    6. ']' → logprob: -14.753182411193848
    7. ')[' → logprob: -15.128182411193848
    8. '"][' → logprob: -15.378182411193848
    9. ']][' → logprob: -15.378182411193848
    10. ''][' → logprob: -15.628182411193848

Token 813: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.1318875446449965e-05
    2. '[i' → logprob: -10.125041007995605
    3. ' i' → logprob: -14.125041007995605
    4. '{i' → logprob: -16.000041961669922
    5. '```' → logprob: -16.125041961669922
    6. '[' → logprob: -16.250041961669922
    7. '
' → logprob: -17.375041961669922
    8. '	i' → logprob: -17.750041961669922
    9. '(i' → logprob: -17.875041961669922
    10. ',i' → logprob: -17.875041961669922

Token 814: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3142744302749634
    2. ':
' → logprob: -1.3142744302749634
    3. ']:
' → logprob: -1.4392744302749634
    4. '+' → logprob: -2.564274311065674
    5. ']:' → logprob: -2.814274311065674
    6. '               ' → logprob: -3.564274311065674
    7. '                   ' → logprob: -4.064274311065674
    8. '                       ' → logprob: -4.314274311065674
    9. '                           ' → logprob: -4.439274311065674
    10. '                               ' → logprob: -4.814274311065674

Token 815: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014948610914871097
    2. '                       ' → logprob: -7.376494884490967
    3. 'res' → logprob: -8.376494407653809
    4. '               ' → logprob: -8.376494407653809
    5. '                           ' → logprob: -8.376494407653809
    6. ' res' → logprob: -9.376494407653809
    7. '                               ' → logprob: -10.251494407653809
    8. ' =' → logprob: -10.501494407653809
    9. '                  ' → logprob: -12.001494407653809
    10. '```' → logprob: -12.001494407653809

Token 816: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -4.990154047845863e-05
    2. ' res' → logprob: -10.000049591064453
    3. '                   ' → logprob: -12.500049591064453
    4. '                       ' → logprob: -14.250049591064453
    5. '                               ' → logprob: -17.125049591064453
    6. '               ' → logprob: -17.375049591064453
    7. '_res' → logprob: -17.625049591064453
    8. '                           ' → logprob: -17.625049591064453
    9. '	res' → logprob: -17.750049591064453
    10. '$res' → logprob: -18.875049591064453

Token 817: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004081128165125847
    2. ' =' → logprob: -5.5040812492370605
    3. '=res' → logprob: -12.879080772399902
    4. '＝' → logprob: -16.50408172607422
    5. '=
' → logprob: -16.87908172607422
    6. '=

' → logprob: -18.50408172607422
    7. '=}' → logprob: -18.62908172607422
    8. '.=' → logprob: -18.75408172607422
    9. '=re' → logprob: -19.62908172607422
    10. '=int' → logprob: -20.37908172607422

Token 818: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0031777136027812958
    2. ' dp' → logprob: -5.753177642822266
    3. '	dp' → logprob: -18.253177642822266
    4. '(dp' → logprob: -19.128177642822266
    5. '_dp' → logprob: -20.253177642822266
    6. '.dp' → logprob: -22.003177642822266
    7. 'df' → logprob: -22.753177642822266
    8. 'd' → logprob: -23.128177642822266
    9. 'dc' → logprob: -23.128177642822266
    10. '   ' → logprob: -23.253177642822266

Token 819: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001245112856850028
    2. 'full' → logprob: -7.251245021820068
    3. '[i' → logprob: -8.251245498657227
    4. '_full' → logprob: -8.501245498657227
    5. '[new' → logprob: -10.126245498657227
    6. '       ' → logprob: -12.376245498657227
    7. '```' → logprob: -12.501245498657227
    8. '[[' → logprob: -12.626245498657227
    9. '_[' → logprob: -13.001245498657227
    10. 'new' → logprob: -13.126245498657227

Token 820: 'full' (ID: 15393)
  Prédit: 'full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.00017302791820839047
    2. 'i' → logprob: -9.37517261505127
    3. '[' → logprob: -9.50017261505127
    4. ' full' → logprob: -11.87517261505127
    5. '_full' → logprob: -12.62517261505127
    6. '[i' → logprob: -13.37517261505127
    7. '(full' → logprob: -14.12517261505127
    8. 'dp' → logprob: -14.62517261505127
    9. '.full' → logprob: -15.87517261505127
    10. '	full' → logprob: -16.500173568725586

Token 821: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0003048378275707364
    2. 'mask' → logprob: -8.12530517578125
    3. '1' → logprob: -12.87530517578125
    4. '_MASK' → logprob: -13.25030517578125
    5. '```' → logprob: -13.75030517578125
    6. 'MASK' → logprob: -14.25030517578125
    7. '_map' → logprob: -14.50030517578125
    8. '[' → logprob: -14.87530517578125
    9. '[i' → logprob: -14.87530517578125
    10. 'Mask' → logprob: -15.25030517578125

Token 822: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006220113136805594
    2. '[i' → logprob: -7.625621795654297
    3. ']' → logprob: -9.000621795654297
    4. '[' → logprob: -12.125621795654297
    5. 'i' → logprob: -13.375621795654297
    6. ')[' → logprob: -14.250621795654297
    7. '   ' → logprob: -14.375621795654297
    8. ']+' → logprob: -14.750621795654297
    9. '[j' → logprob: -14.875621795654297
    10. ' ][' → logprob: -15.125621795654297

Token 823: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: 0.0
    2. ' i' → logprob: -17.0
    3. '[i' → logprob: -19.875
    4. '	i' → logprob: -20.375
    5. '0' → logprob: -20.625
    6. '1' → logprob: -22.125
    7. ')i' → logprob: -22.125
    8. ''i' → logprob: -22.5
    9. '```' → logprob: -22.5
    10. '{i' → logprob: -22.625

Token 824: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2290971279144287
    2. '<|end|>' → logprob: -1.8540971279144287
    3. '       ' → logprob: -3.6040971279144287
    4. ']' → logprob: -5.104097366333008
    5. '+' → logprob: -5.229097366333008
    6. '               ' → logprob: -5.729097366333008
    7. '}' → logprob: -6.354097366333008
    8. '           ' → logprob: -6.604097366333008
    9. '                   ' → logprob: -6.854097366333008
    10. '<|end|>' → logprob: -7.229097366333008

Token 825: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002544750925153494
    2. 'print' → logprob: -6.50254487991333
    3. '   ' → logprob: -6.87754487991333
    4. '
' → logprob: -12.127544403076172
    5. '        
' → logprob: -12.752544403076172
    6. '```' → logprob: -13.502544403076172
    7. '    
' → logprob: -14.377544403076172
    8. ' print' → logprob: -14.877544403076172
    9. '           ' → logprob: -15.877544403076172
    10. '     ' → logprob: -16.502544403076172

Token 826: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10126995295286179
    2. '       ' → logprob: -2.3512699604034424
    3. '   ' → logprob: -6.851269721984863
    4. '```' → logprob: -12.726269721984863
    5. ' print' → logprob: -13.351269721984863
    6. '
' → logprob: -17.10127067565918
    7. '        
' → logprob: -17.22627067565918
    8. '	print' → logprob: -17.47627067565918
    9. '    
' → logprob: -18.60127067565918
    10. 'if' → logprob: -18.85127067565918

Token 827: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. 'res' → logprob: -18.75
    4. '(result' → logprob: -19.875
    5. '(re' → logprob: -19.875
    6. ' res' → logprob: -20.375
    7. '(r' → logprob: -20.5
    8. '=res' → logprob: -20.5
    9. ' (' → logprob: -20.625
    10. '(
' → logprob: -21.0

Token 828: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.625
    3. ' )' → logprob: -16.5
    4. ')}' → logprob: -17.875
    5. '())' → logprob: -18.125
    6. ')`' → logprob: -18.375
    7. '   ' → logprob: -18.75
    8. '`)' → logprob: -18.875
    9. '),' → logprob: -19.0
    10. '}' → logprob: -19.0

Token 829: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010816368740051985
    2. '```' → logprob: -7.751081466674805
    3. 'main' → logprob: -7.751081466674805
    4. ' if' → logprob: -9.126081466674805
    5. '<|end|>' → logprob: -9.501081466674805
    6. '#' → logprob: -11.001081466674805
    7. '
' → logprob: -11.376081466674805
    8. 'b' → logprob: -13.751081466674805
    9. ')' → logprob: -13.876081466674805
    10. '\n' → logprob: -14.001081466674805

Token 830: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.14278212189674377
    2. '__' → logprob: -2.017782211303711
    3. '_' → logprob: -9.267782211303711
    4. '___' → logprob: -12.392782211303711
    5. ' _' → logprob: -13.142782211303711
    6. '____' → logprob: -13.392782211303711
    7. '_name' → logprob: -14.142782211303711
    8. ' ___' → logprob: -14.142782211303711
    9. ' ' → logprob: -14.392782211303711
    10. ' ' → logprob: -14.392782211303711

Token 831: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05308430641889572
    2. '==' → logprob: -3.428084373474121
    3. ' ==' → logprob: -4.053084373474121
    4. '=="' → logprob: -7.553084373474121
    5. 'name' → logprob: -7.803084373474121
    6. '__.__' → logprob: -8.178084373474121
    7. '[' → logprob: -9.303084373474121
    8. '=='' → logprob: -9.428084373474121
    9. 'main' → logprob: -9.553084373474121
    10. '.__' → logprob: -9.678084373474121

Token 832: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006573928403668106
    2. '__.__' → logprob: -7.375657558441162
    3. '__.' → logprob: -11.125657081604004
    4. '==' → logprob: -11.875657081604004
    5. '__["' → logprob: -13.000657081604004
    6. '__[' → logprob: -13.625657081604004
    7. ' ==' → logprob: -13.750657081604004
    8. '__('' → logprob: -13.750657081604004
    9. '```' → logprob: -14.375657081604004
    10. '__
' → logprob: -14.375657081604004

Token 833: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1729407161474228
    2. '==' → logprob: -1.922940731048584
    3. ' ==' → logprob: -4.797940731048584
    4. '=="' → logprob: -5.922940731048584
    5. '=='' → logprob: -6.547940731048584
    6. '__.__' → logprob: -8.672940254211426
    7. '=' → logprob: -11.422940254211426
    8. '__('' → logprob: -11.547940254211426
    9. '['' → logprob: -11.672940254211426
    10. '[' → logprob: -11.672940254211426

Token 834: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006721059791743755
    2. ''' → logprob: -5.006721019744873
    3. '__' → logprob: -12.256721496582031
    4. ' "__' → logprob: -14.506721496582031
    5. '"'' → logprob: -15.631721496582031
    6. ''"' → logprob: -15.756721496582031
    7. '"name' → logprob: -17.13172149658203
    8. '"<?' → logprob: -17.75672149658203
    9. '   ' → logprob: -17.88172149658203
    10. 'main' → logprob: -18.00672149658203

Token 835: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.038247693330049515
    2. 'name' → logprob: -3.288247585296631
    3. '__' → logprob: -8.538248062133789
    4. 'if' → logprob: -12.038248062133789
    5. 'built' → logprob: -13.163248062133789
    6. '__.' → logprob: -13.913248062133789
    7. '_main' → logprob: -14.788248062133789
    8. '__':
' → logprob: -15.288248062133789
    9. ' main' → logprob: -16.16324806213379
    10. 'm' → logprob: -16.16324806213379

Token 836: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.18717947602272034
    2. '__' → logprob: -1.812179446220398
    3. '__:' → logprob: -5.6871795654296875
    4. ':' → logprob: -6.0621795654296875
    5. '__":
' → logprob: -7.4371795654296875
    6. '':' → logprob: -7.4371795654296875
    7. '():
' → logprob: -8.937179565429688
    8. '_' → logprob: -9.437179565429688
    9. '():' → logprob: -9.437179565429688
    10. '('__' → logprob: -9.562179565429688

Token 837: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07904224842786789
    2. 'main' → logprob: -2.5790421962738037
    3. '	main' → logprob: -8.954042434692383
    4. ' main' → logprob: -11.079042434692383
    5. '```' → logprob: -13.204042434692383
    6. '(main' → logprob: -13.704042434692383
    7. '   ' → logprob: -13.954042434692383
    8. 'import' → logprob: -14.079042434692383
    9. '    
' → logprob: -14.329042434692383
    10. '_main' → logprob: -14.579042434692383

Token 838: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.75
    3. '	main' → logprob: -22.75
    4. '_main' → logprob: -23.875
    5. '   ' → logprob: -25.375
    6. '.main' → logprob: -26.375
    7. '(main' → logprob: -27.25
    8. 'Main' → logprob: -27.5
    9. 'import' → logprob: -27.625
    10. '-main' → logprob: -29.5

Token 839: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 837
Tokens correctement prédits (1ère position, stricte): 384
Tokens correctement prédits (1ère position, avec adaptation): 415
Tokens correctement prédits (top 10): 738
Précision stricte (1ère position): 45.88%
Précision adaptée (1ère position): 49.58%
Précision (top 10): 88.17%
================================================================================
