================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    N = int(input())
    if N == 0:
        break

    knowledge = [set() for _ in range(N+1)]
    for i in range(1, N+1):
        data = list(map(int, input().split()))
        M = data[0]
        if M > 0:
            knowledge[i].update(data[1:])

    data = list(map(int, input().split()))
    K = data[0]
    leaked = set(data[1:])

    possible_suspects = []
    for suspect in range(1, N+1):
        # suspect must be able to know at least all leaked members
        if not leaked.issubset(knowledge[suspect]):
            continue

        # we simulate that suspect leaked exactly these members.
        # Check if this assumption leads to contradiction:
        # Nobody else can have leaked any member outside leaked set.
        # Also, anyone in leaked set must be known by suspect.
        contradiction = False
        for member in range(1, N+1):
            if member == suspect:
                continue
            # member's known set should not contain anyone outside leaked,
            # because leaked info did not leak that info
            if not knowledge[member].issubset(leaked):
                contradiction = True
                break
        if contradiction:
            continue
        possible_suspects.append(suspect)

    if len(possible_suspects) == 1:
        print(possible_suspects[0])
    else:
        print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14202077686786652
    2. ' ' → logprob: -3.0170207023620605
    3. '    ' → logprob: -4.1420207023620605
    4. '\' → logprob: -4.2670207023620605
    5. ' 
' → logprob: -4.5170207023620605
    6. '    
' → logprob: -4.5170207023620605
    7. '\n' → logprob: -5.0170207023620605
    8. '```' → logprob: -5.0170207023620605
    9. ':' → logprob: -5.1420207023620605
    10. '  
' → logprob: -6.5170207023620605

Token 4: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.22697913646698
    2. 'o' → logprob: -1.60197913646698
    3. '=' → logprob: -1.72697913646698
    4. '+' → logprob: -1.97697913646698
    5. '   ' → logprob: -3.1019792556762695
    6. '>' → logprob: -3.4769792556762695
    7. '-' → logprob: -3.7269792556762695
    8. '_' → logprob: -3.8519792556762695
    9. 'e' → logprob: -4.7269792556762695
    10. '.' → logprob: -4.9769792556762695

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08874967694282532
    2. ' input' → logprob: -2.838749647140503
    3. 'int' → logprob: -3.838749647140503
    4. 'input' → logprob: -5.338749885559082
    5. ' ' → logprob: -10.338749885559082
    6. ' randint' → logprob: -11.338749885559082
    7. ' eval' → logprob: -11.463749885559082
    8. ' N' → logprob: -12.463749885559082
    9. ' len' → logprob: -12.588749885559082
    10. '0' → logprob: -12.588749885559082

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038116078823804855
    2. '(input' → logprob: -3.288115978240967
    3. 'input' → logprob: -10.538116455078125
    4. '(
' → logprob: -11.288116455078125
    5. '('' → logprob: -11.663116455078125
    6. '()' → logprob: -11.788116455078125
    7. ' (' → logprob: -12.163116455078125
    8. '(open' → logprob: -12.663116455078125
    9. '(N' → logprob: -13.663116455078125
    10. ' ' → logprob: -14.038116455078125

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13003364205360413
    2. '()' → logprob: -2.2550337314605713
    3. '())' → logprob: -4.880033493041992
    4. ')' → logprob: -5.005033493041992
    5. '('' → logprob: -6.630033493041992
    6. '(
' → logprob: -8.255033493041992
    7. '("("' → logprob: -8.255033493041992
    8. '()))' → logprob: -8.755033493041992
    9. '```' → logprob: -8.880033493041992
    10. '(""))' → logprob: -9.255033493041992

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9660837650299072
    2. ' ' → logprob: -1.3410837650299072
    3. '<|end|>' → logprob: -2.0910837650299072
    4. ' if' → logprob: -2.8410837650299072
    5. ')' → logprob: -3.0910837650299072
    6. '    ' → logprob: -3.2160837650299072
    7. '  ' → logprob: -3.7160837650299072
    8. '    
' → logprob: -4.216083526611328
    9. 'if' → logprob: -4.341083526611328
    10. ':' → logprob: -4.341083526611328

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4922998249530792
    2. '<|end|>' → logprob: -1.8672997951507568
    3. ' if' → logprob: -2.367299795150757
    4. ')' → logprob: -3.117299795150757
    5. '  ' → logprob: -3.742299795150757
    6. '   ' → logprob: -4.117300033569336
    7. 'if' (adapté à ' if') → logprob: -4.367300033569336
    8. '+' → logprob: -4.367300033569336
    9. '    ' → logprob: -4.992300033569336
    10. '%' → logprob: -5.367300033569336

Token 11: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.024110734462738037
    2. ' ' → logprob: -3.774110794067383
    3. ' not' → logprob: -7.649110794067383
    4. 'N' → logprob: -7.899110794067383
    5. '  ' → logprob: -11.774110794067383
    6. ' ' → logprob: -12.024110794067383
    7. '<|end|>' → logprob: -14.024110794067383
    8. ')' → logprob: -14.649110794067383
    9. ' )' → logprob: -14.774110794067383
    10. 'not' → logprob: -14.774110794067383

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5600399971008301
    2. ' >' → logprob: -1.43503999710083
    3. ' <=' → logprob: -2.06003999710083
    4. ' <' → logprob: -3.43503999710083
    5. '==' → logprob: -4.43503999710083
    6. '>' → logprob: -4.93503999710083
    7. ' ' → logprob: -5.31003999710083
    8. ' >=' → logprob: -5.68503999710083
    9. ')' → logprob: -7.06003999710083
    10. '<=' → logprob: -7.18503999710083

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17975158989429474
    2. '0' → logprob: -1.8047516345977783
    3. ' ' → logprob: -12.9297513961792
    4. '  ' → logprob: -13.5547513961792
    5. ')' → logprob: -14.3047513961792
    6. '1' → logprob: -14.9297513961792
    7. '<|end|>' → logprob: -15.3672513961792
    8. '    ' → logprob: -15.6797513961792
    9. ' a' → logprob: -15.6797513961792
    10. ' )' → logprob: -15.8672513961792

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018185412511229515
    2. ' ' → logprob: -4.018185615539551
    3. '-' → logprob: -10.64318561553955
    4. ' -' → logprob: -12.26818561553955
    5. '1' → logprob: -12.89318561553955
    6. '42' → logprob: -14.01818561553955
    7. '   ' → logprob: -14.26818561553955
    8. '  ' → logprob: -14.26818561553955
    9. '```' → logprob: -14.39318561553955
    10. '4' → logprob: -15.39318561553955

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2948405128554441e-05
    2. ':
' → logprob: -11.87501335144043
    3. ' :' → logprob: -13.25001335144043
    4. '   ' → logprob: -13.62501335144043
    5. ':return' → logprob: -13.87501335144043
    6. '):' → logprob: -14.00001335144043
    7. '       ' → logprob: -14.62501335144043
    8. ':**' → logprob: -16.12501335144043
    9. '():' → logprob: -16.25001335144043
    10. '    ' → logprob: -16.37501335144043

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007218453683890402
    2. '   ' → logprob: -7.7507219314575195
    3. ' break' → logprob: -8.37572193145752
    4. '\n' → logprob: -10.75072193145752
    5. '	break' → logprob: -11.75072193145752
    6. '    ' → logprob: -11.87572193145752
    7. '      ' → logprob: -12.25072193145752
    8. ':' → logprob: -12.25072193145752
    9. '     ' → logprob: -12.50072193145752
    10. '\t' → logprob: -13.25072193145752

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.02022453583776951
    2. '       ' → logprob: -4.020224571228027
    3. 'break' (adapté à ' break') → logprob: -6.270224571228027
    4. '\n' → logprob: -10.020224571228027
    5. '	break' → logprob: -10.020224571228027
    6. '   ' → logprob: -10.020224571228027
    7. '_break' → logprob: -10.895224571228027
    8. '```' → logprob: -11.395224571228027
    9. ' \' → logprob: -12.520224571228027
    10. 'Break' → logprob: -13.270224571228027

Token 18: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06683287024497986
    2. '    
' → logprob: -3.5668327808380127
    3. '```' → logprob: -4.191833019256592
    4. '\n' → logprob: -4.441833019256592
    5. '\' → logprob: -5.691833019256592
    6. '
' → logprob: -5.941833019256592
    7. ')' → logprob: -7.191833019256592
    8. '<|end|>' → logprob: -7.566833019256592
    9. '#' → logprob: -7.816833019256592
    10. '\r' → logprob: -8.066832542419434

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04007711261510849
    2. '    
' → logprob: -3.5400772094726562
    3. '```' → logprob: -5.415077209472656
    4. '\' → logprob: -6.040077209472656
    5. '    ' → logprob: -7.290077209472656
    6. '\n' → logprob: -7.415077209472656
    7. ' ' → logprob: -7.790077209472656
    8. ')' → logprob: -8.290077209472656
    9. ' 
' → logprob: -8.540077209472656
    10. '  
' → logprob: -9.165077209472656

Token 20: ' knowledge' (ID: 7124)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36224645376205444
    2. ' ' → logprob: -2.237246513366699
    3. '    ' → logprob: -2.987246513366699
    4. 's' → logprob: -3.112246513366699
    5. 'sum' → logprob: -3.362246513366699
    6. 'n' → logprob: -4.112246513366699
    7. '    
' → logprob: -4.737246513366699
    8. ' sum' → logprob: -5.487246513366699
    9. 'print' → logprob: -5.737246513366699
    10. '  ' → logprob: -5.987246513366699

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35042306780815125
    2. '_points' → logprob: -1.9754230976104736
    3. '_' → logprob: -2.3504230976104736
    4. '=' → logprob: -3.4754230976104736
    5. '_space' → logprob: -4.6004228591918945
    6. '[' → logprob: -5.6004228591918945
    7. '_base' → logprob: -6.2254228591918945
    8. '_level' → logprob: -6.4754228591918945
    9. '_levels' → logprob: -6.4754228591918945
    10. '_point' → logprob: -6.7254228591918945

Token 22: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7624949812889099
    2. '[]' → logprob: -1.7624950408935547
    3. '{}' → logprob: -2.1374950408935547
    4. ' {}' → logprob: -2.5124950408935547
    5. ' [' → logprob: -2.8874950408935547
    6. 'set' → logprob: -2.8874950408935547
    7. ' set' → logprob: -3.6374950408935547
    8. '[' → logprob: -3.8874950408935547
    9. ' ' → logprob: -6.637495040893555
    10. 'list' → logprob: -7.012495040893555

Token 23: 'set' (ID: 977)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3386981785297394
    2. 'list' → logprob: -1.463698148727417
    3. 'int' → logprob: -3.588698148727417
    4. ']' → logprob: -4.338698387145996
    5. '[]' → logprob: -4.588698387145996
    6. ' list' → logprob: -6.088698387145996
    7. 'False' → logprob: -6.963698387145996
    8. '[int' → logprob: -7.088698387145996
    9. '   ' → logprob: -7.963698387145996
    10. '[' → logprob: -8.463698387145996

Token 24: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10051310062408447
    2. '()]' → logprob: -2.350512981414795
    3. '(' → logprob: -8.850513458251953
    4. '(),' → logprob: -9.975513458251953
    5. '(range' → logprob: -9.975513458251953
    6. '())' → logprob: -10.100513458251953
    7. '(input' → logprob: -12.350513458251953
    8. '()+' → logprob: -12.600513458251953
    9. '()}' → logprob: -12.725513458251953
    10. ' ()' → logprob: -13.100513458251953

Token 25: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03844271972775459
    2. '()]' → logprob: -3.288442611694336
    3. 'for' → logprob: -8.913442611694336
    4. '(' → logprob: -9.663442611694336
    5. '())' → logprob: -10.038442611694336
    6. '(),' → logprob: -10.163442611694336
    7. ' for' → logprob: -10.163442611694336
    8. ']' → logprob: -10.663442611694336
    9. '(range' → logprob: -11.288442611694336
    10. ')' → logprob: -11.663442611694336

Token 26: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0159138441085815
    2. ' range' → logprob: -1.2659138441085815
    3. ' _' → logprob: -1.3909138441085815
    4. ' ' → logprob: -2.390913963317871
    5. '(range' → logprob: -5.765913963317871
    6. 'range' → logprob: -5.890913963317871
    7. ' i' → logprob: -5.890913963317871
    8. '()' → logprob: -6.390913963317871
    9. '(' → logprob: -6.515913963317871
    10. ' ()' → logprob: -6.765913963317871

Token 27: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5412607192993164
    2. ' range' → logprob: -1.2912607192993164
    3. ' in' → logprob: -2.0412607192993164
    4. 'in' → logprob: -4.541260719299316
    5. ' ' → logprob: -6.416260719299316
    6. '_' → logprob: -7.916260719299316
    7. ' _' → logprob: -7.916260719299316
    8. '	range' → logprob: -10.291260719299316
    9. 'i' → logprob: -10.416260719299316
    10. ' xrange' → logprob: -10.666260719299316

Token 28: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141440629959106
    2. ' range' → logprob: -1.7014143466949463
    3. '(range' → logprob: -14.576414108276367
    4. ' ' → logprob: -15.451414108276367
    5. '	range' → logprob: -15.576414108276367
    6. '   ' → logprob: -16.451414108276367
    7. '  ' → logprob: -16.701414108276367
    8. '_range' → logprob: -16.826414108276367
    9. 'rang' → logprob: -16.951414108276367
    10. '_' → logprob: -17.076414108276367

Token 29: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.012533433735370636
    2. '(' → logprob: -4.387533664703369
    3. '(n' → logprob: -10.887533187866211
    4. ' (' → logprob: -13.387533187866211
    5. '(M' → logprob: -14.387533187866211
    6. '((' → logprob: -14.387533187866211
    7. '(K' → logprob: -14.512533187866211
    8. 'N' → logprob: -14.887533187866211
    9. '(A' → logprob: -15.512533187866211
    10. '(
' → logprob: -15.512533187866211

Token 30: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.531813702778891e-05
    2. ')' → logprob: -10.12509536743164
    3. ']' → logprob: -10.87509536743164
    4. ' )' → logprob: -11.25009536743164
    5. '   ' → logprob: -11.75009536743164
    6. ')]
' → logprob: -11.87509536743164
    7. '])]' → logprob: -13.87509536743164
    8. ')])' → logprob: -14.00009536743164
    9. '>]' → logprob: -14.12509536743164
    10. '+' → logprob: -14.50009536743164

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000418040988733992
    2. '2' → logprob: -8.500417709350586
    3. ' ' → logprob: -8.625417709350586
    4. '3' → logprob: -12.000417709350586
    5. ')' → logprob: -12.000417709350586
    6. '10' → logprob: -12.250417709350586
    7. 'N' → logprob: -12.250417709350586
    8. '5' → logprob: -12.750417709350586
    9. ')]' → logprob: -13.250417709350586
    10. '   ' → logprob: -13.437917709350586

Token 32: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.023406894877552986
    2. ']' → logprob: -4.023406982421875
    3. ')' → logprob: -5.273406982421875
    4. '   ' → logprob: -9.398406982421875
    5. ' )' → logprob: -12.023406982421875
    6. '])' → logprob: -12.273406982421875
    7. ']
' → logprob: -12.398406982421875
    8. ' ]' → logprob: -12.773406982421875
    9. ')]
' → logprob: -13.148406982421875
    10. '])]' → logprob: -13.273406982421875

Token 33: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46961671113967896
    2. '<|end|>' → logprob: -1.7196166515350342
    3. '   ' → logprob: -1.8446166515350342
    4. '    
' → logprob: -4.469616889953613
    5. ' 
' → logprob: -4.844616889953613
    6. '  
' → logprob: -5.719616889953613
    7. ' ' → logprob: -5.969616889953613
    8. ')' → logprob: -5.969616889953613
    9. '```' → logprob: -6.469616889953613
    10. '    ' → logprob: -6.469616889953613

Token 34: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4158819913864136
    2. 'for' (adapté à ' for') → logprob: -1.9158819913864136
    3. ' for' → logprob: -2.415882110595703
    4. '<|end|>' → logprob: -3.415882110595703
    5. ' 
' → logprob: -3.665882110595703
    6. '    
' → logprob: -3.790882110595703
    7. ' ' → logprob: -4.540882110595703
    8. '
' → logprob: -5.540882110595703
    9. '    ' → logprob: -6.665882110595703
    10. '   
' → logprob: -7.040882110595703

Token 35: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1479577273130417
    2. ' i' → logprob: -2.0229578018188477
    3. '_' → logprob: -5.272957801818848
    4. 'i' → logprob: -9.772957801818848
    5. ' ' → logprob: -9.772957801818848
    6. '_i' → logprob: -11.272957801818848
    7. ' person' → logprob: -12.147957801818848
    8. ' range' → logprob: -12.897957801818848
    9. ' student' → logprob: -13.772957801818848
    10. ' user' → logprob: -14.397957801818848

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007648034021258354
    2. 'in' → logprob: -4.88264799118042
    3. ' ' → logprob: -10.632648468017578
    4. 'n' → logprob: -11.882648468017578
    5. '	in' → logprob: -13.132648468017578
    6. ' i' → logprob: -13.382648468017578
    7. '_' → logprob: -13.507648468017578
    8. 'range' → logprob: -13.632648468017578
    9. '  ' → logprob: -13.882648468017578
    10. ',' → logprob: -14.382648468017578

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0013272607466205955
    2. 'range' → logprob: -6.626327037811279
    3. ' ' → logprob: -13.876327514648438
    4. '	range' → logprob: -15.626327514648438
    5. '(range' → logprob: -16.751327514648438
    6. ' xrange' → logprob: -18.001327514648438
    7. '  ' → logprob: -18.376327514648438
    8. ' ran' → logprob: -19.001327514648438
    9. '_range' → logprob: -19.126327514648438
    10. ')' → logprob: -19.126327514648438

Token 38: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026860725483857095
    2. '(N' → logprob: -8.500268936157227
    3. ' (' → logprob: -9.750268936157227
    4. ' ' → logprob: -12.875268936157227
    5. '(n' → logprob: -13.375268936157227
    6. '(
' → logprob: -13.625268936157227
    7. '1' → logprob: -14.250268936157227
    8. ' N' → logprob: -14.625268936157227
    9. '(i' → logprob: -16.375268936157227
    10. '(

' → logprob: -16.375268936157227

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23255504667758942
    2. 'N' → logprob: -1.6075550317764282
    3. ' N' → logprob: -5.107554912567139
    4. ' ' → logprob: -6.982554912567139
    5. '   ' → logprob: -9.232555389404297
    6. '2' → logprob: -10.857555389404297
    7. ')' → logprob: -12.357555389404297
    8. 'n' → logprob: -12.482555389404297
    9. 'i' → logprob: -12.732555389404297
    10. '(' → logprob: -12.982555389404297

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004780288320034742
    2. ' ,' → logprob: -5.379780292510986
    3. ',N' → logprob: -8.879779815673828
    4. ',
' → logprob: -11.254779815673828
    5. ',n' → logprob: -12.254779815673828
    6. ',num' → logprob: -14.379779815673828
    7. ',len' → logprob: -14.754779815673828
    8. ',i' → logprob: -14.879779815673828
    9. ' ,
' → logprob: -15.004779815673828
    10. 'to' → logprob: -15.129779815673828

Token 41: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3132897615432739
    2. ' N' → logprob: -1.313289761543274
    3. 'n' → logprob: -11.063289642333984
    4. ' n' → logprob: -11.688289642333984
    5. ' ' → logprob: -12.938289642333984
    6. ')' → logprob: -14.063289642333984
    7. '   ' → logprob: -14.688289642333984
    8. '1' → logprob: -16.438289642333984
    9. '    ' → logprob: -16.438289642333984
    10. ' )' → logprob: -17.063289642333984

Token 42: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0018219047924503684
    2. ' +' → logprob: -6.626821994781494
    3. '):' → logprob: -7.626821994781494
    4. '+:' → logprob: -12.876821517944336
    5. '+
' → logprob: -13.126821517944336
    6. '):
' → logprob: -13.251821517944336
    7. ')' → logprob: -14.001821517944336
    8. ' ):' → logprob: -15.251821517944336
    9. ':' → logprob: -15.501821517944336
    10. '   ' → logprob: -15.501821517944336

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -10.500029563903809
    3. '+' → logprob: -14.500029563903809
    4. ')' → logprob: -14.750029563903809
    5. '   ' → logprob: -15.375029563903809
    6. '2' → logprob: -15.500029563903809
    7. '```' → logprob: -15.625029563903809
    8. '  ' → logprob: -17.125028610229492
    9. '-' → logprob: -17.500028610229492
    10. '):' → logprob: -17.750028610229492

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03173164650797844
    2. ':' → logprob: -3.656731605529785
    3. ')' → logprob: -5.406731605529785
    4. ' ):' → logprob: -7.281731605529785
    5. '):
' → logprob: -9.281731605529785
    6. '():' → logprob: -9.406731605529785
    7. ' )' → logprob: -10.531731605529785
    8. '   ' → logprob: -11.156731605529785
    9. ']:' → logprob: -11.531731605529785
    10. ',' → logprob: -12.656731605529785

Token 45: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7042296528816223
    2. '       ' → logprob: -1.4542295932769775
    3. ' ' → logprob: -1.9542295932769775
    4. '    ' → logprob: -2.5792295932769775
    5. '<|end|>' → logprob: -3.7042295932769775
    6. ' input' → logprob: -5.079229831695557
    7. ' )' → logprob: -5.454229831695557
    8. ')' → logprob: -5.704229831695557
    9. ' ' → logprob: -5.954229831695557
    10. ' 
' → logprob: -6.204229831695557

Token 46: ' data' (ID: 1238)
  Prédit: ' knowledge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' knowledge' → logprob: -0.8197425007820129
    2. ' line' → logprob: -1.5697424411773682
    3. ' data' → logprob: -2.194742441177368
    4. ' parts' → logprob: -2.944742441177368
    5. ' k' → logprob: -3.444742441177368
    6. ' inputs' → logprob: -3.444742441177368
    7. ' for' → logprob: -3.569742441177368
    8. ' input' → logprob: -3.819742441177368
    9. ' s' → logprob: -4.194742679595947
    10. ' tokens' → logprob: -4.819742679595947

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20189858973026276
    2. '=' → logprob: -1.7018985748291016
    3. '.' → logprob: -8.326898574829102
    4. '[' → logprob: -8.826898574829102
    5. '.=' → logprob: -11.076898574829102
    6. ' ' → logprob: -11.451898574829102
    7. '_' → logprob: -11.576898574829102
    8. '=input' → logprob: -11.576898574829102
    9. '   ' → logprob: -11.701898574829102
    10. ',' → logprob: -11.951898574829102

Token 48: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.19043034315109253
    2. 'list' → logprob: -2.0654304027557373
    3. ' input' → logprob: -3.5654304027557373
    4. 'input' → logprob: -4.190430164337158
    5. ' set' → logprob: -6.315430164337158
    6. 'set' → logprob: -6.940430164337158
    7. ' map' → logprob: -8.565430641174316
    8. 'map' → logprob: -9.190430641174316
    9. '[' → logprob: -9.690430641174316
    10. ' [' → logprob: -10.565430641174316

Token 49: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.205007866024971
    2. '(' → logprob: -1.7050079107284546
    3. '(input' → logprob: -5.830008029937744
    4. '(int' → logprob: -7.455008029937744
    5. '()' → logprob: -9.830007553100586
    6. '(eval' → logprob: -12.580007553100586
    7. '(range' → logprob: -12.830007553100586
    8. '(data' → logprob: -12.955007553100586
    9. '(

' → logprob: -13.580007553100586
    10. '(
' → logprob: -13.705007553100586

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009333750349469483
    2. '(' → logprob: -7.0009331703186035
    3. 'int' → logprob: -11.750933647155762
    4. '<int' → logprob: -12.375933647155762
    5. '(input' → logprob: -12.500933647155762
    6. '(str' → logprob: -12.625933647155762
    7. '(
' → logprob: -14.000933647155762
    8. '(lambda' → logprob: -14.125933647155762
    9. '=int' → logprob: -15.000933647155762
    10. ']int' → logprob: -15.375933647155762

Token 51: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014368460513651371
    2. '(' → logprob: -4.514368534088135
    3. ',input' → logprob: -5.889368534088135
    4. 'input' → logprob: -7.889368534088135
    5. ')' → logprob: -9.389368057250977
    6. ',' → logprob: -10.264368057250977
    7. '(int' → logprob: -11.264368057250977
    8. ' input' → logprob: -11.389368057250977
    9. '(in' → logprob: -12.264368057250977
    10. ' (' → logprob: -12.514368057250977

Token 52: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02057190239429474
    2. ' input' → logprob: -3.8955719470977783
    3. ',input' → logprob: -11.5205717086792
    4. '   ' → logprob: -11.6455717086792
    5. ')' → logprob: -12.0205717086792
    6. '(input' → logprob: -13.0205717086792
    7. '	input' → logprob: -13.5205717086792
    8. '=input' → logprob: -14.6455717086792
    9. '))' → logprob: -15.2705717086792
    10. ' ' → logprob: -15.3955717086792

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00026634239475242794
    2. '()' → logprob: -8.375266075134277
    3. '(' → logprob: -10.625266075134277
    4. ' ().' → logprob: -12.250266075134277
    5. ')' → logprob: -12.750266075134277
    6. '()))' → logprob: -13.500266075134277
    7. '())' → logprob: -14.750266075134277
    8. '   ' → logprob: -15.375266075134277
    9. '(input' → logprob: -15.625266075134277
    10. '()));' → logprob: -15.875266075134277

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004103573504835367
    2. 'strip' → logprob: -5.504103660583496
    3. 'rstrip' → logprob: -10.879103660583496
    4. '(split' → logprob: -12.879103660583496
    5. ' split' → logprob: -13.004103660583496
    6. ')' → logprob: -14.254103660583496
    7. 'spl' → logprob: -14.754103660583496
    8. 's' → logprob: -15.254103660583496
    9. 'read' → logprob: -16.62910270690918
    10. 'plit' → logprob: -16.62910270690918

Token 55: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07730501145124435
    2. '()' → logprob: -2.7023050785064697
    3. '())' → logprob: -5.327304840087891
    4. '(' → logprob: -6.702304840087891
    5. '))' → logprob: -6.827304840087891
    6. '()))
' → logprob: -9.45230484008789
    7. '())))' → logprob: -10.70230484008789
    8. ')' → logprob: -10.82730484008789
    9. '()));' → logprob: -11.20230484008789
    10. '(),' → logprob: -11.45230484008789

Token 56: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2401301860809326
    2. ' ' → logprob: -1.3651301860809326
    3. ' )' → logprob: -1.4901301860809326
    4. '   ' → logprob: -2.1151301860809326
    5. ':' → logprob: -3.2401301860809326
    6. '    ' → logprob: -3.9901301860809326
    7. ' :' → logprob: -4.240130424499512
    8. '(' → logprob: -4.615130424499512
    9. '<|end|>' → logprob: -5.365130424499512
    10. ' for' → logprob: -5.615130424499512

Token 57: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04660456255078316
    2. ' )' → logprob: -3.921604633331299
    3. ')' → logprob: -4.671604633331299
    4. ' for' → logprob: -5.421604633331299
    5. ' :' → logprob: -5.421604633331299
    6. 'for' → logprob: -6.046604633331299
    7. ':' → logprob: -6.421604633331299
    8. '    ' → logprob: -7.296604633331299
    9. ' ,' → logprob: -7.421604633331299
    10. '<|end|>' → logprob: -7.671604633331299

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048639826476573944
    2. '=' → logprob: -3.0486397743225098
    3. '=data' → logprob: -9.923640251159668
    4. ' ' → logprob: -13.798640251159668
    5. ' =
' → logprob: -14.298640251159668
    6. '    ' → logprob: -15.173640251159668
    7. ',' → logprob: -15.173640251159668
    8. '=len' → logprob: -15.298640251159668
    9. ' =)' → logprob: -15.548640251159668
    10. '=int' → logprob: -15.673640251159668

Token 59: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.04858839511871338
    2. 'data' → logprob: -3.048588275909424
    3. ' ' → logprob: -15.173588752746582
    4. ')data' → logprob: -15.548588752746582
    5. '(data' → logprob: -15.798588752746582
    6. '	data' → logprob: -16.048587799072266
    7. 'len' → logprob: -16.298587799072266
    8. ' len' → logprob: -16.423587799072266
    9. ' dat' → logprob: -16.923587799072266
    10. '[data' → logprob: -17.798587799072266

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.8444881536415778e-05
    2. '0' → logprob: -11.000028610229492
    3. '1' → logprob: -11.500028610229492
    4. ' [' → logprob: -14.750028610229492
    5. '   ' → logprob: -15.000028610229492
    6. '```' → logprob: -15.375028610229492
    7. '[
' → logprob: -16.000028610229492
    8. '(' → logprob: -16.375028610229492
    9. '()[' → logprob: -16.375028610229492
    10. '[i' → logprob: -16.625028610229492

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001170132018160075
    2. ' ' → logprob: -9.125117301940918
    3. '1' → logprob: -11.875117301940918
    4. '   ' → logprob: -14.625117301940918
    5. '[' → logprob: -15.937617301940918
    6. '  ' → logprob: -16.3751163482666
    7. '    ' → logprob: -17.0001163482666
    8. ']' → logprob: -17.1251163482666
    9. ')' → logprob: -17.3126163482666
    10. '۰' → logprob: -17.3126163482666

Token 62: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023238400171976537
    2. ' )' → logprob: -8.500232696533203
    3. ')
' → logprob: -11.250232696533203
    4. '])' → logprob: -13.000232696533203
    5. ',' → logprob: -13.250232696533203
    6. '<|end|>' → logprob: -13.500232696533203
    7. '))' → logprob: -13.875232696533203
    8. ')data' → logprob: -14.000232696533203
    9. ' ' → logprob: -14.125232696533203
    10. ')>' → logprob: -14.250232696533203

Token 63: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.394549697637558
    2. 'for' → logprob: -1.1445497274398804
    3. 'knowledge' → logprob: -5.76954984664917
    4. ' knowledge' → logprob: -5.89454984664917
    5. '<|end|>' → logprob: -7.14454984664917
    6. '   ' → logprob: -8.644549369812012
    7. ' ' → logprob: -8.769549369812012
    8. '<|end|>' → logprob: -8.769549369812012
    9. '    ' → logprob: -9.019549369812012
    10. '	for' → logprob: -10.144549369812012

Token 65: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.0892917811870575
    2. 'M' → logprob: -2.46429181098938
    3. ' ' → logprob: -8.3392915725708
    4. ' len' → logprob: -9.9642915725708
    5. ' data' → logprob: -10.4642915725708
    6. 'len' → logprob: -11.9642915725708
    7. 'data' → logprob: -11.9642915725708
    8. ' N' → logprob: -12.3392915725708
    9. ' not' → logprob: -12.5892915725708
    10. ' i' → logprob: -12.5892915725708

Token 66: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09054595232009888
    2. '>' → logprob: -2.590545892715454
    3. ' ==' → logprob: -4.590546131134033
    4. '==' → logprob: -6.715546131134033
    5. ' >=' → logprob: -9.840545654296875
    6. ' ' → logprob: -10.215545654296875
    7. ' !=' → logprob: -10.215545654296875
    8. ' <' → logprob: -10.340545654296875
    9. '=' → logprob: -10.590545654296875
    10. ' ' → logprob: -11.840545654296875

Token 67: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04301152005791664
    2. ' ' → logprob: -3.168011426925659
    3. '1' → logprob: -12.543011665344238
    4. '>' → logprob: -12.668011665344238
    5. '=' → logprob: -13.293011665344238
    6. '<|end|>' → logprob: -13.293011665344238
    7. '  ' → logprob: -14.168011665344238
    8. '">' → logprob: -15.605511665344238
    9. ' M' → logprob: -15.668011665344238
    10. 'M' → logprob: -15.980511665344238

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021319588995538652
    2. ' ' → logprob: -8.500213623046875
    3. '1' → logprob: -11.875213623046875
    4. '>' → logprob: -14.125213623046875
    5. '```' → logprob: -14.500213623046875
    6. '۰' → logprob: -15.125213623046875
    7. '=' → logprob: -15.250213623046875
    8. '  ' → logprob: -16.062713623046875
    9. '2' → logprob: -16.125213623046875
    10. '０' → logprob: -16.687713623046875

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0043642520904541016
    2. ' :' → logprob: -5.754364013671875
    3. ',' → logprob: -6.879364013671875
    4. ':
' → logprob: -9.879364013671875
    5. '):' → logprob: -10.004364013671875
    6. ' ,' → logprob: -10.754364013671875
    7. '   ' → logprob: -11.129364013671875
    8. '       ' → logprob: -12.254364013671875
    9. ' :
' → logprob: -12.629364013671875
    10. ' and' → logprob: -13.004364013671875

Token 70: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0787474513053894
    2. '<|end|>' → logprob: -3.703747510910034
    3. '    ' → logprob: -4.078747272491455
    4. ' for' → logprob: -4.453747272491455
    5. '       ' → logprob: -4.828747272491455
    6. '        ' → logprob: -6.078747272491455
    7. '   ' → logprob: -6.203747272491455
    8. ':' → logprob: -6.453747272491455
    9. ',' → logprob: -6.578747272491455
    10. ' ,' → logprob: -6.703747272491455

Token 71: ' knowledge' (ID: 7124)
  Prédit: ' knowledge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' knowledge' → logprob: -0.010079395025968552
    2. 'knowledge' (adapté à ' knowledge') → logprob: -5.010079383850098
    3. ' for' → logprob: -5.760079383850098
    4. 'for' → logprob: -9.260079383850098
    5. '   ' → logprob: -10.635079383850098
    6. ' 
' → logprob: -10.760079383850098
    7. '    ' → logprob: -10.885079383850098
    8. '           ' → logprob: -12.010079383850098
    9. ' ' → logprob: -12.135079383850098
    10. '
' → logprob: -12.260079383850098

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3843342661857605
    2. '.update' → logprob: -1.2593343257904053
    3. '[' → logprob: -3.7593343257904053
    4. '.' → logprob: -4.884334087371826
    5. '.add' → logprob: -6.009334087371826
    6. '[u' → logprob: -6.634334087371826
    7. '.union' → logprob: -8.009334564208984
    8. ' .' → logprob: -9.759334564208984
    9. '.setdefault' → logprob: -9.884334564208984
    10. '[I' → logprob: -10.509334564208984

Token 73: '].' (ID: 1651)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.6614788770675659
    2. '.' → logprob: -0.7864788770675659
    3. '].' → logprob: -4.0364789962768555
    4. ' |=' → logprob: -5.1614789962768555
    5. ' .' → logprob: -5.9114789962768555
    6. '.add' → logprob: -7.2864789962768555
    7. ').' → logprob: -7.2864789962768555
    8. '.union' → logprob: -8.036478996276855
    9. ' ].' → logprob: -8.536478996276855
    10. '|' → logprob: -8.911478996276855

Token 74: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.007164535578340292
    2. 'up' → logprob: -5.257164478302002
    3. 'add' → logprob: -7.132164478302002
    4. 'u' → logprob: -7.257164478302002
    5. 'upd' → logprob: -7.882164478302002
    6. 'upt' → logprob: -10.88216495513916
    7. 'union' → logprob: -11.75716495513916
    8. '.update' → logprob: -11.88216495513916
    9. 'udp' → logprob: -12.88216495513916
    10. 'a' → logprob: -13.38216495513916

Token 75: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -7.147740689106286e-05
    2. '(' → logprob: -9.87507152557373
    3. '(set' → logprob: -11.00007152557373
    4. 'data' → logprob: -13.12507152557373
    5. '(dat' → logprob: -14.50007152557373
    6. ' (' → logprob: -15.62507152557373
    7. '((' → logprob: -15.87507152557373
    8. '([' → logprob: -16.000070571899414
    9. '(d' → logprob: -16.500070571899414
    10. ' data' → logprob: -16.875070571899414

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008459602249786258
    2. '(' → logprob: -7.125845909118652
    3. '1' → logprob: -11.250845909118652
    4. '   ' → logprob: -11.375845909118652
    5. '2' → logprob: -11.625845909118652
    6. '```' → logprob: -13.500845909118652
    7. '[
' → logprob: -13.500845909118652
    8. ')' → logprob: -13.875845909118652
    9. ' [' → logprob: -14.375845909118652
    10. ',' → logprob: -14.625845909118652

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040767391328699887
    2. '2' → logprob: -8.000407218933105
    3. ' ' → logprob: -10.000407218933105
    4. '[' → logprob: -11.500407218933105
    5. '   ' → logprob: -12.375407218933105
    6. '```' → logprob: -12.687907218933105
    7. ':' → logprob: -13.125407218933105
    8. 'range' → logprob: -13.187907218933105
    9. '  ' → logprob: -13.375407218933105
    10. '(' → logprob: -14.625407218933105

Token 78: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005318781826645136
    2. ':M' → logprob: -5.380318641662598
    3. ':]' → logprob: -7.630318641662598
    4. ' :' → logprob: -8.630318641662598
    5. ':])
' → logprob: -11.380318641662598
    6. ':i' → logprob: -12.505318641662598
    7. ':m' → logprob: -12.755318641662598
    8. '])' → logprob: -12.880318641662598
    9. ':].' → logprob: -13.130318641662598
    10. ':],' → logprob: -13.130318641662598

Token 79: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.040592458099126816
    2. 'M' → logprob: -3.5405924320220947
    3. ' ])' → logprob: -4.790592670440674
    4. ']' → logprob: -6.415592670440674
    5. ' M' → logprob: -7.415592670440674
    6. ']))' → logprob: -9.165592193603516
    7. '1' → logprob: -10.415592193603516
    8. ' ' → logprob: -10.790592193603516
    9. ')])' → logprob: -11.165592193603516
    10. ' ]' → logprob: -11.290592193603516

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042665012180805206
    2. '<|end|>' → logprob: -3.9176650047302246
    3. '
' → logprob: -4.667665004730225
    4. ' for' → logprob: -5.667665004730225
    5. 'for' → logprob: -6.042665004730225
    6. '       ' → logprob: -6.417665004730225
    7. '    
' → logprob: -6.542665004730225
    8. ' ' → logprob: -7.042665004730225
    9. ')' → logprob: -7.167665004730225
    10. '```' → logprob: -7.917665004730225

Token 81: ' data' (ID: 1238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43413352966308594
    2. 'for' → logprob: -1.434133529663086
    3. ' for' → logprob: -2.559133529663086
    4. 'while' → logprob: -4.309133529663086
    5. '    
' → logprob: -4.809133529663086
    6. '
' → logprob: -5.059133529663086
    7. ' while' → logprob: -5.934133529663086
    8. '  ' → logprob: -7.059133529663086
    9. '```' → logprob: -7.059133529663086
    10. '   
' → logprob: -7.184133529663086

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023213563486933708
    2. '=' → logprob: -3.8982136249542236
    3. '[' → logprob: -6.0232133865356445
    4. '_' → logprob: -9.648213386535645
    5. 's' → logprob: -9.648213386535645
    6. ' ' → logprob: -10.398213386535645
    7. '.' → logprob: -10.773213386535645
    8. ')' → logprob: -11.148213386535645
    9. '[:]' → logprob: -11.398213386535645
    10. '   ' → logprob: -11.523213386535645

Token 83: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20692914724349976
    2. 'list' → logprob: -1.7069292068481445
    3. ' input' → logprob: -5.4569292068481445
    4. 'input' → logprob: -7.0819292068481445
    5. ' [' → logprob: -8.706929206848145
    6. '[' → logprob: -9.831929206848145
    7. 'int' → logprob: -9.831929206848145
    8. ' data' → logprob: -10.331929206848145
    9. ' int' → logprob: -10.456929206848145
    10. '[]' → logprob: -11.456929206848145

Token 84: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030852550640702248
    2. '(map' → logprob: -4.030852317810059
    3. '(int' → logprob: -4.655852317810059
    4. ' (' → logprob: -6.655852317810059
    5. '()' → logprob: -7.030852317810059
    6. '(input' → logprob: -7.780852317810059
    7. '(
' → logprob: -8.405852317810059
    8. '(list' → logprob: -8.530852317810059
    9. '(

' → logprob: -10.530852317810059
    10. '(range' → logprob: -11.280852317810059

Token 85: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00014478032244369388
    2. '(' → logprob: -9.000144958496094
    3. '<int' → logprob: -11.250144958496094
    4. '[int' → logprob: -13.000144958496094
    5. ',int' → logprob: -13.625144958496094
    6. '=int' → logprob: -13.625144958496094
    7. ']int' → logprob: -13.750144958496094
    8. '<|end|>' → logprob: -14.000144958496094
    9. '(lambda' → logprob: -14.750144958496094
    10. '(input' → logprob: -14.750144958496094

Token 86: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5932034254074097
    2. '(' → logprob: -1.3432034254074097
    3. ',' → logprob: -2.218203544616699
    4. '(),' → logprob: -2.968203544616699
    5. ',input' → logprob: -3.843203544616699
    6. '()' → logprob: -5.968203544616699
    7. '(int' → logprob: -6.343203544616699
    8. ')' → logprob: -8.9682035446167
    9. '())' → logprob: -9.4682035446167
    10. '```' → logprob: -9.7182035446167

Token 87: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07003779709339142
    2. 'input' → logprob: -2.695037841796875
    3. ')' → logprob: -9.570037841796875
    4. '(input' → logprob: -10.820037841796875
    5. ',input' → logprob: -12.695037841796875
    6. ' )' → logprob: -12.820037841796875
    7. 'int' → logprob: -13.070037841796875
    8. '=input' → logprob: -14.320037841796875
    9. ' ' → logprob: -14.695037841796875
    10. '	input' → logprob: -14.820037841796875

Token 88: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0036349925212562084
    2. '()' → logprob: -5.628634929656982
    3. '()))' → logprob: -10.62863540649414
    4. '())' → logprob: -11.87863540649414
    5. ' ().' → logprob: -13.25363540649414
    6. '.' → logprob: -14.50363540649414
    7. '(' → logprob: -14.75363540649414
    8. '   ' → logprob: -15.12863540649414
    9. ')' → logprob: -15.37863540649414
    10. '())))' → logprob: -15.75363540649414

Token 89: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.309382373117842e-05
    2. 'strip' → logprob: -10.375033378601074
    3. ' split' → logprob: -13.500033378601074
    4. ')' → logprob: -15.875033378601074
    5. 'spl' → logprob: -15.875033378601074
    6. 'rstrip' → logprob: -17.125032424926758
    7. '.split' → logprob: -17.250032424926758
    8. '(split' → logprob: -17.375032424926758
    9. 's' → logprob: -18.000032424926758
    10. 'sp' → logprob: -18.875032424926758

Token 90: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.34564489126205444
    2. '())' → logprob: -1.5956449508666992
    3. '()' → logprob: -2.470644950866699
    4. '))' → logprob: -5.845644950866699
    5. ')' → logprob: -6.595644950866699
    6. '(' → logprob: -7.595644950866699
    7. '()))
' → logprob: -9.0956449508667
    8. '())
' → logprob: -11.0956449508667
    9. '(),' → logprob: -11.8456449508667
    10. ' ())' → logprob: -11.8456449508667

Token 91: '   ' (ID: 271)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.4155704975128174
    2. 'K' → logprob: -1.7905704975128174
    3. 'A' → logprob: -2.4155704975128174
    4. 'S' → logprob: -3.0405704975128174
    5. 'R' → logprob: -3.5405704975128174
    6. 'X' → logprob: -3.5405704975128174
    7. 'P' → logprob: -3.6655704975128174
    8. 'answers' → logprob: -3.6655704975128174
    9. '   ' → logprob: -3.7905704975128174
    10. 'answer' → logprob: -3.7905704975128174

Token 92: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' (adapté à ' K') → logprob: -0.7439062595367432
    2. 'Q' → logprob: -0.9939062595367432
    3. 'X' → logprob: -3.493906259536743
    4. 'S' → logprob: -3.868906259536743
    5. 'P' → logprob: -4.118906021118164
    6. 'A' → logprob: -4.868906021118164
    7. 'L' → logprob: -4.993906021118164
    8. 'target' → logprob: -5.118906021118164
    9. 'R' → logprob: -5.243906021118164
    10. 'D' → logprob: -5.243906021118164

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008647071197628975
    2. '=' → logprob: -4.7586469650268555
    3. ' ' → logprob: -10.758646965026855
    4. ',' → logprob: -12.133646965026855
    5. ' ,' → logprob: -13.633646965026855
    6. ' =
' → logprob: -13.758646965026855
    7. ')' → logprob: -14.383646965026855
    8. ' =)' → logprob: -14.383646965026855
    9. ' =[' → logprob: -14.383646965026855
    10. '=int' → logprob: -15.133646965026855

Token 94: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.02055893838405609
    2. 'data' → logprob: -3.8955588340759277
    3. ' len' → logprob: -11.645559310913086
    4. ' ' → logprob: -12.395559310913086
    5. 'len' → logprob: -13.520559310913086
    6. ' dat' → logprob: -14.145559310913086
    7. '0' → logprob: -14.645559310913086
    8. '1' → logprob: -14.895559310913086
    9. ' int' → logprob: -15.145559310913086
    10. '(data' → logprob: -15.520559310913086

Token 95: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022940391500014812
    2. '0' → logprob: -8.500229835510254
    3. '[-' → logprob: -11.750229835510254
    4. '[
' → logprob: -12.500229835510254
    5. '[:]' → logprob: -12.625229835510254
    6. '()[' → logprob: -13.000229835510254
    7. ' [' → logprob: -13.125229835510254
    8. ' ' → logprob: -13.750229835510254
    9. '[]' → logprob: -13.875229835510254
    10. '(' → logprob: -13.875229835510254

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.469590491382405e-05
    2. '-' → logprob: -10.37507438659668
    3. ' ' → logprob: -10.62507438659668
    4. '1' → logprob: -11.00007438659668
    5. ']' → logprob: -14.12507438659668
    6. '[' → logprob: -14.62507438659668
    7. '   ' → logprob: -15.00007438659668
    8. ')' → logprob: -15.37507438659668
    9. '
' → logprob: -15.87507438659668
    10. '2' → logprob: -16.12507438659668

Token 97: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027432903880253434
    2. ')
' → logprob: -8.875274658203125
    3. ' )' → logprob: -9.125274658203125
    4. '<|end|>' → logprob: -11.000274658203125
    5. '   ' → logprob: -13.250274658203125
    6. ')>' → logprob: -14.000274658203125
    7. '<|end|>' → logprob: -14.125274658203125
    8. ']' → logprob: -14.125274658203125
    9. '[' → logprob: -14.625274658203125
    10. '#' → logprob: -14.750274658203125

Token 98: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' leaked' (ID: 87013)
  Prédit: 'friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'friends' → logprob: -2.3476905822753906
    2. 'people' → logprob: -2.5976905822753906
    3. 'for' → logprob: -2.7226905822753906
    4. 'known' → logprob: -2.9726905822753906
    5. 'students' → logprob: -3.0976905822753906
    6. 'result' → logprob: -3.0976905822753906
    7. 'answers' → logprob: -3.2226905822753906
    8. 'answer' → logprob: -3.3476905822753906
    9. 'kn' → logprob: -3.5976905822753906
    10. 'learn' → logprob: -3.7851905822753906

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2860252857208252
    2. '=' → logprob: -1.4110252857208252
    3. '_' → logprob: -6.036025047302246
    4. '_set' → logprob: -7.036025047302246
    5. 's' → logprob: -7.911025047302246
    6. '=set' → logprob: -8.411025047302246
    7. 'knowledge' → logprob: -8.661025047302246
    8. '_sources' → logprob: -9.161025047302246
    9. '_to' → logprob: -9.536025047302246
    10. '_sets' → logprob: -9.786025047302246

Token 101: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.18224814534187317
    2. 'set' → logprob: -1.8072481155395508
    3. ' {' → logprob: -6.932248115539551
    4. ' data' → logprob: -7.182248115539551
    5. '{' → logprob: -7.557248115539551
    6. 'data' → logprob: -9.05724811553955
    7. ' ' → logprob: -10.30724811553955
    8. ' [' → logprob: -10.30724811553955
    9. '	set' → logprob: -10.80724811553955
    10. ' ' → logprob: -11.93224811553955

Token 102: '(data' (ID: 4819)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6494213938713074
    2. '(data' → logprob: -0.8994213938713074
    3. '(' → logprob: -2.649421453475952
    4. ' ()' → logprob: -9.774421691894531
    5. '([' → logprob: -10.024421691894531
    6. '((' → logprob: -11.524421691894531
    7. '([]' → logprob: -11.649421691894531
    8. '()(' → logprob: -11.899421691894531
    9. '()
' → logprob: -12.149421691894531
    10. ' (' → logprob: -12.149421691894531

Token 103: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009675608016550541
    2. '()[' → logprob: -7.750967502593994
    3. '(' → logprob: -8.000967979431152
    4. ')' → logprob: -9.000967979431152
    5. ' [' → logprob: -10.250967979431152
    6. ')[' → logprob: -11.750967979431152
    7. '   ' → logprob: -11.750967979431152
    8. '([' → logprob: -12.000967979431152
    9. '```' → logprob: -12.375967979431152
    10. '[
' → logprob: -12.500967979431152

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023131117632146925
    2. ' ' → logprob: -8.750231742858887
    3. '   ' → logprob: -10.375231742858887
    4. ':' → logprob: -10.875231742858887
    5. '(' → logprob: -11.875231742858887
    6. ':]' → logprob: -12.250231742858887
    7. '2' → logprob: -13.000231742858887
    8. '  ' → logprob: -13.000231742858887
    9. '[' → logprob: -13.375231742858887
    10. ' :' → logprob: -13.750231742858887

Token 105: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00031413204851560295
    2. ':]' → logprob: -9.125313758850098
    3. '])' → logprob: -9.250313758850098
    4. ' :' → logprob: -9.500313758850098
    5. ':])
' → logprob: -11.250313758850098
    6. ':],' → logprob: -11.875313758850098
    7. ':)' → logprob: -12.625313758850098
    8. ':k' → logprob: -12.875313758850098
    9. ':].' → logprob: -13.625313758850098
    10. ' ' → logprob: -13.750313758850098

Token 106: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.009224360808730125
    2. ' ])' → logprob: -5.3842244148254395
    3. ')' → logprob: -5.5092244148254395
    4. ']' → logprob: -8.509223937988281
    5. '])
' → logprob: -8.884223937988281
    6. ' )' → logprob: -9.009223937988281
    7. '   ' → logprob: -11.009223937988281
    8. ')])' → logprob: -11.134223937988281
    9. ' ' → logprob: -11.384223937988281
    10. ')]' → logprob: -12.009223937988281

Token 107: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7998191714286804
    2. '   ' → logprob: -0.7998191714286804
    3. '<|end|>' → logprob: -3.174819231033325
    4. 'while' → logprob: -3.799819231033325
    5. '    
' → logprob: -4.049818992614746
    6. ' while' → logprob: -4.549818992614746
    7. ' 
' → logprob: -5.924818992614746
    8. 'for' → logprob: -6.299818992614746
    9. ' for' → logprob: -6.674818992614746
    10. '  
' → logprob: -7.049818992614746

Token 108: ' possible' (ID: 4149)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.8985896706581116
    2. 'while' → logprob: -1.8985896110534668
    3. 'changed' → logprob: -2.023589611053467
    4. 'for' → logprob: -2.398589611053467
    5. '   ' → logprob: -2.773589611053467
    6. 'visited' → logprob: -3.148589611053467
    7. 'change' → logprob: -3.523589611053467
    8. 'stack' → logprob: -3.898589611053467
    9. 'updated' → logprob: -5.148589611053467
    10. 'result' → logprob: -5.273589611053467

Token 109: '_s' (ID: 1278)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1565699577331543
    2. '=' → logprob: -2.1565699577331543
    3. '_' → logprob: -4.281569957733154
    4. '_people' → logprob: -5.156569957733154
    5. '_le' → logprob: -5.281569957733154
    6. '_candidates' → logprob: -7.406569957733154
    7. '_students' → logprob: -7.906569957733154
    8. 's' → logprob: -7.906569957733154
    9. '_kn' → logprob: -8.156570434570312
    10. '_users' → logprob: -8.531570434570312

Token 110: 'us' (ID: 385)
  Prédit: 'ources'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ources' → logprob: -0.7327368259429932
    2. 'pread' → logprob: -1.7327368259429932
    3. 'ource' → logprob: -2.732736825942993
    4. 'enders' → logprob: -2.982736825942993
    5. 'pies' → logprob: -3.357736825942993
    6. 'inks' → logprob: -3.732736825942993
    7. 'e' → logprob: -4.107736587524414
    8. 'p' → logprob: -4.232736587524414
    9. 'py' → logprob: -4.357736587524414
    10. 'us' → logprob: -4.357736587524414

Token 111: 'pects' (ID: 20458)
  Prédit: 'pects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pects' → logprob: -0.008704867213964462
    2. 'pect' → logprob: -5.008704662322998
    3. '```' → logprob: -6.883704662322998
    4. 'p' → logprob: -7.883704662322998
    5. 'pected' → logprob: -9.133705139160156
    6. '=' → logprob: -10.133705139160156
    7. '   ' → logprob: -10.383705139160156
    8. 'ects' → logprob: -10.633705139160156
    9. '	' → logprob: -10.758705139160156
    10. 'cepts' → logprob: -10.883705139160156

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00016802136087790132
    2. '=' → logprob: -8.750167846679688
    3. ' ' → logprob: -11.625167846679688
    4. ' =
' → logprob: -15.500167846679688
    5. 's' → logprob: -15.750167846679688
    6. ' =[' → logprob: -15.875167846679688
    7. ' =
' → logprob: -17.125167846679688
    8. '<|end|>' → logprob: -17.250167846679688
    9. ')' → logprob: -17.500167846679688
    10. '  ' → logprob: -17.750167846679688

Token 113: ' []
' (ID: 8911)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.3185948133468628
    2. 'set' → logprob: -1.3185948133468628
    3. '{' → logprob: -5.818594932556152
    4. ' {' → logprob: -7.068594932556152
    5. ' ' → logprob: -7.693594932556152
    6. '(set' → logprob: -8.443594932556152
    7. ' knowledge' → logprob: -8.818594932556152
    8. '[]' → logprob: -9.193594932556152
    9. '  ' → logprob: -9.318594932556152
    10. '   ' → logprob: -9.443594932556152

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05165831744670868
    2. 'for' → logprob: -3.1766583919525146
    3. ' for' → logprob: -4.9266581535339355
    4. 'while' → logprob: -7.8016581535339355
    5. '
' → logprob: -7.9266581535339355
    6. '<|end|>' → logprob: -7.9266581535339355
    7. '    
' → logprob: -8.926658630371094
    8. ' while' → logprob: -9.926658630371094
    9. '	for' → logprob: -10.301658630371094
    10. '    ' → logprob: -11.801658630371094

Token 115: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00534037034958601
    2. '   ' → logprob: -5.255340576171875
    3. ' for' → logprob: -9.380340576171875
    4. 'while' → logprob: -10.880340576171875
    5. '	for' → logprob: -12.755340576171875
    6. '    
' → logprob: -15.755340576171875
    7. '<|end|>' → logprob: -15.880340576171875
    8. 'i' → logprob: -16.880340576171875
    9. 'if' → logprob: -17.255340576171875
    10. '  ' → logprob: -17.380340576171875

Token 116: ' suspect' (ID: 29645)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25881072878837585
    2. 'i' → logprob: -1.5088107585906982
    3. ' suspect' → logprob: -5.758810520172119
    4. ' person' → logprob: -6.383810520172119
    5. 'sus' → logprob: -7.633810520172119
    6. 'person' → logprob: -7.883810520172119
    7. 's' → logprob: -8.133810997009277
    8. ' s' → logprob: -8.383810997009277
    9. ' j' → logprob: -8.758810997009277
    10. 'j' → logprob: -8.883810997009277

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014615071006119251
    2. 'in' → logprob: -4.264615058898926
    3. ' ' → logprob: -8.889615058898926
    4. ' i' → logprob: -9.389615058898926
    5. 's' → logprob: -9.639615058898926
    6. '	in' → logprob: -10.014615058898926
    7. ',' → logprob: -10.389615058898926
    8. '_' → logprob: -10.889615058898926
    9. '_in' → logprob: -11.014615058898926
    10. '  ' → logprob: -11.264615058898926

Token 118: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0004901225329376757
    2. 'range' → logprob: -7.625490188598633
    3. '(range' → logprob: -13.500490188598633
    4. ' ' → logprob: -14.875490188598633
    5. '	range' → logprob: -15.750490188598633
    6. ' leaked' → logprob: -17.250490188598633
    7. '  ' → logprob: -17.500490188598633
    8. ' ' → logprob: -17.625490188598633
    9. ' rang' → logprob: -17.875490188598633
    10. ' leak' → logprob: -18.000490188598633

Token 119: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.173704271830502e-06
    2. '(N' → logprob: -13.25000286102295
    3. '1' → logprob: -14.37500286102295
    4. '   ' → logprob: -15.12500286102295
    5. ' (' → logprob: -15.25000286102295
    6. '(
' → logprob: -16.500003814697266
    7. '(s' → logprob: -17.125003814697266
    8. '(n' → logprob: -18.125003814697266
    9. ',' → logprob: -18.875003814697266
    10. ' ' → logprob: -19.000003814697266

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005676874425262213
    2. ' ' → logprob: -8.125567436218262
    3. '   ' → logprob: -8.500567436218262
    4. 'N' → logprob: -9.750567436218262
    5. '2' → logprob: -12.375567436218262
    6. '(' → logprob: -13.250567436218262
    7. ' N' → logprob: -13.625567436218262
    8. 'K' → logprob: -14.375567436218262
    9. '0' → logprob: -14.500567436218262
    10. '    ' → logprob: -15.250567436218262

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014203863975126296
    2. ' ,' → logprob: -9.000142097473145
    3. ',N' → logprob: -11.000142097473145
    4. 'N' → logprob: -14.000142097473145
    5. ',n' → logprob: -14.500142097473145
    6. ',
' → logprob: -15.750142097473145
    7. '<|end|>' → logprob: -15.750142097473145
    8. '‌,' → logprob: -16.375141143798828
    9. '(N' → logprob: -16.750141143798828
    10. '(' → logprob: -17.250141143798828

Token 122: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.31326520442962646
    2. ' N' → logprob: -1.3132652044296265
    3. ' ' → logprob: -13.188264846801758
    4. '   ' → logprob: -13.563264846801758
    5. 'len' → logprob: -16.063264846801758
    6. '	N' → logprob: -16.188264846801758
    7. ' len' → logprob: -16.563264846801758
    8. '    ' → logprob: -17.188264846801758
    9. '  ' → logprob: -17.563264846801758
    10. ' ' → logprob: -17.688264846801758

Token 123: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001502717612311244
    2. ' +' → logprob: -6.501502513885498
    3. '+
' → logprob: -15.001502990722656
    4. '＋' → logprob: -18.251502990722656
    5. ' +
' → logprob: -18.501502990722656
    6. ' ' → logprob: -18.626502990722656
    7. '+)' → logprob: -18.751502990722656
    8. '   ' → logprob: -18.751502990722656
    9. '()+' → logprob: -19.001502990722656
    10. '```' → logprob: -19.001502990722656

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.875012397766113
    3. '+' → logprob: -12.375012397766113
    4. '   ' → logprob: -15.125012397766113
    5. '```' → logprob: -15.250012397766113
    6. ')' → logprob: -15.500012397766113
    7. '2' → logprob: -16.750011444091797
    8. 'N' → logprob: -17.812511444091797
    9. '  ' → logprob: -18.312511444091797
    10. '-' → logprob: -18.312511444091797

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0228362288326025
    2. '):
' → logprob: -4.022836208343506
    3. ':' → logprob: -5.397836208343506
    4. ')' → logprob: -9.272836685180664
    5. ' ):' → logprob: -10.022836685180664
    6. ':
' → logprob: -12.647836685180664
    7. ' ):
' → logprob: -12.772836685180664
    8. ' :' → logprob: -13.272836685180664
    9. '):
' → logprob: -14.397836685180664
    10. '):

' → logprob: -14.647836685180664

Token 126: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0616845078766346
    2. '<|end|>' → logprob: -4.061684608459473
    3. '   ' → logprob: -4.311684608459473
    4. '       ' → logprob: -4.686684608459473
    5. ':
' → logprob: -4.811684608459473
    6. ' if' → logprob: -5.311684608459473
    7. ' ' → logprob: -6.061684608459473
    8. '):' → logprob: -6.686684608459473
    9. '    ' → logprob: -7.436684608459473
    10. ' :' → logprob: -7.436684608459473

Token 127: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3183622658252716
    2. '   ' → logprob: -1.8183622360229492
    3. '<|end|>' → logprob: -2.943362236022949
    4. '
' → logprob: -3.818362236022949
    5. 'if' → logprob: -3.943362236022949
    6. '       ' → logprob: -5.443362236022949
    7. '    ' → logprob: -5.818362236022949
    8. ' ' → logprob: -5.818362236022949
    9. ' 
' → logprob: -6.443362236022949
    10. ' possible' → logprob: -7.318362236022949

Token 128: ' suspect' (ID: 29645)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07797212898731232
    2. ' if' → logprob: -2.952972173690796
    3. 'possible' → logprob: -4.077971935272217
    4. 'knowledge' → logprob: -6.577971935272217
    5. 'for' → logprob: -6.702971935272217
    6. 'sus' → logprob: -6.952971935272217
    7. '   ' → logprob: -6.952971935272217
    8. ' possible' → logprob: -7.577971935272217
    9. 'all' → logprob: -8.952972412109375
    10. ' for' → logprob: -9.077972412109375

Token 129: ' must' (ID: 2804)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4147847294807434
    2. ' in' → logprob: -2.9147846698760986
    3. '_kn' → logprob: -2.9147846698760986
    4. 'not' → logprob: -3.0397846698760986
    5. '_not' → logprob: -3.2897846698760986
    6. ' knows' → logprob: -3.6647846698760986
    7. ')' → logprob: -3.7897846698760986
    8. ' if' → logprob: -4.164784908294678
    9. '_le' → logprob: -4.414784908294678
    10. '_' → logprob: -4.539784908294678

Token 130: ' be' (ID: 413)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4032110571861267
    2. 'not' → logprob: -1.1532111167907715
    3. ' have' → logprob: -4.9032111167907715
    4. 'know' → logprob: -5.9032111167907715
    5. 'have' → logprob: -5.9032111167907715
    6. ' know' → logprob: -6.0282111167907715
    7. ' be' → logprob: -7.7782111167907715
    8. '_have' → logprob: -8.528210639953613
    9. '_not' → logprob: -10.028210639953613
    10. 'n't' → logprob: -10.153210639953613

Token 131: ' able' (ID: 3741)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7810009121894836
    2. ' knowledge' → logprob: -1.9060008525848389
    3. 'knowledge' → logprob: -2.781000852584839
    4. 'possible' → logprob: -3.031000852584839
    5. ' all' → logprob: -3.156000852584839
    6. ' possible' → logprob: -3.156000852584839
    7. 'sus' → logprob: -3.281000852584839
    8. 'all' → logprob: -3.781000852584839
    9. ' in' → logprob: -3.906000852584839
    10. ' not' → logprob: -4.156001091003418

Token 132: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.69380122423172
    2. 'to' → logprob: -0.69380122423172
    3. '_to' → logprob: -8.068800926208496
    4. '<|end|>' → logprob: -9.318800926208496
    5. '   ' → logprob: -9.568800926208496
    6. ' ' → logprob: -9.693800926208496
    7. '  ' → logprob: -9.818800926208496
    8. '    ' → logprob: -10.318800926208496
    9. '_' → logprob: -11.943800926208496
    10. '
' → logprob: -12.068800926208496

Token 133: ' know' (ID: 1761)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.610901117324829
    2. 'commun' → logprob: -1.610901117324829
    3. 'learn' → logprob: -2.360901117324829
    4. 'know' → logprob: -2.485901117324829
    5. 'answer' → logprob: -2.735901117324829
    6. ' communicate' → logprob: -2.735901117324829
    7. 'tell' → logprob: -3.110901117324829
    8. ' learn' → logprob: -3.860901117324829
    9. 'teach' → logprob: -3.985901117324829
    10. ' leak' → logprob: -3.985901117324829

Token 134: ' at' (ID: 540)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9908162951469421
    2. 'all' → logprob: -1.740816354751587
    3. ' all' → logprob: -1.865816354751587
    4. 'sus' → logprob: -2.240816354751587
    5. 'knowledge' → logprob: -2.740816354751587
    6. ' knowledge' → logprob: -3.240816354751587
    7. '   ' → logprob: -4.115816116333008
    8. 's' → logprob: -4.115816116333008
    9. ' leaked' → logprob: -4.615816116333008
    10. 'len' → logprob: -4.740816116333008

Token 135: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.023763876408338547
    2. ' least' → logprob: -3.77376389503479
    3. 'most' → logprob: -8.898763656616211
    4. 'le' → logprob: -9.148763656616211
    5. 'lest' → logprob: -9.773763656616211
    6. '```' → logprob: -9.898763656616211
    7. '_le' → logprob: -10.523763656616211
    8. '   ' → logprob: -10.523763656616211
    9. 'east' → logprob: -10.773763656616211
    10. 'lease' → logprob: -10.898763656616211

Token 136: ' all' (ID: 722)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.6378757357597351
    2. ' one' → logprob: -0.7628757357597351
    3. 'len' → logprob: -5.512875556945801
    4. ' K' → logprob: -7.637875556945801
    5. ' len' → logprob: -8.5128755569458
    6. ' ' → logprob: -8.6378755569458
    7. 'K' → logprob: -9.1378755569458
    8. 'le' → logprob: -9.5128755569458
    9. '1' → logprob: -9.6378755569458
    10. '_one' → logprob: -10.5128755569458

Token 137: ' leaked' (ID: 87013)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3191152811050415
    2. ' leaked' → logprob: -1.3191152811050415
    3. '   ' → logprob: -6.194115161895752
    4. ' le' → logprob: -7.319115161895752
    5. ' of' → logprob: -7.444115161895752
    6. ' knowledge' → logprob: -7.944115161895752
    7. ' elements' → logprob: -8.19411563873291
    8. ' leaks' → logprob: -8.19411563873291
    9. ' leaking' → logprob: -8.31911563873291
    10. 'len' → logprob: -8.69411563873291

Token 138: ' members' (ID: 5000)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5427475571632385
    2. '_le' → logprob: -1.6677474975585938
    3. ' ' → logprob: -2.2927474975585938
    4. '<|end|>' → logprob: -2.6677474975585938
    5. '   ' → logprob: -4.417747497558594
    6. ' _' → logprob: -4.667747497558594
    7. '()' → logprob: -5.042747497558594
    8. '_s' → logprob: -5.792747497558594
    9. '  ' → logprob: -5.792747497558594
    10. ' leaked' → logprob: -5.917747497558594

Token 139: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3908647298812866
    2. '       ' → logprob: -1.5158647298812866
    3. '<|end|>' → logprob: -3.015864849090576
    4. '    ' → logprob: -3.515864849090576
    5. ' ' → logprob: -4.890864849090576
    6. ',' → logprob: -5.015864849090576
    7. ' if' → logprob: -5.765864849090576
    8. ':' → logprob: -6.265864849090576
    9. '  ' → logprob: -6.265864849090576
    10. '<|end|>' → logprob: -7.140864849090576

Token 140: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6661739349365234
    2. '       ' → logprob: -0.9161739349365234
    3. '<|end|>' → logprob: -2.6661739349365234
    4. ' if' → logprob: -5.166173934936523
    5. '    ' → logprob: -5.291173934936523
    6. ' ' → logprob: -6.166173934936523
    7. '<|end|>' → logprob: -6.916173934936523
    8. ',' → logprob: -7.416173934936523
    9. '  ' → logprob: -7.416173934936523
    10. '    
' → logprob: -8.416173934936523

Token 141: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13523301482200623
    2. ' if' → logprob: -2.885232925415039
    3. '   ' → logprob: -3.010232925415039
    4. '    ' → logprob: -4.885232925415039
    5. '<|end|>' → logprob: -5.510232925415039
    6. 'if' (adapté à ' if') → logprob: -5.885232925415039
    7. '  ' → logprob: -6.135232925415039
    8. ' 
' → logprob: -6.260232925415039
    9. '       ' → logprob: -6.385232925415039
    10. '    
' → logprob: -8.260232925415039

Token 142: ' not' (ID: 625)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.705528974533081
    2. ' leaked' → logprob: -0.705528974533081
    3. ' knowledge' → logprob: -5.08052921295166
    4. 'knowledge' → logprob: -6.58052921295166
    5. '   ' → logprob: -6.70552921295166
    6. ' le' → logprob: -7.08052921295166
    7. 'len' → logprob: -7.45552921295166
    8. ' leaking' → logprob: -7.70552921295166
    9. ' ' → logprob: -7.83052921295166
    10. ' all' → logprob: -8.45552921295166

Token 143: ' leaked' (ID: 87013)
  Prédit: ' leaked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaked' → logprob: -0.23001374304294586
    2. 'le' → logprob: -1.6050137281417847
    3. ' knowledge' → logprob: -6.230013847351074
    4. ' leaking' → logprob: -6.605013847351074
    5. ' le' → logprob: -8.355013847351074
    6. 'knowledge' → logprob: -8.605013847351074
    7. ' ' → logprob: -8.730013847351074
    8. ' leaks' → logprob: -9.105013847351074
    9. '(le' → logprob: -9.105013847351074
    10. 'leased' → logprob: -9.605013847351074

Token 144: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001315712695941329
    2. '<=' → logprob: -7.001315593719482
    3. ' <=' → logprob: -7.876315593719482
    4. ' .' → logprob: -10.87631607055664
    5. '-' → logprob: -13.12631607055664
    6. ' -' → logprob: -13.50131607055664
    7. '.d' → logprob: -13.75131607055664
    8. '.inter' → logprob: -15.12631607055664
    9. '   ' → logprob: -15.37631607055664
    10. '>' → logprob: -15.50131607055664

Token 145: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.0020022729877382517
    2. 'difference' → logprob: -6.252002239227295
    3. '-' → logprob: -9.627002716064453
    4. '.' → logprob: -13.127002716064453
    5. ' iss' → logprob: -13.252002716064453
    6. '<=' → logprob: -13.502002716064453
    7. 'subtract' → logprob: -15.127002716064453
    8. 's' → logprob: -15.252002716064453
    9. '```' → logprob: -15.377002716064453
    10. 'le' → logprob: -15.502002716064453

Token 146: 'ub' (ID: 431)
  Prédit: 'ub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.0012455896940082312
    2. 'subset' → logprob: -7.376245498657227
    3. 'up' → logprob: -7.501245498657227
    4. 'sub' → logprob: -10.626245498657227
    5. 'ubb' → logprob: -11.501245498657227
    6. '   ' → logprob: -11.751245498657227
    7. 'u' → logprob: -11.751245498657227
    8. 'sup' → logprob: -12.501245498657227
    9. 'ubs' → logprob: -12.876245498657227
    10. ' ub' → logprob: -13.126245498657227

Token 147: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.07221420854330063
    2. 't' → logprob: -3.197214126586914
    3. 'r' → logprob: -3.822214126586914
    4. 'erset' → logprob: -5.322214126586914
    5. '```' → logprob: -6.572214126586914
    6. 'et' → logprob: -8.572214126586914
    7. '``' → logprob: -9.697214126586914
    8. '  ' → logprob: -9.822214126586914
    9. ')set' → logprob: -10.322214126586914
    10. 'sett' → logprob: -10.447214126586914

Token 148: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1888679839321412e-05
    2. ' (' → logprob: -10.750021934509277
    3. '(
' → logprob: -16.12502098083496
    4. '((' → logprob: -16.62502098083496
    5. 'knowledge' → logprob: -17.12502098083496
    6. '(k' → logprob: -17.37502098083496
    7. '(space' → logprob: -17.37502098083496
    8. ')' → logprob: -18.25002098083496
    9. '(kn' → logprob: -18.37502098083496
    10. '(s' → logprob: -18.62502098083496

Token 149: 'knowledge' (ID: 94143)
  Prédit: 'knowledge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'knowledge' → logprob: -0.1448148488998413
    2. '(' → logprob: -2.019814968109131
    3. ' knowledge' → logprob: -6.394814968109131
    4. ')' → logprob: -7.894814968109131
    5. 'know' → logprob: -9.519814491271973
    6. ' (' → logprob: -11.769814491271973
    7. ' )' → logprob: -12.644814491271973
    8. ')(' → logprob: -13.144814491271973
    9. ' ' → logprob: -13.269814491271973
    10. 'k' → logprob: -13.894814491271973

Token 150: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0007925973040983081
    2. '[' → logprob: -7.375792503356934
    3. 'sus' → logprob: -8.875792503356934
    4. ')[' → logprob: -11.125792503356934
    5. ' [' → logprob: -11.875792503356934
    6. ')' → logprob: -13.625792503356934
    7. ')s' → logprob: -14.250792503356934
    8. '[pos' → logprob: -14.375792503356934
    9. ' suspect' → logprob: -15.375792503356934
    10. '[
' → logprob: -15.375792503356934

Token 151: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.03287370875477791
    2. '[' → logprob: -4.157873630523682
    3. 'pect' → logprob: -5.032873630523682
    4. 'sus' → logprob: -5.407873630523682
    5. 'ect' → logprob: -5.782873630523682
    6. 'usp' → logprob: -7.157873630523682
    7. '[s' → logprob: -7.532873630523682
    8. 'u' → logprob: -8.40787410736084
    9. '[u' → logprob: -8.78287410736084
    10. 's' → logprob: -9.03287410736084

Token 152: 'pect' (ID: 1248)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00222590658813715
    2. '[' → logprob: -6.502225875854492
    3. 'ct' → logprob: -8.002225875854492
    4. 'pect' → logprob: -8.377225875854492
    5. '[c' → logprob: -11.002225875854492
    6. 'sect' → logprob: -11.502225875854492
    7. 't' → logprob: -11.502225875854492
    8. '```' → logprob: -11.502225875854492
    9. ')' → logprob: -11.627225875854492
    10. '[s' → logprob: -11.752225875854492

Token 153: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7711084485054016
    2. ']):' → logprob: -0.7711084485054016
    3. ']):
' → logprob: -3.146108388900757
    4. '):
' → logprob: -3.896108388900757
    5. ')' → logprob: -5.021108627319336
    6. ')):' → logprob: -6.146108627319336
    7. ']' → logprob: -7.146108627319336
    8. '])' → logprob: -7.521108627319336
    9. '[' → logprob: -8.021108627319336
    10. ')]' → logprob: -8.521108627319336

Token 154: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33184292912483215
    2. ':
' → logprob: -1.4568428993225098
    3. '       ' → logprob: -3.2068428993225098
    4. ' continue' → logprob: -5.20684289932251
    5. 'continue' → logprob: -5.83184289932251
    6. '):
' → logprob: -8.706843376159668
    7. '           ' → logprob: -9.206843376159668
    8. '   ' → logprob: -9.456843376159668
    9. '	continue' → logprob: -9.706843376159668
    10. '):' → logprob: -10.081843376159668

Token 155: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15058323740959167
    2. ' continue' → logprob: -2.150583267211914
    3. '   ' → logprob: -4.025583267211914
    4. 'continue' (adapté à ' continue') → logprob: -5.525583267211914
    5. '
' → logprob: -6.900583267211914
    6. '	continue' → logprob: -8.025583267211914
    7. ' 
' → logprob: -9.525583267211914
    8. '    
' → logprob: -10.650583267211914
    9. ' continues' → logprob: -10.775583267211914
    10. '```' → logprob: -10.900583267211914

Token 156: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3617036044597626
    2. '    
' → logprob: -2.236703634262085
    3. '       ' → logprob: -2.361703634262085
    4. '
' → logprob: -2.611703634262085
    5. '\n' → logprob: -4.861703395843506
    6. '<|end|>' → logprob: -5.236703395843506
    7. '        
' → logprob: -5.361703395843506
    8. '\' → logprob: -5.986703395843506
    9. '  
' → logprob: -6.611703395843506
    10. ')' → logprob: -6.736703395843506

Token 157: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4709141254425049
    2. '       ' → logprob: -1.7209141254425049
    3. '   ' → logprob: -1.8459141254425049
    4. '    
' → logprob: -4.095913887023926
    5. ')' → logprob: -5.095913887023926
    6. '        
' → logprob: -5.595913887023926
    7. '<|end|>' → logprob: -5.970913887023926
    8. '  
' → logprob: -6.220913887023926
    9. '\n' → logprob: -6.470913887023926
    10. ')
' → logprob: -6.470913887023926

Token 158: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.12478096783161163
    2. '   ' → logprob: -2.2497808933258057
    3. ' possible' → logprob: -4.624781131744385
    4. 'if' → logprob: -6.874781131744385
    5. ' if' → logprob: -8.124780654907227
    6. 'for' → logprob: -8.874780654907227
    7. '       ' → logprob: -9.124780654907227
    8. '#' (adapté à ' #') → logprob: -9.499780654907227
    9. '    
' → logprob: -9.624780654907227
    10. ' for' → logprob: -9.874780654907227

Token 159: ' we' (ID: 581)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.16837452352046967
    2. 'for' → logprob: -2.418374538421631
    3. '#' → logprob: -3.918374538421631
    4. ' possible' → logprob: -5.043374538421631
    5. 'all' → logprob: -5.043374538421631
    6. ' for' → logprob: -5.168374538421631
    7. 'can' → logprob: -5.668374538421631
    8. 'flag' → logprob: -5.668374538421631
    9. 'found' → logprob: -5.793374538421631
    10. 'sus' → logprob: -5.918374538421631

Token 160: ' simulate' (ID: 66687)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15318401157855988
    2. '       ' → logprob: -3.028183937072754
    3. '    ' → logprob: -3.153183937072754
    4. ' continue' → logprob: -3.653183937072754
    5. ' can' → logprob: -5.278183937072754
    6. ' if' → logprob: -5.403183937072754
    7. ' have' → logprob: -5.653183937072754
    8. ' want' → logprob: -6.278183937072754
    9. ' must' → logprob: -6.653183937072754
    10. ' check' → logprob: -6.778183937072754

Token 161: ' that' (ID: 484)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.36658668518066406
    2. ' a' → logprob: -1.491586685180664
    3. '   ' → logprob: -3.491586685180664
    4. 'a' → logprob: -4.241586685180664
    5. 'the' → logprob: -4.241586685180664
    6. ' an' → logprob: -4.366586685180664
    7. ' knowledge' → logprob: -6.741586685180664
    8. ' possible' → logprob: -6.741586685180664
    9. ' propagation' → logprob: -6.866586685180664
    10. 'possible' → logprob: -7.241586685180664

Token 162: ' suspect' (ID: 29645)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3840076923370361
    2. ' suspect' → logprob: -1.6340076923370361
    3. ' knowledge' → logprob: -1.6340076923370361
    4. '   ' → logprob: -2.384007692337036
    5. ' for' → logprob: -3.009007692337036
    6. ' possible' → logprob: -3.384007692337036
    7. 'sus' → logprob: -3.384007692337036
    8. 'knowledge' → logprob: -3.509007692337036
    9. ' if' → logprob: -4.134007453918457
    10. ' all' → logprob: -4.384007453918457

Token 163: ' leaked' (ID: 87013)
  Prédit: ' knows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' knows' → logprob: -0.17361785471439362
    2. ' can' → logprob: -3.0486178398132324
    3. 'kn' → logprob: -3.0486178398132324
    4. ' is' → logprob: -3.9236178398132324
    5. ' has' → logprob: -4.548617839813232
    6. ''s' → logprob: -4.673617839813232
    7. ' could' → logprob: -5.423617839813232
    8. '_kn' → logprob: -5.923617839813232
    9. ')' → logprob: -6.548617839813232
    10. ' already' → logprob: -6.673617839813232

Token 164: ' exactly' (ID: 9707)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23646597564220428
    2. ' the' → logprob: -1.8614659309387207
    3. ' to' → logprob: -4.611465930938721
    4. ' a' → logprob: -4.736465930938721
    5. 'the' → logprob: -4.736465930938721
    6. ',' → logprob: -5.361465930938721
    7. ' their' → logprob: -5.986465930938721
    8. ')' → logprob: -6.111465930938721
    9. '.' → logprob: -6.111465930938721
    10. ' all' → logprob: -6.236465930938721

Token 165: ' these' (ID: 1879)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6893947124481201
    2. 'le' → logprob: -1.1893947124481201
    3. 'the' → logprob: -2.06439471244812
    4. '1' → logprob: -4.439394950866699
    5. '{k' → logprob: -4.564394950866699
    6. 'knowledge' → logprob: -4.689394950866699
    7. 'sus' → logprob: -4.689394950866699
    8. 'all' → logprob: -5.314394950866699
    9. ' the' → logprob: -5.564394950866699
    10. ' {' → logprob: -5.939394950866699

Token 166: ' members' (ID: 5000)
  Prédit: ' knowledge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' knowledge' → logprob: -1.0299748182296753
    2. ' members' → logprob: -1.1549748182296753
    3. ' leaked' → logprob: -1.7799748182296753
    4. 'knowledge' → logprob: -2.779974937438965
    5. 'members' → logprob: -3.404974937438965
    6. ' information' → logprob: -3.654974937438965
    7. ' people' → logprob: -4.529974937438965
    8. 'le' → logprob: -5.279974937438965
    9. ' secrets' → logprob: -5.654974937438965
    10. ' suspects' → logprob: -5.654974937438965

Token 167: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30562901496887207
    2. '       ' → logprob: -1.805629014968872
    3. '
' → logprob: -2.555629014968872
    4. '<|end|>' → logprob: -4.305628776550293
    5. '        
' → logprob: -6.430628776550293
    6. '    
' → logprob: -6.555628776550293
    7. ',' → logprob: -6.555628776550293
    8. ' to' → logprob: -6.930628776550293
    9. ' for' → logprob: -7.555628776550293
    10. '<|end|>' → logprob: -8.055628776550293

Token 168: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033960677683353424
    2. '       ' → logprob: -3.9089605808258057
    3. ' for' → logprob: -5.408960819244385
    4. '    
' → logprob: -5.908960819244385
    5. 'for' → logprob: -6.033960819244385
    6. '    ' → logprob: -7.033960819244385
    7. '
' → logprob: -7.408960819244385
    8. ' if' → logprob: -7.783960819244385
    9. 'possible' → logprob: -7.783960819244385
    10. '        
' → logprob: -8.283960342407227

Token 169: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2656373977661133
    2. 'possible' → logprob: -1.3906373977661133
    3. ' possible' → logprob: -2.2656373977661133
    4. 'sus' → logprob: -2.6406373977661133
    5. ' can' → logprob: -3.1406373977661133
    6. '       ' → logprob: -3.5156373977661133
    7. ' for' → logprob: -3.6406373977661133
    8. ' suspects' → logprob: -3.6406373977661133
    9. 'visited' → logprob: -4.015637397766113
    10. 'for' → logprob: -4.390637397766113

Token 170: ' Check' (ID: 6208)
  Prédit: 'sus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sus' → logprob: -1.877752661705017
    2. 'for' → logprob: -2.1277527809143066
    3. 'possible' → logprob: -2.1277527809143066
    4. ' for' → logprob: -2.3777527809143066
    5. 'queue' → logprob: -2.7527527809143066
    6. ' queue' → logprob: -2.8777527809143066
    7. ' possible' → logprob: -3.1277527809143066
    8. ' can' → logprob: -3.2527527809143066
    9. 'visited' → logprob: -3.2527527809143066
    10. ' stack' → logprob: -3.5027527809143066

Token 171: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5274561643600464
    2. '   ' → logprob: -1.2774561643600464
    3. 'sus' → logprob: -3.152456283569336
    4. 'if' → logprob: -3.652456283569336
    5. ' suspects' → logprob: -4.152456283569336
    6. ' all' → logprob: -4.402456283569336
    7. 'possible' → logprob: -4.652456283569336
    8. 'all' → logprob: -4.902456283569336
    9. ' possible' → logprob: -4.902456283569336
    10. ' for' → logprob: -6.027456283569336

Token 172: ' this' (ID: 495)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0474132299423218
    2. ' all' → logprob: -1.2974132299423218
    3. ' any' → logprob: -2.4224133491516113
    4. 'knowledge' → logprob: -2.6724133491516113
    5. 'len' → logprob: -3.0474133491516113
    6. 'possible' → logprob: -3.0474133491516113
    7. 'sus' → logprob: -3.2974133491516113
    8. 'any' → logprob: -3.4224133491516113
    9. ' knowledge' → logprob: -3.6724133491516113
    10. ' possible' → logprob: -4.922413349151611

Token 173: ' assumption' (ID: 57291)
  Prédit: ' suspect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suspect' → logprob: -0.4247320890426636
    2. 'sus' → logprob: -2.299732208251953
    3. ' possible' → logprob: -3.049732208251953
    4. ' can' → logprob: -3.049732208251953
    5. 'possible' → logprob: -3.174732208251953
    6. ' is' → logprob: -3.299732208251953
    7. ' suspects' → logprob: -4.049732208251953
    8. ' knowledge' → logprob: -5.174732208251953
    9. ' continues' → logprob: -5.299732208251953
    10. ' could' → logprob: -5.799732208251953

Token 174: ' leads' (ID: 15286)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7647358179092407
    2. ':' → logprob: -1.6397358179092407
    3. ' is' → logprob: -1.6397358179092407
    4. ' leads' → logprob: -3.139735698699951
    5. 'can' → logprob: -3.514735698699951
    6. '   ' → logprob: -3.514735698699951
    7. 'is' → logprob: -4.889735698699951
    8. ' continues' → logprob: -5.014735698699951
    9. ' holds' → logprob: -6.014735698699951
    10. '.' → logprob: -6.139735698699951

Token 175: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.12705746293067932
    2. 'to' → logprob: -2.1270575523376465
    3. '<|end|>' → logprob: -9.502057075500488
    4. ' ' → logprob: -10.502057075500488
    5. '_to' → logprob: -11.627057075500488
    6. '   ' → logprob: -11.627057075500488
    7. 's' → logprob: -12.627057075500488
    8. '<|end|>' → logprob: -13.877057075500488
    9. '```' → logprob: -14.002057075500488
    10. ')' → logprob: -14.502057075500488

Token 176: ' contradiction' (ID: 133882)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34225454926490784
    2. ' a' → logprob: -2.092254638671875
    3. ' any' → logprob: -2.092254638671875
    4. 'any' → logprob: -3.967254638671875
    5. 'contr' → logprob: -4.217254638671875
    6. ' no' → logprob: -5.342254638671875
    7. 'no' → logprob: -6.842254638671875
    8. ' contradictions' → logprob: -7.592254638671875
    9. ' contradiction' → logprob: -7.592254638671875
    10. ' False' → logprob: -7.717254638671875

Token 177: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7070397138595581
    2. '   ' → logprob: -0.8320397138595581
    3. ' possible' → logprob: -4.082039833068848
    4. '           ' → logprob: -4.582039833068848
    5. ' valid' → logprob: -4.582039833068848
    6. ' for' → logprob: -5.457039833068848
    7. 'possible' → logprob: -5.457039833068848
    8. '
' → logprob: -5.582039833068848
    9. ' can' → logprob: -6.082039833068848
    10. '    
' → logprob: -6.207039833068848

Token 179: ' #' (ID: 1069)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -1.0880608558654785
    2. ' possible' → logprob: -1.3380608558654785
    3. 'possible' → logprob: -2.7130608558654785
    4. ' can' → logprob: -2.8380608558654785
    5. '   ' → logprob: -3.0880608558654785
    6. ' suspects' → logprob: -3.5880608558654785
    7. '       ' → logprob: -3.7130608558654785
    8. 'valid' → logprob: -4.0880608558654785
    9. ' found' → logprob: -4.0880608558654785
    10. ' pass' → logprob: -4.3380608558654785

Token 180: ' Nobody' (ID: 78446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2656022310256958
    2. ' valid' → logprob: -2.2656021118164062
    3. ' possible' → logprob: -2.3906021118164062
    4. ' queue' → logprob: -2.5156021118164062
    5. 'possible' → logprob: -2.5156021118164062
    6. '       ' → logprob: -2.6406021118164062
    7. ' can' → logprob: -2.8906021118164062
    8. 'queue' → logprob: -3.3906021118164062
    9. 'valid' → logprob: -3.8906021118164062
    10. ' stack' → logprob: -4.140602111816406

Token 181: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8395660519599915
    2. 'else' → logprob: -0.9645660519599915
    3. ' can' → logprob: -2.4645659923553467
    4. ' in' → logprob: -3.4645659923553467
    5. ' knows' → logprob: -4.089566230773926
    6. 'kn' → logprob: -4.089566230773926
    7. 'can' → logprob: -4.964566230773926
    8. 'in' → logprob: -5.464566230773926
    9. ' who' → logprob: -5.464566230773926
    10. 'except' → logprob: -5.714566230773926

Token 182: ' can' (ID: 665)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2062402367591858
    2. ' knows' → logprob: -2.706240177154541
    3. 'in' → logprob: -2.956240177154541
    4. ' can' → logprob: -3.581240177154541
    5. ' who' → logprob: -4.956240177154541
    6. 'kn' → logprob: -5.331240177154541
    7. '   ' → logprob: -5.581240177154541
    8. 's' → logprob: -6.081240177154541
    9. 'except' → logprob: -6.206240177154541
    10. ' is' → logprob: -6.331240177154541

Token 183: ' have' (ID: 679)
  Prédit: 'know'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'know' → logprob: -0.9060616493225098
    2. ' have' → logprob: -1.2810616493225098
    3. 'have' → logprob: -2.5310616493225098
    4. ' know' → logprob: -2.5310616493225098
    5. ' leak' → logprob: -2.9060616493225098
    6. 'le' → logprob: -3.9060616493225098
    7. ' learn' → logprob: -4.03106164932251
    8. ' claim' → logprob: -4.15606164932251
    9. 'learn' → logprob: -4.90606164932251
    10. 'k' → logprob: -5.15606164932251

Token 184: ' leaked' (ID: 87013)
  Prédit: 'knowledge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'knowledge' → logprob: -0.5273368954658508
    2. ' knowledge' → logprob: -1.277336835861206
    3. 'le' → logprob: -2.652336835861206
    4. ' leaked' → logprob: -3.027336835861206
    5. 'possible' → logprob: -5.777337074279785
    6. ' le' → logprob: -6.652337074279785
    7. 'know' → logprob: -6.902337074279785
    8. 'known' → logprob: -7.152337074279785
    9. ' possible' → logprob: -7.652337074279785
    10. ' ' → logprob: -7.777337074279785

Token 185: ' any' (ID: 1062)
  Prédit: ' except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -1.390692114830017
    2. ' if' → logprob: -1.515692114830017
    3. '   ' → logprob: -2.3906922340393066
    4. ' the' → logprob: -2.5156922340393066
    5. ')' → logprob: -3.0156922340393066
    6. ' ' → logprob: -3.2656922340393066
    7. 'except' → logprob: -3.5156922340393066
    8. ' leaked' → logprob: -3.5156922340393066
    9. '.' → logprob: -3.8906922340393066
    10. ' any' → logprob: -4.015692234039307

Token 186: ' member' (ID: 6027)
  Prédit: ' leaked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaked' → logprob: -0.31852537393569946
    2. ' knowledge' → logprob: -2.5685253143310547
    3. ' members' → logprob: -2.6935253143310547
    4. ' member' → logprob: -3.9435253143310547
    5. ' additional' → logprob: -4.068525314331055
    6. ' extra' → logprob: -4.193525314331055
    7. 'members' → logprob: -4.943525314331055
    8. 'le' → logprob: -5.068525314331055
    9. 'member' → logprob: -5.068525314331055
    10. 'knowledge' → logprob: -5.068525314331055

Token 187: ' outside' (ID: 7539)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: ' leaked' (ID: 87013)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6133102774620056
    2. ' knowledge' → logprob: -1.6133103370666504
    3. 'knowledge' → logprob: -1.7383103370666504
    4. ' leaked' → logprob: -3.2383103370666504
    5. '(' → logprob: -3.9883103370666504
    6. ' of' → logprob: -5.11331033706665
    7. '(le' → logprob: -5.36331033706665
    8. ' le' → logprob: -5.48831033706665
    9. ' the' → logprob: -5.48831033706665
    10. 'of' → logprob: -6.11331033706665

Token 189: ' set' (ID: 920)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4280097484588623
    2. ':' → logprob: -1.8030097484588623
    3. '       ' → logprob: -2.5530097484588623
    4. '.' → logprob: -3.6780097484588623
    5. '    ' → logprob: -4.678009986877441
    6. '()' → logprob: -4.678009986877441
    7. ')' → logprob: -4.678009986877441
    8. 's' → logprob: -5.053009986877441
    9. '
' → logprob: -5.178009986877441
    10. ',' → logprob: -5.303009986877441

Token 190: '.
' (ID: 558)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.485873818397522
    2. '       ' → logprob: -1.235873818397522
    3. '
' → logprob: -2.6108736991882324
    4. '<|end|>' → logprob: -4.360873699188232
    5. '    
' → logprob: -5.735873699188232
    6. '        
' → logprob: -6.485873699188232
    7. '    ' → logprob: -7.235873699188232
    8. '\n' → logprob: -7.860873699188232
    9. ')' → logprob: -8.36087417602539
    10. ' for' → logprob: -8.48587417602539

Token 192: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1199396625161171
    2. '   ' → logprob: -2.6199395656585693
    3. '<|end|>' → logprob: -3.7449395656585693
    4. '       ' → logprob: -5.369939804077148
    5. ' for' → logprob: -5.994939804077148
    6. 'possible' → logprob: -6.119939804077148
    7. '\n' → logprob: -6.244939804077148
    8. '    
' → logprob: -6.494939804077148
    9. 'for' → logprob: -7.369939804077148
    10. ' possible' → logprob: -7.369939804077148

Token 193: ' Also' (ID: 8820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19303159415721893
    2. 'possible' → logprob: -2.8180315494537354
    3. 'valid' → logprob: -3.4430315494537354
    4. '       ' → logprob: -3.4430315494537354
    5. ' valid' → logprob: -4.1930317878723145
    6. ' possible' → logprob: -4.3180317878723145
    7. ' for' → logprob: -5.4430317878723145
    8. 'contr' → logprob: -5.4430317878723145
    9. ' conflict' → logprob: -5.8180317878723145
    10. 'for' → logprob: -5.8180317878723145

Token 194: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23980484902858734
    2. ' valid' → logprob: -2.364804744720459
    3. ' possible' → logprob: -3.114804744720459
    4. ' for' → logprob: -3.364804744720459
    5. 'possible' → logprob: -4.614804744720459
    6. '       ' → logprob: -5.114804744720459
    7. 'valid' → logprob: -5.489804744720459
    8. 'for' → logprob: -5.864804744720459
    9. ' can' → logprob: -5.864804744720459
    10. ' all' → logprob: -5.989804744720459

Token 195: ' anyone' (ID: 7545)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8695970177650452
    2. ' all' → logprob: -1.6195969581604004
    3. 'for' → logprob: -2.1195969581604004
    4. 'all' → logprob: -2.7445969581604004
    5. ' possible' → logprob: -2.8695969581604004
    6. 'possible' → logprob: -2.9945969581604004
    7. '   ' → logprob: -4.2445969581604
    8. ' suspects' → logprob: -4.4945969581604
    9. ' break' → logprob: -4.6195969581604
    10. ' any' → logprob: -4.7445969581604

Token 196: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: ' leaked' (ID: 87013)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2792454659938812
    2. 'knowledge' → logprob: -2.279245376586914
    3. ' leaked' → logprob: -2.779245376586914
    4. ' knowledge' → logprob: -3.154245376586914
    5. 'range' → logprob: -4.154245376586914
    6. ' range' → logprob: -4.779245376586914
    7. 'sus' → logprob: -5.279245376586914
    8. 'possible' → logprob: -6.154245376586914
    9. ' le' → logprob: -6.654245376586914
    10. '(le' → logprob: -6.904245376586914

Token 198: ' set' (ID: 920)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3294612169265747
    2. ' not' → logprob: -1.4544612169265747
    3. '   ' → logprob: -1.9544612169265747
    4. ':' → logprob: -1.9544612169265747
    5. ' and' → logprob: -2.579461097717285
    6. ' -' → logprob: -3.329461097717285
    7. 'not' → logprob: -3.704461097717285
    8. 'and' → logprob: -4.454461097717285
    9. ':
' → logprob: -4.704461097717285
    10. ' ' → logprob: -5.079461097717285

Token 199: ' must' (ID: 2804)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8282231092453003
    2. ' must' → logprob: -1.7032231092453003
    3. '<|end|>' → logprob: -1.8282231092453003
    4. ' who' → logprob: -3.20322322845459
    5. ' for' → logprob: -3.57822322845459
    6. '   ' → logprob: -3.57822322845459
    7. ' can' → logprob: -4.20322322845459
    8. ' in' → logprob: -4.32822322845459
    9. '<|end|>' → logprob: -4.45322322845459
    10. ' if' → logprob: -4.45322322845459

Token 200: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6337258815765381
    2. ' not' → logprob: -1.383725881576538
    3. 'not' → logprob: -2.133725881576538
    4. ' also' → logprob: -3.883725881576538
    5. 'know' → logprob: -3.883725881576538
    6. 'be' → logprob: -4.008726119995117
    7. ' have' → logprob: -4.258726119995117
    8. ' know' → logprob: -4.758726119995117
    9. 'also' → logprob: -5.008726119995117
    10. 'have' → logprob: -5.133726119995117

Token 201: ' known' (ID: 5542)
  Prédit: 'able'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -1.4752901792526245
    2. 'knowledge' → logprob: -1.6002901792526245
    3. 'in' → logprob: -1.7252901792526245
    4. 'known' → logprob: -2.475290298461914
    5. ' in' → logprob: -2.600290298461914
    6. ' knowledge' → logprob: -2.975290298461914
    7. 'possible' → logprob: -3.350290298461914
    8. ' known' → logprob: -3.475290298461914
    9. 'sus' → logprob: -3.600290298461914
    10. 'le' → logprob: -3.725290298461914

Token 202: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16434133052825928
    2. '   ' → logprob: -2.039341449737549
    3. ' by' → logprob: -5.039341449737549
    4. ' to' → logprob: -5.789341449737549
    5. ')' → logprob: -6.414341449737549
    6. '<|end|>' → logprob: -6.414341449737549
    7. '        
' → logprob: -6.789341449737549
    8. ',' → logprob: -6.789341449737549
    9. '
' → logprob: -7.164341449737549
    10. '    ' → logprob: -7.289341449737549

Token 203: ' suspect' (ID: 29645)
  Prédit: 'sus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sus' → logprob: -0.2418532371520996
    2. ' suspect' → logprob: -1.9918532371520996
    3. 'knowledge' → logprob: -2.7418532371520996
    4. ' knowledge' → logprob: -4.6168532371521
    5. 'the' → logprob: -6.9918532371521
    6. 'le' → logprob: -7.1168532371521
    7. ' suspected' → logprob: -7.8668532371521
    8. ' the' → logprob: -8.241853713989258
    9. '   ' → logprob: -8.366853713989258
    10. ' ' → logprob: -8.366853713989258

Token 204: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6749004125595093
    2. '   ' → logprob: -1.1749004125595093
    3. '<|end|>' → logprob: -2.424900531768799
    4. ':' → logprob: -3.424900531768799
    5. '       ' → logprob: -3.924900531768799
    6. '\n' → logprob: -4.299900531768799
    7. ':
' → logprob: -5.049900531768799
    8. '    
' → logprob: -5.424900531768799
    9. ')' → logprob: -5.924900531768799
    10. '\' → logprob: -5.924900531768799

Token 205: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15789368748664856
    2. '
' → logprob: -2.907893657684326
    3. '       ' → logprob: -2.907893657684326
    4. '<|end|>' → logprob: -4.032893657684326
    5. '    
' → logprob: -4.532893657684326
    6. '        
' → logprob: -6.157893657684326
    7. '\n' → logprob: -6.532893657684326
    8. '  
' → logprob: -7.032893657684326
    9. '    ' → logprob: -7.282893657684326
    10. ')' → logprob: -7.407893657684326

Token 206: ' contradiction' (ID: 133882)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11089741438627243
    2. '       ' → logprob: -2.3608973026275635
    3. '    
' → logprob: -5.735897541046143
    4. 'possible' → logprob: -6.235897541046143
    5. 'valid' → logprob: -7.110897541046143
    6. '
' → logprob: -7.110897541046143
    7. ' if' → logprob: -7.360897541046143
    8. '        
' → logprob: -7.610897541046143
    9. ' possible' → logprob: -7.735897541046143
    10. ' valid' → logprob: -7.985897541046143

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2254830300807953
    2. '=' → logprob: -1.6004830598831177
    3. '=False' → logprob: -10.850482940673828
    4. '   ' → logprob: -11.350482940673828
    5. ':' → logprob: -11.600482940673828
    6. 's' → logprob: -11.850482940673828
    7. '_' → logprob: -11.975482940673828
    8. ' ' → logprob: -12.225482940673828
    9. '=True' → logprob: -12.475482940673828
    10. '_found' → logprob: -12.975482940673828

Token 208: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01814994215965271
    2. ' False' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.268150329589844
    4. '(False' → logprob: -18.393150329589844
    5. 'True' → logprob: -18.518150329589844
    6. 'F' → logprob: -19.143150329589844
    7. '=False' → logprob: -19.518150329589844
    8. '.False' → logprob: -21.393150329589844
    9. ' True' → logprob: -22.018150329589844
    10. 'false' → logprob: -22.018150329589844

Token 209: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.413593590259552
    2. '<|end|>' → logprob: -1.1635935306549072
    3. '   ' → logprob: -4.288593769073486
    4. '\n' → logprob: -4.913593769073486
    5. '       ' → logprob: -6.413593769073486
    6. '    
' → logprob: -6.788593769073486
    7. ' 
' → logprob: -7.663593769073486
    8. '<|end|>' → logprob: -7.788593769073486
    9. '\' → logprob: -7.913593769073486
    10. '  
' → logprob: -8.038593292236328

Token 210: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45280835032463074
    2. '   ' → logprob: -1.5778083801269531
    3. '<|end|>' → logprob: -1.9528083801269531
    4. '       ' → logprob: -5.202808380126953
    5. '\n' → logprob: -5.827808380126953
    6. '    
' → logprob: -5.952808380126953
    7. ' for' → logprob: -6.077808380126953
    8. 'for' → logprob: -7.202808380126953
    9. '<|end|>' → logprob: -7.952808380126953
    10. '  
' → logprob: -7.952808380126953

Token 211: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27218323945999146
    2. 'for' (adapté à ' for') → logprob: -2.0221831798553467
    3. '   ' → logprob: -3.1471831798553467
    4. '
' → logprob: -3.5221831798553467
    5. '       ' → logprob: -3.6471831798553467
    6. '<|end|>' → logprob: -5.897183418273926
    7. ' if' → logprob: -6.647183418273926
    8. ' 
' → logprob: -6.772183418273926
    9. '    
' → logprob: -7.522183418273926
    10. '    ' → logprob: -7.897183418273926

Token 212: ' member' (ID: 6027)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.2788917124271393
    2. ' person' → logprob: -1.778891682624817
    3. 'other' → logprob: -2.7788918018341064
    4. 'person' → logprob: -5.903891563415527
    5. ' member' → logprob: -6.028891563415527
    6. ' p' → logprob: -6.403891563415527
    7. ' i' → logprob: -6.403891563415527
    8. ' j' → logprob: -6.528891563415527
    9. 'j' → logprob: -7.278891563415527
    10. ' witness' → logprob: -8.028891563415527

Token 213: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07588350027799606
    2. 'le' → logprob: -3.325883388519287
    3. ' range' → logprob: -3.325883388519287
    4. 'knowledge' → logprob: -7.200883388519287
    5. '1' → logprob: -8.825883865356445
    6. ' leaked' → logprob: -8.950883865356445
    7. ' le' → logprob: -9.950883865356445
    8. '(range' → logprob: -10.450883865356445
    9. ' knowledge' → logprob: -10.700883865356445
    10. '(' → logprob: -10.950883865356445

Token 215: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016074607148766518
    2. '1' → logprob: -4.1410746574401855
    3. '   ' → logprob: -11.141074180603027
    4. ' (' → logprob: -11.641074180603027
    5. ',' → logprob: -11.766074180603027
    6. ' ' → logprob: -12.391074180603027
    7. '	' → logprob: -12.766074180603027
    8. '(N' → logprob: -13.766074180603027
    9. '<|end|>' → logprob: -14.391074180603027
    10. '...' → logprob: -16.516075134277344

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001387009397149086
    2. '   ' → logprob: -9.000138282775879
    3. 'N' → logprob: -11.750138282775879
    4. ' ' → logprob: -12.125138282775879
    5. '       ' → logprob: -14.250138282775879
    6. '
' → logprob: -14.875138282775879
    7. '0' → logprob: -15.125138282775879
    8. '           ' → logprob: -15.625138282775879
    9. '2' → logprob: -15.875138282775879
    10. '	' → logprob: -16.750139236450195

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029625516617670655
    2. ' ,' → logprob: -8.375296592712402
    3. ',N' → logprob: -9.750296592712402
    4. '1' → logprob: -12.000296592712402
    5. '   ' → logprob: -15.000296592712402
    6. 'N' → logprob: -15.500296592712402
    7. '(' → logprob: -15.625296592712402
    8. ' ' → logprob: -16.000295639038086
    9. '(N' → logprob: -16.125295639038086
    10. '+' → logprob: -16.875295639038086

Token 218: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0008058178937062621
    2. ' N' → logprob: -7.125805854797363
    3. '   ' → logprob: -13.500805854797363
    4. 'len' → logprob: -17.000804901123047
    5. ' ' → logprob: -17.375804901123047
    6. '	N' → logprob: -18.000804901123047
    7. 'n' → logprob: -18.500804901123047
    8. '(N' → logprob: -18.500804901123047
    9. '           ' → logprob: -18.625804901123047
    10. '       ' → logprob: -18.750804901123047

Token 219: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.27099974633893e-05
    2. ' +' → logprob: -11.500012397766113
    3. '+
' → logprob: -13.500012397766113
    4. '):
' → logprob: -15.250012397766113
    5. '()+' → logprob: -15.375012397766113
    6. '```' → logprob: -15.375012397766113
    7. '1' → logprob: -15.625012397766113
    8. ')+' → logprob: -16.00001335144043
    9. '+[' → logprob: -17.00001335144043
    10. '+#' → logprob: -17.12501335144043

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14442451298236847
    2. '+' → logprob: -2.1444244384765625
    3. 'N' → logprob: -4.1444244384765625
    4. '```' → logprob: -7.5194244384765625
    5. ')' → logprob: -8.519424438476562
    6. '(N' → logprob: -8.644424438476562
    7. '   ' → logprob: -9.144424438476562
    8. '11' → logprob: -9.644424438476562
    9. ')+' → logprob: -9.894424438476562
    10. '
' → logprob: -9.894424438476562

Token 221: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16163216531276703
    2. '<|end|>' → logprob: -2.5366320610046387
    3. '       ' → logprob: -3.1616320610046387
    4. ' if' → logprob: -3.9116320610046387
    5. ':' → logprob: -6.161632061004639
    6. '   ' → logprob: -6.911632061004639
    7. '	       ' → logprob: -7.036632061004639
    8. '<|end|>' → logprob: -7.036632061004639
    9. ' ' → logprob: -7.661632061004639
    10. '        ' → logprob: -7.786632061004639

Token 223: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5199134945869446
    2. '       ' → logprob: -1.2699134349822998
    3. '           ' → logprob: -3.0199134349823
    4. 'if' (adapté à ' if') → logprob: -3.5199134349823
    5. '<|end|>' → logprob: -3.5199134349823
    6. '               ' → logprob: -5.019913673400879
    7. '   ' → logprob: -5.394913673400879
    8. ' ' → logprob: -6.144913673400879
    9. '	       ' → logprob: -6.769913673400879
    10. '	if' → logprob: -7.269913673400879

Token 224: ' member' (ID: 6027)
  Prédit: 'member'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'member' → logprob: -0.0197310633957386
    2. ' member' → logprob: -4.644731044769287
    3. 'not' → logprob: -5.519731044769287
    4. 'knowledge' → logprob: -5.519731044769287
    5. 'len' → logprob: -7.019731044769287
    6. '(member' → logprob: -7.894731044769287
    7. ' not' → logprob: -8.144731521606445
    8. ' knowledge' → logprob: -9.019731521606445
    9. '	member' → logprob: -9.769731521606445
    10. '   ' → logprob: -10.269731521606445

Token 225: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.17568643391132355
    2. ' ==' → logprob: -2.4256863594055176
    3. '!=' → logprob: -3.1756863594055176
    4. '==' → logprob: -4.050686359405518
    5. ' not' → logprob: -4.550686359405518
    6. ' in' → logprob: -5.925686359405518
    7. 'not' → logprob: -8.925686836242676
    8. 'in' → logprob: -9.925686836242676
    9. ' <=' → logprob: -10.050686836242676
    10. ' ' → logprob: -10.425686836242676

Token 226: ' suspect' (ID: 29645)
  Prédit: 'sus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sus' → logprob: -0.06197462975978851
    2. ' suspect' → logprob: -2.81197452545166
    3. 's' → logprob: -12.68697452545166
    4. ' ' → logprob: -13.18697452545166
    5. 'su' → logprob: -14.56197452545166
    6. ' sus' → logprob: -15.18697452545166
    7. '0' → logprob: -15.31197452545166
    8. ' suspected' → logprob: -15.68697452545166
    9. ' suspe' → logprob: -15.68697452545166
    10. '	s' → logprob: -15.81197452545166

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3906191289424896
    2. ':
' → logprob: -1.140619158744812
    3. ' or' → logprob: -5.765619277954102
    4. ' :
' → logprob: -8.890619277954102
    5. ' continue' → logprob: -9.265619277954102
    6. ' :' → logprob: -9.390619277954102
    7. '           ' → logprob: -9.515619277954102
    8. 'continue' → logprob: -10.015619277954102
    9. '):
' → logprob: -10.640619277954102
    10. '   ' → logprob: -10.640619277954102

Token 228: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09898622334003448
    2. ':' → logprob: -3.0989861488342285
    3. ':
' → logprob: -3.9739861488342285
    4. ' continue' → logprob: -4.5989861488342285
    5. ' and' → logprob: -4.8489861488342285
    6. '           ' → logprob: -4.8489861488342285
    7. ' or' → logprob: -6.3489861488342285
    8. 'continue' → logprob: -7.0989861488342285
    9. '       ' → logprob: -7.5989861488342285
    10. ' ' → logprob: -8.098986625671387

Token 229: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8469203114509583
    2. 'continue' (adapté à ' continue') → logprob: -0.9719203114509583
    3. ' continue' → logprob: -1.9719202518463135
    4. '           ' → logprob: -3.2219202518463135
    5. '	continue' → logprob: -4.846920490264893
    6. '                   ' → logprob: -5.971920490264893
    7. '   ' → logprob: -6.221920490264893
    8. '       ' → logprob: -7.596920490264893
    9. '
' → logprob: -7.971920490264893
    10. ' ' → logprob: -8.596920013427734

Token 230: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11058911681175232
    2. ' and' → logprob: -3.110589027404785
    3. ':
' → logprob: -3.360589027404785
    4. ':' → logprob: -4.485589027404785
    5. '
' → logprob: -5.610589027404785
    6. '<|end|>' → logprob: -5.985589027404785
    7. '       ' → logprob: -6.110589027404785
    8. '               ' → logprob: -6.610589027404785
    9. 'and' → logprob: -6.610589027404785
    10. '            
' → logprob: -6.735589027404785

Token 231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016887551173567772
    2. '
' → logprob: -5.266887664794922
    3. '<|end|>' → logprob: -5.266887664794922
    4. ' if' → logprob: -5.891887664794922
    5. '            
' → logprob: -6.891887664794922
    6. '       ' → logprob: -7.016887664794922
    7. 'if' → logprob: -8.016887664794922
    8. ' 
' → logprob: -8.391887664794922
    9. ' and' → logprob: -8.516887664794922
    10. '               ' → logprob: -8.641887664794922

Token 232: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33247992396354675
    2. 'if' → logprob: -1.9574799537658691
    3. 'for' → logprob: -2.707479953765869
    4. ' if' → logprob: -3.207479953765869
    5. ' for' → logprob: -3.707479953765869
    6. '       ' → logprob: -4.832479953765869
    7. '   ' → logprob: -7.082479953765869
    8. 'knowledge' → logprob: -7.832479953765869
    9. '#' (adapté à ' #') → logprob: -8.957479476928711
    10. '            
' → logprob: -9.082479476928711

Token 233: ' member' (ID: 6027)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2865120768547058
    2. 'for' → logprob: -1.4115121364593506
    3. 'unknown' → logprob: -6.5365118980407715
    4. 'extra' → logprob: -6.9115118980407715
    5. 'known' → logprob: -7.0365118980407715
    6. '           ' → logprob: -7.2865118980407715
    7. '#' → logprob: -8.28651237487793
    8. '   ' → logprob: -8.41151237487793
    9. '       ' → logprob: -8.66151237487793
    10. ' if' → logprob: -8.78651237487793

Token 234: ''s' (ID: 885)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3619193434715271
    2. '_kn' → logprob: -2.986919403076172
    3. 'kn' → logprob: -3.736919403076172
    4. 'knowledge' → logprob: -3.861919403076172
    5. ' if' → logprob: -3.986919403076172
    6. 'if' → logprob: -4.111919403076172
    7. '_k' → logprob: -4.111919403076172
    8. '           ' → logprob: -4.236919403076172
    9. ' knows' → logprob: -4.361919403076172
    10. 's' → logprob: -4.611919403076172

Token 235: ' known' (ID: 5542)
  Prédit: 'knowledge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'knowledge' → logprob: -0.12963350117206573
    2. ' knowledge' → logprob: -2.1296334266662598
    3. 'known' → logprob: -6.12963342666626
    4. 'if' → logprob: -8.754633903503418
    5. ' known' → logprob: -8.879633903503418
    6. 'know' → logprob: -8.879633903503418
    7. ' if' → logprob: -10.254633903503418
    8. 'for' → logprob: -11.129633903503418
    9. 'kn' → logprob: -12.254633903503418
    10. ' know' → logprob: -12.754633903503418

Token 236: ' set' (ID: 920)
  Prédit: 'knowledge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'knowledge' → logprob: -0.6728931665420532
    2. '.' → logprob: -1.0478931665420532
    3. 's' → logprob: -2.6728930473327637
    4. 'set' → logprob: -3.9228930473327637
    5. '-' → logprob: -4.422893047332764
    6. '&' → logprob: -4.672893047332764
    7. 'members' → logprob: -5.297893047332764
    8. '_set' → logprob: -5.797893047332764
    9. '.inter' → logprob: -5.922893047332764
    10. '=set' → logprob: -6.297893047332764

Token 237: ' should' (ID: 1757)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06083349138498306
    2. ' -' → logprob: -3.56083345413208
    3. '.' → logprob: -3.68583345413208
    4. '   ' → logprob: -5.43583345413208
    5. '-=' → logprob: -8.060833930969238
    6. '       ' → logprob: -8.685833930969238
    7. '.d' → logprob: -8.810833930969238
    8. '           ' → logprob: -9.310833930969238
    9. 'difference' → logprob: -9.560833930969238
    10. '-not' → logprob: -9.935833930969238

Token 238: ' not' (ID: 625)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8463515043258667
    2. 'not' → logprob: -1.0963515043258667
    3. ' not' → logprob: -1.7213515043258667
    4. ' be' → logprob: -3.2213516235351562
    5. '-' → logprob: -4.471351623535156
    6. 'iss' → logprob: -5.846351623535156
    7. 's' → logprob: -6.846351623535156
    8. ' -' → logprob: -7.096351623535156
    9. 'be' → logprob: -7.846351623535156
    10. '   ' → logprob: -7.971351623535156

Token 239: ' contain' (ID: 10232)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15924756228923798
    2. ' -' → logprob: -2.534247636795044
    3. '.' → logprob: -4.159247398376465
    4. ' ' → logprob: -4.409247398376465
    5. '   ' → logprob: -4.534247398376465
    6. 'have' → logprob: -4.909247398376465
    7. 'contain' → logprob: -5.284247398376465
    8. ' have' → logprob: -5.409247398376465
    9. 'iss' → logprob: -5.534247398376465
    10. ' contain' → logprob: -6.284247398376465

Token 240: ' anyone' (ID: 7545)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6685106754302979
    2. 'any' → logprob: -1.6685106754302979
    3. 'knowledge' → logprob: -2.168510675430298
    4. 'next' → logprob: -2.918510675430298
    5. ' any' → logprob: -2.918510675430298
    6. ' knowledge' → logprob: -3.918510675430298
    7. ' next' → logprob: -3.918510675430298
    8. ' leaked' → logprob: -4.043510437011719
    9. '(next' → logprob: -5.043510437011719
    10. '(le' → logprob: -5.918510437011719

Token 241: ' outside' (ID: 7539)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.08340322971344
    2. ' not' → logprob: -1.08340322971344
    3. ' outside' → logprob: -1.20840322971344
    4. 'outside' → logprob: -5.08340311050415
    5. ' from' → logprob: -5.20840311050415
    6. 'not' → logprob: -5.58340311050415
    7. ' if' → logprob: -6.33340311050415
    8. '           ' → logprob: -6.83340311050415
    9. ' ' → logprob: -7.08340311050415
    10. ' else' → logprob: -7.20840311050415

Token 242: ' leaked' (ID: 87013)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.28184881806373596
    2. ' leaked' → logprob: -1.4068487882614136
    3. ' le' → logprob: -8.156848907470703
    4. '(le' → logprob: -8.906848907470703
    5. '_le' → logprob: -9.531848907470703
    6. ' leaking' → logprob: -9.781848907470703
    7. ' leak' → logprob: -10.281848907470703
    8. ' leaks' → logprob: -10.906848907470703
    9. '   ' → logprob: -11.156848907470703
    10. ' knowledge' → logprob: -11.406848907470703

Token 243: ',
' (ID: 412)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.28968989849090576
    2. ':' → logprob: -1.5396898984909058
    3. 'and' → logprob: -4.539690017700195
    4. '):' → logprob: -4.914690017700195
    5. ' set' → logprob: -5.539690017700195
    6. ' or' → logprob: -5.664690017700195
    7. ')' → logprob: -6.164690017700195
    8. '.' → logprob: -6.414690017700195
    9. '_set' → logprob: -6.539690017700195
    10. ':
' → logprob: -6.789690017700195

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03134482353925705
    2. '               ' → logprob: -4.531344890594482
    3. ' if' → logprob: -5.156344890594482
    4. '            ' → logprob: -5.406344890594482
    5. ' ' → logprob: -6.281344890594482
    6. '          ' → logprob: -6.781344890594482
    7. ' and' → logprob: -6.906344890594482
    8. ' or' → logprob: -6.906344890594482
    9. '       ' → logprob: -7.281344890594482
    10. '            
' → logprob: -7.281344890594482

Token 245: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' because' (ID: 2236)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13299256563186646
    2. 'if' → logprob: -2.3829925060272217
    3. '           ' → logprob: -3.8829925060272217
    4. ' and' → logprob: -6.007992744445801
    5. ' or' → logprob: -6.007992744445801
    6. '       ' → logprob: -6.507992744445801
    7. ' but' → logprob: -6.882992744445801
    8. 'and' → logprob: -7.007992744445801
    9. 'except' → logprob: -7.757992744445801
    10. ' while' → logprob: -7.882992744445801

Token 247: ' leaked' (ID: 87013)
  Prédit: 'knowledge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'knowledge' → logprob: -0.5376553535461426
    2. ' knowledge' → logprob: -1.4126553535461426
    3. ' any' → logprob: -2.1626553535461426
    4. 'any' → logprob: -3.7876553535461426
    5. 'len' → logprob: -4.162655353546143
    6. ' len' → logprob: -5.037655353546143
    7. ' not' → logprob: -5.662655353546143
    8. 'not' → logprob: -6.162655353546143
    9. '(' → logprob: -6.287655353546143
    10. '(not' → logprob: -6.537655353546143

Token 248: ' info' (ID: 5377)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.028253423050045967
    2. ' not' → logprob: -4.903253555297852
    3. '-' → logprob: -5.278253555297852
    4. ' -' → logprob: -5.528253555297852
    5. '   ' → logprob: -5.903253555297852
    6. 's' → logprob: -6.403253555297852
    7. ' set' → logprob: -6.903253555297852
    8. ' and' → logprob: -7.153253555297852
    9. ' ' → logprob: -7.278253555297852
    10. '.union' → logprob: -7.528253555297852

Token 249: ' did' (ID: 2242)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4402247667312622
    2. ' not' → logprob: -1.5652247667312622
    3. ' was' → logprob: -2.6902246475219727
    4. ' has' → logprob: -3.3152246475219727
    5. ' outside' → logprob: -4.690224647521973
    6. ' can' → logprob: -5.190224647521973
    7. ' could' → logprob: -5.440224647521973
    8. '.' → logprob: -5.565224647521973
    9. '   ' → logprob: -5.815224647521973
    10. ' contains' → logprob: -5.940224647521973

Token 250: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2022184431552887
    2. ' not' → logprob: -1.7022184133529663
    3. 'n't' → logprob: -7.452218532562256
    4. '   ' → logprob: -9.577218055725098
    5. '           ' → logprob: -9.577218055725098
    6. 'n' → logprob: -10.952218055725098
    7. ' ' → logprob: -11.202218055725098
    8. '       ' → logprob: -11.327218055725098
    9. '               ' → logprob: -11.702218055725098
    10. '        ' → logprob: -12.077218055725098

Token 251: ' leak' (ID: 38654)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -1.7023845911026
    2. ' include' → logprob: -1.7023845911026
    3. ' update' → logprob: -2.3273844718933105
    4. ' come' → logprob: -2.3273844718933105
    5. ' contain' → logprob: -2.5773844718933105
    6. ' appear' → logprob: -2.8273844718933105
    7. ' happen' → logprob: -2.8273844718933105
    8. ' go' → logprob: -3.7023844718933105
    9. ' stop' → logprob: -3.9523844718933105
    10. 'update' → logprob: -4.0773844718933105

Token 252: ' that' (ID: 484)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -1.5645478963851929
    2. ')' → logprob: -1.8145478963851929
    3. ' outside' → logprob: -2.0645480155944824
    4. '   ' → logprob: -2.6895480155944824
    5. ' to' → logprob: -2.9395480155944824
    6. ' any' → logprob: -3.0645480155944824
    7. ' the' → logprob: -3.0645480155944824
    8. '.' → logprob: -3.3145480155944824
    9. ' members' → logprob: -3.3145480155944824
    10. ' )' → logprob: -3.3145480155944824

Token 253: ' info' (ID: 5377)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.15931110084056854
    2. ' leaked' → logprob: -2.409311056137085
    3. 'set' → logprob: -3.159311056137085
    4. '.' → logprob: -5.659311294555664
    5. ' subset' → logprob: -5.784311294555664
    6. ')' → logprob: -6.659311294555664
    7. '   ' → logprob: -6.784311294555664
    8. '```' → logprob: -7.659311294555664
    9. ' info' → logprob: -7.909311294555664
    10. '_set' → logprob: -7.909311294555664

Token 254: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014805016107857227
    2. '   ' → logprob: -5.389804840087891
    3. '       ' → logprob: -5.514804840087891
    4. ' if' → logprob: -6.264804840087891
    5. '<|end|>' → logprob: -7.514804840087891
    6. '.' → logprob: -7.639804840087891
    7. ',' → logprob: -7.764804840087891
    8. '               ' → logprob: -7.889804840087891
    9. ' or' → logprob: -7.889804840087891
    10. ' and' → logprob: -8.01480484008789

Token 256: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1706572026014328
    2. ' if' → logprob: -1.9206571578979492
    3. ' for' → logprob: -4.670657157897949
    4. 'if' (adapté à ' if') → logprob: -7.545657157897949
    5. '
' → logprob: -8.79565715789795
    6. '       ' → logprob: -9.42065715789795
    7. 'for' → logprob: -9.79565715789795
    8. '   ' → logprob: -9.92065715789795
    9. '            
' → logprob: -10.17065715789795
    10. '               ' → logprob: -10.92065715789795

Token 257: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22805604338645935
    2. ' len' → logprob: -2.603055953979492
    3. ' any' → logprob: -3.228055953979492
    4. 'not' → logprob: -3.603055953979492
    5. 'len' → logprob: -3.603055953979492
    6. ' knowledge' → logprob: -3.728055953979492
    7. 'knowledge' → logprob: -5.353055953979492
    8. 'any' → logprob: -5.603055953979492
    9. '(not' → logprob: -6.353055953979492
    10. '(len' → logprob: -7.228055953979492

Token 258: ' knowledge' (ID: 7124)
  Prédit: 'knowledge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'knowledge' → logprob: -0.0022056896705180407
    2. ' knowledge' → logprob: -6.127205848693848
    3. '(' → logprob: -11.252205848693848
    4. 'le' → logprob: -12.877205848693848
    5. '   ' → logprob: -13.877205848693848
    6. '{' → logprob: -14.127205848693848
    7. ' (' → logprob: -14.252205848693848
    8. 'know' → logprob: -14.377205848693848
    9. '  ' → logprob: -14.377205848693848
    10. ' ' → logprob: -14.627205848693848

Token 259: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001872094871941954
    2. '[s' → logprob: -8.625186920166016
    3. '[mem' → logprob: -12.875186920166016
    4. ' [' → logprob: -13.000186920166016
    5. '[module' → logprob: -14.375186920166016
    6. '```' → logprob: -15.125186920166016
    7. '[m' → logprob: -15.375186920166016
    8. '   ' → logprob: -15.500186920166016
    9. '[
' → logprob: -15.750186920166016
    10. '[source' → logprob: -16.000186920166016

Token 260: 'member' (ID: 20086)
  Prédit: 'member'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'member' → logprob: -0.07891060411930084
    2. '[' → logprob: -2.5789105892181396
    3. ' member' → logprob: -11.453910827636719
    4. '
' → logprob: -12.953910827636719
    5. '   ' → logprob: -13.203910827636719
    6. '(member' → logprob: -13.328910827636719
    7. '           ' → logprob: -14.078910827636719
    8. '	member' → logprob: -14.203910827636719
    9. 'sus' → logprob: -14.453910827636719
    10. '```' → logprob: -14.828910827636719

Token 261: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.020976481959223747
    2. '<=' → logprob: -4.020976543426514
    3. ' <=' → logprob: -5.895976543426514
    4. ' .' → logprob: -10.020976066589355
    5. ').' → logprob: -11.145976066589355
    6. ')<=' → logprob: -11.645976066589355
    7. ')' → logprob: -14.145976066589355
    8. ']<=' → logprob: -14.395976066589355
    9. '```' → logprob: -14.645976066589355
    10. '().' → logprob: -14.770976066589355

Token 262: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -1.1756367712223437e-05
    2. '<=' → logprob: -11.625011444091797
    3. '.' → logprob: -13.375011444091797
    4. 'le' → logprob: -14.250011444091797
    5. 'union' → logprob: -15.125011444091797
    6. 'is' → logprob: -16.875011444091797
    7. ' iss' → logprob: -17.125011444091797
    8. '```' → logprob: -17.250011444091797
    9. 'difference' → logprob: -17.250011444091797
    10. '__' → logprob: -17.375011444091797

Token 263: 'ub' (ID: 431)
  Prédit: 'ub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -4.930552313453518e-05
    2. 'subset' → logprob: -10.125049591064453
    3. 'up' → logprob: -12.000049591064453
    4. 'sub' → logprob: -13.000049591064453
    5. 'sup' → logprob: -15.375049591064453
    6. '```' → logprob: -15.500049591064453
    7. '_subset' → logprob: -16.250049591064453
    8. '   ' → logprob: -16.250049591064453
    9. 'уб' → logprob: -17.125049591064453
    10. 'ubmit' → logprob: -17.125049591064453

Token 264: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00020342117932159454
    2. 'et' → logprob: -8.875203132629395
    3. 'erset' → logprob: -10.375203132629395
    4. 'sett' → logprob: -11.875203132629395
    5. 't' → logprob: -12.250203132629395
    6. '```' → logprob: -12.250203132629395
    7. 'sup' → logprob: -13.000203132629395
    8. '
' → logprob: -13.125203132629395
    9. 'subset' → logprob: -13.125203132629395
    10. 'aset' → logprob: -13.500203132629395

Token 265: '(le' (ID: 135521)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: 'aked' (ID: 19969)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07900435477495193
    2. '):
' → logprob: -2.5790042877197266
    3. ')' → logprob: -9.579004287719727
    4. ' ):' → logprob: -10.454004287719727
    5. ' ):
' → logprob: -12.329004287719727
    6. '):
' → logprob: -12.954004287719727
    7. '   ' → logprob: -13.079004287719727
    8. '):

' → logprob: -13.454004287719727
    9. ':' → logprob: -13.579004287719727
    10. '       ' → logprob: -13.579004287719727

Token 268: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5215984582901001
    2. ':
' → logprob: -1.2715984582901
    3. '           ' → logprob: -2.6465983390808105
    4. ':' → logprob: -3.1465983390808105
    5. '):
' → logprob: -5.1465983390808105
    6. ')' → logprob: -6.0215983390808105
    7. '                   ' → logprob: -6.8965983390808105
    8. '):' → logprob: -7.6465983390808105
    9. '       ' → logprob: -8.021598815917969
    10. '
' → logprob: -8.396598815917969

Token 269: ' contradiction' (ID: 133882)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48042818903923035
    2. '           ' → logprob: -1.8554282188415527
    3. '
' → logprob: -2.2304282188415527
    4. '                   ' → logprob: -2.7304282188415527
    5. ' 
' → logprob: -4.230428218841553
    6. ' continue' → logprob: -4.355428218841553
    7. 'continue' → logprob: -4.980428218841553
    8. ' contradiction' → logprob: -5.605428218841553
    9. '   ' → logprob: -5.855428218841553
    10. '                
' → logprob: -6.230428218841553

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2838384509086609
    2. ' =' → logprob: -1.4088385105133057
    3. '=True' → logprob: -6.658838272094727
    4. ':' → logprob: -7.033838272094727
    5. '           ' → logprob: -8.158838272094727
    6. ')' → logprob: -9.783838272094727
    7. '               ' → logprob: -9.783838272094727
    8. ' or' → logprob: -10.658838272094727
    9. ':
' → logprob: -11.033838272094727
    10. '=False' → logprob: -11.158838272094727

Token 271: ' True' (ID: 6432)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010567454155534506
    2. '           ' → logprob: -7.501056671142578
    3. '                   ' → logprob: -8.501056671142578
    4. '<|end|>' → logprob: -9.001056671142578
    5. '       ' → logprob: -9.751056671142578
    6. '			' → logprob: -10.876056671142578
    7. '		       ' → logprob: -11.001056671142578
    8. '                       ' → logprob: -11.376056671142578
    9. ',' → logprob: -11.376056671142578
    10. '              ' → logprob: -11.501056671142578

Token 274: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012630375567823648
    2. 'break' (adapté à ' break') → logprob: -10.375125885009766
    3. ' break' → logprob: -10.750125885009766
    4. '			' → logprob: -10.875125885009766
    5. '                
' → logprob: -11.375125885009766
    6. '                   ' → logprob: -11.375125885009766
    7. '           ' → logprob: -11.375125885009766
    8. '       ' → logprob: -12.375125885009766
    9. '
' → logprob: -12.625125885009766
    10. '		       ' → logprob: -12.875125885009766

Token 275: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2592551112174988
    2. '<|end|>' → logprob: -2.0092551708221436
    3. '
' → logprob: -3.3842551708221436
    4. '           ' → logprob: -4.0092549324035645
    5. ')' → logprob: -4.0092549324035645
    6. '   ' → logprob: -4.3842549324035645
    7. '        
' → logprob: -6.1342549324035645
    8. '    
' → logprob: -6.3842549324035645
    9. '<|end|>' → logprob: -6.7592549324035645
    10. '    ' → logprob: -7.3842549324035645

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0958695262670517
    2. '<|end|>' → logprob: -2.970869541168213
    3. '           ' → logprob: -3.845869541168213
    4. '   ' → logprob: -5.220869541168213
    5. '
' → logprob: -5.470869541168213
    6. ')' → logprob: -5.720869541168213
    7. '        
' → logprob: -6.345869541168213
    8. '    ' → logprob: -7.470869541168213
    9. '    
' → logprob: -7.720869541168213
    10. '        ' → logprob: -7.720869541168213

Token 277: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6903235912322998
    2. '   ' → logprob: -1.8153235912322998
    3. '       ' → logprob: -1.9403235912322998
    4. '<|end|>' → logprob: -2.4403235912323
    5. ' 
' → logprob: -3.5653235912323
    6. '    
' → logprob: -3.8153235912323
    7. '  
' → logprob: -4.190323829650879
    8. '        
' → logprob: -4.440323829650879
    9. ' if' → logprob: -5.065323829650879
    10. 'if' (adapté à ' if') → logprob: -5.315323829650879

Token 278: ' contradiction' (ID: 133882)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8330891132354736
    2. '           ' → logprob: -0.9580891132354736
    3. ':
' → logprob: -1.9580891132354736
    4. '       ' → logprob: -4.2080888748168945
    5. '==' → logprob: -4.3330888748168945
    6. ' continue' → logprob: -5.0830888748168945
    7. ' ==' → logprob: -6.3330888748168945
    8. ' continues' → logprob: -6.5830888748168945
    9. '   ' → logprob: -6.9580888748168945
    10. 'continue' → logprob: -7.2080888748168945

Token 280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30623266100883484
    2. '       ' → logprob: -1.4312326908111572
    3. ' continue' → logprob: -3.8062326908111572
    4. 'continue' → logprob: -6.181232452392578
    5. '   ' → logprob: -8.431232452392578
    6. '	continue' → logprob: -9.306232452392578
    7. '
' → logprob: -10.056232452392578
    8. '               ' → logprob: -10.931232452392578
    9. ' continues' → logprob: -11.056232452392578
    10. '		' → logprob: -11.056232452392578

Token 281: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4147659242153168
    2. ' continue' → logprob: -1.4147659540176392
    3. '   ' → logprob: -2.5397658348083496
    4. '       ' → logprob: -4.16476583480835
    5. '           ' → logprob: -6.78976583480835
    6. '	continue' → logprob: -7.16476583480835
    7. '
' → logprob: -9.664766311645508
    8. ' ' → logprob: -9.914766311645508
    9. 'contin' → logprob: -10.664766311645508
    10. '```' → logprob: -11.164766311645508

Token 282: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9768984913825989
    2. '       ' → logprob: -1.226898431777954
    3. '   ' → logprob: -1.601898431777954
    4. '    
' → logprob: -2.976898431777954
    5. '        
' → logprob: -3.476898431777954
    6. 'possible' → logprob: -3.476898431777954
    7. '<|end|>' → logprob: -5.351898670196533
    8. '  
' → logprob: -5.851898670196533
    9. ')' → logprob: -5.976898670196533
    10. ' 
' → logprob: -6.476898670196533

Token 284: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19481924176216125
    2. 'possible' (adapté à ' possible') → logprob: -1.8198192119598389
    3. '       ' → logprob: -4.569819450378418
    4. ' possible' → logprob: -5.819819450378418
    5. '
' → logprob: -6.569819450378418
    6. '    
' → logprob: -8.694819450378418
    7. '        
' → logprob: -10.444819450378418
    8. '_possible' → logprob: -10.944819450378418
    9. '           ' → logprob: -12.694819450378418
    10. '```' → logprob: -12.944819450378418

Token 285: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00023286080977413803
    2. '_' → logprob: -8.375232696533203
    3. '_possible' → logprob: -13.625232696533203
    4. ' _' → logprob: -15.375232696533203
    5. '_sub' → logprob: -16.500232696533203
    6. 's' → logprob: -16.750232696533203
    7. '_S' → logprob: -16.750232696533203
    8. '_sn' → logprob: -16.875232696533203
    9. '_targets' → logprob: -16.875232696533203
    10. '_candidates' → logprob: -17.000232696533203

Token 286: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -1.735893965815194e-05
    2. 'usp' → logprob: -11.500017166137695
    3. 'u' → logprob: -13.125017166137695
    4. 'usc' → logprob: -13.250017166137695
    5. 'ub' → logprob: -13.500017166137695
    6. 'usb' → logprob: -14.000017166137695
    7. 'use' → logprob: -14.625017166137695
    8. 'sus' → logprob: -15.250017166137695
    9. '_us' → logprob: -16.250017166137695
    10. '
' → logprob: -16.500017166137695

Token 287: 'pects' (ID: 20458)
  Prédit: 'pects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pects' → logprob: -2.3199920178740285e-05
    2. 'p' → logprob: -11.125022888183594
    3. 'pect' → logprob: -11.875022888183594
    4. 'ects' → logprob: -13.875022888183594
    5. 'pected' → logprob: -15.500022888183594
    6. 'cepts' → logprob: -16.250022888183594
    7. '
' → logprob: -16.875022888183594
    8. '[' → logprob: -18.000022888183594
    9. '>' → logprob: -18.250022888183594
    10. '```' → logprob: -18.375022888183594

Token 288: '.append' (ID: 3709)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: '(s' (ID: 1858)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: 'us' (ID: 385)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: 'pect' (ID: 1248)
  Prédit: 'pect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pect' → logprob: -8.0536883615423e-05
    2. 'p' → logprob: -9.875080108642578
    3. 'pects' → logprob: -11.750080108642578
    4. 'pected' → logprob: -11.875080108642578
    5. 'spect' → logprob: -12.625080108642578
    6. '```' → logprob: -13.125080108642578
    7. ')' → logprob: -13.250080108642578
    8. '``' → logprob: -14.125080108642578
    9. 'pecting' → logprob: -14.250080108642578
    10. '[' → logprob: -14.250080108642578

Token 292: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004299540014471859
    2. '<|end|>' → logprob: -8.1254301071167
    3. '   ' → logprob: -10.1254301071167
    4. ')
' → logprob: -10.6254301071167
    5. ']' → logprob: -10.7504301071167
    6. '
' → logprob: -11.7504301071167
    7. '[' → logprob: -11.8754301071167
    8. ' )' → logprob: -12.3754301071167
    9. '<|end|>' → logprob: -12.7504301071167
    10. '```' → logprob: -12.8754301071167

Token 293: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: ' if' (ID: 538)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: ' len' (ID: 4631)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.008924885652959347
    2. '(' → logprob: -4.758924961090088
    3. 'possible' → logprob: -8.50892448425293
    4. ' possible' → logprob: -9.38392448425293
    5. ' (' → logprob: -10.88392448425293
    6. '(p' → logprob: -12.63392448425293
    7. 'Possible' → logprob: -13.88392448425293
    8. '_possible' → logprob: -14.50892448425293
    9. '()' → logprob: -14.75892448425293
    10. '(space' → logprob: -15.75892448425293

Token 297: 'sible' (ID: 15301)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 298: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00017874970217235386
    2. '_possible' → logprob: -8.750178337097168
    3. 'possible' → logprob: -11.625178337097168
    4. '_' → logprob: -12.750178337097168
    5. '_pos' → logprob: -13.250178337097168
    6. '(' → logprob: -13.375178337097168
    7. '(pos' → logprob: -13.625178337097168
    8. '(s' → logprob: -13.750178337097168
    9. 'sus' → logprob: -14.250178337097168
    10. '(_' → logprob: -14.375178337097168

Token 299: 'us' (ID: 385)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: 'pects' (ID: 20458)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: ' ==' (ID: 951)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: ' print' (ID: 2123)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 308: '(pos' (ID: 24566)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: 'sible' (ID: 15301)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: '_s' (ID: 1278)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: 'us' (ID: 385)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: 'pects' (ID: 20458)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: '[' (ID: 58)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: '])
' (ID: 5169)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 317: ' else' (ID: 1203)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: ' print' (ID: 2123)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: '(-' (ID: 8087)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 321
Tokens correctement prédits (1ère position, stricte): 112
Tokens correctement prédits (1ère position, avec adaptation): 115
Tokens correctement prédits (top 10): 208
Précision stricte (1ère position): 34.89%
Précision adaptée (1ère position): 35.83%
Précision (top 10): 64.80%
================================================================================
