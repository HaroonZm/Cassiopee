================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
r, s, p = map(int, input().split())
passengers = [tuple(map(int, input().split())) for _ in range(p)]

# Calculate minimal steps for each passenger to evacuate
# For each passenger at (i, j):
# Steps to aisle = 0 if passenger is in aisle seat (j == s or j == s+1)
# else steps to aisle = distance to the nearest aisle seat
# Steps backward = number of rows from passenger's row to exit row (r - i + 1)
# Total steps = steps to aisle + steps backward

# The aisle seats are s-th seat (left aisle) and (s+1)-th seat (right aisle), since seats number from 1 to 2s
total_steps = 0
for i_k, j_k in passengers:
    if j_k == s or j_k == s + 1:
        steps_to_aisle = 0
    else:
        steps_to_aisle = min(abs(j_k - s), abs(j_k - (s + 1)))
    steps_backward = r - i_k + 1
    steps = steps_to_aisle + steps_backward
    total_steps = max(total_steps, steps)

print(total_steps)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'r' (ID: 81)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' s' (ID: 265)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6666228175163269
    2. ',' → logprob: -1.0416228771209717
    3. ' =' → logprob: -2.6666228771209717
    4. ' ' → logprob: -3.6666228771209717
    5. '[' → logprob: -4.791622638702393
    6. ')' → logprob: -4.791622638702393
    7. '.' → logprob: -5.166622638702393
    8. '(' → logprob: -5.291622638702393
    9. '+' → logprob: -6.166622638702393
    10. '>' → logprob: -6.416622638702393

Token 4: ' p' (ID: 275)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2503880560398102
    2. ' =' → logprob: -1.7503880262374878
    3. ',' → logprob: -3.1253881454467773
    4. ' ' → logprob: -6.875388145446777
    5. '.' → logprob: -7.250388145446777
    6. ')' → logprob: -7.500388145446777
    7. '_' → logprob: -8.000388145446777
    8. ':' → logprob: -8.125388145446777
    9. ';' → logprob: -8.125388145446777
    10. ' ,' → logprob: -9.125388145446777

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05397878214716911
    2. ' =' → logprob: -3.178978681564331
    3. ',' → logprob: -4.80397891998291
    4. '+' → logprob: -7.55397891998291
    5. ':' → logprob: -7.67897891998291
    6. '[' → logprob: -7.92897891998291
    7. ')' → logprob: -8.05397891998291
    8. ''' → logprob: -8.30397891998291
    9. '.' → logprob: -8.67897891998291
    10. ' ' → logprob: -8.92897891998291

Token 6: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8078055381774902
    2. ' map' → logprob: -1.6828055381774902
    3. ' ' → logprob: -1.9328055381774902
    4. 'map' → logprob: -2.0578055381774902
    5. 'input' → logprob: -3.8078055381774902
    6. '1' → logprob: -4.18280553817749
    7. ' input' → logprob: -4.30780553817749
    8. ' []' → logprob: -4.80780553817749
    9. '[]' → logprob: -4.93280553817749
    10. ' [' → logprob: -4.93280553817749

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003829294815659523
    2. '(lambda' → logprob: -5.753829479217529
    3. '(int' → logprob: -8.628829002380371
    4. '```' → logprob: -9.128829002380371
    5. '(str' → logprob: -9.628829002380371
    6. '(token' → logprob: -10.378829002380371
    7. ')' → logprob: -10.753829002380371
    8. '(r' → logprob: -10.878829002380371
    9. '<|end|>' → logprob: -10.878829002380371
    10. '(user' → logprob: -11.003829002380371

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6350895166397095
    2. '(' → logprob: -0.8850895166397095
    3. ')' → logprob: -3.13508939743042
    4. '(user' → logprob: -5.01008939743042
    5. '(str' → logprob: -6.76008939743042
    6. '('' → logprob: -6.88508939743042
    7. '(range' → logprob: -7.01008939743042
    8. '(r' → logprob: -7.13508939743042
    9. '(raw' → logprob: -7.38508939743042
    10. 'input' → logprob: -8.260089874267578

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07901162654161453
    2. ' input' → logprob: -2.5790116786956787
    3. '(input' → logprob: -9.204011917114258
    4. ')' → logprob: -10.954011917114258
    5. ',input' → logprob: -13.704011917114258
    6. '=input' → logprob: -14.204011917114258
    7. 'range' → logprob: -14.954011917114258
    8. ' ' → logprob: -15.454011917114258
    9. '[input' → logprob: -15.454011917114258
    10. 'raw' → logprob: -15.579011917114258

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.41511064767837524
    2. '())' → logprob: -1.2901105880737305
    3. '(' → logprob: -3.1651105880737305
    4. ')' → logprob: -5.1651105880737305
    5. '(()' → logprob: -5.5401105880737305
    6. '('' → logprob: -5.5401105880737305
    7. '().' → logprob: -6.2901105880737305
    8. '());' → logprob: -6.6651105880737305
    9. '();)' → logprob: -7.0401105880737305
    10. '(""))' → logprob: -7.2901105880737305

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005603004829026759
    2. 'strip' → logprob: -7.500560283660889
    3. 'rstrip' → logprob: -12.500560760498047
    4. ' split' → logprob: -12.875560760498047
    5. '(split' → logprob: -14.500560760498047
    6. ')' → logprob: -14.750560760498047
    7. 'spl' → logprob: -16.625560760498047
    8. 'read' → logprob: -17.125560760498047
    9. 'startswith' → logprob: -17.375560760498047
    10. '```' → logprob: -17.625560760498047

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23476548492908478
    2. '())' → logprob: -1.6097655296325684
    3. '))' → logprob: -5.109765529632568
    4. '()' → logprob: -6.359765529632568
    5. '`)' → logprob: -7.234765529632568
    6. '(' → logprob: -7.734765529632568
    7. '()))' → logprob: -8.73476505279541
    8. '')' → logprob: -10.10976505279541
    9. ')`' → logprob: -10.10976505279541
    10. '```' → logprob: -10.73476505279541

Token 13: 'pass' (ID: 9948)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5995205044746399
    2. '+' → logprob: -1.0995204448699951
    3. 'i' → logprob: -3.599520444869995
    4. '+
' → logprob: -3.974520444869995
    5. '#' → logprob: -4.224520683288574
    6. '\n' → logprob: -4.349520683288574
    7. ',' → logprob: -4.724520683288574
    8. '*' → logprob: -5.474520683288574
    9. '\' → logprob: -5.724520683288574
    10. '`' → logprob: -5.724520683288574

Token 14: 'engers' (ID: 24764)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7404888272285461
    2. '+' → logprob: -1.3654887676239014
    3. ',' → logprob: -2.4904887676239014
    4. 'if' → logprob: -2.8654887676239014
    5. '#' → logprob: -3.4904887676239014
    6. '\n' → logprob: -4.1154890060424805
    7. '*' → logprob: -4.2404890060424805
    8. 'r' → logprob: -4.2404890060424805
    9. ' ' → logprob: -4.7404890060424805
    10. ' if' → logprob: -4.9904890060424805

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15775351226329803
    2. '.' → logprob: -2.1577534675598145
    3. '_' → logprob: -4.6577534675598145
    4. ' =' → logprob: -5.4077534675598145
    5. '_count' → logprob: -5.4077534675598145
    6. '=' → logprob: -5.5327534675598145
    7. '[:]' → logprob: -6.0327534675598145
    8. 's' → logprob: -6.9077534675598145
    9. '.setdefault' → logprob: -7.6577534675598145
    10. ')' → logprob: -7.9077534675598145

Token 16: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.05714358389377594
    2. ' ' → logprob: -3.9321436882019043
    3. '[]' → logprob: -3.9321436882019043
    4. '0' → logprob: -5.432143688201904
    5. ' r' → logprob: -5.557143688201904
    6. 'r' → logprob: -5.682143688201904
    7. ' p' → logprob: -5.932143688201904
    8. ' [' → logprob: -6.557143688201904
    9. '[' → logprob: -9.057143211364746
    10. ' max' → logprob: -9.307143211364746

Token 17: 'tuple' (ID: 52834)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08283688127994537
    2. ']' → logprob: -3.332836866378784
    3. 'int' → logprob: -3.707836866378784
    4. 'list' → logprob: -4.582837104797363
    5. '[]' → logprob: -5.082837104797363
    6. ' ' → logprob: -6.957837104797363
    7. 'r' → logprob: -7.582837104797363
    8. '(int' → logprob: -7.957837104797363
    9. '()]' → logprob: -8.332837104797363
    10. ' ]' → logprob: -8.582837104797363

Token 18: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0008049834286794066
    2. '(' → logprob: -7.250804901123047
    3. '(int' → logprob: -9.750804901123047
    4. '(input' → logprob: -10.375804901123047
    5. 'map' → logprob: -12.250804901123047
    6. '(
' → logprob: -14.750804901123047
    7. '(

' → logprob: -15.875804901123047
    8. ' map' → logprob: -17.125804901123047
    9. '(in' → logprob: -17.375804901123047
    10. '(x' → logprob: -17.375804901123047

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016265911981463432
    2. 'int' → logprob: -4.141265869140625
    3. '<int' → logprob: -8.766265869140625
    4. '[int' → logprob: -10.391265869140625
    5. '=int' → logprob: -11.141265869140625
    6. ' int' → logprob: -11.266265869140625
    7. ',int' → logprob: -12.141265869140625
    8. ']int' → logprob: -12.266265869140625
    9. '```' → logprob: -12.641265869140625
    10. '(' → logprob: -13.266265869140625

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18851536512374878
    2. ',input' → logprob: -2.0635154247283936
    3. '(input' → logprob: -3.1885154247283936
    4. 'input' → logprob: -6.0635151863098145
    5. '(),' → logprob: -7.4385151863098145
    6. '(' → logprob: -8.063515663146973
    7. ' ,' → logprob: -9.563515663146973
    8. ')' → logprob: -9.563515663146973
    9. ' input' → logprob: -9.938515663146973
    10. '),' → logprob: -10.563515663146973

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889485359191895
    2. ' input' → logprob: -2.578894853591919
    3. ')' → logprob: -13.45389461517334
    4. ',input' → logprob: -14.32889461517334
    5. '=input' → logprob: -14.45389461517334
    6. '_input' → logprob: -14.82889461517334
    7. '(input' → logprob: -14.82889461517334
    8. '[input' → logprob: -14.82889461517334
    9. '	input' → logprob: -15.07889461517334
    10. '<input' → logprob: -15.20389461517334

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.392202976712724e-06
    2. '()' → logprob: -12.875006675720215
    3. '()))' → logprob: -13.125006675720215
    4. ')' → logprob: -14.875006675720215
    5. ').' → logprob: -15.125006675720215
    6. '())' → logprob: -15.125006675720215
    7. '()).' → logprob: -15.375006675720215
    8. '))' → logprob: -15.625006675720215
    9. ' ().' → logprob: -15.625006675720215
    10. '>().' → logprob: -16.8750057220459

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. 'strip' → logprob: -14.000000953674316
    3. '(split' → logprob: -15.375000953674316
    4. ' split' → logprob: -16.000001907348633
    5. 'rstrip' → logprob: -16.500001907348633
    6. 'spl' → logprob: -19.750001907348633
    7. 'plit' → logprob: -20.375001907348633
    8. '.split' → logprob: -20.375001907348633
    9. 's' → logprob: -20.500001907348633
    10. '```' → logprob: -20.875001907348633

Token 24: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.012467619962990284
    2. '))' → logprob: -4.512467384338379
    3. '()' → logprob: -7.137467384338379
    4. '())' → logprob: -7.512467384338379
    5. '()))
' → logprob: -10.262467384338379
    6. '()));' → logprob: -11.512467384338379
    7. '())))' → logprob: -11.512467384338379
    8. '()),' → logprob: -12.387467384338379
    9. ')' → logprob: -12.387467384338379
    10. '())).' → logprob: -12.887467384338379

Token 25: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05569961667060852
    2. ')]' → logprob: -3.430699586868286
    3. '()' → logprob: -4.430699825286865
    4. '())' → logprob: -5.180699825286865
    5. 'for' → logprob: -6.430699825286865
    6. '(' → logprob: -7.180699825286865
    7. '()]' → logprob: -7.555699825286865
    8. '),' → logprob: -7.805699825286865
    9. ']' → logprob: -8.055699348449707
    10. ')])' → logprob: -8.555699348449707

Token 26: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.18576359748840332
    2. '_' → logprob: -1.8107635974884033
    3. ' _' → logprob: -5.435763359069824
    4. '_range' → logprob: -7.060763359069824
    5. 'range' → logprob: -7.435763359069824
    6. ' ' → logprob: -9.060763359069824
    7. '(range' → logprob: -10.560763359069824
    8. ' in' → logprob: -11.060763359069824
    9. '	range' → logprob: -11.185763359069824
    10. ' xrange' → logprob: -11.560763359069824

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.051450446248054504
    2. ' range' → logprob: -3.426450490951538
    3. 'range' → logprob: -4.301450252532959
    4. '_' → logprob: -6.051450252532959
    5. 'in' → logprob: -6.426450252532959
    6. '(' → logprob: -10.676450729370117
    7. '_range' → logprob: -10.676450729370117
    8. 's' → logprob: -10.926450729370117
    9. '(range' → logprob: -11.176450729370117
    10. '	range' → logprob: -11.426450729370117

Token 28: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00017994173686020076
    2. ' range' → logprob: -8.6251802444458
    3. 'r' → logprob: -16.000179290771484
    4. '(range' → logprob: -16.500179290771484
    5. '	range' → logprob: -16.875179290771484
    6. '[' → logprob: -18.000179290771484
    7. 'rang' → logprob: -18.500179290771484
    8. '```' → logprob: -18.625179290771484
    9. '`' → logprob: -19.750179290771484
    10. '.range' → logprob: -20.000179290771484

Token 29: '(p' (ID: 2407)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.017106829211115837
    2. '(s' → logprob: -5.017107009887695
    3. '(p' → logprob: -5.017107009887695
    4. '(' → logprob: -5.642107009887695
    5. '(n' → logprob: -8.767107009887695
    6. '(m' → logprob: -13.267107009887695
    7. '(R' → logprob: -13.767107009887695
    8. '(range' → logprob: -13.767107009887695
    9. '(k' → logprob: -13.767107009887695
    10. '(q' → logprob: -14.267107009887695

Token 30: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006262990063987672
    2. ')' → logprob: -7.500626087188721
    3. ']' → logprob: -9.625626564025879
    4. ')])' → logprob: -12.875626564025879
    5. '')]' → logprob: -13.250626564025879
    6. '])]' → logprob: -14.000626564025879
    7. '))' → logprob: -14.375626564025879
    8. ' )' → logprob: -14.375626564025879
    9. ')],' → logprob: -15.250626564025879
    10. '")]' → logprob: -15.750626564025879

Token 31: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6962187886238098
    2. 'd' → logprob: -2.821218729019165
    3. '
' → logprob: -2.821218729019165
    4. ')' → logprob: -3.071218729019165
    5. 't' → logprob: -3.321218729019165
    6. 's' → logprob: -3.446218729019165
    7. '#' → logprob: -3.446218729019165
    8. 'max' → logprob: -3.571218729019165
    9. 'r' → logprob: -3.571218729019165
    10. '```' → logprob: -3.571218729019165

Token 32: ' Calculate' (ID: 38942)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4749545454978943
    2. 'for' → logprob: -2.099954605102539
    3. ' sorted' → logprob: -2.724954605102539
    4. ' passengers' → logprob: -2.974954605102539
    5. ' dp' → logprob: -4.099954605102539
    6. ' r' → logprob: -4.474954605102539
    7. 'pass' → logprob: -4.724954605102539
    8. ' result' → logprob: -4.974954605102539
    9. 's' → logprob: -5.224954605102539
    10. ' max' → logprob: -5.224954605102539

Token 33: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9764871597290039
    2. ' total' → logprob: -1.601487159729004
    3. ' maximum' → logprob: -2.101487159729004
    4. ' max' → logprob: -2.351487159729004
    5. '_' → logprob: -3.726487159729004
    6. 'total' → logprob: -3.726487159729004
    7. ' capacity' → logprob: -4.101487159729004
    8. '<|end|>' → logprob: -4.101487159729004
    9. ' distances' → logprob: -4.351487159729004
    10. 'max' → logprob: -4.476487159729004

Token 34: ' steps' (ID: 10331)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42728984355926514
    2. '_distance' → logprob: -2.3022899627685547
    3. '_cost' → logprob: -3.0522899627685547
    4. ' cost' → logprob: -3.0522899627685547
    5. ' number' → logprob: -3.8022899627685547
    6. ' distance' → logprob: -3.8022899627685547
    7. '<|end|>' → logprob: -4.552289962768555
    8. 'distance' → logprob: -4.677289962768555
    9. '_time' → logprob: -4.802289962768555
    10. ' ' → logprob: -5.177289962768555

Token 35: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.315563440322876
    2. 'each' → logprob: -2.190563440322876
    3. ' all' → logprob: -3.065563440322876
    4. ' passenger' → logprob: -3.315563440322876
    5. ' i' → logprob: -3.690563440322876
    6. ' car' → logprob: -4.690563201904297
    7. ' the' → logprob: -4.815563201904297
    8. ' r' → logprob: -5.315563201904297
    9. ' reaching' → logprob: -5.565563201904297
    10. ' ' → logprob: -5.815563201904297

Token 37: ' passenger' (ID: 39039)
  Prédit: ' passenger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passenger' → logprob: -0.28529101610183716
    2. ' range' → logprob: -2.5352909564971924
    3. ' pass' → logprob: -3.0352909564971924
    4. 'pass' → logprob: -3.1602909564971924
    5. ' ' → logprob: -3.7852909564971924
    6. 'range' → logprob: -4.4102911949157715
    7. ')' → logprob: -5.2852911949157715
    8. '_' → logprob: -5.5352911949157715
    9. ' step' → logprob: -5.6602911949157715
    10. ' person' → logprob: -5.6602911949157715

Token 38: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6351343989372253
    2. 'result' → logprob: -1.7601344585418701
    3. 'steps' → logprob: -2.01013445854187
    4. 'results' → logprob: -2.88513445854187
    5. '```' → logprob: -3.13513445854187
    6. ' steps' → logprob: -4.385134220123291
    7. 'for' → logprob: -4.635134220123291
    8. '\n' → logprob: -5.135134220123291
    9. 's' → logprob: -5.385134220123291
    10. '<|end|>' → logprob: -5.885134220123291

Token 39: ' evacu' (ID: 83691)
  Prédit: ' reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.12408182770013809
    2. 'reach' → logprob: -2.74908185005188
    3. ' exit' → logprob: -4.749081611633301
    4. ' get' → logprob: -4.749081611633301
    5. ' go' → logprob: -4.874081611633301
    6. ' complete' → logprob: -4.999081611633301
    7. ' move' → logprob: -5.249081611633301
    8. 'exit' → logprob: -6.124081611633301
    9. '<|end|>' → logprob: -6.124081611633301
    10. 'get' → logprob: -6.249081611633301

Token 40: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.0008193961111828685
    2. 'a' → logprob: -7.375819206237793
    3. 'ation' → logprob: -8.750819206237793
    4. 'at' → logprob: -10.875819206237793
    5. ' at' → logprob: -12.625819206237793
    6. ' ate' → logprob: -13.250819206237793
    7. '```' → logprob: -13.625819206237793
    8. 'ating' → logprob: -13.625819206237793
    9. 'ates' → logprob: -13.750819206237793
    10. '#' → logprob: -14.125819206237793

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4848628044128418
    2. '```' → logprob: -2.234862804412842
    3. '<|end|>' → logprob: -2.734862804412842
    4. '\n' → logprob: -2.734862804412842
    5. 'result' → logprob: -2.984862804412842
    6. 's' → logprob: -4.234862804412842
    7. '\' → logprob: -4.359862804412842
    8. 'for' → logprob: -4.734862804412842
    9. 'n' → logprob: -4.734862804412842
    10. 'results' → logprob: -5.109862804412842

Token 42: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6341971158981323
    2. '
' → logprob: -1.8841971158981323
    3. 'steps' → logprob: -2.384197235107422
    4. 'results' → logprob: -2.884197235107422
    5. 'ans' → logprob: -2.884197235107422
    6. '```' → logprob: -4.009197235107422
    7. 'res' → logprob: -4.384197235107422
    8. ' ans' → logprob: -4.384197235107422
    9. ' steps' → logprob: -4.759197235107422
    10. 'for' → logprob: -4.884197235107422

Token 43: ' For' (ID: 2214)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8261299729347229
    2. 'results' → logprob: -2.076129913330078
    3. 'res' → logprob: -2.326129913330078
    4. 'steps' → logprob: -2.451129913330078
    5. 'ev' → logprob: -3.076129913330078
    6. 'min' → logprob: -3.201129913330078
    7. ' result' → logprob: -3.701129913330078
    8. 'for' → logprob: -3.951129913330078
    9. 'ans' → logprob: -3.951129913330078
    10. ' results' → logprob: -4.201129913330078

Token 44: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5868952870368958
    2. ' passenger' → logprob: -2.336895227432251
    3. ' row' → logprob: -2.711895227432251
    4. ' r' → logprob: -2.836895227432251
    5. ' x' → logprob: -3.086895227432251
    6. 'i' → logprob: -3.211895227432251
    7. ' _' → logprob: -4.21189546585083
    8. 'r' → logprob: -4.21189546585083
    9. 'x' → logprob: -4.33689546585083
    10. ' start' → logprob: -4.58689546585083

Token 45: ' passenger' (ID: 39039)
  Prédit: ' passenger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passenger' → logprob: -0.26265597343444824
    2. 'pass' → logprob: -2.3876559734344482
    3. ' i' → logprob: -2.6376559734344482
    4. 'i' → logprob: -4.137656211853027
    5. ' r' → logprob: -4.387656211853027
    6. 'r' → logprob: -4.387656211853027
    7. ' pass' → logprob: -4.887656211853027
    8. ' row' → logprob: -5.637656211853027
    9. ' p' → logprob: -5.637656211853027
    10. 'row' → logprob: -6.512656211853027

Token 46: ' at' (ID: 540)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6158672571182251
    2. ':' → logprob: -0.8658672571182251
    3. ' ,' → logprob: -4.3658671379089355
    4. ' ' → logprob: -5.3658671379089355
    5. '<|end|>' → logprob: -5.3658671379089355
    6. ' :' → logprob: -5.4908671379089355
    7. '_' → logprob: -5.6158671379089355
    8. ' to' → logprob: -6.2408671379089355
    9. '```' → logprob: -6.8658671379089355
    10. 's' → logprob: -6.8658671379089355

Token 47: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.44410625100135803
    2. 'r' → logprob: -2.819106340408325
    3. '(r' → logprob: -2.819106340408325
    4. '(i' → logprob: -3.569106340408325
    5. ' r' → logprob: -3.819106340408325
    6. ' position' → logprob: -3.944106340408325
    7. ' the' → logprob: -4.194106101989746
    8. ' ' → logprob: -4.319106101989746
    9. '(row' → logprob: -4.319106101989746
    10. ' row' → logprob: -4.444106101989746

Token 48: 'i' (ID: 72)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47771987318992615
    2. 'x' → logprob: -1.1027199029922485
    3. ' x' → logprob: -4.102719783782959
    4. ' r' → logprob: -4.227719783782959
    5. ')' → logprob: -5.602719783782959
    6. 'i' → logprob: -5.852719783782959
    7. 'row' → logprob: -6.602719783782959
    8. 'xi' → logprob: -6.977719783782959
    9. 'rx' → logprob: -7.102719783782959
    10. 'sx' → logprob: -7.227719783782959

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02101231925189495
    2. ',j' → logprob: -3.896012306213379
    3. ' ,' → logprob: -8.146012306213379
    4. ')' → logprob: -9.646012306213379
    5. 'r' → logprob: -11.021012306213379
    6. 's' → logprob: -11.021012306213379
    7. ',r' → logprob: -11.271012306213379
    8. '),' → logprob: -11.521012306213379
    9. 'j' → logprob: -11.771012306213379
    10. '```' → logprob: -11.896012306213379

Token 50: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012563572265207767
    2. ' j' → logprob: -4.387563705444336
    3. 's' → logprob: -11.012563705444336
    4. ',' → logprob: -11.387563705444336
    5. ',j' → logprob: -12.262563705444336
    6. '   ' → logprob: -12.512563705444336
    7. 'r' → logprob: -12.637563705444336
    8. '  ' → logprob: -13.137563705444336
    9. ' ' → logprob: -13.387563705444336
    10. 'x' → logprob: -13.887563705444336

Token 51: '):
' (ID: 1883)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6678338646888733
    2. ')' → logprob: -0.7928338646888733
    3. '):' → logprob: -3.4178338050842285
    4. ',' → logprob: -6.4178338050842285
    5. ' ),' → logprob: -9.292834281921387
    6. ' )' → logprob: -10.292834281921387
    7. '):
' → logprob: -10.417834281921387
    8. '):

' → logprob: -10.792834281921387
    9. ').' → logprob: -12.542834281921387
    10. '),
' → logprob: -12.667834281921387

Token 52: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8133836388587952
    2. ' if' → logprob: -1.8133835792541504
    3. ' ' → logprob: -2.4383835792541504
    4. ' ,' → logprob: -2.6883835792541504
    5. ' r' → logprob: -3.0633835792541504
    6. 'r' → logprob: -3.6883835792541504
    7. ' i' → logprob: -3.6883835792541504
    8. ' s' → logprob: -3.8133835792541504
    9. '<|end|>' → logprob: -4.68838357925415
    10. ' pass' → logprob: -4.81338357925415

Token 53: ' Steps' (ID: 60117)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4178069829940796
    2. ' ' → logprob: -1.9178069829940796
    3. ' i' → logprob: -3.667807102203369
    4. ' r' → logprob: -3.667807102203369
    5. ' pass' → logprob: -3.792807102203369
    6. '<|end|>' → logprob: -4.167807102203369
    7. ' s' → logprob: -4.792807102203369
    8. ' possible' → logprob: -4.792807102203369
    9. ' for' → logprob: -4.917807102203369
    10. 'r' → logprob: -4.917807102203369

Token 54: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006642425432801247
    2. '=' → logprob: -5.2566423416137695
    3. ' ' → logprob: -7.2566423416137695
    4. ':' → logprob: -8.63164234161377
    5. ',' → logprob: -8.75664234161377
    6. ' to' → logprob: -9.00664234161377
    7. 's' → logprob: -10.13164234161377
    8. ')' → logprob: -10.38164234161377
    9. 'to' → logprob: -10.88164234161377
    10. '<|end|>' → logprob: -11.13164234161377

Token 55: ' aisle' (ID: 99887)
  Prédit: ' reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.6316876411437988
    2. ' exit' → logprob: -2.256687641143799
    3. 'reach' → logprob: -2.256687641143799
    4. 'exit' → logprob: -2.381687641143799
    5. 'r' → logprob: -3.131687641143799
    6. ' evacu' → logprob: -3.506687641143799
    7. ' the' → logprob: -4.506687641143799
    8. ' escape' → logprob: -4.756687641143799
    9. ' i' → logprob: -4.756687641143799
    10. 'escape' → logprob: -4.756687641143799

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.035882458090782166
    2. 's' → logprob: -4.035882472991943
    3. '=' → logprob: -4.910882472991943
    4. ' ' → logprob: -6.035882472991943
    5. '_' → logprob: -6.285882472991943
    6. '1' → logprob: -6.785882472991943
    7. '[' → logprob: -6.910882472991943
    8. '[i' → logprob: -7.160882472991943
    9. '0' → logprob: -7.535882472991943
    10. 'r' → logprob: -8.160881996154785

Token 57: ' ' (ID: 220)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.3741639852523804
    2. 'abs' → logprob: -1.3741639852523804
    3. 'j' → logprob: -1.8741639852523804
    4. 'i' → logprob: -1.8741639852523804
    5. ' abs' → logprob: -2.74916410446167
    6. ' min' → logprob: -2.87416410446167
    7. 'r' → logprob: -3.74916410446167
    8. ' i' → logprob: -4.12416410446167
    9. ' j' → logprob: -4.24916410446167
    10. 's' → logprob: -6.37416410446167

Token 58: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19637145102024078
    2. 'j' → logprob: -2.071371555328369
    3. 'abs' → logprob: -3.696371555328369
    4. 'min' → logprob: -4.321371555328369
    5. 'r' → logprob: -5.196371555328369
    6. ' i' → logprob: -5.321371555328369
    7. ' abs' → logprob: -6.946371555328369
    8. '(i' → logprob: -7.321371555328369
    9. ' j' → logprob: -7.446371555328369
    10. ' min' → logprob: -7.946371555328369

Token 59: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.820136308670044
    2. '<|end|>' → logprob: -1.070136308670044
    3. ' ' → logprob: -2.570136308670044
    4. ' if' → logprob: -3.070136308670044
    5. ',' → logprob: -4.070136070251465
    6. '  
' → logprob: -4.320136070251465
    7. '[' → logprob: -4.695136070251465
    8. '' → logprob: -4.820136070251465
    9. ' or' → logprob: -5.320136070251465
    10. ')' → logprob: -5.445136070251465

Token 60: ' passenger' (ID: 39039)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10060107707977295
    2. ' j' → logprob: -2.4756011962890625
    3. 'i' → logprob: -4.7256011962890625
    4. ' i' → logprob: -5.9756011962890625
    5. 'r' → logprob: -9.350601196289062
    6. 's' → logprob: -11.038101196289062
    7. ' ' → logprob: -11.225601196289062
    8. 'p' → logprob: -11.600601196289062
    9. '	j' → logprob: -11.663101196289062
    10. ' r' → logprob: -11.788101196289062

Token 61: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6818755865097046
    2. ' is' → logprob: -1.3068755865097046
    3. 'i' → logprob: -2.306875705718994
    4. 's' → logprob: -3.431875705718994
    5. 'j' → logprob: -3.556875705718994
    6. ''s' → logprob: -3.681875705718994
    7. 'is' → logprob: -4.931875705718994
    8. ' j' → logprob: -4.931875705718994
    9. ' i' → logprob: -5.431875705718994
    10. '<|end|>' → logprob: -5.431875705718994

Token 62: ' in' (ID: 306)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.0914969444274902
    2. 'j' → logprob: -1.4664969444274902
    3. ' in' → logprob: -1.5914969444274902
    4. 'r' → logprob: -2.3414969444274902
    5. 'i' → logprob: -3.7164969444274902
    6. 's' → logprob: -3.8414969444274902
    7. ' at' → logprob: -3.8414969444274902
    8. ' i' → logprob: -3.9664969444274902
    9. 'in' → logprob: -4.34149694442749
    10. ' r' → logprob: -4.34149694442749

Token 63: ' aisle' (ID: 99887)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3632975816726685
    2. ' an' → logprob: -1.9882975816726685
    3. ' j' → logprob: -2.113297462463379
    4. 'j' → logprob: -2.238297462463379
    5. 'the' → logprob: -2.863297462463379
    6. 'r' → logprob: -2.988297462463379
    7. ' a' → logprob: -3.238297462463379
    8. ' aisle' → logprob: -3.363297462463379
    9. ' column' → logprob: -3.488297462463379
    10. 's' → logprob: -3.613297462463379

Token 64: ' seat' (ID: 15512)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3558962643146515
    2. ' or' → logprob: -1.855896234512329
    3. 'else' → logprob: -2.480896234512329
    4. ' ' → logprob: -4.105896472930908
    5. ',' → logprob: -4.605896472930908
    6. ' (' → logprob: -4.855896472930908
    7. '  ' → logprob: -4.980896472930908
    8. 's' → logprob: -5.355896472930908
    9. ' at' → logprob: -5.980896472930908
    10. '0' → logprob: -6.355896472930908

Token 65: ' (' (ID: 350)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.18214908242225647
    2. ',' → logprob: -2.8071491718292236
    3. ' ' → logprob: -3.1821491718292236
    4. 'else' → logprob: -3.5571491718292236
    5. ' (' → logprob: -4.3071489334106445
    6. ' ,' → logprob: -4.9321489334106445
    7. 's' → logprob: -5.4321489334106445
    8. ' or' → logprob: -5.4321489334106445
    9. '(s' → logprob: -6.9321489334106445
    10. '(' → logprob: -7.0571489334106445

Token 66: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05107704922556877
    2. ' j' → logprob: -3.301077127456665
    3. 's' → logprob: -4.926076889038086
    4. 'r' → logprob: -6.176076889038086
    5. ')' → logprob: -7.051076889038086
    6. '1' → logprob: -7.426076889038086
    7. ' s' → logprob: -7.676076889038086
    8. 'p' → logprob: -8.051076889038086
    9. 'i' → logprob: -8.301076889038086
    10. '0' → logprob: -8.301076889038086

Token 67: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.29072850942611694
    2. ' ==' → logprob: -1.6657285690307617
    3. ' in' → logprob: -3.0407285690307617
    4. 'in' → logprob: -4.665728569030762
    5. '<=' → logprob: -6.540728569030762
    6. ' ' → logprob: -6.665728569030762
    7. '%' → logprob: -7.290728569030762
    8. '0' → logprob: -7.415728569030762
    9. ' <=' → logprob: -7.540728569030762
    10. ')' → logprob: -8.040728569030762

Token 68: ' s' (ID: 265)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4584348499774933
    2. '1' → logprob: -1.458434820175171
    3. ' ' → logprob: -2.083434820175171
    4. 'r' → logprob: -5.45843505859375
    5. '2' → logprob: -5.58343505859375
    6. 's' → logprob: -6.83343505859375
    7. ' r' → logprob: -7.45843505859375
    8. '3' → logprob: -8.08343505859375
    9. ' s' → logprob: -8.45843505859375
    10. '4' → logprob: -9.52093505859375

Token 69: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.32336029410362244
    2. ')' → logprob: -1.9483603239059448
    3. '-' → logprob: -2.6983602046966553
    4. 'or' → logprob: -3.3233602046966553
    5. ' -' → logprob: -4.198360443115234
    6. '),' → logprob: -5.198360443115234
    7. ' ' → logprob: -5.698360443115234
    8. '0' → logprob: -6.698360443115234
    9. ' else' → logprob: -6.823360443115234
    10. ' )' → logprob: -7.323360443115234

Token 70: ' j' (ID: 441)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.356997013092041
    2. ' s' → logprob: -1.606997013092041
    3. 'j' → logprob: -3.106997013092041
    4. '1' → logprob: -3.731997013092041
    5. ' j' → logprob: -3.731997013092041
    6. ' ' → logprob: -5.606997013092041
    7. '0' → logprob: -6.606997013092041
    8. 'p' → logprob: -7.731997013092041
    9. '(s' → logprob: -8.481996536254883
    10. ' (' → logprob: -8.481996536254883

Token 71: ' ==' (ID: 951)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0591607093811035
    2. '+' → logprob: -1.1841607093811035
    3. '==' → logprob: -1.4341607093811035
    4. ' ==' → logprob: -2.4341607093811035
    5. ' -' → logprob: -4.8091607093811035
    6. ' +' → logprob: -5.1841607093811035
    7. ' or' → logprob: -6.4341607093811035
    8. ')' → logprob: -6.5591607093811035
    9. ' ' → logprob: -7.0591607093811035
    10. '=' → logprob: -7.6841607093811035

Token 72: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1115938052535057
    2. '1' → logprob: -2.361593723297119
    3. '0' → logprob: -5.236593723297119
    4. ' s' → logprob: -5.736593723297119
    5. 'r' → logprob: -6.486593723297119
    6. 'p' → logprob: -7.986593723297119
    7. ' ' → logprob: -8.111594200134277
    8. '(s' → logprob: -8.736594200134277
    9. '2' → logprob: -9.486594200134277
    10. '(' → logprob: -9.611594200134277

Token 73: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22023296356201172
    2. '+' → logprob: -1.9702329635620117
    3. ')' → logprob: -3.9702329635620117
    4. ' or' → logprob: -4.220232963562012
    5. ' -' → logprob: -4.470232963562012
    6. '),' → logprob: -4.970232963562012
    7. ' +' → logprob: -6.345232963562012
    8. '1' → logprob: -6.720232963562012
    9. ' ' → logprob: -6.720232963562012
    10. 'or' → logprob: -7.345232963562012

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002901757834479213
    2. ' ' → logprob: -8.500289916992188
    3. 's' → logprob: -10.125289916992188
    4. '-' → logprob: -10.625289916992188
    5. '0' → logprob: -11.625289916992188
    6. '2' → logprob: -12.625289916992188
    7. 'r' → logprob: -12.875289916992188
    8. ')' → logprob: -13.375289916992188
    9. '+' → logprob: -14.312789916992188
    10. ' -' → logprob: -14.375289916992188

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013939269119873643
    2. 'else' → logprob: -7.376393795013428
    3. ' else' → logprob: -7.751393795013428
    4. ' )' → logprob: -8.751394271850586
    5. '),' → logprob: -9.001394271850586
    6. ',' → logprob: -11.126394271850586
    7. ')
' → logprob: -11.501394271850586
    8. ')

' → logprob: -12.001394271850586
    9. '0' → logprob: -12.501394271850586
    10. '):' → logprob: -13.126394271850586

Token 76: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4234822392463684
    2. ' else' → logprob: -1.1734821796417236
    3. ',' → logprob: -4.798482418060303
    4. '
' → logprob: -4.798482418060303
    5. '\n' → logprob: -6.298482418060303
    6. ',
' → logprob: -6.423482418060303
    7. '```' → logprob: -6.548482418060303
    8. '.' → logprob: -6.798482418060303
    9. '   ' → logprob: -6.923482418060303
    10. ')' → logprob: -6.923482418060303

Token 77: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.28648144006729126
    2. 'else' → logprob: -1.4114813804626465
    3. 'elif' → logprob: -6.6614813804626465
    4. ',' → logprob: -6.7864813804626465
    5. 's' → logprob: -7.4114813804626465
    6. ' elif' → logprob: -7.5364813804626465
    7. '
' → logprob: -8.286481857299805
    8. ' ,' → logprob: -8.661481857299805
    9. ' ' → logprob: -8.661481857299805
    10. '1' → logprob: -9.473981857299805

Token 78: ' steps' (ID: 10331)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.6918050050735474
    2. 'abs' → logprob: -1.1918050050735474
    3. ' min' → logprob: -2.441804885864258
    4. '1' → logprob: -2.941804885864258
    5. 'min' → logprob: -3.941804885864258
    6. ' ' → logprob: -4.566804885864258
    7. ' (' → logprob: -5.316804885864258
    8. ' s' → logprob: -5.566804885864258
    9. ' max' → logprob: -5.691804885864258
    10. ' r' → logprob: -6.066804885864258

Token 79: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2820081412792206
    2. '=' → logprob: -1.407008171081543
    3. ' +=' → logprob: -8.532008171081543
    4. 'to' → logprob: -8.782008171081543
    5. '_to' → logprob: -8.907008171081543
    6. ' to' → logprob: -8.907008171081543
    7. '   ' → logprob: -10.032008171081543
    8. ' ' → logprob: -10.282008171081543
    9. ',' → logprob: -10.657008171081543
    10. 's' → logprob: -10.782008171081543

Token 80: ' aisle' (ID: 99887)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4088103473186493
    2. 'min' → logprob: -2.2838103771209717
    3. ' abs' → logprob: -2.2838103771209717
    4. '1' → logprob: -2.6588103771209717
    5. ' min' → logprob: -3.4088103771209717
    6. 's' → logprob: -4.908810138702393
    7. ' reach' → logprob: -5.033810138702393
    8. 'reach' → logprob: -5.658810138702393
    9. '(abs' → logprob: -6.158810138702393
    10. ' s' → logprob: -6.408810138702393

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023460930213332176
    2. '=' → logprob: -3.773460865020752
    3. ' ' → logprob: -10.02346134185791
    4. ',' → logprob: -10.02346134185791
    5. '1' → logprob: -10.14846134185791
    6. 's' → logprob: -10.39846134185791
    7. ' +=' → logprob: -11.89846134185791
    8. ' =
' → logprob: -11.89846134185791
    9. '_' → logprob: -12.39846134185791
    10. ':' → logprob: -12.52346134185791

Token 82: ' distance' (ID: 9324)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9427011609077454
    2. ' abs' → logprob: -1.1927011013031006
    3. ' min' → logprob: -1.9427011013031006
    4. 'min' → logprob: -2.3177011013031006
    5. '1' → logprob: -2.8177011013031006
    6. ' ' → logprob: -5.81770133972168
    7. 's' → logprob: -7.06770133972168
    8. ' s' → logprob: -7.31770133972168
    9. ' max' → logprob: -8.19270133972168
    10. 'max' → logprob: -8.19270133972168

Token 83: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38124459981918335
    2. '=' → logprob: -2.256244659423828
    3. '(abs' → logprob: -2.506244659423828
    4. ' =' → logprob: -3.006244659423828
    5. 'abs' → logprob: -3.506244659423828
    6. 's' → logprob: -4.131244659423828
    7. '_' → logprob: -5.006244659423828
    8. '(j' → logprob: -5.506244659423828
    9. '(s' → logprob: -5.506244659423828
    10. ')' → logprob: -5.756244659423828

Token 84: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8495728373527527
    2. ' s' → logprob: -1.5995728969573975
    3. 'the' → logprob: -1.9745728969573975
    4. ' the' → logprob: -2.2245728969573975
    5. 'min' → logprob: -3.4745728969573975
    6. ' min' → logprob: -3.5995728969573975
    7. ' either' → logprob: -4.349572658538818
    8. 'nearest' → logprob: -4.349572658538818
    9. 'either' → logprob: -4.599572658538818
    10. 'closest' → logprob: -5.099572658538818

Token 85: ' nearest' (ID: 35210)
  Prédit: 'nearest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nearest' → logprob: -1.0062118768692017
    2. ' nearest' → logprob: -1.5062118768692017
    3. 'closest' → logprob: -1.6312118768692017
    4. ' closest' → logprob: -2.006211757659912
    5. 'ais' → logprob: -3.381211757659912
    6. 'clos' → logprob: -3.756211757659912
    7. ' closer' → logprob: -4.756211757659912
    8. ' nearer' → logprob: -5.256211757659912
    9. 's' → logprob: -5.756211757659912
    10. ' aisle' → logprob: -5.756211757659912

Token 86: ' aisle' (ID: 99887)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23959755897521973
    2. 'ais' → logprob: -1.9895975589752197
    3. ' s' → logprob: -2.9895975589752197
    4. ' aisle' → logprob: -4.114597320556641
    5. '(s' → logprob: -4.989597320556641
    6. 'seat' → logprob: -6.489597320556641
    7. ' seat' → logprob: -8.86459732055664
    8. ' ais' → logprob: -8.98959732055664
    9. '(' → logprob: -9.11459732055664
    10. ' ' → logprob: -9.11459732055664

Token 87: ' seat' (ID: 15512)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1978447437286377
    2. '
' → logprob: -1.8228447437286377
    3. ')' → logprob: -2.6978447437286377
    4. 's' → logprob: -2.6978447437286377
    5. 'steps' → logprob: -3.0728447437286377
    6. ' 
' → logprob: -3.1978447437286377
    7. ' steps' → logprob: -3.3228447437286377
    8. '```' → logprob: -3.3228447437286377
    9. ',' → logprob: -3.4478447437286377
    10. '_' → logprob: -3.5728447437286377

Token 88: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.148582935333252
    2. ')' → logprob: -1.773582935333252
    3. '0' → logprob: -2.648582935333252
    4. 'steps' → logprob: -2.648582935333252
    5. ' steps' → logprob: -3.023582935333252
    6. ',' → logprob: -3.273582935333252
    7. ']' → logprob: -3.398582935333252
    8. 's' → logprob: -3.648582935333252
    9. '```' → logprob: -3.648582935333252
    10. '#' → logprob: -3.898582935333252

Token 89: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1486893892288208
    2. 'steps' → logprob: -1.3986893892288208
    3. 'result' → logprob: -2.1486892700195312
    4. ' for' → logprob: -2.6486892700195312
    5. 'results' → logprob: -3.2736892700195312
    6. '
' → logprob: -3.2736892700195312
    7. 'min' → logprob: -3.8986892700195312
    8. 'res' → logprob: -4.023689270019531
    9. 's' → logprob: -4.148689270019531
    10. 'm' → logprob: -4.273689270019531

Token 90: ' Steps' (ID: 60117)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1004910469055176
    2. 'result' → logprob: -1.4754910469055176
    3. 'steps' → logprob: -1.6004910469055176
    4. 'min' → logprob: -2.4754910469055176
    5. 'res' → logprob: -3.2254910469055176
    6. 'results' → logprob: -3.3504910469055176
    7. 'minimal' → logprob: -3.9754910469055176
    8. ' for' → logprob: -4.100491046905518
    9. 'ev' → logprob: -4.850491046905518
    10. 'ans' → logprob: -5.350491046905518

Token 91: ' backward' (ID: 58986)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.13181686401367188
    2. 'to' → logprob: -2.631816864013672
    3. '=' → logprob: -3.381816864013672
    4. ' to' → logprob: -4.506816864013672
    5. ' =' → logprob: -5.506816864013672
    6. 'from' → logprob: -7.381816864013672
    7. '_' → logprob: -7.631816864013672
    8. '_from' → logprob: -7.631816864013672
    9. 's' → logprob: -8.506816864013672
    10. 'To' → logprob: -8.631816864013672

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18744467198848724
    2. '=' → logprob: -1.9374446868896484
    3. 'r' → logprob: -4.437444686889648
    4. ' to' → logprob: -5.562444686889648
    5. ',' → logprob: -6.187444686889648
    6. 's' → logprob: -6.312444686889648
    7. 'to' → logprob: -6.312444686889648
    8. ' ' → logprob: -6.687444686889648
    9. ' ,' → logprob: -7.812444686889648
    10. '_' → logprob: -7.812444686889648

Token 93: ' number' (ID: 2086)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14708302915096283
    2. ' r' → logprob: -2.397083044052124
    3. 'i' → logprob: -3.522083044052124
    4. ' i' → logprob: -4.772082805633545
    5. 'p' → logprob: -5.522082805633545
    6. ' p' → logprob: -6.522082805633545
    7. ' (' → logprob: -7.397082805633545
    8. ' ' → logprob: -8.022083282470703
    9. '(r' → logprob: -8.147083282470703
    10. '(i' → logprob: -8.647083282470703

Token 94: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6434307098388672
    2. 'of' → logprob: -1.3934307098388672
    3. 'r' → logprob: -2.143430709838867
    4. '_of' → logprob: -3.393430709838867
    5. 's' → logprob: -3.768430709838867
    6. ' ' → logprob: -4.518430709838867
    7. '1' → logprob: -4.893430709838867
    8. ' s' → logprob: -5.018430709838867
    9. 'abs' → logprob: -5.518430709838867
    10. 'pass' → logprob: -5.643430709838867

Token 95: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.6667658686637878
    2. ' rows' → logprob: -1.4167659282684326
    3. 'pass' → logprob: -2.0417659282684326
    4. 'r' → logprob: -2.5417659282684326
    5. ' passengers' → logprob: -4.4167656898498535
    6. 'row' → logprob: -5.0417656898498535
    7. ' r' → logprob: -5.2917656898498535
    8. ' pass' → logprob: -6.1667656898498535
    9. 'people' → logprob: -6.2917656898498535
    10. ' ' → logprob: -6.5417656898498535

Token 96: ' from' (ID: 591)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.9714818000793457
    2. 'result' → logprob: -1.7214818000793457
    3. 'for' → logprob: -2.3464818000793457
    4. 'min' → logprob: -2.7214818000793457
    5. 'ev' → logprob: -3.0964818000793457
    6. 'res' → logprob: -3.0964818000793457
    7. 'total' → logprob: -3.5964818000793457
    8. 'results' → logprob: -3.8464818000793457
    9. 'ans' → logprob: -4.221481800079346
    10. '
' → logprob: -4.221481800079346

Token 97: ' passenger' (ID: 39039)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2414046972990036
    2. 'i' → logprob: -2.1164047718048096
    3. 'pass' → logprob: -3.1164047718048096
    4. '0' → logprob: -3.4914047718048096
    5. 'p' → logprob: -5.1164045333862305
    6. ' passengers' → logprob: -5.3664045333862305
    7. ' r' → logprob: -5.7414045333862305
    8. ' passenger' → logprob: -6.1164045333862305
    9. ' i' → logprob: -6.6164045333862305
    10. '1' → logprob: -7.4914045333862305

Token 98: ''s' (ID: 885)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5140814781188965
    2. 'steps' → logprob: -1.7640814781188965
    3. 'min' → logprob: -3.3890814781188965
    4. 'result' → logprob: -3.3890814781188965
    5. 'for' → logprob: -3.7640814781188965
    6. '\n' → logprob: -4.1390814781188965
    7. '\' → logprob: -4.3890814781188965
    8. 'm' → logprob: -4.5140814781188965
    9. 'def' → logprob: -4.5140814781188965
    10. 'ev' → logprob: -4.7640814781188965

Token 99: ' row' (ID: 5225)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3753136396408081
    2. 'pass' → logprob: -2.0003137588500977
    3. 'i' → logprob: -2.6253137588500977
    4. ' r' → logprob: -3.5003137588500977
    5. ' passenger' → logprob: -3.8753137588500977
    6. ' current' → logprob: -4.125313758850098
    7. 'current' → logprob: -4.625313758850098
    8. ' i' → logprob: -5.125313758850098
    9. ''s' → logprob: -5.500313758850098
    10. '0' → logprob: -5.875313758850098

Token 100: ' to' (ID: 316)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.2710239887237549
    2. 'result' → logprob: -1.3960239887237549
    3. 'min' → logprob: -2.021023988723755
    4. 'for' → logprob: -2.646023988723755
    5. 'results' → logprob: -2.646023988723755
    6. 'res' → logprob: -3.146023988723755
    7. '
' → logprob: -3.646023988723755
    8. 'ev' → logprob: -3.771023988723755
    9. 'minimal' → logprob: -4.146023750305176
    10. 'total' → logprob: -4.271023750305176

Token 101: ' exit' (ID: 10654)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12850236892700195
    2. 'r' → logprob: -2.378502368927002
    3. '1' → logprob: -4.003502368927002
    4. ' ' → logprob: -4.878502368927002
    5. ' r' → logprob: -6.253502368927002
    6. '   ' → logprob: -11.066001892089844
    7. 'p' → logprob: -11.128501892089844
    8. 'n' → logprob: -11.128501892089844
    9. 'exit' → logprob: -11.878501892089844
    10. 'the' → logprob: -11.941001892089844

Token 102: ' row' (ID: 5225)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.3508973121643066
    2. 'ev' → logprob: -1.4758973121643066
    3. 'result' → logprob: -2.1008973121643066
    4. 'results' → logprob: -2.2258973121643066
    5. 'for' → logprob: -2.4758973121643066
    6. 'min' → logprob: -2.8508973121643066
    7. 'res' → logprob: -3.2258973121643066
    8. 'total' → logprob: -3.3508973121643066
    9. 'minimal' → logprob: -3.9758973121643066
    10. '#' → logprob: -4.475897312164307

Token 103: ' (' (ID: 350)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9142677187919617
    2. 'for' → logprob: -1.6642677783966064
    3. 'steps' → logprob: -1.6642677783966064
    4. 'results' → logprob: -2.6642677783966064
    5. 'res' → logprob: -3.2892677783966064
    6. 'min' → logprob: -3.4142677783966064
    7. 'total' → logprob: -3.6642677783966064
    8. 'ev' → logprob: -4.289267539978027
    9. 'minimal' → logprob: -4.414267539978027
    10. 'ans' → logprob: -5.039267539978027

Token 104: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09861095249652863
    2. '0' → logprob: -2.8486108779907227
    3. ' r' → logprob: -3.4736108779907227
    4. ' ' → logprob: -5.723610877990723
    5. ')' → logprob: -7.098610877990723
    6. '1' → logprob: -7.973610877990723
    7. '
' → logprob: -9.348610877990723
    8. 's' → logprob: -9.348610877990723
    9. ')
' → logprob: -9.598610877990723
    10. 'p' → logprob: -10.036110877990723

Token 105: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12508165836334229
    2. '-' → logprob: -3.0000815391540527
    3. ' -' → logprob: -3.1250815391540527
    4. ' )' → logprob: -4.375081539154053
    5. '+' → logprob: -5.125081539154053
    6. '))' → logprob: -6.000081539154053
    7. ' +' → logprob: -6.750081539154053
    8. ')]' → logprob: -7.750081539154053
    9. 'r' → logprob: -8.750082015991211
    10. '-r' → logprob: -9.000082015991211

Token 106: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09555798023939133
    2. ' ' → logprob: -2.595557928085327
    3. 'i' → logprob: -4.970558166503906
    4. ' i' → logprob: -5.845558166503906
    5. 'pass' → logprob: -6.095558166503906
    6. ' passenger' → logprob: -6.470558166503906
    7. '0' → logprob: -7.220558166503906
    8. 'r' → logprob: -7.470558166503906
    9. ' passengers' → logprob: -7.595558166503906
    10. 'p' → logprob: -8.095558166503906

Token 107: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012595826759934425
    2. ' )' → logprob: -5.3875956535339355
    3. '-' → logprob: -5.7625956535339355
    4. '))' → logprob: -5.8875956535339355
    5. ' -' → logprob: -7.3875956535339355
    6. '+' → logprob: -7.7625956535339355
    7. ')
' → logprob: -8.512596130371094
    8. '#' → logprob: -9.512596130371094
    9. ')`' → logprob: -9.512596130371094
    10. ')\' → logprob: -9.887596130371094

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036133781541138887
    2. ' ' → logprob: -5.628613471984863
    3. ')' → logprob: -11.628613471984863
    4. '0' → logprob: -12.878613471984863
    5. '2' → logprob: -14.753613471984863
    6. 'r' → logprob: -15.128613471984863
    7. '```' → logprob: -15.253613471984863
    8. 's' → logprob: -16.128612518310547
    9. ' )' → logprob: -16.253612518310547
    10. '4' → logprob: -16.253612518310547

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002205828350270167
    2. ' ' → logprob: -8.50022029876709
    3. ')' → logprob: -12.00022029876709
    4. '0' → logprob: -12.12522029876709
    5. '```' → logprob: -13.62522029876709
    6. '2' → logprob: -13.87522029876709
    7. 'pass' → logprob: -14.25022029876709
    8. 'r' → logprob: -14.87522029876709
    9. '`' → logprob: -15.18772029876709
    10. 's' → logprob: -15.37522029876709

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024751186720095575
    2. ' )' → logprob: -9.000247955322266
    3. ')
' → logprob: -9.625247955322266
    4. '#' → logprob: -10.375247955322266
    5. '))' → logprob: -11.375247955322266
    6. ',' → logprob: -13.125247955322266
    7. ')#' → logprob: -13.125247955322266
    8. ')

' → logprob: -13.250247955322266
    9. '**' → logprob: -13.625247955322266
    10. '),' → logprob: -13.875247955322266

Token 111: '#' (ID: 2)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.8074434995651245
    2. 'result' → logprob: -1.4324434995651245
    3. 'for' → logprob: -1.8074434995651245
    4. 'res' → logprob: -3.057443618774414
    5. 'results' → logprob: -3.182443618774414
    6. 'ev' → logprob: -4.307443618774414
    7. 'ans' → logprob: -4.557443618774414
    8. 'answers' → logprob: -4.557443618774414
    9. 'answer' → logprob: -5.057443618774414
    10. 'min' → logprob: -5.182443618774414

Token 112: ' Total' (ID: 17565)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.2457456588745117
    2. 'ev' → logprob: -1.4957456588745117
    3. 'results' → logprob: -1.9957456588745117
    4. 'result' → logprob: -1.9957456588745117
    5. 'total' → logprob: -2.7457456588745117
    6. 'res' → logprob: -3.2457456588745117
    7. 'for' → logprob: -3.6207456588745117
    8. 'answers' → logprob: -3.8707456588745117
    9. 'ans' → logprob: -4.120745658874512
    10. 'min' → logprob: -4.245745658874512

Token 113: ' steps' (ID: 10331)
  Prédit: '_steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.2852610647678375
    2. '_' → logprob: -1.4102610349655151
    3. ' =' → logprob: -6.035261154174805
    4. ' _' → logprob: -6.660261154174805
    5. '_pass' → logprob: -9.285261154174805
    6. 'steps' → logprob: -9.410261154174805
    7. '_s' → logprob: -9.410261154174805
    8. '=' → logprob: -10.160261154174805
    9. '_step' → logprob: -10.285261154174805
    10. '_time' → logprob: -10.410261154174805

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11190029978752136
    2. '=' → logprob: -2.3619003295898438
    3. 's' → logprob: -4.486900329589844
    4. ',' → logprob: -9.236900329589844
    5. ' ' → logprob: -9.611900329589844
    6. ' =
' → logprob: -9.986900329589844
    7. '_' → logprob: -10.736900329589844
    8. '[' → logprob: -10.986900329589844
    9. '_steps' → logprob: -10.986900329589844
    10. 'for' → logprob: -11.361900329589844

Token 115: ' steps' (ID: 10331)
  Prédit: ' steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.7063712477684021
    2. 'steps' → logprob: -1.7063713073730469
    3. ' (' → logprob: -2.081371307373047
    4. ' abs' → logprob: -2.706371307373047
    5. 'abs' → logprob: -3.456371307373047
    6. '(' → logprob: -4.206371307373047
    7. ' max' → logprob: -4.581371307373047
    8. 'r' → logprob: -4.706371307373047
    9. 'pass' → logprob: -4.706371307373047
    10. ' r' → logprob: -4.956371307373047

Token 116: ' to' (ID: 316)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.013297639787197113
    2. 'to' → logprob: -4.5132975578308105
    3. ' to' → logprob: -7.0132975578308105
    4. ' =' → logprob: -7.5132975578308105
    5. 'To' → logprob: -8.263298034667969
    6. '=' → logprob: -8.263298034667969
    7. '_back' → logprob: -9.013298034667969
    8. '_backward' → logprob: -9.513298034667969
    9. '_' → logprob: -9.888298034667969
    10. 'back' → logprob: -11.263298034667969

Token 117: ' aisle' (ID: 99887)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.7721048593521118
    2. ' aisle' → logprob: -0.7721048593521118
    3. ' exit' → logprob: -3.3971047401428223
    4. 'exit' → logprob: -3.8971047401428223
    5. 'ev' → logprob: -5.522104740142822
    6. ' ais' → logprob: -5.772104740142822
    7. ' evacu' → logprob: -6.147104740142822
    8. '_' → logprob: -6.272104740142822
    9. ' reach' → logprob: -6.397104740142822
    10. ' ' → logprob: -6.834604740142822

Token 118: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.057414762675762177
    2. '+' → logprob: -2.9324147701263428
    3. ' ' → logprob: -6.932414531707764
    4. ')' → logprob: -7.807414531707764
    5. ' *' → logprob: -7.932414531707764
    6. ' +
' → logprob: -8.932415008544922
    7. 's' → logprob: -9.057415008544922
    8. '*' → logprob: -9.432415008544922
    9. ',' → logprob: -9.807415008544922
    10. ' #' → logprob: -10.432415008544922

Token 119: ' steps' (ID: 10331)
  Prédit: ' steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.6032636761665344
    2. 'steps' → logprob: -0.8532636761665344
    3. 'r' → logprob: -4.603263854980469
    4. ' r' → logprob: -4.603263854980469
    5. '(r' → logprob: -5.728263854980469
    6. ' (' → logprob: -5.978263854980469
    7. '1' → logprob: -7.603263854980469
    8. '(' → logprob: -8.603263854980469
    9. ' ' → logprob: -9.103263854980469
    10. 'pass' → logprob: -9.728263854980469

Token 120: ' backward' (ID: 58986)
  Prédit: '_backward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -0.2613207995891571
    2. '_to' → logprob: -2.2613208293914795
    3. '_back' → logprob: -2.2613208293914795
    4. ' to' → logprob: -4.8863205909729
    5. ' backward' → logprob: -5.2613205909729
    6. ' _' → logprob: -5.7613205909729
    7. 'back' → logprob: -6.0113205909729
    8. '_' → logprob: -6.2613205909729
    9. 'to' → logprob: -7.7613205909729
    10. '_forward' → logprob: -8.136321067810059

Token 121: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9242212176322937
    2. 'total' → logprob: -1.6742212772369385
    3. 'result' → logprob: -1.7992212772369385
    4. 'results' → logprob: -2.0492212772369385
    5. 'steps' → logprob: -2.2992212772369385
    6. 'res' → logprob: -4.924221038818359
    7. 'answers' → logprob: -5.549221038818359
    8. 'min' → logprob: -6.299221038818359
    9. ' for' → logprob: -6.799221038818359
    10. 'answer' → logprob: -6.799221038818359

Token 122: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27352213859558105
    2. 'steps' → logprob: -2.398522138595581
    3. 'results' → logprob: -2.773522138595581
    4. 'result' → logprob: -3.023522138595581
    5. 'total' → logprob: -3.398522138595581
    6. ' for' → logprob: -6.27352237701416
    7. 'next' → logprob: -7.39852237701416
    8. '
' → logprob: -8.02352237701416
    9. 'res' → logprob: -8.27352237701416
    10. 'output' → logprob: -8.77352237701416

Token 123: ' The' (ID: 623)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.7905650734901428
    2. 'for' → logprob: -1.415565013885498
    3. 'total' → logprob: -2.040565013885498
    4. 'ev' → logprob: -2.665565013885498
    5. 'steps' → logprob: -3.165565013885498
    6. 'result' → logprob: -3.290565013885498
    7. 'def' → logprob: -5.165565013885498
    8. 'answers' → logprob: -5.540565013885498
    9. 'min' → logprob: -5.790565013885498
    10. 'res' → logprob: -6.040565013885498

Token 124: ' aisle' (ID: 99887)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.4609813690185547
    2. ' steps' → logprob: -1.8359813690185547
    3. 'for' → logprob: -2.2109813690185547
    4. ' for' → logprob: -2.4609813690185547
    5. 'total' → logprob: -2.8359813690185547
    6. 's' → logprob: -3.2109813690185547
    7. 'def' → logprob: -3.2109813690185547
    8. 'r' → logprob: -3.4609813690185547
    9. ' next' → logprob: -3.5859813690185547
    10. 'steps' → logprob: -3.7109813690185547

Token 125: ' seats' (ID: 24992)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7519844770431519
    2. '_' → logprob: -0.8769844770431519
    3. '=' → logprob: -3.1269845962524414
    4. 's' → logprob: -3.3769845962524414
    5. '_positions' → logprob: -4.501984596252441
    6. ' ' → logprob: -5.376984596252441
    7. '_index' → logprob: -5.751984596252441
    8. '_position' → logprob: -6.501984596252441
    9. ' is' → logprob: -6.501984596252441
    10. '_pos' → logprob: -6.626984596252441

Token 126: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4810008406639099
    2. '=' → logprob: -0.9810008406639099
    3. 's' → logprob: -5.356000900268555
    4. ' are' → logprob: -6.606000900268555
    5. 'are' → logprob: -8.106000900268555
    6. ',' → logprob: -9.106000900268555
    7. '_indices' → logprob: -9.856000900268555
    8. '_index' → logprob: -10.231000900268555
    9. '_positions' → logprob: -10.481000900268555
    10. '_' → logprob: -10.481000900268555

Token 127: ' s' (ID: 265)
  Prédit: '{s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{s' → logprob: -0.5479974746704102
    2. '(s' → logprob: -1.1729974746704102
    3. '[s' → logprob: -2.67299747467041
    4. 's' → logprob: -3.42299747467041
    5. '{' → logprob: -4.67299747467041
    6. ' (' → logprob: -7.17299747467041
    7. ' {' → logprob: -8.29799747467041
    8. '(' → logprob: -8.67299747467041
    9. ' s' → logprob: -9.29799747467041
    10. ' [' → logprob: -9.42299747467041

Token 128: '-th' (ID: 14928)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.24994796514511108
    2. ',' → logprob: -1.8749480247497559
    3. 'or' → logprob: -3.999948024749756
    4. ' ' → logprob: -4.499948024749756
    5. 's' → logprob: -4.499948024749756
    6. '+' → logprob: -4.874948024749756
    7. ' s' → logprob: -5.249948024749756
    8. ' ,' → logprob: -5.249948024749756
    9. '-' → logprob: -5.624948024749756
    10. ' and' → logprob: -5.999948024749756

Token 129: ' seat' (ID: 15512)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6918957829475403
    2. ' or' → logprob: -0.9418957829475403
    3. 'and' → logprob: -2.8168957233428955
    4. 'or' → logprob: -3.3168957233428955
    5. '<|end|>' → logprob: -5.566895961761475
    6. ',' → logprob: -6.066895961761475
    7. ' ' → logprob: -6.441895961761475
    8. ')' → logprob: -6.816895961761475
    9. 's' → logprob: -6.941895961761475
    10. ' ,' → logprob: -7.441895961761475

Token 130: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8637766242027283
    2. ' or' → logprob: -0.8637766242027283
    3. ',' → logprob: -3.113776683807373
    4. 'and' → logprob: -3.113776683807373
    5. 's' → logprob: -3.363776683807373
    6. 'or' → logprob: -4.113776683807373
    7. ' ,' → logprob: -5.238776683807373
    8. ' ' → logprob: -5.488776683807373
    9. '<|end|>' → logprob: -6.363776683807373
    10. ' s' → logprob: -6.363776683807373

Token 131: 'left' (ID: 4530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33047574758529663
    2. ' )' → logprob: -1.5804758071899414
    3. '-' → logprob: -3.8304758071899414
    4. '),' → logprob: -4.705475807189941
    5. ' and' → logprob: -4.955475807189941
    6. ' or' → logprob: -4.955475807189941
    7. 's' → logprob: -4.955475807189941
    8. ' ),' → logprob: -5.080475807189941
    9. ' s' → logprob: -5.455475807189941
    10. ' -' → logprob: -5.580475807189941

Token 132: ' aisle' (ID: 99887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1749657690525055
    2. ' -' → logprob: -2.7999658584594727
    3. ' )' → logprob: -3.4249658584594727
    4. '-' → logprob: -3.4249658584594727
    5. ' or' → logprob: -3.9249658584594727
    6. ' and' → logprob: -5.424965858459473
    7. 'and' → logprob: -5.924965858459473
    8. 'or' → logprob: -6.174965858459473
    9. 'seat' → logprob: -6.674965858459473
    10. ' seat' → logprob: -6.799965858459473

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29055726528167725
    2. ' )' → logprob: -1.4155572652816772
    3. ' or' → logprob: -6.540557384490967
    4. '),' → logprob: -6.665557384490967
    5. ' and' → logprob: -6.790557384490967
    6. '-' → logprob: -7.040557384490967
    7. ' -' → logprob: -7.040557384490967
    8. ' ),' → logprob: -7.290557384490967
    9. ' seat' → logprob: -7.540557384490967
    10. 'seat' → logprob: -7.540557384490967

Token 134: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2202569246292114
    2. ' and' → logprob: -1.2202569246292114
    3. ' or' → logprob: -1.5952569246292114
    4. 's' → logprob: -2.845256805419922
    5. ' s' → logprob: -3.095256805419922
    6. ',' → logprob: -3.470256805419922
    7. 'and' → logprob: -3.845256805419922
    8. ' )' → logprob: -4.095256805419922
    9. ' ,' → logprob: -4.345256805419922
    10. ' ' → logprob: -5.095256805419922

Token 135: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.18886253237724304
    2. 's' → logprob: -2.3138625621795654
    3. ' (' → logprob: -2.6888625621795654
    4. ' s' → logprob: -5.563862323760986
    5. '(' → logprob: -6.688862323760986
    6. '(str' → logprob: -10.188862800598145
    7. ''s' → logprob: -10.938862800598145
    8. ' ' → logprob: -11.188862800598145
    9. '`s' → logprob: -11.313862800598145
    10. '{s' → logprob: -11.563862800598145

Token 136: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005959495436400175
    2. ' s' → logprob: -5.130959510803223
    3. '(s' → logprob: -11.130959510803223
    4. ')' → logprob: -12.630959510803223
    5. '+' → logprob: -12.880959510803223
    6. ')s' → logprob: -12.880959510803223
    7. ' (' → logprob: -13.005959510803223
    8. ' ' → logprob: -14.005959510803223
    9. '`s' → logprob: -14.005959510803223
    10. '
' → logprob: -14.005959510803223

Token 137: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007500032428652048
    2. ' +' → logprob: -5.132500171661377
    3. ')' → logprob: -6.632500171661377
    4. ')+' → logprob: -8.507499694824219
    5. ' )' → logprob: -11.507499694824219
    6. '+)' → logprob: -11.632499694824219
    7. '   ' → logprob: -11.757499694824219
    8. ' ' → logprob: -11.882499694824219
    9. '+
' → logprob: -12.257499694824219
    10. '),' → logprob: -13.632499694824219

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.274932143744081e-05
    2. ' ' → logprob: -10.375042915344238
    3. '2' → logprob: -11.500042915344238
    4. ')' → logprob: -14.625042915344238
    5. '   ' → logprob: -15.500042915344238
    6. '
' → logprob: -15.625042915344238
    7. '+' → logprob: -15.875042915344238
    8. '```' → logprob: -16.000041961669922
    9. '0' → logprob: -17.062541961669922
    10. 's' → logprob: -17.500041961669922

Token 139: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2025429755449295
    2. ')-' → logprob: -1.702543020248413
    3. 'th' → logprob: -8.077543258666992
    4. ')#' → logprob: -8.327543258666992
    5. ' )' → logprob: -8.577543258666992
    6. '#' → logprob: -8.827543258666992
    7. '-th' → logprob: -9.827543258666992
    8. ' seat' → logprob: -10.077543258666992
    9. 'seat' → logprob: -10.202543258666992
    10. ')**' → logprob: -11.077543258666992

Token 140: 'th' (ID: 404)
  Prédit: 'seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seat' → logprob: -0.04800386726856232
    2. ' seat' → logprob: -3.548003911972046
    3. 'th' → logprob: -4.048003673553467
    4. 'se' → logprob: -7.548003673553467
    5. '-th' → logprob: -10.423004150390625
    6. '```' → logprob: -10.798004150390625
    7. '#' → logprob: -11.673004150390625
    8. 's' → logprob: -11.798004150390625
    9. '-seat' → logprob: -12.173004150390625
    10. ' ' → logprob: -12.423004150390625

Token 141: ' seat' (ID: 15512)
  Prédit: ' seat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seat' → logprob: -0.7196072340011597
    2. 'seat' → logprob: -0.7196072340011597
    3. ')' → logprob: -4.844607353210449
    4. 'se' → logprob: -5.219607353210449
    5. ' seats' → logprob: -5.344607353210449
    6. 'pass' → logprob: -6.469607353210449
    7. ' aisle' → logprob: -6.469607353210449
    8. ',' → logprob: -7.094607353210449
    9. 's' → logprob: -7.094607353210449
    10. ' )' → logprob: -8.09460735321045

Token 142: ' (' (ID: 350)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.1203975677490234
    2. 'result' → logprob: -1.4953975677490234
    3. 'total' → logprob: -1.4953975677490234
    4. 'for' → logprob: -2.2453975677490234
    5. 'steps' → logprob: -2.3703975677490234
    6. 'res' → logprob: -4.745397567749023
    7. 'answers' → logprob: -5.745397567749023
    8. 'min' → logprob: -5.870397567749023
    9. 'answer' → logprob: -6.495397567749023
    10. 'minimal' → logprob: -6.620397567749023

Token 143: 'right' (ID: 2460)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22644904255867004
    2. 'right' → logprob: -2.2264490127563477
    3. ' right' → logprob: -2.4764490127563477
    4. ' )' → logprob: -4.976449012756348
    5. 'left' → logprob: -7.601449012756348
    6. ',' → logprob: -7.601449012756348
    7. ').' → logprob: -8.226449012756348
    8. ' (' → logprob: -8.288949012756348
    9. ' aisle' → logprob: -8.601449012756348
    10. 's' → logprob: -8.726449012756348

Token 144: ' aisle' (ID: 99887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16304858028888702
    2. ' )' → logprob: -2.288048505783081
    3. 'seat' → logprob: -3.913048505783081
    4. 'ais' → logprob: -4.41304874420166
    5. ' seat' → logprob: -5.53804874420166
    6. ' aisle' → logprob: -5.66304874420166
    7. '_' → logprob: -6.16304874420166
    8. ')_' → logprob: -6.41304874420166
    9. '_se' → logprob: -6.41304874420166
    10. 'se' → logprob: -6.91304874420166

Token 145: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003864630125463009
    2. '):' → logprob: -9.375386238098145
    3. 's' → logprob: -9.625386238098145
    4. ',' → logprob: -9.875386238098145
    5. '#' → logprob: -10.250386238098145
    6. ' )' → logprob: -10.750386238098145
    7. '),' → logprob: -10.875386238098145
    8. '))' → logprob: -11.125386238098145
    9. ')
' → logprob: -11.375386238098145
    10. ')

' → logprob: -12.000386238098145

Token 146: ' since' (ID: 3630)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.49616700410842896
    2. 'result' → logprob: -1.3711669445037842
    3. 'steps' → logprob: -2.621166944503784
    4. 'for' → logprob: -3.746166944503784
    5. 'results' → logprob: -4.246167182922363
    6. 'res' → logprob: -4.621167182922363
    7. '#' → logprob: -5.496167182922363
    8. 'max' → logprob: -5.996167182922363
    9. 'min' → logprob: -6.121167182922363
    10. ' total' → logprob: -6.621167182922363

Token 147: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.9124638438224792
    2. 'the' → logprob: -1.162463903427124
    3. 'seat' → logprob: -2.412463903427124
    4. ' the' → logprob: -3.537463903427124
    5. 'rows' → logprob: -3.787463903427124
    6. 'there' → logprob: -4.037463665008545
    7. 'ais' → logprob: -4.037463665008545
    8. ' seats' → logprob: -4.287463665008545
    9. ' indexing' → logprob: -4.787463665008545
    10. ' there' → logprob: -4.912463665008545

Token 148: ' number' (ID: 2086)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.28479206562042236
    2. 'are' → logprob: -1.7847920656204224
    3. '#' → logprob: -3.659791946411133
    4. 'indices' → logprob: -3.784791946411133
    5. ' indices' → logprob: -5.284791946411133
    6. 'index' → logprob: -5.409791946411133
    7. ' numbering' → logprob: -5.409791946411133
    8. 'number' → logprob: -5.784791946411133
    9. ' on' → logprob: -6.409791946411133
    10. 'start' → logprob: -6.659791946411133

Token 149: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9188516139984131
    2. 'ing' → logprob: -1.043851613998413
    3. 'ed' → logprob: -2.043851613998413
    4. 's' → logprob: -2.543851613998413
    5. ' from' → logprob: -3.918851613998413
    6. ' starts' → logprob: -5.293851852416992
    7. '1' → logprob: -5.793851852416992
    8. ' are' → logprob: -5.793851852416992
    9. 'ings' → logprob: -6.043851852416992
    10. ' ' → logprob: -6.418851852416992

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027706706896424294
    2. ' ' → logprob: -8.375277519226074
    3. '0' → logprob: -10.375277519226074
    4. 'left' → logprob: -11.250277519226074
    5. '```' → logprob: -14.375277519226074
    6. ' left' → logprob: -15.000277519226074
    7. '
' → logprob: -15.625277519226074
    8. 's' → logprob: -15.687777519226074
    9. 'r' → logprob: -16.312776565551758
    10. '#' → logprob: -16.312776565551758

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002856497303582728
    2. '0' → logprob: -8.375286102294922
    3. ' ' → logprob: -10.125286102294922
    4. 'left' → logprob: -11.625286102294922
    5. '```' → logprob: -13.125286102294922
    6. 'r' → logprob: -14.437786102294922
    7. '
' → logprob: -14.500286102294922
    8. 's' → logprob: -14.625286102294922
    9. '#' → logprob: -15.062786102294922
    10. 'one' → logprob: -15.375286102294922

Token 152: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4058350622653961
    2. 'to' → logprob: -2.5308351516723633
    3. ')' → logprob: -2.7808351516723633
    4. ',' → logprob: -2.7808351516723633
    5. ' onwards' → logprob: -2.9058351516723633
    6. '.' → logprob: -4.155835151672363
    7. 'r' → logprob: -4.530835151672363
    8. 's' → logprob: -4.530835151672363
    9. '<|end|>' → logprob: -4.905835151672363
    10. ' through' → logprob: -5.030835151672363

Token 153: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.32793572545051575
    2. '2' → logprob: -1.3279356956481934
    3. 's' → logprob: -4.327935695648193
    4. 'p' → logprob: -7.702935695648193
    5. ' r' → logprob: -8.202936172485352
    6. '1' → logprob: -8.327936172485352
    7. ' ' → logprob: -9.327936172485352
    8. 'n' → logprob: -9.327936172485352
    9. '```' → logprob: -9.952936172485352
    10. '(' → logprob: -10.577936172485352

Token 154: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18808984756469727
    2. '2' → logprob: -1.8130898475646973
    3. 'p' → logprob: -5.188089847564697
    4. 's' → logprob: -6.188089847564697
    5. '(r' → logprob: -8.563089370727539
    6. '(' → logprob: -8.688089370727539
    7. ' r' → logprob: -9.063089370727539
    8. ' ' → logprob: -10.063089370727539
    9. 'n' → logprob: -10.188089370727539
    10. 'm' → logprob: -10.813089370727539

Token 155: 's' (ID: 82)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9904075860977173
    2. 's' → logprob: -1.2404075860977173
    3. '*r' → logprob: -1.4904075860977173
    4. '*s' → logprob: -2.2404074668884277
    5. '*' → logprob: -5.240407466888428
    6. ' *' → logprob: -6.490407466888428
    7. '*p' → logprob: -7.865407466888428
    8. '*(' → logprob: -9.615407943725586
    9. 'p' → logprob: -10.365407943725586
    10. ' r' → logprob: -10.740407943725586

Token 156: '
' (ID: 198)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.5942397117614746
    2. 'result' → logprob: -1.8442397117614746
    3. 'total' → logprob: -2.0942397117614746
    4. 'for' → logprob: -2.4692397117614746
    5. 'steps' → logprob: -3.3442397117614746
    6. 'res' → logprob: -3.5942397117614746
    7. 'answers' → logprob: -4.719239711761475
    8. 'min' → logprob: -6.094239711761475
    9. 'ev' → logprob: -6.219239711761475
    10. 'ans' → logprob: -6.344239711761475

Token 157: 'total' (ID: 9577)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.8771565556526184
    2. 'for' → logprob: -1.3771564960479736
    3. 'result' → logprob: -1.6271564960479736
    4. 'total' → logprob: -2.6271564960479736
    5. 'steps' → logprob: -3.3771564960479736
    6. 'res' → logprob: -4.127156734466553
    7. 'answers' → logprob: -5.627156734466553
    8. 'output' → logprob: -5.877156734466553
    9. 'answer' → logprob: -6.752156734466553
    10. 'ans' → logprob: -6.752156734466553

Token 158: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.0055307806469500065
    2. '_pass' → logprob: -5.380530834197998
    3. ' =' → logprob: -8.00553035736084
    4. '_time' → logprob: -8.38053035736084
    5. '_se' → logprob: -9.25553035736084
    6. '_' → logprob: -9.50553035736084
    7. '_rows' → logprob: -10.13053035736084
    8. '=' → logprob: -10.50553035736084
    9. '_results' → logprob: -10.88053035736084
    10. 'steps' → logprob: -11.25553035736084

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10029119998216629
    2. ' =' → logprob: -2.3502912521362305
    3. 's' → logprob: -9.47529125213623
    4. '=[]' → logprob: -12.10029125213623
    5. '[]' → logprob: -13.72529125213623
    6. '[' → logprob: -15.10029125213623
    7. '_list' → logprob: -15.85029125213623
    8. '_total' → logprob: -15.97529125213623
    9. ',' → logprob: -16.475290298461914
    10. ']' → logprob: -16.850290298461914

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5972570776939392
    2. '[]' → logprob: -0.8472570776939392
    3. '[' → logprob: -4.597257137298584
    4. ' ' → logprob: -5.347257137298584
    5. ' []' → logprob: -6.222257137298584
    6. '[]
' → logprob: -6.222257137298584
    7. 'sum' → logprob: -6.847257137298584
    8. '[
' → logprob: -6.847257137298584
    9. ' [' → logprob: -9.972256660461426
    10. '[]

' → logprob: -10.347256660461426

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6987113952636719
    2. '[]' → logprob: -0.6987113952636719
    3. '[' → logprob: -5.698711395263672
    4. '[]
' → logprob: -6.198711395263672
    5. '[
' → logprob: -9.698711395263672
    6. '[]

' → logprob: -9.823711395263672
    7. 'sum' → logprob: -10.698711395263672
    8. ' []' → logprob: -11.573711395263672
    9. '[]}' → logprob: -11.698711395263672
    10. '[],' → logprob: -12.823711395263672

Token 162: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020031986758112907
    2. '
' → logprob: -4.270031929016113
    3. ' for' → logprob: -5.145031929016113
    4. '<|end|>' → logprob: -11.020031929016113
    5. '\n' → logprob: -13.645031929016113
    6. '
' → logprob: -13.770031929016113
    7. '  
' → logprob: -13.895031929016113
    8. ',' → logprob: -14.270031929016113
    9. '	for' → logprob: -14.645031929016113
    10. '

' → logprob: -14.770031929016113

Token 163: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.3319124011322856e-05
    2. ' for' → logprob: -10.750022888183594
    3. '
' → logprob: -13.250022888183594
    4. '```' → logprob: -18.750022888183594
    5. '	for' → logprob: -18.875022888183594
    6. '<|end|>' → logprob: -19.000022888183594
    7. 'total' → logprob: -19.750022888183594
    8. 'For' → logprob: -19.875022888183594
    9. 'def' → logprob: -20.375022888183594
    10. '\' → logprob: -20.500022888183594

Token 164: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.704319953918457
    2. ' i' → logprob: -0.704319953918457
    3. 'r' → logprob: -5.454319953918457
    4. ' r' → logprob: -6.329319953918457
    5. '_i' → logprob: -6.454319953918457
    6. ' passenger' → logprob: -7.204319953918457
    7. ' (' → logprob: -7.329319953918457
    8. '(i' → logprob: -7.454319953918457
    9. '_' → logprob: -7.579319953918457
    10. ' _' → logprob: -8.204319953918457

Token 165: '_k' (ID: 11637)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6654731035232544
    2. ' in' → logprob: -0.7904731035232544
    3. 'in' → logprob: -3.915472984313965
    4. ' ,' → logprob: -4.415472984313965
    5. ' ' → logprob: -9.290472984313965
    6. '_,' → logprob: -9.665472984313965
    7. 'pass' → logprob: -9.915472984313965
    8. ' passenger' → logprob: -10.790472984313965
    9. ',p' → logprob: -10.915472984313965
    10. 'range' → logprob: -11.540472984313965

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44480013847351074
    2. ' in' → logprob: -1.0698001384735107
    3. 'in' → logprob: -4.31980037689209
    4. ' ,' → logprob: -6.06980037689209
    5. '_,' → logprob: -9.69480037689209
    6. ',_' → logprob: -9.81980037689209
    7. ' ' → logprob: -10.06980037689209
    8. ',p' → logprob: -10.31980037689209
    9. 's' → logprob: -10.31980037689209
    10. 'n' → logprob: -10.81980037689209

Token 167: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006717974785715342
    2. ' j' → logprob: -5.006718158721924
    3. '_j' → logprob: -13.381717681884766
    4. '   ' → logprob: -14.631717681884766
    5. '	j' → logprob: -15.256717681884766
    6. '```' → logprob: -15.756717681884766
    7. ' ' → logprob: -16.256717681884766
    8. '  ' → logprob: -16.756717681884766
    9. 'jk' → logprob: -17.756717681884766
    10. '    ' → logprob: -18.006717681884766

Token 168: '_k' (ID: 11637)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15485763549804688
    2. 'in' → logprob: -2.029857635498047
    3. 'k' → logprob: -4.779857635498047
    4. '_k' → logprob: -6.279857635498047
    5. 'n' → logprob: -6.904857635498047
    6. ')' → logprob: -7.904857635498047
    7. '_' → logprob: -8.029857635498047
    8. 'x' → logprob: -10.279857635498047
    9. 's' → logprob: -10.654857635498047
    10. '_in' → logprob: -11.029857635498047

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002136841416359
    2. 'in' → logprob: -2.3502137660980225
    3. ',' → logprob: -12.600214004516602
    4. ')' → logprob: -13.600214004516602
    5. '	in' → logprob: -14.350214004516602
    6. ' ' → logprob: -14.975214004516602
    7. 'pass' → logprob: -15.100214004516602
    8. 's' → logprob: -15.350214004516602
    9. '   ' → logprob: -16.2252140045166
    10. 'n' → logprob: -16.2252140045166

Token 170: ' passengers' (ID: 37252)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.38689208030700684
    2. ' passengers' → logprob: -1.1368920803070068
    3. 'Passengers' → logprob: -11.011892318725586
    4. ' pasajeros' → logprob: -13.761892318725586
    5. 'pas' → logprob: -13.886892318725586
    6. '_pass' → logprob: -14.261892318725586
    7. ' passageiros' → logprob: -14.761892318725586
    8. 'p' → logprob: -15.011892318725586
    9. 'range' → logprob: -15.511892318725586
    10. '(pass' → logprob: -15.886892318725586

Token 171: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007611948065459728
    2. ':
' → logprob: -4.8826117515563965
    3. ' :' → logprob: -12.882612228393555
    4. '):
' → logprob: -14.007612228393555
    5. ':
' → logprob: -14.382612228393555
    6. '=' → logprob: -14.632612228393555
    7. '):' → logprob: -14.882612228393555
    8. ',' → logprob: -15.007612228393555
    9. ':

' → logprob: -15.007612228393555
    10. ' :
' → logprob: -15.507612228393555

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16812627017498016
    2. ' steps' → logprob: -2.168126344680786
    3. ' total' → logprob: -4.293126106262207
    4. ' 
' → logprob: -4.418126106262207
    5. ' if' → logprob: -5.168126106262207
    6. '    
' → logprob: -5.668126106262207
    7. '```' → logprob: -6.418126106262207
    8. '<|end|>' → logprob: -7.043126106262207
    9. '_steps' → logprob: -7.793126106262207
    10. ' ' → logprob: -7.793126106262207

Token 173: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6122732162475586
    2. ' if' → logprob: -0.8622732162475586
    3. '   ' → logprob: -3.3622732162475586
    4. ' steps' → logprob: -7.737273216247559
    5. 'steps' → logprob: -7.737273216247559
    6. ' ' → logprob: -9.987273216247559
    7. '  ' → logprob: -10.112273216247559
    8. '```' → logprob: -10.487273216247559
    9. '    ' → logprob: -11.612273216247559
    10. '
' → logprob: -12.487273216247559

Token 174: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.04301174357533455
    2. 'j' → logprob: -3.1680116653442383
    3. ' ' → logprob: -12.418011665344238
    4. '(j' → logprob: -13.168011665344238
    5. '   ' → logprob: -13.293011665344238
    6. ' ' → logprob: -13.543011665344238
    7. ' (' → logprob: -13.793011665344238
    8. '_j' → logprob: -14.543011665344238
    9. '	j' → logprob: -14.668011665344238
    10. '(' → logprob: -14.918011665344238

Token 175: '_k' (ID: 11637)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10026124119758606
    2. '==' → logprob: -2.8502612113952637
    3. ' <=' → logprob: -3.6002612113952637
    4. ' ' → logprob: -5.600261211395264
    5. '_k' → logprob: -6.225261211395264
    6. '_' → logprob: -6.350261211395264
    7. ' in' → logprob: -6.600261211395264
    8. '<=' → logprob: -7.225261211395264
    9. ' _' → logprob: -7.975261211395264
    10. ' <' → logprob: -9.475261688232422

Token 176: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2278212308883667
    2. ' ==' → logprob: -1.6028212308883667
    3. '<=' → logprob: -6.227821350097656
    4. ' <=' → logprob: -8.102821350097656
    5. ' in' → logprob: -9.227821350097656
    6. 'in' → logprob: -11.852821350097656
    7. '=' → logprob: -12.102821350097656
    8. '!=' → logprob: -12.477821350097656
    9. ' ' → logprob: -12.602821350097656
    10. '<' → logprob: -12.852821350097656

Token 177: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018151231110095978
    2. ' s' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.01815128326416
    4. '   ' → logprob: -15.51815128326416
    5. '_s' → logprob: -16.643150329589844
    6. '  ' → logprob: -16.643150329589844
    7. '	s' → logprob: -17.393150329589844
    8. '    ' → logprob: -17.768150329589844
    9. '`s' → logprob: -17.768150329589844
    10. 'r' → logprob: -18.018150329589844

Token 178: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.004779230337589979
    2. 'or' → logprob: -5.37977933883667
    3. ' ' → logprob: -8.879778861999512
    4. '   ' → logprob: -11.879778861999512
    5. ':' → logprob: -12.129778861999512
    6. '	or' → logprob: -12.379778861999512
    7. '  ' → logprob: -13.504778861999512
    8. '    ' → logprob: -13.879778861999512
    9. ' или' → logprob: -15.879778861999512
    10. ''or' → logprob: -16.129779815673828

Token 179: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2812032699584961
    2. ' j' → logprob: -1.406203269958496
    3. '   ' → logprob: -10.281203269958496
    4. '    ' → logprob: -12.156203269958496
    5. '(j' → logprob: -12.156203269958496
    6. ' ' → logprob: -13.156203269958496
    7. ' (' → logprob: -13.531203269958496
    8. '  ' → logprob: -13.906203269958496
    9. 'abs' → logprob: -13.906203269958496
    10. '	j' → logprob: -13.906203269958496

Token 180: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00039588010986335576
    2. '==' → logprob: -8.625395774841309
    3. 'k' → logprob: -9.000395774841309
    4. ' ==' → logprob: -9.625395774841309
    5. '_j' → logprob: -11.500395774841309
    6. '+' → logprob: -11.625395774841309
    7. ' _' → logprob: -13.500395774841309
    8. ' ' → logprob: -13.750395774841309
    9. ' k' → logprob: -13.875395774841309
    10. '_' → logprob: -13.875395774841309

Token 181: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2811656594276428
    2. '==' → logprob: -1.406165599822998
    3. ' ' → logprob: -11.906166076660156
    4. '=' → logprob: -12.781166076660156
    5. '==(' → logprob: -13.656166076660156
    6. 's' → logprob: -14.031166076660156
    7. '==
' → logprob: -14.156166076660156
    8. ')==' → logprob: -14.531166076660156
    9. 'k' → logprob: -15.031166076660156
    10. '   ' → logprob: -15.156166076660156

Token 182: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31335774064064026
    2. ' s' → logprob: -1.3133577108383179
    3. '(s' → logprob: -9.81335735321045
    4. ' (' → logprob: -10.31335735321045
    5. '(' → logprob: -12.31335735321045
    6. ' ' → logprob: -13.06335735321045
    7. '   ' → logprob: -15.18835735321045
    8. '_s' → logprob: -15.31335735321045
    9. '{s' → logprob: -15.43835735321045
    10. '	s' → logprob: -15.81335735321045

Token 183: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009457575506530702
    2. ' +' → logprob: -7.000945568084717
    3. '1' → logprob: -10.875946044921875
    4. '+k' → logprob: -12.125946044921875
    5. ' ' → logprob: -12.375946044921875
    6. '   ' → logprob: -13.750946044921875
    7. '-' → logprob: -13.750946044921875
    8. '+
' → logprob: -14.438446044921875
    9. '<|end|>' → logprob: -14.813446044921875
    10. '<|end|>' → logprob: -15.000946044921875

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002625278721097857
    2. ' ' → logprob: -8.375262260437012
    3. '0' → logprob: -10.375262260437012
    4. '   ' → logprob: -14.500262260437012
    5. '-' → logprob: -15.750262260437012
    6. '```' → logprob: -16.125263214111328
    7. '  ' → logprob: -17.625263214111328
    8. '
' → logprob: -17.750263214111328
    9. ' -' → logprob: -17.750263214111328
    10. '+' → logprob: -18.187763214111328

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.263011578586884e-05
    2. '0' → logprob: -10.375042915344238
    3. ' ' → logprob: -11.500042915344238
    4. '-' → logprob: -14.250042915344238
    5. '   ' → logprob: -15.500042915344238
    6. '```' → logprob: -16.312541961669922
    7. ' -' → logprob: -16.812541961669922
    8. '  ' → logprob: -17.500041961669922
    9. '
' → logprob: -17.625041961669922
    10. '``' → logprob: -18.687541961669922

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12792909145355225
    2. ':
' → logprob: -2.127929210662842
    3. '   ' → logprob: -7.252929210662842
    4. '       ' → logprob: -8.877928733825684
    5. '):
' → logprob: -9.252928733825684
    6. '):' → logprob: -10.752928733825684
    7. ':
' → logprob: -11.877928733825684
    8. ' :' → logprob: -12.127928733825684
    9. ':

' → logprob: -12.127928733825684
    10. ')' → logprob: -12.877928733825684

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026003697887063026
    2. '
' → logprob: -4.026003837585449
    3. 'steps' → logprob: -5.276003837585449
    4. ' steps' → logprob: -6.526003837585449
    5. '   ' → logprob: -7.526003837585449
    6. ':' → logprob: -8.27600383758545
    7. 'total' → logprob: -8.77600383758545
    8. ':
' → logprob: -9.27600383758545
    9. ' total' → logprob: -9.90100383758545
    10. '0' → logprob: -10.77600383758545

Token 188: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' (adapté à ' steps') → logprob: -0.18132269382476807
    2. '   ' → logprob: -3.0563225746154785
    3. ' steps' → logprob: -3.0563225746154785
    4. 'total' → logprob: -3.3063225746154785
    5. '       ' → logprob: -4.0563225746154785
    6. ' total' → logprob: -4.4313225746154785
    7. 'step' → logprob: -6.1813225746154785
    8. '0' → logprob: -6.6813225746154785
    9. 'back' → logprob: -6.9313225746154785
    10. 'pass' → logprob: -7.4313225746154785

Token 189: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.4022795557975769
    2. '_backward' → logprob: -1.9022796154022217
    3. ' =' → logprob: -2.1522796154022217
    4. '=' → logprob: -3.4022796154022217
    5. '_back' → logprob: -3.7772796154022217
    6. '   ' → logprob: -5.152279376983643
    7. 'to' → logprob: -5.902279376983643
    8. ' to' → logprob: -7.777279376983643
    9. 'back' → logprob: -8.2772798538208
    10. ' ' → logprob: -9.1522798538208

Token 190: '_' (ID: 62)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.0035265409387648106
    2. '0' → logprob: -5.87852668762207
    3. ' aisle' → logprob: -8.62852668762207
    4. '_' → logprob: -8.87852668762207
    5. ' ' → logprob: -9.12852668762207
    6. 'ail' → logprob: -9.25352668762207
    7. '   ' → logprob: -9.75352668762207
    8. 'exit' → logprob: -10.37852668762207
    9. 'ase' → logprob: -11.00352668762207
    10. '1' → logprob: -11.37852668762207

Token 191: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -4.1080467781284824e-05
    2. 'is' → logprob: -11.375041007995605
    3. 'ail' → logprob: -11.375041007995605
    4. 'aisi' → logprob: -11.750041007995605
    5. 'aise' → logprob: -12.375041007995605
    6. ' aisle' → logprob: -13.375041007995605
    7. ' ' → logprob: -14.500041007995605
    8. 'aisu' → logprob: -14.875041007995605
    9. '   ' → logprob: -15.000041007995605
    10. 'a' → logprob: -15.125041007995605

Token 192: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.019519951194524765
    2. 'e' → logprob: -4.894519805908203
    3. 'ue' → logprob: -4.894519805908203
    4. 'l' → logprob: -5.519519805908203
    5. 'u' → logprob: -9.269519805908203
    6. '_le' → logprob: -9.644519805908203
    7. 'to' → logprob: -10.144519805908203
    8. '_to' → logprob: -10.519519805908203
    9. '=' → logprob: -10.644519805908203
    10. '   ' → logprob: -11.144519805908203

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759400725364685
    2. ' =' → logprob: -0.8259400725364685
    3. '   ' → logprob: -14.575940132141113
    4. ' ' → logprob: -16.075939178466797
    5. ',' → logprob: -16.825939178466797
    6. '    ' → logprob: -18.700939178466797
    7. 's' → logprob: -19.075939178466797
    8. '  ' → logprob: -19.200939178466797
    9. '0' → logprob: -19.325939178466797
    10. ')' → logprob: -19.575939178466797

Token 194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.125003814697266
    4. '1' → logprob: -21.125003814697266
    5. '۰' → logprob: -22.125003814697266
    6. '00' → logprob: -22.625003814697266
    7. '```' → logprob: -22.625003814697266
    8. '000' → logprob: -23.375003814697266
    9. '  ' → logprob: -23.625003814697266
    10. ' ' → logprob: -23.875003814697266

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.75
    4. '00' → logprob: -21.5
    5. '۰' → logprob: -21.625
    6. '```' → logprob: -21.625
    7. '
' → logprob: -22.375
    8. '000' → logprob: -22.375
    9. '1' → logprob: -22.625
    10. 'pass' → logprob: -23.0625

Token 196: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006620417116209865
    2. 'else' → logprob: -7.500661849975586
    3. ' else' → logprob: -9.250661849975586
    4. '
' → logprob: -11.625661849975586
    5. 'elif' → logprob: -13.125661849975586
    6. '    
' → logprob: -13.625661849975586
    7. '```' → logprob: -15.875661849975586
    8. '	else' → logprob: -15.875661849975586
    9. ',' → logprob: -16.125661849975586
    10. '       ' → logprob: -16.125661849975586

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007570966263301671
    2. 'else' → logprob: -7.250757217407227
    3. ' else' → logprob: -10.000757217407227
    4. 'elif' → logprob: -13.875757217407227
    5. '
' → logprob: -14.500757217407227
    6. '       ' → logprob: -16.000757217407227
    7. '    
' → logprob: -16.375757217407227
    8. '	else' → logprob: -16.875757217407227
    9. '```' → logprob: -17.125757217407227
    10. ')' → logprob: -17.750757217407227

Token 198: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.34350699186325073
    2. '   ' → logprob: -1.3435070514678955
    3. ' else' → logprob: -3.5935070514678955
    4. 'elif' → logprob: -6.093506813049316
    5. ' elif' → logprob: -10.593506813049316
    6. '	else' → logprob: -12.468506813049316
    7. '  ' → logprob: -13.593506813049316
    8. '_else' → logprob: -14.468506813049316
    9. ',' → logprob: -14.718506813049316
    10. ' ' → logprob: -14.968506813049316

Token 199: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09232023358345032
    2. ':' → logprob: -2.467320203781128
    3. '   ' → logprob: -5.842320442199707
    4. '       ' → logprob: -7.842320442199707
    5. ' if' → logprob: -10.092320442199707
    6. 'if' → logprob: -10.717320442199707
    7. ':
' → logprob: -12.092320442199707
    8. ':

' → logprob: -12.342320442199707
    9. ' steps' → logprob: -12.967320442199707
    10. 'steps' → logprob: -13.967320442199707

Token 200: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8745624423027039
    2. '       ' → logprob: -0.8745624423027039
    3. 'steps' → logprob: -2.2495625019073486
    4. ' steps' → logprob: -2.8745625019073486
    5. 'if' → logprob: -6.4995622634887695
    6. ' if' → logprob: -6.4995622634887695
    7. '           ' → logprob: -7.9995622634887695
    8. '    ' → logprob: -8.37456226348877
    9. '     ' → logprob: -8.87456226348877
    10. '  ' → logprob: -9.62456226348877

Token 201: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' (adapté à ' steps') → logprob: -0.00559041416272521
    2. '       ' → logprob: -5.880590438842773
    3. ' steps' → logprob: -6.880590438842773
    4. '   ' → logprob: -6.880590438842773
    5. 'if' → logprob: -7.255590438842773
    6. 'abs' → logprob: -12.255590438842773
    7. '           ' → logprob: -12.505590438842773
    8. ' if' → logprob: -12.755590438842773
    9. '
' → logprob: -13.755590438842773
    10. '    ' → logprob: -13.880590438842773

Token 202: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -8.196732960641384e-05
    2. 'to' → logprob: -9.500082015991211
    3. '_' → logprob: -12.625082015991211
    4. '       ' → logprob: -13.625082015991211
    5. '_from' → logprob: -14.125082015991211
    6. '   ' → logprob: -14.875082015991211
    7. '=' → logprob: -15.250082015991211
    8. ' to' → logprob: -15.375082015991211
    9. 'toc' → logprob: -16.00008201599121
    10. '_TO' → logprob: -16.37508201599121

Token 203: '_' (ID: 62)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.5328155755996704
    2. 'abs' → logprob: -0.9078155755996704
    3. 'is' → logprob: -5.032815456390381
    4. 's' → logprob: -7.282815456390381
    5. 'max' → logprob: -7.657815456390381
    6. 'ail' → logprob: -8.032815933227539
    7. ' abs' → logprob: -8.032815933227539
    8. 'ile' → logprob: -8.157815933227539
    9. 'aise' → logprob: -8.282815933227539
    10. 'ise' → logprob: -8.407815933227539

Token 204: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.008185334503650665
    2. 'is' → logprob: -5.008185386657715
    3. 'ail' → logprob: -7.258185386657715
    4. 's' → logprob: -7.883185386657715
    5. 'aise' → logprob: -8.883185386657715
    6. 'as' → logprob: -9.383185386657715
    7. 'a' → logprob: -10.258185386657715
    8. 'ile' → logprob: -10.258185386657715
    9. 'asile' → logprob: -10.633185386657715
    10. 'abs' → logprob: -11.883185386657715

Token 205: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0012688051210716367
    2. 'e' → logprob: -6.8762688636779785
    3. 'l' → logprob: -8.75126838684082
    4. '   ' → logprob: -10.87626838684082
    5. 's' → logprob: -11.25126838684082
    6. '       ' → logprob: -11.75126838684082
    7. 'les' → logprob: -12.00126838684082
    8. 'ле' → logprob: -12.87626838684082
    9. 'ile' → logprob: -12.87626838684082
    10. '     ' → logprob: -13.25126838684082

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575939953327179
    2. ' =' → logprob: -0.825939953327179
    3. '   ' → logprob: -14.700940132141113
    4. ' ' → logprob: -16.575939178466797
    5. 's' → logprob: -17.450939178466797
    6. '=min' → logprob: -18.200939178466797
    7. '=max' → logprob: -18.200939178466797
    8. '    ' → logprob: -18.450939178466797
    9. '＝' → logprob: -18.700939178466797
    10. 'abs' → logprob: -18.700939178466797

Token 207: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07969632744789124
    2. 'abs' → logprob: -2.5796964168548584
    3. ' min' → logprob: -7.579696178436279
    4. 'max' → logprob: -8.329696655273438
    5. ' abs' → logprob: -9.954696655273438
    6. 's' → logprob: -12.204696655273438
    7. '(min' → logprob: -14.329696655273438
    8. '(abs' → logprob: -14.954696655273438
    9. '1' → logprob: -15.454696655273438
    10. '	min' → logprob: -16.079696655273438

Token 208: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.0001589618914294988
    2. 'abs' → logprob: -8.75015926361084
    3. '(' → logprob: -14.87515926361084
    4. '(j' → logprob: -17.000158309936523
    5. ' abs' → logprob: -17.875158309936523
    6. '((' → logprob: -19.750158309936523
    7. '(s' → logprob: -19.750158309936523
    8. '(
' → logprob: -20.875158309936523
    9. '.abs' → logprob: -21.750158309936523
    10. '_abs' → logprob: -23.125158309936523

Token 209: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -2.117345684382599e-05
    2. '(s' → logprob: -10.875020980834961
    3. 'j' → logprob: -13.500020980834961
    4. '(' → logprob: -14.125020980834961
    5. '((' → logprob: -17.62502098083496
    6. '(r' → logprob: -18.00002098083496
    7. 's' → logprob: -19.00002098083496
    8. ',j' → logprob: -19.00002098083496
    9. '(i' → logprob: -19.12502098083496
    10. '(js' → logprob: -19.87502098083496

Token 210: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00018089536752086133
    2. '_s' → logprob: -9.625181198120117
    3. '-k' → logprob: -10.000181198120117
    4. 'k' → logprob: -10.250181198120117
    5. '(s' → logprob: -11.000181198120117
    6. 's' → logprob: -12.375181198120117
    7. '(k' → logprob: -12.500181198120117
    8. ' -' → logprob: -12.750181198120117
    9. '-s' → logprob: -13.875181198120117
    10. '_j' → logprob: -13.875181198120117

Token 211: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6385936141014099
    2. '-' → logprob: -0.7635936141014099
    3. '-s' → logprob: -5.138593673706055
    4. 's' → logprob: -9.263593673706055
    5. ' ' → logprob: -11.763593673706055
    6. ' s' → logprob: -12.513593673706055
    7. '   ' → logprob: -14.013593673706055
    8. '(s' → logprob: -14.263593673706055
    9. '-(' → logprob: -14.388593673706055
    10. '-j' → logprob: -14.388593673706055

Token 212: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015060516307130456
    2. ' s' → logprob: -6.5015058517456055
    3. '(s' → logprob: -13.126505851745605
    4. '   ' → logprob: -13.876505851745605
    5. '`s' → logprob: -15.376505851745605
    6. ' ' → logprob: -16.001506805419922
    7. '  ' → logprob: -16.251506805419922
    8. '	s' → logprob: -17.001506805419922
    9. '    ' → logprob: -17.126506805419922
    10. '{s' → logprob: -17.376506805419922

Token 213: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0008140355930663645
    2. ' ),' → logprob: -7.125813961029053
    3. ')' → logprob: -12.250814437866211
    4. '),
' → logprob: -12.625814437866211
    5. '   ' → logprob: -14.375814437866211
    6. ' ' → logprob: -15.500814437866211
    7. '1' → logprob: -15.875814437866211
    8. ',' → logprob: -16.00081443786621
    9. ')),' → logprob: -16.25081443786621
    10. '```' → logprob: -16.75081443786621

Token 214: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -9.710618905955926e-05
    2. ' abs' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.375097274780273
    4. '(abs' → logprob: -16.125097274780273
    5. '  ' → logprob: -16.750097274780273
    6. '    ' → logprob: -16.875097274780273
    7. ' ' → logprob: -17.500097274780273
    8. '.abs' → logprob: -17.750097274780273
    9. '       ' → logprob: -18.125097274780273
    10. '          ' → logprob: -18.375097274780273

Token 215: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -3.2378600735682994e-05
    2. 'j' → logprob: -11.000032424926758
    3. '(' → logprob: -11.250032424926758
    4. '((' → logprob: -13.125032424926758
    5. '(s' → logprob: -14.750032424926758
    6. ' (' → logprob: -16.125032424926758
    7. '(k' → logprob: -17.625032424926758
    8. ' j' → logprob: -18.000032424926758
    9. ',j' → logprob: -18.000032424926758
    10. '[j' → logprob: -18.125032424926758

Token 216: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.03177425637841225
    2. '+' → logprob: -3.5317742824554443
    3. 'k' → logprob: -7.156774044036865
    4. ' +' → logprob: -7.781774044036865
    5. '+k' → logprob: -8.031774520874023
    6. '_s' → logprob: -8.406774520874023
    7. 's' → logprob: -8.531774520874023
    8. '+s' → logprob: -10.406774520874023
    9. '_j' → logprob: -11.406774520874023
    10. ' ' → logprob: -11.656774520874023

Token 217: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2056061029434204
    2. '-' → logprob: -2.330605983734131
    3. '+' → logprob: -2.455605983734131
    4. ' +' → logprob: -5.955605983734131
    5. ' ' → logprob: -8.830606460571289
    6. '   ' → logprob: -11.330606460571289
    7. 's' → logprob: -11.455606460571289
    8. '1' → logprob: -11.705606460571289
    9. '  ' → logprob: -12.205606460571289
    10. '-s' → logprob: -12.455606460571289

Token 218: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.007480026222765446
    2. ' (' → logprob: -5.007480144500732
    3. 's' → logprob: -7.382480144500732
    4. '(' → logprob: -9.007479667663574
    5. ' s' → logprob: -11.382479667663574
    6. '(S' → logprob: -13.632479667663574
    7. '
' → logprob: -14.069979667663574
    8. ')' → logprob: -14.069979667663574
    9. ' ' → logprob: -14.132479667663574
    10. '   ' → logprob: -14.257479667663574

Token 219: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000264315924141556
    2. ' s' → logprob: -8.250264167785645
    3. '(s' → logprob: -13.000264167785645
    4. '   ' → logprob: -14.375264167785645
    5. ')' → logprob: -16.75026512145996
    6. ' ' → logprob: -16.87526512145996
    7. '  ' → logprob: -17.75026512145996
    8. ')s' → logprob: -17.75026512145996
    9. '{s' → logprob: -17.87526512145996
    10. ' (' → logprob: -17.87526512145996

Token 220: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017164701130241156
    2. ' +' → logprob: -6.376716613769531
    3. '1' → logprob: -11.251716613769531
    4. '   ' → logprob: -14.126716613769531
    5. '+
' → logprob: -15.501716613769531
    6. ')' → logprob: -16.50171661376953
    7. '```' → logprob: -16.50171661376953
    8. ' ' → logprob: -16.50171661376953
    9. '＋' → logprob: -17.00171661376953
    10. 'plus' → logprob: -17.12671661376953

Token 221: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.000015258789062
    4. ')' → logprob: -16.250015258789062
    5. '```' → logprob: -16.375015258789062
    6. '  ' → logprob: -17.812515258789062
    7. '+' → logprob: -17.812515258789062
    8. '۱' → logprob: -18.125015258789062
    9. '
' → logprob: -18.187515258789062
    10. '１' → logprob: -18.375015258789062

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -16.062501907348633
    4. '   ' → logprob: -17.000001907348633
    5. ')' → logprob: -17.000001907348633
    6. '۱' → logprob: -17.375001907348633
    7. '
' → logprob: -17.625001907348633
    8. '2' → logprob: -17.937501907348633
    9. '１' → logprob: -18.062501907348633
    10. '0' → logprob: -18.375001907348633

Token 223: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00022356293629854918
    2. ')))' → logprob: -8.625223159790039
    3. ' ))' → logprob: -10.875223159790039
    4. '))
' → logprob: -11.000223159790039
    5. ')' → logprob: -11.875223159790039
    6. '))

' → logprob: -15.500223159790039
    7. '   ' → logprob: -15.750223159790039
    8. '()))' → logprob: -15.875223159790039
    9. '))+' → logprob: -16.12522315979004
    10. ''))' → logprob: -16.25022315979004

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04064488410949707
    2. '
' → logprob: -3.290644884109497
    3. ' total' → logprob: -6.540644645690918
    4. 'total' → logprob: -7.290644645690918
    5. '    
' → logprob: -8.165644645690918
    6. '  
' → logprob: -9.665644645690918
    7. '```' → logprob: -10.165644645690918
    8. '   
' → logprob: -11.165644645690918
    9. '  ' → logprob: -11.415644645690918
    10. ' ' → logprob: -11.540644645690918

Token 225: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' (adapté à ' steps') → logprob: -0.41392695903778076
    2. ' steps' → logprob: -1.2889269590377808
    3. '   ' → logprob: -2.7889270782470703
    4. 'total' → logprob: -7.03892707824707
    5. ' total' → logprob: -7.28892707824707
    6. '    
' → logprob: -9.78892707824707
    7. ' backward' → logprob: -9.91392707824707
    8. '
' → logprob: -10.16392707824707
    9. ' ' → logprob: -10.16392707824707
    10. '_steps' → logprob: -10.28892707824707

Token 226: '_backward' (ID: 185673)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0018408215837553144
    2. '_backward' → logprob: -6.501840591430664
    3. '_back' → logprob: -8.001840591430664
    4. '_' → logprob: -13.126840591430664
    5. '_total' → logprob: -14.126840591430664
    6. 'to' → logprob: -15.251840591430664
    7. '   ' → logprob: -15.751840591430664
    8. 'back' → logprob: -16.376840591430664
    9. '_forward' → logprob: -16.626840591430664
    10. '_from' → logprob: -16.751840591430664

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931501030921936
    2. ' =' → logprob: -0.6931501030921936
    3. '=r' → logprob: -13.568150520324707
    4. ' ' → logprob: -14.193150520324707
    5. '   ' → logprob: -14.318150520324707
    6. ' +=' → logprob: -15.568150520324707
    7. 'r' → logprob: -16.69314956665039
    8. '+=' → logprob: -17.31814956665039
    9. ' ' → logprob: -17.81814956665039
    10. '＝' → logprob: -18.69314956665039

Token 228: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002360902028158307
    2. '(r' → logprob: -6.252360820770264
    3. ' r' → logprob: -7.752360820770264
    4. ' (' → logprob: -13.377361297607422
    5. '   ' → logprob: -14.627361297607422
    6. '(' → logprob: -15.002361297607422
    7. '	r' → logprob: -17.252361297607422
    8. ' ' → logprob: -17.377361297607422
    9. '_r' → logprob: -18.002361297607422
    10. '  ' → logprob: -18.502361297607422

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005934604909271002
    2. '-' → logprob: -5.130934715270996
    3. ' ' → logprob: -12.255934715270996
    4. '-k' → logprob: -14.130934715270996
    5. ' ' → logprob: -16.00593376159668
    6. '
' → logprob: -16.50593376159668
    7. '   ' → logprob: -16.63093376159668
    8. ',' → logprob: -16.63093376159668
    9. '-i' → logprob: -17.13093376159668
    10. 'k' → logprob: -17.38093376159668

Token 230: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010914575977949426
    2. ' i' → logprob: -9.12510871887207
    3. '   ' → logprob: -17.00010871887207
    4. '	i' → logprob: -18.25010871887207
    5. '<|end|>' → logprob: -19.50010871887207
    6. '_i' → logprob: -20.25010871887207
    7. '  ' → logprob: -20.50010871887207
    8. '[i' → logprob: -21.12510871887207
    9. '```' → logprob: -21.12510871887207
    10. ' ' → logprob: -21.25010871887207

Token 231: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00023095356300473213
    2. 'k' → logprob: -8.37523078918457
    3. 's' → logprob: -16.50023078918457
    4. '_i' → logprob: -16.62523078918457
    5. '+k' → logprob: -17.25023078918457
    6. '```' → logprob: -17.25023078918457
    7. 'i' → logprob: -17.62523078918457
    8. '+' → logprob: -17.75023078918457
    9. '[' → logprob: -17.75023078918457
    10. 'к' → logprob: -17.87523078918457

Token 232: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132641315460205
    2. ' +' → logprob: -1.3132641315460205
    3. '+k' → logprob: -13.563263893127441
    4. '+
' → logprob: -15.313263893127441
    5. '1' → logprob: -15.313263893127441
    6. ' ' → logprob: -15.813263893127441
    7. '<|end|>' → logprob: -15.938263893127441
    8. ' +
' → logprob: -15.938263893127441
    9. 'k' → logprob: -16.188264846801758
    10. '   ' → logprob: -16.438264846801758

Token 233: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -16.875059127807617
    4. '   ' → logprob: -18.375059127807617
    5. '`' → logprob: -20.187559127807617
    6. '  ' → logprob: -20.687559127807617
    7. '0' → logprob: -20.750059127807617
    8. '<|end|>' → logprob: -20.875059127807617
    9. '１' → logprob: -20.937559127807617
    10. '۱' → logprob: -21.062559127807617

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -16.375001907348633
    4. '`' → logprob: -19.500001907348633
    5. '   ' → logprob: -20.000001907348633
    6. '``' → logprob: -20.500001907348633
    7. '<|end|>' → logprob: -21.000001907348633
    8. '  ' → logprob: -21.375001907348633
    9. '0' → logprob: -21.375001907348633
    10. '[' → logprob: -21.625001907348633

Token 235: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004667457193136215
    2. ' total' → logprob: -5.754667282104492
    3. 'total' → logprob: -6.754667282104492
    4. '
' → logprob: -8.129667282104492
    5. '	total' → logprob: -10.879667282104492
    6. '    
' → logprob: -11.879667282104492
    7. '(total' → logprob: -13.754667282104492
    8. ',total' → logprob: -14.254667282104492
    9. '_total' → logprob: -15.129667282104492
    10. '  
' → logprob: -16.129667282104492

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26940351724624634
    2. ' total' → logprob: -2.0194034576416016
    3. 'total' → logprob: -2.2694034576416016
    4. '	total' → logprob: -10.019403457641602
    5. '
' → logprob: -11.894403457641602
    6. '(total' → logprob: -13.269403457641602
    7. ',total' → logprob: -13.519403457641602
    8. '```' → logprob: -13.644403457641602
    9. '_total' → logprob: -14.894403457641602
    10. '    
' → logprob: -15.894403457641602

Token 237: ' steps' (ID: 10331)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.014864799566566944
    2. ' total' → logprob: -4.264864921569824
    3. '   ' → logprob: -7.264864921569824
    4. '	total' → logprob: -14.139864921569824
    5. '
' → logprob: -14.764864921569824
    6. ' ' → logprob: -15.514864921569824
    7. '  ' → logprob: -17.014863967895508
    8. '_total' → logprob: -17.764863967895508
    9. '(total' → logprob: -18.264863967895508
    10. 'Total' → logprob: -18.514863967895508

Token 238: ' =' (ID: 314)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0005911595653742552
    2. '=' → logprob: -8.250591278076172
    3. 'to' → logprob: -9.250591278076172
    4. '   ' → logprob: -9.625591278076172
    5. ' +=' → logprob: -9.750591278076172
    6. '_total' → logprob: -10.375591278076172
    7. '+=' → logprob: -10.500591278076172
    8. ' =' → logprob: -10.750591278076172
    9. '_' → logprob: -11.500591278076172
    10. 'To' → logprob: -12.000591278076172

Token 239: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.5759419202804565
    2. ' steps' → logprob: -0.8259419202804565
    3. 'step' → logprob: -13.325942039489746
    4. '   ' → logprob: -15.325942039489746
    5. '_steps' → logprob: -15.575942039489746
    6. ' step' → logprob: -15.700942039489746
    7. ' pasos' → logprob: -16.32594108581543
    8. ' ' → logprob: -16.70094108581543
    9. ' ' → logprob: -17.32594108581543
    10. '.steps' → logprob: -17.32594108581543

Token 240: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.3451433409936726e-05
    2. '+' → logprob: -11.250033378601074
    3. '   ' → logprob: -12.125033378601074
    4. ' +' → logprob: -12.125033378601074
    5. 'to' → logprob: -12.875033378601074
    6. '_steps' → logprob: -13.250033378601074
    7. 'To' → logprob: -13.375033378601074
    8. '_' → logprob: -13.500033378601074
    9. ' to' → logprob: -14.625033378601074
    10. ')' → logprob: -15.000033378601074

Token 241: '_' (ID: 62)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.008856239728629589
    2. 'is' → logprob: -4.883856296539307
    3. 'ail' → logprob: -7.883856296539307
    4. 'ile' → logprob: -8.008855819702148
    5. '_' → logprob: -8.258855819702148
    6. 'aise' → logprob: -9.008855819702148
    7. 'ise' → logprob: -10.258855819702148
    8. 'a' → logprob: -10.633855819702148
    9. 's' → logprob: -11.008855819702148
    10. 'as' → logprob: -11.633855819702148

Token 242: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.025152290239930153
    2. 'is' → logprob: -3.7751522064208984
    3. 'ail' → logprob: -7.150152206420898
    4. 'ile' → logprob: -7.525152206420898
    5. 'as' → logprob: -8.775152206420898
    6. 's' → logprob: -9.150152206420898
    7. 'a' → logprob: -9.400152206420898
    8. 'aise' → logprob: -9.525152206420898
    9. 'ase' → logprob: -10.650152206420898
    10. 'asile' → logprob: -10.900152206420898

Token 243: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0002988776541315019
    2. 'e' → logprob: -8.125298500061035
    3. 'ble' → logprob: -14.500298500061035
    4. 'de' → logprob: -14.875298500061035
    5. 'tle' → logprob: -14.875298500061035
    6. 'ile' → logprob: -15.250298500061035
    7. 've' → logprob: -15.375298500061035
    8. 'ле' → logprob: -15.500298500061035
    9. 'lle' → logprob: -15.500298500061035
    10. '#' → logprob: -16.00029945373535

Token 244: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020720958709717
    2. '+' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.225207328796387
    4. ' plus' → logprob: -16.60020637512207
    5. '   ' → logprob: -16.72520637512207
    6. ' +
' → logprob: -17.10020637512207
    7. ' ' → logprob: -17.10020637512207
    8. '+
' → logprob: -18.35020637512207
    9. '```' → logprob: -18.47520637512207
    10. '＋' → logprob: -19.10020637512207

Token 245: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.22541557252407074
    2. ' steps' → logprob: -1.600415587425232
    3. 'step' → logprob: -14.100415229797363
    4. '   ' → logprob: -14.100415229797363
    5. ' ' → logprob: -14.600415229797363
    6. ' ' → logprob: -15.100415229797363
    7. '_steps' → logprob: -15.225415229797363
    8. '.steps' → logprob: -16.35041618347168
    9. ' pasos' → logprob: -16.47541618347168
    10. 'Steps' → logprob: -17.16291618347168

Token 246: '_backward' (ID: 185673)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3971634805202484
    2. '_backward' → logprob: -1.1471635103225708
    3. '_steps' → logprob: -4.772163391113281
    4. 'steps' → logprob: -7.522163391113281
    5. '_back' → logprob: -7.897163391113281
    6. 's' → logprob: -8.272163391113281
    7. 'to' → logprob: -8.272163391113281
    8. '.backward' → logprob: -8.397163391113281
    9. ' steps' → logprob: -10.272163391113281
    10. 'Backward' → logprob: -10.897163391113281

Token 247: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47961878776550293
    2. ' total' → logprob: -1.729618787765503
    3. '   ' → logprob: -1.979618787765503
    4. 'total' → logprob: -2.729618787765503
    5. '	total' → logprob: -8.979619026184082
    6. '    
' → logprob: -10.604619026184082
    7. ' 
' → logprob: -10.729619026184082
    8. '
' → logprob: -10.854619026184082
    9. ',total' → logprob: -10.979619026184082
    10. '(total' → logprob: -11.354619026184082

Token 248: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.07537166029214859
    2. ' total' → logprob: -2.825371742248535
    3. '   ' → logprob: -4.325371742248535
    4. '
' → logprob: -10.075371742248535
    5. '	total' → logprob: -10.200371742248535
    6. '(total' → logprob: -13.450371742248535
    7. '+' → logprob: -13.700371742248535
    8. ',total' → logprob: -13.825371742248535
    9. ' ' → logprob: -14.200371742248535
    10. '_total' → logprob: -14.325371742248535

Token 249: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -1.676292231422849e-05
    2. ' total' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.250017166137695
    4. '
' → logprob: -19.625017166137695
    5. '	total' → logprob: -20.250017166137695
    6. '+' → logprob: -22.000017166137695
    7. '(total' → logprob: -22.125017166137695
    8. '_total' → logprob: -22.375017166137695
    9. ' ' → logprob: -22.750017166137695
    10. 'Total' → logprob: -22.875017166137695

Token 250: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -9.829823102336377e-05
    2. '_' → logprob: -9.25009822845459
    3. ' _' → logprob: -14.50009822845459
    4. '_total' → logprob: -14.62509822845459
    5. 'steps' → logprob: -15.12509822845459
    6. '_s' → logprob: -15.87509822845459
    7. '_step' → logprob: -16.125099182128906
    8. '_results' → logprob: -16.250099182128906
    9. ')_' → logprob: -16.375099182128906
    10. '```' → logprob: -16.625099182128906

Token 251: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3868856430053711
    2. ' +=' → logprob: -1.136885643005371
    3. '=' → logprob: -11.761885643005371
    4. '+' → logprob: -12.136885643005371
    5. ']+=' → logprob: -14.636885643005371
    6. '   ' → logprob: -15.136885643005371
    7. '+="' → logprob: -15.386885643005371
    8. '+=(' → logprob: -15.386885643005371
    9. '+='' → logprob: -15.636885643005371
    10. ' ' → logprob: -17.136886596679688

Token 252: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12699121236801147
    2. ' max' → logprob: -2.1269912719726562
    3. 'total' → logprob: -10.501991271972656
    4. 'steps' → logprob: -10.501991271972656
    5. ' steps' → logprob: -12.251991271972656
    6. ' total' → logprob: -13.001991271972656
    7. '   ' → logprob: -15.126991271972656
    8. '	max' → logprob: -15.251991271972656
    9. '(max' → logprob: -15.626991271972656
    10. 'min' → logprob: -15.751991271972656

Token 253: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -6.539801688631997e-05
    2. 'total' → logprob: -9.750065803527832
    3. '(' → logprob: -11.875065803527832
    4. ' total' → logprob: -17.000064849853516
    5. '(max' → logprob: -17.625064849853516
    6. ',total' → logprob: -18.125064849853516
    7. ' (' → logprob: -18.750064849853516
    8. '(t' → logprob: -19.875064849853516
    9. '	total' → logprob: -20.000064849853516
    10. '(
' → logprob: -21.125064849853516

Token 254: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -7.584239938296378e-06
    2. 'steps' → logprob: -11.875007629394531
    3. 'Steps' → logprob: -15.375007629394531
    4. '_' → logprob: -15.875007629394531
    5. 's' → logprob: -16.62500762939453
    6. '_step' → logprob: -17.37500762939453
    7. '_s' → logprob: -17.37500762939453
    8. '_st' → logprob: -17.87500762939453
    9. ' steps' → logprob: -18.37500762939453
    10. '```' → logprob: -18.37500762939453

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023494805209338665
    2. ' ,' → logprob: -6.252349376678467
    3. 'steps' → logprob: -7.877349376678467
    4. ',total' → logprob: -10.877349853515625
    5. '(' → logprob: -11.502349853515625
    6. ' steps' → logprob: -11.752349853515625
    7. 'total' → logprob: -13.252349853515625
    8. '_steps' → logprob: -13.877349853515625
    9. '(total' → logprob: -14.377349853515625
    10. ')' → logprob: -15.002349853515625

Token 256: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.3132619559764862
    2. ' steps' → logprob: -1.3132619857788086
    3. 'step' → logprob: -16.188261032104492
    4. '_steps' → logprob: -16.688261032104492
    5. ' ' → logprob: -18.188261032104492
    6. '   ' → logprob: -18.188261032104492
    7. '.steps' → logprob: -18.313261032104492
    8. 'Steps' → logprob: -18.438261032104492
    9. ' pasos' → logprob: -18.688261032104492
    10. ' step' → logprob: -19.563261032104492

Token 257: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.723973582556937e-05
    2. ')
' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.125017166137695
    4. ')return' → logprob: -15.750017166137695
    5. ')

' → logprob: -17.375017166137695
    6. '}' → logprob: -17.375017166137695
    7. ')`' → logprob: -17.500017166137695
    8. '```' → logprob: -17.625017166137695
    9. '))' → logprob: -17.875017166137695
    10. '),' → logprob: -18.250017166137695

Token 258: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.610702363715973e-06
    2. '
' → logprob: -12.000009536743164
    3. ' print' → logprob: -12.625009536743164
    4. '```' → logprob: -16.875009536743164
    5. '(print' → logprob: -19.500009536743164
    6. '\n' → logprob: -19.500009536743164
    7. ')' → logprob: -19.750009536743164
    8. '\' → logprob: -20.125009536743164
    9. '.print' → logprob: -20.125009536743164
    10. '-print' → logprob: -20.375009536743164

Token 259: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.008622374385595322
    2. '(' → logprob: -4.758622169494629
    3. 'total' → logprob: -12.133622169494629
    4. '(max' → logprob: -13.258622169494629
    5. ' (' → logprob: -14.883622169494629
    6. '()' → logprob: -15.383622169494629
    7. '('' → logprob: -16.758623123168945
    8. '((' → logprob: -17.133623123168945
    9. ' total' → logprob: -17.633623123168945
    10. '(final' → logprob: -17.758623123168945

Token 260: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -2.2842308680992573e-05
    2. '_' → logprob: -10.875022888183594
    3. '_tokens' → logprob: -13.750022888183594
    4. '_step' → logprob: -14.500022888183594
    5. '_parts' → logprob: -14.875022888183594
    6. '_lines' → logprob: -14.875022888183594
    7. ')_' → logprob: -15.000022888183594
    8. '_str' → logprob: -15.625022888183594
    9. 'steps' → logprob: -15.750022888183594
    10. '_s' → logprob: -16.000022888183594

Token 261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.125
    3. '))' → logprob: -16.375
    4. ')`' → logprob: -16.875
    5. ')
' → logprob: -18.5
    6. ')}' → logprob: -18.625
    7. '+' → logprob: -19.375
    8. '),' → logprob: -20.5
    9. '')' → logprob: -20.625
    10. ')#' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 259
Tokens correctement prédits (1ère position, stricte): 85
Tokens correctement prédits (1ère position, avec adaptation): 91
Tokens correctement prédits (top 10): 193
Précision stricte (1ère position): 32.82%
Précision adaptée (1ère position): 35.14%
Précision (top 10): 74.52%
================================================================================
