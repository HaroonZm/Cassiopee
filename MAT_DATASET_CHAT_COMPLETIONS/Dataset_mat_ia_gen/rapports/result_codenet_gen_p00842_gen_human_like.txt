================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    sys.setrecursionlimit(10**7)

    def read_matrix(n):
        matrix = []
        for _ in range(n):
            row = list(map(int, sys.stdin.readline().split()))
            matrix.append(row)
        return matrix

    class TreeBuilder:
        def __init__(self, dist):
            self.n = len(dist)
            self.dist = dist
            self.next_node = self.n
            # adjacency list: key is node index, value is list of neighbors
            self.adj = {i: [] for i in range(self.n)}
        
        def is_leaf(self, node):
            return node < self.n

        def add_edge(self, u, v):
            self.adj[u].append(v)
            self.adj[v].append(u)

        def build(self):
            # We'll build the tree by repeatedly grouping leaves
            # and introducing internal nodes ("switches")
            # The algorithm:
            # While more than one cluster remains:
            #  - Find leaves i,j with minimal distance
            #  - Create a new internal node and connect to the clusters that i and j belong to
            #  - Merge clusters
            # But this is complicated if done naively,
            # so we implement a bottom-up progressive reconstruction:
            # Represent each leaf initially as a node and cluster.
            # At each step, find the pair with minimum distance,
            # connect them to a new switch node and update distances accordingly.
            
            # We manage clusters, each cluster is a set of nodes known to be connected
            # Here, since the problem is classical of additive tree reconstruction,
            # we can apply the classic additive phylogeny approach tailored for this case.

            # We implement the "Additive Tree" construction as per the problem's logic.

            # Initialize leaves as clusters
            clusters = [{i} for i in range(self.n)]
            # Initialize distance matrix between clusters; same as self.dist initially
            d = [row[:] for row in self.dist]  # copy

            # We track the nodes representing clusters:
            # initially leaves are nodes 0..n-1
            cluster_nodes = [i for i in range(self.n)]

            while len(clusters) > 1:
                # find pair of distinct clusters with minimal distance
                min_val = 10**9
                min_i = -1
                min_j = -1
                for x in range(len(clusters)):
                    for y in range(x+1, len(clusters)):
                        if d[x][y] < min_val:
                            min_val = d[x][y]
                            min_i = x
                            min_j = y

                # create new internal node representing new switch
                new_node = self.next_node
                self.next_node += 1

                ci = clusters[min_i]
                cj = clusters[min_j]
                ni = cluster_nodes[min_i]
                nj = cluster_nodes[min_j]

                # Connect new internal node to nodes representing clusters
                self.add_edge(new_node, ni)
                self.add_edge(new_node, nj)

                # merge two clusters
                new_cluster = ci.union(cj)

                # Build new distance row for merged cluster: distance between merged cluster and others:
                new_row = []
                for k in range(len(clusters)):
                    if k == min_i or k == min_j:
                        continue
                    dist_to_k = (d[min_i][k] + d[min_j][k] - d[min_i][min_j]) // 2
                    new_row.append(dist_to_k)

                # update clusters and d
                new_clusters = []
                new_cluster_nodes = []
                new_d = []

                for k in range(len(clusters)):
                    if k != min_i and k != min_j:
                        new_clusters.append(clusters[k])
                        new_cluster_nodes.append(cluster_nodes[k])

                new_clusters.append(new_cluster)
                new_cluster_nodes.append(new_node)

                # build new distance matrix
                size = len(new_clusters)
                for i in range(size-1):
                    row = [0]*size
                    for j in range(i+1,size-1):
                        row[j] = d[i if i<min_i else i+1 if i<min_j else i+2][j if j<min_i else j+1 if j<min_j else j+2]
                        row[j], row[i] = row[i], row[j] # symmetry swapped to row i j
                    row[size-1] = new_row[i]
                    new_d.append(row)
                # last row:
                last_row = new_row[:] + [0]
                new_d.append(last_row)

                # fix symmetry:
                for i in range(size):
                    for j in range(i+1,size):
                        new_d[j][i] = new_d[i][j]

                clusters = new_clusters
                cluster_nodes = new_cluster_nodes
                d = new_d

            # Finished building tree

        def get_internal_degrees(self):
            # Internal nodes are those with index >= n
            degrees = []
            for node in self.adj:
                if node >= self.n:
                    degrees.append(len(self.adj[node]))
            degrees.sort()
            return degrees

    input_lines = sys.stdin.read().strip().split('\n')
    pos = 0
    while True:
        if pos >= len(input_lines):
            break
        line = input_lines[pos].strip()
        pos += 1
        if line == '0':
            break
        n = int(line)
        dist = []
        while len(dist) < n:
            row_vals = list(map(int, input_lines[pos].strip().split()))
            pos += 1
            dist.append(row_vals)
        tb = TreeBuilder(dist)
        tb.build()
        result = tb.get_internal_degrees()
        print(' '.join(map(str,result)))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2555811405181885
    2. '   ' → logprob: -2.5055811405181885
    3. '\n' → logprob: -2.6305811405181885
    4. '(' → logprob: -3.6305811405181885
    5. ''' → logprob: -4.630580902099609
    6. '```' → logprob: -4.880580902099609
    7. '    
' → logprob: -5.130580902099609
    8. ':' → logprob: -5.380580902099609
    9. ' ' → logprob: -5.755580902099609
    10. '    ' → logprob: -5.880580902099609

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6302867531776428
    2. '   ' → logprob: -1.630286693572998
    3. 'pass' → logprob: -1.630286693572998
    4. 'return' → logprob: -3.255286693572998
    5. '    ' → logprob: -5.005286693572998
    6. '\' → logprob: -5.005286693572998
    7. ' pass' → logprob: -5.130286693572998
    8. '```' → logprob: -5.630286693572998
    9. 'a' → logprob: -6.130286693572998
    10. '\n' → logprob: -6.130286693572998

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.024645892903208733
    2. ' sys' → logprob: -3.8996458053588867
    3. ' ' → logprob: -6.399645805358887
    4. ' math' → logprob: -6.524645805358887
    5. ' numpy' → logprob: -7.524645805358887
    6. ' json' → logprob: -8.524645805358887
    7. ' random' → logprob: -9.774645805358887
    8. ' requests' → logprob: -10.524645805358887
    9. 'os' → logprob: -10.774645805358887
    10. ' tensorflow' → logprob: -11.024645805358887

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16592592000961304
    2. 'newline' → logprob: -3.790925979614258
    3. '.readline' → logprob: -3.790925979614258
    4. '   ' → logprob: -4.040925979614258
    5. '.stdout' → logprob: -4.290925979614258
    6. '\n' → logprob: -4.665925979614258
    7. 'import' → logprob: -4.665925979614258
    8. '.print' → logprob: -4.790925979614258
    9. '```' → logprob: -4.790925979614258
    10. '[' → logprob: -5.290925979614258

Token 7: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.111005187034607
    2. '   ' → logprob: -1.236005187034607
    3. 'newline' → logprob: -2.7360053062438965
    4. '\n' → logprob: -2.8610053062438965
    5. 'import' → logprob: -2.9860053062438965
    6. '.readline' → logprob: -3.2360053062438965
    7. '[' → logprob: -3.4860053062438965
    8. 'print' → logprob: -3.6110053062438965
    9. '\' → logprob: -3.9860053062438965
    10. '```' → logprob: -4.2360053062438965

Token 8: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3454183340072632
    2. ' ' → logprob: -2.3454184532165527
    3. '    ' → logprob: -2.3454184532165527
    4. '\n' → logprob: -3.8454184532165527
    5. '\' → logprob: -4.220418453216553
    6. '[' → logprob: -4.595418453216553
    7. '.' → logprob: -4.720418453216553
    8. 'import' → logprob: -4.845418453216553
    9. 'newline' → logprob: -5.220418453216553
    10. '  ' → logprob: -5.345418453216553

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.868328920158092e-05
    2. ' .' → logprob: -11.375028610229492
    3. '.exit' → logprob: -12.375028610229492
    4. '.stdout' → logprob: -13.500028610229492
    5. '.argv' → logprob: -13.500028610229492
    6. '.import' → logprob: -13.750028610229492
    7. '.readline' → logprob: -14.000028610229492
    8. '.user' → logprob: -14.375028610229492
    9. '.`' → logprob: -14.375028610229492
    10. '[' → logprob: -14.375028610229492

Token 10: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.41528794169425964
    2. 'rec' → logprob: -2.415287971496582
    3. '_trace' → logprob: -2.540287971496582
    4. 's' → logprob: -3.165287971496582
    5. 'ex' → logprob: -3.540287971496582
    6. 'set' → logprob: -4.290287971496582
    7. '_' → logprob: -4.415287971496582
    8. 'execution' → logprob: -4.540287971496582
    9. '_version' → logprob: -5.040287971496582
    10. 'e' → logprob: -5.165287971496582

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.006294329650700092
    2. 'urs' → logprob: -6.131294250488281
    3. 'limit' → logprob: -6.756294250488281
    4. '_limit' → logprob: -7.006294250488281
    5. 'ur' → logprob: -7.631294250488281
    6. '_' → logprob: -7.756294250488281
    7. 'ut' → logprob: -8.256294250488281
    8. 'ursive' → logprob: -8.256294250488281
    9. 't' → logprob: -8.256294250488281
    10. 'urse' → logprob: -9.256294250488281

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.000516813131980598
    2. '_limit' → logprob: -7.875516891479492
    3. 'lim' → logprob: -9.375516891479492
    4. 'depth' → logprob: -10.125516891479492
    5. ' limit' → logprob: -12.000516891479492
    6. '_depth' → logprob: -13.000516891479492
    7. 'Limit' → logprob: -13.750516891479492
    8. 'l' → logprob: -14.125516891479492
    9. '_' → logprob: -14.375516891479492
    10. '(limit' → logprob: -14.750516891479492

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.7697225252486533e-06
    2. '(

' → logprob: -13.250003814697266
    3. '(
' → logprob: -13.875003814697266
    4. ' (' → logprob: -14.625003814697266
    5. '("("' → logprob: -15.250003814697266
    6. '((' → logprob: -16.125003814697266
    7. '()' → logprob: -16.750003814697266
    8. '('' → logprob: -16.875003814697266
    9. '(
' → logprob: -18.125003814697266
    10. '(**' → logprob: -18.250003814697266

Token 14: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008621551096439362
    2. '100' → logprob: -4.758621692657471
    3. '1' → logprob: -12.383621215820312
    4. ' ' → logprob: -13.258621215820312
    5. '   ' → logprob: -15.008621215820312
    6. '500' → logprob: -15.258621215820312
    7. '300' → logprob: -15.758621215820312
    8. '999' → logprob: -15.758621215820312
    9. '  ' → logprob: -16.133621215820312
    10. '(' → logprob: -16.633621215820312

Token 15: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013454732252284884
    2. '00' → logprob: -7.126345634460449
    3. '000' → logprob: -7.751345634460449
    4. '4' → logprob: -9.62634563446045
    5. '**' → logprob: -10.87634563446045
    6. '6' → logprob: -11.50134563446045
    7. '2' → logprob: -11.87634563446045
    8. '5' → logprob: -12.25134563446045
    9. '3' → logprob: -12.87634563446045
    10. ')' → logprob: -14.25134563446045

Token 16: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0006828876794315875
    2. '6' → logprob: -7.875682830810547
    3. '8' → logprob: -8.625682830810547
    4. '9' → logprob: -9.000682830810547
    5. ' ' → logprob: -17.750682830810547
    6. '```' → logprob: -18.000682830810547
    7. '5' → logprob: -19.875682830810547
    8. '}' → logprob: -20.000682830810547
    9. '**' → logprob: -20.125682830810547
    10. ')' → logprob: -20.500682830810547

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.750001907348633
    4. '))' → logprob: -16.375001907348633
    5. ' ' → logprob: -17.500001907348633
    6. '```' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.625001907348633
    8. ')
' → logprob: -18.750001907348633
    9. '),' → logprob: -18.875001907348633
    10. '}' → logprob: -19.000001907348633

Token 18: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.7733561992645264
    2. '   ' → logprob: -0.8983561992645264
    3. '\' → logprob: -2.6483561992645264
    4. '
' → logprob: -3.3983561992645264
    5. '\n' → logprob: -4.7733564376831055
    6. '```' → logprob: -4.8983564376831055
    7. ' 
' → logprob: -5.6483564376831055
    8. '    ' → logprob: -6.2733564376831055
    9. 'newline' → logprob: -6.8983564376831055
    10. '   
' → logprob: -7.0233564376831055

Token 19: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16769099235534668
    2. 'n' → logprob: -2.1676909923553467
    3. 'i' → logprob: -4.542691230773926
    4. ' ' → logprob: -4.667691230773926
    5. 'x' → logprob: -5.292691230773926
    6. 'a' → logprob: -5.792691230773926
    7. ')' → logprob: -6.167691230773926
    8. '    ' → logprob: -6.417691230773926
    9. '    
' → logprob: -6.917691230773926
    10. 'w' → logprob: -7.292691230773926

Token 20: ' read' (ID: 1729)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6617339849472046
    2. ' factorial' → logprob: -1.0367339849472046
    3. ' f' → logprob: -2.661734104156494
    4. ' solve' → logprob: -3.036734104156494
    5. ' fibonacci' → logprob: -5.786734104156494
    6. ' factor' → logprob: -6.161734104156494
    7. ' ' → logprob: -6.536734104156494
    8. ' helper' → logprob: -7.036734104156494
    9. ' fib' → logprob: -7.036734104156494
    10. 'dfs' → logprob: -7.411734104156494

Token 21: '_matrix' (ID: 23431)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3258572518825531
    2. '_line' → logprob: -1.5758572816848755
    3. 'line' → logprob: -2.950857162475586
    4. '(' → logprob: -4.700857162475586
    5. '_' → logprob: -5.200857162475586
    6. 'Line' → logprob: -5.825857162475586
    7. ' ()' → logprob: -7.950857162475586
    8. '_token' → logprob: -8.700857162475586
    9. ' line' → logprob: -8.825857162475586
    10. '():' → logprob: -8.950857162475586

Token 22: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009717292850837111
    2. '_' → logprob: -8.750971794128418
    3. '()' → logprob: -8.875971794128418
    4. '("("' → logprob: -9.125971794128418
    5. '_line' → logprob: -9.250971794128418
    6. '_input' → logprob: -9.375971794128418
    7. '```' → logprob: -10.125971794128418
    8. '('' → logprob: -10.500971794128418
    9. '(row' → logprob: -10.750971794128418
    10. ' (' → logprob: -10.875971794128418

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017081368714571
    2. ')' → logprob: -6.751708030700684
    3. ',' → logprob: -7.751708030700684
    4. '):
' → logprob: -10.251708030700684
    5. ':' → logprob: -10.376708030700684
    6. ' ):' → logprob: -10.876708030700684
    7. '_' → logprob: -11.251708030700684
    8. '*' → logprob: -13.376708030700684
    9. '=' → logprob: -13.751708030700684
    10. 'a' → logprob: -14.251708030700684

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2035377323627472
    2. '<|end|>' → logprob: -1.8285377025604248
    3. '   ' → logprob: -4.703537940979004
    4. '    ' → logprob: -4.953537940979004
    5. ' ' → logprob: -6.203537940979004
    6. ':' → logprob: -6.578537940979004
    7. '<|end|>' → logprob: -7.328537940979004
    8. ')' → logprob: -7.953537940979004
    9. '        ' → logprob: -8.078537940979004
    10. '\n' → logprob: -8.203537940979004

Token 25: ' matrix' (ID: 12248)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.509085476398468
    2. '    ' → logprob: -2.0090854167938232
    3. ' ' → logprob: -2.3840854167938232
    4. '   ' → logprob: -2.6340854167938232
    5. '        ' → logprob: -3.2590854167938232
    6. '[' → logprob: -3.7590854167938232
    7. 'return' → logprob: -4.384085655212402
    8. ' return' → logprob: -4.884085655212402
    9. '\' → logprob: -6.009085655212402
    10. '     ' → logprob: -6.134085655212402

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02115752175450325
    2. '=' → logprob: -3.8961575031280518
    3. ' ' → logprob: -7.771157741546631
    4. '[' → logprob: -10.021157264709473
    5. '=[]' → logprob: -10.146157264709473
    6. '.' → logprob: -10.521157264709473
    7. '   ' → logprob: -10.646157264709473
    8. '.append' → logprob: -11.021157264709473
    9. ')' → logprob: -11.771157264709473
    10. '  ' → logprob: -11.896157264709473

Token 27: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.21259920299053192
    2. '[]' → logprob: -1.7125991582870483
    3. ' [' → logprob: -5.087599277496338
    4. '[' → logprob: -5.337599277496338
    5. '[n' → logprob: -10.21259880065918
    6. ' [[]' → logprob: -10.33759880065918
    7. '[][]' → logprob: -11.08759880065918
    8. ' ' → logprob: -11.08759880065918
    9. '   ' → logprob: -11.71259880065918
    10. ' [][]' → logprob: -11.83759880065918

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.147990420460701
    2. '   ' → logprob: -3.0229904651641846
    3. ' for' → logprob: -3.1479904651641846
    4. '<|end|>' → logprob: -4.0229902267456055
    5. 'for' → logprob: -4.5229902267456055
    6. '    ' → logprob: -4.8979902267456055
    7. '
' → logprob: -6.0229902267456055
    8. '        ' → logprob: -6.5229902267456055
    9. ')' → logprob: -6.8979902267456055
    10. ' ' → logprob: -7.0229902267456055

Token 29: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02370334416627884
    2. ' for' → logprob: -3.7737033367156982
    3. '   ' → logprob: -7.773703575134277
    4. '       ' → logprob: -10.273703575134277
    5. '    ' → logprob: -13.898703575134277
    6. '	for' → logprob: -14.148703575134277
    7. 'f' → logprob: -14.523703575134277
    8. ' ' → logprob: -14.773703575134277
    9. '  ' → logprob: -17.89870262145996
    10. ' f' → logprob: -18.02370262145996

Token 30: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5468332171440125
    2. ' i' → logprob: -1.5468332767486572
    3. ' ' → logprob: -1.7968332767486572
    4. '_' → logprob: -3.1718332767486572
    5. 'i' → logprob: -7.796833038330078
    6. ' ‌' → logprob: -9.796833038330078
    7. ' ' → logprob: -9.921833038330078
    8. ' ▁' → logprob: -11.546833038330078
    9. '  ' → logprob: -11.671833038330078
    10. ' ​' → logprob: -12.171833038330078

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00099648698233068
    2. 'in' → logprob: -7.0009965896606445
    3. 'n' → logprob: -10.000996589660645
    4. ' ' → logprob: -10.750996589660645
    5. 'i' → logprob: -11.250996589660645
    6. ' i' → logprob: -13.250996589660645
    7. '  ' → logprob: -13.500996589660645
    8. '	in' → logprob: -14.375996589660645
    9. '   ' → logprob: -14.500996589660645
    10. 'import' → logprob: -15.875996589660645

Token 32: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04860735312104225
    2. ' range' → logprob: -3.048607349395752
    3. '	range' → logprob: -12.29860782623291
    4. ' ' → logprob: -12.67360782623291
    5. 'ange' → logprob: -12.92360782623291
    6. '(range' → logprob: -13.04860782623291
    7. '```' → logprob: -13.04860782623291
    8. '   ' → logprob: -13.54860782623291
    9. '  ' → logprob: -13.67360782623291
    10. '_range' → logprob: -14.29860782623291

Token 33: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014178085140883923
    2. '(' → logprob: -4.264178276062012
    3. ' (' → logprob: -11.389178276062012
    4. 'n' → logprob: -14.014178276062012
    5. '(
' → logprob: -14.014178276062012
    6. ' n' → logprob: -14.764178276062012
    7. '(int' → logprob: -14.889178276062012
    8. '(range' → logprob: -15.264178276062012
    9. '(

' → logprob: -15.389178276062012
    10. ')' → logprob: -16.264177322387695

Token 34: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4744724929332733
    2. '):' → logprob: -0.9744725227355957
    3. ' )' → logprob: -8.724472045898438
    4. '):
' → logprob: -9.224472045898438
    5. ' ):' → logprob: -10.099472045898438
    6. '   ' → logprob: -10.224472045898438
    7. ':' → logprob: -10.974472045898438
    8. ',' → logprob: -11.974472045898438
    9. 'in' → logprob: -12.349472045898438
    10. '),' → logprob: -12.599472045898438

Token 35: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005574395763687789
    2. '       ' → logprob: -7.7505574226379395
    3. '```' → logprob: -10.250557899475098
    4. '            
' → logprob: -10.625557899475098
    5. '   ' → logprob: -11.125557899475098
    6. '        ' → logprob: -11.750557899475098
    7. 'n' → logprob: -11.875557899475098
    8. '          ' → logprob: -12.375557899475098
    9. ' readline' → logprob: -12.750557899475098
    10. '	   ' → logprob: -12.875557899475098

Token 36: ' row' (ID: 5225)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.23493891954421997
    2. '           ' → logprob: -1.8599388599395752
    3. 'matrix' → logprob: -3.109938859939575
    4. ' row' → logprob: -5.609939098358154
    5. ' line' → logprob: -5.859939098358154
    6. ' lines' → logprob: -7.359939098358154
    7. ' readline' → logprob: -8.359938621520996
    8. '            ' → logprob: -8.359938621520996
    9. ' input' → logprob: -8.484938621520996
    10. '   ' → logprob: -8.484938621520996

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015074179507791996
    2. '=' → logprob: -4.265074253082275
    3. '.append' → logprob: -7.140074253082275
    4. '.' → logprob: -9.140073776245117
    5. '.extend' → logprob: -12.390073776245117
    6. ',' → logprob: -13.140073776245117
    7. ')' → logprob: -13.765073776245117
    8. ' .' → logprob: -14.140073776245117
    9. '.=' → logprob: -14.140073776245117
    10. ' +=' → logprob: -15.640073776245117

Token 38: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3133104145526886
    2. 'list' → logprob: -1.3133103847503662
    3. ' [' → logprob: -10.938310623168945
    4. '[' → logprob: -11.313310623168945
    5. '   ' → logprob: -12.063310623168945
    6. '[list' → logprob: -12.188310623168945
    7. ' tuple' → logprob: -12.938310623168945
    8. '	list' → logprob: -13.313310623168945
    9. '=list' → logprob: -13.688310623168945
    10. 'tuple' → logprob: -13.938310623168945

Token 39: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.023261668160557747
    2. '(' → logprob: -3.773261785507202
    3. '(int' → logprob: -11.273262023925781
    4. '(input' → logprob: -13.273262023925781
    5. '(range' → logprob: -14.273262023925781
    6. '(
' → logprob: -15.023262023925781
    7. '(

' → logprob: -15.648262023925781
    8. '()' → logprob: -16.14826202392578
    9. 'map' → logprob: -16.27326202392578
    10. ' map' → logprob: -16.64826202392578

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013754721730947495
    2. '(' → logprob: -6.626375675201416
    3. 'int' → logprob: -10.501375198364258
    4. '(str' → logprob: -12.001375198364258
    5. '[int' → logprob: -12.501375198364258
    6. '(
' → logprob: -12.626375198364258
    7. '(input' → logprob: -12.876375198364258
    8. '<int' → logprob: -13.376375198364258
    9. '(lambda' → logprob: -13.626375198364258
    10. ',int' → logprob: -13.626375198364258

Token 41: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4428330063819885
    2. '<|end|>' → logprob: -1.5678329467773438
    3. ',' → logprob: -2.6928329467773438
    4. '(' → logprob: -2.9428329467773438
    5. ',input' → logprob: -4.192832946777344
    6. ')' → logprob: -5.192832946777344
    7. '(sys' → logprob: -5.942832946777344
    8. '(stdin' → logprob: -6.192832946777344
    9. 'input' → logprob: -6.567832946777344
    10. ' input' → logprob: -7.692832946777344

Token 42: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47409942746162415
    2. ' input' → logprob: -0.9740993976593018
    3. ' sys' → logprob: -11.974099159240723
    4. 'sys' → logprob: -12.099099159240723
    5. '(input' → logprob: -12.974099159240723
    6. '=input' → logprob: -12.974099159240723
    7. ',input' → logprob: -12.974099159240723
    8. '	input' → logprob: -13.099099159240723
    9. ')' → logprob: -14.474099159240723
    10. ' ' → logprob: -15.349099159240723

Token 43: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0048715197481215
    2. '.' → logprob: -5.379871368408203
    3. '.readline' → logprob: -8.754871368408203
    4. '.argv' → logprob: -10.254871368408203
    5. '.stdout' → logprob: -10.254871368408203
    6. '<|end|>' → logprob: -11.879871368408203
    7. '.st' → logprob: -12.504871368408203
    8. '.std' → logprob: -12.629871368408203
    9. '.input' → logprob: -12.879871368408203
    10. 'stdin' → logprob: -13.629871368408203

Token 44: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000477620807942003
    2. '.' → logprob: -7.7504777908325195
    3. '.read' → logprob: -10.37547779083252
    4. '.readlines' → logprob: -11.62547779083252
    5. '.stdin' → logprob: -12.00047779083252
    6. ').' → logprob: -15.75047779083252
    7. ' .' → logprob: -15.87547779083252
    8. '.)' → logprob: -16.125476837158203
    9. '.buffer' → logprob: -16.625476837158203
    10. ')' → logprob: -17.375476837158203

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006810996565036476
    2. '()))' → logprob: -7.500680923461914
    3. '()' → logprob: -9.625680923461914
    4. '())' → logprob: -9.750680923461914
    5. ' ().' → logprob: -13.500680923461914
    6. '()));' → logprob: -14.125680923461914
    7. '())))' → logprob: -14.375680923461914
    8. '(' → logprob: -15.375680923461914
    9. ' ())' → logprob: -15.875680923461914
    10. '))' → logprob: -16.125680923461914

Token 46: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06268575042486191
    2. 'rstrip' → logprob: -2.81268572807312
    3. 'split' → logprob: -7.312685966491699
    4. 'read' → logprob: -10.4376859664917
    5. ' strip' → logprob: -10.8126859664917
    6. ')' → logprob: -14.0626859664917
    7. ' ' → logprob: -15.5626859664917
    8. 'rst' → logprob: -16.187685012817383
    9. ' split' → logprob: -16.812685012817383
    10. 'rs' → logprob: -17.312685012817383

Token 47: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009209711104631424
    2. '()' → logprob: -5.384209632873535
    3. '())' → logprob: -5.509209632873535
    4. '()))
' → logprob: -8.509209632873535
    5. '())))' → logprob: -8.759209632873535
    6. '(' → logprob: -8.884209632873535
    7. '))' → logprob: -11.009209632873535
    8. '()))

' → logprob: -12.259209632873535
    9. '()));' → logprob: -12.509209632873535
    10. '()
' → logprob: -13.509209632873535

Token 48: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01089053601026535
    2. '           ' → logprob: -4.635890483856201
    3. ')
' → logprob: -7.010890483856201
    4. '       ' → logprob: -8.76089096069336
    5. '))' → logprob: -10.13589096069336
    6. '()' → logprob: -11.63589096069336
    7. '   ' → logprob: -12.13589096069336
    8. '               ' → logprob: -12.51089096069336
    9. ' )' → logprob: -12.51089096069336
    10. '`)' → logprob: -13.26089096069336

Token 49: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.7012744545936584
    2. '           ' → logprob: -0.8262744545936584
    3. ')' → logprob: -3.3262743949890137
    4. '       ' → logprob: -3.7012743949890137
    5. ' matrix' → logprob: -5.576274394989014
    6. '<|end|>' → logprob: -7.326274394989014
    7. '.' → logprob: -7.951274394989014
    8. '   ' → logprob: -8.201274871826172
    9. ').' → logprob: -8.451274871826172
    10. '),' → logprob: -9.576274871826172

Token 50: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001185703556984663
    2. '.' → logprob: -6.751185894012451
    3. '.extend' → logprob: -11.751185417175293
    4. '.add' → logprob: -12.376185417175293
    5. '.setdefault' → logprob: -14.126185417175293
    6. '.app' → logprob: -14.251185417175293
    7. '.ap' → logprob: -14.626185417175293
    8. '.Append' → logprob: -14.751185417175293
    9. ' .' → logprob: -14.876185417175293
    10. '.push' → logprob: -15.251185417175293

Token 51: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.00043138445471413434
    2. '(' → logprob: -7.750431537628174
    3. '(line' → logprob: -15.250431060791016
    4. '(rows' → logprob: -15.625431060791016
    5. '(
' → logprob: -15.750431060791016
    6. ' (' → logprob: -16.125431060791016
    7. '(

' → logprob: -17.875431060791016
    8. '(column' → logprob: -18.125431060791016
    9. '((' → logprob: -19.250431060791016
    10. '(r' → logprob: -19.625431060791016

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005685218493454158
    2. ')
' → logprob: -7.750568389892578
    3. '       ' → logprob: -9.000568389892578
    4. '   ' → logprob: -11.500568389892578
    5. '))' → logprob: -12.875568389892578
    6. ')return' → logprob: -14.250568389892578
    7. '`)' → logprob: -15.125568389892578
    8. ' )' → logprob: -15.250568389892578
    9. '           ' → logprob: -15.875568389892578
    10. ')`' → logprob: -15.875568389892578

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2957555055618286
    2. '   ' → logprob: -1.5457555055618286
    3. '
' → logprob: -4.170755386352539
    4. '    
' → logprob: -4.795755386352539
    5. ')' → logprob: -5.545755386352539
    6. '<|end|>' → logprob: -5.545755386352539
    7. '        
' → logprob: -5.920755386352539
    8. '\n' → logprob: -6.045755386352539
    9. '' → logprob: -6.170755386352539
    10. '    ' → logprob: -6.795755386352539

Token 54: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21928131580352783
    2. '   ' → logprob: -2.0942811965942383
    3. '<|end|>' → logprob: -3.2192811965942383
    4. '
' → logprob: -3.8442811965942383
    5. ')' → logprob: -5.469281196594238
    6. '    ' → logprob: -6.344281196594238
    7. '    
' → logprob: -6.469281196594238
    8. '<|end|>' → logprob: -7.469281196594238
    9. '        
' → logprob: -7.594281196594238
    10. 'return' (adapté à ' return') → logprob: -7.844281196594238

Token 55: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.12693797051906586
    2. 'matrix' → logprob: -2.1269378662109375
    3. '	matrix' → logprob: -12.001937866210938
    4. '(matrix' → logprob: -12.751937866210938
    5. '_matrix' → logprob: -14.751937866210938
    6. ' matriz' → logprob: -15.376937866210938
    7. 'm' → logprob: -16.126937866210938
    8. ' ' → logprob: -16.626937866210938
    9. '.matrix' → logprob: -17.126937866210938
    10. ' matrices' → logprob: -17.501937866210938

Token 56: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2326222062110901
    2. '
' → logprob: -2.1076221466064453
    3. 'n' → logprob: -3.2326221466064453
    4. '    
' → logprob: -3.2326221466064453
    5. '<|end|>' → logprob: -5.982622146606445
    6. '

' → logprob: -7.607622146606445
    7. '```' → logprob: -7.607622146606445
    8. '\n' → logprob: -7.732622146606445
    9. '  
' → logprob: -7.982622146606445
    10. 'def' → logprob: -7.982622146606445

Token 58: ' class' (ID: 744)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4113959074020386
    2. '   ' → logprob: -1.1613959074020386
    3. '
' → logprob: -4.661396026611328
    4. '    
' → logprob: -4.786396026611328
    5. 'def' → logprob: -6.286396026611328
    6. ' n' → logprob: -6.411396026611328
    7. '    ' → logprob: -7.161396026611328
    8. '  ' → logprob: -8.411396026611328
    9. ' ' → logprob: -8.536396026611328
    10. '#' → logprob: -8.911396026611328

Token 59: ' Tree' (ID: 14224)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.061689853668213
    2. ' Matrix' → logprob: -1.311689853668213
    3. ' Graph' → logprob: -1.311689853668213
    4. ' Node' → logprob: -2.936689853668213
    5. ' Segment' → logprob: -4.061689853668213
    6. ' DFS' → logprob: -4.811689853668213
    7. ' Tree' → logprob: -5.311689853668213
    8. ' Solver' → logprob: -5.311689853668213
    9. ' Solution' → logprob: -5.436689853668213
    10. ' ' → logprob: -5.936689853668213

Token 60: 'Builder' (ID: 4542)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.07074876874685287
    2. ':' → logprob: -2.695748805999756
    3. '():' → logprob: -7.320748805999756
    4. '(Node' → logprob: -9.570748329162598
    5. ' :' → logprob: -10.945748329162598
    6. 'node' → logprob: -11.445748329162598
    7. '_Node' → logprob: -11.695748329162598
    8. '(node' → logprob: -11.695748329162598
    9. '_node' → logprob: -12.195748329162598
    10. '):' → logprob: -12.195748329162598

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023083435371518135
    2. '(' → logprob: -9.00023078918457
    3. ' :' → logprob: -9.75023078918457
    4. ':
' → logprob: -11.00023078918457
    5. '():' → logprob: -11.12523078918457
    6. ':**' → logprob: -11.75023078918457
    7. '(object' → logprob: -12.12523078918457
    8. '):' → logprob: -13.37523078918457
    9. '<|end|>' → logprob: -14.12523078918457
    10. '>:' → logprob: -14.87523078918457

Token 62: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09591686725616455
    2. '<|end|>' → logprob: -3.220916748046875
    3. '   ' → logprob: -3.970916748046875
    4. '(' → logprob: -4.595916748046875
    5. '       ' → logprob: -4.970916748046875
    6. ':
' → logprob: -4.970916748046875
    7. '    ' → logprob: -5.970916748046875
    8. '<|end|>' → logprob: -6.720916748046875
    9. '(n' → logprob: -7.095916748046875
    10. ' :' → logprob: -7.220916748046875

Token 63: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.011200960725545883
    2. 'def' (adapté à ' def') → logprob: -4.511200904846191
    3. '    ' → logprob: -9.386200904846191
    4. '   ' → logprob: -10.511200904846191
    5. ' ' → logprob: -10.761200904846191
    6. ' 
' → logprob: -11.511200904846191
    7. '       ' → logprob: -12.886200904846191
    8. '    
' → logprob: -13.011200904846191
    9. '	def' → logprob: -13.386200904846191
    10. '
' → logprob: -13.761200904846191

Token 64: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2695479989051819
    2. 'init' → logprob: -1.519547939300537
    3. ' init' → logprob: -4.644547939300537
    4. '__' → logprob: -5.519547939300537
    5. '_init' → logprob: -5.894547939300537
    6. ' ' → logprob: -7.394547939300537
    7. ' _' → logprob: -8.019548416137695
    8. 'it' → logprob: -10.519548416137695
    9. 'in' → logprob: -10.519548416137695
    10. '   ' → logprob: -10.894548416137695

Token 65: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'ini' → logprob: -15.25
    3. 'in' → logprob: -17.375
    4. ' init' → logprob: -18.375
    5. 'i' → logprob: -19.625
    6. 'new' → logprob: -19.875
    7. 'inite' → logprob: -20.0
    8. '_init' → logprob: -20.5
    9. 'initi' → logprob: -21.25
    10. 'innit' → logprob: -21.875

Token 66: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.08184187114238739
    2. '__' → logprob: -2.5818419456481934
    3. '(' → logprob: -6.331841945648193
    4. '__((' → logprob: -7.456841945648193
    5. '__(
' → logprob: -7.831841945648193
    6. '__('' → logprob: -9.456841468811035
    7. '__(*' → logprob: -10.081841468811035
    8. '(self' → logprob: -10.581841468811035
    9. '__("' → logprob: -11.456841468811035
    10. '<|end|>' → logprob: -11.581841468811035

Token 67: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008420264348387718
    2. ' self' → logprob: -7.125842094421387
    3. ')' → logprob: -11.500842094421387
    4. '       ' → logprob: -11.625842094421387
    5. '(self' → logprob: -12.250842094421387
    6. ' ' → logprob: -12.375842094421387
    7. '   ' → logprob: -12.875842094421387
    8. ',' → logprob: -13.500842094421387
    9. '0' → logprob: -14.125842094421387
    10. '<|end|>' → logprob: -14.375842094421387

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03842046856880188
    2. ' ,' → logprob: -3.2884204387664795
    3. ',n' → logprob: -9.038420677185059
    4. 'self' → logprob: -9.288420677185059
    5. '_,' → logprob: -9.663420677185059
    6. ',self' → logprob: -9.913420677185059
    7. ')' → logprob: -11.538420677185059
    8. '(' → logprob: -11.788420677185059
    9. '   ' → logprob: -12.413420677185059
    10. ',_' → logprob: -12.538420677185059

Token 69: ' dist' (ID: 3601)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9135183691978455
    2. ' self' → logprob: -1.1635184288024902
    3. 'self' → logprob: -2.1635184288024902
    4. ' data' → logprob: -2.4135184288024902
    5. 'n' → logprob: -3.2885184288024902
    6. ' parent' → logprob: -3.7885184288024902
    7. ' matrix' → logprob: -4.91351842880249
    8. 'data' → logprob: -5.41351842880249
    9. 'parent' → logprob: -6.53851842880249
    10. ' size' → logprob: -6.66351842880249

Token 70: '):
' (ID: 1883)
  Prédit: 'ances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.3755209147930145
    2. 'ance' → logprob: -1.250520944595337
    3. '_matrix' → logprob: -4.125520706176758
    4. 's' → logprob: -5.750520706176758
    5. ',' → logprob: -5.875520706176758
    6. '):
' → logprob: -6.875520706176758
    7. '):' → logprob: -6.875520706176758
    8. ')' → logprob: -7.000520706176758
    9. '_' → logprob: -8.000520706176758
    10. '_array' → logprob: -8.750520706176758

Token 71: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12318891286849976
    2. '           ' → logprob: -2.7481889724731445
    3. '       ' → logprob: -3.2481889724731445
    4. ',' → logprob: -4.8731889724731445
    5. '        ' → logprob: -6.4981889724731445
    6. ' :' → logprob: -7.2481889724731445
    7. '.' → logprob: -7.3731889724731445
    8. '<|end|>' → logprob: -7.3731889724731445
    9. '=' → logprob: -7.6231889724731445
    10. '):' → logprob: -8.123188972473145

Token 72: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25350040197372437
    2. 'self' (adapté à ' self') → logprob: -1.5035004615783691
    3. '           ' → logprob: -6.878500461578369
    4. '               ' → logprob: -7.878500461578369
    5. '       ' → logprob: -9.253499984741211
    6. '   ' → logprob: -10.878499984741211
    7. ' ' → logprob: -11.003499984741211
    8. '            ' → logprob: -11.378499984741211
    9. '	self' → logprob: -12.378499984741211
    10. '        ' → logprob: -12.753499984741211

Token 73: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23202669620513916
    2. '.dist' → logprob: -1.6070266962051392
    3. ' .' → logprob: -5.10702657699585
    4. '.d' → logprob: -8.482027053833008
    5. ' ' → logprob: -8.607027053833008
    6. '._' → logprob: -10.107027053833008
    7. '.data' → logprob: -10.857027053833008
    8. '.distance' → logprob: -11.107027053833008
    9. '   ' → logprob: -11.607027053833008
    10. '.s' → logprob: -11.732027053833008

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008675788529217243
    2. '=' → logprob: -4.758675575256348
    3. ',' → logprob: -10.508675575256348
    4. ' ' → logprob: -10.758675575256348
    5. '    ' → logprob: -12.258675575256348
    6. '   ' → logprob: -12.508675575256348
    7. '        ' → logprob: -13.758675575256348
    8. '       ' → logprob: -14.008675575256348
    9. '  ' → logprob: -15.133675575256348
    10. ' ,' → logprob: -15.258675575256348

Token 75: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0015040287980809808
    2. 'len' → logprob: -6.501503944396973
    3. ' dist' → logprob: -13.876503944396973
    4. '(len' → logprob: -14.751503944396973
    5. '=len' → logprob: -15.251503944396973
    6. '	len' → logprob: -16.12650489807129
    7. '[len' → logprob: -16.62650489807129
    8. ' ' → logprob: -17.50150489807129
    9. '    ' → logprob: -17.50150489807129
    10. ' n' → logprob: -18.12650489807129

Token 76: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0004315036640036851
    2. '(' → logprob: -7.750431537628174
    3. 'dist' → logprob: -14.750431060791016
    4. '(distance' → logprob: -15.250431060791016
    5. '(diff' → logprob: -17.375431060791016
    6. '(d' → logprob: -18.125431060791016
    7. '(dis' → logprob: -18.125431060791016
    8. '(
' → logprob: -18.375431060791016
    9. '(div' → logprob: -18.625431060791016
    10. ' dist' → logprob: -18.625431060791016

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00348781980574131
    2. ')
' → logprob: -5.878487586975098
    3. ' )' → logprob: -7.378487586975098
    4. '[' → logprob: -10.253487586975098
    5. '           ' → logprob: -11.878487586975098
    6. '       ' → logprob: -12.003487586975098
    7. ' )
' → logprob: -12.628487586975098
    8. '   ' → logprob: -13.003487586975098
    9. ')
' → logprob: -13.628487586975098
    10. ')

' → logprob: -14.128487586975098

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22787532210350037
    2. '       ' → logprob: -1.6028753519058228
    3. '<|end|>' → logprob: -6.477875232696533
    4. 'self' → logprob: -7.977875232696533
    5. '   ' → logprob: -8.602875709533691
    6. '               ' → logprob: -9.477875709533691
    7. '        
' → logprob: -9.727875709533691
    8. '        ' → logprob: -9.977875709533691
    9. '<|end|>' → logprob: -10.227875709533691
    10. ' ' → logprob: -10.352875709533691

Token 79: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.681401252746582
    2. 'self' (adapté à ' self') → logprob: -1.181401252746582
    3. ' self' → logprob: -1.681401252746582
    4. '       ' → logprob: -7.431401252746582
    5. '   ' → logprob: -8.556401252746582
    6. ' ' → logprob: -9.056401252746582
    7. '          ' → logprob: -10.431401252746582
    8. '            ' → logprob: -10.556401252746582
    9. '        ' → logprob: -10.556401252746582
    10. '	self' → logprob: -10.681401252746582

Token 80: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.0012965429341420531
    2. '.d' → logprob: -7.376296520233154
    3. '.distance' → logprob: -8.626296997070312
    4. ' .' → logprob: -9.376296997070312
    5. '.' → logprob: -9.376296997070312
    6. '.dp' → logprob: -10.251296997070312
    7. '.parent' → logprob: -10.376296997070312
    8. '.matrix' → logprob: -10.501296997070312
    9. '.cost' → logprob: -10.751296997070312
    10. '.data' → logprob: -10.751296997070312

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1271243393421173
    2. '=' → logprob: -2.127124309539795
    3. ' ' → logprob: -9.877124786376953
    4. '    ' → logprob: -10.002124786376953
    5. '   ' → logprob: -10.627124786376953
    6. '[' → logprob: -11.502124786376953
    7. '<|end|>' → logprob: -11.502124786376953
    8. ')' → logprob: -11.627124786376953
    9. '        ' → logprob: -11.877124786376953
    10. ',' → logprob: -12.002124786376953

Token 82: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3132800757884979
    2. 'dist' → logprob: -1.3132801055908203
    3. '(dist' → logprob: -11.81328010559082
    4. '	dist' → logprob: -11.81328010559082
    5. ' ' → logprob: -13.43828010559082
    6. '    ' → logprob: -13.93828010559082
    7. '_dist' → logprob: -14.81328010559082
    8. '.dist' → logprob: -15.18828010559082
    9. ' ' → logprob: -15.68828010559082
    10. '   ' → logprob: -16.18828010559082

Token 83: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15635955333709717
    2. '<|end|>' → logprob: -2.1563596725463867
    3. '       ' → logprob: -3.7813596725463867
    4. '           ' → logprob: -5.781359672546387
    5. '<|end|>' → logprob: -7.156359672546387
    6. '    
' → logprob: -7.281359672546387
    7. '        
' → logprob: -7.656359672546387
    8. '   ' → logprob: -8.281359672546387
    9. ' 
' → logprob: -8.781359672546387
    10. '
' → logprob: -8.906359672546387

Token 84: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05288577452301979
    2. '<|end|>' → logprob: -3.0528857707977295
    3. '       ' → logprob: -5.802886009216309
    4. '    
' → logprob: -7.927886009216309
    5. '<|end|>' → logprob: -8.552886009216309
    6. '   ' → logprob: -8.677886009216309
    7. '           ' → logprob: -9.052886009216309
    8. '\n' → logprob: -9.427886009216309
    9. ' 
' → logprob: -9.427886009216309
    10. '        
' → logprob: -9.677886009216309

Token 85: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.738860011100769
    2. ' self' → logprob: -0.863860011100769
    3. '           ' → logprob: -2.3638601303100586
    4. '       ' → logprob: -5.863860130310059
    5. '   ' → logprob: -7.113860130310059
    6. ' ' → logprob: -7.363860130310059
    7. '        ' → logprob: -7.488860130310059
    8. 'def' → logprob: -7.613860130310059
    9. 'import' → logprob: -7.738860130310059
    10. '    ' → logprob: -8.613860130310059

Token 86: '.next' (ID: 6689)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.6902585625648499
    2. '.' → logprob: -2.565258502960205
    3. '.tree' → logprob: -2.565258502960205
    4. '.nodes' → logprob: -2.690258502960205
    5. '.n' → logprob: -3.190258502960205
    6. ' .' → logprob: -3.190258502960205
    7. '.parents' → logprob: -3.565258502960205
    8. '.dp' → logprob: -4.565258502960205
    9. '.next' → logprob: -4.690258502960205
    10. '.max' → logprob: -4.815258502960205

Token 87: '_node' (ID: 11390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0106048583984375
    2. '_node' → logprob: -1.1356048583984375
    3. '_' → logprob: -1.8856048583984375
    4. '=' → logprob: -3.0106048583984375
    5. '_nodes' → logprob: -3.5106048583984375
    6. '_token' → logprob: -3.8856048583984375
    7. '_id' → logprob: -4.7606048583984375
    8. '_vertex' → logprob: -5.1356048583984375
    9. '[' → logprob: -5.3856048583984375
    10. '_edge' → logprob: -5.8856048583984375

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015744947595521808
    2. '=' → logprob: -6.626574516296387
    3. ' ' → logprob: -8.501574516296387
    4. 's' → logprob: -10.501574516296387
    5. '[' → logprob: -11.876574516296387
    6. ' =[' → logprob: -12.751574516296387
    7. '_id' → logprob: -13.751574516296387
    8. '_' → logprob: -13.876574516296387
    9. '  ' → logprob: -14.126574516296387
    10. '=[]' → logprob: -14.251574516296387

Token 89: ' self' (ID: 1051)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.3208576440811157
    2. ' [[' → logprob: -1.4458576440811157
    3. '[' → logprob: -1.5708576440811157
    4. '[[' → logprob: -1.8208576440811157
    5. '0' → logprob: -2.320857524871826
    6. ' ' → logprob: -4.695857524871826
    7. '[self' → logprob: -5.195857524871826
    8. '{}' → logprob: -5.445857524871826
    9. '[n' → logprob: -5.945857524871826
    10. 'self' → logprob: -5.945857524871826

Token 90: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.023057015612721443
    2. 'n' → logprob: -4.773056983947754
    3. '<|end|>' → logprob: -4.773056983947754
    4. '.' → logprob: -5.523056983947754
    5. '0' → logprob: -7.398056983947754
    6. '<|end|>' → logprob: -8.148056983947754
    7. ' ' → logprob: -8.273056983947754
    8. ' .' → logprob: -9.148056983947754
    9. '  ' → logprob: -9.898056983947754
    10. '2' → logprob: -10.023056983947754

Token 91: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6002953052520752
    2. '<|end|>' → logprob: -0.8502953052520752
    3. '<|end|>' → logprob: -4.350295066833496
    4. ' ' → logprob: -5.725295066833496
    5. '

' → logprob: -6.475295066833496
    6. '    
' → logprob: -6.475295066833496
    7. ' 
' → logprob: -6.725295066833496
    8. '   ' → logprob: -7.725295066833496
    9. 'def' → logprob: -7.975295066833496
    10. '\n' → logprob: -8.100295066833496

Token 92: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04384086653590202
    2. '<|end|>' → logprob: -3.4188408851623535
    3. '

' → logprob: -5.5438408851623535
    4. '       ' → logprob: -5.7938408851623535
    5. '<|end|>' → logprob: -7.2938408851623535
    6. 'def' → logprob: -7.2938408851623535
    7. '    
' → logprob: -7.6688408851623535
    8. ' ' → logprob: -8.418840408325195
    9. '   ' → logprob: -8.543840408325195
    10. '        
' → logprob: -8.543840408325195

Token 93: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24673841893672943
    2. '           ' → logprob: -1.6217384338378906
    3. '<|end|>' → logprob: -4.246738433837891
    4. '       ' → logprob: -5.371738433837891
    5. 'def' → logprob: -7.746738433837891
    6. '   ' → logprob: -7.996738433837891
    7. '<|end|>' → logprob: -8.12173843383789
    8. 'self' → logprob: -8.12173843383789
    9. '    
' → logprob: -9.49673843383789
    10. ' self' → logprob: -9.49673843383789

Token 94: ' adjacency' (ID: 177015)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2978822588920593
    2. 'self' → logprob: -1.672882318496704
    3. ' def' → logprob: -3.672882318496704
    4. 'def' → logprob: -4.797882080078125
    5. '       ' → logprob: -5.172882080078125
    6. ' ' → logprob: -5.172882080078125
    7. '<|end|>' → logprob: -5.297882080078125
    8. '        ' → logprob: -5.422882080078125
    9. ' pass' → logprob: -5.922882080078125
    10. '           ' → logprob: -6.172882080078125

Token 95: ' list' (ID: 1562)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.10780738294124603
    2. ' =' → logprob: -2.8578073978424072
    3. 'list' → logprob: -3.6078073978424072
    4. '_' → logprob: -4.982807159423828
    5. ' ' → logprob: -5.357807159423828
    6. '=' → logprob: -5.732807159423828
    7. ' list' → logprob: -6.232807159423828
    8. '_lists' → logprob: -8.607807159423828
    9. 'List' → logprob: -8.857807159423828
    10. '   ' → logprob: -8.857807159423828

Token 96: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.801837146282196
    2. ' =' → logprob: -1.3018372058868408
    3. '<|end|>' → logprob: -2.051837205886841
    4. ' self' → logprob: -2.676837205886841
    5. 'self' → logprob: -2.926837205886841
    6. ' ' → logprob: -4.551836967468262
    7. '=' → logprob: -5.176836967468262
    8. '           ' → logprob: -5.801836967468262
    9. '
' → logprob: -5.926836967468262
    10. ',' → logprob: -6.551836967468262

Token 97: ' key' (ID: 2140)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9354173541069031
    2. 'self' → logprob: -1.0604174137115479
    3. ' {}' → logprob: -2.060417413711548
    4. '{}' → logprob: -2.810417413711548
    5. ' []' → logprob: -3.310417413711548
    6. '[]' → logprob: -4.185417175292969
    7. ' defaultdict' → logprob: -4.310417175292969
    8. '{' → logprob: -5.935417175292969
    9. ' {' → logprob: -5.935417175292969
    10. ' ' → logprob: -6.435417175292969

Token 98: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24554836750030518
    2. ' =' → logprob: -1.7455483675003052
    3. '=' → logprob: -3.9955482482910156
    4. ' is' → logprob: -4.870548248291016
    5. ' ->' → logprob: -5.620548248291016
    6. ',' → logprob: -5.620548248291016
    7. '<|end|>' → logprob: -6.620548248291016
    8. ' :' → logprob: -6.870548248291016
    9. ' to' → logprob: -6.995548248291016
    10. ' self' → logprob: -6.995548248291016

Token 99: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.318858802318573
    2. 'node' → logprob: -1.4438588619232178
    3. ' a' → logprob: -4.693858623504639
    4. 'int' → logprob: -4.693858623504639
    5. ' int' → logprob: -4.693858623504639
    6. ' current' → logprob: -5.693858623504639
    7. ' the' → logprob: -6.068858623504639
    8. 'the' → logprob: -6.943858623504639
    9. 'a' → logprob: -7.068858623504639
    10. ' an' → logprob: -7.443858623504639

Token 100: ' index' (ID: 3472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038629011251032352
    2. ' ,' → logprob: -6.5038628578186035
    3. ':' → logprob: -7.0038628578186035
    4. '<|end|>' → logprob: -7.5038628578186035
    5. ' (' → logprob: -8.003863334655762
    6. ' to' → logprob: -9.253863334655762
    7. '       ' → logprob: -9.503863334655762
    8. ')' → logprob: -9.753863334655762
    9. ' node' → logprob: -10.003863334655762
    10. ':int' → logprob: -10.253863334655762

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038410481065511703
    2. ' ,' → logprob: -6.128840923309326
    3. '       ' → logprob: -6.628840923309326
    4. ':' → logprob: -8.628841400146484
    5. ',
' → logprob: -10.253841400146484
    6. '           ' → logprob: -10.628841400146484
    7. ' self' → logprob: -10.753841400146484
    8. 'self' → logprob: -11.003841400146484
    9. ' ' → logprob: -11.253841400146484
    10. ',self' → logprob: -11.753841400146484

Token 102: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.6088863015174866
    2. ' value' → logprob: -1.6088862419128418
    3. '#' → logprob: -1.7338862419128418
    4. ' #' → logprob: -2.858886241912842
    5. '           ' → logprob: -4.608886241912842
    6. ',' → logprob: -5.483886241912842
    7. '       ' → logprob: -5.983886241912842
    8. ' ' → logprob: -6.358886241912842
    9. 'values' → logprob: -7.483886241912842
    10. ' and' → logprob: -7.733886241912842

Token 103: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10580131411552429
    2. ':' → logprob: -2.3558013439178467
    3. 'is' → logprob: -5.855801105499268
    4. ' =' → logprob: -7.105801105499268
    5. 's' → logprob: -7.855801105499268
    6. '=' → logprob: -7.980801105499268
    7. '<|end|>' → logprob: -8.480801582336426
    8. '[' → logprob: -8.980801582336426
    9. ' list' → logprob: -9.105801582336426
    10. ' ' → logprob: -9.105801582336426

Token 104: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6766627430915833
    2. 'list' → logprob: -1.3016626834869385
    3. ' a' → logprob: -1.8016626834869385
    4. '[]' → logprob: -3.1766626834869385
    5. ' []' → logprob: -4.801662921905518
    6. 'a' → logprob: -5.676662921905518
    7. 'set' → logprob: -7.676662921905518
    8. ' set' → logprob: -7.801662921905518
    9. '[' → logprob: -8.55166244506836
    10. ' the' → logprob: -10.17666244506836

Token 105: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.012513183988630772
    2. 'of' → logprob: -5.262513160705566
    3. '[' → logprob: -5.387513160705566
    4. '<|end|>' → logprob: -6.512513160705566
    5. '<|end|>' → logprob: -7.762513160705566
    6. '[]' → logprob: -8.262513160705566
    7. '   ' → logprob: -8.387513160705566
    8. '[int' → logprob: -9.887513160705566
    9. '       ' → logprob: -9.887513160705566
    10. ')' → logprob: -10.012513160705566

Token 106: ' neighbors' (ID: 31655)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connected' → logprob: -1.0421172380447388
    2. '(int' → logprob: -1.1671172380447388
    3. 'neighbors' → logprob: -1.9171172380447388
    4. ' connected' → logprob: -3.042117118835449
    5. 'adj' → logprob: -3.167117118835449
    6. '[int' → logprob: -3.667117118835449
    7. 'int' → logprob: -3.792117118835449
    8. 'neighbor' → logprob: -3.917117118835449
    9. ' tuples' → logprob: -4.417117118835449
    10. '(' → logprob: -5.792117118835449

Token 107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05239764600992203
    2. '           ' → logprob: -3.6773977279663086
    3. ',' → logprob: -4.302397727966309
    4. ' =' → logprob: -5.802397727966309
    5. '   ' → logprob: -6.177397727966309
    6. ')' → logprob: -6.177397727966309
    7. '=' → logprob: -6.802397727966309
    8. '<|end|>' → logprob: -7.052397727966309
    9. ' and' → logprob: -7.677397727966309
    10. ' ' → logprob: -8.177397727966309

Token 108: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02189628779888153
    2. '   ' → logprob: -4.7718963623046875
    3. '<|end|>' → logprob: -5.2718963623046875
    4. ',' → logprob: -5.7718963623046875
    5. '           ' → logprob: -6.5218963623046875
    6. ' ' → logprob: -7.1468963623046875
    7. ' self' → logprob: -7.5218963623046875
    8. 'self' → logprob: -7.5218963623046875
    9. '<|end|>' → logprob: -8.146896362304688
    10. ')' → logprob: -8.146896362304688

Token 109: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6406567692756653
    2. ' self' → logprob: -0.7656567692756653
    3. '       ' → logprob: -5.1406569480896
    4. '           ' → logprob: -6.5156569480896
    5. ' ' → logprob: -7.7656569480896
    6. '   ' → logprob: -9.140656471252441
    7. '	self' → logprob: -10.515656471252441
    8. ' defaultdict' → logprob: -10.640656471252441
    9. '{' → logprob: -11.015656471252441
    10. '        ' → logprob: -11.140656471252441

Token 110: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.08734459429979324
    2. '.' → logprob: -3.7123446464538574
    3. 'adj' → logprob: -3.9623446464538574
    4. '.tree' → logprob: -4.837344646453857
    5. '.graph' → logprob: -4.962344646453857
    6. '.edges' → logprob: -5.212344646453857
    7. '.children' → logprob: -5.212344646453857
    8. '.nodes' → logprob: -5.212344646453857
    9. '_adj' → logprob: -5.962344646453857
    10. ' .' → logprob: -6.212344646453857

Token 111: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.018314877524971962
    2. 'jac' → logprob: -4.018314838409424
    3. 'd' → logprob: -8.768315315246582
    4. 'acency' → logprob: -11.893315315246582
    5. 'dj' → logprob: -14.018315315246582
    6. '_j' → logprob: -14.643315315246582
    7. 'js' → logprob: -14.893315315246582
    8. '[j' → logprob: -15.143315315246582
    9. 'ja' → logprob: -15.893315315246582
    10. '	j' → logprob: -16.393314361572266

Token 112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011481840163469315
    2. ' =' → logprob: -4.511481761932373
    3. 'acency' → logprob: -8.761482238769531
    4. '[' → logprob: -9.011482238769531
    5. '.setdefault' → logprob: -9.636482238769531
    6. '=[]' → logprob: -10.636482238769531
    7. ':' → logprob: -11.136482238769531
    8. '_list' → logprob: -11.386482238769531
    9. ',' → logprob: -11.886482238769531
    10. ')' → logprob: -12.136482238769531

Token 113: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0011149736819788814
    2. '{' → logprob: -7.376114845275879
    3. ' {}' → logprob: -8.251114845275879
    4. 'default' → logprob: -8.626114845275879
    5. '[' → logprob: -10.251114845275879
    6. '[]' → logprob: -12.501114845275879
    7. 'dict' → logprob: -12.626114845275879
    8. ' defaultdict' → logprob: -12.876114845275879
    9. '{})' → logprob: -13.501114845275879
    10. '{}

' → logprob: -14.876114845275879

Token 114: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014443430118262768
    2. '}' → logprob: -4.264443397521973
    3. ' i' → logprob: -9.014443397521973
    4. '   ' → logprob: -9.639443397521973
    5. 'k' → logprob: -10.014443397521973
    6. ' }' → logprob: -11.139443397521973
    7. '       ' → logprob: -12.514443397521973
    8. '(i' → logprob: -12.639443397521973
    9. '}

' → logprob: -12.889443397521973
    10. '}
' → logprob: -12.889443397521973

Token 115: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.166338137816638e-05
    2. ':list' → logprob: -11.250031471252441
    3. ' :' → logprob: -11.625031471252441
    4. ':[' → logprob: -12.375031471252441
    5. ':i' → logprob: -13.500031471252441
    6. '[:]' → logprob: -14.000031471252441
    7. ':{}' → logprob: -14.375031471252441
    8. 'for' → logprob: -14.625031471252441
    9. ':set' → logprob: -15.500031471252441
    10. ':self' → logprob: -15.500031471252441

Token 116: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01221434772014618
    2. ' []' → logprob: -4.512214183807373
    3. '[]}' → logprob: -6.762214183807373
    4. '[]
' → logprob: -11.762214660644531
    5. '[]

' → logprob: -14.887214660644531
    6. '[],' → logprob: -14.887214660644531
    7. '[])' → logprob: -15.512214660644531
    8. ' ' → logprob: -15.512214660644531
    9. '   ' → logprob: -16.63721466064453
    10. '[' → logprob: -16.76221466064453

Token 117: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5476373434066772
    2. 'for' → logprob: -0.9226373434066772
    3. ',' → logprob: -4.172637462615967
    4. '       ' → logprob: -5.047637462615967
    5. '}' → logprob: -6.922637462615967
    6. '   ' → logprob: -7.422637462615967
    7. '           ' → logprob: -8.672636985778809
    8. '	for' → logprob: -9.172636985778809
    9. '        ' → logprob: -9.297636985778809
    10. ')' → logprob: -9.297636985778809

Token 118: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.529022753238678
    2. 'range' → logprob: -1.0290226936340332
    3. ' range' → logprob: -3.029022693634033
    4. ' i' → logprob: -5.279022693634033
    5. 'in' → logprob: -13.904023170471191
    6. '(range' → logprob: -14.279023170471191
    7. ' in' → logprob: -14.654023170471191
    8. '	range' → logprob: -15.154023170471191
    9. '_range' → logprob: -15.529023170471191
    10. ' ' → logprob: -15.904023170471191

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03872132673859596
    2. 'in' → logprob: -3.2887213230133057
    3. 'range' → logprob: -7.538721561431885
    4. ' range' → logprob: -9.288721084594727
    5. 'i' → logprob: -10.163721084594727
    6. ' i' → logprob: -12.038721084594727
    7. ')' → logprob: -12.663721084594727
    8. ' ' → logprob: -12.913721084594727
    9. '(range' → logprob: -13.413721084594727
    10. 'ange' → logprob: -13.663721084594727

Token 120: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889121770858765
    2. ' range' → logprob: -2.5788912773132324
    3. '(range' → logprob: -14.578890800476074
    4. '	range' → logprob: -14.953890800476074
    5. ' ' → logprob: -15.203890800476074
    6. '   ' → logprob: -15.328890800476074
    7. '  ' → logprob: -17.57889175415039
    8. '    ' → logprob: -17.57889175415039
    9. '

' → logprob: -18.07889175415039
    10. '```' → logprob: -18.20389175415039

Token 121: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.898723561083898e-05
    2. '(' → logprob: -9.500079154968262
    3. 'self' → logprob: -13.125079154968262
    4. ' (' → logprob: -13.500079154968262
    5. '(
' → logprob: -15.500079154968262
    6. '(n' → logprob: -15.625079154968262
    7. '(len' → logprob: -15.750079154968262
    8. '(s' → logprob: -16.750078201293945
    9. ' self' → logprob: -17.250078201293945
    10. '   ' → logprob: -17.750078201293945

Token 122: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -8.482821431243792e-05
    2. '.next' → logprob: -9.62508487701416
    3. '.user' → logprob: -11.75008487701416
    4. '.' → logprob: -12.00008487701416
    5. ' .' → logprob: -12.87508487701416
    6. ')}' → logprob: -14.00008487701416
    7. 'n' → logprob: -14.25008487701416
    8. ')' → logprob: -15.12508487701416
    9. '.self' → logprob: -17.250083923339844
    10. ')}}' → logprob: -17.375083923339844

Token 123: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.003376980312168598
    2. ')' → logprob: -5.8783769607543945
    3. ' )' → logprob: -7.8783769607543945
    4. '+' → logprob: -9.253376960754395
    5. '       ' → logprob: -10.128376960754395
    6. ')}
' → logprob: -10.878376960754395
    7. ')}

' → logprob: -11.503376960754395
    8. '   ' → logprob: -11.753376960754395
    9. '}' → logprob: -12.003376960754395
    10. ' +' → logprob: -13.003376960754395

Token 124: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.543269157409668
    2. '<|end|>' → logprob: -1.543269157409668
    3. '       ' → logprob: -1.668269157409668
    4. 'def' → logprob: -5.043269157409668
    5. '<|end|>' → logprob: -5.668269157409668
    6. '        
' → logprob: -5.918269157409668
    7. '   ' → logprob: -6.168269157409668
    8. '    
' → logprob: -7.293269157409668
    9. ' def' → logprob: -8.168269157409668
    10. '

' → logprob: -8.168269157409668

Token 125: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9355901479721069
    2. '       ' → logprob: -1.435590147972107
    3. '
' → logprob: -1.560590147972107
    4. 'def' → logprob: -1.935590147972107
    5. '        
' → logprob: -4.9355902671813965
    6. '    
' → logprob: -4.9355902671813965
    7. ' def' → logprob: -7.6855902671813965
    8. '<|end|>' → logprob: -9.060589790344238
    9. '	def' → logprob: -9.435589790344238
    10. '            
' → logprob: -9.935589790344238

Token 126: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.024004004895687103
    2. '   ' → logprob: -4.399003982543945
    3. '       ' → logprob: -4.524003982543945
    4. ' def' → logprob: -7.524003982543945
    5. ' ' → logprob: -11.024003982543945
    6. '        
' → logprob: -11.524003982543945
    7. '  ' → logprob: -12.274003982543945
    8. '    ' → logprob: -12.774003982543945
    9. '    
' → logprob: -12.774003982543945
    10. '
' → logprob: -12.774003982543945

Token 127: ' is' (ID: 382)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.2538153827190399
    2. ' build' → logprob: -1.5038154125213623
    3. 'dfs' → logprob: -7.628815174102783
    4. 'add' → logprob: -8.253815650939941
    5. 'find' → logprob: -8.378815650939941
    6. ' find' → logprob: -8.628815650939941
    7. '_build' → logprob: -8.753815650939941
    8. ' dfs' → logprob: -9.003815650939941
    9. ' reconstruct' → logprob: -9.128815650939941
    10. 'construct' → logprob: -9.378815650939941

Token 128: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -0.6509501338005066
    2. '_' → logprob: -1.7759501934051514
    3. '_connected' → logprob: -1.7759501934051514
    4. '_complete' → logprob: -2.9009501934051514
    5. '_valid' → logprob: -3.9009501934051514
    6. '_tree' → logprob: -4.275949954986572
    7. '_b' → logprob: -4.525949954986572
    8. '_possible' → logprob: -5.275949954986572
    9. '_cl' → logprob: -5.775949954986572
    10. '_in' → logprob: -5.775949954986572

Token 129: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0031822288874536753
    2. '(' → logprob: -5.753182411193848
    3. ' (' → logprob: -12.628182411193848
    4. 'self' → logprob: -14.253182411193848
    5. '(s' → logprob: -14.878182411193848
    6. '   ' → logprob: -16.62818145751953
    7. '(node' → logprob: -16.75318145751953
    8. '_(' → logprob: -17.00318145751953
    9. '_node' → logprob: -17.62818145751953
    10. ' self' → logprob: -17.62818145751953

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02136816829442978
    2. '):' → logprob: -4.396368026733398
    3. 'self' → logprob: -5.021368026733398
    4. ' ,' → logprob: -6.521368026733398
    5. ',node' → logprob: -8.146368026733398
    6. ')' → logprob: -8.896368026733398
    7. '):
' → logprob: -9.396368026733398
    8. '(self' → logprob: -9.646368026733398
    9. ',self' → logprob: -10.021368026733398
    10. ',line' → logprob: -11.021368026733398

Token 131: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.0184998512268066
    2. ' u' → logprob: -1.2684998512268066
    3. 'u' → logprob: -1.6434998512268066
    4. 'node' → logprob: -2.5184998512268066
    5. 'self' → logprob: -3.0184998512268066
    6. ' self' → logprob: -3.5184998512268066
    7. 'v' → logprob: -6.768499851226807
    8. '   ' → logprob: -7.143499851226807
    9. ' v' → logprob: -7.268499851226807
    10. ')' → logprob: -7.268499851226807

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00047190272016450763
    2. '):
' → logprob: -7.875472068786621
    3. 'self' → logprob: -10.250472068786621
    4. ',' → logprob: -10.750472068786621
    5. ' ):' → logprob: -11.125472068786621
    6. ')' → logprob: -11.375472068786621
    7. ':' → logprob: -12.250472068786621
    8. '(self' → logprob: -13.125472068786621
    9. '   ' → logprob: -14.625472068786621
    10. '       ' → logprob: -15.000472068786621

Token 133: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6383032202720642
    2. '       ' → logprob: -1.763303279876709
    3. '           ' → logprob: -2.138303279876709
    4. '(self' → logprob: -2.138303279876709
    5. ':' → logprob: -3.763303279876709
    6. ' return' → logprob: -4.138303279876709
    7. 'return' → logprob: -4.138303279876709
    8. ' (' → logprob: -6.263303279876709
    9. '(True' → logprob: -6.513303279876709
    10. 'self' → logprob: -7.138303279876709

Token 134: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07221443206071854
    2. 'return' (adapté à ' return') → logprob: -2.697214365005493
    3. '           ' → logprob: -6.197214603424072
    4. '       ' → logprob: -8.822214126586914
    5. '   ' → logprob: -9.572214126586914
    6. '               ' → logprob: -12.072214126586914
    7. ' ' → logprob: -12.572214126586914
    8. '    ' → logprob: -12.697214126586914
    9. '	return' → logprob: -12.822214126586914
    10. '
' → logprob: -12.947214126586914

Token 135: ' node' (ID: 4596)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6806777119636536
    2. ' self' → logprob: -1.0556776523590088
    3. 'len' → logprob: -2.430677652359009
    4. 'self' → logprob: -3.055677652359009
    5. ' node' → logprob: -4.680677890777588
    6. 'node' → logprob: -6.930677890777588
    7. ' ' → logprob: -9.18067741394043
    8. ' True' → logprob: -9.18067741394043
    9. '(len' → logprob: -9.55567741394043
    10. ' not' → logprob: -10.05567741394043

Token 136: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3136090040206909
    2. ' <' → logprob: -1.313609004020691
    3. '<len' → logprob: -9.31360912322998
    4. ')' → logprob: -9.68860912322998
    5. '<size' → logprob: -9.93860912322998
    6. '<int' → logprob: -10.18860912322998
    7. '<|end|>' → logprob: -10.68860912322998
    8. '[' → logprob: -10.68860912322998
    9. ' ' → logprob: -11.18860912322998
    10. '<n' → logprob: -11.31360912322998

Token 137: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07891468703746796
    2. ' self' → logprob: -2.5789146423339844
    3. '0' → logprob: -11.453914642333984
    4. '           ' → logprob: -12.203914642333984
    5. '       ' → logprob: -12.828914642333984
    6. ' ' → logprob: -13.078914642333984
    7. '   ' → logprob: -13.703914642333984
    8. '(self' → logprob: -13.953914642333984
    9. '<|end|>' → logprob: -13.953914642333984
    10. '	self' → logprob: -15.328914642333984

Token 138: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00012678056373260915
    2. 'n' → logprob: -9.000126838684082
    3. '.' → logprob: -13.250126838684082
    4. '.next' → logprob: -13.750126838684082
    5. '.user' → logprob: -16.375125885009766
    6. '<|end|>' → logprob: -16.500125885009766
    7. 'next' → logprob: -17.000125885009766
    8. ' .' → logprob: -17.500125885009766
    9. '_n' → logprob: -17.500125885009766
    10. 'user' → logprob: -17.500125885009766

Token 139: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39735954999923706
    2. '<|end|>' → logprob: -1.2723596096038818
    3. '

' → logprob: -3.272359609603882
    4. '<|end|>' → logprob: -5.772359371185303
    5. '       ' → logprob: -6.147359371185303
    6. '
        
' → logprob: -6.647359371185303
    7. '\n' → logprob: -6.897359371185303
    8. '        
' → logprob: -6.897359371185303
    9. '    
' → logprob: -7.772359371185303
    10. '
' → logprob: -8.772359848022461

Token 140: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6638647317886353
    2. '<|end|>' → logprob: -0.7888647317886353
    3. '       ' → logprob: -4.663864612579346
    4. '    
' → logprob: -4.913864612579346
    5. '        
' → logprob: -5.163864612579346
    6. '<|end|>' → logprob: -5.538864612579346
    7. '  
' → logprob: -6.413864612579346
    8. ' 
' → logprob: -7.038864612579346
    9. '   ' → logprob: -7.663864612579346
    10. '

' → logprob: -8.038865089416504

Token 141: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.27992039918899536
    2. '
' → logprob: -1.9049203395843506
    3. '        
' → logprob: -3.6549203395843506
    4. '       ' → logprob: -3.7799203395843506
    5. '    
' → logprob: -3.7799203395843506
    6. ' def' → logprob: -4.52992057800293
    7. '   ' → logprob: -4.90492057800293
    8. '<|end|>' → logprob: -5.90492057800293
    9. '  
' → logprob: -6.90492057800293
    10. '            
' → logprob: -7.77992057800293

Token 142: ' add' (ID: 1147)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.4303405284881592
    2. 'build' → logprob: -1.4303405284881592
    3. ' dfs' → logprob: -3.055340528488159
    4. 'dfs' → logprob: -3.680340528488159
    5. ' find' → logprob: -4.680340766906738
    6. ' add' → logprob: -4.680340766906738
    7. ' bfs' → logprob: -5.180340766906738
    8. ' get' → logprob: -5.680340766906738
    9. ' reconstruct' → logprob: -5.680340766906738
    10. 'add' → logprob: -6.305340766906738

Token 143: '_edge' (ID: 43226)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.26035982370376587
    2. '_edge' → logprob: -1.510359764099121
    3. '_' → logprob: -5.010359764099121
    4. '_child' → logprob: -7.260359764099121
    5. '_connection' → logprob: -8.010359764099121
    6. '_neighbor' → logprob: -9.010359764099121
    7. '_branch' → logprob: -9.010359764099121
    8. '_leaf' → logprob: -9.510359764099121
    9. '_parent' → logprob: -9.635359764099121
    10. '_vertex' → logprob: -10.510359764099121

Token 144: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4745047688484192
    2. '(self' → logprob: -0.9745047688484192
    3. ' (' → logprob: -7.8495049476623535
    4. '(
' → logprob: -11.349504470825195
    5. 'self' → logprob: -11.849504470825195
    6. '(s' → logprob: -12.349504470825195
    7. '<|end|>' → logprob: -12.599504470825195
    8. ')' → logprob: -13.474504470825195
    9. '((' → logprob: -13.599504470825195
    10. ' ' → logprob: -13.724504470825195

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006153696682304144
    2. ' ,' → logprob: -6.006153583526611
    3. ',node' → logprob: -6.256153583526611
    4. '<|end|>' → logprob: -6.756153583526611
    5. ')' → logprob: -8.13115406036377
    6. 'self' → logprob: -9.38115406036377
    7. '(node' → logprob: -10.13115406036377
    8. '<|end|>' → logprob: -10.38115406036377
    9. '(' → logprob: -10.50615406036377
    10. ',user' → logprob: -10.88115406036377

Token 146: ' u' (ID: 337)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.09406840056180954
    2. 'node' → logprob: -2.5940682888031006
    3. ' u' → logprob: -4.84406852722168
    4. ')' → logprob: -5.34406852722168
    5. ' self' → logprob: -6.71906852722168
    6. 'self' → logprob: -7.84406852722168
    7. 'u' → logprob: -7.84406852722168
    8. ' )' → logprob: -8.46906852722168
    9. '(node' → logprob: -9.21906852722168
    10. ',node' → logprob: -10.71906852722168

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8802491215174086e-05
    2. ' ,' → logprob: -11.000028610229492
    3. ',u' → logprob: -11.375028610229492
    4. ',v' → logprob: -14.625028610229492
    5. ',
' → logprob: -17.000028610229492
    6. ',node' → logprob: -17.500028610229492
    7. ',user' → logprob: -17.875028610229492
    8. ')' → logprob: -18.125028610229492
    9. '‌,' → logprob: -18.875028610229492
    10. ',n' → logprob: -19.000028610229492

Token 148: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6931498050689697
    2. ' v' → logprob: -0.6931498050689697
    3. '	v' → logprob: -14.19314956665039
    4. 'u' → logprob: -14.31814956665039
    5. ')' → logprob: -14.94314956665039
    6. ' u' → logprob: -14.94314956665039
    7. ' ' → logprob: -15.44314956665039
    8. ')v' → logprob: -15.81814956665039
    9. '    ' → logprob: -15.94314956665039
    10. '   ' → logprob: -15.94314956665039

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008364453911781311
    2. '):
' → logprob: -5.383364677429199
    3. ',' → logprob: -5.758364677429199
    4. ')' → logprob: -7.758364677429199
    5. ' ):' → logprob: -9.0083646774292
    6. '):
' → logprob: -11.0083646774292
    7. '   ' → logprob: -11.7583646774292
    8. '):

' → logprob: -13.6333646774292
    9. ':' → logprob: -13.7583646774292
    10. '),' → logprob: -13.8833646774292

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3773864209651947
    2. '       ' → logprob: -1.252386450767517
    3. '               ' → logprob: -4.377386569976807
    4. ' self' → logprob: -4.752386569976807
    5. 'self' → logprob: -6.002386569976807
    6. ',' → logprob: -6.502386569976807
    7. '<|end|>' → logprob: -7.377386569976807
    8. '   ' → logprob: -7.502386569976807
    9. '
' → logprob: -7.752386569976807
    10. ')' → logprob: -8.002386093139648

Token 151: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6224120855331421
    2. ' self' → logprob: -0.8724120855331421
    3. '           ' → logprob: -3.1224122047424316
    4. '       ' → logprob: -6.747412204742432
    5. '   ' → logprob: -9.122411727905273
    6. '               ' → logprob: -9.997411727905273
    7. '	self' → logprob: -11.872411727905273
    8. ' ' → logprob: -12.122411727905273
    9. '```' → logprob: -12.497411727905273
    10. '
' → logprob: -12.622411727905273

Token 152: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -3.452426608419046e-05
    2. '.' → logprob: -10.37503433227539
    3. '.add' → logprob: -13.50003433227539
    4. 'adj' → logprob: -14.25003433227539
    5. ' .' → logprob: -14.87503433227539
    6. '.edges' → logprob: -15.37503433227539
    7. '.Ad' → logprob: -15.87503433227539
    8. '.append' → logprob: -16.25003433227539
    9. ').' → logprob: -16.75003433227539
    10. '_adj' → logprob: -16.87503433227539

Token 153: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0011197380954399705
    2. 'd' → logprob: -6.876119613647461
    3. '[' → logprob: -10.751119613647461
    4. '_edge' → logprob: -11.001119613647461
    5. '[j' → logprob: -11.251119613647461
    6. '   ' → logprob: -11.251119613647461
    7. '.append' → logprob: -12.376119613647461
    8. '       ' → logprob: -12.876119613647461
    9. 'jac' → logprob: -13.001119613647461
    10. '_edges' → logprob: -13.251119613647461

Token 154: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0009264685213565826
    2. '[' → logprob: -7.000926494598389
    3. '[v' → logprob: -12.12592601776123
    4. '[self' → logprob: -12.87592601776123
    5. ' [' → logprob: -13.25092601776123
    6. '   ' → logprob: -13.50092601776123
    7. '.setdefault' → logprob: -13.62592601776123
    8. '       ' → logprob: -14.37592601776123
    9. '```' → logprob: -14.50092601776123
    10. '\[' → logprob: -15.12592601776123

Token 155: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -4.8828707804204896e-05
    2. ']' → logprob: -10.000048637390137
    3. '.append' → logprob: -13.500048637390137
    4. ' ].' → logprob: -13.500048637390137
    5. ').' → logprob: -15.125048637390137
    6. '   ' → logprob: -16.250049591064453
    7. '][' → logprob: -17.250049591064453
    8. 'append' → logprob: -17.500049591064453
    9. '       ' → logprob: -17.625049591064453
    10. '.' → logprob: -17.750049591064453

Token 156: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -15.25
    3. ' append' → logprob: -16.75
    4. 'appen' → logprob: -19.875
    5. 'app' → logprob: -20.5
    6. '	append' → logprob: -21.125
    7. 'add' → logprob: -22.0
    8. 'Append' → logprob: -22.25
    9. 'push' → logprob: -23.0
    10. '_append' → logprob: -23.0

Token 157: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00012356207298580557
    2. '(' → logprob: -9.000123977661133
    3. 'v' → logprob: -16.250123977661133
    4. '((' → logprob: -18.125123977661133
    5. ' (' → logprob: -18.375123977661133
    6. '(
' → logprob: -18.500123977661133
    7. '(V' → logprob: -21.750123977661133
    8. '(

' → logprob: -21.875123977661133
    9. '	v' → logprob: -22.375123977661133
    10. '()' → logprob: -22.625123977661133

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012415809032972902
    2. ')
' → logprob: -9.000123977661133
    3. ' )' → logprob: -14.500123977661133
    4. '           ' → logprob: -16.000123977661133
    5. '       ' → logprob: -16.875123977661133
    6. ')

' → logprob: -17.125123977661133
    7. ')
' → logprob: -17.125123977661133
    8. '),' → logprob: -17.250123977661133
    9. '   ' → logprob: -17.625123977661133
    10. ')#' → logprob: -18.750123977661133

Token 159: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003905399702489376
    2. '       ' → logprob: -6.503905296325684
    3. '
' → logprob: -6.753905296325684
    4. '<|end|>' → logprob: -7.128905296325684
    5. ')' → logprob: -8.753905296325684
    6. 'self' → logprob: -9.878905296325684
    7. '\n' → logprob: -10.003905296325684
    8. '   ' → logprob: -10.378905296325684
    9. '               ' → logprob: -10.378905296325684
    10. '    
' → logprob: -10.503905296325684

Token 160: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3145173490047455
    2. ' self' → logprob: -1.3145173788070679
    3. '           ' → logprob: -6.689517498016357
    4. '   ' → logprob: -12.3145170211792
    5. '       ' → logprob: -12.9395170211792
    6. ' ' → logprob: -14.3145170211792
    7. '	self' → logprob: -14.3145170211792
    8. '            ' → logprob: -14.4395170211792
    9. ' ' → logprob: -14.5645170211792
    10. '               ' → logprob: -14.9395170211792

Token 161: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.00011510594777064398
    2. 'adj' → logprob: -10.125115394592285
    3. '.' → logprob: -10.500115394592285
    4. ' .' → logprob: -10.625115394592285
    5. '].' → logprob: -11.875115394592285
    6. ').' → logprob: -12.000115394592285
    7. ' adj' → logprob: -13.250115394592285
    8. '_adj' → logprob: -13.625115394592285
    9. '`.' → logprob: -13.625115394592285
    10. '[' → logprob: -13.875115394592285

Token 162: 'j' (ID: 73)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07349508255720139
    2. 'p' → logprob: -2.6984951496124268
    3. 'j' → logprob: -5.948494911193848
    4. 'dp' → logprob: -8.198494911193848
    5. 'pend' → logprob: -8.448494911193848
    6. 'dj' → logprob: -8.948494911193848
    7. 'f' → logprob: -10.073494911193848
    8. '[d' → logprob: -10.198494911193848
    9. '           ' → logprob: -10.573494911193848
    10. '[u' → logprob: -10.573494911193848

Token 163: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0019348275382071733
    2. '[u' → logprob: -6.251935005187988
    3. '[' → logprob: -12.126935005187988
    4. 'v' → logprob: -14.376935005187988
    5. '   ' → logprob: -17.376934051513672
    6. '][' → logprob: -17.501934051513672
    7. ' [' → logprob: -17.501934051513672
    8. '```' → logprob: -17.501934051513672
    9. '}[' → logprob: -18.501934051513672
    10. '	v' → logprob: -18.751934051513672

Token 164: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.6457374691963196
    2. ').' → logprob: -0.7707374691963196
    3. ')' → logprob: -4.520737648010254
    4. ']' → logprob: -6.895737648010254
    5. '])' → logprob: -7.645737648010254
    6. '.append' → logprob: -8.145737648010254
    7. ' ].' → logprob: -9.145737648010254
    8. ' ).' → logprob: -9.645737648010254
    9. '[u' → logprob: -9.645737648010254
    10. '   ' → logprob: -10.020737648010254

Token 165: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.125
    3. '.append' → logprob: -17.875
    4. 'add' → logprob: -18.5
    5. 'adj' → logprob: -18.875
    6. 'appen' → logprob: -19.5
    7. '	append' → logprob: -19.75
    8. '_append' → logprob: -20.125
    9. 'app' → logprob: -20.375
    10. 'Append' → logprob: -22.375

Token 166: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -3.666993507067673e-05
    2. '(' → logprob: -10.375036239624023
    3. 'u' → logprob: -12.125036239624023
    4. ')' → logprob: -17.750036239624023
    5. ' (' → logprob: -18.500036239624023
    6. '[u' → logprob: -18.500036239624023
    7. '(
' → logprob: -18.750036239624023
    8. ' u' → logprob: -19.500036239624023
    9. ',u' → logprob: -19.875036239624023
    10. ')(' → logprob: -20.250036239624023

Token 167: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ')
' → logprob: -12.625004768371582
    3. '       ' → logprob: -14.500004768371582
    4. ' )' → logprob: -15.250004768371582
    5. '<|end|>' → logprob: -15.625004768371582
    6. '   ' → logprob: -16.750003814697266
    7. ')

' → logprob: -18.000003814697266
    8. '),' → logprob: -18.125003814697266
    9. ')}' → logprob: -18.625003814697266
    10. '}' → logprob: -19.000003814697266

Token 168: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026009278371930122
    2. '       ' → logprob: -4.7760090827941895
    3. '        
' → logprob: -4.7760090827941895
    4. '<|end|>' → logprob: -5.5260090827941895
    5. '    
' → logprob: -6.1510090827941895
    6. 'def' → logprob: -6.6510090827941895
    7. '<|end|>' → logprob: -7.1510090827941895
    8. '   ' → logprob: -8.651009559631348
    9. '

' → logprob: -9.151009559631348
    10. '```' → logprob: -9.276009559631348

Token 169: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7497613430023193
    2. 'def' (adapté à ' def') → logprob: -0.8747613430023193
    3. '       ' → logprob: -2.2497613430023193
    4. '        
' → logprob: -5.749761581420898
    5. '   ' → logprob: -6.874761581420898
    6. '
' → logprob: -7.624761581420898
    7. '    
' → logprob: -8.624761581420898
    8. ' 
' → logprob: -9.749761581420898
    9. '    ' → logprob: -9.874761581420898
    10. ' ' → logprob: -10.374761581420898

Token 170: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.32995638251304626
    2. 'build' → logprob: -1.3299564123153687
    3. ' find' → logprob: -5.079956531524658
    4. ' reconstruct' → logprob: -5.954956531524658
    5. 'find' → logprob: -6.329956531524658
    6. ' solve' → logprob: -6.454956531524658
    7. 'dfs' → logprob: -6.829956531524658
    8. ' dfs' → logprob: -7.079956531524658
    9. 'solve' → logprob: -7.329956531524658
    10. ' construct' → logprob: -7.829956531524658

Token 171: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09573131799697876
    2. '_tree' → logprob: -2.845731258392334
    3. '(' → logprob: -3.595731258392334
    4. '_' → logprob: -6.220731258392334
    5. '_node' → logprob: -6.720731258392334
    6. '()' → logprob: -7.220731258392334
    7. '_self' → logprob: -7.970731258392334
    8. '_root' → logprob: -8.220731735229492
    9. '_(' → logprob: -8.220731735229492
    10. '():' → logprob: -8.845731735229492

Token 172: '):
' (ID: 1883)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.11919490993022919
    2. ')' → logprob: -3.244194984436035
    3. '_root' → logprob: -4.244194984436035
    4. '(node' → logprob: -4.369194984436035
    5. '_tree' → logprob: -4.744194984436035
    6. '_' → logprob: -4.744194984436035
    7. '_nodes' → logprob: -5.119194984436035
    8. '(' → logprob: -5.244194984436035
    9. ')_' → logprob: -5.744194984436035
    10. ',' → logprob: -6.244194984436035

Token 173: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1226922795176506
    2. ':' → logprob: -2.372692346572876
    3. '():' → logprob: -4.997692108154297
    4. ':
' → logprob: -5.372692108154297
    5. '(' → logprob: -6.372692108154297
    6. '():
' → logprob: -6.497692108154297
    7. '<|end|>' → logprob: -6.747692108154297
    8. '
' → logprob: -6.872692108154297
    9. '<|end|>' → logprob: -7.122692108154297
    10. '#' → logprob: -7.122692108154297

Token 174: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8201344013214111
    2. 'from' → logprob: -1.5701344013214111
    3. 'def' → logprob: -1.6951344013214111
    4. 'import' → logprob: -3.445134401321411
    5. '#' (adapté à ' #') → logprob: -3.570134401321411
    6. 'dist' → logprob: -3.570134401321411
    7. 'n' → logprob: -4.195134162902832
    8. '       ' → logprob: -4.820134162902832
    9. 'groups' → logprob: -5.195134162902832
    10. 'while' → logprob: -5.320134162902832

Token 175: ' We'll' (ID: 46830)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9015496373176575
    2. 'def' → logprob: -1.5265495777130127
    3. 'from' → logprob: -1.7765495777130127
    4. ' if' → logprob: -2.4015495777130127
    5. 'import' → logprob: -3.2765495777130127
    6. ' def' → logprob: -3.6515495777130127
    7. 'n' → logprob: -4.276549816131592
    8. ' n' → logprob: -4.776549816131592
    9. ' import' → logprob: -4.776549816131592
    10. ' from' → logprob: -5.026549816131592

Token 176: ' build' (ID: 3024)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.952465832233429
    2. '   ' → logprob: -1.9524657726287842
    3. 'continue' → logprob: -2.452465772628784
    4. ' def' → logprob: -2.952465772628784
    5. ' continue' → logprob: -3.202465772628784
    6. '       ' → logprob: -3.577465772628784
    7. ' define' → logprob: -3.702465772628784
    8. 'import' → logprob: -3.702465772628784
    9. 'define' → logprob: -3.827465772628784
    10. 'pass' → logprob: -4.077466011047363

Token 177: ' the' (ID: 290)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3576381504535675
    2. 'def' → logprob: -2.357638120651245
    3. 'the' → logprob: -2.857638120651245
    4. ' the' → logprob: -3.482638120651245
    5. '(self' → logprob: -3.482638120651245
    6. ' a' → logprob: -3.982638120651245
    7. 'from' → logprob: -4.107638359069824
    8. 'self' → logprob: -4.107638359069824
    9. ' def' → logprob: -4.857638359069824
    10. 'tree' → logprob: -4.857638359069824

Token 178: ' tree' (ID: 8165)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5962042808532715
    2. 'tree' → logprob: -1.7212042808532715
    3. ' tree' → logprob: -2.9712042808532715
    4. 'root' → logprob: -3.2212042808532715
    5. 'if' → logprob: -3.4712042808532715
    6. 'full' → logprob: -3.7212042808532715
    7. ' def' → logprob: -4.2212042808532715
    8. 'self' → logprob: -4.2212042808532715
    9. 'stack' → logprob: -4.3462042808532715
    10. '   ' → logprob: -4.8462042808532715

Token 179: ' by' (ID: 656)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.6683287620544434
    2. '(' → logprob: -2.0433287620544434
    3. '()' → logprob: -2.0433287620544434
    4. 'def' → logprob: -2.4183287620544434
    5. 'from' → logprob: -2.4183287620544434
    6. ')' → logprob: -2.6683287620544434
    7. ' from' → logprob: -2.6683287620544434
    8. ' by' → logprob: -2.7933287620544434
    9. ' recursively' → logprob: -3.0433287620544434
    10. '   ' → logprob: -3.2933287620544434

Token 180: ' repeatedly' (ID: 45605)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.30991584062576294
    2. ' self' → logprob: -2.309915781021118
    3. 'def' → logprob: -2.684915781021118
    4. ' merging' → logprob: -2.809915781021118
    5. ' splitting' → logprob: -4.809916019439697
    6. 'rec' → logprob: -4.934916019439697
    7. ' recursively' → logprob: -5.059916019439697
    8. ' dividing' → logprob: -5.934916019439697
    9. ' def' → logprob: -5.934916019439697
    10. ' combining' → logprob: -6.559916019439697

Token 181: ' grouping' (ID: 97243)
  Prédit: ' merging'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' merging' → logprob: -0.6468432545661926
    2. ' splitting' → logprob: -1.5218431949615479
    3. 'spl' → logprob: -2.521843194961548
    4. 'mer' → logprob: -3.021843194961548
    5. ' dividing' → logprob: -3.271843194961548
    6. ' combining' → logprob: -4.146843433380127
    7. 'div' → logprob: -4.271843433380127
    8. 'partition' → logprob: -4.896843433380127
    9. 'def' → logprob: -4.896843433380127
    10. 'pop' → logprob: -4.896843433380127

Token 182: ' leaves' (ID: 15657)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.40896227955818176
    2. ' nodes' → logprob: -1.2839622497558594
    3. 'clusters' → logprob: -3.9089622497558594
    4. 'the' → logprob: -4.283962249755859
    5. 'self' → logprob: -5.158962249755859
    6. ' the' → logprob: -5.283962249755859
    7. ' clusters' → logprob: -5.783962249755859
    8. 'groups' → logprob: -6.408962249755859
    9. 'all' → logprob: -6.908962249755859
    10. ' self' → logprob: -7.283962249755859

Token 183: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.32509592175483704
    2. ' or' → logprob: -2.7000958919525146
    3. ' based' → logprob: -2.9500958919525146
    4. 'and' → logprob: -3.0750958919525146
    5. ' with' → logprob: -3.3250958919525146
    6. ',' → logprob: -3.9500958919525146
    7. ' by' → logprob: -4.075096130371094
    8. 'def' → logprob: -4.825096130371094
    9. ' that' → logprob: -5.075096130371094
    10. ' until' → logprob: -5.700096130371094

Token 184: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.44138532876968384
    2. '           ' → logprob: -1.941385269165039
    3. ' into' → logprob: -2.566385269165039
    4. ' by' → logprob: -3.066385269165039
    5. 'and' → logprob: -3.691385269165039
    6. ' based' → logprob: -4.066385269165039
    7. ',' → logprob: -4.566385269165039
    8. ' to' → logprob: -5.316385269165039
    9. ' with' → logprob: -5.316385269165039
    10. ' that' → logprob: -5.441385269165039

Token 185: ' #' (ID: 1069)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.8931110501289368
    2. '           ' → logprob: -2.143110990524292
    3. ' if' → logprob: -2.268110990524292
    4. '    ' → logprob: -2.393110990524292
    5. '        ' → logprob: -2.393110990524292
    6. 'pass' → logprob: -2.893110990524292
    7. '       ' → logprob: -3.768110990524292
    8. ' ' → logprob: -3.893110990524292
    9. ' return' → logprob: -4.268111228942871
    10. '            ' → logprob: -4.393111228942871

Token 186: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.580847978591919
    2. ' if' → logprob: -1.580847978591919
    3. ' while' → logprob: -2.205847978591919
    4. 'def' → logprob: -2.830847978591919
    5. 'import' → logprob: -2.830847978591919
    6. '    ' → logprob: -3.080847978591919
    7. 'return' → logprob: -3.205847978591919
    8. '       ' → logprob: -3.705847978591919
    9. ' ' → logprob: -3.830847978591919
    10. '   ' → logprob: -3.955847978591919

Token 187: ' introducing' (ID: 49659)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7163976430892944
    2. ' merging' → logprob: -1.2163976430892944
    3. 'def' → logprob: -2.216397762298584
    4. ' returning' → logprob: -3.716397762298584
    5. ' def' → logprob: -4.591397762298584
    6. 'self' → logprob: -4.841397762298584
    7. ' combining' → logprob: -5.091397762298584
    8. ' return' → logprob: -5.216397762298584
    9. '       ' → logprob: -5.716397762298584
    10. ' connecting' → logprob: -5.716397762298584

Token 188: ' internal' (ID: 8812)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.12550361454486847
    2. 'new' → logprob: -2.3755035400390625
    3. ' internal' → logprob: -4.0005035400390625
    4. 'internal' → logprob: -5.3755035400390625
    5. ' intermediate' → logprob: -6.3755035400390625
    6. 'inter' → logprob: -8.750503540039062
    7. ' nodes' → logprob: -10.250503540039062
    8. 'virtual' → logprob: -10.750503540039062
    9. ' a' → logprob: -10.875503540039062
    10. ' artificial' → logprob: -11.000503540039062

Token 189: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.08500197529792786
    2. 'nodes' → logprob: -3.0850019454956055
    3. '_nodes' → logprob: -3.3350019454956055
    4. '_node' → logprob: -9.710001945495605
    5. 'node' → logprob: -10.585001945495605
    6. ' node' → logprob: -10.960001945495605
    7. '	nodes' → logprob: -11.085001945495605
    8. '   ' → logprob: -11.960001945495605
    9. ' ' → logprob: -12.085001945495605
    10. '_n' → logprob: -12.960001945495605

Token 190: ' ("' (ID: 7109)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: 'switch' (ID: 41694)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.09268452972173691
    2. ' ")' → logprob: -3.092684507369995
    3. '").' → logprob: -4.967684745788574
    4. '"' → logprob: -4.967684745788574
    5. ' to' → logprob: -5.592684745788574
    6. ' for' → logprob: -5.717684745788574
    7. '")
' → logprob: -5.842684745788574
    8. 'def' → logprob: -6.092684745788574
    9. ' until' → logprob: -6.467684745788574
    10. 'internal' → logprob: -6.592684745788574

Token 192: 'es' (ID: 268)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.5072008371353149
    2. '_nodes' → logprob: -1.382200837135315
    3. '")' → logprob: -3.3822007179260254
    4. 'es' → logprob: -3.6322007179260254
    5. '"' → logprob: -4.007200717926025
    6. '_node' → logprob: -4.382200717926025
    7. ' ")' → logprob: -4.507200717926025
    8. 'ing' → logprob: -5.007200717926025
    9. ' edges' → logprob: -5.007200717926025
    10. '_' → logprob: -5.132200717926025

Token 193: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04004434868693352
    2. ' ")' → logprob: -4.04004430770874
    3. ')' → logprob: -4.66504430770874
    4. '")
' → logprob: -5.91504430770874
    5. ')")' → logprob: -5.91504430770874
    6. '"' → logprob: -6.04004430770874
    7. '").' → logprob: -6.29004430770874
    8. '   ' → logprob: -7.66504430770874
    9. ' to' → logprob: -8.165044784545898
    10. ',' → logprob: -8.290044784545898

Token 194: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16583766043186188
    2. '<|end|>' → logprob: -3.2908377647399902
    3. '        
' → logprob: -3.5408377647399902
    4. ',' → logprob: -3.9158377647399902
    5. '
' → logprob: -4.16583776473999
    6. '           ' → logprob: -4.41583776473999
    7. '<|end|>' → logprob: -4.66583776473999
    8. '   ' → logprob: -4.91583776473999
    9. ':' → logprob: -5.04083776473999
    10. '.' → logprob: -6.04083776473999

Token 195: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.5974292755126953
    2. '<|end|>' → logprob: -1.5974292755126953
    3. '
' → logprob: -1.9724292755126953
    4. '       ' → logprob: -2.5974292755126953
    5. '    ' → logprob: -2.7224292755126953
    6. '        ' → logprob: -2.8474292755126953
    7. ' pass' → logprob: -2.9724292755126953
    8. ' if' → logprob: -3.0974292755126953
    9. ' ' → logprob: -3.2224292755126953
    10. '<|end|>' → logprob: -3.4724292755126953

Token 196: ' The' (ID: 623)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2304898500442505
    2. ' n' → logprob: -2.730489730834961
    3. ' def' → logprob: -3.355489730834961
    4. 'if' → logprob: -3.605489730834961
    5. '       ' → logprob: -3.605489730834961
    6. 'def' → logprob: -4.230489730834961
    7. '   ' → logprob: -4.730489730834961
    8. 'n' → logprob: -5.230489730834961
    9. '           ' → logprob: -5.355489730834961
    10. ' #' → logprob: -6.105489730834961

Token 197: ' algorithm' (ID: 22184)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26256072521209717
    2. 'visited' → logprob: -2.2625608444213867
    3. 'dist' → logprob: -3.2625608444213867
    4. '#' → logprob: -3.6375608444213867
    5. 'from' → logprob: -4.137560844421387
    6. ' def' → logprob: -4.887560844421387
    7. '   ' → logprob: -5.387560844421387
    8. 'queue' → logprob: -5.512560844421387
    9. 'used' → logprob: -5.512560844421387
    10. 'nodes' → logprob: -5.887560844421387

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8493072390556335
    2. ' =' → logprob: -1.8493072986602783
    3. ' continues' → logprob: -1.9743072986602783
    4. ' is' → logprob: -2.0993072986602783
    5. '<|end|>' → logprob: -3.2243072986602783
    6. ' ' → logprob: -3.4743072986602783
    7. '<|end|>' → logprob: -3.9743072986602783
    8. ' will' → logprob: -4.474307060241699
    9. '           ' → logprob: -5.099307060241699
    10. '       ' → logprob: -5.349307060241699

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2732238471508026
    2. '    ' → logprob: -2.773223876953125
    3. '            ' → logprob: -2.898223876953125
    4. '       ' → logprob: -3.023223876953125
    5. '        ' → logprob: -3.398223876953125
    6. ' ' → logprob: -4.648223876953125
    7. '<|end|>' → logprob: -5.148223876953125
    8. ' 
' → logprob: -5.523223876953125
    9. ' pass' → logprob: -5.648223876953125
    10. '   ' → logprob: -6.023223876953125

Token 200: ' #' (ID: 1069)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.22220109403133392
    2. ' n' → logprob: -3.472201108932495
    3. ' #' → logprob: -3.597201108932495
    4. ' if' → logprob: -3.597201108932495
    5. ' stack' → logprob: -3.847201108932495
    6. 'pass' → logprob: -4.097200870513916
    7. '       ' → logprob: -4.347200870513916
    8. '           ' → logprob: -4.597200870513916
    9. ' tokens' → logprob: -5.097200870513916
    10. '   ' → logprob: -5.222200870513916

Token 201: ' While' (ID: 8406)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.1455860286951065
    2. '           ' → logprob: -2.7705860137939453
    3. 'pass' → logprob: -3.7705860137939453
    4. ' #' → logprob: -4.395586013793945
    5. '#' → logprob: -4.770586013793945
    6. ' for' → logprob: -4.895586013793945
    7. ' n' → logprob: -5.145586013793945
    8. ' if' → logprob: -6.145586013793945
    9. '       ' → logprob: -6.395586013793945
    10. ' def' → logprob: -6.520586013793945

Token 202: ' more' (ID: 945)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9330142736434937
    2. ' any' → logprob: -1.1830142736434937
    3. 'len' → logprob: -2.183014392852783
    4. ' self' → logprob: -2.433014392852783
    5. 'self' → logprob: -3.058014392852783
    6. ' True' → logprob: -3.558014392852783
    7. 'any' → logprob: -3.933014392852783
    8. 'True' → logprob: -6.058014392852783
    9. ' not' → logprob: -6.308014392852783
    10. ' there' → logprob: -8.183013916015625

Token 203: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.027295729145407677
    2. 'than' → logprob: -4.7772955894470215
    3. '_nodes' → logprob: -4.7772955894470215
    4. ' nodes' → logprob: -5.0272955894470215
    5. '_than' → logprob: -6.2772955894470215
    6. '>' → logprob: -6.9022955894470215
    7. ' >' → logprob: -8.15229606628418
    8. 'nodes' → logprob: -8.90229606628418
    9. 'len' → logprob: -10.77729606628418
    10. ' ' → logprob: -10.90229606628418

Token 204: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2977834939956665
    2. ' ' → logprob: -1.5477834939956665
    3. '2' → logprob: -3.422783374786377
    4. 'self' → logprob: -5.422783374786377
    5. ' one' → logprob: -5.422783374786377
    6. ' self' → logprob: -6.047783374786377
    7. ' two' → logprob: -8.047783851623535
    8. 'one' → logprob: -8.422783851623535
    9. '   ' → logprob: -9.172783851623535
    10. ' than' → logprob: -9.297783851623535

Token 205: ' cluster' (ID: 19723)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.12719950079917908
    2. ' cluster' → logprob: -2.252199411392212
    3. ' component' → logprob: -5.627199649810791
    4. 'node' → logprob: -5.627199649810791
    5. ' group' → logprob: -6.502199649810791
    6. 'cluster' → logprob: -6.877199649810791
    7. ' set' → logprob: -7.377199649810791
    8. ' leaf' → logprob: -7.502199649810791
    9. '_node' → logprob: -7.627199649810791
    10. ' connected' → logprob: -7.877199649810791

Token 206: ' remains' (ID: 14777)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3935348391532898
    2. ' >' → logprob: -1.8935348987579346
    3. '>' → logprob: -2.0185348987579346
    4. 's' → logprob: -3.7685348987579346
    5. ' exists' → logprob: -4.8935346603393555
    6. ',' → logprob: -5.7685346603393555
    7. ' remains' → logprob: -6.0185346603393555
    8. 'exists' → logprob: -6.6435346603393555
    9. '.' → logprob: -7.2685346603393555
    10. '_' → logprob: -7.5185346603393555

Token 207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030074547976255417
    2. ':
' → logprob: -3.9050745964050293
    3. '():' → logprob: -5.280074596405029
    4. ',' → logprob: -5.780074596405029
    5. '():
' → logprob: -7.530074596405029
    6. '           ' → logprob: -9.155074119567871
    7. '<|end|>' → logprob: -9.155074119567871
    8. ' :' → logprob: -9.405074119567871
    9. '):' → logprob: -9.405074119567871
    10. '<|end|>' → logprob: -9.655074119567871

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6949955821037292
    2. ' ' → logprob: -1.944995641708374
    3. '            ' → logprob: -1.944995641708374
    4. '               ' → logprob: -2.319995641708374
    5. '<|end|>' → logprob: -2.819995641708374
    6. ' 
' → logprob: -4.444995403289795
    7. '    ' → logprob: -4.694995403289795
    8. '       ' → logprob: -5.444995403289795
    9. '                ' → logprob: -5.569995403289795
    10. '   ' → logprob: -5.569995403289795

Token 209: ' #' (ID: 1069)
  Prédit: '            '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            ' → logprob: -1.0416909456253052
    2. '           ' → logprob: -1.2916909456253052
    3. ' ' → logprob: -1.5416909456253052
    4. '<|end|>' → logprob: -3.5416908264160156
    5. '               ' → logprob: -3.9166908264160156
    6. ' pass' → logprob: -3.9166908264160156
    7. '    ' → logprob: -3.9166908264160156
    8. ' 
' → logprob: -4.041690826416016
    9. '   ' → logprob: -5.291690826416016
    10. '            
' → logprob: -5.416690826416016

Token 210: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.695149302482605
    2. '            ' → logprob: -0.945149302482605
    3. '<|end|>' → logprob: -3.6951494216918945
    4. '    ' → logprob: -3.9451494216918945
    5. ' 
' → logprob: -4.1951494216918945
    6. '           ' → logprob: -4.3201494216918945
    7. ' pass' → logprob: -4.4451494216918945
    8. ' continue' → logprob: -5.5701494216918945
    9. '             
' → logprob: -5.5701494216918945
    10. '<|end|>' → logprob: -6.1951494216918945

Token 211: ' -' (ID: 533)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.4354381263256073
    2. ' clusters' → logprob: -1.8104381561279297
    3. 'clusters' → logprob: -2.5604381561279297
    4. 'pass' → logprob: -2.6854381561279297
    5. '           ' → logprob: -4.06043815612793
    6. '#' → logprob: -4.43543815612793
    7. ' #' → logprob: -4.81043815612793
    8. '   ' → logprob: -6.06043815612793
    9. 'cluster' → logprob: -7.43543815612793
    10. '       ' → logprob: -7.81043815612793

Token 212: ' Find' (ID: 9764)
  Prédit: ' clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -0.7283588647842407
    2. ' pass' → logprob: -1.1033588647842407
    3. 'clusters' → logprob: -1.9783588647842407
    4. 'pass' → logprob: -3.728358745574951
    5. ' #' → logprob: -4.478358745574951
    6. '#' → logprob: -4.853358745574951
    7. 'cluster' → logprob: -7.728358745574951
    8. ' continue' → logprob: -7.853358745574951
    9. ' cluster' → logprob: -8.35335922241211
    10. '           ' → logprob: -8.35335922241211

Token 213: ' leaves' (ID: 15657)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0172539949417114
    2. ' clusters' → logprob: -1.6422539949417114
    3. ' two' → logprob: -2.267253875732422
    4. ' a' → logprob: -2.267253875732422
    5. 'the' → logprob: -2.392253875732422
    6. 'clusters' → logprob: -2.642253875732422
    7. 'a' → logprob: -4.142253875732422
    8. ' cluster' → logprob: -4.267253875732422
    9. 'two' → logprob: -4.767253875732422
    10. 'cluster' → logprob: -4.767253875732422

Token 214: ' i' (ID: 575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.139066219329834
    2. ' =' → logprob: -1.264066219329834
    3. '()' → logprob: -2.389066219329834
    4. '<|end|>' → logprob: -2.639066219329834
    5. ' with' → logprob: -3.014066219329834
    6. ' and' → logprob: -3.514066219329834
    7. ':' → logprob: -3.889066219329834
    8. ')' → logprob: -4.264066219329834
    9. ' that' → logprob: -4.514066219329834
    10. '   ' → logprob: -4.639066219329834

Token 215: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2557021677494049
    2. ' and' → logprob: -2.255702257156372
    3. ' ,' → logprob: -3.505702257156372
    4. ' ' → logprob: -3.630702257156372
    5. 's' → logprob: -4.505702018737793
    6. ')' → logprob: -4.505702018737793
    7. '<|end|>' → logprob: -4.880702018737793
    8. 'and' → logprob: -5.255702018737793
    9. ']' → logprob: -5.505702018737793
    10. '   ' → logprob: -6.005702018737793

Token 216: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.7561596035957336
    2. ',' → logprob: -1.1311595439910889
    3. ' that' → logprob: -2.756159543991089
    4. '           ' → logprob: -3.506159543991089
    5. ' ' → logprob: -4.006159782409668
    6. ' such' → logprob: -4.131159782409668
    7. '<|end|>' → logprob: -4.256159782409668
    8. 'with' → logprob: -4.381159782409668
    9. ' for' → logprob: -4.631159782409668
    10. ' and' → logprob: -4.756159782409668

Token 217: ' minimal' (ID: 19957)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -1.2145556211471558
    2. ' minimal' → logprob: -1.5895556211471558
    3. ' the' → logprob: -2.0895557403564453
    4. 'dist' → logprob: -2.3395557403564453
    5. ' equal' → logprob: -2.4645557403564453
    6. ' self' → logprob: -2.8395557403564453
    7. 'self' → logprob: -3.5895557403564453
    8. ' distance' → logprob: -4.089555740356445
    9. ' zero' → logprob: -4.089555740356445
    10. ' minimum' → logprob: -4.214555740356445

Token 218: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.4124830365180969
    2. '_dist' → logprob: -1.9124829769134521
    3. ' dist' → logprob: -3.037482976913452
    4. '_distance' → logprob: -3.037482976913452
    5. 'dist' → logprob: -3.162482976913452
    6. 'distance' → logprob: -3.787482976913452
    7. ' ' → logprob: -4.912483215332031
    8. ' _' → logprob: -5.037483215332031
    9. '_' → logprob: -5.037483215332031
    10. ' difference' → logprob: -6.287483215332031

Token 219: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3986245393753052
    2. '            ' → logprob: -1.8986245393753052
    3. ',' → logprob: -2.0236244201660156
    4. ' ' → logprob: -2.1486244201660156
    5. ' between' → logprob: -2.3986244201660156
    6. '
' → logprob: -3.1486244201660156
    7. ' =' → logprob: -3.3986244201660156
    8. ':' → logprob: -3.6486244201660156
    9. '    ' → logprob: -3.7736244201660156
    10. '               ' → logprob: -4.273624420166016

Token 220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2629755735397339
    2. '<|end|>' → logprob: -2.8879756927490234
    3. '            ' → logprob: -3.5129756927490234
    4. '<|end|>' → logprob: -3.8879756927490234
    5. ' ' → logprob: -4.137975692749023
    6. '               ' → logprob: -4.262975692749023
    7. '        ' → logprob: -4.387975692749023
    8. ',' → logprob: -4.387975692749023
    9. '       ' → logprob: -4.512975692749023
    10. '            
' → logprob: -4.637975692749023

Token 221: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8750264644622803
    2. '            ' → logprob: -1.6250264644622803
    3. '           ' → logprob: -2.7500264644622803
    4. ')' → logprob: -2.8750264644622803
    5. '                ' → logprob: -3.5000264644622803
    6. ' 
' → logprob: -3.6250264644622803
    7. '        ' → logprob: -3.7500264644622803
    8. '    ' → logprob: -3.8750264644622803
    9. '               ' → logprob: -3.8750264644622803
    10. '<|end|>' → logprob: -3.8750264644622803

Token 223: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8351705074310303
    2. '           ' → logprob: -1.8351705074310303
    3. ' for' → logprob: -1.8351705074310303
    4. ')' → logprob: -3.5851705074310303
    5. 'return' → logprob: -3.7101705074310303
    6. '#' → logprob: -3.8351705074310303
    7. 'while' → logprob: -3.8351705074310303
    8. 'if' → logprob: -4.085170745849609
    9. '               ' → logprob: -4.210170745849609
    10. ' while' → logprob: -4.335170745849609

Token 224: ' Create' (ID: 6585)
  Prédit: ' cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cluster' → logprob: -0.7920985221862793
    2. ' merge' → logprob: -1.1670985221862793
    3. ' clusters' → logprob: -2.2920985221862793
    4. 'cluster' → logprob: -3.7920985221862793
    5. 'merge' → logprob: -4.042098522186279
    6. ' #' → logprob: -4.042098522186279
    7. ' for' → logprob: -4.792098522186279
    8. ' self' → logprob: -4.917098522186279
    9. ' Merge' → logprob: -4.917098522186279
    10. ' merged' → logprob: -5.292098522186279

Token 225: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4278357923030853
    2. ' new' → logprob: -1.5528358221054077
    3. ' an' → logprob: -2.052835702896118
    4. ' internal' → logprob: -5.552835941314697
    5. ' ' → logprob: -6.552835941314697
    6. 'a' → logprob: -6.802835941314697
    7. ' node' → logprob: -7.802835941314697
    8. ' switch' → logprob: -8.052835464477539
    9. 'an' → logprob: -8.302835464477539
    10. 'new' → logprob: -8.427835464477539

Token 226: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.002691105706617236
    2. 'new' → logprob: -6.252691268920898
    3. ' ' → logprob: -7.752691268920898
    4. 'n' → logprob: -8.627691268920898
    5. '_new' → logprob: -10.502691268920898
    6. '   ' → logprob: -10.627691268920898
    7. ' switch' → logprob: -10.627691268920898
    8. ' space' → logprob: -10.877691268920898
    9. ' n' → logprob: -11.252691268920898
    10. '	new' → logprob: -11.377691268920898

Token 227: ' internal' (ID: 8812)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.3555459678173065
    2. ' internal' → logprob: -1.355545997619629
    3. 'node' → logprob: -4.480545997619629
    4. 'internal' → logprob: -4.605545997619629
    5. ' cluster' → logprob: -4.730545997619629
    6. '_internal' → logprob: -5.480545997619629
    7. '_node' → logprob: -5.605545997619629
    8. ' switch' → logprob: -6.355545997619629
    9. ' ' → logprob: -7.230545997619629
    10. ' _' → logprob: -8.105545997619629

Token 228: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.059785742312669754
    2. '_node' → logprob: -3.309785842895508
    3. ' ' → logprob: -4.559785842895508
    4. ' _' → logprob: -4.809785842895508
    5. 'node' → logprob: -6.184785842895508
    6. '_' → logprob: -7.184785842895508
    7. '   ' → logprob: -11.059785842895508
    8. ' Node' → logprob: -11.184785842895508
    9. ' switch' → logprob: -11.434785842895508
    10. '```' → logprob: -11.684785842895508

Token 229: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3022065162658691
    2. ',' → logprob: -1.5522065162658691
    3. ' (' → logprob: -1.8022065162658691
    4. ' and' → logprob: -1.8022065162658691
    5. ' with' → logprob: -2.677206516265869
    6. 'and' → logprob: -4.427206516265869
    7. '    
' → logprob: -4.552206516265869
    8. ' 
' → logprob: -4.927206516265869
    9. ' ' → logprob: -5.052206516265869
    10. ' u' → logprob: -5.052206516265869

Token 230: ' connect' (ID: 4837)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.3123219609260559
    2. 'for' → logprob: -2.437321901321411
    3. ' connect' → logprob: -2.562321901321411
    4. ' for' → logprob: -3.187321901321411
    5. 'merge' → logprob: -4.31232213973999
    6. ' link' → logprob: -4.56232213973999
    7. 'link' → logprob: -4.81232213973999
    8. 'def' → logprob: -4.93732213973999
    9. 'add' → logprob: -5.06232213973999
    10. '           ' → logprob: -5.93732213973999

Token 231: ' to' (ID: 316)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7630930542945862
    2. 'i' → logprob: -0.8880930542945862
    3. ' them' → logprob: -2.7630929946899414
    4. '(i' → logprob: -2.8880929946899414
    5. 'them' → logprob: -6.138092994689941
    6. '(' → logprob: -6.763092994689941
    7. '	i' → logprob: -9.638092994689941
    8. '   ' → logprob: -10.138092994689941
    9. '[i' → logprob: -10.763092994689941
    10. ' ' → logprob: -10.763092994689941

Token 232: ' the' (ID: 290)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2557488977909088
    2. 'i' → logprob: -1.5057488679885864
    3. ' both' → logprob: -6.130748748779297
    4. 'both' → logprob: -6.505748748779297
    5. ' them' → logprob: -9.630748748779297
    6. 'the' → logprob: -11.505748748779297
    7. ' ' → logprob: -11.505748748779297
    8. ' the' → logprob: -11.630748748779297
    9. 'them' → logprob: -11.755748748779297
    10. '	i' → logprob: -12.005748748779297

Token 233: ' clusters' (ID: 51310)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16671590507030487
    2. ' two' → logprob: -2.4167158603668213
    3. ' i' → logprob: -3.5417158603668213
    4. 'two' → logprob: -3.5417158603668213
    5. ' leaves' → logprob: -6.6667160987854
    6. 'closest' → logprob: -6.7917160987854
    7. ' nodes' → logprob: -7.2917160987854
    8. 'le' → logprob: -7.4167160987854
    9. 'nodes' → logprob: -7.6667160987854
    10. ' closest' → logprob: -8.041715621948242

Token 234: ' that' (ID: 484)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.7564312219619751
    2. '           ' → logprob: -1.256431221961975
    3. ' that' → logprob: -2.1314311027526855
    4. 'with' → logprob: -3.7564311027526855
    5. '       ' → logprob: -4.1314311027526855
    6. '            ' → logprob: -4.3814311027526855
    7. ' ' → logprob: -4.7564311027526855
    8. '<|end|>' → logprob: -4.7564311027526855
    9. ' (' → logprob: -5.5064311027526855
    10. ' of' → logprob: -5.5064311027526855

Token 235: ' i' (ID: 575)
  Prédit: ' contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.5128459930419922
    2. 'contain' → logprob: -2.012845993041992
    3. ' have' → logprob: -2.387845993041992
    4. ' represent' → logprob: -2.762845993041992
    5. ' are' → logprob: -3.262845993041992
    6. 'are' → logprob: -4.512845993041992
    7. 'have' → logprob: -4.512845993041992
    8. ' include' → logprob: -4.762845993041992
    9. ' ' → logprob: -5.137845993041992
    10. ' form' → logprob: -5.637845993041992

Token 236: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7291290760040283
    2. 'and' → logprob: -1.1041290760040283
    3. ',' → logprob: -1.9791290760040283
    4. ' belong' → logprob: -3.9791290760040283
    5. ' are' → logprob: -4.854128837585449
    6. 'are' → logprob: -5.229128837585449
    7. ' ,' → logprob: -5.729128837585449
    8. ' ' → logprob: -5.729128837585449
    9. 'belongs' → logprob: -5.729128837585449
    10. ' belongs' → logprob: -6.229128837585449

Token 237: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.251949280500412
    2. 'j' → logprob: -1.5019493103027344
    3. ' ' → logprob: -11.001949310302734
    4. ' ' → logprob: -13.251949310302734
    5. '	j' → logprob: -13.876949310302734
    6. '  ' → logprob: -15.626949310302734
    7. '   ' → logprob: -16.001949310302734
    8. '$j' → logprob: -16.001949310302734
    9. 'and' → logprob: -16.626949310302734
    10. '_j' → logprob: -16.751949310302734

Token 238: ' belong' (ID: 20753)
  Prédit: ' belong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' belong' → logprob: -0.09910035133361816
    2. 'bel' → logprob: -3.099100351333618
    3. ' are' → logprob: -3.599100351333618
    4. 'are' → logprob: -3.974100351333618
    5. ' represent' → logprob: -7.099100112915039
    6. '   ' → logprob: -7.974100112915039
    7. ' ' → logprob: -8.099100112915039
    8. '       ' → logprob: -8.349100112915039
    9. ' have' → logprob: -8.599100112915039
    10. '```' → logprob: -8.599100112915039

Token 239: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.22377051413059235
    2. ' to' → logprob: -1.9737704992294312
    3. '_to' → logprob: -3.2237706184387207
    4. '           ' → logprob: -3.8487706184387207
    5. '               ' → logprob: -8.598770141601562
    6. '   ' → logprob: -9.848770141601562
    7. ')' → logprob: -9.973770141601562
    8. '       ' → logprob: -10.098770141601562
    9. ',' → logprob: -10.348770141601562
    10. '_' → logprob: -10.598770141601562

Token 240: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9786858558654785
    2. '<|end|>' → logprob: -1.3536858558654785
    3. '           ' → logprob: -1.9786858558654785
    4. '<|end|>' → logprob: -2.8536858558654785
    5. '        ' → logprob: -3.2286858558654785
    6. '            ' → logprob: -3.4786858558654785
    7. '       ' → logprob: -3.7286858558654785
    8. '    ' → logprob: -4.2286858558654785
    9. ' 
' → logprob: -4.4786858558654785
    10. '
' → logprob: -4.4786858558654785

Token 244: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6361881494522095
    2. '           ' → logprob: -2.38618803024292
    3. 'pass' → logprob: -2.63618803024292
    4. '#' → logprob: -2.76118803024292
    5. '       ' → logprob: -2.88618803024292
    6. 'return' → logprob: -3.13618803024292
    7. '   ' → logprob: -3.51118803024292
    8. ' def' → logprob: -3.76118803024292
    9. ' pass' → logprob: -4.01118803024292
    10. 'clusters' → logprob: -4.26118803024292

Token 245: ' Merge' (ID: 71009)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.38928329944610596
    2. 'return' → logprob: -2.3892831802368164
    3. ' merge' → logprob: -3.2642831802368164
    4. ' def' → logprob: -3.3892831802368164
    5. ' pass' → logprob: -3.6392831802368164
    6. ' #' → logprob: -3.6392831802368164
    7. '#' → logprob: -3.7642831802368164
    8. '           ' → logprob: -4.014283180236816
    9. 'def' → logprob: -4.764283180236816
    10. ' remove' → logprob: -4.889283180236816

Token 246: ' clusters' (ID: 51310)
  Prédit: ' clusters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -0.6883144378662109
    2. ' the' → logprob: -1.313314437866211
    3. '_clusters' → logprob: -2.313314437866211
    4. 'clusters' → logprob: -2.438314437866211
    5. ' them' → logprob: -3.813314437866211
    6. 'the' → logprob: -4.438314437866211
    7. ' those' → logprob: -5.563314437866211
    8. ' i' → logprob: -7.063314437866211
    9. 'them' → logprob: -7.313314437866211
    10. ' these' → logprob: -7.438314437866211

Token 247: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.805606484413147
    2. '<|end|>' → logprob: -1.680606484413147
    3. '       ' → logprob: -2.1806063652038574
    4. '
' → logprob: -2.5556063652038574
    5. '<|end|>' → logprob: -2.8056063652038574
    6. ',' → logprob: -3.8056063652038574
    7. 'def' → logprob: -3.9306063652038574
    8. '()' → logprob: -4.055606365203857
    9. '   ' → logprob: -4.805606365203857
    10. ' and' → logprob: -5.305606365203857

Token 248: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' But' (ID: 3072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10419562458992004
    2. '
' → logprob: -2.7291955947875977
    3. '            
' → logprob: -4.354195594787598
    4. '       ' → logprob: -4.729195594787598
    5. ' 
' → logprob: -5.854195594787598
    6. '        
' → logprob: -6.229195594787598
    7. '    
' → logprob: -6.229195594787598
    8. '<|end|>' → logprob: -6.729195594787598
    9. '            ' → logprob: -7.479195594787598
    10. '    ' → logprob: -7.729195594787598

Token 251: ' this' (ID: 495)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.5442123413085938
    2. ' the' → logprob: -1.5442123413085938
    3. '       ' → logprob: -1.9192123413085938
    4. '        ' → logprob: -2.4192123413085938
    5. ' we' → logprob: -2.7942123413085938
    6. '   ' → logprob: -3.0442123413085938
    7. '           ' → logprob: -3.1692123413085938
    8. ' ' → logprob: -3.6692123413085938
    9. ' here' → logprob: -4.419212341308594
    10. ' there' → logprob: -4.544212341308594

Token 252: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.05547081306576729
    2. ' requires' → logprob: -4.430470943450928
    3. ' continues' → logprob: -5.055470943450928
    4. ' will' → logprob: -5.180470943450928
    5. ':' → logprob: -5.555470943450928
    6. ' def' → logprob: -5.680470943450928
    7. ' code' → logprob: -5.930470943450928
    8. 'def' → logprob: -5.930470943450928
    9. ' seems' → logprob: -6.180470943450928
    10. ' needs' → logprob: -6.555470943450928

Token 253: ' complicated' (ID: 25334)
  Prédit: ' incomplete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' incomplete' → logprob: -0.10720700770616531
    2. ' not' → logprob: -3.1072070598602295
    3. ' unfinished' → logprob: -3.9822070598602295
    4. 'not' → logprob: -4.48220682144165
    5. ' a' → logprob: -4.98220682144165
    6. ' just' → logprob: -5.10720682144165
    7. 'unfinished' → logprob: -5.60720682144165
    8. ' tricky' → logprob: -5.85720682144165
    9. ' very' → logprob: -6.60720682144165
    10. ' quite' → logprob: -6.60720682144165

Token 254: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ' done' (ID: 4167)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8296051621437073
    2. ' we' → logprob: -1.7046051025390625
    3. ' self' → logprob: -1.7046051025390625
    4. ' the' → logprob: -2.4546051025390625
    5. ' True' → logprob: -3.7046051025390625
    6. ' len' → logprob: -4.0796051025390625
    7. 'self' → logprob: -4.3296051025390625
    8. ' all' → logprob: -4.5796051025390625
    9. ' you' → logprob: -4.8296051025390625
    10. ' clusters' → logprob: -5.3296051025390625

Token 256: ' na' (ID: 898)
  Prédit: ' na'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' na' → logprob: -0.4276258051395416
    2. ' increment' → logprob: -2.427625894546509
    3. ' line' → logprob: -2.802625894546509
    4. ' naï' → logprob: -2.802625894546509
    5. ' in' → logprob: -3.802625894546509
    6. ' inefficient' → logprob: -4.05262565612793
    7. 'increment' → logprob: -4.17762565612793
    8. ' recursively' → logprob: -4.17762565612793
    9. 'na' → logprob: -4.30262565612793
    10. ' manually' → logprob: -4.92762565612793

Token 257: 'ively' (ID: 5861)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.35673797130584717
    2. 'ively' → logprob: -1.4817379713058472
    3. 'ive' → logprob: -3.2317380905151367
    4. 'ï' → logprob: -3.6067380905151367
    5. '#' → logprob: -5.731738090515137
    6. 'med' → logprob: -6.481738090515137
    7. 'tur' → logprob: -7.981738090515137
    8. 'vel' → logprob: -8.731738090515137
    9. 've' → logprob: -8.981738090515137
    10. 'x' → logprob: -9.356738090515137

Token 258: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8288811445236206
    2. '<|end|>' → logprob: -0.9538811445236206
    3. '<|end|>' → logprob: -1.8288811445236206
    4. '           ' → logprob: -4.45388126373291
    5. '            
' → logprob: -6.70388126373291
    6. '       ' → logprob: -6.82888126373291
    7. ',' → logprob: -6.95388126373291
    8. '        
' → logprob: -7.45388126373291
    9. '    
' → logprob: -7.45388126373291
    10. '  
' → logprob: -8.57888126373291

Token 259: '           ' (ID: 352)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.16283577680587769
    2. '           ' → logprob: -1.9128358364105225
    3. ' and' → logprob: -7.037835597991943
    4. '            ' → logprob: -7.912835597991943
    5. 'so' → logprob: -8.287836074829102
    6. '       ' → logprob: -8.412836074829102
    7. ' but' → logprob: -8.537836074829102
    8. '<|end|>' → logprob: -9.037836074829102
    9. ' continue' → logprob: -9.287836074829102
    10. 'and' → logprob: -9.537836074829102

Token 260: ' #' (ID: 1069)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.12920670211315155
    2. '           ' → logprob: -2.754206657409668
    3. '       ' → logprob: -3.379206657409668
    4. '#' (adapté à ' #') → logprob: -5.629206657409668
    5. ' and' → logprob: -5.629206657409668
    6. '   ' → logprob: -6.254206657409668
    7. '               ' → logprob: -6.504206657409668
    8. '        ' → logprob: -6.629206657409668
    9. '            ' → logprob: -6.629206657409668
    10. ':' → logprob: -6.754206657409668

Token 261: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06522280722856522
    2. '#' → logprob: -3.81522274017334
    3. ' so' → logprob: -3.94022274017334
    4. '       ' → logprob: -4.81522274017334
    5. '            ' → logprob: -6.44022274017334
    6. '            
' → logprob: -6.44022274017334
    7. ' #' → logprob: -6.56522274017334
    8. ' def' → logprob: -7.06522274017334
    9. 'import' → logprob: -7.19022274017334
    10. ' indentation' → logprob: -7.31522274017334

Token 262: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7994341254234314
    2. ' return' → logprob: -1.4244341850280762
    3. ' #' → logprob: -2.549434185028076
    4. '            ' → logprob: -2.799434185028076
    5. ' def' → logprob: -3.299434185028076
    6. 'return' → logprob: -3.674434185028076
    7. '    ' → logprob: -3.799434185028076
    8. ' pass' → logprob: -4.174434185028076
    9. '        ' → logprob: -4.299434185028076
    10. '       ' → logprob: -4.424434185028076

Token 263: ' implement' (ID: 6365)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.2112759351730347
    2. ' use' → logprob: -1.3362759351730347
    3. ''ll' → logprob: -2.336276054382324
    4. '    ' → logprob: -2.836276054382324
    5. ' need' → logprob: -3.086276054382324
    6. '   ' → logprob: -3.086276054382324
    7. '       ' → logprob: -3.211276054382324
    8. ' proceed' → logprob: -3.336276054382324
    9. ' will' → logprob: -4.086276054382324
    10. ' implement' → logprob: -4.086276054382324

Token 264: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.27231863141059875
    2. ' the' → logprob: -2.8973186016082764
    3. ' an' → logprob: -3.2723186016082764
    4. 'def' → logprob: -3.5223186016082764
    5. ' it' → logprob: -3.7723186016082764
    6. ' def' → logprob: -4.1473188400268555
    7. 'a' → logprob: -4.1473188400268555
    8. 'd' → logprob: -4.3973188400268555
    9. 'the' → logprob: -4.7723188400268555
    10. ' clustering' → logprob: -4.7723188400268555

Token 265: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.9370334148406982
    2. 'bottom' → logprob: -1.6870334148406982
    3. 'def' → logprob: -2.1870334148406982
    4. ' recursive' → logprob: -2.4370334148406982
    5. ' hierarchical' → logprob: -3.3120334148406982
    6. ' different' → logprob: -3.8120334148406982
    7. ' def' → logprob: -4.062033653259277
    8. ' helper' → logprob: -4.062033653259277
    9. 'recursive' → logprob: -4.187033653259277
    10. ' clustering' → logprob: -4.437033653259277

Token 266: '-up' (ID: 7288)
  Prédit: '-up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-up' → logprob: -0.2218676209449768
    2. 'up' → logprob: -2.221867561340332
    3. '_up' → logprob: -2.471867561340332
    4. ' up' → logprob: -5.721867561340332
    5. '   ' → logprob: -6.221867561340332
    6. '_' → logprob: -7.596867561340332
    7. '-' → logprob: -9.096867561340332
    8. '       ' → logprob: -9.346867561340332
    9. ' ' → logprob: -9.846867561340332
    10. '	up' → logprob: -10.721867561340332

Token 267: ' progressive' (ID: 35678)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.724962055683136
    2. ' clustering' → logprob: -0.974962055683136
    3. ' ag' → logprob: -2.474961996078491
    4. 'appro' → logprob: -3.349961996078491
    5. 'cl' → logprob: -4.59996223449707
    6. ' hierarchical' → logprob: -5.47496223449707
    7. ' merging' → logprob: -6.84996223449707
    8. 'merge' → logprob: -7.22496223449707
    9. ' merge' → logprob: -7.59996223449707
    10. 'ag' → logprob: -7.72496223449707

Token 268: ' reconstruction' (ID: 68152)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.5457512736320496
    2. 'mer' → logprob: -1.4207513332366943
    3. ' clustering' → logprob: -2.4207513332366943
    4. 'merge' → logprob: -3.0457513332366943
    5. ' merging' → logprob: -4.170751094818115
    6. ' ag' → logprob: -4.670751094818115
    7. 'cluster' → logprob: -5.420751094818115
    8. 'aggregation' → logprob: -5.920751094818115
    9. ' approach' → logprob: -6.420751094818115
    10. ' merge' → logprob: -6.670751094818115

Token 269: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07412232458591461
    2. '<|end|>' → logprob: -3.074122428894043
    3. '       ' → logprob: -4.449122428894043
    4. '        ' → logprob: -5.449122428894043
    5. '<|end|>' → logprob: -5.949122428894043
    6. '            ' → logprob: -6.199122428894043
    7. '    ' → logprob: -6.449122428894043
    8. ' ' → logprob: -7.074122428894043
    9. '   ' → logprob: -7.699122428894043
    10. '            
' → logprob: -7.699122428894043

Token 271: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04185457155108452
    2. '       ' → logprob: -4.666854381561279
    3. ' pass' → logprob: -5.166854381561279
    4. '        ' → logprob: -5.666854381561279
    5. '            
' → logprob: -5.791854381561279
    6. '            ' → logprob: -5.791854381561279
    7. '    ' → logprob: -5.791854381561279
    8. ' 
' → logprob: -6.041854381561279
    9. '    
' → logprob: -6.666854381561279
    10. 'import' → logprob: -6.791854381561279

Token 272: ' Represent' (ID: 34617)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06941886246204376
    2. ' pass' → logprob: -3.9444189071655273
    3. 'import' → logprob: -4.569418907165527
    4. '#' → logprob: -5.069418907165527
    5. '   ' → logprob: -5.319418907165527
    6. ' n' → logprob: -5.444418907165527
    7. '       ' → logprob: -5.444418907165527
    8. 'pass' → logprob: -5.444418907165527
    9. 'from' → logprob: -5.819418907165527
    10. ' from' → logprob: -6.444418907165527

Token 273: ' each' (ID: 2454)
  Prédit: ' clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -0.2783394455909729
    2. 'clusters' → logprob: -1.6533393859863281
    3. ' each' → logprob: -4.028339385986328
    4. ' the' → logprob: -5.278339385986328
    5. ' distances' → logprob: -5.278339385986328
    6. 'ing' → logprob: -5.528339385986328
    7. ' nodes' → logprob: -5.903339385986328
    8. 'dist' → logprob: -5.903339385986328
    9. 'ation' → logprob: -6.028339385986328
    10. 'each' → logprob: -6.028339385986328

Token 274: ' leaf' (ID: 25882)
  Prédit: 'cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluster' → logprob: -0.2538362741470337
    2. ' cluster' → logprob: -1.5038362741470337
    3. 'node' → logprob: -7.003836154937744
    4. ' node' → logprob: -7.753836154937744
    5. 'current' → logprob: -8.753836631774902
    6. ' current' → logprob: -9.253836631774902
    7. 'leaf' → logprob: -9.628836631774902
    8. ' leaf' → logprob: -9.628836631774902
    9. 'distance' → logprob: -10.878836631774902
    10. 'subset' → logprob: -11.003836631774902

Token 275: ' initially' (ID: 25998)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.08205043524503708
    2. 'as' → logprob: -3.082050323486328
    3. 'cluster' → logprob: -4.207050323486328
    4. ' cluster' → logprob: -4.832050323486328
    5. ' by' → logprob: -6.332050323486328
    6. '           ' → logprob: -6.457050323486328
    7. ' node' → logprob: -6.707050323486328
    8. 'node' → logprob: -6.832050323486328
    9. ' and' → logprob: -7.207050323486328
    10. 's' → logprob: -7.207050323486328

Token 276: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.526713490486145
    2. 'as' → logprob: -0.901713490486145
    3. 'cluster' → logprob: -7.0267133712768555
    4. 's' → logprob: -7.4017133712768555
    5. '           ' → logprob: -7.5267133712768555
    6. ' cluster' → logprob: -8.151713371276855
    7. ' by' → logprob: -8.276713371276855
    8. 'in' → logprob: -8.526713371276855
    9. 'by' → logprob: -8.776713371276855
    10. 'self' → logprob: -8.901713371276855

Token 277: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2345455437898636
    2. '{' → logprob: -2.2345454692840576
    3. '[node' → logprob: -3.1095454692840576
    4. '[' → logprob: -3.7345454692840576
    5. 'an' → logprob: -4.609545707702637
    6. ' a' → logprob: -5.109545707702637
    7. '[a' → logprob: -5.484545707702637
    8. 'it' → logprob: -6.234545707702637
    9. 'its' → logprob: -6.484545707702637
    10. '[i' → logprob: -6.609545707702637

Token 278: ' node' (ID: 4596)
  Prédit: 'cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cluster' → logprob: -0.040364980697631836
    2. 'set' → logprob: -4.290365219116211
    3. '{' → logprob: -4.790365219116211
    4. 'node' → logprob: -5.040365219116211
    5. '[node' → logprob: -5.290365219116211
    6. 'singleton' → logprob: -5.915365219116211
    7. 'se' → logprob: -6.790365219116211
    8. '[' → logprob: -7.165365219116211
    9. 'leaf' → logprob: -8.165365219116211
    10. 'single' → logprob: -8.165365219116211

Token 279: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0130857229232788
    2. '           ' → logprob: -1.2630857229232788
    3. '<|end|>' → logprob: -1.6380857229232788
    4. '.' → logprob: -2.7630858421325684
    5. ' and' → logprob: -3.5130858421325684
    6. '       ' → logprob: -3.6380858421325684
    7. '<|end|>' → logprob: -4.388085842132568
    8. ',
' → logprob: -5.513085842132568
    9. ')' → logprob: -5.513085842132568
    10. ';' → logprob: -6.138085842132568

Token 280: ' cluster' (ID: 19723)
  Prédit: ' cluster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cluster' → logprob: -1.8136738538742065
    2. 'cluster' → logprob: -1.8136738538742065
    3. 'merge' → logprob: -1.9386738538742065
    4. ' merge' → logprob: -2.188673973083496
    5. 'def' → logprob: -2.563673973083496
    6. ' a' → logprob: -3.188673973083496
    7. ' use' → logprob: -3.438673973083496
    8. 'continue' → logprob: -3.563673973083496
    9. 'initialize' → logprob: -3.813673973083496
    10. ' clusters' → logprob: -4.063673973083496

Token 281: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.054490529000759125
    2. '
' → logprob: -4.304490566253662
    3. ':' → logprob: -4.679490566253662
    4. '           ' → logprob: -5.429490566253662
    5. '       ' → logprob: -5.679490566253662
    6. '   ' → logprob: -6.054490566253662
    7. 'def' → logprob: -6.179490566253662
    8. ',' → logprob: -6.304490566253662
    9. '.' → logprob: -6.429490566253662
    10. '_ids' → logprob: -6.429490566253662

Token 282: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0600117444992065
    2. '           ' → logprob: -1.3100117444992065
    3. '<|end|>' → logprob: -1.5600117444992065
    4. '       ' → logprob: -2.685011863708496
    5. '<|end|>' → logprob: -3.435011863708496
    6. '            
' → logprob: -4.310011863708496
    7. '    
' → logprob: -4.685011863708496
    8. ' ' → logprob: -4.685011863708496
    9. '        
' → logprob: -4.685011863708496
    10. '    ' → logprob: -5.060011863708496

Token 284: ' At' (ID: 3604)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04194489121437073
    2. '<|end|>' → logprob: -4.291944980621338
    3. '
' → logprob: -4.541944980621338
    4. '            
' → logprob: -5.416944980621338
    5. '<|end|>' → logprob: -5.416944980621338
    6. '       ' → logprob: -5.916944980621338
    7. '            ' → logprob: -7.291944980621338
    8. ' 
' → logprob: -7.291944980621338
    9. '    
' → logprob: -7.666944980621338
    10. '   ' → logprob: -7.791944980621338

Token 285: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.4217945337295532
    2. ' each' → logprob: -1.1717945337295532
    3. 'the' → logprob: -4.546794414520264
    4. ' the' → logprob: -4.671794414520264
    5. ' first' → logprob: -5.671794414520264
    6. 'first' → logprob: -5.796794414520264
    7. 'least' → logprob: -6.046794414520264
    8. '   ' → logprob: -7.296794414520264
    9. 'pass' → logprob: -7.421794414520264
    10. ' least' → logprob: -7.421794414520264

Token 286: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.0027570913080126047
    2. 'step' → logprob: -6.2527570724487305
    3. ' iteration' → logprob: -7.2527570724487305
    4. ' indentation' → logprob: -9.87775707244873
    5. '   ' → logprob: -10.87775707244873
    6. 'iteration' → logprob: -11.37775707244873
    7. ' ' → logprob: -11.50275707244873
    8. '    ' → logprob: -12.12775707244873
    9. '           ' → logprob: -12.25275707244873
    10. '       ' → logprob: -12.37775707244873

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.037069451063871384
    2. '           ' → logprob: -4.037069320678711
    3. ' ,' → logprob: -4.787069320678711
    4. ' ' → logprob: -5.787069320678711
    5. ':' → logprob: -5.912069320678711
    6. '            ' → logprob: -5.912069320678711
    7. '               ' → logprob: -7.787069320678711
    8. '   ' → logprob: -8.037069320678711
    9. ' we' → logprob: -8.162069320678711
    10. '    ' → logprob: -8.537069320678711

Token 288: ' find' (ID: 1646)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.6083093881607056
    2. '#' → logprob: -2.358309268951416
    3. '           ' → logprob: -2.358309268951416
    4. ' clusters' → logprob: -2.358309268951416
    5. ' #' → logprob: -2.483309268951416
    6. 'clusters' → logprob: -4.233309268951416
    7. 'pass' → logprob: -4.483309268951416
    8. ' merge' → logprob: -4.858309268951416
    9. ' we' → logprob: -4.983309268951416
    10. ' find' → logprob: -5.108309268951416

Token 289: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9142153859138489
    2. 'the' → logprob: -1.164215326309204
    3. ' two' → logprob: -3.039215326309204
    4. 'clusters' → logprob: -3.039215326309204
    5. ' clusters' → logprob: -3.289215326309204
    6. ' pairs' → logprob: -3.664215326309204
    7. 'two' → logprob: -4.039215564727783
    8. 'min' → logprob: -4.039215564727783
    9. 'pairs' → logprob: -4.164215564727783
    10. ' pair' → logprob: -4.414215564727783

Token 290: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.4175012409687042
    2. 'min' → logprob: -2.167501211166382
    3. 'closest' → logprob: -2.167501211166382
    4. ' pair' → logprob: -2.667501211166382
    5. 'minimum' → logprob: -4.792501449584961
    6. 'cluster' → logprob: -5.042501449584961
    7. ' closest' → logprob: -5.042501449584961
    8. ' minimal' → logprob: -5.417501449584961
    9. 'two' → logprob: -6.042501449584961
    10. 'next' → logprob: -6.042501449584961

Token 291: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' minimum' (ID: 11085)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.5444260835647583
    2. ' the' → logprob: -1.0444260835647583
    3. 'minimal' → logprob: -3.6694259643554688
    4. 'the' → logprob: -3.9194259643554688
    5. ' minimum' → logprob: -4.169425964355469
    6. 'minimum' → logprob: -5.294425964355469
    7. ' smallest' → logprob: -6.794425964355469
    8. 'min' → logprob: -7.419425964355469
    9. ' shortest' → logprob: -9.544425964355469
    10. 'def' → logprob: -9.794425964355469

Token 293: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.12214644998311996
    2. 'distance' → logprob: -2.4971463680267334
    3. '_distance' → logprob: -3.7471463680267334
    4. 'dist' → logprob: -5.4971466064453125
    5. '_dist' → logprob: -5.6221466064453125
    6. ' dist' → logprob: -7.8721466064453125
    7. '[' → logprob: -8.872146606445312
    8. ' distances' → logprob: -9.122146606445312
    9. '   ' → logprob: -9.247146606445312
    10. '_' → logprob: -9.247146606445312

Token 294: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8161598443984985
    2. '           ' → logprob: -0.9411598443984985
    3. '            ' → logprob: -3.066159725189209
    4. ' ' → logprob: -3.441159725189209
    5. ':' → logprob: -4.441159725189209
    6. '       ' → logprob: -4.691159725189209
    7. '    ' → logprob: -4.691159725189209
    8. '               ' → logprob: -4.941159725189209
    9. '        ' → logprob: -5.191159725189209
    10. '<|end|>' → logprob: -5.191159725189209

Token 295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06553959846496582
    2. '            ' → logprob: -3.565539598464966
    3. '               ' → logprob: -4.315539360046387
    4. ' and' → logprob: -5.190539360046387
    5. '            
' → logprob: -5.690539360046387
    6. ' ' → logprob: -5.815539360046387
    7. '                   ' → logprob: -6.440539360046387
    8. ',' → logprob: -6.690539360046387
    9. ' then' → logprob: -7.065539360046387
    10. '    ' → logprob: -7.315539360046387

Token 296: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24647925794124603
    2. '            ' → logprob: -2.9964792728424072
    3. ' and' → logprob: -3.1214792728424072
    4. '               ' → logprob: -3.4964792728424072
    5. '#' (adapté à ' #') → logprob: -4.121479034423828
    6. ' then' → logprob: -4.246479034423828
    7. '                   ' → logprob: -4.246479034423828
    8. ' remove' → logprob: -5.121479034423828
    9. 'and' → logprob: -5.496479034423828
    10. '            
' → logprob: -5.496479034423828

Token 297: ' connect' (ID: 4837)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0970726013183594
    2. '           ' → logprob: -1.3470726013183594
    3. ' then' → logprob: -2.5970726013183594
    4. ' and' → logprob: -2.7220726013183594
    5. ' merge' → logprob: -2.7220726013183594
    6. ' remove' → logprob: -2.8470726013183594
    7. 'and' → logprob: -3.7220726013183594
    8. 'merge' → logprob: -4.222072601318359
    9. ' #' → logprob: -4.347072601318359
    10. '            
' → logprob: -4.472072601318359

Token 298: ' them' (ID: 1373)
  Prédit: ' them'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' them' → logprob: -0.01979137770831585
    2. 'them' → logprob: -4.644791603088379
    3. ' the' → logprob: -5.144791603088379
    4. 'the' → logprob: -7.144791603088379
    5. ' clusters' → logprob: -7.519791603088379
    6. ',' → logprob: -7.519791603088379
    7. ' their' → logprob: -7.769791603088379
    8. '_' → logprob: -8.144791603088379
    9. 'ed' → logprob: -8.894791603088379
    10. ' ' → logprob: -9.019791603088379

Token 299: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.136334627866745
    2. ' and' → logprob: -2.7613346576690674
    3. '           ' → logprob: -3.7613346576690674
    4. ' with' → logprob: -4.261334419250488
    5. 'and' → logprob: -4.636334419250488
    6. ' by' → logprob: -5.386334419250488
    7. '.' → logprob: -5.886334419250488
    8. ',
' → logprob: -6.011334419250488
    9. ')' → logprob: -6.136334419250488
    10. ' ,' → logprob: -6.261334419250488

Token 300: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.45805883407592773
    2. 'a' → logprob: -1.2080588340759277
    3. ' an' → logprob: -3.2080588340759277
    4. 'an' → logprob: -4.333058834075928
    5. 'self' → logprob: -5.083058834075928
    6. ' new' → logprob: -5.458058834075928
    7. 'new' → logprob: -5.708058834075928
    8. 'the' → logprob: -7.458058834075928
    9. ' the' → logprob: -7.833058834075928
    10. ' self' → logprob: -8.208059310913086

Token 301: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.16040141880512238
    2. ' new' → logprob: -1.910401463508606
    3. 'n' → logprob: -8.910401344299316
    4. '[new' → logprob: -11.160401344299316
    5. 'internal' → logprob: -11.410401344299316
    6. ')new' → logprob: -12.035401344299316
    7. 'w' → logprob: -13.035401344299316
    8. '	new' → logprob: -13.410401344299316
    9. '_new' → logprob: -13.910401344299316
    10. 'switch' → logprob: -13.910401344299316

Token 302: ' switch' (ID: 6160)
  Prédit: ' internal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' internal' → logprob: -0.4005182683467865
    2. ' node' → logprob: -1.6505182981491089
    3. '_internal' → logprob: -2.9005181789398193
    4. '_node' → logprob: -3.0255181789398193
    5. ' _' → logprob: -4.525518417358398
    6. 'internal' → logprob: -4.525518417358398
    7. ' ' → logprob: -4.525518417358398
    8. 'node' → logprob: -6.525518417358398
    9. ' switch' → logprob: -9.650518417358398
    10. '_' → logprob: -9.775518417358398

Token 303: ' node' (ID: 4596)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16141927242279053
    2. ' node' → logprob: -2.53641939163208
    3. ',' → logprob: -3.03641939163208
    4. '_node' → logprob: -5.28641939163208
    5. 'node' → logprob: -5.53641939163208
    6. '   ' → logprob: -6.03641939163208
    7. '
' → logprob: -6.41141939163208
    8. '       ' → logprob: -6.53641939163208
    9. '               ' → logprob: -6.66141939163208
    10. ' and' → logprob: -6.78641939163208

Token 304: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2542814016342163
    2. ',' → logprob: -2.129281520843506
    3. '<|end|>' → logprob: -3.754281520843506
    4. '            ' → logprob: -4.129281520843506
    5. ' ' → logprob: -4.129281520843506
    6. '            
' → logprob: -4.754281520843506
    7. '               ' → logprob: -4.879281520843506
    8. ' and' → logprob: -5.254281520843506
    9. '.' → logprob: -5.254281520843506
    10. '<|end|>' → logprob: -5.504281520843506

Token 305: ' update' (ID: 4027)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.7286015748977661
    2. '           ' → logprob: -1.3536015748977661
    3. ' merge' → logprob: -1.9786015748977661
    4. 'remove' → logprob: -3.6036014556884766
    5. 'cluster' → logprob: -3.9786014556884766
    6. 'update' → logprob: -4.353601455688477
    7. 'return' → logprob: -4.353601455688477
    8. '       ' → logprob: -4.978601455688477
    9. ' remove' → logprob: -4.978601455688477
    10. ' cluster' → logprob: -5.228601455688477

Token 306: ' distances' (ID: 48294)
  Prédit: ' clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -0.3887392580509186
    2. 'clusters' → logprob: -1.6387392282485962
    3. '           ' → logprob: -3.0137393474578857
    4. ' distances' → logprob: -3.5137393474578857
    5. 'self' → logprob: -4.388739109039307
    6. ' self' → logprob: -4.638739109039307
    7. ' the' → logprob: -4.763739109039307
    8. 'dist' → logprob: -4.888739109039307
    9. '       ' → logprob: -5.888739109039307
    10. 'the' → logprob: -6.513739109039307

Token 307: ' accordingly' (ID: 44041)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14332330226898193
    2. '       ' → logprob: -3.3933234214782715
    3. '<|end|>' → logprob: -3.7683234214782715
    4. ',' → logprob: -4.1433234214782715
    5. '
' → logprob: -4.3933234214782715
    6. '        
' → logprob: -4.5183234214782715
    7. '            
' → logprob: -4.8933234214782715
    8. '<|end|>' → logprob: -5.2683234214782715
    9. '.' → logprob: -5.5183234214782715
    10. '    ' → logprob: -5.6433234214782715

Token 308: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.065446376800537
    2. '<|end|>' → logprob: -1.315446376800537
    3. '
' → logprob: -1.440446376800537
    4. '<|end|>' → logprob: -2.065446376800537
    5. '       ' → logprob: -5.190446376800537
    6. '            
' → logprob: -5.565446376800537
    7. ',' → logprob: -5.690446376800537
    8. '        
' → logprob: -5.940446376800537
    9. '    
' → logprob: -6.065446376800537
    10. '.' → logprob: -7.065446376800537

Token 309: '            
' (ID: 7048)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27982398867607117
    2. '<|end|>' → logprob: -2.0298240184783936
    3. '
' → logprob: -3.0298240184783936
    4. '       ' → logprob: -3.6548240184783936
    5. '<|end|>' → logprob: -4.2798237800598145
    6. '            
' → logprob: -4.9048237800598145
    7. '    
' → logprob: -5.2798237800598145
    8. '        
' → logprob: -5.6548237800598145
    9. ' ' → logprob: -6.9048237800598145
    10. ' 
' → logprob: -7.0298237800598145

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001405232702381909
    2. '            ' → logprob: -7.501405239105225
    3. '       ' → logprob: -8.126404762268066
    4. '            
' → logprob: -8.626404762268066
    5. 'import' → logprob: -9.501404762268066
    6. '<|end|>' → logprob: -9.626404762268066
    7. '    ' → logprob: -10.001404762268066
    8. '        ' → logprob: -10.126404762268066
    9. '    
' → logprob: -10.501404762268066
    10. ' ' → logprob: -10.751404762268066

Token 311: ' #' (ID: 1069)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.42324867844581604
    2. 'dist' → logprob: -2.423248767852783
    3. 'import' → logprob: -2.548248767852783
    4. 'n' → logprob: -2.548248767852783
    5. '       ' → logprob: -3.048248767852783
    6. 'from' → logprob: -3.423248767852783
    7. 'cl' → logprob: -5.173248767852783
    8. 'd' → logprob: -6.048248767852783
    9. 'nodes' → logprob: -6.173248767852783
    10. ' clusters' → logprob: -6.173248767852783

Token 312: ' We' (ID: 1416)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.2857089042663574
    2. 'from' → logprob: -2.5357089042663574
    3. 'import' → logprob: -3.2857089042663574
    4. ' clusters' → logprob: -3.4107089042663574
    5. 'n' → logprob: -3.5357089042663574
    6. '       ' → logprob: -4.035708904266357
    7. '   ' → logprob: -4.535708904266357
    8. 'dist' → logprob: -4.910708904266357
    9. 'nodes' → logprob: -5.035708904266357
    10. 'pass' → logprob: -5.410708904266357

Token 313: ' manage' (ID: 11659)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7045475840568542
    2. '       ' → logprob: -1.704547643661499
    3. 'def' → logprob: -3.079547643661499
    4. '           ' → logprob: -3.204547643661499
    5. ' =' → logprob: -3.204547643661499
    6. 'n' → logprob: -3.454547643661499
    7. ' import' → logprob: -3.704547643661499
    8. 'clusters' → logprob: -3.704547643661499
    9. 'from' → logprob: -4.07954740524292
    10. '   ' → logprob: -4.20454740524292

Token 314: ' clusters' (ID: 51310)
  Prédit: ' clusters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -0.06287495046854019
    2. 'clusters' → logprob: -3.0628750324249268
    3. '           ' → logprob: -5.062874794006348
    4. 'import' → logprob: -5.812874794006348
    5. '       ' → logprob: -6.437874794006348
    6. ' cluster' → logprob: -7.062874794006348
    7. 'cluster' → logprob: -7.687874794006348
    8. '_clusters' → logprob: -7.937874794006348
    9. ' distances' → logprob: -8.062874794006348
    10. ' import' → logprob: -8.062874794006348

Token 315: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031539499759674072
    2. '=' → logprob: -5.8781538009643555
    3. '           ' → logprob: -8.753153800964355
    4. ',' → logprob: -9.128153800964355
    5. '   ' → logprob: -10.628153800964355
    6. '=[]' → logprob: -11.128153800964355
    7. '       ' → logprob: -11.253153800964355
    8. '_clusters' → logprob: -12.003153800964355
    9. '    ' → logprob: -12.628153800964355
    10. 'clusters' → logprob: -13.253153800964355

Token 316: ' each' (ID: 2454)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.3131726384162903
    2. ' clusters' → logprob: -1.9381725788116455
    3. 'cluster' → logprob: -3.3131725788116455
    4. 'dist' → logprob: -3.3131725788116455
    5. 'import' → logprob: -4.063172817230225
    6. ' cluster' → logprob: -5.313172817230225
    7. 'parents' → logprob: -5.563172817230225
    8. ' distances' → logprob: -5.688172817230225
    9. 'sizes' → logprob: -6.188172817230225
    10. ' parents' → logprob: -6.313172817230225

Token 317: ' cluster' (ID: 19723)
  Prédit: ' represented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' represented' → logprob: -1.059553861618042
    2. '=' → logprob: -1.434553861618042
    3. ' =' → logprob: -1.684553861618042
    4. ' as' → logprob: -2.434553861618042
    5. 'represented' → logprob: -2.934553861618042
    6. 'as' → logprob: -3.184553861618042
    7. ' is' → logprob: -4.309554100036621
    8. 'cluster' → logprob: -4.434554100036621
    9. ' cluster' → logprob: -4.809554100036621
    10. ':' → logprob: -5.434554100036621

Token 318: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5987845063209534
    2. ' =' → logprob: -1.2237844467163086
    3. 'is' → logprob: -2.5987844467163086
    4. '=' → logprob: -2.9737844467163086
    5. ' represented' → logprob: -4.098784446716309
    6. ' as' → logprob: -5.598784446716309
    7. ':' → logprob: -5.848784446716309
    8. 'represented' → logprob: -6.348784446716309
    9. 'as' → logprob: -6.473784446716309
    10. ' has' → logprob: -6.848784446716309

Token 319: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07817797362804413
    2. ' a' → logprob: -3.0781779289245605
    3. 'represented' → logprob: -4.0781779289245605
    4. ' represented' → logprob: -4.8281779289245605
    5. '[a' → logprob: -6.0781779289245605
    6. '[' → logprob: -7.3281779289245605
    7. '{' → logprob: -7.4531779289245605
    8. 'set' → logprob: -7.9531779289245605
    9. ' [' → logprob: -9.203178405761719
    10. '           ' → logprob: -10.328178405761719

Token 320: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.4889257848262787
    2. 'list' → logprob: -0.9889258146286011
    3. ' list' → logprob: -4.738925933837891
    4. ' set' → logprob: -5.363925933837891
    5. 'dict' → logprob: -6.738925933837891
    6. ' dict' → logprob: -9.86392593383789
    7. 'tuple' → logprob: -10.36392593383789
    8. '[list' → logprob: -11.61392593383789
    9. 'cluster' → logprob: -11.73892593383789
    10. 'dictionary' → logprob: -12.61392593383789

Token 321: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1368337869644165
    2. 'of' → logprob: -2.761833667755127
    3. '()' → logprob: -3.886833667755127
    4. 's' → logprob: -4.636833667755127
    5. ')' → logprob: -4.886833667755127
    6. '[' → logprob: -5.011833667755127
    7. '           ' → logprob: -5.261833667755127
    8. '   ' → logprob: -5.636833667755127
    9. '       ' → logprob: -5.761833667755127
    10. ' =' → logprob: -5.886833667755127

Token 322: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.3514057397842407
    2. ' nodes' → logprob: -1.2264057397842407
    3. 'node' → logprob: -6.601405620574951
    4. ' node' → logprob: -7.601405620574951
    5. 'indices' → logprob: -8.35140609741211
    6. 'int' → logprob: -8.35140609741211
    7. ' leaves' → logprob: -8.47640609741211
    8. ' int' → logprob: -8.85140609741211
    9. ' indices' → logprob: -9.60140609741211
    10. 'ints' → logprob: -9.97640609741211

Token 323: ' known' (ID: 5542)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8783664107322693
    2. ' =' → logprob: -1.128366470336914
    3. ',' → logprob: -1.753366470336914
    4. 's' → logprob: -3.753366470336914
    5. '       ' → logprob: -3.878366470336914
    6. '   ' → logprob: -4.878366470336914
    7. '<|end|>' → logprob: -5.003366470336914
    8. ':' → logprob: -5.503366470336914
    9. ' and' → logprob: -5.628366470336914
    10. '<|end|>' → logprob: -5.753366470336914

Token 324: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5794942378997803
    2. '       ' → logprob: -1.7044942378997803
    3. '   ' → logprob: -1.9544942378997803
    4. ' to' → logprob: -2.9544942378997803
    5. 'to' → logprob: -4.579494476318359
    6. ')' → logprob: -4.579494476318359
    7. '               ' → logprob: -5.204494476318359
    8. 'and' → logprob: -5.579494476318359
    9. '     ' → logprob: -5.954494476318359
    10. ' and' → logprob: -6.079494476318359

Token 325: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.4250105023384094
    2. ' be' → logprob: -1.5500104427337646
    3. 'represent' → logprob: -2.9250104427337646
    4. 'have' → logprob: -3.8000104427337646
    5. 'the' → logprob: -4.050010681152344
    6. 'self' → logprob: -4.425010681152344
    7. '   ' → logprob: -5.675010681152344
    8. 'contain' → logprob: -5.800010681152344
    9. 'merge' → logprob: -5.925010681152344
    10. ' represent' → logprob: -6.175010681152344

Token 326: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.5463801622390747
    2. 'merged' → logprob: -1.9213801622390747
    3. ' connected' → logprob: -2.546380043029785
    4. 'le' → logprob: -2.921380043029785
    5. 'def' → logprob: -3.671380043029785
    6. 'dis' → logprob: -3.796380043029785
    7. 'cluster' → logprob: -4.046380043029785
    8. 'clusters' → logprob: -4.046380043029785
    9. ' merged' → logprob: -4.671380043029785
    10. 'leaf' → logprob: -4.921380043029785

Token 327: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44385474920272827
    2. ',' → logprob: -1.693854808807373
    3. '       ' → logprob: -3.068854808807373
    4. 's' → logprob: -3.443854808807373
    5. '   ' → logprob: -3.818854808807373
    6. '.' → logprob: -4.318854808807373
    7. '<|end|>' → logprob: -4.318854808807373
    8. '
' → logprob: -4.443854808807373
    9. '<|end|>' → logprob: -4.818854808807373
    10. ' and' → logprob: -5.068854808807373

Token 328: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5144974589347839
    2. ',' → logprob: -1.8894975185394287
    3. '.' → logprob: -2.2644975185394287
    4. '<|end|>' → logprob: -2.3894975185394287
    5. '<|end|>' → logprob: -4.26449728012085
    6. '       ' → logprob: -4.51449728012085
    7. ' and' → logprob: -4.76449728012085
    8. '            
' → logprob: -4.76449728012085
    9. ':' → logprob: -5.76449728012085
    10. '        
' → logprob: -6.38949728012085

Token 329: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39001989364624023
    2. ',' → logprob: -2.3900198936462402
    3. '
' → logprob: -2.6400198936462402
    4. '.' → logprob: -3.0150198936462402
    5. '       ' → logprob: -3.7650198936462402
    6. '<|end|>' → logprob: -4.01501989364624
    7. '            
' → logprob: -4.14001989364624
    8. ' and' → logprob: -4.26501989364624
    9. '<|end|>' → logprob: -4.64001989364624
    10. 'def' → logprob: -5.64001989364624

Token 330: ' Here' (ID: 7306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2723345160484314
    2. '<|end|>' → logprob: -1.8973345756530762
    3. '<|end|>' → logprob: -4.022334575653076
    4. '            
' → logprob: -4.022334575653076
    5. ',' → logprob: -4.147334575653076
    6. '       ' → logprob: -4.897334575653076
    7. 'def' → logprob: -5.147334575653076
    8. '
' → logprob: -5.397334575653076
    9. ' and' → logprob: -6.147334575653076
    10. 'import' → logprob: -6.147334575653076

Token 331: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1473412662744522
    2. ',' → logprob: -2.772341251373291
    3. ' is' → logprob: -3.647341251373291
    4. ':' → logprob: -4.397341251373291
    5. ' clusters' → logprob: -4.397341251373291
    6. '       ' → logprob: -5.147341251373291
    7. '<|end|>' → logprob: -5.647341251373291
    8. '            ' → logprob: -6.022341251373291
    9. '            
' → logprob: -6.397341251373291
    10. '.' → logprob: -6.647341251373291

Token 332: ' since' (ID: 3630)
  Prédit: ' clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -0.12300107628107071
    2. 'clusters' → logprob: -2.4980010986328125
    3. ' import' → logprob: -4.4980010986328125
    4. ' pass' → logprob: -4.7480010986328125
    5. 'import' → logprob: -5.1230010986328125
    6. '       ' → logprob: -6.3730010986328125
    7. '           ' → logprob: -6.6230010986328125
    8. ' from' → logprob: -6.9980010986328125
    9. ' cluster' → logprob: -7.1230010986328125
    10. 'from' → logprob: -7.4980010986328125

Token 333: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1250159740447998
    2. 'self' → logprob: -1.8750159740447998
    3. ' self' → logprob: -2.1250159740448
    4. ' we' → logprob: -2.2500159740448
    5. 'the' → logprob: -2.3750159740448
    6. ' all' → logprob: -3.0000159740448
    7. ' clusters' → logprob: -3.2500159740448
    8. 'we' → logprob: -3.8750159740448
    9. ' code' → logprob: -4.375016212463379
    10. 'each' → logprob: -4.625016212463379

Token 334: ' problem' (ID: 4792)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.11085387319326401
    2. 'dist' → logprob: -3.360853910446167
    3. 'distance' → logprob: -4.610853672027588
    4. ' clusters' → logprob: -4.610853672027588
    5. 'code' → logprob: -4.860853672027588
    6. ' distances' → logprob: -4.985853672027588
    7. 'clusters' → logprob: -5.110853672027588
    8. ' next' → logprob: -5.110853672027588
    9. 'def' → logprob: -5.610853672027588
    10. ' problem' → logprob: -5.985853672027588

Token 335: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.24315372109413147
    2. 'is' → logprob: -2.1181538105010986
    3. '<|end|>' → logprob: -3.6181538105010986
    4. ' continues' → logprob: -3.7431538105010986
    5. ' involves' → logprob: -4.6181535720825195
    6. ' requires' → logprob: -4.9931535720825195
    7. 'requires' → logprob: -5.4931535720825195
    8. '.' → logprob: -5.7431535720825195
    9. '<|end|>' → logprob: -5.8681535720825195
    10. ' was' → logprob: -5.9931535720825195

Token 336: ' classical' (ID: 40663)
  Prédit: 'about'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'about' → logprob: -1.1971335411071777
    2. ' about' → logprob: -2.3221335411071777
    3. 'cut' → logprob: -2.3221335411071777
    4. 'not' → logprob: -2.5721335411071777
    5. 'unfinished' → logprob: -2.6971335411071777
    6. 'complete' → logprob: -2.9471335411071777
    7. 'a' → logprob: -3.0721335411071777
    8. 'und' → logprob: -3.0721335411071777
    9. 'tree' → logprob: -3.3221335411071777
    10. 'complex' → logprob: -3.4471335411071777

Token 337: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12171167880296707
    2. ' code' → logprob: -2.9967117309570312
    3. ' to' → logprob: -4.121711730957031
    4. ' clustering' → logprob: -4.996711730957031
    5. '       ' → logprob: -5.621711730957031
    6. ' dynamic' → logprob: -5.746711730957031
    7. '   ' → logprob: -6.121711730957031
    8. 'def' → logprob: -6.121711730957031
    9. ' and' → logprob: -6.246711730957031
    10. ' in' → logprob: -6.246711730957031

Token 338: ' additive' (ID: 113232)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -1.2097501754760742
    2. 'distance' → logprob: -1.5847501754760742
    3. 'phy' → logprob: -1.5847501754760742
    4. 'add' → logprob: -2.709750175476074
    5. 'construct' → logprob: -2.959750175476074
    6. 'ul' → logprob: -3.334750175476074
    7. 'neighbor' → logprob: -3.834750175476074
    8. 'graph' → logprob: -4.709750175476074
    9. 'building' → logprob: -4.834750175476074
    10. 'the' → logprob: -4.959750175476074

Token 339: ' tree' (ID: 8165)
  Prédit: 'phy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phy' → logprob: -0.7270311117172241
    2. 'trees' → logprob: -1.3520311117172241
    3. ' trees' → logprob: -1.7270311117172241
    4. 'tree' → logprob: -3.4770312309265137
    5. ' phy' → logprob: -3.4770312309265137
    6. '_phy' → logprob: -5.352031230926514
    7. 'distance' → logprob: -5.352031230926514
    8. 'metrics' → logprob: -5.602031230926514
    9. ' tree' → logprob: -6.352031230926514
    10. ' distances' → logprob: -7.477031230926514

Token 340: ' reconstruction' (ID: 68152)
  Prédit: ' reconstruction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reconstruction' → logprob: -0.02533583715558052
    2. 's' → logprob: -5.150335788726807
    3. ' distances' → logprob: -5.525335788726807
    4. ',' → logprob: -5.650335788726807
    5. ' construction' → logprob: -5.900335788726807
    6. ' distance' → logprob: -6.150335788726807
    7. ' building' → logprob: -6.275335788726807
    8. 'distance' → logprob: -6.275335788726807
    9. ' matrices' → logprob: -8.150336265563965
    10. '_distance' → logprob: -8.275336265563965

Token 341: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19509576261043549
    2. '           ' → logprob: -2.4450957775115967
    3. '<|end|>' → logprob: -2.8200957775115967
    4. '.' → logprob: -4.445095539093018
    5. '<|end|>' → logprob: -4.695095539093018
    6. ':' → logprob: -5.820095539093018
    7. ',
' → logprob: -5.945095539093018
    8. '...' → logprob: -6.695095539093018
    9. '       ' → logprob: -6.945095539093018
    10. '            
' → logprob: -7.820095539093018

Token 342: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006695353891700506
    2. '       ' → logprob: -6.63169527053833
    3. '            ' → logprob: -6.63169527053833
    4. '<|end|>' → logprob: -6.75669527053833
    5. '            
' → logprob: -6.88169527053833
    6. '<|end|>' → logprob: -7.88169527053833
    7. ',' → logprob: -7.88169527053833
    8. ' we' → logprob: -8.131695747375488
    9. '               ' → logprob: -8.756695747375488
    10. '          ' → logprob: -9.506695747375488

Token 343: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03032216802239418
    2. '<|end|>' → logprob: -4.780322074890137
    3. '       ' → logprob: -5.405322074890137
    4. '            ' → logprob: -5.530322074890137
    5. ')' → logprob: -5.905322074890137
    6. '            
' → logprob: -6.280322074890137
    7. ' ' → logprob: -6.780322074890137
    8. '#' (adapté à ' #') → logprob: -6.905322074890137
    9. '<|end|>' → logprob: -7.030322074890137
    10. ' tokens' → logprob: -7.405322074890137

Token 344: ' we' (ID: 581)
  Prédit: ' clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -1.5788146257400513
    2. '           ' → logprob: -1.8288146257400513
    3. ' import' → logprob: -2.0788145065307617
    4. 'import' → logprob: -2.0788145065307617
    5. 'clusters' → logprob: -2.0788145065307617
    6. '#' → logprob: -2.9538145065307617
    7. '       ' → logprob: -3.0788145065307617
    8. ' n' → logprob: -3.3288145065307617
    9. ' pass' → logprob: -4.078814506530762
    10. ' distances' → logprob: -4.078814506530762

Token 345: ' can' (ID: 665)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -1.3452298641204834
    2. 'continue' → logprob: -1.4702298641204834
    3. 'implement' → logprob: -2.3452298641204834
    4. '           ' → logprob: -2.4702298641204834
    5. ' use' → logprob: -2.4702298641204834
    6. '       ' → logprob: -2.5952298641204834
    7. ' can' → logprob: -3.2202298641204834
    8. ' continue' → logprob: -3.5952298641204834
    9. '...' → logprob: -3.8452298641204834
    10. ' implement' → logprob: -4.2202301025390625

Token 346: ' apply' (ID: 6096)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.3940841555595398
    2. 'implement' → logprob: -1.5190842151641846
    3. 'apply' → logprob: -3.2690842151641846
    4. ' use' → logprob: -4.0190839767456055
    5. 'return' → logprob: -4.1440839767456055
    6. 'continue' → logprob: -5.0190839767456055
    7. '...' → logprob: -5.2690839767456055
    8. ' implement' → logprob: -5.5190839767456055
    9. 'try' → logprob: -5.6440839767456055
    10. '   ' → logprob: -5.6440839767456055

Token 347: ' the' (ID: 290)
  Prédit: ' neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -1.4436559677124023
    2. 'neighbor' → logprob: -1.5686559677124023
    3. ' the' → logprob: -1.9436559677124023
    4. 'nj' → logprob: -2.3186559677124023
    5. 'the' → logprob: -2.4436559677124023
    6. 'self' → logprob: -3.4436559677124023
    7. 'up' → logprob: -3.9436559677124023
    8. '   ' → logprob: -3.9436559677124023
    9. ' nj' → logprob: -4.193655967712402
    10. ' self' → logprob: -4.193655967712402

Token 348: ' classic' (ID: 13686)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.6325092315673828
    2. 'nj' → logprob: -1.6325092315673828
    3. ' neighbor' → logprob: -2.257509231567383
    4. 'f' → logprob: -2.882509231567383
    5. 'up' → logprob: -3.507509231567383
    6. 'UP' → logprob: -4.132509231567383
    7. '
' → logprob: -4.507509231567383
    8. 'next' → logprob: -4.882509231567383
    9. 'add' → logprob: -5.007509231567383
    10. '   ' → logprob: -5.257509231567383

Token 349: ' additive' (ID: 113232)
  Prédit: ' neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.5261865258216858
    2. 'neighbor' → logprob: -1.401186466217041
    3. 'nj' → logprob: -2.276186466217041
    4. ' nj' → logprob: -4.026186466217041
    5. '_neighbor' → logprob: -4.651186466217041
    6. 'up' → logprob: -5.151186466217041
    7. ' method' → logprob: -5.526186466217041
    8. 'UP' → logprob: -5.526186466217041
    9. 'Neighbor' → logprob: -6.151186466217041
    10. '_n' → logprob: -6.776186466217041

Token 350: ' phy' (ID: 76446)
  Prédit: 'phy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phy' → logprob: -0.654751181602478
    2. '_phy' → logprob: -1.154751181602478
    3. ' phy' → logprob: -2.1547513008117676
    4. 'tree' → logprob: -3.5297513008117676
    5. ' tree' → logprob: -5.029751300811768
    6. '<|end|>' → logprob: -5.904751300811768
    7. '_ph' → logprob: -6.029751300811768
    8. '_p' → logprob: -6.779751300811768
    9. '_h' → logprob: -7.154751300811768
    10. '_tree' → logprob: -7.404751300811768

Token 351: 'log' (ID: 2133)
  Prédit: 'log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.21017669141292572
    2. 'logen' → logprob: -1.710176706314087
    3. 'letic' → logprob: -5.085176467895508
    4. 'lo' → logprob: -6.710176467895508
    5. 'l' → logprob: -7.460176467895508
    6. 'ogen' → logprob: -8.335176467895508
    7. 'ly' → logprob: -8.460176467895508
    8. '
' → logprob: -9.085176467895508
    9. '```' → logprob: -10.085176467895508
    10. '

' → logprob: -11.085176467895508

Token 352: 'eny' (ID: 19311)
  Prédit: 'eny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eny' → logprob: -0.4974483549594879
    2. 'en' → logprob: -0.9974483251571655
    3. 'enic' → logprob: -4.122448444366455
    4. 'enet' → logprob: -5.497448444366455
    5. '```' → logprob: -6.497448444366455
    6. 'eneric' → logprob: -8.372447967529297
    7. 'netic' → logprob: -9.122447967529297
    8. 'enie' → logprob: -9.122447967529297
    9. 'enity' → logprob: -9.622447967529297
    10. 'enom' → logprob: -9.622447967529297

Token 353: ' approach' (ID: 7139)
  Prédit: ' algorithm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' algorithm' → logprob: -0.042063891887664795
    2. '_algorithm' → logprob: -4.0420637130737305
    3. 'algorithm' → logprob: -4.5420637130737305
    4. ' method' → logprob: -5.2920637130737305
    5. ')' → logprob: -6.0420637130737305
    6. '   ' → logprob: -7.0420637130737305
    7. ':' → logprob: -7.2920637130737305
    8. '()' → logprob: -7.4170637130737305
    9. '       ' → logprob: -7.4170637130737305
    10. '           ' → logprob: -7.9170637130737305

Token 354: ' tailored' (ID: 45089)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4245232343673706
    2. '<|end|>' → logprob: -1.4245232343673706
    3. '<|end|>' → logprob: -3.42452335357666
    4. '       ' → logprob: -3.54952335357666
    5. ',' → logprob: -4.29952335357666
    6. '.' → logprob: -5.04952335357666
    7. ':' → logprob: -5.29952335357666
    8. ')' → logprob: -6.17452335357666
    9. '            ' → logprob: -6.42452335357666
    10. '        ' → logprob: -6.42452335357666

Token 355: ' for' (ID: 395)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6855895519256592
    2. ' for' → logprob: -0.9355895519256592
    3. 'for' → logprob: -3.060589551925659
    4. 'to' → logprob: -3.185589551925659
    5. '           ' → logprob: -5.185589790344238
    6. '       ' → logprob: -5.310589790344238
    7. '   ' → logprob: -5.435589790344238
    8. 'def' → logprob: -7.935589790344238
    9. ' toward' → logprob: -9.810589790344238
    10. ' ' → logprob: -10.060589790344238

Token 356: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.7466306686401367
    2. ' this' → logprob: -1.4966306686401367
    3. 'the' → logprob: -2.4966306686401367
    4. 'dist' → logprob: -3.1216306686401367
    5. ' the' → logprob: -3.6216306686401367
    6. ' additive' → logprob: -3.7466306686401367
    7. 'distance' → logprob: -3.7466306686401367
    8. 'add' → logprob: -3.8716306686401367
    9. 'int' → logprob: -4.121630668640137
    10. 'self' → logprob: -4.496630668640137

Token 357: ' case' (ID: 1890)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7201157212257385
    2. 'def' → logprob: -1.7201156616210938
    3. '       ' → logprob: -2.4701156616210938
    4. 'dist' → logprob: -2.7201156616210938
    5. '   ' → logprob: -2.8451156616210938
    6. '.' → logprob: -3.0951156616210938
    7. '():' → logprob: -3.8451156616210938
    8. '):' → logprob: -4.095115661621094
    9. '
' → logprob: -5.095115661621094
    10. '_dist' → logprob: -5.220115661621094

Token 358: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7183486819267273
    2. '<|end|>' → logprob: -0.8433486819267273
    3. '<|end|>' → logprob: -3.218348741531372
    4. '       ' → logprob: -3.593348741531372
    5. '.' → logprob: -5.843348503112793
    6. ',' → logprob: -6.343348503112793
    7. '        ' → logprob: -6.343348503112793
    8. '            ' → logprob: -6.843348503112793
    9. '        
' → logprob: -7.093348503112793
    10. '            
' → logprob: -7.093348503112793

Token 359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022828424349427223
    2. '       ' → logprob: -4.147828578948975
    3. '            
' → logprob: -6.522828578948975
    4. '   ' → logprob: -6.772828578948975
    5. '<|end|>' → logprob: -6.772828578948975
    6. '    
' → logprob: -7.772828578948975
    7. 'import' → logprob: -8.272828102111816
    8. '    ' → logprob: -8.397828102111816
    9. '        
' → logprob: -8.522828102111816
    10. 'def' → logprob: -8.647828102111816

Token 360: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1713526248931885
    2. '       ' → logprob: -1.7963526248931885
    3. '           ' → logprob: -2.0463526248931885
    4. 'pass' → logprob: -2.2963526248931885
    5. 'import' → logprob: -2.4213526248931885
    6. 'dist' → logprob: -3.1713526248931885
    7. 'clusters' → logprob: -3.2963526248931885
    8. '#' (adapté à ' #') → logprob: -3.4213526248931885
    9. 'from' → logprob: -3.6713526248931885
    10. 'if' → logprob: -3.9213526248931885

Token 361: ' We' (ID: 1416)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -1.156759262084961
    2. 'n' → logprob: -2.031759262084961
    3. 'dist' → logprob: -2.031759262084961
    4. '#' → logprob: -2.656759262084961
    5. 'if' → logprob: -2.781759262084961
    6. 'from' → logprob: -2.906759262084961
    7. '       ' → logprob: -3.406759262084961
    8. 'pass' → logprob: -3.406759262084961
    9. 'import' → logprob: -3.531759262084961
    10. 'return' → logprob: -3.781759262084961

Token 362: ' implement' (ID: 6365)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.6105924844741821
    2. 'continue' → logprob: -1.8605924844741821
    3. 'return' → logprob: -2.2355923652648926
    4. 'def' → logprob: -2.2355923652648926
    5. ' will' → logprob: -2.4855923652648926
    6. ' return' → logprob: -2.8605923652648926
    7. ' can' → logprob: -2.9855923652648926
    8. '       ' → logprob: -2.9855923652648926
    9. ''ll' → logprob: -2.9855923652648926
    10. 'import' → logprob: -4.110592365264893

Token 363: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8298542499542236
    2. ' the' → logprob: -1.7048542499542236
    3. '           ' → logprob: -2.3298542499542236
    4. 'the' → logprob: -2.3298542499542236
    5. ' def' → logprob: -2.8298542499542236
    6. '       ' → logprob: -3.0798542499542236
    7. 'self' → logprob: -3.4548542499542236
    8. ' a' → logprob: -3.8298542499542236
    9. '   ' → logprob: -4.9548540115356445
    10. ' self' → logprob: -5.4548540115356445

Token 364: ' "' (ID: 392)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5950031280517578
    2. 'next' → logprob: -1.3450031280517578
    3. ' next' → logprob: -2.595003128051758
    4. 'if' → logprob: -3.845003128051758
    5. '#' → logprob: -4.345003128051758
    6. 'rest' → logprob: -4.470003128051758
    7. 'dist' → logprob: -4.720003128051758
    8. 'add' → logprob: -4.845003128051758
    9. 'class' → logprob: -5.595003128051758
    10. ' code' → logprob: -5.595003128051758

Token 365: 'Add' (ID: 2578)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.40806907415390015
    2. 'f' → logprob: -3.033069133758545
    3. 'def' → logprob: -3.033069133758545
    4. 'if' → logprob: -3.408069133758545
    5. 'while' → logprob: -3.408069133758545
    6. 'nj' → logprob: -3.408069133758545
    7. 'neighbor' → logprob: -3.658069133758545
    8. 'build' → logprob: -3.658069133758545
    9. '#' → logprob: -4.033069133758545
    10. 'dist' → logprob: -4.908069133758545

Token 366: 'itive' (ID: 4171)
  Prédit: 'itive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itive' → logprob: -0.0004037402104586363
    2. 'itve' → logprob: -9.00040340423584
    3. '-' → logprob: -9.25040340423584
    4. 'ative' → logprob: -10.25040340423584
    5. '   ' → logprob: -10.62540340423584
    6. 'ITIVE' → logprob: -10.75040340423584
    7. 'ed' → logprob: -11.00040340423584
    8. '_' → logprob: -11.50040340423584
    9. '```' → logprob: -11.87540340423584
    10. 'tree' → logprob: -12.12540340423584

Token 367: ' Tree' (ID: 14224)
  Prédit: 'Phy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Phy' → logprob: -0.006939971353858709
    2. 'phy' → logprob: -5.506939888000488
    3. '_phy' → logprob: -6.006939888000488
    4. ' phy' → logprob: -8.256939888000488
    5. 'Ph' → logprob: -10.506939888000488
    6. 'Tree' → logprob: -10.631939888000488
    7. '_PHY' → logprob: -11.131939888000488
    8. '

' → logprob: -11.756939888000488
    9. '-' → logprob: -12.131939888000488
    10. '   ' → logprob: -12.256939888000488

Token 368: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7658532857894897
    2. ' Reconstruction' → logprob: -1.6408532857894897
    3. 'Re' → logprob: -2.0158534049987793
    4. 'Phy' → logprob: -2.6408534049987793
    5. ' method' → logprob: -2.7658534049987793
    6. 'Method' → logprob: -4.390853404998779
    7. ' algorithm' → logprob: -4.390853404998779
    8. 'Construction' → logprob: -4.765853404998779
    9. 'Algorithm' → logprob: -4.765853404998779
    10. 'method' → logprob: -5.515853404998779

Token 369: ' construction' (ID: 9770)
  Prédit: ' reconstruction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reconstruction' → logprob: -0.37842193245887756
    2. ' method' → logprob: -1.5034219026565552
    3. ' algorithm' → logprob: -3.3784220218658447
    4. 'def' → logprob: -4.628421783447266
    5. '_re' → logprob: -4.878421783447266
    6. 're' → logprob: -4.878421783447266
    7. '       ' → logprob: -4.878421783447266
    8. ' construction' → logprob: -5.003421783447266
    9. '   ' → logprob: -5.628421783447266
    10. ' Reconstruction' → logprob: -5.753421783447266

Token 370: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32394662499427795
    2. '           ' → logprob: -1.9489465951919556
    3. 'def' → logprob: -3.448946714401245
    4. '   ' → logprob: -3.698946714401245
    5. ':' → logprob: -4.073946475982666
    6. '.' → logprob: -4.198946475982666
    7. '(self' → logprob: -4.198946475982666
    8. '()' → logprob: -4.323946475982666
    9. 'from' → logprob: -6.323946475982666
    10. ' method' → logprob: -6.448946475982666

Token 371: ' per' (ID: 777)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32066139578819275
    2. ' follows' → logprob: -2.0706613063812256
    3. ' def' → logprob: -2.8206613063812256
    4. '           ' → logprob: -3.0706613063812256
    5. '       ' → logprob: -4.320661544799805
    6. ' described' → logprob: -4.320661544799805
    7. '   ' → logprob: -6.070661544799805
    8. ' in' → logprob: -6.195661544799805
    9. ' a' → logprob: -6.320661544799805
    10. 'per' → logprob: -6.570661544799805

Token 372: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2688170373439789
    2. 'F' → logprob: -3.2688169479370117
    3. 'B' → logprob: -3.5188169479370117
    4. ' the' → logprob: -3.6438169479370117
    5. 'Far' → logprob: -4.143816947937012
    6. '
' → logprob: -4.393816947937012
    7. 'neighbor' → logprob: -4.393816947937012
    8. '#' → logprob: -4.518816947937012
    9. 'up' → logprob: -4.768816947937012
    10. 'def' → logprob: -5.018816947937012

Token 373: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9716638326644897
    2. 'distance' → logprob: -2.4716639518737793
    3. 'code' → logprob: -2.5966639518737793
    4. 'add' → logprob: -2.7216639518737793
    5. 'problem' → logprob: -2.7216639518737793
    6. 'input' → logprob: -2.9716639518737793
    7. 'neighbor' → logprob: -2.9716639518737793
    8. 'next' → logprob: -2.9716639518737793
    9. 'user' → logprob: -3.0966639518737793
    10. '#' → logprob: -3.2216639518737793

Token 374: ''s' (ID: 885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10728700459003448
    2. '           ' → logprob: -3.4822869300842285
    3. ':' → logprob: -3.7322869300842285
    4. '   ' → logprob: -4.1072869300842285
    5. '        
' → logprob: -4.8572869300842285
    6. '.' → logprob: -4.8572869300842285
    7. 'def' → logprob: -5.6072869300842285
    8. '
' → logprob: -6.1072869300842285
    9. ',' → logprob: -6.4822869300842285
    10. '<|end|>' → logprob: -6.7322869300842285

Token 375: ' logic' (ID: 18485)
  Prédit: 'description'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'description' → logprob: -0.5693603157997131
    2. 'statement' → logprob: -1.9443602561950684
    3. ' statement' → logprob: -2.3193602561950684
    4. ' description' → logprob: -2.3193602561950684
    5. 'spec' → logprob: -3.3193602561950684
    6. 'standard' → logprob: -4.194360256195068
    7. ' specification' → logprob: -4.319360256195068
    8. 'name' → logprob: -5.319360256195068
    9. 'definition' → logprob: -5.319360256195068
    10. ' standard' → logprob: -5.819360256195068

Token 376: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4266575574874878
    2. ':' → logprob: -2.1766576766967773
    3. '           ' → logprob: -2.4266576766967773
    4. '<|end|>' → logprob: -3.0516576766967773
    5. '   ' → logprob: -3.5516576766967773
    6. '<|end|>' → logprob: -3.8016576766967773
    7. '.' → logprob: -4.551657676696777
    8. ',' → logprob: -4.801657676696777
    9. '        
' → logprob: -5.051657676696777
    10. '    
' → logprob: -5.551657676696777

Token 377: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5743415951728821
    2. '           ' → logprob: -1.0743415355682373
    3. '        
' → logprob: -2.6993415355682373
    4. '
' → logprob: -5.074341773986816
    5. '            
' → logprob: -5.199341773986816
    6. '        ' → logprob: -5.324341773986816
    7. '    
' → logprob: -5.449341773986816
    8. '    ' → logprob: -6.574341773986816
    9. ' 
' → logprob: -6.824341773986816
    10. ' ' → logprob: -7.074341773986816

Token 378: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.555140495300293
    2. 'clusters' → logprob: -1.930140495300293
    3. '           ' → logprob: -2.305140495300293
    4. 'pass' → logprob: -2.430140495300293
    5. ' n' → logprob: -2.555140495300293
    6. 'dist' → logprob: -2.680140495300293
    7. 'import' → logprob: -2.680140495300293
    8. '       ' → logprob: -3.180140495300293
    9. 'return' → logprob: -3.430140495300293
    10. 'from' → logprob: -3.430140495300293

Token 379: ' Initialize' (ID: 19496)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.4672919809818268
    2. 'dist' → logprob: -2.217292070388794
    3. 'if' → logprob: -3.092292070388794
    4. 'n' → logprob: -3.342292070388794
    5. 'def' → logprob: -3.717292070388794
    6. 'import' → logprob: -3.842292070388794
    7. '       ' → logprob: -4.092291831970215
    8. 'nodes' → logprob: -4.217291831970215
    9. ' clusters' → logprob: -4.217291831970215
    10. 'cluster' → logprob: -4.342291831970215

Token 380: ' leaves' (ID: 15657)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.01673469878733158
    2. ' clusters' → logprob: -4.266734600067139
    3. '       ' → logprob: -7.016734600067139
    4. 'cluster' → logprob: -7.641734600067139
    5. '   ' → logprob: -8.016735076904297
    6. 'import' → logprob: -8.516735076904297
    7. 'nodes' → logprob: -8.641735076904297
    8. 'cl' → logprob: -9.141735076904297
    9. 'dist' → logprob: -9.516735076904297
    10. 'self' → logprob: -9.766735076904297

Token 381: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2658170759677887
    2. '_clusters' → logprob: -1.5158170461654663
    3. '_nodes' → logprob: -5.390817165374756
    4. '_sets' → logprob: -5.765817165374756
    5. 'clusters' → logprob: -6.015817165374756
    6. 's' → logprob: -6.515817165374756
    7. '=' → logprob: -7.265817165374756
    8. '   ' → logprob: -7.390817165374756
    9. ',' → logprob: -8.640816688537598
    10. 'sets' → logprob: -9.140816688537598

Token 382: ' clusters' (ID: 51310)
  Prédit: '[{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[{' → logprob: -0.09148597717285156
    2. 'clusters' → logprob: -2.5914859771728516
    3. '[[' → logprob: -4.716485977172852
    4. '{' → logprob: -5.841485977172852
    5. ' [{' → logprob: -7.966485977172852
    6. '[' → logprob: -8.466485977172852
    7. ' clusters' → logprob: -10.841485977172852
    8. '[self' → logprob: -10.966485977172852
    9. 'nodes' → logprob: -11.091485977172852
    10. 'self' → logprob: -11.591485977172852

Token 383: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40395641326904297
    2. 'clusters' → logprob: -1.653956413269043
    3. ' clusters' → logprob: -2.903956413269043
    4. ' =' → logprob: -3.028956413269043
    5. ':' → logprob: -3.778956413269043
    6. ',' → logprob: -5.278956413269043
    7. '       ' → logprob: -5.528956413269043
    8. '=' → logprob: -6.403956413269043
    9. '_clusters' → logprob: -6.528956413269043
    10. '   ' → logprob: -7.278956413269043

Token 384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14072783291339874
    2. ' clusters' → logprob: -2.7657277584075928
    3. 'clusters' → logprob: -2.8907277584075928
    4. ',' → logprob: -5.390727996826172
    5. '       ' → logprob: -5.890727996826172
    6. ':' → logprob: -6.140727996826172
    7. ' =' → logprob: -6.640727996826172
    8. ' with' → logprob: -7.515727996826172
    9. '_clusters' → logprob: -7.765727996826172
    10. ' and' → logprob: -8.265727996826172

Token 385: ' clusters' (ID: 51310)
  Prédit: ' clusters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -0.5374518036842346
    2. '           ' → logprob: -1.5374517440795898
    3. 'clusters' (adapté à ' clusters') → logprob: -1.6624517440795898
    4. '       ' → logprob: -4.78745174407959
    5. '   ' → logprob: -6.91245174407959
    6. 'import' → logprob: -7.66245174407959
    7. ' self' → logprob: -7.91245174407959
    8. 'cluster' → logprob: -8.28745174407959
    9. '_clusters' → logprob: -9.03745174407959
    10. 'self' → logprob: -9.41245174407959

Token 386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. '=[]' → logprob: -15.943147659301758
    4. '   ' → logprob: -16.568147659301758
    5. '=[' → logprob: -16.818147659301758
    6. '＝' → logprob: -16.943147659301758
    7. ':' → logprob: -17.943147659301758
    8. '=[[' → logprob: -18.193147659301758
    9. ' ' → logprob: -18.318147659301758
    10. '=[]
' → logprob: -18.818147659301758

Token 387: ' [{' (ID: 35099)
  Prédit: '[{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[{' → logprob: -0.0008286866941489279
    2. '{' → logprob: -7.750828742980957
    3. '[[' → logprob: -8.000828742980957
    4. '[' → logprob: -10.375828742980957
    5. ' [{' → logprob: -10.375828742980957
    6. '{{' → logprob: -15.500828742980957
    7. ' {' → logprob: -17.50082778930664
    8. '{id' → logprob: -17.87582778930664
    9. '([{' → logprob: -18.00082778930664
    10. '{i' → logprob: -18.00082778930664

Token 388: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.4121114822482923e-06
    2. ' i' → logprob: -13.500003814697266
    3. 'k' → logprob: -14.625003814697266
    4. 'c' → logprob: -15.125003814697266
    5. '   ' → logprob: -15.125003814697266
    6. '(i' → logprob: -15.375003814697266
    7. '{i' → logprob: -15.375003814697266
    8. '0' → logprob: -15.750003814697266
    9. 'x' → logprob: -16.500003814697266
    10. '}' → logprob: -16.625003814697266

Token 389: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0005218160222284496
    2. 'for' → logprob: -7.750521659851074
    3. ' for' → logprob: -9.500521659851074
    4. ' }' → logprob: -11.125521659851074
    5. '   ' → logprob: -14.375521659851074
    6. ']' → logprob: -14.875521659851074
    7. 'i' → logprob: -15.125521659851074
    8. '}
' → logprob: -16.12552261352539
    9. ' ' → logprob: -16.75052261352539
    10. ')' → logprob: -16.75052261352539

Token 390: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09009625017642975
    2. 'for' → logprob: -2.4650962352752686
    3. '}' → logprob: -6.965096473693848
    4. '           ' → logprob: -9.840096473693848
    5. ']' → logprob: -10.340096473693848
    6. ',' → logprob: -10.465096473693848
    7. '   ' → logprob: -10.465096473693848
    8. ' ' → logprob: -10.590096473693848
    9. '       ' → logprob: -10.965096473693848
    10. ')' → logprob: -11.965096473693848

Token 391: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024763736873865128
    2. ' i' → logprob: -6.002476215362549
    3. 'range' → logprob: -14.377476692199707
    4. ' range' → logprob: -16.25247573852539
    5. '	i' → logprob: -16.62747573852539
    6. ' ' → logprob: -17.00247573852539
    7. '   ' → logprob: -18.25247573852539
    8. '(i' → logprob: -18.75247573852539
    9. '  ' → logprob: -18.75247573852539
    10. '
' → logprob: -19.00247573852539

Token 392: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01045543234795332
    2. 'in' → logprob: -4.63545560836792
    3. 'i' → logprob: -7.51045560836792
    4. ' i' → logprob: -8.885455131530762
    5. ' ' → logprob: -12.135455131530762
    6. 'range' → logprob: -12.135455131530762
    7. ' range' → logprob: -14.260455131530762
    8. 's' → logprob: -14.510455131530762
    9. '   ' → logprob: -15.260455131530762
    10. 'for' → logprob: -15.635455131530762

Token 393: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. 'self' → logprob: -19.75247573852539
    4. '(range' → logprob: -20.00247573852539
    5. ' ' → logprob: -20.25247573852539
    6. '   ' → logprob: -20.87747573852539
    7. '	range' → logprob: -20.87747573852539
    8. 'i' → logprob: -21.25247573852539
    9. '[' → logprob: -21.87747573852539
    10. 'Range' → logprob: -22.00247573852539

Token 394: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003466673369985074
    2. 'self' → logprob: -8.000347137451172
    3. '(' → logprob: -12.500347137451172
    4. '(len' → logprob: -12.500347137451172
    5. '           ' → logprob: -13.125347137451172
    6. '   ' → logprob: -14.500347137451172
    7. '       ' → logprob: -15.250347137451172
    8. ' self' → logprob: -15.375347137451172
    9. '(
' → logprob: -15.500347137451172
    10. ' (' → logprob: -15.625347137451172

Token 395: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.1041145626222715e-05
    2. 'n' → logprob: -12.250011444091797
    3. 'self' → logprob: -12.875011444091797
    4. '.' → logprob: -13.000011444091797
    5. ' .' → logprob: -14.625011444091797
    6. '   ' → logprob: -15.375011444091797
    7. '_n' → logprob: -15.625011444091797
    8. '	n' → logprob: -15.750011444091797
    9. '.
' → logprob: -16.000011444091797
    10. '<n' → logprob: -17.375011444091797

Token 396: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.47837117314338684
    2. ']' → logprob: -0.9783711433410645
    3. '}]' → logprob: -5.8533711433410645
    4. ' ]' → logprob: -6.8533711433410645
    5. ']}' → logprob: -8.853371620178223
    6. ' }]' → logprob: -9.228371620178223
    7. ']]' → logprob: -10.103371620178223
    8. ']
' → logprob: -10.603371620178223
    9. '>]' → logprob: -11.228371620178223
    10. '])' → logprob: -11.353371620178223

Token 397: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061350349336862564
    2. '       ' → logprob: -3.6863503456115723
    3. '            
' → logprob: -4.811350345611572
    4. '<|end|>' → logprob: -4.936350345611572
    5. ',' → logprob: -5.436350345611572
    6. '<|end|>' → logprob: -6.061350345611572
    7. '
' → logprob: -6.311350345611572
    8. 'tokens' → logprob: -6.561350345611572
    9. ' tokens' → logprob: -6.686350345611572
    10. ')' → logprob: -6.936350345611572

Token 398: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4524383544921875
    2. 'dist' → logprob: -1.4524383544921875
    3. ' distances' → logprob: -3.2024383544921875
    4. '       ' → logprob: -3.5774383544921875
    5. 'while' → logprob: -4.0774383544921875
    6. 'distance' → logprob: -4.2024383544921875
    7. '   ' → logprob: -4.8274383544921875
    8. 'import' → logprob: -4.9524383544921875
    9. ' while' → logprob: -5.4524383544921875
    10. 'next' → logprob: -6.4524383544921875

Token 399: ' Initialize' (ID: 19496)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08899617940187454
    2. 'import' → logprob: -3.338996171951294
    3. 'd' → logprob: -3.713996171951294
    4. 'while' → logprob: -4.588996410369873
    5. ' dist' → logprob: -5.338996410369873
    6. 'from' → logprob: -6.213996410369873
    7. '           ' → logprob: -6.213996410369873
    8. ' import' → logprob: -6.838996410369873
    9. 'current' → logprob: -6.838996410369873
    10. 'distance' → logprob: -6.838996410369873

Token 400: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03697490319609642
    2. 'd' → logprob: -3.7869749069213867
    3. ' dist' → logprob: -5.661974906921387
    4. 'current' → logprob: -5.786974906921387
    5. 'distance' → logprob: -6.036974906921387
    6. 'cluster' → logprob: -6.661974906921387
    7. ' distances' → logprob: -7.661974906921387
    8. 'import' → logprob: -7.786974906921387
    9. 'new' → logprob: -8.161974906921387
    10. 'cur' → logprob: -8.286974906921387

Token 401: ' matrix' (ID: 12248)
  Prédit: '_matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.5895282626152039
    2. ' =' → logprob: -1.8395283222198486
    3. '=' → logprob: -2.0895283222198486
    4. 's' → logprob: -2.2145283222198486
    5. 'matrix' → logprob: -2.9645283222198486
    6. 'mat' → logprob: -7.5895280838012695
    7. ' ' → logprob: -7.8395280838012695
    8. ' matrix' → logprob: -8.08952808380127
    9. '_mat' → logprob: -8.08952808380127
    10. '   ' → logprob: -9.08952808380127

Token 402: ' between' (ID: 2870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09034088253974915
    2. '=' → logprob: -2.4653408527374268
    3. '           ' → logprob: -6.840341091156006
    4. 'dist' → logprob: -9.090340614318848
    5. 'd' → logprob: -9.215340614318848
    6. '   ' → logprob: -10.840340614318848
    7. ',' → logprob: -11.215340614318848
    8. 'matrix' → logprob: -11.715340614318848
    9. '            ' → logprob: -11.840340614318848
    10. ' dist' → logprob: -12.090340614318848

Token 403: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.018190208822488785
    2. ' clusters' → logprob: -4.018190383911133
    3. 'pairs' → logprob: -11.018190383911133
    4. 'cluster' → logprob: -11.518190383911133
    5. 'cl' → logprob: -12.143190383911133
    6. '   ' → logprob: -12.768190383911133
    7. 'nodes' → logprob: -13.643190383911133
    8. ' pairs' → logprob: -14.268190383911133
    9. 'all' → logprob: -14.268190383911133
    10. '_clusters' → logprob: -14.268190383911133

Token 404: ';' (ID: 26)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10517548024654388
    2. '=' → logprob: -2.355175495147705
    3. '           ' → logprob: -6.105175495147705
    4. 'dist' → logprob: -6.605175495147705
    5. 'd' → logprob: -7.730175495147705
    6. '   ' → logprob: -8.355175018310547
    7. 'clusters' → logprob: -8.480175018310547
    8. ' dist' → logprob: -9.480175018310547
    9. ',' → logprob: -9.730175018310547
    10. '       ' → logprob: -10.105175018310547

Token 405: ' same' (ID: 2684)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5674837827682495
    2. 'import' → logprob: -1.6924837827682495
    3. ' dist' → logprob: -2.317483901977539
    4. 'd' → logprob: -3.067483901977539
    5. 'cluster' → logprob: -3.317483901977539
    6. ' import' → logprob: -3.442483901977539
    7. '           ' → logprob: -4.317483901977539
    8. ' cluster' → logprob: -5.067483901977539
    9. ' distances' → logprob: -5.567483901977539
    10. ' d' → logprob: -5.567483901977539

Token 406: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.32700926065444946
    2. ' as' → logprob: -1.7020092010498047
    3. '           ' → logprob: -2.7020092010498047
    4. '   ' → logprob: -4.952009201049805
    5. '       ' → logprob: -5.077009201049805
    6. ' =' → logprob: -5.077009201049805
    7. '=' → logprob: -5.202009201049805
    8. 'dist' → logprob: -6.452009201049805
    9. 'distance' → logprob: -7.327009201049805
    10. '_dist' → logprob: -7.952009201049805

Token 407: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017331328708678484
    2. ' self' → logprob: -6.501733303070068
    3. '           ' → logprob: -8.87673282623291
    4. '[self' → logprob: -10.00173282623291
    5. 'dist' → logprob: -10.12673282623291
    6. '   ' → logprob: -13.12673282623291
    7. 'clusters' → logprob: -14.25173282623291
    8. '[' → logprob: -14.50173282623291
    9. 'the' → logprob: -14.75173282623291
    10. '               ' → logprob: -14.87673282623291

Token 408: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -5.872261317563243e-05
    2. 'dist' → logprob: -10.000059127807617
    3. ' .' → logprob: -12.125059127807617
    4. '.' → logprob: -12.500059127807617
    5. '.distance' → logprob: -12.750059127807617
    6. '	dist' → logprob: -14.375059127807617
    7. ' dist' → logprob: -15.875059127807617
    8. '_dist' → logprob: -16.250059127807617
    9. '   ' → logprob: -16.875059127807617
    10. '       ' → logprob: -17.000059127807617

Token 409: ' initially' (ID: 25998)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4910275340080261
    2. '           ' → logprob: -1.741027593612671
    3. 'dist' → logprob: -1.991027593612671
    4. '=' → logprob: -3.866027593612671
    5. '_dist' → logprob: -4.116027355194092
    6. '
' → logprob: -5.491027355194092
    7. 'distance' → logprob: -5.616027355194092
    8. '            
' → logprob: -5.866027355194092
    9. ' distances' → logprob: -5.866027355194092
    10. 'clusters' → logprob: -5.866027355194092

Token 410: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2200462371110916
    2. '
' → logprob: -2.345046281814575
    3. ' distances' → logprob: -3.220046281814575
    4. 'dist' → logprob: -3.720046281814575
    5. ',' → logprob: -4.470046043395996
    6. '            
' → logprob: -4.720046043395996
    7. 'distance' → logprob: -5.345046043395996
    8. ' dist' → logprob: -5.845046043395996
    9. '       ' → logprob: -6.095046043395996
    10. ':' → logprob: -6.970046043395996

Token 411: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010719765909016132
    2. '            
' → logprob: -4.8857197761535645
    3. '
' → logprob: -6.7607197761535645
    4. '            ' → logprob: -7.5107197761535645
    5. '       ' → logprob: -7.8857197761535645
    6. ',' → logprob: -8.010719299316406
    7. ')' → logprob: -9.385719299316406
    8. '          ' → logprob: -9.510719299316406
    9. '    
' → logprob: -9.635719299316406
    10. '<|end|>' → logprob: -9.760719299316406

Token 412: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.430971622467041
    2. 'import' → logprob: -2.055971622467041
    3. 'd' (adapté à ' d') → logprob: -2.430971622467041
    4. 'cluster' → logprob: -2.555971622467041
    5. '           ' → logprob: -3.305971622467041
    6. 'cl' → logprob: -5.180971622467041
    7. ' dist' → logprob: -5.805971622467041
    8. 'D' → logprob: -5.805971622467041
    9. 'clusters' → logprob: -6.680971622467041
    10. ' import' → logprob: -6.680971622467041

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14846858382225037
    2. 'ist' → logprob: -2.398468494415283
    3. 'ists' → logprob: -3.648468494415283
    4. '=' → logprob: -4.398468494415283
    5. '_matrix' → logprob: -5.523468494415283
    6. 'istance' → logprob: -6.898468494415283
    7. '_mat' → logprob: -6.898468494415283
    8. 'matrix' → logprob: -7.398468494415283
    9. '_clusters' → logprob: -7.773468494415283
    10. 'mat' → logprob: -7.773468494415283

Token 414: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.007581193465739489
    2. ' [' → logprob: -5.5075812339782715
    3. '[' → logprob: -5.7575812339782715
    4. 'self' → logprob: -8.007580757141113
    5. ' self' → logprob: -13.257580757141113
    6. '[list' → logprob: -13.257580757141113
    7. '   ' → logprob: -15.257580757141113
    8. '[row' → logprob: -15.507580757141113
    9. '[np' → logprob: -15.632580757141113
    10. '[[' → logprob: -16.25758171081543

Token 415: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0007248217007145286
    2. 'list' → logprob: -7.875724792480469
    3. 'self' → logprob: -8.250724792480469
    4. ' row' → logprob: -9.625724792480469
    5. 'r' → logprob: -12.125724792480469
    6. '[row' → logprob: -12.250724792480469
    7. '[' → logprob: -12.500724792480469
    8. '[self' → logprob: -13.125724792480469
    9. 'dist' → logprob: -15.000724792480469
    10. '   ' → logprob: -15.625724792480469

Token 416: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.00020389800192788243
    2. '.copy' → logprob: -8.500204086303711
    3. '[:' → logprob: -14.875204086303711
    4. '[' → logprob: -17.00020408630371
    5. 'copy' → logprob: -17.87520408630371
    6. ' for' → logprob: -18.62520408630371
    7. 'for' → logprob: -19.62520408630371
    8. '   ' → logprob: -20.87520408630371
    9. '[]' → logprob: -21.50020408630371
    10. '[...]' → logprob: -21.62520408630371

Token 417: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014182545244693756
    2. 'for' → logprob: -4.2641825675964355
    3. ']' → logprob: -11.514182090759277
    4. '[:]' → logprob: -12.139182090759277
    5. ')' → logprob: -13.514182090759277
    6. ' ' → logprob: -14.014182090759277
    7. '	for' → logprob: -14.264182090759277
    8. '           ' → logprob: -15.014182090759277
    9. ' ]' → logprob: -15.764182090759277
    10. '   ' → logprob: -15.889182090759277

Token 418: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0007698441040702164
    2. ' row' → logprob: -7.25076961517334
    3. 'self' → logprob: -9.87576961517334
    4. '(row' → logprob: -12.00076961517334
    5. 'r' → logprob: -14.75076961517334
    6. '	row' → logprob: -14.87576961517334
    7. 'dist' → logprob: -15.00076961517334
    8. '=row' → logprob: -15.12576961517334
    9. 'range' → logprob: -15.37576961517334
    10. '$row' → logprob: -15.87576961517334

Token 419: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3912225663661957
    2. 'in' → logprob: -1.141222596168518
    3. 'row' → logprob: -5.7662224769592285
    4. '(row' → logprob: -7.3912224769592285
    5. 'self' → logprob: -7.5162224769592285
    6. '           ' → logprob: -11.266222953796387
    7. 'd' → logprob: -11.391222953796387
    8. ' ' → logprob: -12.641222953796387
    9. 'range' → logprob: -12.891222953796387
    10. ' row' → logprob: -12.891222953796387

Token 420: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010926496179308742
    2. ' self' → logprob: -9.125109672546387
    3. 'd' → logprob: -17.25010871887207
    4. '(self' → logprob: -17.50010871887207
    5. '   ' → logprob: -17.62510871887207
    6. 'range' → logprob: -17.62510871887207
    7. '
' → logprob: -17.87510871887207
    8. ' ' → logprob: -17.87510871887207
    9. 'dist' → logprob: -18.37510871887207
    10. '           ' → logprob: -19.12510871887207

Token 421: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.011054890230298042
    2. 'dist' → logprob: -4.511054992675781
    3. 'self' → logprob: -13.261054992675781
    4. '	dist' → logprob: -13.511054992675781
    5. '.d' → logprob: -13.761054992675781
    6. '.n' → logprob: -14.636054992675781
    7. '_dist' → logprob: -14.761054992675781
    8. 'n' → logprob: -14.761054992675781
    9. 'ist' → logprob: -14.886054992675781
    10. '.next' → logprob: -15.011054992675781

Token 422: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011222377652302384
    2. '           ' → logprob: -7.37612247467041
    3. ' ]' → logprob: -8.25112247467041
    4. ']
' → logprob: -8.50112247467041
    5. '       ' → logprob: -10.50112247467041
    6. ']

' → logprob: -13.25112247467041
    7. ']
' → logprob: -14.50112247467041
    8. '   ' → logprob: -14.50112247467041
    9. '               ' → logprob: -14.87612247467041
    10. '`]' → logprob: -16.251121520996094

Token 423: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1883857250213623
    2. '           ' → logprob: -2.1883857250213623
    3. '<|end|>' → logprob: -3.0633857250213623
    4. '            
' → logprob: -5.313385963439941
    5. '<|end|>' → logprob: -5.438385963439941
    6. '    
' → logprob: -6.938385963439941
    7. '       ' → logprob: -7.563385963439941
    8. '\n' → logprob: -7.938385963439941
    9. ',
' → logprob: -8.438385963439941
    10. '        
' → logprob: -8.438385963439941

Token 425: ' copy' (ID: 5150)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8748928308486938
    2. ' ' → logprob: -1.6248928308486938
    3. '
' → logprob: -2.3748927116394043
    4. '            
' → logprob: -2.4998927116394043
    5. ' 
' → logprob: -3.2498927116394043
    6. ')' → logprob: -3.3748927116394043
    7. ']' → logprob: -3.8748927116394043
    8. '       ' → logprob: -4.124892711639404
    9. '<|end|>' → logprob: -4.249892711639404
    10. '    ' → logprob: -4.374892711639404

Token 426: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017057500779628754
    2. '       ' → logprob: -5.392057418823242
    3. '
' → logprob: -5.517057418823242
    4. '            
' → logprob: -5.517057418823242
    5. '<|end|>' → logprob: -6.392057418823242
    6. '    
' → logprob: -7.267057418823242
    7. '        
' → logprob: -7.642057418823242
    8. '<|end|>' → logprob: -8.267057418823242
    9. '   ' → logprob: -8.642057418823242
    10. '            ' → logprob: -8.892057418823242

Token 428: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18561717867851257
    2. ' while' → logprob: -2.310617208480835
    3. '       ' → logprob: -3.060617208480835
    4. 'while' → logprob: -5.060616970062256
    5. ' n' → logprob: -5.310616970062256
    6. '   ' → logprob: -5.935616970062256
    7. '            
' → logprob: -6.060616970062256
    8. '
' → logprob: -6.310616970062256
    9. ' for' → logprob: -6.435616970062256
    10. 'n' → logprob: -7.560616970062256

Token 429: ' We' (ID: 1416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.009895150549709797
    2. 'from' → logprob: -5.134895324707031
    3. 'import' → logprob: -6.009895324707031
    4. ' while' → logprob: -7.259895324707031
    5. 'cluster' → logprob: -8.384895324707031
    6. '       ' → logprob: -8.759895324707031
    7. 'for' → logprob: -9.009895324707031
    8. 'clusters' → logprob: -9.384895324707031
    9. 'size' → logprob: -9.509895324707031
    10. '           ' → logprob: -10.009895324707031

Token 430: ' track' (ID: 5290)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6720582246780396
    2. '       ' → logprob: -1.5470582246780396
    3. 'while' → logprob: -1.9220582246780396
    4. 'import' → logprob: -2.67205810546875
    5. ' while' → logprob: -4.42205810546875
    6. '   ' → logprob: -4.67205810546875
    7. ' =' → logprob: -5.17205810546875
    8. ' will' → logprob: -5.42205810546875
    9. 'will' → logprob: -5.42205810546875
    10. 'continue' → logprob: -5.54705810546875

Token 431: ' the' (ID: 290)
  Prédit: ' cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cluster' → logprob: -0.9006049633026123
    2. 'cluster' → logprob: -1.0256049633026123
    3. 'clusters' → logprob: -2.1506049633026123
    4. ' clusters' → logprob: -2.6506049633026123
    5. ' the' → logprob: -5.025605201721191
    6. ' active' → logprob: -5.275605201721191
    7. '   ' → logprob: -5.275605201721191
    8. 'active' → logprob: -6.150605201721191
    9. 'the' → logprob: -6.275605201721191
    10. 'parent' → logprob: -6.400605201721191

Token 432: ' nodes' (ID: 15749)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5984658002853394
    2. 'cluster' → logprob: -1.4734658002853394
    3. 'clusters' → logprob: -2.473465919494629
    4. 'parent' → logprob: -3.348465919494629
    5. 'import' → logprob: -3.473465919494629
    6. ' cluster' → logprob: -3.973465919494629
    7. ' while' → logprob: -4.348465919494629
    8. 'parents' → logprob: -4.848465919494629
    9. 'current' → logprob: -5.223465919494629
    10. 'active' → logprob: -5.223465919494629

Token 433: ' representing' (ID: 25389)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.38609445095062256
    2. ' =' → logprob: -2.261094570159912
    3. '_clusters' → logprob: -2.761094570159912
    4. '_in' → logprob: -3.136094570159912
    5. '_left' → logprob: -3.636094570159912
    6. '_remaining' → logprob: -3.886094570159912
    7. ',' → logprob: -4.386094570159912
    8. 'count' → logprob: -4.511094570159912
    9. '_used' → logprob: -4.761094570159912
    10. '_to' → logprob: -5.011094570159912

Token 434: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.15904301404953003
    2. ' clusters' → logprob: -2.659043073654175
    3. 'each' → logprob: -3.409043073654175
    4. 'the' → logprob: -3.409043073654175
    5. ' the' → logprob: -5.409042835235596
    6. ' each' → logprob: -5.659042835235596
    7. 'current' → logprob: -6.534042835235596
    8. ' current' → logprob: -7.784042835235596
    9. '#' → logprob: -8.409043312072754
    10. '   ' → logprob: -8.409043312072754

Token 435: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005183950997889042
    2. '=' → logprob: -6.130184173583984
    3. ',' → logprob: -6.505184173583984
    4. '_clusters' → logprob: -7.755184173583984
    5. '           ' → logprob: -8.005184173583984
    6. '   ' → logprob: -8.505184173583984
    7. ':' → logprob: -9.005184173583984
    8. '_nodes' → logprob: -9.255184173583984
    9. 'clusters' → logprob: -10.005184173583984
    10. '       ' → logprob: -10.880184173583984

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06414192169904709
    2. ' clusters' → logprob: -3.6891419887542725
    3. ' cluster' → logprob: -4.189141750335693
    4. ' tokens' → logprob: -5.189141750335693
    5. ' node' → logprob: -5.564141750335693
    6. 'clusters' → logprob: -5.814141750335693
    7. 'tokens' → logprob: -6.439141750335693
    8. ' nodes' → logprob: -6.564141750335693
    9. 'cluster' → logprob: -6.564141750335693
    10. ' current' → logprob: -6.689141750335693

Token 437: ' #' (ID: 1069)
  Prédit: ' cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cluster' → logprob: -0.24481447041034698
    2. 'cluster' → logprob: -2.244814395904541
    3. ' clusters' → logprob: -2.869814395904541
    4. ' nodes' → logprob: -3.994814395904541
    5. 'clusters' → logprob: -3.994814395904541
    6. ' node' → logprob: -4.994814395904541
    7. '           ' → logprob: -5.244814395904541
    8. 'nodes' → logprob: -5.869814395904541
    9. 'node' → logprob: -6.119814395904541
    10. '   ' → logprob: -8.8698148727417

Token 438: ' initially' (ID: 25998)
  Prédit: 'cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cluster' → logprob: -0.25388574600219727
    2. ' cluster' → logprob: -2.3788857460021973
    3. 'clusters' → logprob: -2.5038857460021973
    4. 'nodes' → logprob: -3.6288857460021973
    5. 'node' → logprob: -4.378885746002197
    6. ' clusters' → logprob: -5.378885746002197
    7. ' nodes' → logprob: -6.003885746002197
    8. '           ' → logprob: -6.503885746002197
    9. '   ' → logprob: -7.128885746002197
    10. ' node' → logprob: -7.628885746002197

Token 439: ' leaves' (ID: 15657)
  Prédit: ' cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cluster' → logprob: -1.3753230571746826
    2. 'cluster' → logprob: -1.7503230571746826
    3. 'nodes' → logprob: -1.8753230571746826
    4. ' nodes' → logprob: -1.8753230571746826
    5. 'node' → logprob: -2.8753230571746826
    6. '           ' → logprob: -3.2503230571746826
    7. ' node' → logprob: -3.5003230571746826
    8. ' clusters' → logprob: -3.6253230571746826
    9. 'clusters' → logprob: -3.7503230571746826
    10. ',' → logprob: -3.8753230571746826

Token 440: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028004586696624756
    2. '_nodes' → logprob: -4.0280046463012695
    3. '=' → logprob: -5.0280046463012695
    4. 's' → logprob: -6.5280046463012695
    5. ':' → logprob: -7.9030046463012695
    6. '   ' → logprob: -8.40300464630127
    7. ',' → logprob: -8.52800464630127
    8. '_clusters' → logprob: -9.15300464630127
    9. '_' → logprob: -9.27800464630127
    10. ')' → logprob: -9.40300464630127

Token 441: ' nodes' (ID: 15749)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.44658559560775757
    2. '[i' → logprob: -1.0715856552124023
    3. '[' → logprob: -5.071585655212402
    4. ' list' → logprob: -6.071585655212402
    5. '{i' → logprob: -6.196585655212402
    6. 'i' → logprob: -6.321585655212402
    7. '[list' → logprob: -6.321585655212402
    8. 'clusters' → logprob: -6.446585655212402
    9. '{' → logprob: -7.321585655212402
    10. '[{' → logprob: -8.196585655212402

Token 442: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.980610728263855
    2. ',' → logprob: -1.730610728263855
    3. ':' → logprob: -1.855610728263855
    4. ']' → logprob: -2.8556108474731445
    5. '<|end|>' → logprob: -2.9806108474731445
    6. '           ' → logprob: -3.3556108474731445
    7. ')' → logprob: -3.7306108474731445
    8. '[:]' → logprob: -4.1056108474731445
    9. 's' → logprob: -4.4806108474731445
    10. '<|end|>' → logprob: -4.6056108474731445

Token 443: '0' (ID: 15)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8581274747848511
    2. '=' → logprob: -1.358127474784851
    3. ' =' → logprob: -2.6081275939941406
    4. ':' → logprob: -2.8581275939941406
    5. '[' → logprob: -3.7331275939941406
    6. '=[' → logprob: -3.7331275939941406
    7. ',' → logprob: -3.7331275939941406
    8. 'for' → logprob: -3.8581275939941406
    9. 'in' → logprob: -4.233127593994141
    10. '   ' → logprob: -4.233127593994141

Token 444: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5423343777656555
    2. ' to' → logprob: -1.7923343181610107
    3. ' through' → logprob: -2.4173343181610107
    4. '..' → logprob: -2.7923343181610107
    5. ',
' → logprob: -3.0423343181610107
    6. 'to' → logprob: -3.9173343181610107
    7. 'through' → logprob: -4.91733455657959
    8. '...' → logprob: -5.04233455657959
    9. ' ,' → logprob: -5.41733455657959
    10. '   ' → logprob: -5.79233455657959

Token 445: 'n' (ID: 77)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17074233293533325
    2. ' self' → logprob: -1.9207422733306885
    3. '(self' → logprob: -4.670742511749268
    4. '   ' → logprob: -7.920742511749268
    5. 'n' → logprob: -8.67074203491211
    6. ' (' → logprob: -8.79574203491211
    7. '{' → logprob: -8.92074203491211
    8. '```' → logprob: -9.17074203491211
    9. '[self' → logprob: -9.79574203491211
    10. '
' → logprob: -11.04574203491211

Token 446: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011330267414450645
    2. ' -' → logprob: -4.5113301277160645
    3. '       ' → logprob: -9.386330604553223
    4. '   ' → logprob: -9.511330604553223
    5. '           ' → logprob: -9.636330604553223
    6. '1' → logprob: -11.636330604553223
    7. ')' → logprob: -11.761330604553223
    8. ',' → logprob: -12.011330604553223
    9. 'self' → logprob: -12.386330604553223
    10. '
' → logprob: -12.761330604553223

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.684157026233152e-05
    2. ' ' → logprob: -9.750077247619629
    3. '   ' → logprob: -11.625077247619629
    4. '
' → logprob: -13.125077247619629
    5. '2' → logprob: -13.500077247619629
    6. '```' → logprob: -13.500077247619629
    7. 'n' → logprob: -14.187577247619629
    8. '-' → logprob: -14.437577247619629
    9. '  ' → logprob: -14.937577247619629
    10. 'self' → logprob: -15.062577247619629

Token 448: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8716687560081482
    2. '           ' → logprob: -0.9966687560081482
    3. '            
' → logprob: -2.371668815612793
    4. '<|end|>' → logprob: -3.121668815612793
    5. ',' → logprob: -3.871668815612793
    6. '<|end|>' → logprob: -4.746668815612793
    7. '    
' → logprob: -4.996668815612793
    8. ' ' → logprob: -5.121668815612793
    9. '            ' → logprob: -5.246668815612793
    10. ' 
' → logprob: -5.496668815612793

Token 449: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.052806053310632706
    2. '            
' → logprob: -3.4278061389923096
    3. '
' → logprob: -5.4278059005737305
    4. ',' → logprob: -5.5528059005737305
    5. '<|end|>' → logprob: -5.5528059005737305
    6. '    
' → logprob: -6.9278059005737305
    7. '       ' → logprob: -7.1778059005737305
    8. ' and' → logprob: -7.3028059005737305
    9. ' ' → logprob: -7.3028059005737305
    10. '            ' → logprob: -7.8028059005737305

Token 450: ' cluster' (ID: 19723)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7166597843170166
    2. '           ' → logprob: -0.9666597843170166
    3. 'while' → logprob: -2.7166597843170166
    4. ' next' → logprob: -4.0916595458984375
    5. '       ' → logprob: -4.2166595458984375
    6. '            
' → logprob: -5.0916595458984375
    7. '
' → logprob: -5.3416595458984375
    8. ' for' → logprob: -5.8416595458984375
    9. '   ' → logprob: -6.0916595458984375
    10. 'While' → logprob: -6.4666595458984375

Token 451: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.01373207475990057
    2. '_ids' → logprob: -4.888731956481934
    3. '_indices' → logprob: -6.263731956481934
    4. '_sizes' → logprob: -6.388731956481934
    5. '_re' → logprob: -6.763731956481934
    6. '_repr' → logprob: -6.888731956481934
    7. '_node' → logprob: -8.888731956481934
    8. '_rep' → logprob: -10.138731956481934
    9. '_map' → logprob: -10.263731956481934
    10. '_idx' → logprob: -10.888731956481934

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380435548722744
    2. '=' → logprob: -3.28804349899292
    3. ' =[' → logprob: -14.288043975830078
    4. ' ' → logprob: -14.788043975830078
    5. ')' → logprob: -15.163043975830078
    6. '[' → logprob: -15.288043975830078
    7. 's' → logprob: -15.913043975830078
    8. ']' → logprob: -15.913043975830078
    9. '=[]' → logprob: -15.913043975830078
    10. ',' → logprob: -15.913043975830078

Token 453: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6176988482475281
    2. '[list' → logprob: -0.8676988482475281
    3. '[' → logprob: -3.867698907852173
    4. '[i' → logprob: -4.367698669433594
    5. ' [' → logprob: -5.617698669433594
    6. ' list' → logprob: -5.742698669433594
    7. '[self' → logprob: -7.992698669433594
    8. '[List' → logprob: -10.367698669433594
    9. '[_' → logprob: -10.992698669433594
    10. '   ' → logprob: -11.492698669433594

Token 454: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006361891864798963
    2. '{i' → logprob: -7.875636100769043
    3. '[i' → logprob: -8.750636100769043
    4. ' i' → logprob: -9.625636100769043
    5. '[' → logprob: -11.375636100769043
    6. '{' → logprob: -12.375636100769043
    7. 'set' → logprob: -12.500636100769043
    8. 'node' → logprob: -12.625636100769043
    9. ' [' → logprob: -12.750636100769043
    10. '   ' → logprob: -13.125636100769043

Token 455: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0055814022198319435
    2. 'for' → logprob: -5.505581378936768
    3. ']' → logprob: -6.630581378936768
    4. '           ' → logprob: -9.380581855773926
    5. ' ]' → logprob: -9.880581855773926
    6. ' ' → logprob: -11.005581855773926
    7. '       ' → logprob: -11.880581855773926
    8. '   ' → logprob: -11.880581855773926
    9. '            ' → logprob: -12.255581855773926
    10. '        ' → logprob: -12.380581855773926

Token 456: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00026169343618676066
    2. ' i' → logprob: -8.250261306762695
    3. 'range' → logprob: -15.625261306762695
    4. 'cluster' → logprob: -16.375261306762695
    5. ' ' → logprob: -16.750261306762695
    6. '  ' → logprob: -17.375261306762695
    7. ' range' → logprob: -17.500261306762695
    8. 'in' → logprob: -17.875261306762695
    9. '   ' → logprob: -18.000261306762695
    10. '	i' → logprob: -18.500261306762695

Token 457: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08987507969141006
    2. 'in' → logprob: -2.4648749828338623
    3. 'range' → logprob: -7.339875221252441
    4. ' range' → logprob: -8.339875221252441
    5. ' ' → logprob: -10.339875221252441
    6. 'i' → logprob: -11.589875221252441
    7. ' i' → logprob: -12.964875221252441
    8. '  ' → logprob: -13.464875221252441
    9. '   ' → logprob: -15.214875221252441
    10. '
' → logprob: -15.339875221252441

Token 458: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -20.00009536743164
    4. '   ' → logprob: -20.62509536743164
    5. ' ' → logprob: -20.87509536743164
    6. '  ' → logprob: -22.12509536743164
    7. '	range' → logprob: -22.37509536743164
    8. '_range' → logprob: -23.12509536743164
    9. '
' → logprob: -23.12509536743164
    10. '    ' → logprob: -23.75009536743164

Token 459: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005719788023270667
    2. 'self' → logprob: -7.500572204589844
    3. '(len' → logprob: -11.500572204589844
    4. '(' → logprob: -12.750572204589844
    5. '           ' → logprob: -12.750572204589844
    6. '   ' → logprob: -13.500572204589844
    7. ' (' → logprob: -14.625572204589844
    8. ' self' → logprob: -14.750572204589844
    9. '       ' → logprob: -15.000572204589844
    10. '               ' → logprob: -15.000572204589844

Token 460: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -3.047134305234067e-05
    2. 'n' → logprob: -10.750030517578125
    3. '.' → logprob: -12.250030517578125
    4. '_n' → logprob: -13.875030517578125
    5. ' .' → logprob: -14.000030517578125
    6. '.next' → logprob: -15.000030517578125
    7. '   ' → logprob: -15.125030517578125
    8. ')' → logprob: -15.500030517578125
    9. 'self' → logprob: -15.500030517578125
    10. ',n' → logprob: -15.500030517578125

Token 461: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002524768700823188
    2. ']' → logprob: -6.5025248527526855
    3. ')' → logprob: -7.1275248527526855
    4. '           ' → logprob: -9.377524375915527
    5. ' ]' → logprob: -9.377524375915527
    6. ' )' → logprob: -10.627524375915527
    7. '       ' → logprob: -11.127524375915527
    8. ')]
' → logprob: -12.252524375915527
    9. '   ' → logprob: -13.252524375915527
    10. '])' → logprob: -14.252524375915527

Token 462: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06715773791074753
    2. '       ' → logprob: -3.692157745361328
    3. '
' → logprob: -4.442157745361328
    4. '            
' → logprob: -4.692157745361328
    5. ' while' → logprob: -5.192157745361328
    6. '        
' → logprob: -5.817157745361328
    7. '    
' → logprob: -6.067157745361328
    8. '   ' → logprob: -6.692157745361328
    9. '<|end|>' → logprob: -6.692157745361328
    10. '    ' → logprob: -6.942157745361328

Token 463: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6704118847846985
    2. ' while' → logprob: -0.9204118847846985
    3. '           ' → logprob: -2.5454118251800537
    4. '       ' → logprob: -4.795412063598633
    5. '   ' → logprob: -6.670412063598633
    6. '
' → logprob: -7.045412063598633
    7. '            
' → logprob: -8.170412063598633
    8. 'n' → logprob: -8.295412063598633
    9. ' n' → logprob: -9.045412063598633
    10. 'for' → logprob: -9.170412063598633

Token 464: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4740810692310333
    2. ' len' → logprob: -0.9740810394287109
    3. ' ' → logprob: -13.224081039428711
    4. ' True' → logprob: -13.849081039428711
    5. '(len' → logprob: -14.224081039428711
    6. 'True' → logprob: -15.724081039428711
    7. ' any' → logprob: -15.724081039428711
    8. '	len' → logprob: -15.849081039428711
    9. '   ' → logprob: -16.97408103942871
    10. 'sum' → logprob: -17.47408103942871

Token 465: '(cl' (ID: 16811)
  Prédit: '(cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cl' → logprob: -0.0009761215187609196
    2. '(' → logprob: -7.250976085662842
    3. '(cluster' → logprob: -9.0009765625
    4. ' (' → logprob: -9.0009765625
    5. 'clusters' → logprob: -11.0009765625
    6. ' clusters' → logprob: -13.0009765625
    7. '(
' → logprob: -15.6259765625
    8. 'cl' → logprob: -16.1259765625
    9. ')' → logprob: -16.2509765625
    10. '	cl' → logprob: -17.0009765625

Token 466: 'usters' (ID: 26011)
  Prédit: 'usters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usters' → logprob: -9.186122770188376e-05
    2. 'uster' → logprob: -9.500091552734375
    3. '(' → logprob: -11.375091552734375
    4. '[' → logprob: -13.250091552734375
    5. 'sters' → logprob: -13.750091552734375
    6. 'uters' → logprob: -13.875091552734375
    7. 'ust' → logprob: -14.750091552734375
    8. 'clusters' → logprob: -14.750091552734375
    9. 'ustes' → logprob: -16.125091552734375
    10. '   ' → logprob: -16.375091552734375

Token 467: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17620840668678284
    2. '>' → logprob: -2.17620849609375
    3. ')' → logprob: -3.05120849609375
    4. ')>' → logprob: -7.42620849609375
    5. ' )' → logprob: -8.67620849609375
    6. '   ' → logprob: -12.05120849609375
    7. ' ' → logprob: -12.17620849609375
    8. '()>' → logprob: -12.92620849609375
    9. '[' → logprob: -13.80120849609375
    10. '()' → logprob: -14.17620849609375

Token 468: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6931638717651367
    2. ' >' → logprob: -0.6931638717651367
    3. '()>' → logprob: -12.068163871765137
    4. ' ' → logprob: -12.443163871765137
    5. '   ' → logprob: -12.818163871765137
    6. ')' → logprob: -13.318163871765137
    7. ')>' → logprob: -13.943163871765137
    8. '  ' → logprob: -14.568163871765137
    9. '()' → logprob: -15.193163871765137
    10. '[' → logprob: -15.193163871765137

Token 469: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.750021934509277
    4. '2' → logprob: -17.12502098083496
    5. '
' → logprob: -17.37502098083496
    6. '

' → logprob: -19.00002098083496
    7. '```' → logprob: -19.00002098083496
    8. '  ' → logprob: -19.12502098083496
    9. '１' → logprob: -19.62502098083496
    10. '>' → logprob: -19.75002098083496

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.500001907348633
    3. '2' → logprob: -14.750001907348633
    4. '
' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '

' → logprob: -17.250001907348633
    7. '```' → logprob: -17.625001907348633
    8. '0' → logprob: -18.437501907348633
    9. '  ' → logprob: -19.062501907348633
    10. '
' → logprob: -19.750001907348633

Token 471: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036239505279809237
    2. ':
' → logprob: -5.628623962402344
    3. '           ' → logprob: -12.003623962402344
    4. ',' → logprob: -12.128623962402344
    5. ' :' → logprob: -12.753623962402344
    6. '):' → logprob: -12.878623962402344
    7. ' and' → logprob: -13.128623962402344
    8. '[' → logprob: -13.753623962402344
    9. ':

' → logprob: -13.753623962402344
    10. ')' → logprob: -14.003623962402344

Token 472: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01954403519630432
    2. '           ' → logprob: -5.1445441246032715
    3. ' min' → logprob: -5.2695441246032715
    4. '                
' → logprob: -5.7695441246032715
    5. 'min' → logprob: -6.1445441246032715
    6. '            
' → logprob: -7.6445441246032715
    7. ' #' → logprob: -7.7695441246032715
    8. '   ' → logprob: -7.7695441246032715
    9. '
' → logprob: -7.8945441246032715
    10. '#' → logprob: -8.269543647766113

Token 473: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.021282972767949104
    2. '#' (adapté à ' #') → logprob: -4.271283149719238
    3. '               ' → logprob: -5.021283149719238
    4. ' min' → logprob: -8.271283149719238
    5. 'import' → logprob: -9.396283149719238
    6. 'best' → logprob: -9.771283149719238
    7. ' #' → logprob: -10.396283149719238
    8. '	min' → logprob: -11.396283149719238
    9. '   ' → logprob: -11.521283149719238
    10. 'm' → logprob: -11.521283149719238

Token 474: ' find' (ID: 1646)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0028983091469854116
    2. '#' → logprob: -6.002898216247559
    3. '               ' → logprob: -8.627898216247559
    4. 'import' → logprob: -9.377898216247559
    5. ' min' → logprob: -9.502898216247559
    6. 'best' → logprob: -10.127898216247559
    7. 'm' → logprob: -10.627898216247559
    8. ' #' → logprob: -12.627898216247559
    9. '   ' → logprob: -12.752898216247559
    10. '                   ' → logprob: -12.877898216247559

Token 475: ' pair' (ID: 10610)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09688974171876907
    2. 'u' → logprob: -2.7218897342681885
    3. ' min' → logprob: -4.096889972686768
    4. 'i' → logprob: -5.471889972686768
    5. ' u' → logprob: -5.846889972686768
    6. '   ' → logprob: -6.721889972686768
    7. 'the' → logprob: -7.221889972686768
    8. 'pair' → logprob: -8.84688949584961
    9. 'mi' → logprob: -8.84688949584961
    10. ' i' → logprob: -9.22188949584961

Token 476: ' of' (ID: 328)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6396960616111755
    2. ' ' → logprob: -2.0146961212158203
    3. ' i' → logprob: -2.3896961212158203
    4. ' u' → logprob: -2.6396961212158203
    5. 'with' → logprob: -3.0146961212158203
    6. ' with' → logprob: -3.0146961212158203
    7. 'i' → logprob: -4.13969612121582
    8. '<|end|>' → logprob: -4.38969612121582
    9. ' of' → logprob: -4.51469612121582
    10. 'u' → logprob: -4.51469612121582

Token 477: ' distinct' (ID: 16913)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.10592259466648102
    2. ' clusters' → logprob: -2.3559226989746094
    3. 'distinct' → logprob: -6.355922698974609
    4. ' distinct' → logprob: -6.355922698974609
    5. 'i' → logprob: -7.480922698974609
    6. '_clusters' → logprob: -8.35592269897461
    7. 'cluster' → logprob: -8.35592269897461
    8. ' i' → logprob: -8.60592269897461
    9. 'cl' → logprob: -8.85592269897461
    10. 'indices' → logprob: -8.85592269897461

Token 478: ' clusters' (ID: 51310)
  Prédit: ' clusters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -0.43057432770729065
    2. 'clusters' → logprob: -1.0555742979049683
    3. ' i' → logprob: -7.180574417114258
    4. '_clusters' → logprob: -7.680574417114258
    5. 'i' → logprob: -7.930574417114258
    6. ' ' → logprob: -9.555574417114258
    7. 'cluster' → logprob: -9.805574417114258
    8. ' cluster' → logprob: -10.430574417114258
    9. 'cl' → logprob: -10.555574417114258
    10. ',' → logprob: -10.930574417114258

Token 479: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.9083145260810852
    2. ',' → logprob: -1.6583144664764404
    3. ' u' → logprob: -1.6583144664764404
    4. ' i' → logprob: -2.6583144664764404
    5. 'with' → logprob: -3.0333144664764404
    6. 'u' → logprob: -4.0333147048950195
    7. ' (' → logprob: -4.1583147048950195
    8. ' ' → logprob: -4.2833147048950195
    9. 'i' → logprob: -4.4083147048950195
    10. ' ,' → logprob: -5.0333147048950195

Token 480: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.3439754545688629
    2. 'minimal' → logprob: -2.34397554397583
    3. 'minimum' → logprob: -2.34397554397583
    4. ' minimum' → logprob: -2.59397554397583
    5. 'min' → logprob: -4.21897554397583
    6. ' the' → logprob: -4.96897554397583
    7. 'the' → logprob: -6.34397554397583
    8. ' min' → logprob: -7.84397554397583
    9. 'i' → logprob: -8.718975067138672
    10. ' ' → logprob: -9.218975067138672

Token 481: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.26939019560813904
    2. ' distance' → logprob: -1.6443902254104614
    3. '_distance' → logprob: -3.769390106201172
    4. 'dist' → logprob: -4.144390106201172
    5. '_dist' → logprob: -6.269390106201172
    6. 'd' → logprob: -7.019390106201172
    7. ' d' → logprob: -8.519390106201172
    8. ' ' → logprob: -8.769390106201172
    9. 'min' → logprob: -8.894390106201172
    10. ' _' → logprob: -9.519390106201172

Token 482: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7767388820648193
    2. ' ' → logprob: -1.9017388820648193
    3. '<|end|>' → logprob: -1.9017388820648193
    4. '                
' → logprob: -2.4017388820648193
    5. '                ' → logprob: -2.5267388820648193
    6. ' (' → logprob: -4.776739120483398
    7. '<|end|>' → logprob: -4.776739120483398
    8. ',' → logprob: -5.276739120483398
    9. '[' → logprob: -5.526739120483398
    10. '  
' → logprob: -5.651739120483398

Token 483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06337856501340866
    2. '                
' → logprob: -3.5633785724639893
    3. ',' → logprob: -4.06337833404541
    4. '                ' → logprob: -5.06337833404541
    5. ' ' → logprob: -6.68837833404541
    6. ' =' → logprob: -6.81337833404541
    7. ' (' → logprob: -6.81337833404541
    8. '[' → logprob: -6.93837833404541
    9. '                   ' → logprob: -7.18837833404541
    10. ' ,' → logprob: -7.68837833404541

Token 484: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.3619653880596161
    2. ' min' → logprob: -1.2369654178619385
    3. '               ' → logprob: -4.736965179443359
    4. '
' → logprob: -6.986965179443359
    5. '(min' → logprob: -7.236965179443359
    6. 'm' → logprob: -7.361965179443359
    7. '                
' → logprob: -7.986965179443359
    8. 'i' → logprob: -8.23696517944336
    9. ' i' → logprob: -8.48696517944336
    10. ' 
' → logprob: -8.86196517944336

Token 485: '_val' (ID: 13694)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1588035821914673
    2. '_pair' → logprob: -1.4088035821914673
    3. '_i' → logprob: -1.5338035821914673
    4. '_dist' → logprob: -1.6588035821914673
    5. '_u' → logprob: -4.158803462982178
    6. '_distance' → logprob: -4.158803462982178
    7. '_d' → logprob: -5.908803462982178
    8. ' _' → logprob: -8.158803939819336
    9. '_cluster' → logprob: -8.158803939819336
    10. '_pairs' → logprob: -8.408803939819336

Token 486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09921683371067047
    2. ',' → logprob: -2.724216938018799
    3. '=' → logprob: -3.724216938018799
    4. ' ,' → logprob: -5.599216938018799
    5. '_idx' → logprob: -8.34921646118164
    6. '               ' → logprob: -8.59921646118164
    7. ' ' → logprob: -8.97421646118164
    8. '_' → logprob: -8.97421646118164
    9. '   ' → logprob: -9.59921646118164
    10. '                ' → logprob: -9.97421646118164

Token 487: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0007379194721579552
    2. ' float' → logprob: -7.250738143920898
    3. '10' → logprob: -10.500738143920898
    4. 'None' → logprob: -15.000738143920898
    5. '   ' → logprob: -17.0007381439209
    6. '	float' → logprob: -17.6257381439209
    7. '(float' → logprob: -17.7507381439209
    8. ' ' → logprob: -18.1257381439209
    9. ' None' → logprob: -18.5007381439209
    10. 'int' → logprob: -18.6257381439209

Token 488: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.6087021473795176e-05
    2. '10' → logprob: -10.000045776367188
    3. ' float' → logprob: -14.500045776367188
    4. 'None' → logprob: -17.125045776367188
    5. 'int' → logprob: -19.125045776367188
    6. '(float' → logprob: -19.750045776367188
    7. '1' → logprob: -19.875045776367188
    8. 'sys' → logprob: -20.000045776367188
    9. '浮' → logprob: -21.500045776367188
    10. '	float' → logprob: -21.750045776367188

Token 489: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.22223372757434845
    2. '**' → logprob: -1.847233772277832
    3. '7' → logprob: -3.472233772277832
    4. '10' → logprob: -4.847233772277832
    5. '8' → logprob: -6.847233772277832
    6. ' **' → logprob: -6.847233772277832
    7. '15' → logprob: -8.722233772277832
    8. '100' → logprob: -9.472233772277832
    9. '999' → logprob: -9.472233772277832
    10. '```' → logprob: -9.597233772277832

Token 490: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.08597327023744583
    2. '15' → logprob: -2.8359732627868652
    3. '10' → logprob: -3.9609732627868652
    4. '7' → logprob: -5.710973262786865
    5. '18' → logprob: -7.460973262786865
    6. '12' → logprob: -7.960973262786865
    7. '8' → logprob: -8.085973739624023
    8. '20' → logprob: -9.960973739624023
    9. '14' → logprob: -10.335973739624023
    10. '16' → logprob: -10.835973739624023

Token 491: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03961464762687683
    2. '<|end|>' → logprob: -3.664614677429199
    3. '               ' → logprob: -5.164614677429199
    4. '  
' → logprob: -6.039614677429199
    5. '                
' → logprob: -6.539614677429199
    6. '    
' → logprob: -7.039614677429199
    7. '<|end|>' → logprob: -7.164614677429199
    8. ' 
' → logprob: -7.539614677429199
    9. '+' → logprob: -8.1646146774292
    10. '
' → logprob: -8.6646146774292

Token 492: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17407380044460297
    2. ',' → logprob: -2.0490736961364746
    3. '                
' → logprob: -5.174073696136475
    4. ' for' → logprob: -5.299073696136475
    5. 'for' → logprob: -5.424073696136475
    6. '
' → logprob: -5.424073696136475
    7. '           ' → logprob: -6.049073696136475
    8. 'min' → logprob: -6.549073696136475
    9. ',
' → logprob: -6.799073696136475
    10. '                   ' → logprob: -7.049073696136475

Token 493: ' min' (ID: 1349)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8112555742263794
    2. 'min' (adapté à ' min') → logprob: -0.9362555742263794
    3. '               ' → logprob: -2.81125545501709
    4. ' u' → logprob: -3.06125545501709
    5. 'i' → logprob: -3.68625545501709
    6. ' min' → logprob: -4.18625545501709
    7. 'for' → logprob: -4.93625545501709
    8. ' for' → logprob: -6.18625545501709
    9. 'pair' → logprob: -6.43625545501709
    10. ' i' → logprob: -6.81125545501709

Token 494: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.2663232982158661
    2. '_pair' → logprob: -1.5163233280181885
    3. '_u' → logprob: -4.891323089599609
    4. '_' → logprob: -5.891323089599609
    5. '_pairs' → logprob: -6.266323089599609
    6. '_val' → logprob: -6.641323089599609
    7. 'i' → logprob: -7.766323089599609
    8. '_j' → logprob: -8.76632308959961
    9. 'u' → logprob: -10.01632308959961
    10. '_p' → logprob: -10.14132308959961

Token 495: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46505242586135864
    2. ' =' → logprob: -1.3400523662567139
    3. '=' → logprob: -2.215052366256714
    4. ' ,' → logprob: -7.090052604675293
    5. ',j' → logprob: -11.090052604675293
    6. ',min' → logprob: -11.090052604675293
    7. ',
' → logprob: -11.715052604675293
    8. ' ' → logprob: -11.840052604675293
    9. ',n' → logprob: -12.215052604675293
    10. ' =
' → logprob: -12.340052604675293

Token 496: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5407098531723022
    2. '-' → logprob: -1.0407098531723022
    3. 'min' → logprob: -3.040709972381592
    4. 'None' → logprob: -4.665709972381592
    5. ' -' → logprob: -5.290709972381592
    6. ' ' → logprob: -7.165709972381592
    7. ' None' → logprob: -7.290709972381592
    8. ' min' → logprob: -7.540709972381592
    9. '1' → logprob: -8.915709495544434
    10. 'j' → logprob: -10.040709495544434

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.75001049041748
    3. '2' → logprob: -13.12501049041748
    4. '=' → logprob: -15.50001049041748
    5. '   ' → logprob: -15.62501049041748
    6. ',' → logprob: -16.250011444091797
    7. '0' → logprob: -17.500011444091797
    8. '-' → logprob: -17.562511444091797
    9. '     ' → logprob: -17.687511444091797
    10. '         ' → logprob: -17.687511444091797

Token 498: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8810901641845703
    2. '<|end|>' → logprob: -1.2560901641845703
    3. ',' → logprob: -1.6310901641845703
    4. '<|end|>' → logprob: -3.3810901641845703
    5. '
' → logprob: -4.25609016418457
    6. ',
' → logprob: -4.38109016418457
    7. 'min' → logprob: -4.38109016418457
    8. ' 
' → logprob: -5.00609016418457
    9. ' min' → logprob: -5.50609016418457
    10. 'for' → logprob: -5.63109016418457

Token 499: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.1083635613322258
    2. ' min' → logprob: -2.483363628387451
    3. 'for' → logprob: -4.983363628387451
    4. ' for' → logprob: -5.608363628387451
    5. '               ' → logprob: -5.858363628387451
    6. '0' → logprob: -5.858363628387451
    7. 'i' → logprob: -7.108363628387451
    8. '                ' → logprob: -7.358363628387451
    9. ' i' → logprob: -7.733363628387451
    10. '1' → logprob: -7.733363628387451

Token 501: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00013905855303164572
    2. '_i' → logprob: -9.125139236450195
    3. '_' → logprob: -11.250139236450195
    4. 'j' → logprob: -12.125139236450195
    5. '_idx' → logprob: -12.625139236450195
    6. '_val' → logprob: -12.875139236450195
    7. '_k' → logprob: -13.500139236450195
    8. '\' → logprob: -14.250139236450195
    9. ' _' → logprob: -14.500139236450195
    10. '```' → logprob: -14.875139236450195

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22550137341022491
    2. '=' → logprob: -1.6005014181137085
    3. ' ' → logprob: -10.10050106048584
    4. ',' → logprob: -10.22550106048584
    5. '                ' → logprob: -12.72550106048584
    6. '            ' → logprob: -13.10050106048584
    7. '               ' → logprob: -13.10050106048584
    8. '<|end|>' → logprob: -13.85050106048584
    9. ')' → logprob: -14.10050106048584
    10. ' =
' → logprob: -14.35050106048584

Token 503: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001172129064798355
    2. ' -' → logprob: -6.751172065734863
    3. '0' → logprob: -13.751172065734863
    4. ' ' → logprob: -14.376172065734863
    5. '1' → logprob: -15.876172065734863
    6. '   ' → logprob: -16.37617301940918
    7. '  ' → logprob: -18.75117301940918
    8. '-i' → logprob: -19.50117301940918
    9. 'None' → logprob: -19.50117301940918
    10. '−' → logprob: -19.62617301940918

Token 504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9160102712921798e-05
    2. '2' → logprob: -11.000029563903809
    3. ' ' → logprob: -11.625029563903809
    4. 'i' → logprob: -13.000029563903809
    5. '0' → logprob: -15.000029563903809
    6. '```' → logprob: -15.312529563903809
    7. '   ' → logprob: -15.625029563903809
    8. '-' → logprob: -15.875029563903809
    9. '  ' → logprob: -16.187528610229492
    10. ' -' → logprob: -16.812528610229492

Token 505: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018617864698171616
    2. '<|end|>' → logprob: -4.518617630004883
    3. '
' → logprob: -5.768617630004883
    4. ' for' → logprob: -6.518617630004883
    5. '  
' → logprob: -7.018617630004883
    6. ' 
' → logprob: -7.768617630004883
    7. '                
' → logprob: -7.893617630004883
    8. '                ' → logprob: -8.018617630004883
    9. '<|end|>' → logprob: -8.018617630004883
    10. 'for' → logprob: -8.768617630004883

Token 506: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042615555226802826
    2. ' for' → logprob: -3.9176156520843506
    3. '<|end|>' → logprob: -4.1676154136657715
    4. 'for' → logprob: -5.9176154136657715
    5. '<|end|>' → logprob: -7.2926154136657715
    6. ' ' → logprob: -7.2926154136657715
    7. '                
' → logprob: -7.6676154136657715
    8. '  
' → logprob: -8.16761589050293
    9. '                ' → logprob: -8.16761589050293
    10. ' 
' → logprob: -8.54261589050293

Token 507: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28252121806144714
    2. 'for' (adapté à ' for') → logprob: -1.7825212478637695
    3. '               ' → logprob: -2.6575212478637695
    4. '           ' → logprob: -4.9075212478637695
    5. '       ' → logprob: -8.90752124786377
    6. '   ' → logprob: -9.40752124786377
    7. ' ' → logprob: -10.15752124786377
    8. '	for' → logprob: -10.40752124786377
    9. '                   ' → logprob: -10.53252124786377
    10. '<|end|>' → logprob: -11.15752124786377

Token 508: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31332340836524963
    2. ' i' → logprob: -1.3133233785629272
    3. 'x' → logprob: -10.688323020935059
    4. 'a' → logprob: -11.688323020935059
    5. ' x' → logprob: -11.688323020935059
    6. '   ' → logprob: -12.563323020935059
    7. '	i' → logprob: -12.938323020935059
    8. '_i' → logprob: -13.063323020935059
    9. 'u' → logprob: -13.063323020935059
    10. ' a' → logprob: -13.188323020935059

Token 509: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027076926082372665
    2. 'in' → logprob: -3.6520769596099854
    3. ',' → logprob: -7.402076721191406
    4. ' ' → logprob: -9.777076721191406
    5. ' ,' → logprob: -10.277076721191406
    6. ' i' → logprob: -10.777076721191406
    7. 'i' → logprob: -11.277076721191406
    8. '_in' → logprob: -11.277076721191406
    9. '	in' → logprob: -11.777076721191406
    10. 'n' → logprob: -12.777076721191406

Token 510: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015236717881634831
    2. ' range' → logprob: -6.501523494720459
    3. ' ' → logprob: -11.626523971557617
    4. '   ' → logprob: -12.376523971557617
    5. 'in' → logprob: -12.626523971557617
    6. '
' → logprob: -13.126523971557617
    7. '  ' → logprob: -14.001523971557617
    8. 'ran' → logprob: -14.126523971557617
    9. ' in' → logprob: -15.001523971557617
    10. '

' → logprob: -15.126523971557617

Token 511: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.31352365016937256
    2. 'len' → logprob: -1.3135236501693726
    3. ' len' → logprob: -8.813523292541504
    4. '               ' → logprob: -9.563523292541504
    5. '0' → logprob: -10.938523292541504
    6. '(' → logprob: -11.813523292541504
    7. '           ' → logprob: -12.438523292541504
    8. '                   ' → logprob: -12.563523292541504
    9. ',len' → logprob: -13.188523292541504
    10. '[len' → logprob: -13.313523292541504

Token 512: '(cl' (ID: 16811)
  Prédit: '(cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cl' → logprob: -0.00016539888747502118
    2. 'clusters' → logprob: -8.750164985656738
    3. '(x' → logprob: -13.000164985656738
    4. 'cl' → logprob: -13.000164985656738
    5. ' clusters' → logprob: -13.750164985656738
    6. 'x' → logprob: -14.750164985656738
    7. '(' → logprob: -15.000164985656738
    8. '(cluster' → logprob: -15.250164985656738
    9. '	cl' → logprob: -16.000165939331055
    10. '_clusters' → logprob: -16.750165939331055

Token 513: 'usters' (ID: 26011)
  Prédit: 'usters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usters' → logprob: -6.392202976712724e-06
    2. 'clusters' → logprob: -12.375006675720215
    3. 'uster' → logprob: -14.125006675720215
    4. 'sters' → logprob: -14.625006675720215
    5. 'users' → logprob: -15.000006675720215
    6. 'uters' → logprob: -15.250006675720215
    7. ' clusters' → logprob: -16.6250057220459
    8. '   ' → logprob: -16.7500057220459
    9. 'u' → logprob: -17.0000057220459
    10. 'ust' → logprob: -17.1250057220459

Token 514: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005317954812198877
    2. '):' → logprob: -5.2553181648254395
    3. '-' → logprob: -9.755317687988281
    4. ' ):
' → logprob: -11.755317687988281
    5. ' -' → logprob: -11.880317687988281
    6. '   ' → logprob: -12.630317687988281
    7. '       ' → logprob: -13.130317687988281
    8. ')' → logprob: -13.130317687988281
    9. '):
' → logprob: -13.880317687988281
    10. '):

' → logprob: -14.130317687988281

Token 515: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.26059490442276
    2. '               ' → logprob: -2.7605948448181152
    3. '<|end|>' → logprob: -2.7605948448181152
    4. ' ' → logprob: -3.0105948448181152
    5. '           ' → logprob: -3.6355948448181152
    6. '<|end|>' → logprob: -5.010594844818115
    7. '   ' → logprob: -5.385594844818115
    8. ' for' → logprob: -5.635594844818115
    9. '		           ' → logprob: -6.135594844818115
    10. '	           ' → logprob: -6.635594844818115

Token 516: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1606530100107193
    2. 'for' (adapté à ' for') → logprob: -1.910652995109558
    3. ' x' → logprob: -8.660653114318848
    4. '                   ' → logprob: -9.035653114318848
    5. '   ' → logprob: -10.035653114318848
    6. 'x' → logprob: -10.410653114318848
    7. ' ' → logprob: -11.160653114318848
    8. '	for' → logprob: -11.285653114318848
    9. '               ' → logprob: -11.535653114318848
    10. '    ' → logprob: -12.035653114318848

Token 517: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014168919064104557
    2. ' y' → logprob: -4.264168739318848
    3. '   ' → logprob: -12.889168739318848
    4. 'x' → logprob: -13.014168739318848
    5. '	y' → logprob: -15.389168739318848
    6. ' ' → logprob: -15.514168739318848
    7. '    ' → logprob: -16.264169692993164
    8. '  ' → logprob: -17.014169692993164
    9. '_y' → logprob: -17.389169692993164
    10. '(y' → logprob: -17.639169692993164

Token 518: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011053244583308697
    2. 'in' → logprob: -4.511053085327148
    3. 'x' → logprob: -13.136053085327148
    4. '(x' → logprob: -13.886053085327148
    5. ' x' → logprob: -13.886053085327148
    6. ' ' → logprob: -14.511053085327148
    7. 'In' → logprob: -15.261053085327148
    8. '=' → logprob: -16.26105308532715
    9. '	in' → logprob: -16.26105308532715
    10. '                   ' → logprob: -16.38605308532715

Token 519: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07901349663734436
    2. ' range' → logprob: -2.5790135860443115
    3. 'x' → logprob: -9.07901382446289
    4. '(range' → logprob: -12.45401382446289
    5. ' x' → logprob: -12.82901382446289
    6. '(x' → logprob: -12.95401382446289
    7. ' ' → logprob: -15.32901382446289
    8. '   ' → logprob: -15.45401382446289
    9. ' xrange' → logprob: -16.07901382446289
    10. '  ' → logprob: -16.95401382446289

Token 520: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.522638169466518e-05
    2. 'x' → logprob: -11.250024795532227
    3. '(' → logprob: -11.500024795532227
    4. ' (' → logprob: -13.250024795532227
    5. ' x' → logprob: -15.875024795532227
    6. '(len' → logprob: -16.750024795532227
    7. '(y' → logprob: -18.250024795532227
    8. '((' → logprob: -18.375024795532227
    9. '(
' → logprob: -18.500024795532227
    10. '   ' → logprob: -19.125024795532227

Token 521: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038056179881095886
    2. ' +' → logprob: -3.2880561351776123
    3. '+x' → logprob: -11.538056373596191
    4. '1' → logprob: -12.288056373596191
    5. 'x' → logprob: -16.538055419921875
    6. '+
' → logprob: -16.913055419921875
    7. '[' → logprob: -17.288055419921875
    8. '   ' → logprob: -17.288055419921875
    9. '+y' → logprob: -17.288055419921875
    10. ')+' → logprob: -17.538055419921875

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002756366156972945
    2. 'len' → logprob: -8.250275611877441
    3. ' ' → logprob: -11.875275611877441
    4. '(len' → logprob: -12.875275611877441
    5. 'y' → logprob: -13.500275611877441
    6. 'x' → logprob: -13.625275611877441
    7. ' len' → logprob: -14.000275611877441
    8. ')' → logprob: -15.750275611877441
    9. '+' → logprob: -15.875275611877441
    10. '   ' → logprob: -16.125276565551758

Token 523: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006098957732319832
    2. ',len' → logprob: -5.131098747253418
    3. '                   ' → logprob: -10.381098747253418
    4. '1' → logprob: -10.381098747253418
    5. '):' → logprob: -10.756098747253418
    6. '):
' → logprob: -10.881098747253418
    7. ',y' → logprob: -11.506098747253418
    8. 'len' → logprob: -11.506098747253418
    9. ',x' → logprob: -11.756098747253418
    10. ' ,' → logprob: -11.756098747253418

Token 524: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006716317031532526
    2. ' len' → logprob: -5.006716251373291
    3. '(len' → logprob: -14.38171672821045
    4. 'y' → logprob: -16.006715774536133
    5. '<len' → logprob: -16.256715774536133
    6. '[len' → logprob: -16.756715774536133
    7. ',len' → logprob: -17.256715774536133
    8. '	len' → logprob: -17.506715774536133
    9. ')' → logprob: -18.006715774536133
    10. ' ' → logprob: -18.131715774536133

Token 525: '(cl' (ID: 16811)
  Prédit: '(cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cl' → logprob: -9.078839502763003e-05
    2. 'clusters' → logprob: -9.375090599060059
    3. 'cl' → logprob: -12.250090599060059
    4. '(' → logprob: -14.125090599060059
    5. ' clusters' → logprob: -15.625090599060059
    6. '(cluster' → logprob: -16.625091552734375
    7. ' (' → logprob: -17.500091552734375
    8. '(len' → logprob: -17.625091552734375
    9. '	cl' → logprob: -18.000091552734375
    10. '(
' → logprob: -18.375091552734375

Token 526: 'usters' (ID: 26011)
  Prédit: 'usters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usters' → logprob: -2.6656825866666622e-05
    2. 'clusters' → logprob: -10.62502670288086
    3. 'uster' → logprob: -13.37502670288086
    4. 'l' → logprob: -15.12502670288086
    5. 'sters' → logprob: -15.12502670288086
    6. '_clusters' → logprob: -17.00002670288086
    7. 'ust' → logprob: -17.50002670288086
    8. 'r' → logprob: -17.62502670288086
    9. ')' → logprob: -17.75002670288086
    10. ' clusters' → logprob: -17.87502670288086

Token 527: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09383389353752136
    2. '):' → logprob: -2.9688339233398438
    3. ')):
' → logprob: -3.3438339233398438
    4. ')):' → logprob: -6.093833923339844
    5. ')' → logprob: -8.093833923339844
    6. ']):
' → logprob: -9.218833923339844
    7. '):

' → logprob: -9.593833923339844
    8. '))' → logprob: -10.093833923339844
    9. ']):' → logprob: -10.593833923339844
    10. '               ' → logprob: -10.968833923339844

Token 528: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.030202591791749
    2. ' ' → logprob: -4.280202388763428
    3. '<|end|>' → logprob: -5.030202388763428
    4. '                        ' → logprob: -5.905202388763428
    5. '                        
' → logprob: -6.030202388763428
    6. '                   ' → logprob: -6.780202388763428
    7. '                           ' → logprob: -6.905202388763428
    8. '                    ' → logprob: -7.530202388763428
    9. ',' → logprob: -8.280202865600586
    10. '               ' → logprob: -8.405202865600586

Token 529: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.35686853528022766
    2. ' if' → logprob: -1.2318685054779053
    3. 'if' (adapté à ' if') → logprob: -5.606868743896484
    4. '                       ' → logprob: -5.981868743896484
    5. '                            ' → logprob: -7.731868743896484
    6. ',' → logprob: -7.981868743896484
    7. '                            
' → logprob: -7.981868743896484
    8. '                               ' → logprob: -8.106868743896484
    9. ' ' → logprob: -8.731868743896484
    10. '                        ' → logprob: -9.106868743896484

Token 530: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16044214367866516
    2. 'd' → logprob: -1.9104421138763428
    3. '                           ' → logprob: -9.035442352294922
    4. '                   ' → logprob: -10.660442352294922
    5. '                       ' → logprob: -11.285442352294922
    6. '   ' → logprob: -11.410442352294922
    7. '                                   ' → logprob: -12.160442352294922
    8. '                               ' → logprob: -12.285442352294922
    9. ' ' → logprob: -12.410442352294922
    10. ' clusters' → logprob: -12.410442352294922

Token 531: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00013166792632546276
    2. ' [' → logprob: -9.625131607055664
    3. '][' → logprob: -10.625131607055664
    4. '[' → logprob: -10.875131607055664
    5. 'x' → logprob: -11.375131607055664
    6. ' x' → logprob: -13.000131607055664
    7. ')[' → logprob: -14.000131607055664
    8. '[y' → logprob: -14.500131607055664
    9. '           ' → logprob: -14.750131607055664
    10. '               ' → logprob: -14.750131607055664

Token 532: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12701597809791565
    2. '[x' → logprob: -2.377016067504883
    3. '[y' → logprob: -3.877016067504883
    4. '[' → logprob: -5.627016067504883
    5. ']' → logprob: -6.502016067504883
    6. ' ][' → logprob: -8.752016067504883
    7. ']>' → logprob: -9.502016067504883
    8. '[j' → logprob: -9.752016067504883
    9. ']<' → logprob: -10.127016067504883
    10. ')][' → logprob: -10.377016067504883

Token 533: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003361774142831564
    2. ' y' → logprob: -8.000336647033691
    3. 'x' → logprob: -15.625336647033691
    4. '	y' → logprob: -16.250335693359375
    5. '   ' → logprob: -16.625335693359375
    6. ' ' → logprob: -17.000335693359375
    7. '[y' → logprob: -17.375335693359375
    8. ']' → logprob: -17.500335693359375
    9. '
' → logprob: -17.625335693359375
    10. ''y' → logprob: -17.625335693359375

Token 534: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30126142501831055
    2. ' <' → logprob: -1.5512614250183105
    3. ' ]' → logprob: -3.3012614250183105
    4. '<' → logprob: -5.1762614250183105
    5. ']<' → logprob: -5.3012614250183105
    6. ' ' → logprob: -8.051261901855469
    7. '[' → logprob: -9.301261901855469
    8. ']==' → logprob: -10.176261901855469
    9. ')' → logprob: -10.801261901855469
    10. ']>' → logprob: -11.051261901855469

Token 535: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20143848657608032
    2. ' <' → logprob: -1.7014384269714355
    3. '<int' → logprob: -11.326438903808594
    4. '<m' → logprob: -13.201438903808594
    5. '<size' → logprob: -13.201438903808594
    6. '[' → logprob: -13.326438903808594
    7. ' ' → logprob: -13.701438903808594
    8. '==' → logprob: -14.326438903808594
    9. '<std' → logprob: -14.326438903808594
    10. '<float' → logprob: -14.451438903808594

Token 536: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0024756586644798517
    2. ' min' → logprob: -6.002475738525391
    3. 'd' → logprob: -18.12747573852539
    4. '(min' → logprob: -18.12747573852539
    5. '	min' → logprob: -18.50247573852539
    6. '```' → logprob: -18.75247573852539
    7. '[min' → logprob: -18.87747573852539
    8. '10' → logprob: -19.37747573852539
    9. '_min' → logprob: -19.50247573852539
    10. '=min' → logprob: -19.50247573852539

Token 537: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.0629870858974755e-05
    2. 'd' → logprob: -11.25006103515625
    3. 'val' → logprob: -11.37506103515625
    4. '_d' → logprob: -12.12506103515625
    5. '[val' → logprob: -12.50006103515625
    6. '[' → logprob: -12.62506103515625
    7. '[x' → logprob: -12.62506103515625
    8. '[d' → logprob: -12.87506103515625
    9. '[_' → logprob: -13.25006103515625
    10. '_' → logprob: -13.25006103515625

Token 538: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5623316168785095
    2. '                           ' → logprob: -1.0623316764831543
    3. '                       ' → logprob: -3.1873316764831543
    4. ':
' → logprob: -3.4373316764831543
    5. ' and' → logprob: -5.812331676483154
    6. '                               ' → logprob: -6.562331676483154
    7. '                            ' → logprob: -6.562331676483154
    8. '                        ' → logprob: -7.062331676483154
    9. '                            
' → logprob: -7.312331676483154
    10. ',' → logprob: -7.437331676483154

Token 539: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0018514160765334964
    2. '                               ' → logprob: -7.126851558685303
    3. '                       ' → logprob: -7.626851558685303
    4. '                            ' → logprob: -8.251851081848145
    5. '                            
' → logprob: -8.876851081848145
    6. '                   ' → logprob: -10.376851081848145
    7. '               ' → logprob: -10.501851081848145
    8. '           ' → logprob: -10.751851081848145
    9. '                                   ' → logprob: -11.376851081848145
    10. '                        ' → logprob: -11.751851081848145

Token 540: ' min' (ID: 1349)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.2119882106781006
    2. 'min' (adapté à ' min') → logprob: -1.3369882106781006
    3. ' min' → logprob: -1.4619882106781006
    4. '                               ' → logprob: -1.5869882106781006
    5. '                                   ' → logprob: -6.33698844909668
    6. '                            ' → logprob: -7.21198844909668
    7. '           ' → logprob: -8.58698844909668
    8. '                       ' → logprob: -8.71198844909668
    9. '                                ' → logprob: -9.33698844909668
    10. '   ' → logprob: -9.71198844909668

Token 541: '_val' (ID: 13694)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.08390937745571136
    2. '_val' → logprob: -2.708909273147583
    3. '_x' → logprob: -4.833909511566162
    4. '_' → logprob: -5.458909511566162
    5. 'i' → logprob: -7.708909511566162
    6. 'val' → logprob: -8.083909034729004
    7. 'Val' → logprob: -8.333909034729004
    8. 'x' → logprob: -8.458909034729004
    9. '_j' → logprob: -9.083909034729004
    10. '_y' → logprob: -9.208909034729004

Token 542: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232828259468079
    2. ' =' → logprob: -0.8982828259468079
    3. '                               ' → logprob: -10.023283004760742
    4. '                           ' → logprob: -10.148283004760742
    5. '=d' → logprob: -10.398283004760742
    6. ',' → logprob: -10.773283004760742
    7. '=
' → logprob: -12.523283004760742
    8. '=min' → logprob: -12.773283004760742
    9. '                                   ' → logprob: -12.898283004760742
    10. '=x' → logprob: -13.398283004760742

Token 543: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3132754862308502
    2. 'd' → logprob: -1.3132754564285278
    3. '                           ' → logprob: -11.438275337219238
    4. '                               ' → logprob: -13.438275337219238
    5. '                            ' → logprob: -15.188275337219238
    6. '	d' → logprob: -15.313275337219238
    7. '                                   ' → logprob: -15.313275337219238
    8. ' ' → logprob: -15.938275337219238
    9. ' ' → logprob: -16.188276290893555
    10. '```' → logprob: -16.313276290893555

Token 544: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.002234116895124316
    2. '[' → logprob: -6.127233982086182
    3. ' [' → logprob: -10.12723445892334
    4. '[
' → logprob: -13.00223445892334
    5. 'x' → logprob: -13.62723445892334
    6. '][' → logprob: -13.75223445892334
    7. '(x' → logprob: -14.25223445892334
    8. '\[' → logprob: -14.37723445892334
    9. '```' → logprob: -14.62723445892334
    10. '                           ' → logprob: -14.87723445892334

Token 545: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012924784794449806
    2. '[x' → logprob: -4.387924671173096
    3. ']' → logprob: -8.512925148010254
    4. '[' → logprob: -9.012925148010254
    5. '[y' → logprob: -9.762925148010254
    6. '```' → logprob: -12.012925148010254
    7. ' ][' → logprob: -12.012925148010254
    8. '[j' → logprob: -12.512925148010254
    9. '   ' → logprob: -12.637925148010254
    10. ''][' → logprob: -12.762925148010254

Token 546: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.0100624169572257e-05
    2. ' y' → logprob: -11.000020027160645
    3. 'x' → logprob: -12.750020027160645
    4. '<|end|>' → logprob: -15.250020027160645
    5. '[y' → logprob: -17.50002098083496
    6. ')' → logprob: -17.50002098083496
    7. '[' → logprob: -17.62502098083496
    8. '	y' → logprob: -17.75002098083496
    9. ']' → logprob: -17.87502098083496
    10. ')y' → logprob: -18.00002098083496

Token 547: ']
' (ID: 1592)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.011434458196163177
    2. ')' → logprob: -5.136434555053711
    3. '<|end|>' → logprob: -5.636434555053711
    4. '                       ' → logprob: -7.636434555053711
    5. '                            
' → logprob: -7.886434555053711
    6. '                            ' → logprob: -8.261434555053711
    7. '                               ' → logprob: -8.511434555053711
    8. ',' → logprob: -8.636434555053711
    9. '           ' → logprob: -9.261434555053711
    10. '               ' → logprob: -9.386434555053711

Token 548: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0014513060450553894
    2. '                            
' → logprob: -8.12645149230957
    3. '<|end|>' → logprob: -8.37645149230957
    4. '                            ' → logprob: -8.75145149230957
    5. '                               ' → logprob: -8.75145149230957
    6. ',' → logprob: -8.87645149230957
    7. '                       ' → logprob: -9.00145149230957
    8. '           ' → logprob: -9.62645149230957
    9. '```' → logprob: -9.62645149230957
    10. '                          ' → logprob: -10.12645149230957

Token 549: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0011796315666288137
    2. ' min' → logprob: -6.7511796951293945
    3. '                           ' → logprob: -12.001179695129395
    4. 'x' → logprob: -13.376179695129395
    5. '[min' → logprob: -14.876179695129395
    6. '	min' → logprob: -15.251179695129395
    7. '_min' → logprob: -15.251179695129395
    8. '           ' → logprob: -15.626179695129395
    9. 'm' → logprob: -15.751179695129395
    10. '```' → logprob: -16.376178741455078

Token 550: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.005618385039269924
    2. '_j' → logprob: -5.380618572235107
    3. '_x' → logprob: -7.005618572235107
    4. 'i' → logprob: -10.25561809539795
    5. '_' → logprob: -10.75561809539795
    6. '_y' → logprob: -10.88061809539795
    7. 'x' → logprob: -12.13061809539795
    8. '<|end|>' → logprob: -13.50561809539795
    9. '```' → logprob: -13.88061809539795
    10. 'j' → logprob: -14.00561809539795

Token 551: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143301784992218
    2. ' =' → logprob: -1.7014330625534058
    3. ',' → logprob: -11.201433181762695
    4. '=x' → logprob: -12.576433181762695
    5. ' ' → logprob: -14.576433181762695
    6. '=
' → logprob: -14.701433181762695
    7. '<|end|>' → logprob: -15.076433181762695
    8. ' =
' → logprob: -15.201433181762695
    9. '=}' → logprob: -15.576433181762695
    10. '=

' → logprob: -15.826433181762695

Token 552: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '	x' → logprob: -18.625261306762695
    4. '$x' → logprob: -20.500261306762695
    5. ')x' → logprob: -20.500261306762695
    6. '"x' → logprob: -20.750261306762695
    7. '>x' → logprob: -21.375261306762695
    8. ''x' → logprob: -21.750261306762695
    9. '{x' → logprob: -22.000261306762695
    10. '<|end|>' → logprob: -22.125261306762695

Token 553: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.35285720229148865
    2. '<|end|>' → logprob: -1.352857232093811
    3. '                       ' → logprob: -4.7278571128845215
    4. '                            ' → logprob: -5.1028571128845215
    5. '<|end|>' → logprob: -5.2278571128845215
    6. '                            
' → logprob: -5.2278571128845215
    7. '```' → logprob: -5.8528571128845215
    8. ')' → logprob: -6.2278571128845215
    9. ' y' → logprob: -6.9778571128845215
    10. '                        ' → logprob: -7.1028571128845215

Token 555: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.001210114685818553
    2. '                           ' → logprob: -6.7512102127075195
    3. ' min' → logprob: -10.37621021270752
    4. 'm' → logprob: -12.87621021270752
    5. '               ' → logprob: -13.62621021270752
    6. 'y' → logprob: -13.62621021270752
    7. '           ' → logprob: -13.75121021270752
    8. '                       ' → logprob: -14.75121021270752
    9. '                            ' → logprob: -14.75121021270752
    10. '                               ' → logprob: -14.75121021270752

Token 556: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0003336777735967189
    2. 'j' → logprob: -8.125333786010742
    3. '_y' → logprob: -11.000333786010742
    4. '_i' → logprob: -11.125333786010742
    5. 'y' → logprob: -12.250333786010742
    6. '<|end|>' → logprob: -14.000333786010742
    7. '_' → logprob: -16.000333786010742
    8. '[j' → logprob: -16.375333786010742
    9. '[' → logprob: -17.000333786010742
    10. 'i' → logprob: -17.125333786010742

Token 557: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08042003959417343
    2. '=' → logprob: -2.7054200172424316
    3. ' y' → logprob: -5.080420017242432
    4. '=y' → logprob: -5.830420017242432
    5. '<|end|>' → logprob: -7.330420017242432
    6. 'y' → logprob: -7.830420017242432
    7. ' ' → logprob: -9.83042049407959
    8. '                            ' → logprob: -9.95542049407959
    9. '                           ' → logprob: -10.20542049407959
    10. '                        ' → logprob: -10.20542049407959

Token 558: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00015908108616713434
    2. ' y' → logprob: -8.75015926361084
    3. '<|end|>' → logprob: -14.75015926361084
    4. '	y' → logprob: -16.375158309936523
    5. ')y' → logprob: -18.000158309936523
    6. '[y' → logprob: -18.000158309936523
    7. '‘y' → logprob: -18.125158309936523
    8. 'j' → logprob: -18.250158309936523
    9. 'x' → logprob: -18.250158309936523
    10. '(y' → logprob: -18.375158309936523

Token 559: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3526035249233246
    2. '               ' → logprob: -1.352603554725647
    3. '                
' → logprob: -3.4776034355163574
    4. '            
' → logprob: -6.727603435516357
    5. ' 
' → logprob: -6.977603435516357
    6. '  
' → logprob: -6.977603435516357
    7. '                            
' → logprob: -7.102603435516357
    8. '                ' → logprob: -7.477603435516357
    9. '    
' → logprob: -7.477603435516357
    10. '

' → logprob: -8.102603912353516

Token 560: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049455009400844574
    2. '                
' → logprob: -3.799454927444458
    3. '
' → logprob: -4.299455165863037
    4. '                            
' → logprob: -5.424455165863037
    5. '                ' → logprob: -6.549455165863037
    6. '                        
' → logprob: -6.799455165863037
    7. '                           ' → logprob: -7.049455165863037
    8. ' 
' → logprob: -7.549455165863037
    9. '            
' → logprob: -7.924455165863037
    10. '           ' → logprob: -7.924455165863037

Token 561: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3928578794002533
    2. '                
' → logprob: -2.142857789993286
    3. ' new' → logprob: -2.267857789993286
    4. '
' → logprob: -2.517857789993286
    5. ' 
' → logprob: -4.892858028411865
    6. 'new' → logprob: -5.517858028411865
    7. '    
' → logprob: -5.767858028411865
    8. '  
' → logprob: -5.892858028411865
    9. '#' (adapté à ' #') → logprob: -7.017858028411865
    10. '            
' → logprob: -7.142858028411865

Token 562: ' create' (ID: 2501)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06294972449541092
    2. '#' → logprob: -3.1879496574401855
    3. 'u' → logprob: -4.4379496574401855
    4. 'merged' → logprob: -5.1879496574401855
    5. ' new' → logprob: -6.9379496574401855
    6. 'merge' → logprob: -7.6879496574401855
    7. 'c' → logprob: -7.9379496574401855
    8. 'cluster' → logprob: -8.437950134277344
    9. '       ' → logprob: -9.312950134277344
    10. ' #' → logprob: -9.937950134277344

Token 563: ' new' (ID: 620)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6623170375823975
    2. ' new' → logprob: -0.7873170375823975
    3. 'new' → logprob: -4.162317276000977
    4. ' =' → logprob: -4.787317276000977
    5. 'a' → logprob: -5.537317276000977
    6. '_new' → logprob: -7.412317276000977
    7. '               ' → logprob: -8.662317276000977
    8. 'switch' → logprob: -9.162317276000977
    9. ' an' → logprob: -9.412317276000977
    10. '_node' → logprob: -9.412317276000977

Token 564: ' internal' (ID: 8812)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.008848914876580238
    2. 'node' → logprob: -5.008849143981934
    3. ' node' → logprob: -6.258849143981934
    4. '_cluster' → logprob: -9.633849143981934
    5. '_internal' → logprob: -9.883849143981934
    6. ' switch' → logprob: -10.883849143981934
    7. '_switch' → logprob: -11.008849143981934
    8. ' internal' → logprob: -11.133849143981934
    9. 'switch' → logprob: -11.383849143981934
    10. ' cluster' → logprob: -11.383849143981934

Token 565: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.6637475490570068
    2. '_node' → logprob: -0.7887475490570068
    3. 'node' → logprob: -4.038747787475586
    4. '               ' → logprob: -4.538747787475586
    5. ' _' → logprob: -6.413747787475586
    6. '           ' → logprob: -8.913747787475586
    7. '_' → logprob: -9.038747787475586
    8. ' ' → logprob: -9.663747787475586
    9. ' cluster' → logprob: -9.663747787475586
    10. ' switch' → logprob: -9.788747787475586

Token 566: ' representing' (ID: 25389)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005299804266542196
    2. '               ' → logprob: -6.2552995681762695
    3. '=' → logprob: -6.7552995681762695
    4. ' =
' → logprob: -7.0052995681762695
    5. ' new' → logprob: -7.2552995681762695
    6. 'new' → logprob: -7.8802995681762695
    7. '                   ' → logprob: -9.88029956817627
    8. '_new' → logprob: -10.63029956817627
    9. '           ' → logprob: -10.75529956817627
    10. 'switch' → logprob: -10.75529956817627

Token 567: ' new' (ID: 620)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06256929785013199
    2. 'a' → logprob: -4.0625691413879395
    3. 'the' → logprob: -4.0625691413879395
    4. ' self' → logprob: -4.9375691413879395
    5. 'next' → logprob: -5.4375691413879395
    6. 'cluster' → logprob: -5.4375691413879395
    7. 'new' → logprob: -5.8125691413879395
    8. ' the' → logprob: -6.3125691413879395
    9. 'node' → logprob: -6.8125691413879395
    10. ' a' → logprob: -6.8125691413879395

Token 568: ' switch' (ID: 6160)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.9607011675834656
    2. 'cluster' → logprob: -1.0857012271881104
    3. '_node' → logprob: -1.8357012271881104
    4. '               ' → logprob: -2.8357012271881104
    5. 'switch' → logprob: -3.8357012271881104
    6. '_cluster' → logprob: -3.9607012271881104
    7. ' cluster' → logprob: -4.710700988769531
    8. 'self' → logprob: -4.835700988769531
    9. ' node' → logprob: -6.335700988769531
    10. '_switch' → logprob: -6.460700988769531

Token 569: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05197807773947716
    2. '               ' → logprob: -3.17697811126709
    3. '
' → logprob: -5.30197811126709
    4. '           ' → logprob: -6.67697811126709
    5. '=' → logprob: -7.30197811126709
    6. '                   ' → logprob: -7.67697811126709
    7. '                
' → logprob: -7.67697811126709
    8. ' =
' → logprob: -7.80197811126709
    9. '   ' → logprob: -9.30197811126709
    10. '                    
' → logprob: -9.42697811126709

Token 570: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11346860975027084
    2. ' new' → logprob: -2.863468647003174
    3. 'new' → logprob: -3.113468647003174
    4. '
' → logprob: -5.738468647003174
    5. '                
' → logprob: -6.738468647003174
    6. '           ' → logprob: -8.113468170166016
    7. '                   ' → logprob: -8.363468170166016
    8. 'n' → logprob: -9.238468170166016
    9. 'switch' → logprob: -9.363468170166016
    10. ',' → logprob: -9.488468170166016

Token 571: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.2748766541481018
    2. 'new' (adapté à ' new') → logprob: -1.524876594543457
    3. '               ' → logprob: -4.774876594543457
    4. 'u' → logprob: -5.024876594543457
    5. ' u' → logprob: -5.149876594543457
    6. 'node' → logprob: -7.149876594543457
    7. ' node' → logprob: -7.524876594543457
    8. 'switch' → logprob: -8.774876594543457
    9. ' switch' → logprob: -9.774876594543457
    10. 'v' → logprob: -10.149876594543457

Token 572: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -4.024604277219623e-05
    2. '_' → logprob: -10.250040054321289
    3. '_cluster' → logprob: -12.875040054321289
    4. '_switch' → logprob: -14.500040054321289
    5. '_n' → logprob: -14.625040054321289
    6. ' _' → logprob: -14.625040054321289
    7. '_nodes' → logprob: -14.750040054321289
    8. '_Node' → logprob: -15.375040054321289
    9. '_name' → logprob: -17.12504005432129
    10. '_u' → logprob: -17.37504005432129

Token 573: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858771339058876
    2. '=' → logprob: -3.0485877990722656
    3. '=self' → logprob: -16.048587799072266
    4. ' =
' → logprob: -16.548587799072266
    5. '    ' → logprob: -17.173587799072266
    6. '               ' → logprob: -17.298587799072266
    7. '   ' → logprob: -17.423587799072266
    8. '                ' → logprob: -17.423587799072266
    9. '           ' → logprob: -17.423587799072266
    10. ' ' → logprob: -17.548587799072266

Token 574: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132759928703308
    2. 'self' → logprob: -1.3132760524749756
    3. '               ' → logprob: -11.188276290893555
    4. '                   ' → logprob: -15.313276290893555
    5. '           ' → logprob: -16.438276290893555
    6. '	self' → logprob: -17.063276290893555
    7. '                ' → logprob: -17.063276290893555
    8. '(self' → logprob: -17.313276290893555
    9. ' ' → logprob: -17.938276290893555
    10. '   ' → logprob: -17.938276290893555

Token 575: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -9.960946772480384e-05
    2. '.' → logprob: -9.250099182128906
    3. 'next' → logprob: -13.250099182128906
    4. '_next' → logprob: -14.375099182128906
    5. ' .' → logprob: -15.000099182128906
    6. '.new' → logprob: -15.500099182128906
    7. '[next' → logprob: -15.750099182128906
    8. '.n' → logprob: -16.125099182128906
    9. 'Next' → logprob: -17.000099182128906
    10. '       ' → logprob: -17.250099182128906

Token 576: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.512236498361744e-07
    2. '_token' → logprob: -15.875000953674316
    3. '_' → logprob: -16.75
    4. '_nodes' → logprob: -16.75
    5. ' _' → logprob: -16.875
    6. '_Node' → logprob: -17.0
    7. '_NODE' → logprob: -17.625
    8. '_n' → logprob: -18.375
    9. '_user' → logprob: -19.125
    10. '._' → logprob: -20.125

Token 577: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.396712064743042
    2. '
' → logprob: -1.271712064743042
    3. '<|end|>' → logprob: -3.521712064743042
    4. '+' → logprob: -5.271712303161621
    5. '           ' → logprob: -5.521712303161621
    6. '<|end|>' → logprob: -6.021712303161621
    7. '                   ' → logprob: -6.771712303161621
    8. '       ' → logprob: -7.146712303161621
    9. '                
' → logprob: -7.271712303161621
    10. '                ' → logprob: -7.396712303161621

Token 578: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05401221290230751
    2. '<|end|>' → logprob: -3.0540122985839844
    3. '<|end|>' → logprob: -5.804012298583984
    4. '           ' → logprob: -7.554012298583984
    5. '                   ' → logprob: -8.054012298583984
    6. ')' → logprob: -8.179012298583984
    7. '       ' → logprob: -8.679012298583984
    8. '                ' → logprob: -8.929012298583984
    9. ' =' → logprob: -8.929012298583984
    10. '                
' → logprob: -9.179012298583984

Token 579: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13511346280574799
    2. 'self' (adapté à ' self') → logprob: -2.135113477706909
    3. ' self' → logprob: -4.88511323928833
    4. '           ' → logprob: -7.76011323928833
    5. '                   ' → logprob: -9.510113716125488
    6. '	self' → logprob: -10.760113716125488
    7. '       ' → logprob: -10.885113716125488
    8. '   ' → logprob: -10.885113716125488
    9. '\' → logprob: -11.760113716125488
    10. '                
' → logprob: -11.885113716125488

Token 580: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0007249409682117403
    2. '.' → logprob: -7.250724792480469
    3. 'next' → logprob: -11.250724792480469
    4. '.add' → logprob: -13.750724792480469
    5. ' .' → logprob: -15.000724792480469
    6. '.ad' → logprob: -15.750724792480469
    7. '.
' → logprob: -16.37572479248047
    8. ' next' → logprob: -16.37572479248047
    9. '_next' → logprob: -17.12572479248047
    10. ').' → logprob: -17.25072479248047

Token 581: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.1472419600977446e-06
    2. 'node' → logprob: -14.250000953674316
    3. '_NODE' → logprob: -16.125001907348633
    4. 'Node' → logprob: -16.500001907348633
    5. '_edge' → logprob: -16.875001907348633
    6. '_token' → logprob: -17.500001907348633
    7. '-node' → logprob: -17.625001907348633
    8. '_nodes' → logprob: -17.750001907348633
    9. '_Node' → logprob: -17.875001907348633
    10. '.append' → logprob: -18.125001907348633

Token 582: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12694375216960907
    2. ' +=' → logprob: -2.126943826675415
    3. '+' → logprob: -12.001943588256836
    4. '=' → logprob: -12.001943588256836
    5. ']+=' → logprob: -13.001943588256836
    6. '+="' → logprob: -15.501943588256836
    7. ')' → logprob: -15.501943588256836
    8. '+='' → logprob: -15.501943588256836
    9. '   ' → logprob: -15.876943588256836
    10. '```' → logprob: -16.001943588256836

Token 583: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '
' → logprob: -18.625
    4. '   ' → logprob: -18.75
    5. '```' → logprob: -19.75
    6. '           ' → logprob: -20.5
    7. '１' → logprob: -20.5
    8. '۱' → logprob: -22.0
    9. '  ' → logprob: -22.0625
    10. '       ' → logprob: -22.1875

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '１' → logprob: -22.75
    4. '
' → logprob: -22.75
    5. '```' → logprob: -24.0
    6. '-' → logprob: -24.125
    7. '   ' → logprob: -24.125
    8. '۱' → logprob: -24.625
    9. '0' → logprob: -24.625
    10. '2' → logprob: -24.75

Token 585: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6822351813316345
    2. '               ' → logprob: -0.8072351813316345
    3. '                
' → logprob: -3.4322352409362793
    4. '<|end|>' → logprob: -5.307235240936279
    5. 'new' → logprob: -5.807235240936279
    6. ' new' → logprob: -5.932235240936279
    7. '  
' → logprob: -6.682235240936279
    8. '        
' → logprob: -7.682235240936279
    9. '            
' → logprob: -8.182234764099121
    10. '    
' → logprob: -8.307234764099121

Token 586: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018930566729977727
    2. '                
' → logprob: -6.626893043518066
    3. '
' → logprob: -7.626893043518066
    4. '```' → logprob: -11.126893043518066
    5. '  
' → logprob: -11.501893043518066
    6. 'new' → logprob: -11.501893043518066
    7. 'self' → logprob: -11.626893043518066
    8. '    
' → logprob: -11.876893043518066
    9. '            
' → logprob: -12.501893043518066
    10. '           ' → logprob: -12.626893043518066

Token 587: ' ci' (ID: 7405)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007709908299148083
    2. 'self' → logprob: -4.882709980010986
    3. '                
' → logprob: -9.882709503173828
    4. '
' → logprob: -10.632709503173828
    5. ' self' → logprob: -11.007709503173828
    6. '#' → logprob: -12.382709503173828
    7. '           ' → logprob: -13.007709503173828
    8. '   ' → logprob: -14.007709503173828
    9. 'new' → logprob: -14.257709503173828
    10. '```' → logprob: -14.257709503173828

Token 588: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6013640761375427
    2. '_clusters' → logprob: -1.9763641357421875
    3. '[min' → logprob: -2.3513641357421875
    4. '_min' → logprob: -2.3513641357421875
    5. 's' → logprob: -3.4763641357421875
    6. '=' → logprob: -3.6013641357421875
    7. '_i' → logprob: -3.6013641357421875
    8. 'clusters' → logprob: -4.2263641357421875
    9. '[' → logprob: -4.7263641357421875
    10. '1' → logprob: -5.7263641357421875

Token 589: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.9509901404380798
    2. 'min' → logprob: -1.2009902000427246
    3. 'cluster' → logprob: -2.2009902000427246
    4. ' clusters' → logprob: -2.3259902000427246
    5. ' min' → logprob: -2.5759902000427246
    6. ' cluster' → logprob: -3.5759902000427246
    7. 'cl' → logprob: -8.950989723205566
    8. '   ' → logprob: -10.075989723205566
    9. ' ' → logprob: -10.825989723205566
    10. '[min' → logprob: -10.825989723205566

Token 590: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -2.816093228830141e-06
    2. 'min' → logprob: -12.87500286102295
    3. '[' → logprob: -16.875001907348633
    4. ' [' → logprob: -17.500001907348633
    5. '```' → logprob: -17.875001907348633
    6. '[m' → logprob: -18.125001907348633
    7. '[
' → logprob: -18.875001907348633
    8. '(min' → logprob: -18.875001907348633
    9. '[new' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.500001907348633

Token 591: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -4.978233846486546e-05
    2. 'i' → logprob: -10.500049591064453
    3. '[i' → logprob: -11.125049591064453
    4. '_j' → logprob: -12.375049591064453
    5. '[_' → logprob: -14.125049591064453
    6. '```' → logprob: -14.250049591064453
    7. '][' → logprob: -14.750049591064453
    8. '[' → logprob: -14.750049591064453
    9. '[min' → logprob: -15.500049591064453
    10. ']' → logprob: -15.750049591064453

Token 592: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5862666964530945
    2. ']' → logprob: -1.3362667560577393
    3. '].' → logprob: -1.7112667560577393
    4. 'union' → logprob: -10.96126651763916
    5. ']
' → logprob: -10.96126651763916
    6. '][' → logprob: -10.96126651763916
    7. '.union' → logprob: -11.08626651763916
    8. '],' → logprob: -11.21126651763916
    9. '       ' → logprob: -11.33626651763916
    10. '|' → logprob: -11.83626651763916

Token 593: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08357137441635132
    2. '
' → logprob: -2.833571434020996
    3. '.union' → logprob: -4.708571434020996
    4. '                
' → logprob: -4.833571434020996
    5. 'ci' → logprob: -6.833571434020996
    6. '                   ' → logprob: -7.333571434020996
    7. '.copy' → logprob: -7.583571434020996
    8. '       ' → logprob: -7.958571434020996
    9. ' =' → logprob: -8.208571434020996
    10. '                    
' → logprob: -8.708571434020996

Token 594: ' cj' (ID: 184717)
  Prédit: 'cj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cj' (adapté à ' cj') → logprob: -0.10042555630207062
    2. ' cj' → logprob: -2.3504254817962646
    3. ' new' → logprob: -9.225425720214844
    4. 'new' → logprob: -10.225425720214844
    5. 'c' → logprob: -10.350425720214844
    6. '   ' → logprob: -10.725425720214844
    7. '       ' → logprob: -11.975425720214844
    8. '               ' → logprob: -12.100425720214844
    9. '           ' → logprob: -13.225425720214844
    10. ' ' → logprob: -13.225425720214844

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4323261082172394
    2. ' =' → logprob: -1.057326078414917
    3. '[min' → logprob: -5.932326316833496
    4. '=min' → logprob: -7.307326316833496
    5. '           ' → logprob: -9.057326316833496
    6. '.' → logprob: -10.307326316833496
    7. '               ' → logprob: -10.557326316833496
    8. '=
' → logprob: -10.807326316833496
    9. '                   ' → logprob: -11.057326316833496
    10. '.union' → logprob: -11.182326316833496

Token 596: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.10021442919969559
    2. ' clusters' → logprob: -2.3502144813537598
    3. 'cl' → logprob: -12.350214004516602
    4. 'cluster' → logprob: -12.850214004516602
    5. '_clusters' → logprob: -15.475214004516602
    6. '           ' → logprob: -15.475214004516602
    7. '   ' → logprob: -16.3502140045166
    8. '(cl' → logprob: -16.4752140045166
    9. 'c' → logprob: -16.9752140045166
    10. '               ' → logprob: -17.1002140045166

Token 597: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -2.45848218582978e-06
    2. 'min' → logprob: -13.00000286102295
    3. '[max' → logprob: -16.875001907348633
    4. '[' → logprob: -16.875001907348633
    5. '[m' → logprob: -17.500001907348633
    6. '[
' → logprob: -17.625001907348633
    7. '```' → logprob: -18.000001907348633
    8. '(min' → logprob: -18.875001907348633
    9. ' [' → logprob: -18.875001907348633
    10. '=min' → logprob: -19.625001907348633

Token 598: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0001532401074655354
    2. 'j' → logprob: -9.500153541564941
    3. '_i' → logprob: -9.500153541564941
    4. '```' → logprob: -13.875153541564941
    5. '_' → logprob: -14.125153541564941
    6. '+' → logprob: -14.875153541564941
    7. ']' → logprob: -15.250153541564941
    8. '_
' → logprob: -15.500153541564941
    9. '
' → logprob: -15.875153541564941
    10. '\' → logprob: -16.062652587890625

Token 599: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5944194197654724
    2. ']' → logprob: -1.2194194793701172
    3. ')' → logprob: -2.469419479370117
    4. '
' → logprob: -3.344419479370117
    5. ']
' → logprob: -4.094419479370117
    6. ')
' → logprob: -5.344419479370117
    7. '           ' → logprob: -5.594419479370117
    8. '       ' → logprob: -6.844419479370117
    9. '                
' → logprob: -6.969419479370117
    10. '                   ' → logprob: -7.094419479370117

Token 600: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010338276624679565
    2. '
' → logprob: -5.385338306427002
    3. '                
' → logprob: -5.635338306427002
    4. 'new' → logprob: -6.885338306427002
    5. '<|end|>' → logprob: -8.010337829589844
    6. '  
' → logprob: -8.385337829589844
    7. ' new' → logprob: -8.760337829589844
    8. 'self' → logprob: -9.385337829589844
    9. '```' → logprob: -9.885337829589844
    10. ' 
' → logprob: -10.260337829589844

Token 601: ' ni' (ID: 2565)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29387980699539185
    2. 'self' → logprob: -1.543879747390747
    3. ' self' → logprob: -3.668879747390747
    4. '#' → logprob: -5.418879985809326
    5. 'new' → logprob: -5.543879985809326
    6. 'for' → logprob: -6.168879985809326
    7. '                
' → logprob: -6.418879985809326
    8. ' new' → logprob: -6.918879985809326
    9. '
' → logprob: -7.043879985809326
    10. ' for' → logprob: -7.168879985809326

Token 602: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02587359957396984
    2. '_nodes' → logprob: -4.40087366104126
    3. '=' → logprob: -4.77587366104126
    4. 'odes' → logprob: -5.90087366104126
    5. '   ' → logprob: -6.90087366104126
    6. 'nodes' → logprob: -7.40087366104126
    7. 'ode' → logprob: -9.150873184204102
    8. '       ' → logprob: -9.525873184204102
    9. '     ' → logprob: -9.900873184204102
    10. '           ' → logprob: -10.025873184204102

Token 603: ' cluster' (ID: 19723)
  Prédit: 'cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluster' → logprob: -0.10020861029624939
    2. ' cluster' → logprob: -2.3502085208892822
    3. '	cluster' → logprob: -13.975208282470703
    4. '   ' → logprob: -14.225208282470703
    5. ' ' → logprob: -15.725208282470703
    6. '(cluster' → logprob: -15.975208282470703
    7. '       ' → logprob: -17.100208282470703
    8. '           ' → logprob: -17.100208282470703
    9. 'clusters' → logprob: -17.225208282470703
    10. '    ' → logprob: -17.600208282470703

Token 604: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.2664456789934775e-06
    2. '_tokens' → logprob: -13.875000953674316
    3. 's' → logprob: -15.750000953674316
    4. '_' → logprob: -17.250001907348633
    5. '_n' → logprob: -17.500001907348633
    6. '_node' → logprob: -17.625001907348633
    7. '_notes' → logprob: -17.625001907348633
    8. 'nodes' → logprob: -18.375001907348633
    9. '_indices' → logprob: -18.500001907348633
    10. '[_' → logprob: -18.500001907348633

Token 605: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -2.2200749754119897e-06
    2. 'min' → logprob: -13.375001907348633
    3. '[' → logprob: -15.000001907348633
    4. '=min' → logprob: -15.125001907348633
    5. ' =' → logprob: -17.625001907348633
    6. '(min' → logprob: -18.125001907348633
    7. ' [' → logprob: -18.250001907348633
    8. '[
' → logprob: -18.750001907348633
    9. '[max' → logprob: -19.000001907348633
    10. '[m' → logprob: -19.250001907348633

Token 606: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00012487331696320325
    2. '_j' → logprob: -9.00012493133545
    3. 'i' → logprob: -13.50012493133545
    4. '[i' → logprob: -17.625123977661133
    5. '```' → logprob: -17.625123977661133
    6. 'j' → logprob: -18.625123977661133
    7. 'I' → logprob: -19.000123977661133
    8. '_' → logprob: -19.250123977661133
    9. 'min' → logprob: -19.875123977661133
    10. '[' → logprob: -20.500123977661133

Token 607: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3659386932849884
    2. '
' → logprob: -1.615938663482666
    3. ']
' → logprob: -3.240938663482666
    4. ']' → logprob: -3.740938663482666
    5. ' 
' → logprob: -4.365938663482666
    6. ')
' → logprob: -4.490938663482666
    7. ')' → logprob: -5.240938663482666
    8. '                
' → logprob: -5.240938663482666
    9. '                   ' → logprob: -6.365938663482666
    10. '                ' → logprob: -6.490938663482666

Token 608: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034406621009111404
    2. 'nj' → logprob: -4.034406661987305
    3. '                
' → logprob: -4.784406661987305
    4. 'new' → logprob: -5.284406661987305
    5. '                   ' → logprob: -7.034406661987305
    6. ',' → logprob: -7.409406661987305
    7. '
' → logprob: -8.159406661987305
    8. '                    
' → logprob: -8.909406661987305
    9. ' nj' → logprob: -9.284406661987305
    10. ',n' → logprob: -9.284406661987305

Token 609: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' (adapté à ' nj') → logprob: -7.5649528298527e-05
    2. ' nj' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.375075340270996
    4. '
' → logprob: -16.000076293945312
    5. 'n' → logprob: -16.125076293945312
    6. 'cj' → logprob: -16.375076293945312
    7. '```' → logprob: -17.500076293945312
    8. 'node' → logprob: -17.875076293945312
    9. '    
' → logprob: -17.875076293945312
    10. '       ' → logprob: -18.125076293945312

Token 610: ' =' (ID: 314)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.026465173810720444
    2. '=' → logprob: -4.401464939117432
    3. ' =' → logprob: -4.776464939117432
    4. '[' → logprob: -6.151464939117432
    5. '=min' → logprob: -6.901464939117432
    6. 'cluster' → logprob: -7.401464939117432
    7. '[j' → logprob: -7.901464939117432
    8. '```' → logprob: -8.77646541595459
    9. '           ' → logprob: -9.02646541595459
    10. 'min' → logprob: -9.15146541595459

Token 611: ' cluster' (ID: 19723)
  Prédit: 'cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluster' → logprob: -0.00861468818038702
    2. ' cluster' → logprob: -4.758614540100098
    3. '	cluster' → logprob: -16.133615493774414
    4. '(cluster' → logprob: -17.008615493774414
    5. 'clusters' → logprob: -17.758615493774414
    6. '.cluster' → logprob: -19.008615493774414
    7. 'Cluster' → logprob: -19.383615493774414
    8. 'club' → logprob: -19.633615493774414
    9. '   ' → logprob: -19.758615493774414
    10. '           ' → logprob: -20.008615493774414

Token 612: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.008063302375376225
    2. '_j' → logprob: -4.883063316345215
    3. '[min' → logprob: -8.133063316345215
    4. 'Nodes' → logprob: -9.383063316345215
    5. '[j' → logprob: -9.758063316345215
    6. 'nodes' → logprob: -11.633063316345215
    7. 'j' → logprob: -13.133063316345215
    8. '_n' → logprob: -13.383063316345215
    9. 'min' → logprob: -13.508063316345215
    10. '_tokens' → logprob: -13.758063316345215

Token 613: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. 'min' → logprob: -17.5
    4. ' [' → logprob: -17.75
    5. '[m' → logprob: -18.625
    6. '           ' → logprob: -18.625
    7. '[j' → logprob: -18.75
    8. '               ' → logprob: -19.625
    9. '[max' → logprob: -19.875
    10. '   ' → logprob: -20.5

Token 614: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.306760805164231e-05
    2. '_i' → logprob: -11.37501335144043
    3. '[j' → logprob: -14.50001335144043
    4. '```' → logprob: -14.75001335144043
    5. '+' → logprob: -15.62501335144043
    6. '_js' → logprob: -16.37501335144043
    7. '           ' → logprob: -16.50001335144043
    8. 'j' → logprob: -16.50001335144043
    9. '               ' → logprob: -17.37501335144043
    10. '_' → logprob: -17.62501335144043

Token 615: ']

' (ID: 3144)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32128334045410156
    2. ')' → logprob: -1.6962833404541016
    3. '<|end|>' → logprob: -2.6962833404541016
    4. ']' → logprob: -4.196283340454102
    5. '
' → logprob: -5.446283340454102
    6. '           ' → logprob: -6.696283340454102
    7. '<|end|>' → logprob: -6.696283340454102
    8. ')
' → logprob: -6.946283340454102
    9. '                
' → logprob: -8.446283340454102
    10. '                   ' → logprob: -8.696283340454102

Token 616: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006334479432553053
    2. '
' → logprob: -6.25633430480957
    3. '                
' → logprob: -6.25633430480957
    4. 'self' → logprob: -6.75633430480957
    5. 'new' → logprob: -7.00633430480957
    6. '```' → logprob: -9.00633430480957
    7. '  
' → logprob: -9.25633430480957
    8. ' self' → logprob: -10.00633430480957
    9. ' new' → logprob: -10.13133430480957
    10. ' 
' → logprob: -11.00633430480957

Token 617: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5368826985359192
    2. 'self' → logprob: -0.9118826985359192
    3. '#' (adapté à ' #') → logprob: -4.6618828773498535
    4. ' self' → logprob: -6.4118828773498535
    5. 'new' → logprob: -6.5368828773498535
    6. 'for' → logprob: -7.1618828773498535
    7. '                
' → logprob: -8.911882400512695
    8. '
' → logprob: -9.661882400512695
    9. ' #' → logprob: -9.661882400512695
    10. ' for' → logprob: -10.911882400512695

Token 618: ' Connect' (ID: 16834)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010931799188256264
    2. '#' → logprob: -4.885931968688965
    3. '               ' → logprob: -6.760931968688965
    4. 'for' → logprob: -7.010931968688965
    5. 'new' → logprob: -7.010931968688965
    6. ' self' → logprob: -8.010931968688965
    7. ' #' → logprob: -11.760931968688965
    8. '           ' → logprob: -12.885931968688965
    9. '                
' → logprob: -13.010931968688965
    10. ' for' → logprob: -13.385931968688965

Token 619: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.38745689392089844
    2. ' new' → logprob: -1.2624568939208984
    3. '(new' → logprob: -4.137456893920898
    4. 'self' → logprob: -4.262456893920898
    5. '               ' → logprob: -5.012456893920898
    6. ' self' → logprob: -7.137456893920898
    7. '[new' → logprob: -7.762456893920898
    8. '(self' → logprob: -8.637456893920898
    9. 'ni' → logprob: -9.887456893920898
    10. ' ni' → logprob: -10.762456893920898

Token 620: ' internal' (ID: 8812)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.676292231422849e-05
    2. ' _' → logprob: -12.000017166137695
    3. '               ' → logprob: -12.250017166137695
    4. '_' → logprob: -12.375017166137695
    5. 'node' → logprob: -14.500017166137695
    6. '           ' → logprob: -15.125017166137695
    7. '_nodes' → logprob: -15.625017166137695
    8. '   ' → logprob: -16.000017166137695
    9. '_NODE' → logprob: -16.500017166137695
    10. '_internal' → logprob: -16.625017166137695

Token 621: ' node' (ID: 4596)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.30766624212265015
    2. ' node' → logprob: -1.432666301727295
    3. '               ' → logprob: -4.307666301727295
    4. 'node' → logprob: -4.557666301727295
    5. ' _' → logprob: -6.182666301727295
    6. '_nodes' → logprob: -10.057665824890137
    7. ' Node' → logprob: -10.307665824890137
    8. '_' → logprob: -11.057665824890137
    9. 'Node' → logprob: -11.807665824890137
    10. '   ' → logprob: -11.807665824890137

Token 622: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.40627503395080566
    2. '               ' → logprob: -1.2812750339508057
    3. 'to' → logprob: -3.5312750339508057
    4. '(self' → logprob: -4.406274795532227
    5. 'self' → logprob: -4.531274795532227
    6. ' self' → logprob: -6.156274795532227
    7. ',' → logprob: -7.531274795532227
    8. ' with' → logprob: -8.031274795532227
    9. '(new' → logprob: -8.406274795532227
    10. ' (' → logprob: -8.406274795532227

Token 623: ' nodes' (ID: 15749)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.005267549771815538
    2. ' ni' → logprob: -5.25526762008667
    3. '[' → logprob: -10.505267143249512
    4. '   ' → logprob: -12.255267143249512
    5. ' [' → logprob: -15.380267143249512
    6. 'self' → logprob: -15.505267143249512
    7. '-ni' → logprob: -15.630267143249512
    8. '[
' → logprob: -16.005268096923828
    9. 'ci' → logprob: -16.255268096923828
    10. '
' → logprob: -16.255268096923828

Token 624: ' representing' (ID: 25389)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10177409648895264
    2. 'ni' → logprob: -3.476774215698242
    3. ' in' → logprob: -3.851774215698242
    4. 'in' → logprob: -4.226774215698242
    5. ' ni' → logprob: -4.601774215698242
    6. '               ' → logprob: -5.226774215698242
    7. ' =' → logprob: -5.226774215698242
    8. ' at' → logprob: -6.476774215698242
    9. '(' → logprob: -6.851774215698242
    10. ':' → logprob: -7.101774215698242

Token 625: ' clusters' (ID: 51310)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.546650767326355
    2. ' ci' → logprob: -1.796650767326355
    3. 'clusters' → logprob: -2.9216508865356445
    4. 'ni' → logprob: -3.0466508865356445
    5. ' the' → logprob: -3.0466508865356445
    6. ' ni' → logprob: -3.2966508865356445
    7. 'the' → logprob: -3.4216508865356445
    8. ' clusters' → logprob: -3.6716508865356445
    9. ' both' → logprob: -5.9216508865356445
    10. 'both' → logprob: -6.0466508865356445

Token 626: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033180462196469307
    2. '                
' → logprob: -6.753317832946777
    3. 'self' → logprob: -7.128317832946777
    4. '
' → logprob: -7.628317832946777
    5. ' self' → logprob: -8.628317832946777
    6. 'new' → logprob: -8.878317832946777
    7. ' new' → logprob: -8.878317832946777
    8. ',' → logprob: -10.253317832946777
    9. '           ' → logprob: -10.378317832946777
    10. ' and' → logprob: -10.378317832946777

Token 627: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003045994380954653
    2. 'self' → logprob: -8.875304222106934
    3. 'new' → logprob: -9.875304222106934
    4. '                
' → logprob: -10.125304222106934
    5. '
' → logprob: -11.500304222106934
    6. ' and' → logprob: -11.625304222106934
    7. ' new' → logprob: -11.625304222106934
    8. ' self' → logprob: -11.750304222106934
    9. ',' → logprob: -11.750304222106934
    10. '```' → logprob: -12.000304222106934

Token 628: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0211286973208189
    2. 'self' (adapté à ' self') → logprob: -4.0211286544799805
    3. ' self' → logprob: -5.8961286544799805
    4. '
' → logprob: -9.14612865447998
    5. '```' → logprob: -10.02112865447998
    6. '           ' → logprob: -10.77112865447998
    7. '   ' → logprob: -10.89612865447998
    8. '                
' → logprob: -11.77112865447998
    9. '                   ' → logprob: -12.27112865447998
    10. '``' → logprob: -12.77112865447998

Token 629: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00012594614236149937
    2. '.ad' → logprob: -9.500125885009766
    3. '.' → logprob: -10.000125885009766
    4. 'add' → logprob: -12.375125885009766
    5. ' .' → logprob: -14.125125885009766
    6. '   ' → logprob: -15.375125885009766
    7. ').' → logprob: -15.875125885009766
    8. '.append' → logprob: -17.000125885009766
    9. ':add' → logprob: -17.125125885009766
    10. '           ' → logprob: -17.250125885009766

Token 630: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00043472214019857347
    2. '_' → logprob: -7.750434875488281
    3. '_node' → logprob: -13.375434875488281
    4. '_ed' → logprob: -14.375434875488281
    5. '_edges' → logprob: -14.625434875488281
    6. ' _' → logprob: -14.875434875488281
    7. '_e' → logprob: -15.125434875488281
    8. '_line' → logprob: -15.125434875488281
    9. '(_' → logprob: -15.500434875488281
    10. 'd' → logprob: -17.25043487548828

Token 631: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.05653757229447365
    2. '(' → logprob: -2.931537628173828
    3. '(n' → logprob: -6.431537628173828
    4. '(ne' → logprob: -10.931537628173828
    5. 'new' → logprob: -11.056537628173828
    6. ' (' → logprob: -13.056537628173828
    7. '(ci' → logprob: -13.431537628173828
    8. '(nb' → logprob: -13.681537628173828
    9. '(nx' → logprob: -13.681537628173828
    10. '((' → logprob: -13.931537628173828

Token 632: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.033986713737249374
    2. 'ode' → logprob: -3.408986806869507
    3. 'node' → logprob: -8.408987045288086
    4. 'odes' → logprob: -10.033987045288086
    5. 'i' → logprob: -10.908987045288086
    6. 'internal' → logprob: -10.908987045288086
    7. '_i' → logprob: -12.158987045288086
    8. 'oi' → logprob: -12.283987045288086
    9. '_internal' → logprob: -12.533987045288086
    10. '``' → logprob: -13.408987045288086

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014251544780563563
    2. ' ,' → logprob: -8.875142097473145
    3. ',
' → logprob: -13.750142097473145
    4. ',n' → logprob: -14.250142097473145
    5. ' ni' → logprob: -14.875142097473145
    6. ')' → logprob: -16.12514305114746
    7. '(' → logprob: -16.12514305114746
    8. '   ' → logprob: -16.62514305114746
    9. ',new' → logprob: -17.00014305114746
    10. '```' → logprob: -17.12514305114746

Token 634: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.0001093841710826382
    2. ' ni' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.375109672546387
    4. 'n' → logprob: -16.37510871887207
    5. '-ni' → logprob: -17.00010871887207
    6. 'Ni' → logprob: -17.87510871887207
    7. ' ' → logprob: -18.37510871887207
    8. 'nu' → logprob: -18.50010871887207
    9. '[' → logprob: -18.50010871887207
    10. 'ri' → logprob: -18.75010871887207

Token 635: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4745219945907593
    2. ')' → logprob: -0.9745219945907593
    3. '               ' → logprob: -7.849522113800049
    4. ')
' → logprob: -9.84952163696289
    5. '           ' → logprob: -14.34952163696289
    6. ')

' → logprob: -14.72452163696289
    7. '                   ' → logprob: -15.09952163696289
    8. ' )
' → logprob: -15.34952163696289
    9. ')#' → logprob: -15.97452163696289
    10. '),' → logprob: -16.22452163696289

Token 636: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022161537781357765
    2. 'self' → logprob: -6.377216339111328
    3. '                   ' → logprob: -8.252216339111328
    4. ' self' → logprob: -9.252216339111328
    5. '                
' → logprob: -9.627216339111328
    6. '           ' → logprob: -11.002216339111328
    7. '                ' → logprob: -11.377216339111328
    8. ' ' → logprob: -11.752216339111328
    9. '                    
' → logprob: -11.752216339111328
    10. 'new' → logprob: -11.877216339111328

Token 637: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009297464974224567
    2. ' self' → logprob: -5.2592973709106445
    3. '               ' → logprob: -5.5092973709106445
    4. '                   ' → logprob: -12.259297370910645
    5. '           ' → logprob: -13.759297370910645
    6. '                ' → logprob: -15.384297370910645
    7. '	self' → logprob: -16.25929832458496
    8. '       ' → logprob: -16.25929832458496
    9. '   ' → logprob: -16.50929832458496
    10. '              ' → logprob: -16.50929832458496

Token 638: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.000283265660982579
    2. 'add' → logprob: -8.250283241271973
    3. '.' → logprob: -10.875283241271973
    4. ' add' → logprob: -13.750283241271973
    5. '.ad' → logprob: -14.000283241271973
    6. '	add' → logprob: -14.875283241271973
    7. ' .' → logprob: -15.000283241271973
    8. ')add' → logprob: -15.500283241271973
    9. ':add' → logprob: -16.62528419494629
    10. '_add' → logprob: -17.00028419494629

Token 639: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -6.392202976712724e-06
    2. '_node' → logprob: -12.875006675720215
    3. 'edge' → logprob: -12.875006675720215
    4. 'Edge' → logprob: -14.000006675720215
    5. '(_' → logprob: -16.1250057220459
    6. '_EDGE' → logprob: -16.7500057220459
    7. '_edges' → logprob: -16.7500057220459
    8. '(edge' → logprob: -18.0000057220459
    9. '_line' → logprob: -18.5000057220459
    10. '(' → logprob: -18.5000057220459

Token 640: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0005541055579669774
    2. '(' → logprob: -7.500554084777832
    3. ' (' → logprob: -14.625554084777832
    4. 'new' → logprob: -15.125554084777832
    5. '(n' → logprob: -15.375554084777832
    6. ' new' → logprob: -16.25055503845215
    7. ',new' → logprob: -17.00055503845215
    8. '[new' → logprob: -17.00055503845215
    9. '(self' → logprob: -18.62555503845215
    10. '('' → logprob: -19.12555503845215

Token 641: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.786196975852363e-05
    2. 'node' → logprob: -10.500038146972656
    3. '_' → logprob: -12.250038146972656
    4. 'ode' → logprob: -14.000038146972656
    5. '_internal' → logprob: -14.125038146972656
    6. '```' → logprob: -14.250038146972656
    7. 'Node' → logprob: -14.625038146972656
    8. '_j' → logprob: -15.000038146972656
    9. ' _' → logprob: -15.000038146972656
    10. '_code' → logprob: -15.125038146972656

Token 642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. ',n' → logprob: -11.00002670288086
    3. ' ,' → logprob: -11.75002670288086
    4. ',new' → logprob: -13.87502670288086
    5. ',
' → logprob: -14.12502670288086
    6. '               ' → logprob: -16.00002670288086
    7. '                   ' → logprob: -17.12502670288086
    8. ',j' → logprob: -17.12502670288086
    9. ',",' → logprob: -17.12502670288086
    10. 'new' → logprob: -17.37502670288086

Token 643: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -2.2246291337069124e-05
    2. ' nj' → logprob: -10.750021934509277
    3. 'n' → logprob: -15.000021934509277
    4. '   ' → logprob: -15.000021934509277
    5. ' ' → logprob: -17.375022888183594
    6. '
' → logprob: -17.500022888183594
    7. '    ' → logprob: -17.500022888183594
    8. '     ' → logprob: -18.875022888183594
    9. '  ' → logprob: -19.000022888183594
    10. '       ' → logprob: -19.625022888183594

Token 644: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9694823026657104
    2. '               ' → logprob: -1.0944823026657104
    3. '<|end|>' → logprob: -1.3444823026657104
    4. ')' → logprob: -4.219482421875
    5. '                
' → logprob: -5.344482421875
    6. '<|end|>' → logprob: -5.719482421875
    7. '  
' → logprob: -7.594482421875
    8. ' 
' → logprob: -8.469482421875
    9. '```' → logprob: -8.469482421875
    10. ',' → logprob: -8.594482421875

Token 645: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027963079512119293
    2. '                
' → logprob: -3.652963161468506
    3. '                

' → logprob: -7.652963161468506
    4. '#' → logprob: -7.777963161468506
    5. '
' → logprob: -8.277962684631348
    6. '                    
' → logprob: -9.527962684631348
    7. 'new' → logprob: -9.652962684631348
    8. '                
                
' → logprob: -9.777962684631348
    9. '```' → logprob: -9.777962684631348
    10. '               
' → logprob: -9.902962684631348

Token 646: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.05621565878391266
    2. 'new' → logprob: -3.181215763092041
    3. '               ' → logprob: -4.931215763092041
    4. 'merged' → logprob: -5.431215763092041
    5. 'clusters' → logprob: -6.556215763092041
    6. '           ' → logprob: -10.431215286254883
    7. '                
' → logprob: -10.556215286254883
    8. ' #' → logprob: -10.931215286254883
    9. 'combined' → logprob: -10.931215286254883
    10. '```' → logprob: -12.306215286254883

Token 647: ' merge' (ID: 20345)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30776089429855347
    2. 'new' → logprob: -1.6827609539031982
    3. 'merged' → logprob: -2.5577609539031982
    4. 'clusters' → logprob: -6.932760715484619
    5. '           ' → logprob: -8.057761192321777
    6. '               ' → logprob: -9.307761192321777
    7. ' merged' → logprob: -9.932761192321777
    8. ' #' → logprob: -10.182761192321777
    9. 'combined' → logprob: -10.182761192321777
    10. '   ' → logprob: -10.932761192321777

Token 648: ' two' (ID: 1920)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.02832144685089588
    2. ' clusters' → logprob: -4.153321266174316
    3. '               ' → logprob: -5.403321266174316
    4. '_clusters' → logprob: -5.653321266174316
    5. 'cluster' → logprob: -6.278321266174316
    6. '_cluster' → logprob: -7.028321266174316
    7. '           ' → logprob: -7.403321266174316
    8. ' =' → logprob: -7.778321266174316
    9. 'cl' → logprob: -8.653321266174316
    10. '(cl' → logprob: -9.903321266174316

Token 649: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.3429375886917114
    2. '_clusters' → logprob: -1.3429375886917114
    3. ' clusters' → logprob: -3.592937469482422
    4. '_cluster' → logprob: -7.592937469482422
    5. '_cl' → logprob: -7.967937469482422
    6. 'cl' → logprob: -8.592937469482422
    7. 'cluster' → logprob: -8.717937469482422
    8. '_' → logprob: -9.342937469482422
    9. ' =' → logprob: -9.342937469482422
    10. '           ' → logprob: -9.467937469482422

Token 650: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29988375306129456
    2. ' clusters' → logprob: -1.7998837232589722
    3. ' new' → logprob: -2.9248838424682617
    4. ' merged' → logprob: -4.174883842468262
    5. 'clusters' → logprob: -4.424883842468262
    6. '                
' → logprob: -5.174883842468262
    7. ' =' → logprob: -6.549883842468262
    8. 'merged' → logprob: -6.674883842468262
    9. '
' → logprob: -6.799883842468262
    10. ' combined' → logprob: -6.924883842468262

Token 651: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0874762088060379
    2. ' clusters' → logprob: -2.9624762535095215
    3. ' =' → logprob: -4.3374762535095215
    4. 'clusters' → logprob: -4.7124762535095215
    5. ' new' → logprob: -5.4624762535095215
    6. ' merged' → logprob: -6.3374762535095215
    7. ',' → logprob: -6.3374762535095215
    8. '                
' → logprob: -6.9624762535095215
    9. ' combined' → logprob: -8.212475776672363
    10. 'merged' → logprob: -8.587475776672363

Token 652: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6532176733016968
    2. ' merged' → logprob: -1.1532176733016968
    3. 'merged' → logprob: -2.5282177925109863
    4. 'new' (adapté à ' new') → logprob: -2.7782177925109863
    5. ' clusters' → logprob: -4.528217792510986
    6. '               ' → logprob: -5.153217792510986
    7. 'clusters' → logprob: -5.278217792510986
    8. ' combined' → logprob: -8.653217315673828
    9. 'combined' → logprob: -9.528217315673828
    10. 'cluster' → logprob: -10.278217315673828

Token 653: '_cluster' (ID: 65346)
  Prédit: '_cluster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cluster' → logprob: -0.0005231272662058473
    2. '_clusters' → logprob: -8.000523567199707
    3. 'cluster' → logprob: -8.625523567199707
    4. '_node' → logprob: -12.875523567199707
    5. 'clusters' → logprob: -13.125523567199707
    6. '_cl' → logprob: -13.250523567199707
    7. '_' → logprob: -14.125523567199707
    8. '_ci' → logprob: -15.000523567199707
    9. 'Cluster' → logprob: -15.500523567199707
    10. '_i' → logprob: -16.12552261352539

Token 654: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014157623052597
    2. '=' → logprob: -1.701415777206421
    3. 's' → logprob: -13.076416015625
    4. 'clusters' → logprob: -15.701416015625
    5. ' =
' → logprob: -16.201416015625
    6. '=
' → logprob: -16.951416015625
    7. ' clusters' → logprob: -17.326416015625
    8. '_clusters' → logprob: -17.326416015625
    9. ' ' → logprob: -17.951416015625
    10. '＝' → logprob: -17.951416015625

Token 655: ' ci' (ID: 7405)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.0004421127669047564
    2. ' ci' → logprob: -7.750442028045654
    3. 'clusters' → logprob: -11.625442504882812
    4. '   ' → logprob: -13.250442504882812
    5. '(ci' → logprob: -14.500442504882812
    6. 'cluster' → logprob: -16.250442504882812
    7. '       ' → logprob: -16.750442504882812
    8. '_ci' → logprob: -17.625442504882812
    9. ' clusters' → logprob: -18.125442504882812
    10. 'cl' → logprob: -18.375442504882812

Token 656: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.003918464761227369
    2. '|' → logprob: -5.753918647766113
    3. '.' → logprob: -7.253918647766113
    4. ' |' → logprob: -10.378918647766113
    5. 'union' → logprob: -13.503918647766113
    6. '   ' → logprob: -15.128918647766113
    7. '.copy' → logprob: -15.753918647766113
    8. '.|' → logprob: -16.378917694091797
    9. ' .' → logprob: -16.628917694091797
    10. '.update' → logprob: -16.878917694091797

Token 657: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0010731808142736554
    2. 'cj' → logprob: -6.876073360443115
    3. '(' → logprob: -10.251072883605957
    4. 'c' → logprob: -12.876072883605957
    5. ' cj' → logprob: -13.501072883605957
    6. '(cl' → logprob: -15.001072883605957
    7. '(ci' → logprob: -15.126072883605957
    8. '(C' → logprob: -16.001073837280273
    9. '```' → logprob: -16.251073837280273
    10. ')c' → logprob: -16.501073837280273

Token 658: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00016027313540689647
    2. 'l' → logprob: -8.750160217285156
    3. '{' → logprob: -14.500160217285156
    4. 'cj' → logprob: -14.500160217285156
    5. 'lj' → logprob: -15.375160217285156
    6. '[j' → logprob: -15.875160217285156
    7. 'J' → logprob: -16.125160217285156
    8. '_j' → logprob: -16.625160217285156
    9. 'clusters' → logprob: -17.250160217285156
    10. '{
' → logprob: -17.500160217285156

Token 659: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20281173288822174
    2. ')
' → logprob: -1.7028117179870605
    3. '               ' → logprob: -6.9528117179870605
    4. '())' → logprob: -8.452812194824219
    5. '())
' → logprob: -8.952812194824219
    6. ')
' → logprob: -9.827812194824219
    7. '()' → logprob: -11.327812194824219
    8. '           ' → logprob: -11.452812194824219
    9. ')

' → logprob: -12.202812194824219
    10. '()
' → logprob: -12.327812194824219

Token 660: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018703327514231205
    2. 'clusters' → logprob: -7.251870155334473
    3. '                
' → logprob: -7.751870155334473
    4. ' clusters' → logprob: -8.001870155334473
    5. '<|end|>' → logprob: -8.876870155334473
    6. '           ' → logprob: -9.251870155334473
    7. '```' → logprob: -10.126870155334473
    8. '_clusters' → logprob: -10.626870155334473
    9. '                   ' → logprob: -11.126870155334473
    10. '              ' → logprob: -11.251870155334473

Token 661: ' #' (ID: 1069)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.28747135400772095
    2. '               ' → logprob: -1.5374712944030762
    3. ' clusters' → logprob: -3.662471294403076
    4. '#' (adapté à ' #') → logprob: -4.787471294403076
    5. 'new' → logprob: -7.537471294403076
    6. '           ' → logprob: -8.912471771240234
    7. 'cluster' → logprob: -9.912471771240234
    8. 'del' → logprob: -10.037471771240234
    9. ' new' → logprob: -10.537471771240234
    10. ' #' → logprob: -10.787471771240234

Token 662: ' Build' (ID: 10885)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5440101623535156
    2. 'clusters' → logprob: -0.9190101623535156
    3. 'for' → logprob: -4.544010162353516
    4. '           ' → logprob: -5.294010162353516
    5. 'new' → logprob: -6.044010162353516
    6. '               ' → logprob: -7.044010162353516
    7. 'del' → logprob: -7.169010162353516
    8. 'd' → logprob: -8.044010162353516
    9. '   ' → logprob: -8.669010162353516
    10. 'cluster' → logprob: -8.794010162353516

Token 663: ' new' (ID: 620)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9162702560424805
    2. ' new' → logprob: -1.2912702560424805
    3. '               ' → logprob: -1.5412702560424805
    4. 'new' → logprob: -2.9162702560424805
    5. '           ' → logprob: -4.1662702560424805
    6. 'clusters' → logprob: -4.2912702560424805
    7. ' #' → logprob: -4.6662702560424805
    8. ' clusters' → logprob: -4.6662702560424805
    9. 'for' → logprob: -6.1662702560424805
    10. ' for' → logprob: -6.5412702560424805

Token 664: ' distance' (ID: 9324)
  Prédit: '_cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cluster' → logprob: -0.657008171081543
    2. 'clusters' → logprob: -1.782008171081543
    3. '_clusters' → logprob: -1.907008171081543
    4. 'cluster' → logprob: -3.032008171081543
    5. 'd' → logprob: -3.657008171081543
    6. '_matrix' → logprob: -4.282008171081543
    7. '_distance' → logprob: -4.407008171081543
    8. '           ' → logprob: -4.407008171081543
    9. 'dist' → logprob: -4.532008171081543
    10. '               ' → logprob: -4.782008171081543

Token 665: ' row' (ID: 5225)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.1280301809310913
    2. 'matrix' → logprob: -1.2530301809310913
    3. '_matrix' → logprob: -1.7530301809310913
    4. '           ' → logprob: -2.378030300140381
    5. 'row' → logprob: -2.378030300140381
    6. 's' → logprob: -4.753030300140381
    7. '               ' → logprob: -5.128030300140381
    8. ' =' → logprob: -5.628030300140381
    9. '   ' → logprob: -5.753030300140381
    10. '=' → logprob: -5.753030300140381

Token 666: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07478921115398407
    2. ' new' → logprob: -2.94978928565979
    3. 'new' → logprob: -4.324789047241211
    4. ',' → logprob: -6.074789047241211
    5. ' =' → logprob: -7.074789047241211
    6. '                
' → logprob: -7.074789047241211
    7. '[new' → logprob: -7.324789047241211
    8. '[' → logprob: -7.824789047241211
    9. ',new' → logprob: -8.074789047241211
    10. '[]' → logprob: -8.949789047241211

Token 667: ' merged' (ID: 49536)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6346811652183533
    2. 'new' → logprob: -1.009681224822998
    3. ' new' → logprob: -3.134681224822998
    4. 'clusters' → logprob: -4.134681224822998
    5. 'the' → logprob: -4.259681224822998
    6. '               ' → logprob: -5.009681224822998
    7. 'len' → logprob: -5.134681224822998
    8. ' d' → logprob: -5.509681224822998
    9. ' clusters' → logprob: -5.509681224822998
    10. '           ' → logprob: -5.634681224822998

Token 668: ' cluster' (ID: 19723)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.6696543097496033
    2. 'cluster' → logprob: -0.7946543097496033
    3. 'new' → logprob: -4.794654369354248
    4. ' clusters' → logprob: -5.169654369354248
    5. 'row' → logprob: -5.294654369354248
    6. ' cluster' → logprob: -5.544654369354248
    7. '_cluster' → logprob: -6.044654369354248
    8. '[' → logprob: -6.169654369354248
    9. '[
' → logprob: -6.419654369354248
    10. '[new' → logprob: -6.419654369354248

Token 669: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02695777267217636
    2. ' new' → logprob: -4.401957988739014
    3. 'new' → logprob: -4.526957988739014
    4. '                
' → logprob: -6.151957988739014
    5. '
' → logprob: -7.901957988739014
    6. ',' → logprob: -8.651957511901855
    7. '           ' → logprob: -9.151957511901855
    8. '    
' → logprob: -9.276957511901855
    9. '[new' → logprob: -9.401957511901855
    10. '                ' → logprob: -9.651957511901855

Token 670: ' distance' (ID: 9324)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44317319989204407
    2. ' new' → logprob: -1.3181731700897217
    3. 'new' → logprob: -2.4431731700897217
    4. '[new' → logprob: -6.193173408508301
    5. '[' → logprob: -8.0681734085083
    6. ' d' → logprob: -8.3181734085083
    7. '           ' → logprob: -8.5681734085083
    8. 'd' → logprob: -8.5681734085083
    9. '   ' → logprob: -9.3181734085083
    10. ' [' → logprob: -9.8181734085083

Token 671: ' between' (ID: 2870)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5819171667098999
    2. '_row' → logprob: -1.3319171667099
    3. ' =' → logprob: -1.9569171667099
    4. '   ' → logprob: -3.9569172859191895
    5. '=' → logprob: -4.9569172859191895
    6. 'row' → logprob: -5.4569172859191895
    7. 'new' → logprob: -6.3319172859191895
    8. '_new' → logprob: -6.5819172859191895
    9. '           ' → logprob: -6.9569172859191895
    10. '       ' → logprob: -7.9569172859191895

Token 672: ' merged' (ID: 49536)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.052739217877388
    2. 'clusters' → logprob: -3.802739143371582
    3. ' new' → logprob: -3.927739143371582
    4. 'the' → logprob: -5.927739143371582
    5. '[new' → logprob: -6.302739143371582
    6. ' clusters' → logprob: -6.552739143371582
    7. 'merged' → logprob: -7.552739143371582
    8. '               ' → logprob: -8.177739143371582
    9. '=' → logprob: -8.552739143371582
    10. 'cluster' → logprob: -8.552739143371582

Token 673: ' cluster' (ID: 19723)
  Prédit: 'cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluster' → logprob: -0.662173330783844
    2. '_cluster' → logprob: -1.4121732711791992
    3. 'clusters' → logprob: -2.412173271179199
    4. ' cluster' → logprob: -2.787173271179199
    5. ' clusters' → logprob: -3.537173271179199
    6. 'new' → logprob: -4.162173271179199
    7. '_clusters' → logprob: -4.162173271179199
    8. ' new' → logprob: -4.412173271179199
    9. '[new' → logprob: -5.287173271179199
    10. '[' → logprob: -5.412173271179199

Token 674: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6519743800163269
    2. ' =' → logprob: -1.0269744396209717
    3. 's' → logprob: -2.9019744396209717
    4. '   ' → logprob: -3.5269744396209717
    5. 'new' → logprob: -4.151974201202393
    6. 'row' → logprob: -4.901974201202393
    7. '[new' → logprob: -5.776974201202393
    8. 'to' → logprob: -6.026974201202393
    9. 'and' → logprob: -6.151974201202393
    10. ' and' → logprob: -7.151974201202393

Token 675: ' others' (ID: 5036)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.04569849371910095
    2. 'all' → logprob: -3.795698404312134
    3. ' other' → logprob: -4.795698642730713
    4. 'k' → logprob: -5.170698642730713
    5. 'each' → logprob: -5.795698642730713
    6. 'others' → logprob: -5.795698642730713
    7. ' all' → logprob: -7.795698642730713
    8. '   ' → logprob: -7.920698642730713
    9. '               ' → logprob: -8.420698165893555
    10. '           ' → logprob: -8.545698165893555

Token 676: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008196924813091755
    2. 'new' → logprob: -5.758196830749512
    3. '                
' → logprob: -6.133196830749512
    4. '
' → logprob: -7.383196830749512
    5. ' new' → logprob: -7.508196830749512
    6. '           ' → logprob: -7.883196830749512
    7. ',' → logprob: -8.008196830749512
    8. '[' → logprob: -8.883196830749512
    9. '[new' → logprob: -8.883196830749512
    10. '    
' → logprob: -9.633196830749512

Token 677: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005470439791679382
    2. 'new' → logprob: -6.255470275878906
    3. ' new' → logprob: -6.380470275878906
    4. '                   ' → logprob: -7.880470275878906
    5. '                
' → logprob: -7.880470275878906
    6. '           ' → logprob: -8.255470275878906
    7. '[' → logprob: -8.505470275878906
    8. '                ' → logprob: -8.880470275878906
    9. '			' → logprob: -9.255470275878906
    10. '[new' → logprob: -9.755470275878906

Token 678: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.468046098947525
    2. 'new' (adapté à ' new') → logprob: -1.4680460691452026
    3. '               ' → logprob: -1.9680460691452026
    4. ' d' → logprob: -6.218046188354492
    5. 'd' → logprob: -7.093046188354492
    6. '   ' → logprob: -8.718046188354492
    7. '           ' → logprob: -8.843046188354492
    8. ' row' → logprob: -9.218046188354492
    9. 'row' → logprob: -9.343046188354492
    10. ' distances' → logprob: -9.718046188354492

Token 679: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0017676468705758452
    2. '_dist' → logprob: -7.126767635345459
    3. '_d' → logprob: -7.251767635345459
    4. 'row' → logprob: -8.876768112182617
    5. '_cluster' → logprob: -10.001768112182617
    6. 'd' → logprob: -10.501768112182617
    7. ' =' → logprob: -10.876768112182617
    8. '=' → logprob: -12.251768112182617
    9. '_distance' → logprob: -12.251768112182617
    10. 'dist' → logprob: -12.751768112182617

Token 680: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409290075302124
    2. ' =' → logprob: -0.9740929007530212
    3. '   ' → logprob: -11.724092483520508
    4. '           ' → logprob: -12.974092483520508
    5. '       ' → logprob: -13.474092483520508
    6. '[' → logprob: -13.724092483520508
    7. '=[' → logprob: -13.724092483520508
    8. '=[]
' → logprob: -14.599092483520508
    9. '=[]' → logprob: -14.599092483520508
    10. ' ' → logprob: -15.224092483520508

Token 681: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25905299186706543
    2. '[]
' → logprob: -1.5090529918670654
    3. '[' → logprob: -5.0090532302856445
    4. '[
' → logprob: -7.8840532302856445
    5. '[(' → logprob: -10.884053230285645
    6. '[max' → logprob: -12.259053230285645
    7. '[min' → logprob: -12.259053230285645
    8. '[]

' → logprob: -12.509053230285645
    9. '[n' → logprob: -12.634053230285645
    10. '[int' → logprob: -13.509053230285645

Token 682: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5138603448867798
    2. 'for' → logprob: -1.6388603448867798
    3. ' for' → logprob: -1.7638603448867798
    4. '[' → logprob: -3.5138602256774902
    5. '                ' → logprob: -5.88886022567749
    6. ' ' → logprob: -7.38886022567749
    7. '                   ' → logprob: -7.63886022567749
    8. '                
' → logprob: -8.013860702514648
    9. '	for' → logprob: -8.138860702514648
    10. ',' → logprob: -8.388860702514648

Token 683: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4904058873653412
    2. 'for' (adapté à ' for') → logprob: -0.9904059171676636
    3. '               ' → logprob: -4.865406036376953
    4. '                ' → logprob: -4.990406036376953
    5. '[' → logprob: -7.990406036376953
    6. ' ' → logprob: -8.115406036376953
    7. '                   ' → logprob: -8.365406036376953
    8. '                    ' → logprob: -8.490406036376953
    9. '0' → logprob: -9.615406036376953
    10. ' ' → logprob: -9.740406036376953

Token 684: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00010354319238103926
    2. 'idx' → logprob: -9.500103950500488
    3. 'x' → logprob: -11.250103950500488
    4. 'z' → logprob: -11.250103950500488
    5. '_k' → logprob: -13.000103950500488
    6. 'index' → logprob: -15.625103950500488
    7. ' k' → logprob: -16.000102996826172
    8. '_idx' → logprob: -17.625102996826172
    9. 'i' → logprob: -17.750102996826172
    10. 'kx' → logprob: -17.875102996826172

Token 685: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023255029693245888
    2. 'in' → logprob: -3.7732551097869873
    3. ',' → logprob: -12.648255348205566
    4. ' ' → logprob: -13.023255348205566
    5. '	in' → logprob: -13.898255348205566
    6. '_in' → logprob: -14.523255348205566
    7. '  ' → logprob: -14.523255348205566
    8. 'range' → logprob: -14.773255348205566
    9. 'k' → logprob: -15.023255348205566
    10. 'n' → logprob: -15.148255348205566

Token 686: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.0033853515051305e-05
    2. ' range' → logprob: -9.750060081481934
    3. '(range' → logprob: -13.625060081481934
    4. ' ' → logprob: -15.500060081481934
    5. '[' → logprob: -16.125059127807617
    6. '   ' → logprob: -16.750059127807617
    7. '  ' → logprob: -17.625059127807617
    8. '	range' → logprob: -18.000059127807617
    9. 'cluster' → logprob: -18.375059127807617
    10. 'clusters' → logprob: -18.500059127807617

Token 687: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00021569548698607832
    2. ' len' → logprob: -8.875215530395508
    3. 'k' → logprob: -10.000215530395508
    4. '(len' → logprob: -11.250215530395508
    5. '   ' → logprob: -12.375215530395508
    6. '           ' → logprob: -12.375215530395508
    7. '0' → logprob: -12.875215530395508
    8. '               ' → logprob: -13.000215530395508
    9. '                   ' → logprob: -13.750215530395508
    10. '	len' → logprob: -14.125215530395508

Token 688: '(cl' (ID: 16811)
  Prédit: '(cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cl' → logprob: -0.00408647395670414
    2. '(d' → logprob: -5.504086494445801
    3. 'clusters' → logprob: -12.7540864944458
    4. '(cluster' → logprob: -12.8790864944458
    5. '(new' → logprob: -14.1290864944458
    6. '(' → logprob: -14.5040864944458
    7. '(c' → logprob: -15.0040864944458
    8. '(self' → logprob: -15.0040864944458
    9. 'd' → logprob: -15.1290864944458
    10. '(dist' → logprob: -15.6290864944458

Token 689: 'usters' (ID: 26011)
  Prédit: 'usters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usters' → logprob: -0.0019317318219691515
    2. 'clusters' → logprob: -6.251931667327881
    3. ' clusters' → logprob: -13.501932144165039
    4. 'uster' → logprob: -14.376932144165039
    5. '[' → logprob: -14.501932144165039
    6. 'sters' → logprob: -15.251932144165039
    7. '_clusters' → logprob: -15.501932144165039
    8. '   ' → logprob: -17.25193214416504
    9. '(cl' → logprob: -17.37693214416504
    10. '#' → logprob: -17.62693214416504

Token 690: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01637614704668522
    2. '):' → logprob: -4.14137601852417
    3. '):
' → logprob: -9.016376495361328
    4. '[k' → logprob: -9.891376495361328
    5. '                   ' → logprob: -10.516376495361328
    6. ')' → logprob: -10.641376495361328
    7. '               ' → logprob: -10.641376495361328
    8. '           ' → logprob: -11.391376495361328
    9. '[' → logprob: -11.391376495361328
    10. '       ' → logprob: -11.641376495361328

Token 691: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.40723246335983276
    2. '               ' → logprob: -1.1572325229644775
    3. ' if' → logprob: -4.407232284545898
    4. '           ' → logprob: -6.407232284545898
    5. ' ' → logprob: -6.782232284545898
    6. '                       ' → logprob: -7.032232284545898
    7. '[' → logprob: -7.157232284545898
    8. '                    
' → logprob: -7.407232284545898
    9. '   ' → logprob: -7.782232284545898
    10. '                ' → logprob: -7.782232284545898

Token 692: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42341625690460205
    2. ' new' → logprob: -1.298416256904602
    3. ' ' → logprob: -3.6734161376953125
    4. 'if' (adapté à ' if') → logprob: -4.0484161376953125
    5. '                   ' → logprob: -4.0484161376953125
    6. '                       ' → logprob: -5.9234161376953125
    7. 'new' → logprob: -6.1734161376953125
    8. '               ' → logprob: -6.4234161376953125
    9. '                    ' → logprob: -6.5484161376953125
    10. '    ' → logprob: -7.0484161376953125

Token 693: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.173704271830502e-06
    2. ' k' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.50000286102295
    4. '                   ' → logprob: -14.62500286102295
    5. '    ' → logprob: -15.25000286102295
    6. '                           ' → logprob: -16.250003814697266
    7. '               ' → logprob: -16.750003814697266
    8. '           ' → logprob: -17.250003814697266
    9. '                       ' → logprob: -17.250003814697266
    10. ' ' → logprob: -18.000003814697266

Token 694: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01234516967087984
    2. '!=' → logprob: -4.887345314025879
    3. ' ==' → logprob: -5.387345314025879
    4. ' !=' → logprob: -8.887345314025879
    5. '==
' → logprob: -11.762345314025879
    6. '==-' → logprob: -13.387345314025879
    7. '<' → logprob: -13.762345314025879
    8. '=' → logprob: -14.137345314025879
    9. ']==' → logprob: -14.262345314025879
    10. '[' → logprob: -14.512345314025879

Token 695: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.128163257315464e-07
    2. ' min' → logprob: -15.75
    3. '   ' → logprob: -16.0
    4. 'new' → logprob: -17.375
    5. '	min' → logprob: -18.5
    6. 'mi' → logprob: -18.75
    7. '    ' → logprob: -18.75
    8. 'max' → logprob: -19.125
    9. 'm' → logprob: -20.0
    10. '     ' → logprob: -20.0

Token 696: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5823789834976196
    2. '_j' → logprob: -0.8323789834976196
    3. '_k' → logprob: -5.08237886428833
    4. 'k' → logprob: -9.582379341125488
    5. 'i' → logprob: -9.957379341125488
    6. 'j' → logprob: -10.582379341125488
    7. '   ' → logprob: -11.457379341125488
    8. '                   ' → logprob: -11.707379341125488
    9. '_' → logprob: -11.957379341125488
    10. ')' → logprob: -11.957379341125488

Token 697: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.057560741901397705
    2. 'or' → logprob: -3.557560682296753
    3. ':' → logprob: -4.057560920715332
    4. '                       ' → logprob: -5.682560920715332
    5. ':
' → logprob: -6.307560920715332
    6. ',' → logprob: -6.932560920715332
    7. '       ' → logprob: -7.182560920715332
    8. '                   ' → logprob: -7.682560920715332
    9. '   ' → logprob: -8.057560920715332
    10. '	or' → logprob: -8.182560920715332

Token 698: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.957014556974173e-05
    2. ' k' → logprob: -9.625069618225098
    3. '   ' → logprob: -13.375069618225098
    4. 'min' → logprob: -14.500069618225098
    5. '           ' → logprob: -15.125069618225098
    6. '                   ' → logprob: -15.250069618225098
    7. '               ' → logprob: -15.250069618225098
    8. '    ' → logprob: -15.375069618225098
    9. '            ' → logprob: -16.37506866455078
    10. '                           ' → logprob: -16.37506866455078

Token 699: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.039594147354364395
    2. ' ==' → logprob: -3.2895941734313965
    3. '                   ' → logprob: -6.5395941734313965
    4. 'k' → logprob: -10.164593696594238
    5. 'elif' → logprob: -11.664593696594238
    6. '==
' → logprob: -11.664593696594238
    7. '                       ' → logprob: -11.789593696594238
    8. '                           ' → logprob: -11.789593696594238
    9. '               ' → logprob: -12.414593696594238
    10. ']==' → logprob: -12.789593696594238

Token 700: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.7120533811976202e-05
    2. ' min' → logprob: -11.000017166137695
    3. 'k' → logprob: -15.250017166137695
    4. '   ' → logprob: -16.625017166137695
    5. '	min' → logprob: -17.500017166137695
    6. '           ' → logprob: -17.875017166137695
    7. '[min' → logprob: -18.375017166137695
    8. '    ' → logprob: -18.875017166137695
    9. '  ' → logprob: -19.000017166137695
    10. '=min' → logprob: -19.500017166137695

Token 701: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0023283136542886496
    2. '_k' → logprob: -6.752328395843506
    3. 'j' → logprob: -7.377328395843506
    4. 'k' → logprob: -8.627327919006348
    5. '_i' → logprob: -8.752327919006348
    6. '           ' → logprob: -10.252327919006348
    7. '                   ' → logprob: -10.377327919006348
    8. '   ' → logprob: -10.627327919006348
    9. '               ' → logprob: -10.877327919006348
    10. '       ' → logprob: -11.377327919006348

Token 702: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8466432690620422
    2. '                       ' → logprob: -1.2216432094573975
    3. ':
' → logprob: -1.3466432094573975
    4. '       ' → logprob: -4.971643447875977
    5. '                   ' → logprob: -5.471643447875977
    6. ' or' → logprob: -6.846643447875977
    7. '               ' → logprob: -7.471643447875977
    8. '):
' → logprob: -7.596643447875977
    9. '                           ' → logprob: -7.721643447875977
    10. ',' → logprob: -7.846643447875977

Token 703: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00811781920492649
    2. ':' → logprob: -5.88311767578125
    3. '                   ' → logprob: -6.25811767578125
    4. ',' → logprob: -7.50811767578125
    5. ' new' → logprob: -7.75811767578125
    6. ' ' → logprob: -8.25811767578125
    7. '       ' → logprob: -8.38311767578125
    8. '               ' → logprob: -8.38311767578125
    9. '                           ' → logprob: -8.38311767578125
    10. '                        
' → logprob: -8.38311767578125

Token 704: ' continue' (ID: 4901)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.18326108157634735
    2. 'new' → logprob: -1.8082610368728638
    3. '                       ' → logprob: -6.433260917663574
    4. '0' → logprob: -7.308260917663574
    5. '                   ' → logprob: -7.433260917663574
    6. ' continue' → logprob: -8.183260917663574
    7. 'continue' (adapté à ' continue') → logprob: -8.558260917663574
    8. '   ' → logprob: -10.433260917663574
    9. ' ' → logprob: -10.808260917663574
    10. '
' → logprob: -11.183260917663574

Token 705: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1800060272216797
    2. ' new' → logprob: -2.3050060272216797
    3. '                       ' → logprob: -4.05500602722168
    4. '               ' → logprob: -4.18000602722168
    5. 'new' → logprob: -4.30500602722168
    6. '                    
' → logprob: -5.18000602722168
    7. ',' → logprob: -6.05500602722168
    8. '           ' → logprob: -6.30500602722168
    9. '                        
' → logprob: -6.43000602722168
    10. '   ' → logprob: -6.80500602722168

Token 706: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05951610580086708
    2. '               ' → logprob: -3.559516191482544
    3. ' new' → logprob: -4.434515953063965
    4. 'new' → logprob: -5.184515953063965
    5. '                       ' → logprob: -5.559515953063965
    6. '   ' → logprob: -6.309515953063965
    7. '                    
' → logprob: -6.684515953063965
    8. '           ' → logprob: -7.184515953063965
    9. '                    ' → logprob: -7.184515953063965
    10. ' ' → logprob: -7.559515953063965

Token 707: ' dist' (ID: 3601)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.537276029586792
    2. '                   ' → logprob: -1.412276029586792
    3. 'new' → logprob: -2.037276029586792
    4. ' x' → logprob: -4.787276268005371
    5. '               ' → logprob: -4.912276268005371
    6. '                       ' → logprob: -5.412276268005371
    7. ' val' → logprob: -5.537276268005371
    8. '   ' → logprob: -5.787276268005371
    9. 'd' → logprob: -6.537276268005371
    10. ' s' → logprob: -6.787276268005371

Token 708: '_to' (ID: 5089)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6672111749649048
    2. ' =' → logprob: -0.7922111749649048
    3. '_k' → logprob: -4.167211055755615
    4. '_val' → logprob: -4.542211055755615
    5. 'ance' → logprob: -5.792211055755615
    6. '_value' → logprob: -6.042211055755615
    7. '   ' → logprob: -7.542211055755615
    8. '               ' → logprob: -8.167211532592773
    9. '                   ' → logprob: -8.292211532592773
    10. 'k' → logprob: -8.292211532592773

Token 709: '_k' (ID: 11637)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.010544619522988796
    2. 'k' → logprob: -5.010544776916504
    3. 'merged' → logprob: -6.510544776916504
    4. ' new' → logprob: -7.385544776916504
    5. '_new' → logprob: -7.885544776916504
    6. 'clusters' → logprob: -7.885544776916504
    7. 'the' → logprob: -8.010544776916504
    8. '=' → logprob: -8.760544776916504
    9. 'er' → logprob: -9.885544776916504
    10. 'y' → logprob: -9.885544776916504

Token 710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760650634765625
    2. ' =' → logprob: -0.8260650634765625
    3. '.append' → logprob: -10.076065063476562
    4. '   ' → logprob: -10.701065063476562
    5. ' ' → logprob: -11.451065063476562
    6. ',' → logprob: -11.701065063476562
    7. '           ' → logprob: -11.701065063476562
    8. '    ' → logprob: -12.326065063476562
    9. '               ' → logprob: -12.451065063476562
    10. '       ' → logprob: -12.951065063476562

Token 711: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.5865110754966736
    2. '(min' → logprob: -1.2115111351013184
    3. 'min' → logprob: -1.9615111351013184
    4. '(max' → logprob: -6.461511135101318
    5. ' (' → logprob: -6.586511135101318
    6. ' min' → logprob: -7.336511135101318
    7. '(' → logprob: -7.461511135101318
    8. 'max' → logprob: -7.586511135101318
    9. 'd' → logprob: -8.58651065826416
    10. '   ' → logprob: -9.33651065826416

Token 712: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004048244562000036
    2. 'min' → logprob: -5.8790483474731445
    3. '(d' → logprob: -7.3790483474731445
    4. 'len' → logprob: -8.379048347473145
    5. ' d' → logprob: -8.504048347473145
    6. '(min' → logprob: -9.754048347473145
    7. 'self' → logprob: -11.129048347473145
    8. 'max' → logprob: -11.129048347473145
    9. '   ' → logprob: -11.129048347473145
    10. ' min' → logprob: -11.129048347473145

Token 713: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.0028141476213932037
    2. 'min' → logprob: -5.877814292907715
    3. '[' → logprob: -12.752814292907715
    4. '[k' → logprob: -13.877814292907715
    5. ' min' → logprob: -14.002814292907715
    6. '[max' → logprob: -14.127814292907715
    7. 'new' → logprob: -14.377814292907715
    8. '[new' → logprob: -14.377814292907715
    9. 'cluster' → logprob: -14.627814292907715
    10. '   ' → logprob: -14.627814292907715

Token 714: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -8.602024900028482e-05
    2. '_k' → logprob: -9.625085830688477
    3. '_j' → logprob: -11.750085830688477
    4. 'i' → logprob: -12.750085830688477
    5. '[i' → logprob: -12.875085830688477
    6. '[' → logprob: -13.250085830688477
    7. '[k' → logprob: -13.500085830688477
    8. 'k' → logprob: -13.625085830688477
    9. '][' → logprob: -14.375085830688477
    10. ']' → logprob: -15.625085830688477

Token 715: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16086070239543915
    2. '[k' → logprob: -1.9108606576919556
    3. 'k' → logprob: -8.035861015319824
    4. ']' → logprob: -9.285861015319824
    5. '[' → logprob: -9.535861015319824
    6. '   ' → logprob: -10.410861015319824
    7. '
' → logprob: -11.160861015319824
    8. ' ][' → logprob: -11.160861015319824
    9. '}[' → logprob: -11.160861015319824
    10. '+k' → logprob: -11.285861015319824

Token 716: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004653099924325943
    2. 'min' → logprob: -5.379652976989746
    3. 'len' → logprob: -11.504652976989746
    4. ' k' → logprob: -12.504652976989746
    5. '
' → logprob: -12.504652976989746
    6. ']' → logprob: -13.004652976989746
    7. 'new' → logprob: -13.129652976989746
    8. 'max' → logprob: -13.879652976989746
    9. ')' → logprob: -14.129652976989746
    10. '   ' → logprob: -14.379652976989746

Token 717: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28193584084510803
    2. ' +' → logprob: -1.4069358110427856
    3. '+d' → logprob: -7.406935691833496
    4. ']+' → logprob: -9.281935691833496
    5. ']' → logprob: -9.656935691833496
    6. ' ' → logprob: -12.281935691833496
    7. '+
' → logprob: -12.656935691833496
    8. '+k' → logprob: -13.156935691833496
    9. '    ' → logprob: -13.281935691833496
    10. 'd' → logprob: -13.531935691833496

Token 718: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47734349966049194
    2. ' +' → logprob: -0.9773434996604919
    3. '+d' → logprob: -5.727343559265137
    4. '+
' → logprob: -13.727343559265137
    5. '+k' → logprob: -13.852343559265137
    6. ' ' → logprob: -14.102343559265137
    7. '+D' → logprob: -14.477343559265137
    8. ' +
' → logprob: -14.977343559265137
    9. '+r' → logprob: -15.227343559265137
    10. '    ' → logprob: -15.602343559265137

Token 719: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47409316897392273
    2. ' d' → logprob: -0.9740931987762451
    3. '                   ' → logprob: -12.099093437194824
    4. '                    ' → logprob: -13.474093437194824
    5. '                       ' → logprob: -13.724093437194824
    6. ' ' → logprob: -14.099093437194824
    7. '	d' → logprob: -14.099093437194824
    8. '                           ' → logprob: -14.349093437194824
    9. '                        ' → logprob: -14.599093437194824
    10. '   ' → logprob: -14.599093437194824

Token 720: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -4.60414821645827e-06
    2. '[k' → logprob: -12.750004768371582
    3. 'min' → logprob: -14.000004768371582
    4. '[max' → logprob: -15.000004768371582
    5. ' [' → logprob: -15.125004768371582
    6. '[' → logprob: -15.875004768371582
    7. '[j' → logprob: -16.625003814697266
    8. '[m' → logprob: -18.375003814697266
    9. '   ' → logprob: -18.750003814697266
    10. '[mid' → logprob: -19.250003814697266

Token 721: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00017827287956606597
    2. '_k' → logprob: -9.500178337097168
    3. '_i' → logprob: -9.625178337097168
    4. 'j' → logprob: -10.250178337097168
    5. 'k' → logprob: -14.375178337097168
    6. '```' → logprob: -15.125178337097168
    7. '[j' → logprob: -15.875178337097168
    8. '_' → logprob: -16.43767738342285
    9. '_js' → logprob: -16.62517738342285
    10. '_a' → logprob: -16.87517738342285

Token 722: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.31344112753868103
    2. '[k' → logprob: -1.3134411573410034
    3. 'k' → logprob: -9.688441276550293
    4. ' ][' → logprob: -10.438441276550293
    5. '[' → logprob: -10.688441276550293
    6. ' [' → logprob: -10.813441276550293
    7. '   ' → logprob: -11.563441276550293
    8. ']' → logprob: -11.563441276550293
    9. ')[' → logprob: -12.188441276550293
    10. '"][' → logprob: -12.938441276550293

Token 723: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.704273118884885e-07
    2. ' k' → logprob: -14.250000953674316
    3. ',k' → logprob: -21.5
    4. '_k' → logprob: -21.75
    5. '	k' → logprob: -22.0
    6. ':k' → logprob: -22.0
    7. ' к' → logprob: -22.125
    8. '[k' → logprob: -22.375
    9. '-k' → logprob: -22.75
    10. '{k' → logprob: -23.125

Token 724: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04746003448963165
    2. ' )' → logprob: -3.2974600791931152
    3. ')/' → logprob: -5.172460079193115
    4. '+' → logprob: -6.797460079193115
    5. ')//' → logprob: -7.297460079193115
    6. ' -' → logprob: -7.422460079193115
    7. ' +' → logprob: -7.547460079193115
    8. '-' → logprob: -8.172459602355957
    9. '           ' → logprob: -9.422459602355957
    10. '   ' → logprob: -9.547459602355957

Token 725: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014203708618879318
    2. ' )' → logprob: -4.8892035484313965
    3. ')//' → logprob: -5.7642035484313965
    4. ')/' → logprob: -5.8892035484313965
    5. '+' → logprob: -8.389204025268555
    6. ' -' → logprob: -9.264204025268555
    7. ' +' → logprob: -9.389204025268555
    8. '-' → logprob: -9.514204025268555
    9. '   ' → logprob: -10.014204025268555
    10. ')>>' → logprob: -10.139204025268555

Token 726: ' d' (ID: 272)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02138286456465721
    2. 'd' → logprob: -3.8963828086853027
    3. ' min' → logprob: -7.396382808685303
    4. 'dist' → logprob: -9.646383285522461
    5. '   ' → logprob: -9.896383285522461
    6. 'new' → logprob: -10.271383285522461
    7. ' d' → logprob: -10.521383285522461
    8. '2' → logprob: -11.646383285522461
    9. '  ' → logprob: -11.771383285522461
    10. 'max' → logprob: -11.896383285522461

Token 727: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.0017102824058383703
    2. 'min' → logprob: -6.376710414886475
    3. '   ' → logprob: -13.126709938049316
    4. '[max' → logprob: -13.251709938049316
    5. '[' → logprob: -13.376709938049316
    6. ' ' → logprob: -14.501709938049316
    7. ' min' → logprob: -14.626709938049316
    8. ' [' → logprob: -15.001709938049316
    9. '[x' → logprob: -15.751709938049316
    10. '(min' → logprob: -15.751709938049316

Token 728: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -9.491498531133402e-06
    2. '_j' → logprob: -12.500009536743164
    3. 'i' → logprob: -12.750009536743164
    4. '[' → logprob: -13.875009536743164
    5. '[i' → logprob: -14.125009536743164
    6. '_k' → logprob: -14.625009536743164
    7. '][' → logprob: -15.250009536743164
    8. '   ' → logprob: -16.500009536743164
    9. '[min' → logprob: -16.500009536743164
    10. ']' → logprob: -17.125009536743164

Token 729: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5274572372436523
    2. '[min' → logprob: -0.9024572372436523
    3. 'min' → logprob: -6.027457237243652
    4. '[max' → logprob: -7.652457237243652
    5. '[k' → logprob: -8.152457237243652
    6. '[j' → logprob: -8.402457237243652
    7. '[' → logprob: -8.527457237243652
    8. '[m' → logprob: -8.652457237243652
    9. '   ' → logprob: -9.027457237243652
    10. '[new' → logprob: -9.777457237243652

Token 730: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.292907877039397e-06
    2. ' min' → logprob: -12.75000286102295
    3. '[min' → logprob: -14.87500286102295
    4. '   ' → logprob: -17.000003814697266
    5. '	min' → logprob: -17.750003814697266
    6. 'max' → logprob: -18.375003814697266
    7. ':min' → logprob: -19.250003814697266
    8. '(min' → logprob: -19.750003814697266
    9. '    ' → logprob: -20.375003814697266
    10. ' ' → logprob: -20.500003814697266

Token 731: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5288676023483276
    2. '_j' → logprob: -0.9038676023483276
    3. 'i' → logprob: -5.653867721557617
    4. 'j' → logprob: -6.153867721557617
    5. '_k' → logprob: -9.778867721557617
    6. '_' → logprob: -11.403867721557617
    7. ']' → logprob: -11.653867721557617
    8. '
' → logprob: -12.153867721557617
    9. 'k' → logprob: -12.716367721557617
    10. '_
' → logprob: -13.653867721557617

Token 732: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3093777596950531
    2. ']' → logprob: -1.5593777894973755
    3. ')' → logprob: -2.934377670288086
    4. ']/' → logprob: -6.809377670288086
    5. '])/' → logprob: -7.684377670288086
    6. ')//' → logprob: -8.434377670288086
    7. ' ])' → logprob: -8.434377670288086
    8. ' )' → logprob: -9.059377670288086
    9. ' ]' → logprob: -9.184377670288086
    10. ''])' → logprob: -9.309377670288086

Token 733: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01197656150907278
    2. ' )' → logprob: -4.636976718902588
    3. '                   ' → logprob: -7.011976718902588
    4. ' //' → logprob: -8.38697624206543
    5. ')//' → logprob: -8.51197624206543
    6. '               ' → logprob: -8.63697624206543
    7. '
' → logprob: -8.63697624206543
    8. '           ' → logprob: -9.26197624206543
    9. ')/' → logprob: -9.63697624206543
    10. '                    ' → logprob: -10.01197624206543

Token 734: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.625020027160645
    4. '
' → logprob: -15.500020027160645
    5. '=' → logprob: -16.500019073486328
    6. '1' → logprob: -17.625019073486328
    7. ' ' → logprob: -17.750019073486328
    8. '  ' → logprob: -18.062519073486328
    9. '２' → logprob: -18.312519073486328
    10. '```' → logprob: -18.375019073486328

Token 735: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '
' → logprob: -18.625
    4. '   ' → logprob: -19.25
    5. '=' → logprob: -19.375
    6. '

' → logprob: -19.875
    7. '２' → logprob: -20.0
    8. 'two' → logprob: -20.625
    9. ' ' → logprob: -20.75
    10. '1' → logprob: -20.875

Token 736: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0022387548815459013
    2. '               ' → logprob: -6.502238750457764
    3. 'new' → logprob: -8.752239227294922
    4. '           ' → logprob: -9.002239227294922
    5. '                    
' → logprob: -9.377239227294922
    6. ' new' → logprob: -9.877239227294922
    7. '                    ' → logprob: -10.002239227294922
    8. ')' → logprob: -10.127239227294922
    9. '<|end|>' → logprob: -10.252239227294922
    10. '   ' → logprob: -10.377239227294922

Token 737: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016049596015363932
    2. 'new' → logprob: -7.501605033874512
    3. ' new' → logprob: -8.001605033874512
    4. '               ' → logprob: -8.126605033874512
    5. '                    
' → logprob: -8.626605033874512
    6. '                    ' → logprob: -9.501605033874512
    7. '                       ' → logprob: -10.501605033874512
    8. '           ' → logprob: -10.751605033874512
    9. '                           ' → logprob: -11.001605033874512
    10. ')' → logprob: -11.126605033874512

Token 738: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.048698194324970245
    2. 'new' (adapté à ' new') → logprob: -3.0486981868743896
    3. '	new' → logprob: -9.423698425292969
    4. '[new' → logprob: -11.048698425292969
    5. '                   ' → logprob: -11.423698425292969
    6. '               ' → logprob: -14.423698425292969
    7. ' ' → logprob: -14.548698425292969
    8. ' ' → logprob: -14.673698425292969
    9. '_new' → logprob: -14.798698425292969
    10. '   ' → logprob: -14.923698425292969

Token 739: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -2.176947600673884e-05
    2. 'row' → logprob: -10.750021934509277
    3. '_line' → logprob: -16.87502098083496
    4. 'new' → logprob: -17.12502098083496
    5. '	row' → logprob: -17.75002098083496
    6. 'Row' → logprob: -18.12502098083496
    7. 'rown' → logprob: -18.25002098083496
    8. '_val' → logprob: -18.62502098083496
    9. '$row' → logprob: -18.62502098083496
    10. 'dist' → logprob: -19.00002098083496

Token 740: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003188286442309618
    2. '.' → logprob: -5.753188133239746
    3. ' .' → logprob: -12.378188133239746
    4. 'append' → logprob: -12.628188133239746
    5. '=' → logprob: -14.128188133239746
    6. ',' → logprob: -14.378188133239746
    7. '.app' → logprob: -14.503188133239746
    8. '.insert' → logprob: -14.878188133239746
    9. '.extend' → logprob: -15.378188133239746
    10. '.ap' → logprob: -16.003189086914062

Token 741: '(dist' (ID: 78981)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0008885911083780229
    2. ' dist' → logprob: -7.500888824462891
    3. '(dist' → logprob: -8.00088882446289
    4. '	dist' → logprob: -15.37588882446289
    5. '_dist' → logprob: -17.12588882446289
    6. '(' → logprob: -17.87588882446289
    7. '   ' → logprob: -18.00088882446289
    8. '.dist' → logprob: -18.25088882446289
    9. 'Dist' → logprob: -18.87588882446289
    10. 'distance' → logprob: -19.50088882446289

Token 742: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.650518920039758e-06
    2. 'to' → logprob: -13.750003814697266
    3. '   ' → logprob: -14.000003814697266
    4. 'To' → logprob: -14.500003814697266
    5. '(' → logprob: -15.250003814697266
    6. '(k' → logprob: -15.375003814697266
    7. ' ' → logprob: -15.500003814697266
    8. '[' → logprob: -16.125003814697266
    9. '\' → logprob: -16.250003814697266
    10. ')' → logprob: -16.875003814697266

Token 743: '_k' (ID: 11637)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007859219331294298
    2. '_k' → logprob: -7.750785827636719
    3. ' k' → logprob: -8.250785827636719
    4. '(k' → logprob: -10.375785827636719
    5. ' ' → logprob: -10.750785827636719
    6. 'x' → logprob: -11.500785827636719
    7. '[k' → logprob: -12.000785827636719
    8. 'ist' → logprob: -12.000785827636719
    9. '   ' → logprob: -12.250785827636719
    10. 'new' → logprob: -12.500785827636719

Token 744: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2752646207809448
    2. '               ' → logprob: -1.5252646207809448
    3. '<|end|>' → logprob: -4.775264739990234
    4. ' ' → logprob: -5.400264739990234
    5. ' )' → logprob: -5.525264739990234
    6. '                   ' → logprob: -6.650264739990234
    7. '
' → logprob: -6.900264739990234
    8. '                ' → logprob: -7.025264739990234
    9. ',' → logprob: -7.400264739990234
    10. '           ' → logprob: -7.775264739990234

Token 745: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08426468819379807
    2. '                
' → logprob: -2.9592647552490234
    3. '                    
' → logprob: -5.084264755249023
    4. '
' → logprob: -5.334264755249023
    5. 'new' → logprob: -5.959264755249023
    6. '				
' → logprob: -6.084264755249023
    7. '                   ' → logprob: -6.459264755249023
    8. '[' → logprob: -6.459264755249023
    9. '[new' → logprob: -6.584264755249023
    10. '    
' → logprob: -6.709264755249023

Token 746: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38190117478370667
    2. '#' (adapté à ' #') → logprob: -1.5069011449813843
    3. '           ' → logprob: -3.756901264190674
    4. 'd' → logprob: -3.756901264190674
    5. 'new' → logprob: -3.756901264190674
    6. 'clusters' → logprob: -4.381901264190674
    7. '                
' → logprob: -5.506901264190674
    8. '                   ' → logprob: -6.006901264190674
    9. '                    
' → logprob: -6.756901264190674
    10. '            
' → logprob: -7.006901264190674

Token 747: ' update' (ID: 4027)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.005572979338467121
    2. 'clusters' → logprob: -6.38057279586792
    3. 'for' → logprob: -6.50557279586792
    4. '           ' → logprob: -7.13057279586792
    5. '               ' → logprob: -7.13057279586792
    6. 'd' → logprob: -7.50557279586792
    7. 'new' → logprob: -8.630573272705078
    8. 'del' → logprob: -12.005573272705078
    9. '                   ' → logprob: -12.255573272705078
    10. '   ' → logprob: -12.255573272705078

Token 748: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.5392255783081055
    2. '#' → logprob: -1.1642255783081055
    3. 'd' → logprob: -2.4142255783081055
    4. 'for' → logprob: -4.2892255783081055
    5. 'rows' → logprob: -7.6642255783081055
    6. 'new' → logprob: -7.7892255783081055
    7. ' clusters' → logprob: -8.664225578308105
    8. 'del' → logprob: -8.914225578308105
    9. '           ' → logprob: -8.914225578308105
    10. 'cl' → logprob: -10.039225578308105

Token 749: ' and' (ID: 326)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.1122315302491188
    2. '               ' → logprob: -2.737231492996216
    3. ' =' → logprob: -3.362231492996216
    4. 'pop' → logprob: -5.612231731414795
    5. '           ' → logprob: -7.112231731414795
    6. '.append' → logprob: -7.237231731414795
    7. '=' → logprob: -7.237231731414795
    8. '[min' → logprob: -8.362231254577637
    9. '.remove' → logprob: -8.737231254577637
    10. 'clusters' → logprob: -8.987231254577637

Token 750: ' d' (ID: 272)
  Prédit: 'cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cluster' → logprob: -0.004284603521227837
    2. 'dist' → logprob: -5.754284381866455
    3. 'distance' → logprob: -7.879284381866455
    4. 'd' → logprob: -8.004284858703613
    5. 'nodes' → logprob: -9.004284858703613
    6. 'indices' → logprob: -9.379284858703613
    7. '#' → logprob: -9.629284858703613
    8. ' cluster' → logprob: -9.879284858703613
    9. 'clusters' → logprob: -10.004284858703613
    10. '   ' → logprob: -12.379284858703613

Token 751: '
' (ID: 198)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.10725338757038116
    2. '               ' → logprob: -2.982253313064575
    3. '           ' → logprob: -3.857253313064575
    4. ' =' → logprob: -4.607253551483154
    5. '.append' → logprob: -4.732253551483154
    6. '.remove' → logprob: -5.857253551483154
    7. '[' → logprob: -5.982253551483154
    8. 'clusters' → logprob: -6.607253551483154
    9. '_clusters' → logprob: -6.607253551483154
    10. 'pop' → logprob: -7.107253551483154

Token 752: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0540807731449604
    2. 'clusters' → logprob: -3.4290807247161865
    3. ' clusters' → logprob: -3.9290807247161865
    4. '           ' → logprob: -8.429080963134766
    5. '_clusters' → logprob: -8.554080963134766
    6. '#' → logprob: -9.679080963134766
    7. '                
' → logprob: -10.804080963134766
    8. '                   ' → logprob: -11.554080963134766
    9. '```' → logprob: -11.929080963134766
    10. '       ' → logprob: -11.929080963134766

Token 753: ' new' (ID: 620)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.3991382420063019
    2. '               ' → logprob: -1.2741382122039795
    3. '#' → logprob: -3.5241382122039795
    4. ' clusters' → logprob: -4.399138450622559
    5. 'del' → logprob: -5.649138450622559
    6. '           ' → logprob: -6.399138450622559
    7. 'for' → logprob: -6.899138450622559
    8. 'new' (adapté à ' new') → logprob: -7.524138450622559
    9. ' del' → logprob: -8.399138450622559
    10. 'cl' → logprob: -8.899138450622559

Token 754: '_clusters' (ID: 117535)
  Prédit: '_clusters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clusters' → logprob: -0.10049186646938324
    2. 'clusters' → logprob: -2.975491762161255
    3. '_row' → logprob: -3.475491762161255
    4. '_cluster' → logprob: -4.475492000579834
    5. '_val' → logprob: -7.225492000579834
    6. '_line' → logprob: -7.600492000579834
    7. 'cluster' → logprob: -9.100491523742676
    8. 'row' → logprob: -9.100491523742676
    9. 'val' → logprob: -9.350491523742676
    10. '#' → logprob: -9.475491523742676

Token 755: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31759291887283325
    2. ' =' → logprob: -1.3175928592681885
    3. '.pop' → logprob: -5.567593097686768
    4. '.append' → logprob: -7.692593097686768
    5. '.remove' → logprob: -10.81759262084961
    6. '[min' → logprob: -11.81759262084961
    7. '[' → logprob: -12.06759262084961
    8. '.' → logprob: -12.69259262084961
    9. '.=' → logprob: -13.06759262084961
    10. '   ' → logprob: -13.19259262084961

Token 756: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.6044166684150696
    2. '[' → logprob: -0.8544166684150696
    3. 'clusters' → logprob: -3.729416608810425
    4. '[]' → logprob: -5.854416847229004
    5. '[]

' → logprob: -7.979416847229004
    6. '[c' → logprob: -8.354416847229004
    7. 'cl' → logprob: -8.854416847229004
    8. '[
' → logprob: -9.229416847229004
    9. ' [' → logprob: -9.854416847229004
    10. ' []
' → logprob: -10.104416847229004

Token 757: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010521728545427322
    2. '[' → logprob: -5.38552188873291
    3. 'for' → logprob: -6.01052188873291
    4. '                   ' → logprob: -6.63552188873291
    5. ' for' → logprob: -6.88552188873291
    6. '.append' → logprob: -8.01052188873291
    7. '[]' → logprob: -8.38552188873291
    8. '                
' → logprob: -8.88552188873291
    9. '```' → logprob: -8.88552188873291
    10. '           ' → logprob: -10.26052188873291

Token 758: ' new' (ID: 620)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004648696631193161
    2. '               ' → logprob: -8.12546443939209
    3. ' for' → logprob: -9.00046443939209
    4. 'new' (adapté à ' new') → logprob: -10.12546443939209
    5. '
' → logprob: -12.87546443939209
    6. '           ' → logprob: -13.62546443939209
    7. '                   ' → logprob: -13.75046443939209
    8. '   ' → logprob: -15.50046443939209
    9. '#' → logprob: -16.000465393066406
    10. '       ' → logprob: -16.000465393066406

Token 759: '_cluster' (ID: 65346)
  Prédit: '_clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clusters' → logprob: -0.015908725559711456
    2. 'clusters' → logprob: -4.765908718109131
    3. '_row' → logprob: -5.140908718109131
    4. '_rows' → logprob: -7.515908718109131
    5. 'row' → logprob: -7.765908718109131
    6. 'for' → logprob: -9.515909194946289
    7. 'd' → logprob: -9.890909194946289
    8. '_d' → logprob: -10.015909194946289
    9. '_cluster' → logprob: -10.140909194946289
    10. '_indices' → logprob: -10.140909194946289

Token 760: '_nodes' (ID: 34593)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0016530444845557213
    2. '=' → logprob: -6.87665319442749
    3. '.append' → logprob: -8.126652717590332
    4. ' s' → logprob: -8.751652717590332
    5. ' =' → logprob: -9.626652717590332
    6. '.' → logprob: -11.376652717590332
    7. ',' → logprob: -11.501652717590332
    8. '{s' → logprob: -11.501652717590332
    9. '_clusters' → logprob: -11.626652717590332
    10. '=s' → logprob: -11.751652717590332

Token 761: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3155272901058197
    2. '.append' → logprob: -1.940527319908142
    3. '=' → logprob: -2.0655272006988525
    4. '=[]' → logprob: -8.565526962280273
    5. '=[]
' → logprob: -11.815526962280273
    6. '.' → logprob: -12.440526962280273
    7. 'append' → logprob: -12.690526962280273
    8. '.extend' → logprob: -12.940526962280273
    9. ',' → logprob: -13.315526962280273
    10. '[' → logprob: -13.815526962280273

Token 762: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.5822746157646179
    2. '[new' → logprob: -1.3322746753692627
    3. '[' → logprob: -1.8322746753692627
    4. '[]' → logprob: -4.082274436950684
    5. ' []
' → logprob: -8.957274436950684
    6. ' [' → logprob: -9.207274436950684
    7. '[]

' → logprob: -9.457274436950684
    8. '[
' → logprob: -9.582274436950684
    9. 'new' → logprob: -9.832274436950684
    10. '[node' → logprob: -10.207274436950684

Token 763: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015585091896355152
    2. 'for' → logprob: -4.265584945678711
    3. ' for' → logprob: -6.640584945678711
    4. '```' → logprob: -10.265584945678711
    5. '                
' → logprob: -10.390584945678711
    6. 'new' → logprob: -10.765584945678711
    7. '[' → logprob: -11.890584945678711
    8. '                   ' → logprob: -12.015584945678711
    9. '       ' → logprob: -12.390584945678711
    10. '[new' → logprob: -13.390584945678711

Token 764: ' new' (ID: 620)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4201599955558777
    2. '               ' → logprob: -1.1701600551605225
    3. ' for' → logprob: -3.4201600551605225
    4. '```' → logprob: -11.170160293579102
    5. '	for' → logprob: -12.295160293579102
    6. '#' → logprob: -12.420160293579102
    7. '       ' → logprob: -12.670160293579102
    8. '                   ' → logprob: -13.420160293579102
    9. '[' → logprob: -13.545160293579102
    10. 'new' (adapté à ' new') → logprob: -13.670160293579102

Token 765: '_d' (ID: 1565)
  Prédit: '_clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clusters' → logprob: -0.32496604323387146
    2. 'for' → logprob: -2.1999659538269043
    3. '_row' → logprob: -2.4499659538269043
    4. '_dist' → logprob: -3.4499659538269043
    5. 'clusters' → logprob: -4.449965953826904
    6. '_cluster' → logprob: -4.949965953826904
    7. '_d' → logprob: -5.074965953826904
    8. 'dist' → logprob: -5.449965953826904
    9. 'row' → logprob: -5.574965953826904
    10. 'd' → logprob: -5.949965953826904

Token 766: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47804534435272217
    2. '=' → logprob: -0.9780453443527222
    3. '.append' → logprob: -6.103045463562012
    4. '=[]' → logprob: -7.103045463562012
    5. '[' → logprob: -7.478045463562012
    6. '=[]
' → logprob: -9.353045463562012
    7. '[]' → logprob: -9.978045463562012
    8. '=[' → logprob: -10.353045463562012
    9. '[
' → logprob: -10.478045463562012
    10. ' ' → logprob: -11.478045463562012

Token 767: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25313806533813477
    2. '[]
' → logprob: -1.5031380653381348
    3. '[]

' → logprob: -6.753138065338135
    4. '[' → logprob: -10.378137588500977
    5. '[
' → logprob: -12.628137588500977
    6. '[][]' → logprob: -13.003137588500977
    7. '[[' → logprob: -13.253137588500977
    8. ' []' → logprob: -13.503137588500977
    9. '[len' → logprob: -15.003137588500977
    10. '[]"' → logprob: -15.628137588500977

Token 768: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004292680416256189
    2. '[' → logprob: -5.7542924880981445
    3. '```' → logprob: -8.379292488098145
    4. '                   ' → logprob: -8.879292488098145
    5. 'for' → logprob: -9.004292488098145
    6. '	           ' → logprob: -9.129292488098145
    7. '		       ' → logprob: -9.254292488098145
    8. '                
' → logprob: -9.379292488098145
    9. ' for' → logprob: -9.504292488098145
    10. '           ' → logprob: -9.629292488098145

Token 769: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04556308686733246
    2. ' for' → logprob: -3.545562982559204
    3. 'for' (adapté à ' for') → logprob: -4.170563220977783
    4. '                   ' → logprob: -9.295562744140625
    5. '       ' → logprob: -9.545562744140625
    6. '           ' → logprob: -10.795562744140625
    7. '   ' → logprob: -10.920562744140625
    8. '```' → logprob: -11.420562744140625
    9. '                
' → logprob: -11.795562744140625
    10. '[' → logprob: -12.045562744140625

Token 770: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06256963312625885
    2. 'idx' → logprob: -2.8125696182250977
    3. 'x' → logprob: -8.562569618225098
    4. 'i' → logprob: -8.812569618225098
    5. 'index' → logprob: -8.812569618225098
    6. ' idx' → logprob: -9.187569618225098
    7. ' k' → logprob: -11.687569618225098
    8. 'm' → logprob: -14.562569618225098
    9. 'ix' → logprob: -14.812569618225098
    10. 'kx' → logprob: -15.437569618225098

Token 771: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.428767591714859
    2. 'in' → logprob: -1.0537675619125366
    3. ',' → logprob: -10.553767204284668
    4. 'k' → logprob: -10.803767204284668
    5. ' ' → logprob: -12.428767204284668
    6. '   ' → logprob: -12.928767204284668
    7. '	in' → logprob: -13.178767204284668
    8. '```' → logprob: -13.178767204284668
    9. '  ' → logprob: -13.928767204284668
    10. 'not' → logprob: -14.178767204284668

Token 772: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00010759611177491024
    2. ' range' → logprob: -9.250107765197754
    3. '[' → logprob: -11.875107765197754
    4. '(range' → logprob: -12.625107765197754
    5. '[k' → logprob: -14.500107765197754
    6. 'new' → logprob: -15.125107765197754
    7. 'k' → logprob: -15.250107765197754
    8. ' ' → logprob: -17.125106811523438
    9. '(' → logprob: -17.375106811523438
    10. '   ' → logprob: -17.500106811523438

Token 773: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0011298557510599494
    2. '(len' → logprob: -7.001129627227783
    3. '               ' → logprob: -8.751130104064941
    4. '                   ' → logprob: -10.376130104064941
    5. '           ' → logprob: -11.501130104064941
    6. 'k' → logprob: -11.751130104064941
    7. ' len' → logprob: -12.251130104064941
    8. '              ' → logprob: -13.626130104064941
    9. '[len' → logprob: -14.126130104064941
    10. '                       ' → logprob: -14.126130104064941

Token 774: '(cl' (ID: 16811)
  Prédit: '(cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cl' → logprob: -0.00044151677866466343
    2. 'clusters' → logprob: -8.000441551208496
    3. '(new' → logprob: -9.500441551208496
    4. 'cl' → logprob: -11.125441551208496
    5. 'new' → logprob: -11.375441551208496
    6. '(' → logprob: -13.375441551208496
    7. ' clusters' → logprob: -13.875441551208496
    8. '(cluster' → logprob: -14.000441551208496
    9. '	cl' → logprob: -14.875441551208496
    10. 'Clusters' → logprob: -15.500441551208496

Token 775: 'usters' (ID: 26011)
  Prédit: 'usters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usters' → logprob: -0.0013669042382389307
    2. 'clusters' → logprob: -6.626367092132568
    3. 'l' → logprob: -10.25136661529541
    4. 'uster' → logprob: -13.12636661529541
    5. ' clusters' → logprob: -13.37636661529541
    6. '_clusters' → logprob: -14.75136661529541
    7. '[' → logprob: -15.12636661529541
    8. '#' → logprob: -15.25136661529541
    9. 'new' → logprob: -15.75136661529541
    10. '```' → logprob: -15.75136661529541

Token 776: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002057119505479932
    2. '):' → logprob: -7.002057075500488
    3. '               ' → logprob: -7.502057075500488
    4. '                   ' → logprob: -8.252057075500488
    5. ''):
' → logprob: -8.877057075500488
    6. ':
' → logprob: -10.127057075500488
    7. '           ' → logprob: -10.502057075500488
    8. '):
' → logprob: -10.627057075500488
    9. '():
' → logprob: -10.627057075500488
    10. ':' → logprob: -11.377057075500488

Token 777: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007027934771031141
    2. '           ' → logprob: -6.007028102874756
    3. '		           ' → logprob: -6.257028102874756
    4. 'if' → logprob: -7.007028102874756
    5. '   ' → logprob: -8.007027626037598
    6. '               ' → logprob: -8.132027626037598
    7. ' if' → logprob: -8.632027626037598
    8. '```' → logprob: -8.632027626037598
    9. '<|end|>' → logprob: -8.757027626037598
    10. '<|end|>' → logprob: -9.132027626037598

Token 778: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1596285104751587
    2. ' if' → logprob: -2.659628391265869
    3. '                   ' → logprob: -2.909628391265869
    4. '       ' → logprob: -4.409628391265869
    5. '                       ' → logprob: -5.284628391265869
    6. '           ' → logprob: -6.159628391265869
    7. '   ' → logprob: -6.159628391265869
    8. '               ' → logprob: -6.659628391265869
    9. ' ' → logprob: -9.159628868103027
    10. '		           ' → logprob: -10.034628868103027

Token 779: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.014684110297821e-06
    2. ' k' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.250008583068848
    4. '                   ' → logprob: -16.125009536743164
    5. '    ' → logprob: -16.250009536743164
    6. 'not' → logprob: -16.750009536743164
    7. '               ' → logprob: -17.250009536743164
    8. '           ' → logprob: -17.375009536743164
    9. ' ' → logprob: -18.375009536743164
    10. '                           ' → logprob: -18.625009536743164

Token 780: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0368843711912632
    2. '!=' → logprob: -3.786884307861328
    3. ' ==' → logprob: -4.536884307861328
    4. 'in' → logprob: -6.411884307861328
    5. ' !=' → logprob: -7.536884307861328
    6. ' in' → logprob: -8.036884307861328
    7. 'not' → logprob: -8.286884307861328
    8. ' not' → logprob: -9.786884307861328
    9. '   ' → logprob: -11.536884307861328
    10. 'k' → logprob: -12.536884307861328

Token 781: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.128163257315464e-07
    2. ' min' → logprob: -15.25
    3. '   ' → logprob: -20.25
    4. '	min' → logprob: -20.875
    5. 'max' → logprob: -21.125
    6. '(min' → logprob: -22.875
    7. '    ' → logprob: -22.875
    8. '[min' → logprob: -22.875
    9. '=min' → logprob: -23.25
    10. '_min' → logprob: -23.5

Token 782: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -6.44443862256594e-05
    2. 'i' → logprob: -10.125064849853516
    3. '_j' → logprob: -10.875064849853516
    4. '_k' → logprob: -13.125064849853516
    5. '                   ' → logprob: -13.750064849853516
    6. '   ' → logprob: -14.250064849853516
    7. '               ' → logprob: -14.250064849853516
    8. 'k' → logprob: -15.250064849853516
    9. '```' → logprob: -15.375064849853516
    10. '           ' → logprob: -16.000064849853516

Token 783: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3132999539375305
    2. 'and' → logprob: -1.3132998943328857
    3. '                   ' → logprob: -10.313300132751465
    4. '                       ' → logprob: -13.688300132751465
    5. '```' → logprob: -14.063300132751465
    6. ' ' → logprob: -14.313300132751465
    7. '
' → logprob: -14.813300132751465
    8. '           ' → logprob: -14.938300132751465
    9. '   ' → logprob: -14.938300132751465
    10. '               ' → logprob: -15.063300132751465

Token 784: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0025739942211657763
    2. ' k' → logprob: -6.0025739669799805
    3. '                   ' → logprob: -10.00257396697998
    4. '   ' → logprob: -11.00257396697998
    5. '                       ' → logprob: -11.37757396697998
    6. '                           ' → logprob: -12.50257396697998
    7. '    ' → logprob: -12.50257396697998
    8. '               ' → logprob: -12.87757396697998
    9. '                    ' → logprob: -13.12757396697998
    10. '           ' → logprob: -13.25257396697998

Token 785: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.06533760577440262
    2. ' !=' → logprob: -2.815337657928467
    3. '                   ' → logprob: -5.815337657928467
    4. '```' → logprob: -8.690337181091309
    5. '                       ' → logprob: -9.315337181091309
    6. ']!=' → logprob: -10.065337181091309
    7. '!==' → logprob: -11.065337181091309
    8. '!' → logprob: -11.315337181091309
    9. '               ' → logprob: -11.565337181091309
    10. 'not' → logprob: -12.190337181091309

Token 786: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.2113979209971149e-05
    2. ' min' → logprob: -11.375012397766113
    3. '                           ' → logprob: -15.625012397766113
    4. '                       ' → logprob: -16.125011444091797
    5. '                   ' → logprob: -16.375011444091797
    6. 'max' → logprob: -16.625011444091797
    7. '   ' → logprob: -16.625011444091797
    8. 'm' → logprob: -16.625011444091797
    9. '               ' → logprob: -17.375011444091797
    10. '           ' → logprob: -17.625011444091797

Token 787: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00024203950306400657
    2. 'j' → logprob: -8.625242233276367
    3. '_k' → logprob: -10.000242233276367
    4. '```' → logprob: -11.500242233276367
    5. 'k' → logprob: -12.375242233276367
    6. '_i' → logprob: -15.250242233276367
    7. '<|end|>' → logprob: -15.250242233276367
    8. '``' → logprob: -15.375242233276367
    9. 'jspx' → logprob: -15.750242233276367
    10. '\' → logprob: -16.000242233276367

Token 788: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34045952558517456
    2. ':' → logprob: -1.3404595851898193
    3. '                       ' → logprob: -4.21545934677124
    4. '                   ' → logprob: -5.34045934677124
    5. ' and' → logprob: -5.46545934677124
    6. 'and' → logprob: -6.46545934677124
    7. '):
' → logprob: -7.09045934677124
    8. ',' → logprob: -8.840459823608398
    9. '               ' → logprob: -9.090459823608398
    10. ':

' → logprob: -9.465459823608398

Token 789: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00257328269071877
    2. '```' → logprob: -6.502573490142822
    3. '                   ' → logprob: -8.252573013305664
    4. ' new' → logprob: -8.752573013305664
    5. '[' → logprob: -8.752573013305664
    6. '                        
' → logprob: -9.002573013305664
    7. ':' → logprob: -9.752573013305664
    8. ':
' → logprob: -9.752573013305664
    9. 'new' → logprob: -10.252573013305664
    10. ',' → logprob: -10.252573013305664

Token 790: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.04039498046040535
    2. ' new' → logprob: -3.2903950214385986
    3. '                   ' → logprob: -6.2903947830200195
    4. '                       ' → logprob: -7.7903947830200195
    5. '```' → logprob: -10.66539478302002
    6. '[new' → logprob: -11.04039478302002
    7. '           ' → logprob: -11.29039478302002
    8. '               ' → logprob: -11.29039478302002
    9. ' ' → logprob: -12.41539478302002
    10. '   ' → logprob: -12.66539478302002

Token 791: '_clusters' (ID: 117535)
  Prédit: '_clusters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clusters' → logprob: -0.000714935187716037
    2. '_d' → logprob: -7.8757147789001465
    3. '_cluster' → logprob: -8.500715255737305
    4. 'clusters' → logprob: -9.375715255737305
    5. 'd' → logprob: -10.250715255737305
    6. 'new' → logprob: -12.875715255737305
    7. 'cluster' → logprob: -13.250715255737305
    8. '_cl' → logprob: -13.750715255737305
    9. 'Clusters' → logprob: -14.250715255737305
    10. '_row' → logprob: -14.625715255737305

Token 792: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.657694418914616e-05
    2. '.' → logprob: -9.875056266784668
    3. 'append' → logprob: -12.250056266784668
    4. '.app' → logprob: -16.125057220458984
    5. ' .' → logprob: -16.625057220458984
    6. 'Append' → logprob: -17.000057220458984
    7. '.extend' → logprob: -17.250057220458984
    8. '.Append' → logprob: -17.375057220458984
    9. '_append' → logprob: -17.625057220458984
    10. '.ap' → logprob: -18.375057220458984

Token 793: '(cl' (ID: 16811)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.000433291686931625
    2. ' clusters' → logprob: -7.750433444976807
    3. '           ' → logprob: -13.375432968139648
    4. 'cl' → logprob: -14.250432968139648
    5. '       ' → logprob: -15.500432968139648
    6. '   ' → logprob: -15.750432968139648
    7. '               ' → logprob: -17.00043296813965
    8. '                   ' → logprob: -17.50043296813965
    9. 'cluster' → logprob: -17.75043296813965
    10. 'k' → logprob: -19.12543296813965

Token 794: 'usters' (ID: 26011)
  Prédit: 'usters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usters' → logprob: -6.988221684878226e-06
    2. 'clusters' → logprob: -12.000006675720215
    3. '[' → logprob: -15.125006675720215
    4. 'uster' → logprob: -15.500006675720215
    5. '[k' → logprob: -15.750006675720215
    6. 'k' → logprob: -16.50000762939453
    7. 'sters' → logprob: -17.00000762939453
    8. 'ust' → logprob: -17.37500762939453
    9. ' clusters' → logprob: -17.62500762939453
    10. 'uters' → logprob: -18.00000762939453

Token 795: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: 0.0
    2. 'k' → logprob: -17.625
    3. '                   ' → logprob: -19.875
    4. '[' → logprob: -20.0
    5. '[
' → logprob: -20.0
    6. '```' → logprob: -20.625
    7. '               ' → logprob: -20.75
    8. '[key' → logprob: -20.75
    9. '           ' → logprob: -20.875
    10. '   ' → logprob: -20.875

Token 796: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11411364376544952
    2. ')
' → logprob: -2.2391135692596436
    3. '                       ' → logprob: -6.864113807678223
    4. '                   ' → logprob: -9.239113807678223
    5. '<|end|>' → logprob: -10.489113807678223
    6. ')

' → logprob: -10.739113807678223
    7. ' )' → logprob: -10.739113807678223
    8. '                        
' → logprob: -11.239113807678223
    9. '               ' → logprob: -11.614113807678223
    10. ' )
' → logprob: -11.739113807678223

Token 797: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05509047210216522
    2. '[new' → logprob: -4.305090427398682
    3. '                        
' → logprob: -4.430090427398682
    4. 'new' → logprob: -4.680090427398682
    5. '```' → logprob: -5.180090427398682
    6. '               ' → logprob: -5.430090427398682
    7. ' new' → logprob: -5.930090427398682
    8. '[' → logprob: -6.430090427398682
    9. '                   ' → logprob: -6.930090427398682
    10. '           ' → logprob: -7.430090427398682

Token 798: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.004442816600203514
    2. '                       ' → logprob: -6.0044426918029785
    3. ' new' → logprob: -6.2544426918029785
    4. '                           ' → logprob: -11.379443168640137
    5. '                   ' → logprob: -11.879443168640137
    6. '   ' → logprob: -12.504443168640137
    7. '           ' → logprob: -12.629443168640137
    8. ' ' → logprob: -12.629443168640137
    9. '[new' → logprob: -12.754443168640137
    10. '```' → logprob: -12.754443168640137

Token 799: '_cluster' (ID: 65346)
  Prédit: '_cluster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cluster' → logprob: -0.009953226894140244
    2. 'cluster' → logprob: -4.759953022003174
    3. '_nodes' → logprob: -6.634953022003174
    4. '_node' → logprob: -11.259953498840332
    5. 'nodes' → logprob: -12.634953498840332
    6. 'Cluster' → logprob: -13.384953498840332
    7. ' cluster' → logprob: -13.634953498840332
    8. '	cluster' → logprob: -13.634953498840332
    9. 'd' → logprob: -14.134953498840332
    10. '_dist' → logprob: -14.134953498840332

Token 800: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -6.153795766294934e-06
    2. 'nodes' → logprob: -12.250005722045898
    3. 's' → logprob: -14.625005722045898
    4. '
' → logprob: -15.125005722045898
    5. '_node' → logprob: -16.7500057220459
    6. '```' → logprob: -16.8750057220459
    7. '   ' → logprob: -17.2500057220459
    8. '_indices' → logprob: -17.2500057220459
    9. '_clusters' → logprob: -17.3750057220459
    10. '_n' → logprob: -17.5000057220459

Token 801: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.796184723294573e-06
    2. '.' → logprob: -12.125005722045898
    3. 'append' → logprob: -15.250005722045898
    4. ' .' → logprob: -17.2500057220459
    5. '.app' → logprob: -18.0000057220459
    6. '.Append' → logprob: -19.5000057220459
    7. 'app' → logprob: -21.1250057220459
    8. 'Append' → logprob: -21.5000057220459
    9. 'appen' → logprob: -21.6250057220459
    10. '           ' → logprob: -21.7500057220459

Token 802: '(cluster' (ID: 98051)
  Prédit: 'cluster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluster' → logprob: -5.860340752406046e-05
    2. ' cluster' → logprob: -9.7500581741333
    3. '(cluster' → logprob: -15.3750581741333
    4. '	cluster' → logprob: -18.000059127807617
    5. 'clusters' → logprob: -20.500059127807617
    6. ' ' → logprob: -20.750059127807617
    7. '.cluster' → logprob: -21.250059127807617
    8. 'Cluster' → logprob: -21.375059127807617
    9. '   ' → logprob: -21.625059127807617
    10. 'clone' → logprob: -23.000059127807617

Token 803: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.652451464906335e-05
    2. 'nodes' → logprob: -11.250016212463379
    3. 'k' → logprob: -13.500016212463379
    4. 's' → logprob: -14.375016212463379
    5. '[k' → logprob: -14.500016212463379
    6. 'Nodes' → logprob: -14.875016212463379
    7. '
' → logprob: -16.125017166137695
    8. '_node' → logprob: -16.625017166137695
    9. 'cluster' → logprob: -17.000017166137695
    10. '```' → logprob: -17.000017166137695

Token 804: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.128163257315464e-07
    2. 'k' → logprob: -15.5
    3. '{k' → logprob: -19.375
    4. '```' → logprob: -19.625
    5. '[
' → logprob: -20.0
    6. '   ' → logprob: -20.5
    7. '[' → logprob: -20.875
    8. ' [' → logprob: -20.875
    9. '
' → logprob: -21.375
    10. '(k' → logprob: -21.375

Token 805: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07014716416597366
    2. ')
' → logprob: -2.6951472759246826
    3. '                       ' → logprob: -8.945147514343262
    4. ' )' → logprob: -10.195147514343262
    5. '                   ' → logprob: -10.945147514343262
    6. ' )
' → logprob: -11.820147514343262
    7. ')
' → logprob: -12.320147514343262
    8. ')

' → logprob: -12.445147514343262
    9. '               ' → logprob: -13.195147514343262
    10. '<|end|>' → logprob: -13.320147514343262

Token 806: '               ' (ID: 506)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -1.0815588235855103
    2. '               ' → logprob: -1.7065588235855103
    3. '                       ' → logprob: -1.9565588235855103
    4. 'new' → logprob: -1.9565588235855103
    5. '                        
' → logprob: -3.2065587043762207
    6. '	new' → logprob: -4.081558704376221
    7. '	               ' → logprob: -4.331558704376221
    8. '	       ' → logprob: -4.331558704376221
    9. '	                   ' → logprob: -4.456558704376221
    10. '		       ' → logprob: -4.581558704376221

Token 807: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.13956861197948456
    2. '               ' → logprob: -2.139568567276001
    3. ' new' → logprob: -4.38956880569458
    4. '```' → logprob: -9.514568328857422
    5. '[new' → logprob: -10.389568328857422
    6. 'clusters' → logprob: -11.014568328857422
    7. '                
' → logprob: -11.264568328857422
    8. 'cluster' → logprob: -12.514568328857422
    9. '	new' → logprob: -12.639568328857422
    10. '
' → logprob: -13.139568328857422

Token 808: '_clusters' (ID: 117535)
  Prédit: '_clusters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clusters' → logprob: -0.004394986666738987
    2. '_cluster' → logprob: -5.504395008087158
    3. '_d' → logprob: -8.62939453125
    4. 'clusters' → logprob: -9.12939453125
    5. 'cluster' → logprob: -11.00439453125
    6. 'd' → logprob: -12.37939453125
    7. 'Clusters' → logprob: -13.00439453125
    8. '_new' → logprob: -13.50439453125
    9. 'new' → logprob: -13.50439453125
    10. '_dist' → logprob: -13.50439453125

Token 809: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012451570364646614
    2. '.' → logprob: -9.00012493133545
    3. ' .' → logprob: -14.37512493133545
    4. '           ' → logprob: -15.37512493133545
    5. 'append' → logprob: -16.250123977661133
    6. '               ' → logprob: -17.125123977661133
    7. '.app' → logprob: -17.375123977661133
    8. '                   ' → logprob: -17.750123977661133
    9. '.insert' → logprob: -18.125123977661133
    10. '.ap' → logprob: -18.125123977661133

Token 810: '(new' (ID: 2648)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.030403243377804756
    2. '(new' → logprob: -3.5304031372070312
    3. ' new' → logprob: -8.030403137207031
    4. '[new' → logprob: -8.030403137207031
    5. '{' → logprob: -13.530403137207031
    6. '[' → logprob: -15.905403137207031
    7. '	new' → logprob: -16.15540313720703
    8. '   ' → logprob: -16.40540313720703
    9. '({' → logprob: -17.40540313720703
    10. '$new' → logprob: -17.53040313720703

Token 811: '_cluster' (ID: 65346)
  Prédit: '_cluster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cluster' → logprob: -0.0004897649050690234
    2. 'cluster' → logprob: -7.625489711761475
    3. 'new' → logprob: -14.125490188598633
    4. 'Cluster' → logprob: -14.625490188598633
    5. '_CLUSTER' → logprob: -15.500490188598633
    6. '{' → logprob: -15.875490188598633
    7. '_node' → logprob: -16.250490188598633
    8. '_clusters' → logprob: -17.000490188598633
    9. '[new' → logprob: -17.375490188598633
    10. '	cluster' → logprob: -17.375490188598633

Token 812: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03692125156521797
    2. ')' → logprob: -3.786921262741089
    3. '               ' → logprob: -4.78692102432251
    4. ')new' → logprob: -6.03692102432251
    5. 'new' → logprob: -6.66192102432251
    6. ',new' → logprob: -6.91192102432251
    7. '[new' → logprob: -8.286921501159668
    8. '           ' → logprob: -9.286921501159668
    9. ' new' → logprob: -9.786921501159668
    10. '                
' → logprob: -10.036921501159668

Token 813: '               ' (ID: 506)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.050758469849824905
    2. '               ' → logprob: -3.0507583618164062
    3. ' new' → logprob: -6.300758361816406
    4. '           ' → logprob: -8.425758361816406
    5. '```' → logprob: -10.175758361816406
    6. '       ' → logprob: -10.800758361816406
    7. '[new' → logprob: -10.800758361816406
    8. 'cluster' → logprob: -10.925758361816406
    9. '   ' → logprob: -12.800758361816406
    10. '                
' → logprob: -13.175758361816406

Token 814: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.004112592898309231
    2. ' new' → logprob: -5.504112720489502
    3. '               ' → logprob: -10.379112243652344
    4. '           ' → logprob: -13.129112243652344
    5. '[new' → logprob: -14.754112243652344
    6. '   ' → logprob: -15.129112243652344
    7. '       ' → logprob: -16.129112243652344
    8. 'cluster' → logprob: -16.629112243652344
    9. '
' → logprob: -16.879112243652344
    10. '	new' → logprob: -16.879112243652344

Token 815: '_cluster' (ID: 65346)
  Prédit: '_cluster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cluster' → logprob: -0.0004362718027550727
    2. 'cluster' → logprob: -7.750436305999756
    3. ' cluster' → logprob: -12.750435829162598
    4. 'Cluster' → logprob: -13.875435829162598
    5. '_node' → logprob: -14.125435829162598
    6. '_clusters' → logprob: -14.500435829162598
    7. '_nodes' → logprob: -15.250435829162598
    8. '	cluster' → logprob: -16.000436782836914
    9. '_CLUSTER' → logprob: -16.625436782836914
    10. 'clusters' → logprob: -17.375436782836914

Token 816: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -4.842555426876061e-06
    2. 'nodes' → logprob: -12.500004768371582
    3. 's' → logprob: -15.250004768371582
    4. '.append' → logprob: -15.500004768371582
    5. '   ' → logprob: -15.750004768371582
    6. 'Nodes' → logprob: -16.1250057220459
    7. '```' → logprob: -16.8750057220459
    8. '
' → logprob: -17.1250057220459
    9. 'node' → logprob: -17.5000057220459
    10. '_tokens' → logprob: -17.8750057220459

Token 817: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -12.250004768371582
    3. 'append' → logprob: -15.375004768371582
    4. '.app' → logprob: -16.1250057220459
    5. ' .' → logprob: -19.2500057220459
    6. '.ap' → logprob: -19.5000057220459
    7. 'Append' → logprob: -20.2500057220459
    8. '.Append' → logprob: -20.3750057220459
    9. '   ' → logprob: -21.2500057220459
    10. 'app' → logprob: -21.7500057220459

Token 818: '(new' (ID: 2648)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0004309076175559312
    2. ' new' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.250431060791016
    4. '	new' → logprob: -19.500431060791016
    5. '       ' → logprob: -19.625431060791016
    6. '           ' → logprob: -19.750431060791016
    7. '               ' → logprob: -20.000431060791016
    8. ' ' → logprob: -20.125431060791016
    9. '  ' → logprob: -20.625431060791016
    10. '    ' → logprob: -20.750431060791016

Token 819: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0007157695363275707
    2. 'node' → logprob: -7.250715732574463
    3. 'ode' → logprob: -12.125716209411621
    4. 'Node' → logprob: -15.500716209411621
    5. 'new' → logprob: -15.875716209411621
    6. 'next' → logprob: -18.250715255737305
    7. '-node' → logprob: -18.500715255737305
    8. '_NODE' → logprob: -18.750715255737305
    9. ' node' → logprob: -19.125715255737305
    10. '[node' → logprob: -19.750715255737305

Token 820: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6638633608818054
    2. '               ' → logprob: -0.7888633608818054
    3. '                
' → logprob: -4.413863182067871
    4. 'new' → logprob: -4.788863182067871
    5. ')
' → logprob: -5.538863182067871
    6. ',new' → logprob: -6.913863182067871
    7. ' new' → logprob: -6.913863182067871
    8. ')' → logprob: -6.913863182067871
    9. '[new' → logprob: -7.163863182067871
    10. '            
' → logprob: -7.663863182067871

Token 821: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08162149786949158
    2. 'new' → logprob: -2.8316214084625244
    3. '                
' → logprob: -4.5816216468811035
    4. '
' → logprob: -5.7066216468811035
    5. '```' → logprob: -5.8316216468811035
    6. 'd' → logprob: -6.9566216468811035
    7. ' new' → logprob: -7.7066216468811035
    8. '[new' → logprob: -7.9566216468811035
    9. '	new' → logprob: -8.581621170043945
    10. '                ' → logprob: -9.456621170043945

Token 822: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0438617542386055
    2. 'new' → logprob: -3.5438618659973145
    3. '               ' → logprob: -4.2938618659973145
    4. '#' (adapté à ' #') → logprob: -8.543861389160156
    5. ' for' → logprob: -9.293861389160156
    6. 'size' → logprob: -10.043861389160156
    7. '                
' → logprob: -11.793861389160156
    8. 'n' → logprob: -12.418861389160156
    9. 'd' → logprob: -12.418861389160156
    10. '           ' → logprob: -12.668861389160156

Token 823: ' build' (ID: 3024)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00032116140937432647
    2. '#' → logprob: -8.750321388244629
    3. 'new' → logprob: -8.875321388244629
    4. 'size' → logprob: -10.750321388244629
    5. ' for' → logprob: -15.250321388244629
    6. 'n' → logprob: -15.375321388244629
    7. 'row' → logprob: -15.500321388244629
    8. '
' → logprob: -15.750321388244629
    9. '               ' → logprob: -15.875321388244629
    10. 'length' → logprob: -15.875321388244629

Token 824: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.032930921763181686
    2. '[new' → logprob: -3.907930850982666
    3. '               ' → logprob: -5.157930850982666
    4. 'for' → logprob: -6.532930850982666
    5. '   ' → logprob: -6.532930850982666
    6. 'row' → logprob: -6.907930850982666
    7. 'd' → logprob: -7.657930850982666
    8. ' new' → logprob: -7.657930850982666
    9. '[
' → logprob: -7.782930850982666
    10. '_d' → logprob: -8.407931327819824

Token 825: ' distance' (ID: 9324)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.2851180136203766
    2. 'd' → logprob: -1.4101179838180542
    3. 'size' → logprob: -6.410118103027344
    4. 'dist' → logprob: -7.535118103027344
    5. 'matrix' → logprob: -7.535118103027344
    6. 'for' → logprob: -7.785118103027344
    7. '_dist' → logprob: -8.410118103027344
    8. '           ' → logprob: -9.035118103027344
    9. '_size' → logprob: -9.035118103027344
    10. '_matrix' → logprob: -9.285118103027344

Token 826: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.3927660584449768
    2. '_matrix' → logprob: -1.142765998840332
    3. 'new' → logprob: -5.892765998840332
    4. '   ' → logprob: -7.142765998840332
    5. 'row' → logprob: -7.392765998840332
    6. '_row' → logprob: -7.642765998840332
    7. '               ' → logprob: -8.267765998840332
    8. '           ' → logprob: -8.517765998840332
    9. ' matrix' → logprob: -8.517765998840332
    10. '=' → logprob: -8.767765998840332

Token 827: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03041422925889492
    2. 'new' → logprob: -4.65541410446167
    3. '[new' → logprob: -5.15541410446167
    4. 'for' → logprob: -5.53041410446167
    5. '[' → logprob: -5.65541410446167
    6. ' new' → logprob: -6.03041410446167
    7. '[
' → logprob: -6.28041410446167
    8. ' for' → logprob: -6.53041410446167
    9. '           ' → logprob: -7.65541410446167
    10. '                
' → logprob: -7.78041410446167

Token 828: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008200708776712418
    2. '[' → logprob: -5.508200645446777
    3. 'new' → logprob: -6.383200645446777
    4. '[new' → logprob: -6.633200645446777
    5. '[
' → logprob: -7.508200645446777
    6. 'for' → logprob: -8.508200645446777
    7. ' new' → logprob: -9.258200645446777
    8. ' for' → logprob: -9.758200645446777
    9. '           ' → logprob: -10.133200645446777
    10. '                   ' → logprob: -10.383200645446777

Token 829: ' size' (ID: 2349)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12301994860172272
    2. 'new' → logprob: -2.4980199337005615
    3. ' new' → logprob: -4.373020172119141
    4. '[' → logprob: -4.748020172119141
    5. '[
' → logprob: -4.998020172119141
    6. '[new' → logprob: -5.748020172119141
    7. 'for' → logprob: -6.498020172119141
    8. ' for' → logprob: -8.12302017211914
    9. '           ' → logprob: -8.99802017211914
    10. '                   ' → logprob: -8.99802017211914

Token 830: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474103718996048
    2. '=' → logprob: -0.9741036891937256
    3. 'new' → logprob: -11.599103927612305
    4. '=len' → logprob: -12.474103927612305
    5. '               ' → logprob: -12.599103927612305
    6. '           ' → logprob: -12.974103927612305
    7. '                ' → logprob: -13.474103927612305
    8. '			' → logprob: -13.724103927612305
    9. '            ' → logprob: -13.849103927612305
    10. '_new' → logprob: -14.599103927612305

Token 831: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.5597102396423e-05
    2. ' len' → logprob: -10.250035285949707
    3. '(len' → logprob: -15.500035285949707
    4. '           ' → logprob: -18.000036239624023
    5. '   ' → logprob: -19.000036239624023
    6. '[len' → logprob: -19.625036239624023
    7. '	len' → logprob: -19.875036239624023
    8. '               ' → logprob: -20.000036239624023
    9. '          ' → logprob: -20.375036239624023
    10. '       ' → logprob: -20.500036239624023

Token 832: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0002613358374219388
    2. 'new' → logprob: -8.250261306762695
    3. '=new' → logprob: -17.125261306762695
    4. '[new' → logprob: -17.125261306762695
    5. '(' → logprob: -18.250261306762695
    6. ' new' → logprob: -18.750261306762695
    7. ')new' → logprob: -19.000261306762695
    8. '	new' → logprob: -19.125261306762695
    9. '$new' → logprob: -19.625261306762695
    10. '```' → logprob: -20.000261306762695

Token 833: '_clusters' (ID: 117535)
  Prédit: '_clusters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clusters' → logprob: -0.011435991153120995
    2. 'new' → logprob: -4.7614359855651855
    3. '_new' → logprob: -6.5114359855651855
    4. '(new' → logprob: -7.0114359855651855
    5. '_d' → logprob: -8.011436462402344
    6. 'clusters' → logprob: -10.011436462402344
    7. 'Clusters' → logprob: -11.261436462402344
    8. '[new' → logprob: -11.386436462402344
    9. '_cl' → logprob: -11.386436462402344
    10. 'd' → logprob: -12.011436462402344

Token 834: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6567782163619995
    2. ')' → logprob: -1.5317782163619995
    3. '               ' → logprob: -2.031778335571289
    4. '
' → logprob: -2.781778335571289
    5. 'new' → logprob: -3.406778335571289
    6. '           ' → logprob: -4.781778335571289
    7. ',' → logprob: -5.281778335571289
    8. ')new' → logprob: -5.656778335571289
    9. '[new' → logprob: -5.906778335571289
    10. '                   ' → logprob: -5.906778335571289

Token 835: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29998520016670227
    2. 'new' → logprob: -1.4249851703643799
    3. '	new' → logprob: -4.424985408782959
    4. '[new' → logprob: -5.424985408782959
    5. ' new' → logprob: -7.049985408782959
    6. '			' → logprob: -7.799985408782959
    7. '           ' → logprob: -8.0499849319458
    8. '[' → logprob: -8.2999849319458
    9. '   ' → logprob: -9.0499849319458
    10. '[
' → logprob: -9.6749849319458

Token 836: ' for' (ID: 395)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.23637883365154266
    2. 'd' → logprob: -1.736378788948059
    3. '           ' → logprob: -4.2363786697387695
    4. 'for' (adapté à ' for') → logprob: -4.3613786697387695
    5. '               ' → logprob: -5.1113786697387695
    6. ' new' → logprob: -7.2363786697387695
    7. '   ' → logprob: -8.98637866973877
    8. '       ' → logprob: -9.11137866973877
    9. ' for' → logprob: -9.73637866973877
    10. '                   ' → logprob: -10.11137866973877

Token 837: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2646476924419403
    2. 'k' → logprob: -1.6396477222442627
    3. '_i' → logprob: -4.264647483825684
    4. 'row' → logprob: -4.389647483825684
    5. 'r' → logprob: -5.639647483825684
    6. '_k' → logprob: -6.014647483825684
    7. 'x' → logprob: -6.014647483825684
    8. '_row' → logprob: -6.389647483825684
    9. '_' → logprob: -6.764647483825684
    10. 'a' → logprob: -9.264647483825684

Token 838: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0338001474738121
    2. 'in' → logprob: -3.4088001251220703
    3. ' i' → logprob: -9.90880012512207
    4. 'i' → logprob: -10.28380012512207
    5. ' ' → logprob: -10.53380012512207
    6. '	in' → logprob: -10.90880012512207
    7. '=' → logprob: -12.40880012512207
    8. '	' → logprob: -12.65880012512207
    9. '   ' → logprob: -12.90880012512207
    10. '_' → logprob: -12.90880012512207

Token 839: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.088346359931165e-07
    2. ' range' → logprob: -14.000000953674316
    3. 'new' → logprob: -18.625
    4. '   ' → logprob: -19.125
    5. ' ' → logprob: -20.125
    6. '  ' → logprob: -20.875
    7. '(range' → logprob: -22.375
    8. '	range' → logprob: -22.875
    9. '0' → logprob: -23.125
    10. '
' → logprob: -23.375

Token 840: '(size' (ID: 15192)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0001955537445610389
    2. '(size' → logprob: -8.750195503234863
    3. ' size' → logprob: -10.375195503234863
    4. '1' → logprob: -12.750195503234863
    5. '   ' → logprob: -14.000195503234863
    6. 'new' → logprob: -14.875195503234863
    7. '[size' → logprob: -14.875195503234863
    8. 'len' → logprob: -15.000195503234863
    9. ' ' → logprob: -15.625195503234863
    10. '           ' → logprob: -15.625195503234863

Token 841: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25539863109588623
    2. '):' → logprob: -1.5053986310958862
    3. '   ' → logprob: -7.255398750305176
    4. ':' → logprob: -7.380398750305176
    5. '       ' → logprob: -7.380398750305176
    6. '           ' → logprob: -7.630398750305176
    7. 'new' → logprob: -8.380398750305176
    8. '=' → logprob: -8.630398750305176
    9. '               ' → logprob: -9.380398750305176
    10. '[' → logprob: -9.755398750305176

Token 842: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '0' → logprob: -14.125001907348633
    3. '2' → logprob: -14.500001907348633
    4. ' ' → logprob: -15.750001907348633
    5. '   ' → logprob: -16.500001907348633
    6. 'new' → logprob: -16.750001907348633
    7. '
' → logprob: -17.250001907348633
    8. '```' → logprob: -18.687501907348633
    9. '3' → logprob: -18.875001907348633
    10. '１' → logprob: -19.062501907348633

Token 843: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1785552203655243
    2. '):' → logprob: -3.0535552501678467
    3. ':' → logprob: -3.6785552501678467
    4. ':
' → logprob: -3.8035552501678467
    5. '       ' → logprob: -4.053555011749268
    6. '               ' → logprob: -4.178555011749268
    7. '           ' → logprob: -4.303555011749268
    8. '   ' → logprob: -4.303555011749268
    9. '                   ' → logprob: -5.178555011749268
    10. '+' → logprob: -6.678555011749268

Token 844: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05449289828538895
    2. 'new' → logprob: -3.429492950439453
    3. '   ' → logprob: -5.179492950439453
    4. ' new' → logprob: -5.429492950439453
    5. '               ' → logprob: -6.054492950439453
    6. '           ' → logprob: -6.054492950439453
    7. '                       ' → logprob: -6.179492950439453
    8. '[new' → logprob: -6.429492950439453
    9. '[' → logprob: -6.804492950439453
    10. '       ' → logprob: -7.304492950439453

Token 845: ' row' (ID: 5225)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.26022568345069885
    2. 'row' (adapté à ' row') → logprob: -1.5102256536483765
    3. '   ' → logprob: -6.260225772857666
    4. '                   ' → logprob: -6.260225772857666
    5. 'temp' → logprob: -6.760225772857666
    6. '           ' → logprob: -7.260225772857666
    7. '               ' → logprob: -7.510225772857666
    8. 'if' → logprob: -7.635225772857666
    9. 'line' → logprob: -8.135225296020508
    10. 'd' → logprob: -8.135225296020508

Token 846: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06734766811132431
    2. '=' → logprob: -2.942347764968872
    3. 'append' → logprob: -5.692347526550293
    4. ' =' → logprob: -5.817347526550293
    5. '.' → logprob: -5.942347526550293
    6. 'new' → logprob: -6.442347526550293
    7. '=[]' → logprob: -7.817347526550293
    8. '[' → logprob: -8.442347526550293
    9. '           ' → logprob: -8.692347526550293
    10. '   ' → logprob: -8.817347526550293

Token 847: ' [' (ID: 723)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.28957995772361755
    2. 'new' → logprob: -2.1645798683166504
    3. '[]
' → logprob: -2.1645798683166504
    4. '[]' → logprob: -3.9145798683166504
    5. '[' → logprob: -6.53957986831665
    6. '[]

' → logprob: -9.289580345153809
    7. '[
' → logprob: -9.414580345153809
    8. ' new' → logprob: -9.664580345153809
    9. '[d' → logprob: -10.164580345153809
    10. '[i' → logprob: -10.914580345153809

Token 848: '0' (ID: 15)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.017904674634337425
    2. '0' → logprob: -4.517904758453369
    3. 'None' → logprob: -6.142904758453369
    4. 'd' → logprob: -6.267904758453369
    5. '-' → logprob: -6.767904758453369
    6. '(new' → logprob: -7.142904758453369
    7. '(' → logprob: -8.892904281616211
    8. ' new' → logprob: -9.017904281616211
    9. ']' → logprob: -9.392904281616211
    10. '(d' → logprob: -9.767904281616211

Token 849: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23759645223617554
    2. ']+' → logprob: -2.3625965118408203
    3. '                   ' → logprob: -3.2375965118408203
    4. ' for' → logprob: -3.3625965118408203
    5. ']*' → logprob: -3.7375965118408203
    6. 'for' → logprob: -4.61259651184082
    7. ',' → logprob: -5.98759651184082
    8. ' ]' → logprob: -6.11259651184082
    9. ']*(' → logprob: -6.86259651184082
    10. '                    ' → logprob: -6.98759651184082

Token 850: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.00016504127415828407
    2. '(size' → logprob: -8.750164985656738
    3. ' size' → logprob: -12.625164985656738
    4. 'i' → logprob: -12.750164985656738
    5. '(i' → logprob: -15.750164985656738
    6. '   ' → logprob: -16.875165939331055
    7. '(' → logprob: -17.125165939331055
    8. '                   ' → logprob: -17.625165939331055
    9. '           ' → logprob: -17.750165939331055
    10. '               ' → logprob: -18.250165939331055

Token 851: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.45121607184410095
    2. '<|end|>' → logprob: -1.5762161016464233
    3. '<|end|>' → logprob: -3.076215982437134
    4. '[' → logprob: -3.451215982437134
    5. '               ' → logprob: -3.951215982437134
    6. '                    
' → logprob: -4.451216220855713
    7. '		           ' → logprob: -5.201216220855713
    8. '           ' → logprob: -5.201216220855713
    9. '[i' → logprob: -5.326216220855713
    10. ' for' → logprob: -5.951216220855713

Token 852: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04187709838151932
    2. '<|end|>' → logprob: -4.041877269744873
    3. '[' → logprob: -4.541877269744873
    4. '               ' → logprob: -5.291877269744873
    5. '           ' → logprob: -6.291877269744873
    6. '<|end|>' → logprob: -6.541877269744873
    7. '		           ' → logprob: -7.166877269744873
    8. ' for' → logprob: -7.291877269744873
    9. '       ' → logprob: -7.541877269744873
    10. '   ' → logprob: -8.041876792907715

Token 853: ' for' (ID: 395)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.1499278545379639
    2. '                   ' → logprob: -1.2749278545379639
    3. 'for' (adapté à ' for') → logprob: -1.5249278545379639
    4. 'row' → logprob: -2.274927854537964
    5. ' new' → logprob: -3.774927854537964
    6. ' for' → logprob: -3.899927854537964
    7. '           ' → logprob: -4.649928092956543
    8. '               ' → logprob: -4.899928092956543
    9. 'if' → logprob: -5.274928092956543
    10. '       ' → logprob: -5.899928092956543

Token 854: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008986006141640246
    2. ' j' → logprob: -7.125898838043213
    3. 'i' → logprob: -9.375898361206055
    4. '   ' → logprob: -11.875898361206055
    5. '0' → logprob: -14.875898361206055
    6. '	j' → logprob: -14.875898361206055
    7. ' ' → logprob: -15.000898361206055
    8. '    ' → logprob: -15.375898361206055
    9. '     ' → logprob: -15.625898361206055
    10. 'range' → logprob: -15.750898361206055

Token 855: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029795385897159576
    2. 'in' → logprob: -3.5297954082489014
    3. '	in' → logprob: -10.65479564666748
    4. ' ' → logprob: -12.02979564666748
    5. 'range' → logprob: -12.27979564666748
    6. '<|end|>' → logprob: -12.90479564666748
    7. '[' → logprob: -13.65479564666748
    8. ' i' → logprob: -13.90479564666748
    9. '(' → logprob: -13.90479564666748
    10. ' range' → logprob: -14.40479564666748

Token 856: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0020936380606144667
    2. 'i' → logprob: -6.87709379196167
    3. ' range' → logprob: -7.25209379196167
    4. 'size' → logprob: -8.002093315124512
    5. '(i' → logprob: -12.002093315124512
    6. '(range' → logprob: -12.502093315124512
    7. '[i' → logprob: -12.877093315124512
    8. '[size' → logprob: -13.627093315124512
    9. '   ' → logprob: -14.002093315124512
    10. ' ' → logprob: -14.377093315124512

Token 857: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03234144672751427
    2. '(size' → logprob: -3.782341480255127
    3. 'i' → logprob: -4.907341480255127
    4. 'size' → logprob: -6.407341480255127
    5. '(' → logprob: -11.907341003417969
    6. ' i' → logprob: -13.032341003417969
    7. '(len' → logprob: -14.282341003417969
    8. '[i' → logprob: -14.657341003417969
    9. '=size' → logprob: -14.657341003417969
    10. '{i' → logprob: -14.907341003417969

Token 858: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0062878066673874855
    2. ' +' → logprob: -5.131287574768066
    3. ',size' → logprob: -9.131287574768066
    4. '):' → logprob: -9.381287574768066
    5. '):
' → logprob: -10.131287574768066
    6. '[' → logprob: -10.756287574768066
    7. '[size' → logprob: -10.881287574768066
    8. '(size' → logprob: -11.006287574768066
    9. '<size' → logprob: -11.131287574768066
    10. '+i' → logprob: -11.131287574768066

Token 859: '1' (ID: 16)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.16199861466884613
    2. '1' → logprob: -1.9119986295700073
    3. 'i' → logprob: -6.661998748779297
    4. 'j' → logprob: -8.161998748779297
    5. 'row' → logprob: -9.286998748779297
    6. ' size' → logprob: -9.661998748779297
    7. '   ' → logprob: -11.411998748779297
    8. '(size' → logprob: -12.036998748779297
    9. ' ' → logprob: -12.411998748779297
    10. ')' → logprob: -12.411998748779297

Token 860: ',size' (ID: 86319)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08972089737653732
    2. ',size' → logprob: -2.4647209644317627
    3. ' ,' → logprob: -8.339720726013184
    4. ',row' → logprob: -8.464720726013184
    5. '+' → logprob: -8.964720726013184
    6. ',
' → logprob: -9.964720726013184
    7. '[size' → logprob: -10.464720726013184
    8. 'size' → logprob: -10.589720726013184
    9. '[' → logprob: -11.464720726013184
    10. ',len' → logprob: -11.589720726013184

Token 861: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12238570302724838
    2. '):' → logprob: -2.3723857402801514
    3. ')' → logprob: -4.497385501861572
    4. '[' → logprob: -5.372385501861572
    5. '                   ' → logprob: -6.497385501861572
    6. '       ' → logprob: -6.997385501861572
    7. '[i' → logprob: -7.497385501861572
    8. '           ' → logprob: -7.497385501861572
    9. '               ' → logprob: -7.622385501861572
    10. '                       ' → logprob: -7.872385501861572

Token 862: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030242912471294403
    2. 'j' → logprob: -6.253024101257324
    3. 'i' → logprob: -6.878024101257324
    4. ')' → logprob: -10.503024101257324
    5. ' ' → logprob: -11.003024101257324
    6. '0' → logprob: -11.253024101257324
    7. '```' → logprob: -13.253024101257324
    8. '   ' → logprob: -13.378024101257324
    9. '):
' → logprob: -14.003024101257324
    10. ' j' → logprob: -14.128024101257324

Token 863: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18957465887069702
    2. '                       ' → logprob: -2.439574718475342
    3. '):' → logprob: -3.564574718475342
    4. '                   ' → logprob: -3.564574718475342
    5. ']:
' → logprob: -4.564574718475342
    6. ',' → logprob: -5.814574718475342
    7. '               ' → logprob: -5.939574718475342
    8. '       ' → logprob: -6.064574718475342
    9. '                           ' → logprob: -6.314574718475342
    10. ':' → logprob: -6.689574718475342

Token 864: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.37923210859298706
    2. '                           ' → logprob: -1.7542321681976318
    3. '                   ' → logprob: -2.879232168197632
    4. ' ' → logprob: -3.379232168197632
    5. '[' → logprob: -4.004231929779053
    6. '                               ' → logprob: -4.754231929779053
    7. '               ' → logprob: -5.129231929779053
    8. '           ' → logprob: -5.754231929779053
    9. '<|end|>' → logprob: -5.754231929779053
    10. '                        
' → logprob: -6.254231929779053

Token 865: ' row' (ID: 5225)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9272962212562561
    2. ' d' → logprob: -1.1772961616516113
    3. ' row' → logprob: -2.8022961616516113
    4. 'new' → logprob: -3.1772961616516113
    5. '0' → logprob: -3.1772961616516113
    6. 'd' → logprob: -3.3022961616516113
    7. '                           ' → logprob: -3.3022961616516113
    8. ' if' → logprob: -3.8022961616516113
    9. 'row' (adapté à ' row') → logprob: -3.9272961616516113
    10. '                   ' → logprob: -4.802296161651611

Token 866: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002774246677290648
    2. '[i' → logprob: -8.500277519226074
    3. '[' → logprob: -9.625277519226074
    4. '```' → logprob: -13.250277519226074
    5. '][' → logprob: -13.625277519226074
    6. '=' → logprob: -14.125277519226074
    7. ' ' → logprob: -14.500277519226074
    8. ' [' → logprob: -14.625277519226074
    9. '=j' → logprob: -14.875277519226074
    10. '   ' → logprob: -15.250277519226074

Token 867: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9180312156677246
    2. ']=' → logprob: -1.2930312156677246
    3. '=' → logprob: -1.4180312156677246
    4. ' =' → logprob: -2.6680312156677246
    5. ']+=' → logprob: -5.418031215667725
    6. '[' → logprob: -5.543031215667725
    7. '+' → logprob: -6.543031215667725
    8. '<|end|>' → logprob: -7.293031215667725
    9. ' ]' → logprob: -7.543031215667725
    10. 'd' → logprob: -7.918031215667725

Token 868: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1631830632686615
    2. ' =' → logprob: -1.9131830930709839
    3. '[' → logprob: -6.663183212280273
    4. ']' → logprob: -7.288183212280273
    5. ']=' → logprob: -7.663183212280273
    6. '<|end|>' → logprob: -9.288183212280273
    7. ',' → logprob: -9.413183212280273
    8. ' ' → logprob: -10.038183212280273
    9. '=d' → logprob: -10.038183212280273
    10. '+=' → logprob: -10.288183212280273

Token 869: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023613937199115753
    2. 'new' → logprob: -3.773613929748535
    3. ' d' → logprob: -8.273613929748535
    4. ' new' → logprob: -9.898613929748535
    5. '           ' → logprob: -11.023613929748535
    6. '(d' → logprob: -11.148613929748535
    7. '   ' → logprob: -11.648613929748535
    8. '               ' → logprob: -12.523613929748535
    9. '       ' → logprob: -13.023613929748535
    10. '                   ' → logprob: -13.023613929748535

Token 870: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14318540692329407
    2. '[k' → logprob: -2.3931853771209717
    3. 'new' → logprob: -3.8931853771209717
    4. '[new' → logprob: -4.018185615539551
    5. 'i' → logprob: -6.393185615539551
    6. 'k' → logprob: -6.768185615539551
    7. '[' → logprob: -7.393185615539551
    8. '[size' → logprob: -9.01818561553955
    9. '[j' → logprob: -10.14318561553955
    10. '[min' → logprob: -10.89318561553955

Token 871: ' if' (ID: 538)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00486346147954464
    2. '[i' → logprob: -5.754863262176514
    3. ']' → logprob: -6.629863262176514
    4. '[j' → logprob: -8.629863739013672
    5. '+' → logprob: -10.004863739013672
    6. 'i' → logprob: -10.254863739013672
    7. '[' → logprob: -10.504863739013672
    8. ' ][' → logprob: -11.754863739013672
    9. '+i' → logprob: -11.879863739013672
    10. '][]' → logprob: -12.004863739013672

Token 872: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09580324590206146
    2. 'j' → logprob: -2.4708032608032227
    3. ' i' → logprob: -5.970803260803223
    4. '(i' → logprob: -7.095803260803223
    5. 'k' → logprob: -7.595803260803223
    6. 'True' → logprob: -7.595803260803223
    7. ' j' → logprob: -7.595803260803223
    8. ' (' → logprob: -7.970803260803223
    9. '...' → logprob: -7.970803260803223
    10. 'clusters' → logprob: -8.595803260803223

Token 873: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.025669697672128677
    2. '<len' → logprob: -4.650669574737549
    3. '[' → logprob: -5.025669574737549
    4. ' <' → logprob: -6.025669574737549
    5. '<x' → logprob: -6.900669574737549
    6. '<n' → logprob: -6.900669574737549
    7. '<i' → logprob: -7.025669574737549
    8. '<size' → logprob: -7.775669574737549
    9. ']<' → logprob: -7.775669574737549
    10. '][' → logprob: -8.150670051574707

Token 874: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.3228435516357422
    2. 'len' → logprob: -1.4478435516357422
    3. 'j' → logprob: -1.5728435516357422
    4. 'size' → logprob: -1.6978435516357422
    5. 'k' → logprob: -2.697843551635742
    6. 'i' → logprob: -3.447843551635742
    7. 'new' → logprob: -6.072843551635742
    8. ' size' → logprob: -6.697843551635742
    9. ' min' → logprob: -7.197843551635742
    10. ' len' → logprob: -7.197843551635742

Token 875: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5689964890480042
    2. 'i' → logprob: -0.9439964890480042
    3. '_j' → logprob: -3.4439964294433594
    4. 'j' → logprob: -4.443996429443359
    5. 'k' → logprob: -7.693996429443359
    6. 'if' → logprob: -7.818996429443359
    7. '_k' → logprob: -9.19399642944336
    8. '   ' → logprob: -10.44399642944336
    9. ' i' → logprob: -10.56899642944336
    10. '```' → logprob: -10.94399642944336

Token 876: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05436261370778084
    2. 'if' → logprob: -3.3043625354766846
    3. ' else' → logprob: -4.679362773895264
    4. '][' → logprob: -5.429362773895264
    5. ' if' → logprob: -6.304362773895264
    6. '[i' → logprob: -9.054362297058105
    7. 'elif' → logprob: -9.179362297058105
    8. 'and' → logprob: -9.554362297058105
    9. ']' → logprob: -9.804362297058105
    10. '   ' → logprob: -9.929362297058105

Token 877: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05577346682548523
    2. '(i' → logprob: -2.9307734966278076
    3. ' i' → logprob: -7.6807732582092285
    4. ' (' → logprob: -8.680773735046387
    5. 'j' → logprob: -9.555773735046387
    6. '   ' → logprob: -9.805773735046387
    7. '{i' → logprob: -10.555773735046387
    8. '1' → logprob: -10.930773735046387
    9. '(j' → logprob: -11.055773735046387
    10. '(' → logprob: -11.555773735046387

Token 878: '+' (ID: 10)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08282425999641418
    2. '+' → logprob: -2.832824230194092
    3. ' if' → logprob: -3.957824230194092
    4. '0' → logprob: -7.957824230194092
    5. '   ' → logprob: -8.08282470703125
    6. '-' → logprob: -8.20782470703125
    7. '1' → logprob: -8.58282470703125
    8. '(if' → logprob: -9.45782470703125
    9. '```' → logprob: -9.70782470703125
    10. ' +' → logprob: -9.83282470703125

Token 879: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022547018306795508
    2. ' ' → logprob: -8.750225067138672
    3. '0' → logprob: -10.500225067138672
    4. '(' → logprob: -10.750225067138672
    5. '2' → logprob: -11.375225067138672
    6. ' (' → logprob: -12.625225067138672
    7. '   ' → logprob: -13.250225067138672
    8. '(i' → logprob: -14.625225067138672
    9. 'i' → logprob: -15.125225067138672
    10. '
' → logprob: -15.375225067138672

Token 880: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06515523046255112
    2. ' if' → logprob: -2.815155267715454
    3. '][' → logprob: -5.815155029296875
    4. '   ' → logprob: -9.815155029296875
    5. '(if' → logprob: -10.190155029296875
    6. '[i' → logprob: -10.315155029296875
    7. ']' → logprob: -11.315155029296875
    8. '```' → logprob: -11.440155029296875
    9. '[' → logprob: -11.815155029296875
    10. '-' → logprob: -12.065155029296875

Token 881: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002144312486052513
    2. '(i' → logprob: -6.8771443367004395
    3. ' i' → logprob: -7.3771443367004395
    4. 'j' → logprob: -8.002143859863281
    5. '   ' → logprob: -9.377143859863281
    6. ' ' → logprob: -10.752143859863281
    7. ' (' → logprob: -11.252143859863281
    8. '(' → logprob: -11.752143859863281
    9. '(j' → logprob: -12.377143859863281
    10. '  ' → logprob: -12.627143859863281

Token 882: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03383587300777435
    2. '<i' → logprob: -3.5338358879089355
    3. '<m' → logprob: -7.1588358879089355
    4. '<int' → logprob: -7.4088358879089355
    5. '[i' → logprob: -7.6588358879089355
    6. '<len' → logprob: -7.6588358879089355
    7. '[' → logprob: -7.7838358879089355
    8. 'if' → logprob: -8.283835411071777
    9. '<num' → logprob: -8.533835411071777
    10. ' <' → logprob: -8.533835411071777

Token 883: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.8908587662735954e-05
    2. ' min' → logprob: -11.750019073486328
    3. '(min' → logprob: -12.000019073486328
    4. 'j' → logprob: -13.375019073486328
    5. '	min' → logprob: -13.500019073486328
    6. '   ' → logprob: -14.500019073486328
    7. '[min' → logprob: -14.625019073486328
    8. '=min' → logprob: -15.250019073486328
    9. 'max' → logprob: -15.375019073486328
    10. '-min' → logprob: -16.000019073486328

Token 884: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.023439034819602966
    2. 'j' → logprob: -3.8984389305114746
    3. '_i' → logprob: -5.898438930511475
    4. 'k' → logprob: -9.648439407348633
    5. 'i' → logprob: -10.148439407348633
    6. '_k' → logprob: -10.273439407348633
    7. '```' → logprob: -13.148439407348633
    8. '   ' → logprob: -13.523439407348633
    9. 'min' → logprob: -13.648439407348633
    10. ' j' → logprob: -14.023439407348633

Token 885: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07033730298280716
    2. ' else' → logprob: -2.6953372955322266
    3. '                       ' → logprob: -8.195337295532227
    4. '                   ' → logprob: -9.820337295532227
    5. '                               ' → logprob: -11.570337295532227
    6. '               ' → logprob: -11.820337295532227
    7. '```' → logprob: -11.820337295532227
    8. '                     ' → logprob: -12.070337295532227
    9. '                    ' → logprob: -12.195337295532227
    10. '+' → logprob: -12.320337295532227

Token 886: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09209336340427399
    2. 'j' → logprob: -2.7170934677124023
    3. ' i' → logprob: -3.9670934677124023
    4. '(i' → logprob: -6.592093467712402
    5. ' j' → logprob: -7.217093467712402
    6. ' ' → logprob: -8.717093467712402
    7. '   ' → logprob: -8.717093467712402
    8. ' (' → logprob: -8.842093467712402
    9. '(j' → logprob: -9.717093467712402
    10. 'k' → logprob: -9.717093467712402

Token 887: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012591605773195624
    2. 'if' → logprob: -7.5012593269348145
    3. ' if' → logprob: -8.251258850097656
    4. ' +' → logprob: -8.751258850097656
    5. ']' → logprob: -9.001258850097656
    6. '1' → logprob: -10.251258850097656
    7. '+j' → logprob: -10.751258850097656
    8. ']+' → logprob: -11.001258850097656
    9. '>' → logprob: -11.126258850097656
    10. 'else' → logprob: -11.626258850097656

Token 888: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519642114639282
    2. '2' → logprob: -1.5019642114639282
    3. ' ' → logprob: -11.126964569091797
    4. '0' → logprob: -11.876964569091797
    5. '+' → logprob: -12.001964569091797
    6. '
' → logprob: -12.501964569091797
    7. '   ' → logprob: -14.814464569091797
    8. '-' → logprob: -15.126964569091797
    9. '(' → logprob: -15.189464569091797
    10. '11' → logprob: -15.376964569091797

Token 889: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.13506639003753662
    2. ']' → logprob: -2.635066509246826
    3. ' if' → logprob: -3.385066509246826
    4. 'if' → logprob: -4.510066509246826
    5. '[j' → logprob: -6.135066509246826
    6. '+' → logprob: -6.385066509246826
    7. ' +' → logprob: -7.135066509246826
    8. '[i' → logprob: -7.260066509246826
    9. '                   ' → logprob: -7.510066509246826
    10. ' ][' → logprob: -7.635066509246826

Token 890: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002812391903717071
    2. ' j' → logprob: -8.25028133392334
    3. '   ' → logprob: -11.62528133392334
    4. 'k' → logprob: -12.62528133392334
    5. '                   ' → logprob: -12.87528133392334
    6. '           ' → logprob: -13.50028133392334
    7. '[j' → logprob: -14.00028133392334
    8. '               ' → logprob: -14.25028133392334
    9. '(j' → logprob: -14.50028133392334
    10. '       ' → logprob: -14.75028133392334

Token 891: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09620211273431778
    2. '+' → logprob: -2.5962021350860596
    3. 'if' → logprob: -4.3462018966674805
    4. ']' → logprob: -5.5962018966674805
    5. ' +' → logprob: -8.59620189666748
    6. '                   ' → logprob: -9.09620189666748
    7. '   ' → logprob: -10.22120189666748
    8. '               ' → logprob: -10.22120189666748
    9. '           ' → logprob: -10.84620189666748
    10. '       ' → logprob: -11.34620189666748

Token 892: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.016072260215878487
    2. ' j' → logprob: -4.1410722732543945
    3. 'i' → logprob: -11.391072273254395
    4. '   ' → logprob: -11.766072273254395
    5. '(j' → logprob: -11.766072273254395
    6. '[j' → logprob: -12.266072273254395
    7. '	j' → logprob: -13.141072273254395
    8. '           ' → logprob: -13.766072273254395
    9. '    ' → logprob: -14.266072273254395
    10. '                   ' → logprob: -14.516072273254395

Token 893: '<' (ID: 27)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8361139893531799
    2. '<' → logprob: -1.3361139297485352
    3. '+' → logprob: -1.4611139297485352
    4. 'if' → logprob: -3.461113929748535
    5. ' if' → logprob: -3.961113929748535
    6. ' <' → logprob: -4.711113929748535
    7. ' >' → logprob: -5.211113929748535
    8. '<i' → logprob: -5.836113929748535
    9. '<=' → logprob: -6.211113929748535
    10. '[i' → logprob: -7.586113929748535

Token 894: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00015288250870071352
    2. '(min' → logprob: -8.875152587890625
    3. ' min' → logprob: -12.000152587890625
    4. 'i' → logprob: -12.750152587890625
    5. 'j' → logprob: -13.500152587890625
    6. '[min' → logprob: -14.500152587890625
    7. '	min' → logprob: -14.625152587890625
    8. '(i' → logprob: -14.875152587890625
    9. '=min' → logprob: -15.000152587890625
    10. '   ' → logprob: -15.125152587890625

Token 895: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.040523428469896317
    2. '_j' → logprob: -3.4155235290527344
    3. 'i' → logprob: -5.040523529052734
    4. 'j' → logprob: -7.915523529052734
    5. '(i' → logprob: -12.415523529052734
    6. ' i' → logprob: -12.540523529052734
    7. '[i' → logprob: -13.290523529052734
    8. '	i' → logprob: -13.665523529052734
    9. '+i' → logprob: -13.790523529052734
    10. '+' → logprob: -13.790523529052734

Token 896: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3132731318473816
    2. ' else' → logprob: -1.3132731914520264
    3. '+' → logprob: -12.938273429870605
    4. ' or' → logprob: -13.188273429870605
    5. '                       ' → logprob: -13.438273429870605
    6. '	else' → logprob: -13.813273429870605
    7. '                   ' → logprob: -13.938273429870605
    8. '           ' → logprob: -14.813273429870605
    9. '_else' → logprob: -14.813273429870605
    10. '```' → logprob: -15.063273429870605

Token 897: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003612065047491342
    2. ' j' → logprob: -8.250361442565918
    3. '(j' → logprob: -9.750361442565918
    4. '   ' → logprob: -10.750361442565918
    5. '	j' → logprob: -12.875361442565918
    6. '           ' → logprob: -12.875361442565918
    7. '    ' → logprob: -13.000361442565918
    8. '     ' → logprob: -13.250361442565918
    9. '       ' → logprob: -13.375361442565918
    10. '  ' → logprob: -13.500361442565918

Token 898: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010628487507347018
    2. '-' → logprob: -9.625105857849121
    3. 'if' → logprob: -10.750105857849121
    4. ' if' → logprob: -11.250105857849121
    5. '>' → logprob: -13.500105857849121
    6. '+j' → logprob: -13.625105857849121
    7. ' +' → logprob: -14.500105857849121
    8. '[' → logprob: -14.875105857849121
    9. '[j' → logprob: -15.250105857849121
    10. '   ' → logprob: -15.250105857849121

Token 899: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001349518890492618
    2. '2' → logprob: -6.626349449157715
    3. '0' → logprob: -11.501349449157715
    4. '3' → logprob: -11.626349449157715
    5. ' ' → logprob: -13.251349449157715
    6. '+' → logprob: -13.376349449157715
    7. 'j' → logprob: -15.251349449157715
    8. 'i' → logprob: -15.876349449157715
    9. '   ' → logprob: -16.00135040283203
    10. '
' → logprob: -16.25135040283203

Token 900: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17532256245613098
    2. 'if' → logprob: -2.0503225326538086
    3. 'else' → logprob: -3.6753225326538086
    4. ' else' → logprob: -5.050322532653809
    5. ']' → logprob: -9.175322532653809
    6. '                       ' → logprob: -9.925322532653809
    7. '+' → logprob: -10.175322532653809
    8. '                   ' → logprob: -10.300322532653809
    9. '[j' → logprob: -10.550322532653809
    10. '               ' → logprob: -10.675322532653809

Token 901: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02661295048892498
    2. ' j' → logprob: -3.6516129970550537
    3. 'min' → logprob: -8.276613235473633
    4. ' min' → logprob: -10.401613235473633
    5. '   ' → logprob: -11.526613235473633
    6. '(j' → logprob: -12.526613235473633
    7. ' ' → logprob: -12.776613235473633
    8. '  ' → logprob: -13.339113235473633
    9. '	j' → logprob: -13.401613235473633
    10. '
' → logprob: -13.901613235473633

Token 902: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -8.061054359131958e-06
    2. '<m' → logprob: -12.875007629394531
    3. '<size' → logprob: -13.750007629394531
    4. '<len' → logprob: -13.750007629394531
    5. '+' → logprob: -14.375007629394531
    6. '<int' → logprob: -14.625007629394531
    7. '>' → logprob: -15.000007629394531
    8. ' <' → logprob: -15.000007629394531
    9. '[j' → logprob: -15.250007629394531
    10. '<
' → logprob: -15.625007629394531

Token 903: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.68022444692906e-05
    2. 'j' → logprob: -10.250046730041504
    3. ' min' → logprob: -11.875046730041504
    4. 'i' → logprob: -13.625046730041504
    5. '(min' → logprob: -13.625046730041504
    6. 'imin' → logprob: -14.625046730041504
    7. '=min' → logprob: -14.750046730041504
    8. 'max' → logprob: -15.375046730041504
    9. '	min' → logprob: -15.375046730041504
    10. '[min' → logprob: -15.875046730041504

Token 904: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.09043574333190918
    2. 'j' → logprob: -3.090435743331909
    3. '_i' → logprob: -3.215435743331909
    4. 'i' → logprob: -7.090435981750488
    5. '   ' → logprob: -12.715435981750488
    6. ' j' → logprob: -12.840435981750488
    7. 'in' → logprob: -13.840435981750488
    8. 'else' → logprob: -14.090435981750488
    9. '_k' → logprob: -14.215435981750488
    10. 'min' → logprob: -14.340435981750488

Token 905: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.14619459211826324
    2. ' else' → logprob: -2.0211946964263916
    3. '[j' → logprob: -6.1461944580078125
    4. '+' → logprob: -6.7711944580078125
    5. 'j' → logprob: -9.271194458007812
    6. '```' → logprob: -10.521194458007812
    7. '1' → logprob: -11.146194458007812
    8. '               ' → logprob: -11.271194458007812
    9. ']' → logprob: -11.521194458007812
    10. '2' → logprob: -11.771194458007812

Token 906: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007194612408056855
    2. ' j' → logprob: -7.3757195472717285
    3. '2' → logprob: -9.62571907043457
    4. '(j' → logprob: -10.75071907043457
    5. '   ' → logprob: -12.87571907043457
    6. ' ' → logprob: -14.00071907043457
    7. '+' → logprob: -14.00071907043457
    8. '
' → logprob: -14.87571907043457
    9. '	j' → logprob: -15.25071907043457
    10. '(' → logprob: -16.37571907043457

Token 907: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.961759259458631e-06
    2. '2' → logprob: -12.625004768371582
    3. ' +' → logprob: -14.500004768371582
    4. '+j' → logprob: -14.625004768371582
    5. '                               ' → logprob: -15.750004768371582
    6. '                       ' → logprob: -16.3750057220459
    7. ']+' → logprob: -16.3750057220459
    8. '                           ' → logprob: -16.8750057220459
    9. '```' → logprob: -16.8750057220459
    10. 'else' → logprob: -17.0000057220459

Token 908: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00022213248303160071
    2. '1' → logprob: -8.500222206115723
    3. '3' → logprob: -11.375222206115723
    4. ' ' → logprob: -12.250222206115723
    5. '+' → logprob: -14.125222206115723
    6. '0' → logprob: -14.250222206115723
    7. '```' → logprob: -14.625222206115723
    8. '   ' → logprob: -16.437721252441406
    9. '-' → logprob: -16.750221252441406
    10. '...' → logprob: -16.875221252441406

Token 909: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004859665408730507
    2. ']
' → logprob: -6.254859447479248
    3. ' ]' → logprob: -6.254859447479248
    4. '-' → logprob: -8.379859924316406
    5. '                   ' → logprob: -8.629859924316406
    6. '               ' → logprob: -9.004859924316406
    7. ' -' → logprob: -9.129859924316406
    8. ']+' → logprob: -9.754859924316406
    9. '           ' → logprob: -10.004859924316406
    10. '+' → logprob: -10.129859924316406

Token 910: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 911: ' row' (ID: 5225)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5791332125663757
    2. '                       ' → logprob: -2.0791332721710205
    3. '               ' → logprob: -2.2041332721710205
    4. '                           ' → logprob: -2.5791332721710205
    5. '           ' → logprob: -3.3291332721710205
    6. ')' → logprob: -3.7041332721710205
    7. ']' → logprob: -4.204133033752441
    8. '<|end|>' → logprob: -4.704133033752441
    9. ' ' → logprob: -5.079133033752441
    10. '\n' → logprob: -5.204133033752441

Token 912: '[j' (ID: 7895)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5410205721855164
    2. '[i' → logprob: -1.1660206317901611
    3. '[j' → logprob: -2.416020631790161
    4. '[row' → logprob: -5.541020393371582
    5. '=' → logprob: -5.666020393371582
    6. '<|end|>' → logprob: -6.291020393371582
    7. ']' → logprob: -6.541020393371582
    8. '][' → logprob: -6.666020393371582
    9. '[:]' → logprob: -6.916020393371582
    10. ')' → logprob: -8.041020393371582

Token 913: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5254088640213013
    2. ']=' → logprob: -1.4004088640213013
    3. '=' → logprob: -2.4004087448120117
    4. '[' → logprob: -3.5254087448120117
    5. '[i' → logprob: -4.275408744812012
    6. '<|end|>' → logprob: -4.400408744812012
    7. ' =' → logprob: -5.400408744812012
    8. '-' → logprob: -6.400408744812012
    9. '[j' → logprob: -6.775408744812012
    10. '[
' → logprob: -7.025408744812012

Token 914: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0011412883177399635
    2. ' row' → logprob: -7.25114107131958
    3. '=' → logprob: -8.001141548156738
    4. '=row' → logprob: -10.001141548156738
    5. '<|end|>' → logprob: -11.001141548156738
    6. '
' → logprob: -11.001141548156738
    7. '	row' → logprob: -12.501141548156738
    8. ' =' → logprob: -12.876141548156738
    9. '[row' → logprob: -13.376141548156738
    10. '           ' → logprob: -13.626141548156738

Token 915: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.22027704119682312
    2. '=' → logprob: -1.9702770709991455
    3. '[j' → logprob: -3.7202770709991455
    4. '[' → logprob: -3.8452770709991455
    5. ' =' → logprob: -4.970276832580566
    6. '[row' → logprob: -6.095276832580566
    7. ',' → logprob: -7.220276832580566
    8. '[
' → logprob: -7.345276832580566
    9. '<|end|>' → logprob: -7.345276832580566
    10. '=i' → logprob: -8.470276832580566

Token 916: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06938806176185608
    2. ']=' → logprob: -3.1943881511688232
    3. '<|end|>' → logprob: -4.069387912750244
    4. '[' → logprob: -5.194387912750244
    5. '=' → logprob: -6.569387912750244
    6. '],' → logprob: -7.319387912750244
    7. ' ]' → logprob: -8.069388389587402
    8. '[i' → logprob: -8.069388389587402
    9. ']+=' → logprob: -8.944388389587402
    10. '[j' → logprob: -9.319388389587402

Token 917: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03271658346056938
    2. ' =' → logprob: -4.032716751098633
    3. '<|end|>' → logprob: -4.532716751098633
    4. ',' → logprob: -5.907716751098633
    5. '[' → logprob: -8.032716751098633
    6. ']=' → logprob: -8.782716751098633
    7. '=
' → logprob: -9.032716751098633
    8. '=row' → logprob: -9.282716751098633
    9. ']' → logprob: -9.532716751098633
    10. ' ' → logprob: -10.282716751098633

Token 918: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.01215381734073162
    2. '0' → logprob: -5.137153625488281
    3. ' row' → logprob: -5.137153625488281
    4. 'd' → logprob: -8.262153625488281
    5. ' ' → logprob: -10.262153625488281
    6. '(row' → logprob: -11.262153625488281
    7. ' d' → logprob: -11.512153625488281
    8. 'new' → logprob: -12.387153625488281
    9. '10' → logprob: -12.637153625488281
    10. '	row' → logprob: -13.262153625488281

Token 919: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3996409177780151
    2. '[j' → logprob: -1.5246409177780151
    3. '<|end|>' → logprob: -1.6496409177780151
    4. '[' → logprob: -1.8996409177780151
    5. ']' → logprob: -2.2746410369873047
    6. ',' → logprob: -2.8996410369873047
    7. '[
' → logprob: -4.399641036987305
    8. '[row' → logprob: -5.649641036987305
    9. '],' → logprob: -5.899641036987305
    10. '<|end|>' → logprob: -6.274641036987305

Token 920: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6233415603637695
    2. '[j' → logprob: -1.4983415603637695
    3. '[' → logprob: -1.8733415603637695
    4. '<|end|>' → logprob: -3.1233415603637695
    5. '],' → logprob: -4.1233415603637695
    6. '[i' → logprob: -4.6233415603637695
    7. '][' → logprob: -5.1233415603637695
    8. '[
' → logprob: -5.1233415603637695
    9. ',' → logprob: -7.2483415603637695
    10. '<|end|>' → logprob: -7.4983415603637695

Token 921: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.08175454288721085
    2. '0' → logprob: -2.706754446029663
    3. ' row' → logprob: -4.581754684448242
    4. 'new' → logprob: -7.456754684448242
    5. ' ' → logprob: -7.831754684448242
    6. 'd' → logprob: -8.081754684448242
    7. ' d' → logprob: -9.581754684448242
    8. ' new' → logprob: -9.706754684448242
    9. '10' → logprob: -10.331754684448242
    10. '(row' → logprob: -11.894254684448242

Token 922: '[j' (ID: 7895)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7034397721290588
    2. '[j' → logprob: -1.078439712524414
    3. '[i' → logprob: -2.453439712524414
    4. 'i' → logprob: -2.578439712524414
    5. '[' → logprob: -5.953439712524414
    6. ' j' → logprob: -8.203439712524414
    7. ' i' → logprob: -9.953439712524414
    8. '```' → logprob: -10.203439712524414
    9. '0' → logprob: -11.078439712524414
    10. ']' → logprob: -11.078439712524414

Token 923: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06424254179000854
    2. '<|end|>' → logprob: -2.9392426013946533
    3. ']
' → logprob: -6.064242362976074
    4. '                   ' → logprob: -6.814242362976074
    5. '                       ' → logprob: -6.814242362976074
    6. '               ' → logprob: -7.314242362976074
    7. '       ' → logprob: -7.439242362976074
    8. '           ' → logprob: -7.564242362976074
    9. ')' → logprob: -7.564242362976074
    10. '                        
' → logprob: -7.814242362976074

Token 924: ' #' (ID: 1069)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.129782795906067
    2. '<|end|>' → logprob: -1.254782795906067
    3. ']' → logprob: -1.629782795906067
    4. '[' → logprob: -2.1297826766967773
    5. ')' → logprob: -4.754782676696777
    6. '[row' → logprob: -5.004782676696777
    7. '[]' → logprob: -5.004782676696777
    8. '=' → logprob: -5.129782676696777
    9. '       ' → logprob: -5.379782676696777
    10. ' ' → logprob: -5.504782676696777

Token 925: ' symmetry' (ID: 90882)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 926: ' swapped' (ID: 125210)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38876309990882874
    2. '<|end|>' → logprob: -1.7637630701065063
    3. '[i' → logprob: -2.763763189315796
    4. '[' → logprob: -3.638763189315796
    5. ')' → logprob: -4.138762950897217
    6. '       ' → logprob: -4.888762950897217
    7. '[
' → logprob: -5.513762950897217
    8. '           ' → logprob: -5.638762950897217
    9. '                           ' → logprob: -5.638762950897217
    10. '[row' → logprob: -5.763762950897217

Token 927: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 928: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.27278900146484375
    2. '<|end|>' → logprob: -2.2727890014648438
    3. '                           ' → logprob: -3.3977890014648438
    4. 'd' → logprob: -3.8977890014648438
    5. ' row' → logprob: -4.022789001464844
    6. 'j' → logprob: -4.522789001464844
    7. '[row' → logprob: -4.897789001464844
    8. ']' → logprob: -5.022789001464844
    9. '[j' → logprob: -5.272789001464844
    10. 'new' → logprob: -5.647789001464844

Token 929: ' i' (ID: 575)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41001370549201965
    2. '[i' → logprob: -1.6600136756896973
    3. '[' → logprob: -2.5350136756896973
    4. '[
' → logprob: -3.5350136756896973
    5. '<|end|>' → logprob: -4.035013675689697
    6. ')' → logprob: -6.285013675689697
    7. '[row' → logprob: -6.410013675689697
    8. '][' → logprob: -6.410013675689697
    9. 's' → logprob: -6.410013675689697
    10. '[j' → logprob: -6.535013675689697

Token 930: ' j' (ID: 441)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 931: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 932: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 933: ' row' (ID: 5225)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 934: '[size' (ID: 77532)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.6851343512535095
    2. '[' → logprob: -1.0601344108581543
    3. ' =' → logprob: -3.4351344108581543
    4. '[i' → logprob: -3.5601344108581543
    5. '.append' → logprob: -3.8101344108581543
    6. '=' → logprob: -3.9351344108581543
    7. '[row' → logprob: -4.060134410858154
    8. '[-' → logprob: -5.310134410858154
    9. '[size' → logprob: -5.435134410858154
    10. '[j' → logprob: -5.935134410858154

Token 935: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001455832039937377
    2. ' -' → logprob: -6.626455783843994
    3. '][' → logprob: -10.376456260681152
    4. '[' → logprob: -10.376456260681152
    5. ']' → logprob: -10.501456260681152
    6. '   ' → logprob: -11.751456260681152
    7. '[-' → logprob: -12.126456260681152
    8. ' ' → logprob: -12.376456260681152
    9. '[size' → logprob: -12.751456260681152
    10. '=' → logprob: -13.126456260681152

Token 936: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002222341252490878
    2. '2' → logprob: -6.127222537994385
    3. ' ' → logprob: -11.002222061157227
    4. '0' → logprob: -11.502222061157227
    5. '```' → logprob: -12.814722061157227
    6. '   ' → logprob: -12.939722061157227
    7. '
' → logprob: -13.752222061157227
    8. '...' → logprob: -15.127222061157227
    9. '``' → logprob: -15.127222061157227
    10. '-' → logprob: -15.502222061157227

Token 937: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6250289082527161
    2. ']' → logprob: -1.5000288486480713
    3. ' =' → logprob: -1.8750288486480713
    4. ']=' → logprob: -2.5000288486480713
    5. '[' → logprob: -5.75002908706665
    6. ',' → logprob: -7.00002908706665
    7. '][' → logprob: -8.125028610229492
    8. ' ]' → logprob: -8.125028610229492
    9. '.append' → logprob: -8.250028610229492
    10. '-' → logprob: -8.375028610229492

Token 938: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.334098756313324
    2. '.append' → logprob: -1.5840988159179688
    3. '[' → logprob: -3.0840988159179688
    4. '[size' → logprob: -4.584098815917969
    5. ' =' → logprob: -4.834098815917969
    6. '[-' → logprob: -5.584098815917969
    7. '[row' → logprob: -6.459098815917969
    8. 'append' → logprob: -6.459098815917969
    9. ']' → logprob: -6.459098815917969
    10. '.' → logprob: -6.834098815917969

Token 939: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.008624501526355743
    2. ' new' → logprob: -4.75862455368042
    3. '   ' → logprob: -12.008624076843262
    4. '           ' → logprob: -14.633624076843262
    5. '0' → logprob: -14.758624076843262
    6. '(new' → logprob: -14.758624076843262
    7. '       ' → logprob: -14.883624076843262
    8. '    ' → logprob: -15.133624076843262
    9. ' ' → logprob: -15.133624076843262
    10. '  ' → logprob: -15.258624076843262

Token 940: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.18032222986221313
    2. '_val' → logprob: -1.8053221702575684
    3. '_node' → logprob: -7.930322170257568
    4. '_cluster' → logprob: -8.930322647094727
    5. '_' → logprob: -10.305322647094727
    6. 'val' → logprob: -11.305322647094727
    7. ' _' → logprob: -12.055322647094727
    8. '_dist' → logprob: -12.180322647094727
    9. ' ' → logprob: -12.305322647094727
    10. '_value' → logprob: -12.430322647094727

Token 941: '[i' (ID: 1768)
  Prédit: '[size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[size' → logprob: -0.22466111183166504
    2. '[i' → logprob: -1.974661111831665
    3. '[-' → logprob: -3.349661111831665
    4. '[k' → logprob: -3.974661111831665
    5. '[len' → logprob: -5.599660873413086
    6. '[' → logprob: -5.849660873413086
    7. ' [' → logprob: -7.849660873413086
    8. 'size' → logprob: -8.474660873413086
    9. '[n' → logprob: -8.599660873413086
    10. '.append' → logprob: -8.849660873413086

Token 942: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01188114657998085
    2. '<|end|>' → logprob: -5.386881351470947
    3. ' ]' → logprob: -5.761881351470947
    4. '<|end|>' → logprob: -6.136881351470947
    5. '+' → logprob: -7.761881351470947
    6. ')' → logprob: -8.136880874633789
    7. ' -' → logprob: -8.761880874633789
    8. ']
' → logprob: -8.886880874633789
    9. ' +' → logprob: -9.011880874633789
    10. '
' → logprob: -9.136880874633789

Token 943: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 944: ' new' (ID: 620)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.931307315826416
    2. '<|end|>' → logprob: -1.181307315826416
    3. '               ' → logprob: -2.306307315826416
    4. '                   ' → logprob: -2.556307315826416
    5. '           ' → logprob: -2.681307315826416
    6. '   ' → logprob: -3.556307315826416
    7. ')' → logprob: -4.931307315826416
    8. '```' → logprob: -5.931307315826416
    9. ' for' → logprob: -6.181307315826416
    10. '<|end|>' → logprob: -6.681307315826416

Token 945: '_d' (ID: 1565)
  Prédit: '_clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clusters' → logprob: -0.06359785050153732
    2. '_d' → logprob: -3.3135979175567627
    3. '_row' → logprob: -4.313597679138184
    4. 'd' → logprob: -6.188597679138184
    5. 'clusters' → logprob: -6.438597679138184
    6. '[' → logprob: -6.563597679138184
    7. '_cluster' → logprob: -6.563597679138184
    8. '_rows' → logprob: -6.813597679138184
    9. 'row' → logprob: -7.063597679138184
    10. 'Clusters' → logprob: -7.063597679138184

Token 946: '.append' (ID: 3709)
  Prédit: '[size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[size' → logprob: -0.17722880840301514
    2. '.append' → logprob: -2.1772289276123047
    3. '[-' → logprob: -3.0522289276123047
    4. '=' → logprob: -7.677228927612305
    5. '[i' → logprob: -7.677228927612305
    6. '[len' → logprob: -8.802228927612305
    7. '.' → logprob: -9.302228927612305
    8. '=size' → logprob: -9.302228927612305
    9. '=[' → logprob: -9.427228927612305
    10. '_append' → logprob: -9.677228927612305

Token 947: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.020697087049484253
    2. '[' → logprob: -4.520697116851807
    3. '[row' → logprob: -5.395697116851807
    4. 'new' → logprob: -5.770697116851807
    5. ' row' → logprob: -7.020697116851807
    6. ' [' → logprob: -8.020696640014648
    7. '[new' → logprob: -8.020696640014648
    8. 'list' → logprob: -8.395696640014648
    9. '(row' → logprob: -9.520696640014648
    10. ' new' → logprob: -10.270696640014648

Token 948: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47400200366973877
    2. '<|end|>' → logprob: -1.0990020036697388
    3. '<|end|>' → logprob: -4.224001884460449
    4. '               ' → logprob: -4.349001884460449
    5. ')
' → logprob: -5.099001884460449
    6. '
' → logprob: -5.099001884460449
    7. '       ' → logprob: -6.724001884460449
    8. '                   ' → logprob: -7.349001884460449
    9. ']' → logprob: -7.474001884460449
    10. '           ' → logprob: -7.724001884460449

Token 949: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009135529398918152
    2. '                   ' → logprob: -5.509135723114014
    3. '           ' → logprob: -6.259135723114014
    4. '       ' → logprob: -6.759135723114014
    5. '<|end|>' → logprob: -6.884135723114014
    6. '```' → logprob: -7.884135723114014
    7. ' for' → logprob: -8.884135246276855
    8. ')' → logprob: -9.134135246276855
    9. '                ' → logprob: -10.009135246276855
    10. '   ' → logprob: -10.259135246276855

Token 950: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33888429403305054
    2. ' new' → logprob: -1.4638843536376953
    3. 'new' → logprob: -2.9638843536376953
    4. '```' → logprob: -6.338884353637695
    5. '           ' → logprob: -7.088884353637695
    6. ' for' → logprob: -7.338884353637695
    7. '[new' → logprob: -7.713884353637695
    8. '       ' → logprob: -7.838884353637695
    9. '[' → logprob: -8.963884353637695
    10. '+' → logprob: -9.963884353637695

Token 951: ' last' (ID: 2174)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5336527228355408
    2. ' new' → logprob: -1.5336527824401855
    3. 'for' → logprob: -2.4086527824401855
    4. '           ' → logprob: -2.9086527824401855
    5. ' for' → logprob: -3.5336527824401855
    6. 'row' → logprob: -4.7836527824401855
    7. '               ' → logprob: -5.5336527824401855
    8. 'last' → logprob: -5.9086527824401855
    9. ' last' → logprob: -6.1586527824401855
    10. '       ' → logprob: -6.4086527824401855

Token 952: ' row' (ID: 5225)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.767479419708252
    2. '_row' → logprob: -1.142479419708252
    3. ' row' → logprob: -2.142479419708252
    4. 'row' → logprob: -2.892479419708252
    5. 'd' → logprob: -3.642479419708252
    6. 'new' → logprob: -5.017479419708252
    7. '   ' → logprob: -5.892479419708252
    8. '.append' → logprob: -6.017479419708252
    9. ' new' → logprob: -6.642479419708252
    10. ' =' → logprob: -7.267479419708252

Token 953: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03811080381274223
    2. '=' → logprob: -3.4131107330322266
    3. '=[' → logprob: -6.163110733032227
    4. '[' → logprob: -6.788110733032227
    5. '.append' → logprob: -6.913110733032227
    6. ' =[' → logprob: -9.163110733032227
    7. '[size' → logprob: -9.913110733032227
    8. '           ' → logprob: -10.663110733032227
    9. 'new' → logprob: -11.663110733032227
    10. '               ' → logprob: -11.663110733032227

Token 954: '               ' (ID: 506)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.38510867953300476
    2. 'new' → logprob: -1.8851087093353271
    3. 'row' → logprob: -2.885108709335327
    4. ' row' → logprob: -3.260108709335327
    5. '           ' → logprob: -3.885108709335327
    6. '[new' → logprob: -3.885108709335327
    7. '   ' → logprob: -4.635108470916748
    8. '               ' → logprob: -5.010108470916748
    9. '[' → logprob: -5.010108470916748
    10. '       ' → logprob: -5.260108470916748

Token 955: ' last' (ID: 2174)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.8175078630447388
    2. 'new' → logprob: -1.1925078630447388
    3. ' new' → logprob: -1.9425078630447388
    4. ' row' → logprob: -2.942507743835449
    5. 'last' (adapté à ' last') → logprob: -3.942507743835449
    6. '           ' → logprob: -4.317507743835449
    7. ' last' → logprob: -4.817507743835449
    8. '   ' → logprob: -4.942507743835449
    9. '[new' → logprob: -5.567507743835449
    10. '               ' → logprob: -6.067507743835449

Token 956: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.48783382773399353
    2. ' =' → logprob: -1.112833857536316
    3. 'row' → logprob: -3.6128337383270264
    4. '=' → logprob: -3.7378337383270264
    5. '_d' → logprob: -6.1128339767456055
    6. '.append' → logprob: -6.8628339767456055
    7. '=[' → logprob: -7.3628339767456055
    8. 'd' → logprob: -7.7378339767456055
    9. '   ' → logprob: -7.8628339767456055
    10. ' row' → logprob: -8.112833976745605

Token 957: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759488344192505
    2. ' =' → logprob: -0.8259488344192505
    3. '=[' → logprob: -12.075948715209961
    4. ' =[' → logprob: -13.200948715209961
    5. '[' → logprob: -14.200948715209961
    6. ' ' → logprob: -14.950948715209961
    7. '=[]' → logprob: -15.575948715209961
    8. '   ' → logprob: -15.700948715209961
    9. '.append' → logprob: -15.950948715209961
    10. ' [' → logprob: -16.57594871520996

Token 958: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.27072402834892273
    2. '[' → logprob: -1.8957240581512451
    3. '[new' → logprob: -2.520724058151245
    4. ' new' → logprob: -5.645723819732666
    5. ' [' → logprob: -5.895723819732666
    6. '   ' → logprob: -9.020724296569824
    7. '[*' → logprob: -10.145724296569824
    8. '           ' → logprob: -11.145724296569824
    9. '       ' → logprob: -11.520724296569824
    10. '[len' → logprob: -11.770724296569824

Token 959: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0006035494152456522
    2. 'row' → logprob: -7.625603675842285
    3. 'd' → logprob: -9.625603675842285
    4. '_d' → logprob: -10.250603675842285
    5. '_cluster' → logprob: -11.750603675842285
    6. '[' → logprob: -12.875603675842285
    7. 'cluster' → logprob: -13.500603675842285
    8. '_rows' → logprob: -14.500603675842285
    9. '[row' → logprob: -14.625603675842285
    10. 'Row' → logprob: -14.875603675842285

Token 960: '[:]' (ID: 194237)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3038178086280823
    2. '+[' → logprob: -1.6788177490234375
    3. '+' → logprob: -3.1788177490234375
    4. '[:]' → logprob: -4.1788177490234375
    5. '[' → logprob: -5.6788177490234375
    6. '[::-' → logprob: -5.9288177490234375
    7. '[last' → logprob: -5.9288177490234375
    8. '[size' → logprob: -6.0538177490234375
    9. '+
' → logprob: -6.0538177490234375
    10. ' +
' → logprob: -7.0538177490234375

Token 961: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6297685503959656
    2. '.append' → logprob: -0.8797685503959656
    3. 'last' → logprob: -4.004768371582031
    4. '+' → logprob: -4.379768371582031
    5. '[last' → logprob: -4.629768371582031
    6. '+[' → logprob: -5.004768371582031
    7. '               ' → logprob: -6.379768371582031
    8. ' last' → logprob: -6.879768371582031
    9. '[' → logprob: -7.254768371582031
    10. '
' → logprob: -7.379768371582031

Token 962: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -14.875000953674316
    3. '([' → logprob: -16.375
    4. '0' → logprob: -17.375
    5. '   ' → logprob: -18.0
    6. '{' → logprob: -18.625
    7. '\[' → logprob: -18.625
    8. '[
' → logprob: -19.25
    9. ' ' → logprob: -20.25
    10. '[new' → logprob: -20.625

Token 963: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.250004768371582
    4. '   ' → logprob: -15.625004768371582
    5. '           ' → logprob: -17.2500057220459
    6. '               ' → logprob: -17.8750057220459
    7. '       ' → logprob: -18.3750057220459
    8. '
' → logprob: -18.7500057220459
    9. '                   ' → logprob: -18.7500057220459
    10. '  ' → logprob: -19.6250057220459

Token 964: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.0546874962747097
    2. ']' → logprob: -3.0546875
    3. '               ' → logprob: -5.1796875
    4. ']
' → logprob: -7.8046875
    5. '])
' → logprob: -11.4296875
    6. ')
' → logprob: -11.4296875
    7. '           ' → logprob: -11.8046875
    8. ' ]
' → logprob: -12.6796875
    9. '       ' → logprob: -12.9296875
    10. '])' → logprob: -13.3046875

Token 965: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17227837443351746
    2. 'new' → logprob: -2.17227840423584
    3. '
' → logprob: -3.42227840423584
    4. ' new' → logprob: -4.67227840423584
    5. '           ' → logprob: -7.54727840423584
    6. '[new' → logprob: -7.67227840423584
    7. '```' → logprob: -7.79727840423584
    8. '	new' → logprob: -8.79727840423584
    9. '   ' → logprob: -8.92227840423584
    10. '\n' → logprob: -9.17227840423584

Token 966: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5934646129608154
    2. 'new' (adapté à ' new') → logprob: -0.8434646129608154
    3. ' new' → logprob: -4.0934648513793945
    4. '
' → logprob: -7.5934648513793945
    5. '           ' → logprob: -9.218464851379395
    6. '       ' → logprob: -10.593464851379395
    7. '[new' → logprob: -10.843464851379395
    8. '   ' → logprob: -11.218464851379395
    9. '                   ' → logprob: -11.593464851379395
    10. '
' → logprob: -12.343464851379395

Token 967: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0015067668864503503
    2. 'd' → logprob: -6.501506805419922
    3. 'append' → logprob: -13.501506805419922
    4. 'new' → logprob: -14.376506805419922
    5. '_' → logprob: -14.501506805419922
    6. 'clusters' → logprob: -14.876506805419922
    7. '\' → logprob: -15.251506805419922
    8. '#' → logprob: -15.501506805419922
    9. '.append' → logprob: -15.876506805419922
    10. '	d' → logprob: -16.126506805419922

Token 968: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004080062732100487
    2. '.' → logprob: -5.504080295562744
    3. ' .' → logprob: -14.254079818725586
    4. '.app' → logprob: -15.004079818725586
    5. '.extend' → logprob: -15.629079818725586
    6. '.push' → logprob: -16.129079818725586
    7. '.insert' → logprob: -16.754079818725586
    8. '​.' → logprob: -16.754079818725586
    9. '.add' → logprob: -16.879079818725586
    10. 'append' → logprob: -17.254079818725586

Token 969: '(last' (ID: 39599)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.029754308983683586
    2. '(last' → logprob: -3.529754400253296
    3. ' last' → logprob: -12.529754638671875
    4. '[last' → logprob: -15.654754638671875
    5. '(' → logprob: -17.904754638671875
    6. '   ' → logprob: -19.029754638671875
    7. '	last' → logprob: -19.404754638671875
    8. '           ' → logprob: -20.404754638671875
    9. ',last' → logprob: -21.154754638671875
    10. 'list' → logprob: -21.154754638671875

Token 970: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -5.512236498361744e-07
    2. 'row' → logprob: -14.625000953674316
    3. '_r' → logprob: -17.375
    4. '[row' → logprob: -17.625
    5. '_ro' → logprob: -17.75
    6. '_ROW' → logprob: -18.0
    7. '_rows' → logprob: -18.375
    8. '[' → logprob: -18.625
    9. '$row' → logprob: -18.75
    10. '_' → logprob: -18.875

Token 971: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047848984599113464
    2. '<|end|>' → logprob: -3.17284893989563
    3. '       ' → logprob: -6.297849178314209
    4. ']' → logprob: -6.797849178314209
    5. '
' → logprob: -7.547849178314209
    6. ')
' → logprob: -7.797849178314209
    7. '           ' → logprob: -7.922849178314209
    8. '               ' → logprob: -8.42284870147705
    9. '<|end|>' → logprob: -8.67284870147705
    10. '   ' → logprob: -10.04784870147705

Token 972: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19250229001045227
    2. '<|end|>' → logprob: -2.44250226020813
    3. '       ' → logprob: -3.06750226020813
    4. '               ' → logprob: -3.31750226020813
    5. '```' → logprob: -6.067502498626709
    6. '   ' → logprob: -7.067502498626709
    7. ')' → logprob: -7.442502498626709
    8. '            
' → logprob: -8.06750202178955
    9. '<|end|>' → logprob: -8.31750202178955
    10. '	       ' → logprob: -9.06750202178955

Token 973: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7736504673957825
    2. '               ' → logprob: -1.1486504077911377
    3. 'clusters' → logprob: -1.5236504077911377
    4. 'self' → logprob: -6.023650646209717
    5. ' clusters' → logprob: -7.023650646209717
    6. 'd' → logprob: -9.398650169372559
    7. '       ' → logprob: -9.523650169372559
    8. '#' (adapté à ' #') → logprob: -9.648650169372559
    9. '   ' → logprob: -9.898650169372559
    10. '
' → logprob: -10.648650169372559

Token 974: ' fix' (ID: 9295)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusters' → logprob: -0.008585968054831028
    2. ' clusters' → logprob: -5.1335859298706055
    3. '           ' → logprob: -6.3835859298706055
    4. 'd' → logprob: -7.6335859298706055
    5. '               ' → logprob: -7.8835859298706055
    6. '#' → logprob: -10.383585929870605
    7. 'cl' → logprob: -10.508585929870605
    8. '   ' → logprob: -11.258585929870605
    9. '       ' → logprob: -11.508585929870605
    10. ' d' → logprob: -11.883585929870605

Token 975: ' symmetry' (ID: 90882)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4277325868606567
    2. '               ' → logprob: -1.5527325868606567
    3. 'clusters' → logprob: -2.552732467651367
    4. ' clusters' → logprob: -2.677732467651367
    5. ' for' → logprob: -2.802732467651367
    6. 'd' → logprob: -2.802732467651367
    7. ' new' → logprob: -2.927732467651367
    8. 'new' → logprob: -2.927732467651367
    9. '           ' → logprob: -3.177732467651367
    10. ' the' → logprob: -3.677732467651367

Token 976: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09171146154403687
    2. ' for' → logprob: -2.7167115211486816
    3. 'for' → logprob: -3.8417115211486816
    4. '           ' → logprob: -10.091711044311523
    5. '       ' → logprob: -10.466711044311523
    6. '                   ' → logprob: -12.466711044311523
    7. '   ' → logprob: -12.466711044311523
    8. ',' → logprob: -12.966711044311523
    9. 'new' → logprob: -14.466711044311523
    10. '              ' → logprob: -14.716711044311523

Token 977: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030162576586008072
    2. ' for' → logprob: -3.7801625728607178
    3. 'for' → logprob: -5.030162811279297
    4. '       ' → logprob: -8.030162811279297
    5. '           ' → logprob: -11.280162811279297
    6. '   ' → logprob: -11.655162811279297
    7. '```' → logprob: -12.405162811279297
    8. '                   ' → logprob: -13.280162811279297
    9. '<|end|>' → logprob: -14.030162811279297
    10. '	for' → logprob: -14.905162811279297

Token 978: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07695020735263824
    2. '               ' → logprob: -3.0769503116607666
    3. ' for' → logprob: -3.5769503116607666
    4. '   ' → logprob: -13.326950073242188
    5. '                   ' → logprob: -13.701950073242188
    6. '```' → logprob: -14.826950073242188
    7. '           ' → logprob: -15.826950073242188
    8. '	for' → logprob: -16.076950073242188
    9. '       ' → logprob: -16.326950073242188
    10. ' ' → logprob: -16.951950073242188

Token 979: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.041948091238737106
    2. ' i' → logprob: -3.416948080062866
    3. 'x' → logprob: -5.041948318481445
    4. 'k' → logprob: -7.541948318481445
    5. ' x' → logprob: -7.541948318481445
    6. 'j' → logprob: -7.666948318481445
    7. 'r' → logprob: -9.291948318481445
    8. 'a' → logprob: -10.166948318481445
    9. ' j' → logprob: -10.166948318481445
    10. 'u' → logprob: -10.791948318481445

Token 980: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.201426699757576
    2. 'in' → logprob: -1.7014267444610596
    3. ',' → logprob: -12.07642650604248
    4. 'range' → logprob: -12.45142650604248
    5. ' ' → logprob: -13.95142650604248
    6. '  ' → logprob: -14.70142650604248
    7. '```' → logprob: -14.70142650604248
    8. 'n' → logprob: -15.20142650604248
    9. '   ' → logprob: -15.20142650604248
    10. ' range' → logprob: -15.57642650604248

Token 981: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002475777640938759
    2. ' range' → logprob: -6.002475738525391
    3. ' ' → logprob: -16.62747573852539
    4. '  ' → logprob: -18.62747573852539
    5. '(range' → logprob: -18.62747573852539
    6. '   ' → logprob: -19.25247573852539
    7. 'in' → logprob: -19.87747573852539
    8. '	range' → logprob: -20.62747573852539
    9. '
' → logprob: -21.12747573852539
    10. '```' → logprob: -21.25247573852539

Token 982: '(size' (ID: 15192)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.004160433541983366
    2. 'len' → logprob: -5.504160404205322
    3. '(size' → logprob: -9.50416088104248
    4. ' size' → logprob: -12.25416088104248
    5. '   ' → logprob: -14.00416088104248
    6. '(len' → logprob: -14.12916088104248
    7. '[size' → logprob: -14.12916088104248
    8. '           ' → logprob: -16.129159927368164
    9. '<size' → logprob: -16.504159927368164
    10. '=size' → logprob: -16.754159927368164

Token 983: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6590253114700317
    2. '):
' → logprob: -0.7840253114700317
    3. '):' → logprob: -3.784025192260742
    4. ' -' → logprob: -6.034025192260742
    5. '               ' → logprob: -7.909025192260742
    6. '           ' → logprob: -8.409025192260742
    7. '                   ' → logprob: -8.659025192260742
    8. '   ' → logprob: -9.534025192260742
    9. '       ' → logprob: -9.909025192260742
    10. '
' → logprob: -11.159025192260742

Token 984: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6512106657028198
    2. ' for' → logprob: -1.4012106657028198
    3. '   ' → logprob: -1.7762106657028198
    4. '       ' → logprob: -3.7762107849121094
    5. '```' → logprob: -4.026210784912109
    6. 'for' → logprob: -4.151210784912109
    7. '           ' → logprob: -5.276210784912109
    8. '	for' → logprob: -7.651210784912109
    9. '                       ' → logprob: -8.15121078491211
    10. '               ' → logprob: -8.27621078491211

Token 985: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.024480488151311874
    2. ' for' → logprob: -3.7744805812835693
    3. '   ' → logprob: -7.02448034286499
    4. '                   ' → logprob: -8.149480819702148
    5. '	for' → logprob: -10.149480819702148
    6. '```' → logprob: -11.649480819702148
    7. '       ' → logprob: -12.649480819702148
    8. 'new' → logprob: -14.024480819702148
    9. '           ' → logprob: -14.149480819702148
    10. '               ' → logprob: -14.149480819702148

Token 986: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23142240941524506
    2. 'j' → logprob: -1.6064224243164062
    3. '0' → logprob: -6.106422424316406
    4. ' i' → logprob: -6.106422424316406
    5. ' j' → logprob: -7.356422424316406
    6. ' in' → logprob: -7.856422424316406
    7. '   ' → logprob: -8.481422424316406
    8. 'range' → logprob: -8.481422424316406
    9. ' range' → logprob: -9.981422424316406
    10. 'in' → logprob: -10.856422424316406

Token 987: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02643231861293316
    2. 'in' → logprob: -3.6514322757720947
    3. '	in' → logprob: -9.901432037353516
    4. ' i' → logprob: -10.026432037353516
    5. 'i' → logprob: -11.026432037353516
    6. '(i' → logprob: -11.776432037353516
    7. '[i' → logprob: -12.776432037353516
    8. ' ' → logprob: -12.901432037353516
    9. '<i' → logprob: -13.651432037353516
    10. '<|end|>' → logprob: -13.776432037353516

Token 988: ' range' (ID: 3352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02427351474761963
    2. '0' → logprob: -3.89927339553833
    3. 'range' → logprob: -5.64927339553833
    4. ' i' → logprob: -8.899273872375488
    5. '(i' → logprob: -10.149273872375488
    6. ' range' → logprob: -11.024273872375488
    7. '   ' → logprob: -12.149273872375488
    8. ' ' → logprob: -13.024273872375488
    9. '(' → logprob: -13.649273872375488
    10. '[i' → logprob: -14.024273872375488

Token 989: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0014726031804457307
    2. 'i' → logprob: -6.626472473144531
    3. 'range' → logprob: -9.251472473144531
    4. '(' → logprob: -10.001472473144531
    5. ' i' → logprob: -12.876472473144531
    6. '(range' → logprob: -14.251472473144531
    7. ' range' → logprob: -14.376472473144531
    8. '(size' → logprob: -14.626472473144531
    9. '[i' → logprob: -14.876472473144531
    10. 'size' → logprob: -15.376472473144531

Token 990: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002494087442755699
    2. ' +' → logprob: -6.127493858337402
    3. '):
' → logprob: -8.752493858337402
    4. '+i' → logprob: -9.127493858337402
    5. '+
' → logprob: -11.752493858337402
    6. ',' → logprob: -11.752493858337402
    7. ',i' → logprob: -12.252493858337402
    8. '):' → logprob: -12.502493858337402
    9. '1' → logprob: -12.877493858337402
    10. '   ' → logprob: -13.252493858337402

Token 991: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.062102582305669785
    2. 'size' → logprob: -2.8121025562286377
    3. '1' → logprob: -9.687102317810059
    4. ' size' → logprob: -10.062102317810059
    5. ' i' → logprob: -10.687102317810059
    6. '0' → logprob: -12.937102317810059
    7. '(i' → logprob: -13.812102317810059
    8. '   ' → logprob: -14.187102317810059
    9. '(size' → logprob: -14.437102317810059
    10. '<size' → logprob: -14.437102317810059

Token 992: ',size' (ID: 86319)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.160442054271698
    2. ',size' → logprob: -1.9104421138763428
    3. ' ,' → logprob: -8.910442352294922
    4. 'size' → logprob: -10.285442352294922
    5. ',
' → logprob: -10.910442352294922
    6. '(size' → logprob: -11.660442352294922
    7. '):
' → logprob: -11.785442352294922
    8. '=size' → logprob: -13.160442352294922
    9. '                   ' → logprob: -13.410442352294922
    10. ',len' → logprob: -13.535442352294922

Token 993: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0007867562817409635
    2. '):' → logprob: -7.250786781311035
    3. '                   ' → logprob: -9.875786781311035
    4. '               ' → logprob: -11.250786781311035
    5. ':
' → logprob: -12.750786781311035
    6. '           ' → logprob: -12.875786781311035
    7. '):
' → logprob: -13.500786781311035
    8. '                       ' → logprob: -14.000786781311035
    9. ':' → logprob: -14.125786781311035
    10. '):

' → logprob: -14.250786781311035

Token 994: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007817533914931118
    2. ' new' → logprob: -7.750781536102295
    3. 'new' → logprob: -8.500782012939453
    4. '                   ' → logprob: -9.375782012939453
    5. '```' → logprob: -10.000782012939453
    6. '                           ' → logprob: -11.750782012939453
    7. '[new' → logprob: -12.375782012939453
    8. '               ' → logprob: -13.500782012939453
    9. '           ' → logprob: -14.125782012939453
    10. '	                   ' → logprob: -14.375782012939453

Token 995: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.1293710470199585
    2. ' new' → logprob: -2.129371166229248
    3. '                           ' → logprob: -6.504371166229248
    4. '                       ' → logprob: -7.004371166229248
    5. '                   ' → logprob: -11.50437068939209
    6. '```' → logprob: -11.75437068939209
    7. '                               ' → logprob: -12.00437068939209
    8. '   ' → logprob: -12.12937068939209
    9. '	new' → logprob: -13.37937068939209
    10. '``' → logprob: -14.00437068939209

Token 996: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -4.842555426876061e-06
    2. 'd' → logprob: -12.250004768371582
    3. '[' → logprob: -19.3750057220459
    4. '_' → logprob: -19.8750057220459
    5. 'new' → logprob: -20.6250057220459
    6. '[d' → logprob: -20.7500057220459
    7. '	d' → logprob: -21.2500057220459
    8. '
' → logprob: -21.6250057220459
    9. '_c' → logprob: -22.0000057220459
    10. '_
' → logprob: -22.0000057220459

Token 997: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.001943395473062992
    2. '[i' → logprob: -6.251943588256836
    3. '[' → logprob: -11.876943588256836
    4. '[new' → logprob: -13.001943588256836
    5. '                   ' → logprob: -13.126943588256836
    6. '][' → logprob: -13.501943588256836
    7. '                       ' → logprob: -13.626943588256836
    8. '[js' → logprob: -15.251943588256836
    9. '```' → logprob: -16.251943588256836
    10. ' [' → logprob: -16.376943588256836

Token 998: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07015705853700638
    2. '[i' → logprob: -2.695157051086426
    3. '[' → logprob: -8.945157051086426
    4. '[
' → logprob: -10.820157051086426
    5. '[j' → logprob: -10.820157051086426
    6. ']' → logprob: -11.070157051086426
    7. '[I' → logprob: -11.070157051086426
    8. 'i' → logprob: -12.195157051086426
    9. ''][' → logprob: -12.945157051086426
    10. '"][' → logprob: -13.195157051086426

Token 999: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6240566083070007e-06
    2. ' i' → logprob: -13.375001907348633
    3. '	i' → logprob: -19.125001907348633
    4. ']' → logprob: -20.125001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '[i' → logprob: -20.875001907348633
    7. '_i' → logprob: -20.875001907348633
    8. ')i' → logprob: -21.000001907348633
    9. '=i' → logprob: -21.125001907348633
    10. ',i' → logprob: -21.500001907348633

Token 1000: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017945408821105957
    2. ']' → logprob: -4.892945289611816
    3. ']=' → logprob: -4.892945289611816
    4. ' =' → logprob: -5.892945289611816
    5. '=
' → logprob: -11.017945289611816
    6. ' ]' → logprob: -12.267945289611816
    7. ',' → logprob: -14.267945289611816
    8. ')' → logprob: -14.392945289611816
    9. ')=' → logprob: -14.392945289611816
    10. '=new' → logprob: -14.392945289611816

Token 1001: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804229199886322
    2. ' =' → logprob: -3.2880423069000244
    3. '=new' → logprob: -14.538042068481445
    4. '=
' → logprob: -14.788042068481445
    5. ',' → logprob: -17.663042068481445
    6. '=

' → logprob: -18.038042068481445
    7. ' =
' → logprob: -18.413042068481445
    8. ' new' → logprob: -18.913042068481445
    9. 'new' → logprob: -19.163042068481445
    10. '=int' → logprob: -19.288042068481445

Token 1002: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.003178071230649948
    2. ' new' → logprob: -5.753178119659424
    3. '           ' → logprob: -15.628177642822266
    4. '                   ' → logprob: -16.753177642822266
    5. '               ' → logprob: -16.878177642822266
    6. '       ' → logprob: -17.878177642822266
    7. '	new' → logprob: -18.128177642822266
    8. '   ' → logprob: -18.378177642822266
    9. '                       ' → logprob: -18.628177642822266
    10. '[new' → logprob: -19.003177642822266

Token 1003: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.0219828002154827e-05
    2. '_i' → logprob: -11.750020027160645
    3. 'd' → logprob: -12.000020027160645
    4. '[i' → logprob: -12.250020027160645
    5. 'i' → logprob: -14.750020027160645
    6. '
' → logprob: -15.125020027160645
    7. 'token' → logprob: -16.50002098083496
    8. '[' → logprob: -16.62502098083496
    9. '_j' → logprob: -16.62502098083496
    10. '   ' → logprob: -17.06252098083496

Token 1004: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. 'i' → logprob: -13.12500286102295
    3. '[j' → logprob: -14.12500286102295
    4. '][' → logprob: -14.62500286102295
    5. '```' → logprob: -17.375003814697266
    6. '[I' → logprob: -17.625003814697266
    7. '[
' → logprob: -18.000003814697266
    8. 'new' → logprob: -18.500003814697266
    9. ']' → logprob: -18.875003814697266
    10. '
' → logprob: -19.000003814697266

Token 1005: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00024287392443511635
    2. '[j' → logprob: -8.375243186950684
    3. ']' → logprob: -11.750243186950684
    4. 'new' → logprob: -13.750243186950684
    5. '   ' → logprob: -14.000243186950684
    6. '       ' → logprob: -14.250243186950684
    7. ' ][' → logprob: -14.375243186950684
    8. ']
' → logprob: -15.125243186950684
    9. '[new' → logprob: -15.875243186950684
    10. ']][' → logprob: -16.000242233276367

Token 1006: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.128163257315464e-07
    2. '[j' → logprob: -15.875
    3. ' j' → logprob: -16.375
    4. '	j' → logprob: -17.25
    5. '$j' → logprob: -17.625
    6. '```' → logprob: -17.75
    7. '
' → logprob: -18.0
    8. '_j' → logprob: -18.375
    9. 'new' → logprob: -18.75
    10. ':j' → logprob: -19.75

Token 1007: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00872412882745266
    2. '<|end|>' → logprob: -4.758724212646484
    3. ']
' → logprob: -10.008724212646484
    4. '                       ' → logprob: -10.883724212646484
    5. '<|end|>' → logprob: -11.508724212646484
    6. ')' → logprob: -11.508724212646484
    7. ' ]' → logprob: -12.383724212646484
    8. ']()' → logprob: -12.508724212646484
    9. '               ' → logprob: -12.633724212646484
    10. ']+' → logprob: -13.008724212646484

Token 1008: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0634223148226738
    2. '           ' → logprob: -2.938422203063965
    3. '<|end|>' → logprob: -5.438422203063965
    4. '       ' → logprob: -5.938422203063965
    5. '                   ' → logprob: -8.188422203063965
    6. '                
' → logprob: -8.688422203063965
    7. '                           ' → logprob: -8.938422203063965
    8. '                       ' → logprob: -9.188422203063965
    9. '            ' → logprob: -9.188422203063965
    10. '                ' → logprob: -9.563422203063965

Token 1009: ' clusters' (ID: 51310)
  Prédit: 'clusters'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusters' (adapté à ' clusters') → logprob: -0.5919545292854309
    2. '               ' → logprob: -0.8419545292854309
    3. '           ' → logprob: -4.341954708099365
    4. ' clusters' → logprob: -5.966954708099365
    5. '```' → logprob: -9.216954231262207
    6. '                
' → logprob: -9.841954231262207
    7. 'return' → logprob: -9.966954231262207
    8. '   ' → logprob: -10.216954231262207
    9. 'cl' → logprob: -10.966954231262207
    10. '
' → logprob: -10.966954231262207

Token 1010: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012544026598334312
    2. ' =' → logprob: -4.38754415512085
    3. '.pop' → logprob: -10.512543678283691
    4. '.append' → logprob: -13.137543678283691
    5. '[' → logprob: -13.637543678283691
    6. '[:]' → logprob: -14.512543678283691
    7. '＝' → logprob: -14.637543678283691
    8. '=
' → logprob: -14.762543678283691
    9. ',' → logprob: -15.137543678283691
    10. '                   ' → logprob: -15.262543678283691

Token 1011: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0005539863486774266
    2. ' new' → logprob: -7.500554084777832
    3. 'clusters' → logprob: -14.125554084777832
    4. '   ' → logprob: -16.250553131103516
    5. '[new' → logprob: -16.875553131103516
    6. '               ' → logprob: -17.000553131103516
    7. '                   ' → logprob: -18.125553131103516
    8. 'New' → logprob: -18.125553131103516
    9. '           ' → logprob: -18.125553131103516
    10. '```' → logprob: -18.250553131103516

Token 1012: '_clusters' (ID: 117535)
  Prédit: '_clusters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clusters' → logprob: -0.000340945553034544
    2. 'clusters' → logprob: -8.000341415405273
    3. 'Clusters' → logprob: -12.750341415405273
    4. '_cluster' → logprob: -13.750341415405273
    5. 'usters' → logprob: -14.125341415405273
    6. ' clusters' → logprob: -15.000341415405273
    7. '_cl' → logprob: -15.625341415405273
    8. '[' → logprob: -16.125341415405273
    9. '[_' → logprob: -17.125341415405273
    10. '_chunks' → logprob: -17.250341415405273

Token 1013: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005172328092157841
    2. 'cluster' → logprob: -5.505172252655029
    3. '           ' → logprob: -7.380172252655029
    4. ' cluster' → logprob: -9.005172729492188
    5. 'clusters' → logprob: -9.005172729492188
    6. '```' → logprob: -9.130172729492188
    7. '       ' → logprob: -10.505172729492188
    8. ' clusters' → logprob: -11.005172729492188
    9. '(cluster' → logprob: -11.130172729492188
    10. ',' → logprob: -11.255172729492188

Token 1014: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006483370088972151
    2. 'cluster' → logprob: -7.375648498535156
    3. 'clusters' → logprob: -11.875648498535156
    4. '       ' → logprob: -12.125648498535156
    5. ' cluster' → logprob: -13.000648498535156
    6. '           ' → logprob: -13.250648498535156
    7. '```' → logprob: -13.250648498535156
    8. '                   ' → logprob: -13.875648498535156
    9. '<|end|>' → logprob: -14.000648498535156
    10. '	cluster' → logprob: -14.750648498535156

Token 1015: ' cluster' (ID: 19723)
  Prédit: 'cluster'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluster' (adapté à ' cluster') → logprob: -6.957014556974173e-05
    2. ' cluster' → logprob: -9.750069618225098
    3. 'clusters' → logprob: -11.500069618225098
    4. '               ' → logprob: -14.250069618225098
    5. 'dist' → logprob: -15.750069618225098
    6. 'd' → logprob: -15.875069618225098
    7. '	cluster' → logprob: -16.37506866455078
    8. '       ' → logprob: -17.75006866455078
    9. '           ' → logprob: -17.87506866455078
    10. '```' → logprob: -18.00006866455078

Token 1016: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -7.896309739408025e-07
    2. '_n' → logprob: -14.875000953674316
    3. '_' → logprob: -15.375000953674316
    4. '_node' → logprob: -15.500000953674316
    5. '_indices' → logprob: -17.375
    6. '_tokens' → logprob: -17.75
    7. '_clusters' → logprob: -19.0
    8. ' _' → logprob: -19.125
    9. '_positions' → logprob: -19.125
    10. 'nodes' → logprob: -19.375

Token 1017: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5451681974809617e-05
    2. ' =' → logprob: -12.375015258789062
    3. '[' → logprob: -12.500015258789062
    4. '.pop' → logprob: -13.000015258789062
    5. '[min' → logprob: -13.125015258789062
    6. '=min' → logprob: -13.250015258789062
    7. '.append' → logprob: -14.750015258789062
    8. '=
' → logprob: -14.875015258789062
    9. '=sub' → logprob: -15.875015258789062
    10. '.=' → logprob: -16.000015258789062

Token 1018: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.008647545240819454
    2. '[new' → logprob: -5.008647441864014
    3. ' new' → logprob: -6.258647441864014
    4. '[' → logprob: -11.258647918701172
    5. 'cluster' → logprob: -12.633647918701172
    6. ' [' → logprob: -16.508647918701172
    7. '_new' → logprob: -16.883647918701172
    8. '[
' → logprob: -17.008647918701172
    9. '	new' → logprob: -17.008647918701172
    10. '(new' → logprob: -17.258647918701172

Token 1019: '_cluster' (ID: 65346)
  Prédit: '_cluster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cluster' → logprob: -0.0020186901092529297
    2. 'cluster' → logprob: -6.627018928527832
    3. '_nodes' → logprob: -7.627018928527832
    4. '_clusters' → logprob: -8.752018928527832
    5. 'Cluster' → logprob: -10.252018928527832
    6. '_node' → logprob: -11.502018928527832
    7. ' cluster' → logprob: -14.252018928527832
    8. '	cluster' → logprob: -14.877018928527832
    9. 'clusters' → logprob: -15.002018928527832
    10. '_CLUSTER' → logprob: -15.252018928527832

Token 1020: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -4.453737710718997e-05
    2. 'nodes' → logprob: -10.250044822692871
    3. 'Nodes' → logprob: -11.875044822692871
    4. '```' → logprob: -13.500044822692871
    5. '   ' → logprob: -15.625044822692871
    6. 's' → logprob: -15.625044822692871
    7. '
' → logprob: -15.750044822692871
    8. 'node' → logprob: -16.625043869018555
    9. '[' → logprob: -17.250043869018555
    10. '_tokens' → logprob: -17.500043869018555

Token 1021: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1022: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1023: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34365713596343994
    2. '           ' → logprob: -1.96865713596344
    3. '<|end|>' → logprob: -2.5936570167541504
    4. '```' → logprob: -3.3436570167541504
    5. '       ' → logprob: -4.21865701675415
    6. 'return' → logprob: -4.46865701675415
    7. 'continue' → logprob: -5.46865701675415
    8. '   ' → logprob: -6.46865701675415
    9. '                   ' → logprob: -6.46865701675415
    10. '                       ' → logprob: -6.84365701675415

Token 1024: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0016618473455309868
    2. ' =' → logprob: -6.501661777496338
    3. '[' → logprob: -9.626662254333496
    4. '=
' → logprob: -10.001662254333496
    5. '```' → logprob: -11.876662254333496
    6. '[:]' → logprob: -12.001662254333496
    7. '.=' → logprob: -12.626662254333496
    8. '<|end|>' → logprob: -12.751662254333496
    9. '=cut' → logprob: -13.001662254333496
    10. '[
' → logprob: -13.001662254333496

Token 1025: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -4.5491004129871726e-05
    2. ' new' → logprob: -10.000045776367188
    3. '[new' → logprob: -19.375045776367188
    4. '   ' → logprob: -21.125045776367188
    5. '```' → logprob: -22.250045776367188
    6. '	new' → logprob: -22.500045776367188
    7. 'd' → logprob: -22.500045776367188
    8. 'New' → logprob: -23.125045776367188
    9. '_new' → logprob: -23.375045776367188
    10. '$new' → logprob: -23.625045776367188

Token 1026: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0001761272142175585
    2. 'd' → logprob: -8.750176429748535
    3. '_row' → logprob: -11.750176429748535
    4. '[' → logprob: -12.750176429748535
    5. '_clusters' → logprob: -13.250176429748535
    6. 'row' → logprob: -14.000176429748535
    7. 'clusters' → logprob: -14.500176429748535
    8. 'cluster' → logprob: -14.875176429748535
    9. '```' → logprob: -14.875176429748535
    10. '[row' → logprob: -15.125176429748535

Token 1027: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1028: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1029: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10413064062595367
    2. '           ' → logprob: -2.604130744934082
    3. '
' → logprob: -3.854130744934082
    4. '        
' → logprob: -6.229130744934082
    5. 'return' → logprob: -6.479130744934082
    6. '            
' → logprob: -9.229130744934082
    7. '```' → logprob: -9.854130744934082
    8. '    
' → logprob: -10.604130744934082
    9. '   ' → logprob: -10.729130744934082
    10. ' return' → logprob: -11.104130744934082

Token 1030: ' Finished' (ID: 93533)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005318254698067904
    2. 'root' → logprob: -8.000532150268555
    3. '       ' → logprob: -9.125532150268555
    4. '#' → logprob: -9.500532150268555
    5. ' return' → logprob: -11.625532150268555
    6. 'final' → logprob: -13.625532150268555
    7. 'result' → logprob: -13.750532150268555
    8. 'assert' → logprob: -14.000532150268555
    9. '           ' → logprob: -15.125532150268555
    10. 'last' → logprob: -16.375532150268555

Token 1031: ' building' (ID: 6282)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18469086289405823
    2. 'return' → logprob: -1.9346908330917358
    3. ' return' → logprob: -3.9346909523010254
    4. '       ' → logprob: -5.434690952301025
    5. '
' → logprob: -8.809690475463867
    6. '   ' → logprob: -10.059690475463867
    7. '               ' → logprob: -10.184690475463867
    8. '{return' → logprob: -11.559690475463867
    9. '```' → logprob: -12.309690475463867
    10. '@return' → logprob: -13.559690475463867

Token 1032: ' tree' (ID: 8165)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21186327934265137
    2. '           ' → logprob: -1.7118632793426514
    3. ' return' → logprob: -5.4618635177612305
    4. 'tree' → logprob: -5.4618635177612305
    5. '       ' → logprob: -6.7118635177612305
    6. 'root' → logprob: -7.5868635177612305
    7. '               ' → logprob: -9.96186351776123
    8. ' tree' → logprob: -10.21186351776123
    9. 'self' → logprob: -10.58686351776123
    10. '   ' → logprob: -10.58686351776123

Token 1033: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011425263248383999
    2. '       ' → logprob: -4.886425495147705
    3. '
' → logprob: -6.136425495147705
    4. 'return' → logprob: -6.511425495147705
    5. ' return' → logprob: -8.886425018310547
    6. '        
' → logprob: -12.136425018310547
    7. '               ' → logprob: -12.261425018310547
    8. '   ' → logprob: -12.511425018310547
    9. '            
' → logprob: -12.886425018310547
    10. '<|end|>' → logprob: -12.886425018310547

Token 1034: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003667294979095459
    2. '       ' → logprob: -6.00366735458374
    3. 'return' → logprob: -6.75366735458374
    4. '   ' → logprob: -11.253666877746582
    5. ' return' → logprob: -11.503666877746582
    6. '               ' → logprob: -14.628666877746582
    7. '          ' → logprob: -15.378666877746582
    8. '
' → logprob: -15.753666877746582
    9. '{return' → logprob: -15.753666877746582
    10. '```' → logprob: -16.5036678314209

Token 1035: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003178782993927598
    2. '       ' → logprob: -6.253178596496582
    3. '<|end|>' → logprob: -6.878178596496582
    4. 'return' → logprob: -10.003178596496582
    5. '            
' → logprob: -10.378178596496582
    6. '
' → logprob: -10.503178596496582
    7. '   ' → logprob: -10.628178596496582
    8. '        
' → logprob: -10.878178596496582
    9. '```' → logprob: -10.878178596496582
    10. '               ' → logprob: -11.378178596496582

Token 1036: ' get' (ID: 717)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0829460546374321
    2. 'get' → logprob: -3.3329460620880127
    3. 'print' → logprob: -3.3329460620880127
    4. 'output' → logprob: -5.332945823669434
    5. ' dfs' → logprob: -5.957945823669434
    6. 'b' → logprob: -8.707945823669434
    7. 'count' → logprob: -8.707945823669434
    8. 'generate' → logprob: -9.082945823669434
    9. 'to' → logprob: -9.707945823669434
    10. ' get' → logprob: -10.457945823669434

Token 1037: '_internal' (ID: 56366)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.7402039766311646
    2. '_ad' → logprob: -1.2402039766311646
    3. '_edges' → logprob: -1.4902039766311646
    4. '_nodes' → logprob: -5.615203857421875
    5. 'adj' → logprob: -5.990203857421875
    6. '_neighbors' → logprob: -7.365203857421875
    7. '_tree' → logprob: -7.740203857421875
    8. '_edge' → logprob: -8.115203857421875
    9. 'edges' → logprob: -8.615203857421875
    10. '_graph' → logprob: -8.740203857421875

Token 1038: '_de' (ID: 5047)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.010717170313000679
    2. '_node' → logprob: -4.760717391967773
    3. '_edges' → logprob: -6.510717391967773
    4. '_connections' → logprob: -8.135717391967773
    5. '_neighbors' → logprob: -9.010717391967773
    6. '_degree' → logprob: -9.760717391967773
    7. '_de' → logprob: -10.010717391967773
    8. '```' → logprob: -10.885717391967773
    9. '_dist' → logprob: -11.260717391967773
    10. '_vertices' → logprob: -11.385717391967773

Token 1039: 'grees' (ID: 86997)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4018678665161133
    2. 'grees' → logprob: -1.2768678665161133
    3. 'gree' → logprob: -3.0268678665161133
    4. 'scription' → logprob: -6.026867866516113
    5. '```' → logprob: -8.401867866516113
    6. 'g' → logprob: -8.901867866516113
    7. 'fs' → logprob: -8.901867866516113
    8. 'fault' → logprob: -9.151867866516113
    9. 'fin' → logprob: -9.401867866516113
    10. 'gr' → logprob: -9.776867866516113

Token 1040: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012610428966581821
    2. '(' → logprob: -4.38761043548584
    3. '(
' → logprob: -10.01261043548584
    4. '   ' → logprob: -11.13761043548584
    5. ' (' → logprob: -11.38761043548584
    6. '(s' → logprob: -11.51261043548584
    7. 'self' → logprob: -11.63761043548584
    8. '       ' → logprob: -12.01261043548584
    9. '(Self' → logprob: -13.01261043548584
    10. ' ' → logprob: -14.76261043548584

Token 1041: '):
' (ID: 1883)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5046972632408142
    2. 'f' → logprob: -1.629697322845459
    3. '):
' → logprob: -2.504697322845459
    4. 'self' → logprob: -3.004697322845459
    5. 'lf' → logprob: -3.504697322845459
    6. 'xt' → logprob: -4.254697322845459
    7. 'nd' → logprob: -4.879697322845459
    8. 'xf' → logprob: -6.004697322845459
    9. 't' → logprob: -6.254697322845459
    10. 'def' → logprob: -6.254697322845459

Token 1042: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40654197335243225
    2. '           ' → logprob: -1.4065419435501099
    3. '```' → logprob: -3.4065420627593994
    4. '(self' → logprob: -3.7815420627593994
    5. '(' → logprob: -4.65654182434082
    6. '<|end|>' → logprob: -5.78154182434082
    7. '        
' → logprob: -6.03154182434082
    8. '[' → logprob: -6.53154182434082
    9. '[
' → logprob: -6.53154182434082
    10. '	       ' → logprob: -6.78154182434082

Token 1043: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09698452800512314
    2. 'return' → logprob: -2.721984624862671
    3. '           ' → logprob: -4.221984386444092
    4. '```' → logprob: -5.471984386444092
    5. 'for' → logprob: -5.721984386444092
    6. 'result' → logprob: -7.096984386444092
    7. 'count' → logprob: -7.096984386444092
    8. '   ' → logprob: -7.346984386444092
    9. ' return' → logprob: -7.721984386444092
    10. ' for' → logprob: -7.846984386444092

Token 1044: ' Internal' (ID: 24798)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5578343868255615
    2. 'internal' → logprob: -2.1828343868255615
    3. '       ' → logprob: -2.3078343868255615
    4. 'res' → logprob: -2.9328343868255615
    5. 'return' → logprob: -2.9328343868255615
    6. 'degrees' → logprob: -3.1828343868255615
    7. 'count' → logprob: -4.057834625244141
    8. 'degree' → logprob: -4.057834625244141
    9. 'deg' → logprob: -4.182834625244141
    10. 'def' → logprob: -5.182834625244141

Token 1045: ' nodes' (ID: 15749)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9165012836456299
    2. '_de' → logprob: -1.1665012836456299
    3. '_nodes' → logprob: -1.2915012836456299
    4. '   ' → logprob: -5.416501045227051
    5. '       ' → logprob: -5.666501045227051
    6. 'nodes' → logprob: -6.291501045227051
    7. 'degrees' → logprob: -6.541501045227051
    8. ' def' → logprob: -6.916501045227051
    9. '_degree' → logprob: -7.791501045227051
    10. '_def' → logprob: -8.04150104522705

Token 1046: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2562589645385742
    2. 'def' → logprob: -2.006258964538574
    3. '(self' → logprob: -2.756258964538574
    4. '           ' → logprob: -4.631258964538574
    5. ' =' → logprob: -5.006258964538574
    6. '=' → logprob: -6.006258964538574
    7. 'self' → logprob: -6.006258964538574
    8. '   ' → logprob: -6.631258964538574
    9. '```' → logprob: -6.631258964538574
    10. ':' → logprob: -7.006258964538574

Token 1047: ' those' (ID: 2617)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.8539717793464661
    2. '[k' → logprob: -1.7289717197418213
    3. '{k' → logprob: -2.2289717197418213
    4. '[i' → logprob: -2.2289717197418213
    5. 'node' → logprob: -2.3539717197418213
    6. '{' → logprob: -3.3539717197418213
    7. 'k' → logprob: -4.1039719581604
    8. '[v' → logprob: -4.4789719581604
    9. '[key' → logprob: -5.1039719581604
    10. '{i' → logprob: -5.3539719581604

Token 1048: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.5192975997924805
    2. 'with' → logprob: -1.5192975997924805
    3. 'not' → logprob: -2.0192975997924805
    4. ' in' → logprob: -2.2692975997924805
    5. ' not' → logprob: -2.3942975997924805
    6. ' for' → logprob: -3.2692975997924805
    7. 'in' → logprob: -3.2692975997924805
    8. 'for' → logprob: -3.5192975997924805
    9. 'k' → logprob: -3.6442975997924805
    10. 'that' → logprob: -3.7692975997924805

Token 1049: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.055850800126791
    2. 'indices' → logprob: -3.1808507442474365
    3. 'indexes' → logprob: -4.430850982666016
    4. ' indices' → logprob: -8.305850982666016
    5. ' index' → logprob: -8.305850982666016
    6. 'len' → logprob: -9.180850982666016
    7. 'idx' → logprob: -9.430850982666016
    8. 'self' → logprob: -9.430850982666016
    9. '```' → logprob: -10.430850982666016
    10. '   ' → logprob: -10.555850982666016

Token 1050: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.004371136426925659
    2. ' >=' → logprob: -5.504371166229248
    3. '≥' → logprob: -8.75437068939209
    4. '           ' → logprob: -9.25437068939209
    5. ']>=' → logprob: -11.50437068939209
    6. '   ' → logprob: -12.25437068939209
    7. '
' → logprob: -12.37937068939209
    8. ')>=' → logprob: -12.75437068939209
    9. 'self' → logprob: -12.87937068939209
    10. '       ' → logprob: -13.25437068939209

Token 1051: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.047134305234067e-05
    2. ' self' → logprob: -11.000030517578125
    3. '           ' → logprob: -12.000030517578125
    4. '   ' → logprob: -12.125030517578125
    5. '       ' → logprob: -13.125030517578125
    6. '0' → logprob: -16.875030517578125
    7. '
' → logprob: -17.000030517578125
    8. '(self' → logprob: -17.000030517578125
    9. '               ' → logprob: -18.375030517578125
    10. '	self' → logprob: -18.750030517578125

Token 1052: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.373591810464859
    2. '           ' → logprob: -1.7485917806625366
    3. '(self' → logprob: -2.873591899871826
    4. '
' → logprob: -3.373591899871826
    5. 'def' → logprob: -3.873591899871826
    6. '   ' → logprob: -4.373591899871826
    7. ',' → logprob: -5.873591899871826
    8. '```' → logprob: -6.373591899871826
    9. 'and' → logprob: -6.498591899871826
    10. '(' → logprob: -6.748591899871826

Token 1053: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05763377621769905
    2. '           ' → logprob: -3.057633876800537
    3. '```' → logprob: -5.307633876800537
    4. '   ' → logprob: -6.432633876800537
    5. 'def' → logprob: -6.682633876800537
    6. '
' → logprob: -8.182633399963379
    7. '(self' → logprob: -8.557633399963379
    8. ',' → logprob: -8.932633399963379
    9. '               ' → logprob: -9.182633399963379
    10. '(' → logprob: -9.307633399963379

Token 1054: ' degrees' (ID: 18210)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8798583149909973
    2. '           ' → logprob: -1.0048582553863525
    3. 'result' → logprob: -1.7548582553863525
    4. 'def' → logprob: -3.8798582553863525
    5. 'internal' → logprob: -5.379858493804932
    6. 'return' → logprob: -5.504858493804932
    7. 'degrees' (adapté à ' degrees') → logprob: -5.629858493804932
    8. ' result' → logprob: -6.004858493804932
    9. 'res' → logprob: -6.129858493804932
    10. '   ' → logprob: -6.379858493804932

Token 1055: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17989082634449005
    2. ' =' → logprob: -1.8048908710479736
    3. '[self' → logprob: -10.179890632629395
    4. '=self' → logprob: -10.304890632629395
    5. '(self' → logprob: -10.679890632629395
    6. '```' → logprob: -10.804890632629395
    7. '[' → logprob: -11.304890632629395
    8. 'self' → logprob: -12.429890632629395
    9. '   ' → logprob: -12.429890632629395
    10. '           ' → logprob: -13.179890632629395

Token 1056: ' []
' (ID: 8911)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.4122473895549774
    2. '{}
' → logprob: -1.6622474193572998
    3. '{' → logprob: -1.9122474193572998
    4. '[]
' → logprob: -9.537247657775879
    5. '[]' → logprob: -9.662247657775879
    6. '{i' → logprob: -9.787247657775879
    7. '{k' → logprob: -10.162247657775879
    8. 'default' → logprob: -10.412247657775879
    9. '{
' → logprob: -10.412247657775879
    10. '{}

' → logprob: -10.787247657775879

Token 1057: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0076580960303545
    2. ' for' → logprob: -5.382658004760742
    3. 'for' → logprob: -5.882658004760742
    4. '       ' → logprob: -9.132658004760742
    5. '               ' → logprob: -9.882658004760742
    6. ' =' → logprob: -10.632658004760742
    7. '   ' → logprob: -10.757658004760742
    8. '```' → logprob: -10.882658004760742
    9. '(' → logprob: -11.882658004760742
    10. '=' → logprob: -12.007658004760742

Token 1058: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22786357998847961
    2. '           ' → logprob: -1.9778635501861572
    3. ' for' → logprob: -2.7278635501861572
    4. '               ' → logprob: -10.977863311767578
    5. '       ' → logprob: -11.227863311767578
    6. '```' → logprob: -11.727863311767578
    7. '   ' → logprob: -12.727863311767578
    8. ' ' → logprob: -14.227863311767578
    9. ' ' → logprob: -14.477863311767578
    10. '	for' → logprob: -14.852863311767578

Token 1059: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.011262030340731144
    2. 'i' → logprob: -4.761261940002441
    3. 'u' → logprob: -6.011261940002441
    4. 'v' → logprob: -8.761261940002441
    5. 'idx' → logprob: -11.011261940002441
    6. ' node' → logprob: -11.011261940002441
    7. 'x' → logprob: -13.761261940002441
    8. 'k' → logprob: -14.261261940002441
    9. 'internal' → logprob: -15.136261940002441
    10. 'index' → logprob: -15.136261940002441

Token 1060: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0046430183574557304
    2. 'in' → logprob: -5.379642963409424
    3. '           ' → logprob: -11.504643440246582
    4. '   ' → logprob: -12.629643440246582
    5. '            ' → logprob: -13.629643440246582
    6. '    ' → logprob: -13.629643440246582
    7. 'self' → logprob: -13.754643440246582
    8. ',' → logprob: -13.879643440246582
    9. '        ' → logprob: -14.254643440246582
    10. '       ' → logprob: -14.379643440246582

Token 1061: ' self' (ID: 1051)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.1008713702030946e-06
    2. ' range' → logprob: -13.375001907348633
    3. '(range' → logprob: -14.625001907348633
    4. 'self' → logprob: -17.250001907348633
    5. 'sorted' → logprob: -17.875001907348633
    6. 'filter' → logprob: -19.000001907348633
    7. 'list' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '
' → logprob: -19.875001907348633
    10. '	range' → logprob: -20.500001907348633

Token 1062: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.0017676468705758452
    2. 'adj' → logprob: -6.501767635345459
    3. '.range' → logprob: -9.001768112182617
    4. 'range' → logprob: -9.251768112182617
    5. 'self' → logprob: -10.501768112182617
    6. '.next' → logprob: -12.126768112182617
    7. 'ad' → logprob: -12.376768112182617
    8. '.dist' → logprob: -13.376768112182617
    9. '.n' → logprob: -13.626768112182617
    10. '.add' → logprob: -13.876768112182617

Token 1063: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0921942703134846e-05
    2. 'd' → logprob: -12.00001049041748
    3. 'dj' → logprob: -13.00001049041748
    4. 'jac' → logprob: -14.00001049041748
    5. 'jr' → logprob: -15.50001049041748
    6. '{' → logprob: -15.62501049041748
    7. 'self' → logprob: -15.75001049041748
    8. 'f' → logprob: -15.87501049041748
    9. '{
' → logprob: -16.000011444091797
    10. 't' → logprob: -16.125011444091797

Token 1064: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06895086914300919
    2. '.keys' → logprob: -3.443950891494751
    3. ':' → logprob: -3.568950891494751
    4. '):
' → logprob: -5.818950653076172
    5. '           ' → logprob: -6.943950653076172
    6. '```' → logprob: -6.943950653076172
    7. '       ' → logprob: -8.068950653076172
    8. ']:
' → logprob: -8.193950653076172
    9. '.' → logprob: -8.443950653076172
    10. '[' → logprob: -8.568950653076172

Token 1065: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12071017175912857
    2. '           ' → logprob: -2.2457101345062256
    3. ' if' → logprob: -5.245710372924805
    4. 'if' → logprob: -6.245710372924805
    5. '```' → logprob: -7.995710372924805
    6. '   ' → logprob: -8.245710372924805
    7. '       ' → logprob: -10.745710372924805
    8. '                   ' → logprob: -12.245710372924805
    9. '	           ' → logprob: -12.745710372924805
    10. '	       ' → logprob: -12.995710372924805

Token 1066: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13463982939720154
    2. ' if' → logprob: -2.1346397399902344
    3. '           ' → logprob: -5.259639739990234
    4. '               ' → logprob: -6.634639739990234
    5. '   ' → logprob: -6.884639739990234
    6. '                   ' → logprob: -9.259639739990234
    7. 'degrees' → logprob: -10.759639739990234
    8. '```' → logprob: -10.884639739990234
    9. '       ' → logprob: -12.384639739990234
    10. ' ' → logprob: -12.759639739990234

Token 1067: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.1002136841416359
    2. ' node' → logprob: -2.3502137660980225
    3. '   ' → logprob: -12.600214004516602
    4. '               ' → logprob: -13.600214004516602
    5. '           ' → logprob: -13.975214004516602
    6. '	node' → logprob: -14.100214004516602
    7. 'not' → logprob: -14.850214004516602
    8. '                   ' → logprob: -15.725214004516602
    9. '(node' → logprob: -15.850214004516602
    10. '    ' → logprob: -16.8502140045166

Token 1068: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5760658383369446
    2. ' >=' → logprob: -0.8260658383369446
    3. '   ' → logprob: -9.826066017150879
    4. '>' → logprob: -10.576066017150879
    5. ']>=' → logprob: -10.951066017150879
    6. ')>=' → logprob: -11.451066017150879
    7. ' ' → logprob: -12.201066017150879
    8. '[' → logprob: -12.451066017150879
    9. '<|end|>' → logprob: -12.951066017150879
    10. ')' → logprob: -13.451066017150879

Token 1069: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.0020742492051795e-05
    2. ' self' → logprob: -10.500049591064453
    3. '           ' → logprob: -10.750049591064453
    4. '   ' → logprob: -14.625049591064453
    5. '0' → logprob: -15.125049591064453
    6. '               ' → logprob: -15.875049591064453
    7. '
' → logprob: -16.250049591064453
    8. '       ' → logprob: -16.500049591064453
    9. '(self' → logprob: -18.125049591064453
    10. '                   ' → logprob: -18.750049591064453

Token 1070: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.4974866644479334e-05
    2. '.' → logprob: -11.250015258789062
    3. 'n' → logprob: -13.625015258789062
    4. ' .' → logprob: -15.000015258789062
    5. 'self' → logprob: -15.125015258789062
    6. '   ' → logprob: -17.125015258789062
    7. '.
' → logprob: -17.625015258789062
    8. '.self' → logprob: -18.250015258789062
    9. '       ' → logprob: -18.875015258789062
    10. '.next' → logprob: -18.875015258789062

Token 1071: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5712257623672485
    2. ':
' → logprob: -1.3212257623672485
    3. 'and' → logprob: -1.9462257623672485
    4. ':' → logprob: -4.571225643157959
    5. '                   ' → logprob: -4.696225643157959
    6. '           ' → logprob: -5.321225643157959
    7. '               ' → logprob: -7.071225643157959
    8. '):
' → logprob: -8.696226119995117
    9. ',' → logprob: -9.696226119995117
    10. '   ' → logprob: -10.821226119995117

Token 1072: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03727114573121071
    2. '               ' → logprob: -4.412271022796631
    3. ':
' → logprob: -4.787271022796631
    4. ':' → logprob: -5.537271022796631
    5. ' and' → logprob: -5.537271022796631
    6. '           ' → logprob: -5.662271022796631
    7. 'and' → logprob: -5.787271022796631
    8. '                       ' → logprob: -7.162271022796631
    9. '```' → logprob: -7.662271022796631
    10. ',' → logprob: -9.037271499633789

Token 1073: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' (adapté à ' degrees') → logprob: -0.02229519747197628
    2. '                   ' → logprob: -4.522294998168945
    3. ' degrees' → logprob: -4.522294998168945
    4. '   ' → logprob: -8.397294998168945
    5. '           ' → logprob: -10.022294998168945
    6. '               ' → logprob: -10.147294998168945
    7. 'degree' → logprob: -12.897294998168945
    8. '                       ' → logprob: -13.022294998168945
    9. '       ' → logprob: -13.522294998168945
    10. 'deg' → logprob: -13.647294998168945

Token 1074: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0026267850771546364
    2. '.' → logprob: -6.252626895904541
    3. ' .' → logprob: -8.752626419067383
    4. '().' → logprob: -9.502626419067383
    5. '               ' → logprob: -10.002626419067383
    6. '+=' → logprob: -10.002626419067383
    7. 'append' → logprob: -10.127626419067383
    8. ' +=' → logprob: -10.252626419067383
    9. ')' → logprob: -10.377626419067383
    10. '=' → logprob: -10.377626419067383

Token 1075: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.12717294692993164
    2. 'len' → logprob: -2.1271729469299316
    3. ' len' → logprob: -8.877172470092773
    4. '(self' → logprob: -9.877172470092773
    5. ' (' → logprob: -10.002172470092773
    6. '(' → logprob: -12.252172470092773
    7. 'self' → logprob: -12.627172470092773
    8. '[len' → logprob: -15.127172470092773
    9. '                   ' → logprob: -16.252172470092773
    10. '               ' → logprob: -16.502172470092773

Token 1076: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023286080977413803
    2. '(' → logprob: -8.375232696533203
    3. 'self' → logprob: -13.375232696533203
    4. ' (' → logprob: -14.250232696533203
    5. '(
' → logprob: -15.875232696533203
    6. '((' → logprob: -17.875232696533203
    7. '[self' → logprob: -18.375232696533203
    8. ' self' → logprob: -18.625232696533203
    9. '(this' → logprob: -19.000232696533203
    10. ')' → logprob: -19.500232696533203

Token 1077: '.ad' (ID: 19775)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.48533308506011963
    2. '[node' → logprob: -1.8603330850601196
    3. '.ad' → logprob: -1.9853330850601196
    4. 'self' → logprob: -2.61033296585083
    5. '(self' → logprob: -4.73533296585083
    6. '[' → logprob: -4.98533296585083
    7. 'adj' → logprob: -6.61033296585083
    8. ' self' → logprob: -8.235333442687988
    9. '.self' → logprob: -8.735333442687988
    10. '(adj' → logprob: -8.860333442687988

Token 1078: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.2200749754119897e-06
    2. '[node' → logprob: -13.250001907348633
    3. '[j' → logprob: -15.125001907348633
    4. 'jac' → logprob: -16.875001907348633
    5. '[self' → logprob: -17.000001907348633
    6. 'ј' → logprob: -17.000001907348633
    7. 'js' → logprob: -17.500001907348633
    8. '[' → logprob: -17.500001907348633
    9. 'd' → logprob: -18.500001907348633
    10. '.j' → logprob: -19.000001907348633

Token 1079: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -6.704273118884885e-07
    2. '(node' → logprob: -15.125000953674316
    3. 'node' → logprob: -15.500000953674316
    4. ')' → logprob: -17.25
    5. '[
' → logprob: -18.625
    6. '[' → logprob: -18.875
    7. '
' → logprob: -19.125
    8. ' [' → logprob: -19.125
    9. '```' → logprob: -19.25
    10. ')[' → logprob: -19.375

Token 1080: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.007729657460004091
    2. '])' → logprob: -5.257729530334473
    3. '))' → logprob: -6.757729530334473
    4. '[node' → logprob: -7.632729530334473
    5. ']))
' → logprob: -7.882729530334473
    6. ']' → logprob: -8.632729530334473
    7. ')])' → logprob: -9.007729530334473
    8. ')' → logprob: -9.257729530334473
    9. ')))' → logprob: -10.382729530334473
    10. ')]' → logprob: -11.507729530334473

Token 1081: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9805189967155457
    2. '           ' → logprob: -1.3555190563201904
    3. '                   ' → logprob: -1.7305190563201904
    4. ')' → logprob: -1.9805190563201904
    5. '```' → logprob: -4.105518817901611
    6. '       ' → logprob: -5.105518817901611
    7. ':
' → logprob: -5.480518817901611
    8. ')
' → logprob: -5.605518817901611
    9. '<|end|>' → logprob: -5.605518817901611
    10. '                       ' → logprob: -5.855518817901611

Token 1082: ' degrees' (ID: 18210)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1436106115579605
    2. '           ' → logprob: -2.393610715866089
    3. '
' → logprob: -4.26861047744751
    4. '   ' → logprob: -5.14361047744751
    5. ' return' → logprob: -5.26861047744751
    6. 'return' → logprob: -5.26861047744751
    7. ':
' → logprob: -6.01861047744751
    8. ')' → logprob: -6.14361047744751
    9. '\n' → logprob: -6.26861047744751
    10. '        
' → logprob: -7.01861047744751

Token 1083: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1084: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8221051096916199
    2. '           ' → logprob: -1.1971051692962646
    3. '
' → logprob: -1.9471051692962646
    4. ')
' → logprob: -3.9471051692962646
    5. '()
' → logprob: -4.1971049308776855
    6. '   ' → logprob: -4.3221049308776855
    7. '<|end|>' → logprob: -4.3221049308776855
    8. 'return' → logprob: -4.5721049308776855
    9. '```' → logprob: -4.9471049308776855
    10. ')' → logprob: -5.4471049308776855

Token 1085: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15632131695747375
    2. '           ' → logprob: -2.1563212871551514
    3. ':
' → logprob: -4.9063215255737305
    4. '   ' → logprob: -5.2813215255737305
    5. ':' → logprob: -5.7813215255737305
    6. '<|end|>' → logprob: -5.7813215255737305
    7. '```' → logprob: -5.9063215255737305
    8. '
' → logprob: -6.1563215255737305
    9. ')' → logprob: -6.9063215255737305
    10. '[' → logprob: -7.4063215255737305

Token 1086: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11531289666891098
    2. '       ' → logprob: -2.8653128147125244
    3. '           ' → logprob: -3.1153128147125244
    4. '
' → logprob: -5.8653130531311035
    5. '   ' → logprob: -5.9903130531311035
    6. ' return' → logprob: -6.1153130531311035
    7. '	return' → logprob: -11.240312576293945
    8. '```' → logprob: -11.740312576293945
    9. '               ' → logprob: -11.865312576293945
    10. '                   ' → logprob: -13.990312576293945

Token 1087: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.002478627720847726
    2. ' degrees' → logprob: -6.00247859954834
    3. '[' → logprob: -13.00247859954834
    4. 'degree' → logprob: -14.62747859954834
    5. '   ' → logprob: -15.75247859954834
    6. '[
' → logprob: -17.627479553222656
    7. 'deg' → logprob: -17.877479553222656
    8. '```' → logprob: -18.252479553222656
    9. '[]' → logprob: -18.752479553222656
    10. ' [' → logprob: -18.877479553222656

Token 1088: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1089: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1090: ' input' (ID: 3422)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1091: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12712937593460083
    2. '_data' → logprob: -2.502129316329956
    3. '_line' → logprob: -3.877129316329956
    4. '_lines' → logprob: -4.627129554748535
    5. '_' → logprob: -5.377129554748535
    6. '_str' → logprob: -7.627129554748535
    7. 'data' → logprob: -7.877129554748535
    8. ' =' → logprob: -8.377129554748535
    9. '_tokens' → logprob: -8.877129554748535
    10. '(' → logprob: -9.002129554748535

Token 1092: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5566527247428894
    2. ' =' → logprob: -0.9316527247428894
    3. '   ' → logprob: -4.556652545928955
    4. '[' → logprob: -4.556652545928955
    5. '[:]' → logprob: -5.181652545928955
    6. '()' → logprob: -6.306652545928955
    7. '=[]' → logprob: -6.806652545928955
    8. '[]' → logprob: -7.306652545928955
    9. '.' → logprob: -7.431652545928955
    10. ':' → logprob: -7.681652545928955

Token 1093: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.007052441593259573
    2. ' sys' → logprob: -5.257052421569824
    3. '[]' → logprob: -6.382052421569824
    4. '[]
' → logprob: -9.632052421569824
    5. '[' → logprob: -10.382052421569824
    6. 'list' → logprob: -11.257052421569824
    7. ' []' → logprob: -11.757052421569824
    8. '(sys' → logprob: -13.132052421569824
    9. ' [' → logprob: -13.382052421569824
    10. '	sys' → logprob: -14.132052421569824

Token 1094: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.010456967167556286
    2. '.' → logprob: -4.6354570388793945
    3. '.readline' → logprob: -8.010457038879395
    4. '.stdout' → logprob: -8.260457038879395
    5. '._' → logprob: -9.885457038879395
    6. '.__' → logprob: -11.010457038879395
    7. '.std' → logprob: -11.010457038879395
    8. ' .' → logprob: -11.385457038879395
    9. '.argv' → logprob: -11.760457038879395
    10. '.stderr' → logprob: -13.260457038879395

Token 1095: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.015725448727607727
    2. '.readlines' → logprob: -4.765725612640381
    3. '.' → logprob: -5.015725612640381
    4. '.read' → logprob: -8.890725135803223
    5. 'read' → logprob: -9.640725135803223
    6. '=' → logprob: -9.890725135803223
    7. ' =' → logprob: -9.890725135803223
    8. '   ' → logprob: -10.015725135803223
    9. '.__' → logprob: -10.390725135803223
    10. '._' → logprob: -11.640725135803223

Token 1096: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011072111316025257
    2. '()' → logprob: -4.511072158813477
    3. '()
' → logprob: -11.761072158813477
    4. '(' → logprob: -11.886072158813477
    5. '.split' → logprob: -12.261072158813477
    6. '()\' → logprob: -13.636072158813477
    7. 'lines' → logprob: -14.261072158813477
    8. 'split' → logprob: -14.261072158813477
    9. '()

' → logprob: -14.761072158813477
    10. '.' → logprob: -14.761072158813477

Token 1097: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5759589076042175
    2. 'strip' → logprob: -0.8259589076042175
    3. 'rstrip' → logprob: -11.075959205627441
    4. 'decode' → logprob: -12.450959205627441
    5. ' split' → logprob: -17.200958251953125
    6. 'read' → logprob: -17.325958251953125
    7. 'str' → logprob: -17.950958251953125
    8. '(split' → logprob: -18.075958251953125
    9. ' strip' → logprob: -18.075958251953125
    10. 'lines' → logprob: -18.325958251953125

Token 1098: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004086708649992943
    2. '()' → logprob: -5.504086494445801
    3. '()
' → logprob: -12.6290864944458
    4. '('' → logprob: -13.2540864944458
    5. '('\' → logprob: -13.3790864944458
    6. '(' → logprob: -13.8790864944458
    7. '()\' → logprob: -15.1290864944458
    8. 'split' → logprob: -15.8790864944458
    9. '().'' → logprob: -16.629087448120117
    10. '()

' → logprob: -16.754087448120117

Token 1099: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. '(split' → logprob: -17.5
    3. ' split' → logprob: -17.75
    4. '```' → logprob: -20.125
    5. 'spl' → logprob: -21.0
    6. 'decode' → logprob: -21.875
    7. 'replace' → logprob: -22.125
    8. '.split' → logprob: -22.5
    9. 'strip' → logprob: -22.5
    10. 'rstrip' → logprob: -22.875

Token 1100: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.346492737531662
    2. '('' → logprob: -1.3464927673339844
    3. '(' → logprob: -3.5964927673339844
    4. '("("' → logprob: -6.471492767333984
    5. '('_' → logprob: -7.096492767333984
    6. '('\' → logprob: -7.346492767333984
    7. '()[' → logprob: -7.471492767333984
    8. 'lines' → logprob: -7.971492767333984
    9. '('.')' → logprob: -8.221492767333984
    10. '[' → logprob: -8.346492767333984

Token 1101: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.763666947837919e-05
    2. '\n' → logprob: -10.00004768371582
    3. 'newline' → logprob: -14.00004768371582
    4. 'ndef' → logprob: -14.50004768371582
    5. 'lines' → logprob: -14.87504768371582
    6. ' n' → logprob: -15.25004768371582
    7. '[n' → logprob: -16.00004768371582
    8. '(n' → logprob: -16.62504768371582
    9. ''\' → logprob: -17.50004768371582
    10. '
' → logprob: -17.75004768371582

Token 1102: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004152006935328245
    2. ')
' → logprob: -6.129151821136475
    3. '   ' → logprob: -6.504151821136475
    4. '')' → logprob: -7.754151821136475
    5. '[' → logprob: -10.629152297973633
    6. ']' → logprob: -12.379152297973633
    7. '')
' → logprob: -12.754152297973633
    8. ')
' → logprob: -13.754152297973633
    9. ')`' → logprob: -13.754152297973633
    10. ' )' → logprob: -13.879152297973633

Token 1103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12716075778007507
    2. 'n' → logprob: -2.1271607875823975
    3. ' n' → logprob: -8.877161026000977
    4. '```' → logprob: -9.502161026000977
    5. '	n' → logprob: -12.002161026000977
    6. 'for' → logprob: -12.502161026000977
    7. '
' → logprob: -13.377161026000977
    8. 'import' → logprob: -13.752161026000977
    9. '    
' → logprob: -13.752161026000977
    10. 'idx' → logprob: -14.127161026000977

Token 1104: ' pos' (ID: 1253)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25235626101493835
    2. '   ' → logprob: -1.5023562908172607
    3. '```' → logprob: -8.50235652923584
    4. ' n' → logprob: -8.87735652923584
    5. 'num' → logprob: -10.87735652923584
    6. 'for' → logprob: -11.37735652923584
    7. 'input' → logprob: -11.75235652923584
    8. 'N' → logprob: -11.87735652923584
    9. '	n' → logprob: -11.87735652923584
    10. 'idx' → logprob: -12.12735652923584

Token 1105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22575092315673828
    2. '=' → logprob: -1.6007509231567383
    3. '   ' → logprob: -8.850750923156738
    4. '_' → logprob: -8.975750923156738
    5. '```' → logprob: -10.975750923156738
    6. ' +=' → logprob: -11.600750923156738
    7. '_tokens' → logprob: -12.100750923156738
    8. ')' → logprob: -12.225750923156738
    9. '_=' → logprob: -12.600750923156738
    10. '_idx' → logprob: -12.725750923156738

Token 1106: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001246348983841017
    2. ' ' → logprob: -9.00012493133545
    3. '1' → logprob: -13.75012493133545
    4. '   ' → logprob: -16.375123977661133
    5. 'len' → logprob: -16.875123977661133
    6. 'int' → logprob: -19.125123977661133
    7. '[' → logprob: -19.250123977661133
    8. '2' → logprob: -19.750123977661133
    9. '```' → logprob: -19.875123977661133
    10. '=' → logprob: -20.125123977661133

Token 1107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. '1' → logprob: -13.000005722045898
    3. 'int' → logprob: -13.125005722045898
    4. ' ' → logprob: -13.500005722045898
    5. '[' → logprob: -16.1250057220459
    6. 'len' → logprob: -16.6250057220459
    7. '[int' → logprob: -17.6250057220459
    8. '```' → logprob: -18.0000057220459
    9. '   ' → logprob: -18.2500057220459
    10. 'pos' → logprob: -19.0000057220459

Token 1108: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4296181797981262
    2. '   ' → logprob: -1.0546181201934814
    3. ' n' → logprob: -7.8046183586120605
    4. '```' → logprob: -7.9296183586120605
    5. '
' → logprob: -9.429617881774902
    6. '	n' → logprob: -10.554617881774902
    7. '    
' → logprob: -10.804617881774902
    8. 'while' → logprob: -12.554617881774902
    9. 'num' → logprob: -12.679617881774902
    10. '``' → logprob: -12.804617881774902

Token 1109: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.055678073316812515
    2. '   ' → logprob: -2.930678129196167
    3. '```' → logprob: -7.805677890777588
    4. ' n' → logprob: -8.180678367614746
    5. 'num' → logprob: -9.930678367614746
    6. 'def' → logprob: -10.930678367614746
    7. '	n' → logprob: -10.930678367614746
    8. 't' → logprob: -12.555678367614746
    9. 'while' → logprob: -12.805678367614746
    10. '
' → logprob: -12.930678367614746

Token 1110: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3359622359275818
    2. '   ' → logprob: -1.3359622955322266
    3. 't' → logprob: -4.335962295532227
    4. '```' → logprob: -5.460962295532227
    5. 'while' (adapté à ' while') → logprob: -5.710962295532227
    6. 'num' → logprob: -6.835962295532227
    7. ' n' → logprob: -8.710962295532227
    8. 'T' → logprob: -9.085962295532227
    9. 'for' → logprob: -9.460962295532227
    10. 'N' → logprob: -9.460962295532227

Token 1111: ' True' (ID: 6432)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.03806169703602791
    2. 'pos' → logprob: -3.2880616188049316
    3. ' True' → logprob: -11.66306209564209
    4. '   ' → logprob: -12.16306209564209
    5. ' not' → logprob: -12.78806209564209
    6. ' input' → logprob: -13.28806209564209
    7. '	pos' → logprob: -14.41306209564209
    8. 'True' → logprob: -15.16306209564209
    9. '(pos' → logprob: -15.28806209564209
    10. ' ' → logprob: -15.28806209564209

Token 1112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7021734118461609
    2. '       ' → logprob: -0.8271734118461609
    3. ':
' → logprob: -2.9521734714508057
    4. '   ' → logprob: -4.577173233032227
    5. '<|end|>' → logprob: -7.077173233032227
    6. ',' → logprob: -7.202173233032227
    7. 'and' → logprob: -7.327173233032227
    8. ' and' → logprob: -7.702173233032227
    9. '[' → logprob: -7.952173233032227
    10. '():
' → logprob: -8.202173233032227

Token 1113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12735001742839813
    2. '   ' → logprob: -2.127350091934204
    3. 'if' → logprob: -8.627349853515625
    4. ' if' → logprob: -8.752349853515625
    5. '```' → logprob: -10.752349853515625
    6. '<|end|>' → logprob: -11.002349853515625
    7. '    
' → logprob: -11.127349853515625
    8. '{
' → logprob: -12.377349853515625
    9. 'try' → logprob: -12.627349853515625
    10. '           ' → logprob: -12.752349853515625

Token 1114: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7064980864524841
    2. '   ' → logprob: -1.706498146057129
    3. '       ' → logprob: -1.956498146057129
    4. 'n' → logprob: -2.206498146057129
    5. 'line' → logprob: -3.081498146057129
    6. 'try' → logprob: -4.081498146057129
    7. ' if' → logprob: -4.706498146057129
    8. ' n' → logprob: -6.831498146057129
    9. ' line' → logprob: -7.706498146057129
    10. '```' → logprob: -8.956498146057129

Token 1115: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00861669983714819
    2. ' pos' → logprob: -4.758616924285889
    3. '   ' → logprob: -13.13361644744873
    4. 'not' → logprob: -16.758617401123047
    5. '	pos' → logprob: -17.133617401123047
    6. ' not' → logprob: -17.258617401123047
    7. '(pos' → logprob: -18.133617401123047
    8. ' ' → logprob: -18.883617401123047
    9. 'len' → logprob: -19.133617401123047
    10. '_pos' → logprob: -19.133617401123047

Token 1116: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.20867297053337097
    2. '>=' → logprob: -1.7086730003356934
    3. ' ==' → logprob: -5.958673000335693
    4. ' <' → logprob: -6.083673000335693
    5. '==' → logprob: -6.583673000335693
    6. '<' → logprob: -7.583673000335693
    7. '   ' → logprob: -7.958673000335693
    8. '<len' → logprob: -9.583672523498535
    9. ' ' → logprob: -11.333672523498535
    10. '+' → logprob: -11.458672523498535

Token 1117: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.615255839889869e-05
    2. ' len' → logprob: -9.250096321105957
    3. 'input' → logprob: -18.25009536743164
    4. '   ' → logprob: -18.37509536743164
    5. '(len' → logprob: -19.00009536743164
    6. 'int' → logprob: -19.75009536743164
    7. '
' → logprob: -20.25009536743164
    8. '=len' → logprob: -21.75009536743164
    9. '       ' → logprob: -22.00009536743164
    10. ' ' → logprob: -22.00009536743164

Token 1118: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09000125527381897
    2. 'input' → logprob: -2.465001344680786
    3. '(' → logprob: -7.715001106262207
    4. ' input' → logprob: -7.840001106262207
    5. '(sys' → logprob: -8.840001106262207
    6. ' (' → logprob: -9.715001106262207
    7. 'sys' → logprob: -12.465001106262207
    8. '_input' → logprob: -13.340001106262207
    9. '```' → logprob: -13.465001106262207
    10. '(
' → logprob: -13.715001106262207

Token 1119: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -13.500003814697266
    3. ')_' → logprob: -14.625003814697266
    4. ')' → logprob: -14.750003814697266
    5. '```' → logprob: -14.875003814697266
    6. '   ' → logprob: -15.000003814697266
    7. '_line' → logprob: -15.500003814697266
    8. '
' → logprob: -16.000003814697266
    9. '_
' → logprob: -16.125003814697266
    10. 'lines' → logprob: -16.625003814697266

Token 1120: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.33745917677879333
    2. ':
' → logprob: -1.7124592065811157
    3. ':' → logprob: -2.837459087371826
    4. '       ' → logprob: -3.587459087371826
    5. ' and' → logprob: -4.462459087371826
    6. '           ' → logprob: -5.962459087371826
    7. '):
' → logprob: -6.587459087371826
    8. ')' → logprob: -6.587459087371826
    9. '   ' → logprob: -6.837459087371826
    10. 'or' → logprob: -7.337459087371826

Token 1121: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022880789765622467
    2. '       ' → logprob: -9.250228881835938
    3. '   ' → logprob: -9.500228881835938
    4. 'break' → logprob: -11.125228881835938
    5. '               ' → logprob: -11.625228881835938
    6. '<|end|>' → logprob: -12.000228881835938
    7. ' break' → logprob: -12.375228881835938
    8. '```' → logprob: -12.375228881835938
    9. ':
' → logprob: -12.625228881835938
    10. ' ' → logprob: -13.125228881835938

Token 1122: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.599409818649292
    2. '           ' → logprob: -0.849409818649292
    3. '       ' → logprob: -4.099410057067871
    4. ' break' → logprob: -5.599410057067871
    5. '   ' → logprob: -6.599410057067871
    6. 'return' → logprob: -7.099410057067871
    7. '               ' → logprob: -8.099410057067871
    8. '	break' → logprob: -8.224410057067871
    9. '
' → logprob: -10.099410057067871
    10. ' ' → logprob: -10.349410057067871

Token 1123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006174909416586161
    2. '
' → logprob: -6.1311750411987305
    3. '   ' → logprob: -6.3811750411987305
    4. '        
' → logprob: -6.3811750411987305
    5. '```' → logprob: -8.38117504119873
    6. '           ' → logprob: -9.50617504119873
    7. '    
' → logprob: -9.50617504119873
    8. '<|end|>' → logprob: -10.25617504119873
    9. ':
' → logprob: -10.50617504119873
    10. '\' → logprob: -10.75617504119873

Token 1124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0399760864675045
    2. '   ' → logprob: -3.289976119995117
    3. '```' → logprob: -6.414976119995117
    4. '        
' → logprob: -9.039976119995117
    5. '    
' → logprob: -10.039976119995117
    6. '
' → logprob: -10.539976119995117
    7. '{
' → logprob: -10.789976119995117
    8. 'pos' → logprob: -11.039976119995117
    9. '``' → logprob: -11.164976119995117
    10. '<|end|>' → logprob: -11.664976119995117

Token 1125: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1569901406764984
    2. '       ' → logprob: -2.0319900512695312
    3. '   ' → logprob: -5.281990051269531
    4. 'line' (adapté à ' line') → logprob: -5.281990051269531
    5. ' n' → logprob: -5.656990051269531
    6. '```' → logprob: -8.281990051269531
    7. ' line' → logprob: -9.031990051269531
    8. 'size' → logprob: -9.281990051269531
    9. 'num' → logprob: -10.656990051269531
    10. '	n' → logprob: -11.156990051269531

Token 1126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030895547941327095
    2. '=' → logprob: -3.530895471572876
    3. '       ' → logprob: -7.405895709991455
    4. '.strip' → logprob: -8.780895233154297
    5. '=line' → logprob: -9.030895233154297
    6. '   ' → logprob: -9.780895233154297
    7. ',' → logprob: -10.030895233154297
    8. '_tokens' → logprob: -10.530895233154297
    9. '           ' → logprob: -10.530895233154297
    10. ' ==' → logprob: -10.780895233154297

Token 1127: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759401917457581
    2. 'input' → logprob: -0.8259401917457581
    3. '(input' → logprob: -15.075940132141113
    4. '=input' → logprob: -15.700940132141113
    5. '	input' → logprob: -15.825940132141113
    6. '"' → logprob: -17.07594108581543
    7. '   ' → logprob: -17.07594108581543
    8. '<input' → logprob: -17.32594108581543
    9. '_input' → logprob: -17.70094108581543
    10. '       ' → logprob: -17.95094108581543

Token 1128: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.008339033462107182
    2. '_line' → logprob: -5.883338928222656
    3. '[pos' → logprob: -6.008338928222656
    4. '_tokens' → logprob: -6.133338928222656
    5. '[line' → logprob: -7.633338928222656
    6. '()' → logprob: -9.883338928222656
    7. 'pos' → logprob: -10.133338928222656
    8. '_pos' → logprob: -10.258338928222656
    9. '[token' → logprob: -10.258338928222656
    10. '()
' → logprob: -10.633338928222656

Token 1129: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.8550976164988242e-05
    2. '[' → logprob: -11.875018119812012
    3. '[line' → logprob: -12.250018119812012
    4. '[token' → logprob: -13.125018119812012
    5. 'pos' → logprob: -13.250018119812012
    6. '```' → logprob: -13.750018119812012
    7. '[
' → logprob: -14.000018119812012
    8. '\[' → logprob: -15.125018119812012
    9. '   ' → logprob: -15.750018119812012
    10. '[position' → logprob: -15.750018119812012

Token 1130: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4065299928188324
    2. ']' → logprob: -1.5315300226211548
    3. ']
' → logprob: -2.1565299034118652
    4. '.strip' → logprob: -7.406529903411865
    5. '       ' → logprob: -7.656529903411865
    6. '][' → logprob: -8.406530380249023
    7. '           ' → logprob: -8.781530380249023
    8. '.split' → logprob: -8.906530380249023
    9. '[' → logprob: -9.406530380249023
    10. ''].' → logprob: -10.031530380249023

Token 1131: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.723973582556937e-05
    2. 'split' → logprob: -11.000017166137695
    3. 'rstrip' → logprob: -14.500017166137695
    4. ' strip' → logprob: -20.375017166137695
    5. 'startswith' → logprob: -20.500017166137695
    6. '_strip' → logprob: -21.500017166137695
    7. '.strip' → logprob: -21.625017166137695
    8. '-strip' → logprob: -22.000017166137695
    9. 'isdigit' → logprob: -22.000017166137695
    10. 'skip' → logprob: -23.000017166137695

Token 1132: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4397779107093811
    2. '()' → logprob: -1.0647778511047363
    3. '():
' → logprob: -5.314777851104736
    4. '       ' → logprob: -5.939777851104736
    5. ':
' → logprob: -7.189777851104736
    6. 'if' → logprob: -7.689777851104736
    7. '()==' → logprob: -7.689777851104736
    8. ':' → logprob: -8.439778327941895
    9. '           ' → logprob: -8.439778327941895
    10. '==' → logprob: -8.564778327941895

Token 1133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010998892597854137
    2. 'if' → logprob: -4.635998725891113
    3. '   ' → logprob: -7.635998725891113
    4. ' if' → logprob: -7.760998725891113
    5. 'pos' → logprob: -8.260998725891113
    6. '```' → logprob: -9.885998725891113
    7. '           ' → logprob: -12.010998725891113
    8. '	if' → logprob: -12.635998725891113
    9. '<|end|>' → logprob: -12.885998725891113
    10. '{' → logprob: -13.260998725891113

Token 1134: ' pos' (ID: 1253)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012209872715175152
    2. 'pos' (adapté à ' pos') → logprob: -4.512209892272949
    3. '       ' → logprob: -6.762209892272949
    4. ' if' → logprob: -12.38720989227295
    5. '```' → logprob: -14.88720989227295
    6. '   ' → logprob: -16.137208938598633
    7. '	if' → logprob: -17.762208938598633
    8. 'If' → logprob: -17.887208938598633
    9. ' pos' → logprob: -18.137208938598633
    10. '           ' → logprob: -18.137208938598633

Token 1135: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12331516295671463
    2. '==' → logprob: -2.8733150959014893
    3. ' +=' → logprob: -2.8733150959014893
    4. ' ==' → logprob: -6.998315334320068
    5. '+' → logprob: -7.248315334320068
    6. '=' → logprob: -7.623315334320068
    7. '++' → logprob: -7.873315334320068
    8. '[' → logprob: -8.87331485748291
    9. '```' → logprob: -9.12331485748291
    10. '>=' → logprob: -10.12331485748291

Token 1136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.875
    3. ' ' → logprob: -16.25
    4. '0' → logprob: -17.625
    5. '(' → logprob: -18.0
    6. '#' → logprob: -18.875
    7. '
' → logprob: -19.375
    8. '`' → logprob: -19.625
    9. 'def' → logprob: -19.625
    10. '<|end|>' → logprob: -20.75

Token 1137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -15.875
    3. ' ' → logprob: -19.75
    4. '
' → logprob: -20.0
    5. '```' → logprob: -21.625
    6. 'int' → logprob: -22.875
    7. '   ' → logprob: -23.5
    8. '１' → logprob: -24.125
    9. 'len' → logprob: -25.125
    10. '`' → logprob: -25.25

Token 1138: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007432935293763876
    2. 'if' → logprob: -5.00743293762207
    3. ' if' → logprob: -7.63243293762207
    4. '   ' → logprob: -8.50743293762207
    5. '```' → logprob: -10.50743293762207
    6. '           ' → logprob: -13.50743293762207
    7. '        
' → logprob: -14.38243293762207
    8. 'If' → logprob: -15.50743293762207
    9. ',' → logprob: -15.50743293762207
    10. '#' → logprob: -15.75743293762207

Token 1139: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1645587682723999
    2. '       ' → logprob: -1.9145587682724
    3. ' if' → logprob: -5.6645588874816895
    4. '   ' → logprob: -7.5395588874816895
    5. '```' → logprob: -8.039558410644531
    6. '	if' → logprob: -13.539558410644531
    7. '           ' → logprob: -14.164558410644531
    8. 'If' → logprob: -14.789558410644531
    9. '``' → logprob: -14.789558410644531
    10. '        
' → logprob: -14.914558410644531

Token 1140: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003184959525242448
    2. 'n' → logprob: -5.753184795379639
    3. '```' → logprob: -12.878185272216797
    4. ' if' → logprob: -13.253185272216797
    5. '       ' → logprob: -13.378185272216797
    6. '   ' → logprob: -13.628185272216797
    7. 'try' → logprob: -15.878185272216797
    8. 'num' → logprob: -17.503185272216797
    9. 'size' → logprob: -17.878185272216797
    10. '
' → logprob: -18.128185272216797

Token 1141: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12753848731517792
    2. 'not' → logprob: -2.1275384426116943
    3. ' line' → logprob: -7.877538681030273
    4. 'line' → logprob: -8.377538681030273
    5. '   ' → logprob: -14.627538681030273
    6. ' ' → logprob: -15.377538681030273
    7. ' len' → logprob: -15.877538681030273
    8. 'len' → logprob: -15.877538681030273
    9. '(line' → logprob: -16.752538681030273
    10. '
' → logprob: -17.127538681030273

Token 1142: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10057175159454346
    2. '==' → logprob: -2.350571632385254
    3. '()==' → logprob: -8.475571632385254
    4. '.startswith' → logprob: -9.350571632385254
    5. '```' → logprob: -10.475571632385254
    6. '.strip' → logprob: -11.475571632385254
    7. ' =' → logprob: -12.100571632385254
    8. '()' → logprob: -12.100571632385254
    9. '       ' → logprob: -12.350571632385254
    10. ')==' → logprob: -12.725571632385254

Token 1143: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.013464190997183323
    2. ''' → logprob: -5.138463973999023
    3. '""' → logprob: -5.138463973999023
    4. '"' → logprob: -7.138463973999023
    5. '"":' → logprob: -7.263463973999023
    6. ' '':
' → logprob: -10.013463973999023
    7. ''ex' → logprob: -10.263463973999023
    8. '''
' → logprob: -10.763463973999023
    9. ''end' → logprob: -11.513463973999023
    10. ''t' → logprob: -11.763463973999023

Token 1144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.808692991733551
    2. '```' → logprob: -1.9336929321289062
    3. '           ' → logprob: -2.5586929321289062
    4. '':' → logprob: -2.5586929321289062
    5. '       ' → logprob: -2.8086929321289062
    6. '''' → logprob: -3.4336929321289062
    7. 'def' → logprob: -3.4336929321289062
    8. 'if' → logprob: -3.6836929321289062
    9. ''' → logprob: -3.9336929321289062
    10. 'continue' → logprob: -4.308692932128906

Token 1145: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6947575211524963
    2. '':
' → logprob: -0.6947575211524963
    3. ''' → logprob: -7.069757461547852
    4. ''):
' → logprob: -8.069757461547852
    5. '':
' → logprob: -8.944757461547852
    6. ':' → logprob: -9.569757461547852
    7. '')' → logprob: -9.694757461547852
    8. ':
' → logprob: -9.694757461547852
    9. ''):' → logprob: -10.194757461547852
    10. '):
' → logprob: -10.944757461547852

Token 1146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000227496653678827
    2. 'continue' → logprob: -9.250227928161621
    3. '       ' → logprob: -9.625227928161621
    4. ' continue' → logprob: -10.125227928161621
    5. '```' → logprob: -11.750227928161621
    6. '               ' → logprob: -12.000227928161621
    7. '		' → logprob: -12.625227928161621
    8. '   ' → logprob: -13.250227928161621
    9. '	       ' → logprob: -13.375227928161621
    10. ':
' → logprob: -14.000227928161621

Token 1147: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.25394096970558167
    2. '           ' → logprob: -1.5039409399032593
    3. ' break' → logprob: -6.878941059112549
    4. '       ' → logprob: -7.628941059112549
    5. '	break' → logprob: -8.37894058227539
    6. '               ' → logprob: -9.25394058227539
    7. '```' → logprob: -9.25394058227539
    8. 'continue' → logprob: -10.62894058227539
    9. 'return' → logprob: -10.87894058227539
    10. '   ' → logprob: -11.50394058227539

Token 1148: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04988650605082512
    2. 'n' → logprob: -3.299886465072632
    3. '```' → logprob: -4.674886703491211
    4. '   ' → logprob: -6.549886703491211
    5. ' n' → logprob: -8.299886703491211
    6. '        
' → logprob: -8.424886703491211
    7. '``' → logprob: -8.549886703491211
    8. '(n' → logprob: -8.549886703491211
    9. '           ' → logprob: -10.424886703491211
    10. '`' → logprob: -10.924886703491211

Token 1149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010889010736718774
    2. '   ' → logprob: -7.501089096069336
    3. '```' → logprob: -7.876089096069336
    4. 'n' → logprob: -10.001089096069336
    5. '        
' → logprob: -10.126089096069336
    6. '<|end|>' → logprob: -10.751089096069336
    7. '           ' → logprob: -11.126089096069336
    8. ' n' → logprob: -11.376089096069336
    9. '(n' → logprob: -12.376089096069336
    10. '``' → logprob: -12.626089096069336

Token 1150: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.002513712039217353
    2. '       ' → logprob: -6.002513885498047
    3. '```' → logprob: -10.627513885498047
    4. ' n' → logprob: -11.627513885498047
    5. '   ' → logprob: -12.627513885498047
    6. '
' → logprob: -14.502513885498047
    7. '        
' → logprob: -14.752513885498047
    8. '``' → logprob: -15.627513885498047
    9. 'N' → logprob: -16.252513885498047
    10. '	n' → logprob: -16.252513885498047

Token 1151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02632410079240799
    2. '=' → logprob: -3.6513240337371826
    3. ',' → logprob: -11.276324272155762
    4. ')' → logprob: -12.776324272155762
    5. '_' → logprob: -13.151324272155762
    6. ' ' → logprob: -13.526324272155762
    7. ' =
' → logprob: -13.526324272155762
    8. '=int' → logprob: -14.276324272155762
    9. '    ' → logprob: -14.651324272155762
    10. '   ' → logprob: -14.776324272155762

Token 1152: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38687121868133545
    2. ' int' → logprob: -1.1368712186813354
    3. '[int' → logprob: -16.261871337890625
    4. '=int' → logprob: -16.511871337890625
    5. '(int' → logprob: -16.886871337890625
    6. '	int' → logprob: -17.511871337890625
    7. '<int' → logprob: -18.761871337890625
    8. ':int' → logprob: -20.636871337890625
    9. ']int' → logprob: -20.636871337890625
    10. 'len' → logprob: -20.761871337890625

Token 1153: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0007102862582542002
    2. 'line' → logprob: -7.250710487365723
    3. '(' → logprob: -15.500710487365723
    4. '[line' → logprob: -16.375709533691406
    5. ' line' → logprob: -16.875709533691406
    6. '=line' → logprob: -17.125709533691406
    7. '#line' → logprob: -18.750709533691406
    8. '(
' → logprob: -19.125709533691406
    9. '	line' → logprob: -19.500709533691406
    10. '```' → logprob: -19.500709533691406

Token 1154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009519724175333977
    2. ')
' → logprob: -5.134519577026367
    3. '       ' → logprob: -5.634519577026367
    4. '   ' → logprob: -11.759519577026367
    5. '<|end|>' → logprob: -13.509519577026367
    6. '```' → logprob: -14.384519577026367
    7. ' )' → logprob: -14.884519577026367
    8. '),' → logprob: -15.634519577026367
    9. '')' → logprob: -15.634519577026367
    10. '#' → logprob: -15.634519577026367

Token 1155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.662937372922897e-05
    2. '   ' → logprob: -9.625096321105957
    3. '        
' → logprob: -11.500096321105957
    4. '<|end|>' → logprob: -11.625096321105957
    5. 'matrix' → logprob: -12.625096321105957
    6. 'dist' → logprob: -12.875096321105957
    7. '```' → logprob: -13.125096321105957
    8. '           ' → logprob: -13.750096321105957
    9. 'next' → logprob: -14.625096321105957
    10. ',' → logprob: -14.750096321105957

Token 1156: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.023578418418765068
    2. '       ' → logprob: -3.773578405380249
    3. 'matrix' → logprob: -8.648578643798828
    4. ' dist' → logprob: -9.273578643798828
    5. 'distance' → logprob: -10.273578643798828
    6. 'd' → logprob: -11.648578643798828
    7. '	dist' → logprob: -11.773578643798828
    8. '   ' → logprob: -12.273578643798828
    9. '           ' → logprob: -13.523578643798828
    10. '_dist' → logprob: -13.898578643798828

Token 1157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896280825138092
    2. '=' → logprob: -2.4639627933502197
    3. '   ' → logprob: -11.33896255493164
    4. '[' → logprob: -12.08896255493164
    5. ',' → logprob: -13.58896255493164
    6. 's' → logprob: -13.71396255493164
    7. ')' → logprob: -14.33896255493164
    8. ' ' → logprob: -14.46396255493164
    9. '    ' → logprob: -14.58896255493164
    10. ' =
' → logprob: -14.83896255493164

Token 1158: ' []
' (ID: 8911)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.10021799057722092
    2. ' read' → logprob: -2.3502180576324463
    3. '   ' → logprob: -12.100217819213867
    4. 'self' → logprob: -12.725217819213867
    5. '[' → logprob: -13.975217819213867
    6. ' self' → logprob: -14.225217819213867
    7. '	read' → logprob: -14.850217819213867
    8. ' [' → logprob: -15.225217819213867
    9. '(read' → logprob: -15.475217819213867
    10. '[]' → logprob: -16.475217819213867

Token 1159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021010566502809525
    2. 'for' → logprob: -3.896010637283325
    3. ' for' → logprob: -7.896010398864746
    4. 'while' → logprob: -10.521010398864746
    5. '   ' → logprob: -10.771010398864746
    6. '           ' → logprob: -10.896010398864746
    7. 'dist' → logprob: -11.271010398864746
    8. '	for' → logprob: -11.896010398864746
    9. '<|end|>' → logprob: -13.021010398864746
    10. '	' → logprob: -13.896010398864746

Token 1160: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048740535974502563
    2. '       ' → logprob: -3.0487406253814697
    3. ' for' → logprob: -9.04874038696289
    4. 'dist' → logprob: -11.29874038696289
    5. '   ' → logprob: -11.54874038696289
    6. 'while' (adapté à ' while') → logprob: -11.79874038696289
    7. '           ' → logprob: -12.54874038696289
    8. '	for' → logprob: -13.04874038696289
    9. '```' → logprob: -15.67374038696289
    10. '               ' → logprob: -17.17374038696289

Token 1161: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.18092335760593414
    2. 'pos' → logprob: -1.805923342704773
    3. ' len' → logprob: -7.6809234619140625
    4. 'True' → logprob: -8.430923461914062
    5. 'dist' → logprob: -8.430923461914062
    6. ' pos' → logprob: -9.430923461914062
    7. '   ' → logprob: -9.555923461914062
    8. 'n' → logprob: -9.805923461914062
    9. '(len' → logprob: -10.055923461914062
    10. '       ' → logprob: -11.680923461914062

Token 1162: '(dist' (ID: 78981)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01848141849040985
    2. '(dist' → logprob: -4.018481254577637
    3. ' dist' → logprob: -8.018481254577637
    4. '	dist' → logprob: -13.143481254577637
    5. '_dist' → logprob: -16.018482208251953
    6. '(' → logprob: -16.768482208251953
    7. 'Dist' → logprob: -18.018482208251953
    8. '.dist' → logprob: -18.518482208251953
    9. 'input' → logprob: -18.768482208251953
    10. '(distance' → logprob: -18.893482208251953

Token 1163: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5194063186645508
    2. '<' → logprob: -1.0194063186645508
    3. '<n' → logprob: -3.644406318664551
    4. ')<' → logprob: -4.644406318664551
    5. ')' → logprob: -5.769406318664551
    6. '<len' → logprob: -6.394406318664551
    7. '<size' → logprob: -6.769406318664551
    8. '<p' → logprob: -7.394406318664551
    9. '()<' → logprob: -8.01940631866455
    10. '<int' → logprob: -8.26940631866455

Token 1164: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.054411839693784714
    2. '<n' → logprob: -3.3044118881225586
    3. ' <' → logprob: -4.179411888122559
    4. '<len' → logprob: -7.304411888122559
    5. '<size' → logprob: -9.304411888122559
    6. '<p' → logprob: -10.179411888122559
    7. '<num' → logprob: -10.679411888122559
    8. '<std' → logprob: -10.804411888122559
    9. '<int' → logprob: -10.929411888122559
    10. '<w' → logprob: -11.179411888122559

Token 1165: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003818140830844641
    2. ' n' → logprob: -7.875381946563721
    3. 'dist' → logprob: -13.750381469726562
    4. '   ' → logprob: -15.500381469726562
    5. '[n' → logprob: -16.125381469726562
    6. '	n' → logprob: -16.500381469726562
    7. '(n' → logprob: -16.500381469726562
    8. '1' → logprob: -16.750381469726562
    9. '
' → logprob: -16.750381469726562
    10. ' dist' → logprob: -17.125381469726562

Token 1166: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3272760212421417
    2. ':' → logprob: -1.3272759914398193
    3. '       ' → logprob: -4.702276229858398
    4. '           ' → logprob: -6.327276229858398
    5. ' and' → logprob: -6.577276229858398
    6. 'and' → logprob: -7.077276229858398
    7. '):
' → logprob: -8.577276229858398
    8. '   ' → logprob: -9.202276229858398
    9. '=' → logprob: -9.202276229858398
    10. '{' → logprob: -9.327276229858398

Token 1167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1223778948187828
    2. '       ' → logprob: -2.247377872467041
    3. 'dist' → logprob: -5.497377872467041
    4. '   ' → logprob: -6.497377872467041
    5. ' line' → logprob: -6.497377872467041
    6. 'line' → logprob: -6.622377872467041
    7. '```' → logprob: -7.747377872467041
    8. 'input' → logprob: -9.2473783493042
    9. ' dist' → logprob: -9.4973783493042
    10. ' lines' → logprob: -9.7473783493042

Token 1168: ' row' (ID: 5225)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6027603149414062
    2. 'row' (adapté à ' row') → logprob: -1.4777603149414062
    3. ' row' → logprob: -2.2277603149414062
    4. '           ' → logprob: -2.9777603149414062
    5. ' dist' → logprob: -2.9777603149414062
    6. 'line' → logprob: -4.602760314941406
    7. ' line' → logprob: -5.477760314941406
    8. '       ' → logprob: -7.977760314941406
    9. '   ' → logprob: -8.352760314941406
    10. '               ' → logprob: -9.852760314941406

Token 1169: '_vals' (ID: 71688)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14404568076133728
    2. '=' → logprob: -2.01904559135437
    3. '.append' → logprob: -6.769045829772949
    4. '=line' → logprob: -9.14404582977295
    5. '           ' → logprob: -10.14404582977295
    6. '.extend' → logprob: -10.76904582977295
    7. '_line' → logprob: -11.14404582977295
    8. ' +=' → logprob: -11.26904582977295
    9. '+=' → logprob: -11.51904582977295
    10. 'line' → logprob: -12.26904582977295

Token 1170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3438684642314911
    2. ' =' → logprob: -1.4688684940338135
    3. '.extend' → logprob: -3.0938684940338135
    4. '=line' → logprob: -4.468868255615234
    5. '+=' → logprob: -5.843868255615234
    6. ' +=' → logprob: -7.093868255615234
    7. '           ' → logprob: -9.093868255615234
    8. '(line' → logprob: -10.218868255615234
    9. '.append' → logprob: -10.343868255615234
    10. 'line' → logprob: -10.343868255615234

Token 1171: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0004497381451074034
    2. ' list' → logprob: -7.7504496574401855
    3. 'input' → logprob: -10.875450134277344
    4. '   ' → logprob: -17.000450134277344
    5. '[' → logprob: -17.875450134277344
    6. ' input' → logprob: -18.000450134277344
    7. '[]' → logprob: -18.625450134277344
    8. '           ' → logprob: -18.750450134277344
    9. '[]
' → logprob: -19.125450134277344
    10. '[list' → logprob: -19.125450134277344

Token 1172: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.875004768371582
    3. 'map' → logprob: -13.875004768371582
    4. '(
' → logprob: -14.500004768371582
    5. '=' → logprob: -14.875004768371582
    6. '(int' → logprob: -15.125004768371582
    7. '	map' → logprob: -17.625003814697266
    8. '   ' → logprob: -18.375003814697266
    9. '.map' → logprob: -18.750003814697266
    10. ' =' → logprob: -18.750003814697266

Token 1173: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011059612035751343
    2. 'int' → logprob: -4.511059761047363
    3. '[int' → logprob: -12.386059761047363
    4. '=int' → logprob: -12.761059761047363
    5. '(str' → logprob: -13.261059761047363
    6. '<int' → logprob: -14.011059761047363
    7. ' int' → logprob: -14.136059761047363
    8. '(lambda' → logprob: -14.636059761047363
    9. '(' → logprob: -15.011059761047363
    10. ',int' → logprob: -15.386059761047363

Token 1174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18949151039123535
    2. '(input' → logprob: -2.0644915103912354
    3. ',input' → logprob: -3.1894915103912354
    4. '(sys' → logprob: -6.189491271972656
    5. '(line' → logprob: -6.939491271972656
    6. 'input' → logprob: -6.939491271972656
    7. ' ,' → logprob: -8.189491271972656
    8. '           ' → logprob: -9.939491271972656
    9. ',line' → logprob: -10.064491271972656
    10. 'sys' → logprob: -10.564491271972656

Token 1175: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0016275715315714478
    2. ' input' → logprob: -6.501627445220947
    3. 'sys' → logprob: -9.126627922058105
    4. 'line' → logprob: -11.876627922058105
    5. '(input' → logprob: -12.001627922058105
    6. ')' → logprob: -13.876627922058105
    7. '           ' → logprob: -14.251627922058105
    8. ' sys' → logprob: -14.876627922058105
    9. '               ' → logprob: -15.001627922058105
    10. '[input' → logprob: -15.001627922058105

Token 1176: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.028854472562670708
    2. '.readline' → logprob: -4.4038543701171875
    3. '[line' → logprob: -5.4038543701171875
    4. '(input' → logprob: -5.7788543701171875
    5. '(line' → logprob: -6.1538543701171875
    6. '(lines' → logprob: -7.1538543701171875
    7. '_line' → logprob: -7.1538543701171875
    8. '().' → logprob: -7.2788543701171875
    9. 'Lines' → logprob: -7.2788543701171875
    10. '[pos' → logprob: -7.4038543701171875

Token 1177: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.625003814697266
    3. ' [' → logprob: -15.625003814697266
    4. '   ' → logprob: -16.500003814697266
    5. '[position' → logprob: -16.750003814697266
    6. '[line' → logprob: -17.125003814697266
    7. '```' → logprob: -17.500003814697266
    8. '           ' → logprob: -17.875003814697266
    9. '       ' → logprob: -18.000003814697266
    10. '[str' → logprob: -18.000003814697266

Token 1178: '].' (ID: 1651)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.011963717639446259
    2. '].' → logprob: -5.011963844299316
    3. '][' → logprob: -5.261963844299316
    4. 'pos' → logprob: -10.761963844299316
    5. ']' → logprob: -11.261963844299316
    6. '[' → logprob: -12.636963844299316
    7. '(pos' → logprob: -13.261963844299316
    8. ',pos' → logprob: -13.261963844299316
    9. '.pop' → logprob: -13.886963844299316
    10. '.split' → logprob: -14.011963844299316

Token 1179: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.21591249108314514
    2. 'pos' → logprob: -2.2159125804901123
    3. 'split' → logprob: -2.4659125804901123
    4. '[pos' → logprob: -8.590912818908691
    5. 'rstrip' → logprob: -11.465912818908691
    6. 'pop' → logprob: -11.715912818908691
    7. '.strip' → logprob: -13.590912818908691
    8. ' pos' → logprob: -13.715912818908691
    9. '
' → logprob: -13.840912818908691
    10. ' strip' → logprob: -14.215912818908691

Token 1180: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.153795766294934e-06
    2. '()' → logprob: -12.375005722045898
    3. '.split' → logprob: -13.250005722045898
    4. '()[' → logprob: -17.6250057220459
    5. '())' → logprob: -18.7500057220459
    6. '()
' → logprob: -18.7500057220459
    7. '().'' → logprob: -18.8750057220459
    8. '.' → logprob: -19.1250057220459
    9. ' ().' → logprob: -19.1250057220459
    10. '()).' → logprob: -19.1250057220459

Token 1181: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.375
    3. '.split' → logprob: -16.625
    4. '(split' → logprob: -17.5
    5. '_split' → logprob: -19.25
    6. 'rstrip' → logprob: -20.25
    7. '```' → logprob: -20.75
    8. '
' → logprob: -21.125
    9. 'spl' → logprob: -21.375
    10. ' ' → logprob: -21.5

Token 1182: '()))
' (ID: 24521)
  Prédit: '()))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))
' → logprob: -0.05823575332760811
    2. '()))' → logprob: -2.9332356452941895
    3. '()' → logprob: -5.8082356452941895
    4. '()
' → logprob: -8.558236122131348
    5. '))
' → logprob: -9.683236122131348
    6. '))' → logprob: -10.683236122131348
    7. '()[' → logprob: -11.308236122131348
    8. '()));' → logprob: -11.308236122131348
    9. '())))
' → logprob: -11.433236122131348
    10. '()))
' → logprob: -11.683236122131348

Token 1183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002136697992682457
    2. 'pos' → logprob: -6.502136707305908
    3. '               ' → logprob: -7.877136707305908
    4. '<|end|>' → logprob: -9.87713623046875
    5. '[pos' → logprob: -10.00213623046875
    6. ')' → logprob: -10.25213623046875
    7. '<|end|>' → logprob: -10.87713623046875
    8. ' pos' → logprob: -10.87713623046875
    9. '(pos' → logprob: -11.00213623046875
    10. ',pos' → logprob: -11.25213623046875

Token 1184: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.004511058330535889
    2. '           ' → logprob: -5.629510879516602
    3. 'dist' → logprob: -7.754510879516602
    4. ' pos' → logprob: -7.754510879516602
    5. '       ' → logprob: -11.129510879516602
    6. 'if' → logprob: -11.254510879516602
    7. 'for' → logprob: -11.379510879516602
    8. '```' → logprob: -12.379510879516602
    9. '               ' → logprob: -12.504510879516602
    10. '[pos' → logprob: -13.004510879516602

Token 1185: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0020023921970278025
    2. ' +=' → logprob: -6.252002239227295
    3. '           ' → logprob: -10.002002716064453
    4. ']+=' → logprob: -11.377002716064453
    5. '=' → logprob: -11.627002716064453
    6. '       ' → logprob: -12.502002716064453
    7. '```' → logprob: -13.502002716064453
    8. '   ' → logprob: -14.252002716064453
    9. '-=' → logprob: -14.377002716064453
    10. '               ' → logprob: -15.252002716064453

Token 1186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.085517113911919e-05
    2. 'len' → logprob: -10.00005054473877
    3. ' ' → logprob: -12.50005054473877
    4. '0' → logprob: -14.12505054473877
    5. '   ' → logprob: -15.37505054473877
    6. '(len' → logprob: -15.62505054473877
    7. '+' → logprob: -16.125051498413086
    8. 'n' → logprob: -16.500051498413086
    9. '
' → logprob: -17.000051498413086
    10. ' len' → logprob: -17.125051498413086

Token 1187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. '0' → logprob: -12.625003814697266
    3. ' ' → logprob: -14.375003814697266
    4. 'len' → logprob: -15.750003814697266
    5. '(' → logprob: -16.125003814697266
    6. '(len' → logprob: -17.250003814697266
    7. '+' → logprob: -17.875003814697266
    8. '   ' → logprob: -18.000003814697266
    9. '```' → logprob: -18.125003814697266
    10. '#' → logprob: -19.250003814697266

Token 1188: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01858755387365818
    2. 'dist' → logprob: -4.018587589263916
    3. '       ' → logprob: -8.018587112426758
    4. ' dist' → logprob: -9.768587112426758
    5. '(dist' → logprob: -10.893587112426758
    6. '               ' → logprob: -11.143587112426758
    7. '```' → logprob: -12.018587112426758
    8. '.dist' → logprob: -12.393587112426758
    9. '   ' → logprob: -13.018587112426758
    10. '	dist' → logprob: -13.518587112426758

Token 1189: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6503434777259827
    2. '           ' → logprob: -0.9003434777259827
    3. 'dist' → logprob: -2.650343418121338
    4. ' dist' → logprob: -7.400343418121338
    5. '```' → logprob: -8.025343894958496
    6. '               ' → logprob: -10.025343894958496
    7. '(dist' → logprob: -10.400343894958496
    8. '   ' → logprob: -10.650343894958496
    9. '	dist' → logprob: -11.525343894958496
    10. '.dist' → logprob: -11.900343894958496

Token 1190: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0012274926993995905
    2. '           ' → logprob: -7.376227378845215
    3. ' dist' → logprob: -7.876227378845215
    4. '       ' → logprob: -8.501227378845215
    5. '               ' → logprob: -12.251227378845215
    6. 'row' → logprob: -12.251227378845215
    7. 'if' → logprob: -12.501227378845215
    8. '	dist' → logprob: -13.376227378845215
    9. '```' → logprob: -13.626227378845215
    10. '   ' → logprob: -14.126227378845215

Token 1191: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.08687793463468552
    2. '.append' → logprob: -2.5868778228759766
    3. '.' → logprob: -4.836877822875977
    4. '[-' → logprob: -12.086877822875977
    5. '.ext' → logprob: -12.086877822875977
    6. ' +=' → logprob: -12.336877822875977
    7. '+=' → logprob: -12.336877822875977
    8. '   ' → logprob: -13.086877822875977
    9. '           ' → logprob: -14.711877822875977
    10. '[len' → logprob: -14.961877822875977

Token 1192: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0011706985533237457
    2. 'row' → logprob: -6.751170635223389
    3. ' row' → logprob: -15.376171112060547
    4. '(' → logprob: -16.251171112060547
    5. '=row' → logprob: -16.501171112060547
    6. '[row' → logprob: -17.501171112060547
    7. '(
' → logprob: -17.876171112060547
    8. ',row' → logprob: -18.126171112060547
    9. '	row' → logprob: -18.501171112060547
    10. '(line' → logprob: -19.251171112060547

Token 1193: '_vals' (ID: 71688)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.1578022688627243
    2. '(row' → logprob: -2.9078023433685303
    3. '[len' → logprob: -3.6578023433685303
    4. '[' → logprob: -4.157802104949951
    5. ')' → logprob: -4.407802104949951
    6. '[-' → logprob: -5.032802104949951
    7. '[val' → logprob: -5.157802104949951
    8. '[line' → logprob: -5.407802104949951
    9. '_vals' → logprob: -5.657802104949951
    10. '       ' → logprob: -5.907802104949951

Token 1194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006450323387980461
    2. '<|end|>' → logprob: -5.506450176239014
    3. '       ' → logprob: -6.131450176239014
    4. '<|end|>' → logprob: -8.881450653076172
    5. ')
' → logprob: -10.381450653076172
    6. '           ' → logprob: -12.506450653076172
    7. '   ' → logprob: -12.756450653076172
    8. '[' → logprob: -13.006450653076172
    9. ' )' → logprob: -13.756450653076172
    10. ')return' → logprob: -13.881450653076172

Token 1195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23855213820934296
    2. '   ' → logprob: -1.8635520935058594
    3. '           ' → logprob: -3.2385520935058594
    4. '
' → logprob: -4.863552093505859
    5. 'builder' → logprob: -4.988552093505859
    6. 'tree' → logprob: -6.738552093505859
    7. ' builder' → logprob: -7.238552093505859
    8. '        
' → logprob: -8.11355209350586
    9. '    
' → logprob: -8.48855209350586
    10. '```' → logprob: -8.73855209350586

Token 1196: ' tb' (ID: 25078)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.825526237487793
    2. 'builder' → logprob: -1.575526237487793
    3. ' builder' → logprob: -1.825526237487793
    4. '   ' → logprob: -1.950526237487793
    5. 'tree' → logprob: -3.950526237487793
    6. ' tree' → logprob: -3.950526237487793
    7. '           ' → logprob: -5.325526237487793
    8. '
' → logprob: -6.075526237487793
    9. 'tb' (adapté à ' tb') → logprob: -6.075526237487793
    10. ' tb' → logprob: -6.700526237487793

Token 1197: ' =' (ID: 314)
  Prédit: '.build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -0.16785407066345215
    2. ' =' → logprob: -1.9178540706634521
    3. '.' → logprob: -5.292854309082031
    4. '=' → logprob: -6.042854309082031
    5. '.b' → logprob: -9.042854309082031
    6. ' .' → logprob: -10.792854309082031
    7. '   ' → logprob: -11.667854309082031
    8. '.=' → logprob: -11.667854309082031
    9. '
' → logprob: -11.917854309082031
    10. '\.' → logprob: -12.167854309082031

Token 1198: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.03805858641862869
    2. ' Tree' → logprob: -3.2880585193634033
    3. '	Tree' → logprob: -11.038058280944824
    4. '(Tree' → logprob: -14.538058280944824
    5. '<Tree' → logprob: -14.663058280944824
    6. '   ' → logprob: -16.41305923461914
    7. '.Tree' → logprob: -16.66305923461914
    8. '_tree' → logprob: -18.16305923461914
    9. 'Trees' → logprob: -19.91305923461914
    10. '    ' → logprob: -20.03805923461914

Token 1199: 'Builder' (ID: 4542)
  Prédit: 'Builder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Builder' → logprob: -8.537868779967539e-06
    2. 'uilder' → logprob: -12.250008583068848
    3. 'builder' → logprob: -12.750008583068848
    4. 'B' → logprob: -14.500008583068848
    5. 'uild' → logprob: -16.87500762939453
    6. 'Build' → logprob: -17.12500762939453
    7. '_builder' → logprob: -17.12500762939453
    8. '       ' → logprob: -17.75000762939453
    9. 'b' → logprob: -18.37500762939453
    10. '.Builder' → logprob: -18.50000762939453

Token 1200: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -3.881560041918419e-05
    2. 'dist' → logprob: -10.625039100646973
    3. '(' → logprob: -11.625039100646973
    4. '(tb' → logprob: -12.750039100646973
    5. '(
' → logprob: -13.375039100646973
    6. '(distance' → logprob: -14.625039100646973
    7. '	dist' → logprob: -16.375038146972656
    8. '(d' → logprob: -16.500038146972656
    9. ' dist' → logprob: -16.625038146972656
    10. '(diff' → logprob: -16.750038146972656

Token 1201: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1188586875796318
    2. '.build' → logprob: -2.493858575820923
    3. ').' → logprob: -4.118858814239502
    4. ')
' → logprob: -4.368858814239502
    5. '       ' → logprob: -8.118858337402344
    6. '   ' → logprob: -9.743858337402344
    7. '(build' → logprob: -10.243858337402344
    8. '())' → logprob: -10.243858337402344
    9. '()
' → logprob: -10.868858337402344
    10. '
' → logprob: -11.118858337402344

Token 1202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01318258699029684
    2. 'tb' → logprob: -4.763182640075684
    3. '   ' → logprob: -5.638182640075684
    4. '```' → logprob: -7.763182640075684
    5. ' tb' → logprob: -8.138182640075684
    6. '           ' → logprob: -9.138182640075684
    7. '	tb' → logprob: -9.388182640075684
    8. '        
' → logprob: -11.388182640075684
    9. '.tb' → logprob: -11.638182640075684
    10. '(tb' → logprob: -11.888182640075684

Token 1203: ' tb' (ID: 25078)
  Prédit: 'tb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tb' (adapté à ' tb') → logprob: -0.10577494651079178
    2. ' tb' → logprob: -2.6057748794555664
    3. '       ' → logprob: -3.7307748794555664
    4. 'build' → logprob: -6.105774879455566
    5. '	tb' → logprob: -9.605774879455566
    6. '```' → logprob: -9.605774879455566
    7. '   ' → logprob: -10.355774879455566
    8. '(tb' → logprob: -10.480774879455566
    9. ' build' → logprob: -10.730774879455566
    10. '.tb' → logprob: -10.855774879455566

Token 1204: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -0.003221921855583787
    2. '.' → logprob: -5.7532219886779785
    3. 'build' → logprob: -10.12822151184082
    4. ' .' → logprob: -13.12822151184082
    5. '	build' → logprob: -14.87822151184082
    6. '.mainloop' → logprob: -14.87822151184082
    7. '.run' → logprob: -15.25322151184082
    8. ' build' → logprob: -15.37822151184082
    9. '\.' → logprob: -15.50322151184082
    10. '​.' → logprob: -15.87822151184082

Token 1205: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1968461275100708
    2. '   ' → logprob: -2.3218460083007812
    3. '<|end|>' → logprob: -2.5718460083007812
    4. '
' → logprob: -5.821846008300781
    5. '        
' → logprob: -7.821846008300781
    6. '    
' → logprob: -8.071846008300781
    7. '<|end|>' → logprob: -8.696846008300781
    8. '```' → logprob: -8.946846008300781
    9. '           ' → logprob: -9.821846008300781
    10. 'print' → logprob: -10.321846008300781

Token 1206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2851180136203766
    2. '   ' → logprob: -1.5351179838180542
    3. '<|end|>' → logprob: -3.9101181030273438
    4. 'print' → logprob: -5.160118103027344
    5. '```' → logprob: -5.410118103027344
    6. '    
' → logprob: -7.285118103027344
    7. '        
' → logprob: -7.285118103027344
    8. '
' → logprob: -7.285118103027344
    9. '           ' → logprob: -9.535118103027344
    10. '``' → logprob: -9.535118103027344

Token 1207: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3811796009540558
    2. 'degrees' → logprob: -2.1311795711517334
    3. '       ' → logprob: -2.6311795711517334
    4. '   ' → logprob: -2.7561795711517334
    5. 'internal' → logprob: -3.5061795711517334
    6. 'deg' → logprob: -3.8811795711517334
    7. 'result' (adapté à ' result') → logprob: -6.0061798095703125
    8. 'de' → logprob: -6.1311798095703125
    9. '```' → logprob: -6.5061798095703125
    10. 'int' → logprob: -6.7561798095703125

Token 1208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7673388719558716
    2. '.' → logprob: -1.5173388719558716
    3. '.get' → logprob: -1.7673388719558716
    4. '   ' → logprob: -2.642338752746582
    5. '().' → logprob: -3.392338752746582
    6. '       ' → logprob: -4.267338752746582
    7. '=' → logprob: -4.892338752746582
    8. '._' → logprob: -4.892338752746582
    9. '.append' → logprob: -6.517338752746582
    10. '.=' → logprob: -6.517338752746582

Token 1209: ' tb' (ID: 25078)
  Prédit: 'tb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tb' → logprob: -0.25193095207214355
    2. ' tb' → logprob: -1.5019309520721436
    3. '(tb' → logprob: -13.501931190490723
    4. '	tb' → logprob: -14.876931190490723
    5. '_tb' → logprob: -16.251930236816406
    6. '.tb' → logprob: -18.626930236816406
    7. ' ' → logprob: -18.876930236816406
    8. '   ' → logprob: -20.251930236816406
    9. '\t' → logprob: -20.751930236816406
    10. 'Tb' → logprob: -21.126930236816406

Token 1210: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -4.966313281329349e-05
    2. 'get' → logprob: -10.625049591064453
    3. '
' → logprob: -11.000049591064453
    4. '.' → logprob: -12.125049591064453
    5. '_get' → logprob: -14.375049591064453
    6. '<|end|>' → logprob: -14.375049591064453
    7. ' .' → logprob: -14.875049591064453
    8. '```' → logprob: -15.250049591064453
    9. '#get' → logprob: -15.625049591064453
    10. '.mainloop' → logprob: -15.625049591064453

Token 1211: '_internal' (ID: 56366)
  Prédit: '_internal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_internal' → logprob: -5.836499985889532e-05
    2. 'internal' → logprob: -9.7500581741333
    3. '_inter' → logprob: -19.500059127807617
    4. '_in' → logprob: -19.875059127807617
    5. '_INTERNAL' → logprob: -19.875059127807617
    6. ' internal' → logprob: -20.250059127807617
    7. 'Internal' → logprob: -20.625059127807617
    8. '_external' → logprob: -20.750059127807617
    9. '_inner' → logprob: -21.375059127807617
    10. '_intr' → logprob: -21.375059127807617

Token 1212: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -7.896309739408025e-07
    2. 'degrees' → logprob: -14.125000953674316
    3. 'de' → logprob: -17.875
    4. 'Degrees' → logprob: -18.625
    5. '\' → logprob: -19.5
    6. '	de' → logprob: -19.625
    7. '_degree' → logprob: -20.75
    8. '```' → logprob: -20.75
    9. '
' → logprob: -21.625
    10. '_scores' → logprob: -22.375

Token 1213: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -6.704273118884885e-07
    2. 'gree' → logprob: -15.375000953674316
    3. 'degrees' → logprob: -15.875000953674316
    4. 'gre' → logprob: -16.375
    5. 'g' → logprob: -17.25
    6. 'gress' → logprob: -18.125
    7. 'gr' → logprob: -18.625
    8. '```' → logprob: -19.625
    9. 'eg' → logprob: -20.125
    10. '>' → logprob: -21.125

Token 1214: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06201619654893875
    2. '()
' → logprob: -2.812016248703003
    3. '()[' → logprob: -10.812016487121582
    4. '()

' → logprob: -11.312016487121582
    5. '()\' → logprob: -12.437016487121582
    6. '()
' → logprob: -12.562016487121582
    7. '().' → logprob: -13.562016487121582
    8. '()`' → logprob: -13.687016487121582
    9. '[' → logprob: -13.812016487121582
    10. '[]
' → logprob: -14.187016487121582

Token 1215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005525203887373209
    2. 'print' → logprob: -5.2555251121521
    3. '   ' → logprob: -8.630525588989258
    4. '```' → logprob: -9.255525588989258
    5. 'for' → logprob: -11.755525588989258
    6. ' print' → logprob: -12.130525588989258
    7. '
' → logprob: -13.630525588989258
    8. '        
' → logprob: -13.880525588989258
    9. '           ' → logprob: -14.505525588989258
    10. ' for' → logprob: -14.880525588989258

Token 1216: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06608184427022934
    2. 'for' → logprob: -2.8160817623138428
    3. '       ' → logprob: -5.566082000732422
    4. '```' → logprob: -8.316082000732422
    5. '   ' → logprob: -10.691082000732422
    6. ' print' → logprob: -12.066082000732422
    7. ' for' → logprob: -12.691082000732422
    8. '
' → logprob: -13.191082000732422
    9. '``' → logprob: -13.566082000732422
    10. '#print' → logprob: -14.691082000732422

Token 1217: '('' (ID: 706)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.02004951797425747
    2. '('' → logprob: -4.020049571990967
    3. '(len' → logprob: -7.145049571990967
    4. '(result' → logprob: -7.520049571990967
    5. '("' → logprob: -7.895049571990967
    6. 'result' → logprob: -9.145049095153809
    7. '(' → logprob: -9.770049095153809
    8. '*' → logprob: -10.645049095153809
    9. 'len' → logprob: -12.770049095153809
    10. '(*(' → logprob: -13.895049095153809

Token 1218: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.026682598516345024
    2. 'len' → logprob: -4.151682376861572
    3. '(len' → logprob: -5.276682376861572
    4. '*' → logprob: -6.151682376861572
    5. '"' → logprob: -6.776682376861572
    6. '[len' → logprob: -7.276682376861572
    7. ''*' → logprob: -7.776682376861572
    8. ' '.' → logprob: -7.901682376861572
    9. '{}' → logprob: -8.27668285369873
    10. '('' → logprob: -8.90168285369873

Token 1219: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0007312587113119662
    2. '.join' → logprob: -7.375731468200684
    3. '.' → logprob: -9.750731468200684
    4. 'print' → logprob: -10.375731468200684
    5. '```' → logprob: -12.125731468200684
    6. ''.' → logprob: -12.375731468200684
    7. 'jo' → logprob: -13.500731468200684
    8. ' join' → logprob: -13.750731468200684
    9. 'joined' → logprob: -14.375731468200684
    10. '(join' → logprob: -14.750731468200684

Token 1220: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.03218182176351547
    2. 'map' → logprob: -3.532181739807129
    3. '(str' → logprob: -6.032181739807129
    4. 'str' → logprob: -11.032181739807129
    5. ' map' → logprob: -12.032181739807129
    6. '[str' → logprob: -12.157181739807129
    7. '	map' → logprob: -14.907181739807129
    8. '(list' → logprob: -15.532181739807129
    9. '.map' → logprob: -16.157182693481445
    10. '_map' → logprob: -16.657182693481445

Token 1221: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.03806202858686447
    2. 'str' → logprob: -3.28806209564209
    3. '=str' → logprob: -11.28806209564209
    4. '[str' → logprob: -12.03806209564209
    5. '```' → logprob: -13.66306209564209
    6. ' str' → logprob: -15.28806209564209
    7. '	str' → logprob: -15.28806209564209
    8. '   ' → logprob: -15.53806209564209
    9. ',str' → logprob: -16.413061141967773
    10. '
' → logprob: -16.663061141967773

Token 1222: ',result' (ID: 129217)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00020449401927180588
    2. '(tb' → logprob: -8.875204086303711
    3. ',result' → logprob: -10.500204086303711
    4. 'result' → logprob: -10.500204086303711
    5. ',' → logprob: -12.250204086303711
    6. '(' → logprob: -12.625204086303711
    7. '(results' → logprob: -14.750204086303711
    8. ')' → logprob: -15.500204086303711
    9. '[result' → logprob: -15.500204086303711
    10. '),' → logprob: -15.875204086303711

Token 1223: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0067381043918430805
    2. ')))' → logprob: -5.006738185882568
    3. '))
' → logprob: -11.13173770904541
    4. ')' → logprob: -12.50673770904541
    5. '()))' → logprob: -13.00673770904541
    6. '       ' → logprob: -14.00673770904541
    7. '   ' → logprob: -14.25673770904541
    8. '))))' → logprob: -15.13173770904541
    9. ' ))' → logprob: -16.256738662719727
    10. ')))
' → logprob: -16.381738662719727

Token 1224: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1225: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004637553822249174
    2. '__' → logprob: -5.379637718200684
    3. '_' → logprob: -11.754637718200684
    4. ' _' → logprob: -12.004637718200684
    5. ' ' → logprob: -13.504637718200684
    6. ' main' → logprob: -15.004637718200684
    7. '_name' → logprob: -15.129637718200684
    8. ' ___' → logprob: -15.129637718200684
    9. ' ' → logprob: -15.254637718200684
    10. ' True' → logprob: -15.879637718200684

Token 1226: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006192441564053297
    2. '<|end|>' → logprob: -5.756192207336426
    3. ' __' → logprob: -7.756192207336426
    4. '__":
' → logprob: -7.881192207336426
    5. '_' → logprob: -7.881192207336426
    6. '__.__' → logprob: -8.506192207336426
    7. '.' → logprob: -8.631192207336426
    8. '__':
' → logprob: -8.881192207336426
    9. '```' → logprob: -9.006192207336426
    10. 'def' → logprob: -9.131192207336426

Token 1227: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004049552138894796
    2. '==' → logprob: -6.254049777984619
    3. '__.__' → logprob: -6.629049777984619
    4. '=='' → logprob: -8.254049301147461
    5. '=="' → logprob: -8.379049301147461
    6. ' ==' → logprob: -9.004049301147461
    7. '```' → logprob: -9.629049301147461
    8. '__.' → logprob: -10.379049301147461
    9. '__('' → logprob: -10.754049301147461
    10. '___' → logprob: -11.504049301147461

Token 1228: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8414282202720642
    2. '```' → logprob: -1.591428279876709
    3. '__' → logprob: -2.091428279876709
    4. '==' → logprob: -2.841428279876709
    5. '.' → logprob: -3.341428279876709
    6. '   ' → logprob: -3.841428279876709
    7. '__.__' → logprob: -3.841428279876709
    8. '__":
' → logprob: -3.841428279876709
    9. '<|end|>' → logprob: -4.091428279876709
    10. '[' → logprob: -4.716428279876709

Token 1229: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4745238423347473
    2. '"' → logprob: -0.9745238423347473
    3. '__' → logprob: -7.724524021148682
    4. ' "__' → logprob: -12.849523544311523
    5. ' '__' → logprob: -13.974523544311523
    6. '`' → logprob: -15.474523544311523
    7. ''"' → logprob: -16.099523544311523
    8. '   ' → logprob: -16.224523544311523
    9. '('__' → logprob: -16.224523544311523
    10. ''name' → logprob: -16.474523544311523

Token 1230: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12825356423854828
    2. '__' → logprob: -2.12825345993042
    3. '"' → logprob: -7.12825345993042
    4. ''' → logprob: -8.003253936767578
    5. '__":
' → logprob: -9.253253936767578
    6. '_main' → logprob: -10.128253936767578
    7. 'name' → logprob: -11.378253936767578
    8. '____' → logprob: -11.628253936767578
    9. ' main' → logprob: -11.628253936767578
    10. '__':
' → logprob: -11.753253936767578

Token 1231: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.14422257244586945
    2. '__' → logprob: -2.1442224979400635
    3. '__':
' → logprob: -4.144222736358643
    4. '():
' → logprob: -7.394222736358643
    5. '.' → logprob: -9.144222259521484
    6. '__.' → logprob: -9.394222259521484
    7. '__["' → logprob: -9.644222259521484
    8. '__
' → logprob: -9.644222259521484
    9. '__.__' → logprob: -9.894222259521484
    10. '__()
' → logprob: -10.019222259521484

Token 1232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2763678729534149
    2. 'main' → logprob: -1.5263679027557373
    3. ' main' → logprob: -4.026367664337158
    4. '	main' → logprob: -5.401367664337158
    5. '```' → logprob: -7.026367664337158
    6. '(main' → logprob: -7.776367664337158
    7. 'def' → logprob: -8.026368141174316
    8. '_main' → logprob: -9.776368141174316
    9. '    
' → logprob: -10.526368141174316
    10. '[' → logprob: -10.776368141174316

Token 1233: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.3306015716807451e-05
    2. ' main' → logprob: -11.25001335144043
    3. '	main' → logprob: -15.50001335144043
    4. '   ' → logprob: -16.12501335144043
    5. '_main' → logprob: -18.62501335144043
    6. '(main' → logprob: -18.87501335144043
    7. '```' → logprob: -21.37501335144043
    8. '.main' → logprob: -21.87501335144043
    9. '__' → logprob: -22.00001335144043
    10. '
' → logprob: -22.75001335144043

Token 1234: '()' (ID: 416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38582170009613037
    2. '       ' → logprob: -1.2608217000961304
    3. '<|end|>' → logprob: -4.01082181930542
    4. '   ' → logprob: -4.51082181930542
    5. '               ' → logprob: -6.01082181930542
    6. ':' → logprob: -6.38582181930542
    7. '()' → logprob: -7.13582181930542
    8. '.' → logprob: -7.51082181930542
    9. 'def' → logprob: -8.510821342468262
    10. '(' → logprob: -8.510821342468262


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1232
Tokens correctement prédits (1ère position, stricte): 495
Tokens correctement prédits (1ère position, avec adaptation): 537
Tokens correctement prédits (top 10): 958
Précision stricte (1ère position): 40.18%
Précision adaptée (1ère position): 43.59%
Précision (top 10): 77.76%
================================================================================
