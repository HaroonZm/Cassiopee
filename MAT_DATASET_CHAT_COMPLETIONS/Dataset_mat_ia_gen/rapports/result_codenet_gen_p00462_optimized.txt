================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect

input = sys.stdin.readline

while True:
    d = int(input())
    if d == 0:
        break
    n = int(input())
    m = int(input())
    positions = [0] + [int(input()) for _ in range(n - 1)]
    positions.sort()

    total = 0
    for _ in range(m):
        k = int(input())
        idx = bisect.bisect_left(positions, k)
        candidates = []
        if idx < n:
            dist = abs(positions[idx] - k)
            dist = min(dist, d - dist)
            candidates.append(dist)
        if idx > 0:
            dist = abs(positions[idx - 1] - k)
            dist = min(dist, d - dist)
            candidates.append(dist)
        total += min(candidates)
    print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -6.170270353322849e-05
    2. 't' → logprob: -9.875061988830566
    3. 'ected' → logprob: -12.875061988830566
    4. 'e' → logprob: -12.875061988830566
    5. 'ec' → logprob: -13.250061988830566
    6. 'ection' → logprob: -14.125061988830566
    7. '```' → logprob: -14.125061988830566
    8. 'ectl' → logprob: -14.625061988830566
    9. 'truct' → logprob: -15.250061988830566
    10. '>' → logprob: -15.375061988830566

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016111204400658607
    2. '<|end|>' → logprob: -5.516111373901367
    3. '\' → logprob: -6.016111373901367
    4. '\n' → logprob: -6.141111373901367
    5. '' → logprob: -6.391111373901367
    6. '
' → logprob: -6.641111373901367
    7. '

' → logprob: -6.766111373901367
    8. 'import' → logprob: -7.391111373901367
    9. '```' → logprob: -7.766111373901367
    10. ',' → logprob: -8.016111373901367

Token 7: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5449424386024475
    2. '.' → logprob: -1.7949423789978027
    3. '
' → logprob: -2.1699423789978027
    4. 'import' → logprob: -3.2949423789978027
    5. '' → logprob: -3.6699423789978027
    6. '

' → logprob: -4.169942378997803
    7. 'from' → logprob: -4.669942378997803
    8. ',' → logprob: -4.794942378997803
    9. '```' → logprob: -4.794942378997803
    10. '#' → logprob: -5.419942378997803

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1857929825782776
    2. '.' → logprob: -1.8107929229736328
    3. '=' → logprob: -5.685792922973633
    4. ')' → logprob: -6.810792922973633
    5. '()' → logprob: -8.060792922973633
    6. '<|end|>' → logprob: -8.060792922973633
    7. '```' → logprob: -8.685792922973633
    8. ' (' → logprob: -8.810792922973633
    9. '[' → logprob: -9.560792922973633
    10. ' =' → logprob: -9.685792922973633

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.05924471467733383
    2. ' sys' → logprob: -3.0592446327209473
    3. 'input' → logprob: -4.559244632720947
    4. ' input' → logprob: -9.059245109558105
    5. '	sys' → logprob: -11.809245109558105
    6. 'lambda' → logprob: -12.184245109558105
    7. '=sys' → logprob: -14.059245109558105
    8. '```' → logprob: -15.309245109558105
    9. '(sys' → logprob: -15.684245109558105
    10. ' ' → logprob: -15.809245109558105

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.024645080789923668
    2. '.' → logprob: -3.7746450901031494
    3. '.stdout' → logprob: -7.14964485168457
    4. ' .' → logprob: -8.39964485168457
    5. '.input' → logprob: -8.64964485168457
    6. '.readline' → logprob: -9.64964485168457
    7. '.argv' → logprob: -9.64964485168457
    8. '.std' → logprob: -10.52464485168457
    9. '.path' → logprob: -10.64964485168457
    10. '.stderr' → logprob: -11.89964485168457

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.11015400290489197
    2. '.read' → logprob: -2.610153913497925
    3. '.' → logprob: -3.485153913497925
    4. '.readlines' → logprob: -9.360154151916504
    5. '.Read' → logprob: -10.485154151916504
    6. 'read' → logprob: -11.485154151916504
    7. '.buffer' → logprob: -13.235154151916504
    8. ' readline' → logprob: -14.110154151916504
    9. '.READ' → logprob: -14.110154151916504
    10. '```' → logprob: -14.360154151916504

Token 12: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.37608978152275085
    2. '(' → logprob: -1.2510898113250732
    3. '(
' → logprob: -4.251089572906494
    4. '()
' → logprob: -5.251089572906494
    5. 'def' → logprob: -6.126089572906494
    6. '
' → logprob: -7.126089572906494
    7. '()

' → logprob: -7.126089572906494
    8. '(n' → logprob: -7.501089572906494
    9. '()\' → logprob: -7.751089572906494
    10. ')' → logprob: -7.876089572906494

Token 13: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38776811957359314
    2. 'def' → logprob: -1.1377681493759155
    3. 'N' → logprob: -7.762768268585205
    4. 'class' → logprob: -8.637767791748047
    5. 'q' → logprob: -9.262767791748047
    6. '\' → logprob: -9.762767791748047
    7. 't' → logprob: -10.012767791748047
    8. 'from' → logprob: -10.762767791748047
    9. 'd' → logprob: -11.512767791748047
    10. 'a' → logprob: -11.637767791748047

Token 14: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18119698762893677
    2. ' True' → logprob: -1.806196928024292
    3. '  ' → logprob: -7.056197166442871
    4. ' not' → logprob: -8.181197166442871
    5. ' )' → logprob: -9.431197166442871
    6. 'True' → logprob: -9.681197166442871
    7. '    ' → logprob: -10.806197166442871
    8. ' ' → logprob: -10.931197166442871
    9. ' ,' → logprob: -11.181197166442871
    10. ' (' → logprob: -11.181197166442871

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004185009747743607
    2. ' :' → logprob: -5.629185199737549
    3. '():' → logprob: -7.504185199737549
    4. ':**' → logprob: -11.25418472290039
    5. ':
' → logprob: -11.75418472290039
    6. '   ' → logprob: -12.75418472290039
    7. ' ():' → logprob: -13.12918472290039
    8. '):' → logprob: -13.37918472290039
    9. '(:' → logprob: -13.75418472290039
    10. ':return' → logprob: -14.25418472290039

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011116440407931805
    2. '    
' → logprob: -5.1361165046691895
    3. ' ' → logprob: -6.2611165046691895
    4. '    ' → logprob: -6.2611165046691895
    5. ' 
' → logprob: -8.511116027832031
    6. ' readline' → logprob: -8.886116027832031
    7. '     
' → logprob: -9.011116027832031
    8. '    
    
' → logprob: -9.386116027832031
    9. ' line' → logprob: -9.636116027832031
    10. '  
' → logprob: -9.761116027832031

Token 17: ' d' (ID: 272)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.28627994656562805
    2. 'line' → logprob: -1.6612799167633057
    3. 'data' → logprob: -3.9112799167633057
    4. 'n' → logprob: -4.411280155181885
    5. ' data' → logprob: -4.786280155181885
    6. ' n' → logprob: -5.411280155181885
    7. ' try' → logprob: -6.036280155181885
    8. 'try' → logprob: -6.161280155181885
    9. 'query' → logprob: -6.286280155181885
    10. '   ' → logprob: -6.286280155181885

Token 18: ' =' (ID: 314)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ata' → logprob: -1.0013867616653442
    2. 'a' → logprob: -1.1263867616653442
    3. ' =' → logprob: -1.7513867616653442
    4. 'e' → logprob: -2.8763866424560547
    5. '=' → logprob: -2.8763866424560547
    6. 'o' → logprob: -4.751386642456055
    7. 'i' → logprob: -5.001386642456055
    8. 'at' → logprob: -6.876386642456055
    9. '   ' → logprob: -7.001386642456055
    10. ':' → logprob: -7.376386642456055

Token 19: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3140604496002197
    2. ' input' → logprob: -1.3140604496002197
    3. 'int' → logprob: -7.189060211181641
    4. ' int' → logprob: -10.68906021118164
    5. '=input' → logprob: -11.68906021118164
    6. 'sys' → logprob: -12.18906021118164
    7. ' sys' → logprob: -12.68906021118164
    8. '(input' → logprob: -13.81406021118164
    9. '	input' → logprob: -13.93906021118164
    10. ' ' → logprob: -14.18906021118164

Token 20: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0031872207764536142
    2. '(' → logprob: -5.75318717956543
    3. 'input' → logprob: -12.00318717956543
    4. '(sys' → logprob: -12.75318717956543
    5. ' (' → logprob: -15.25318717956543
    6. '(
' → logprob: -16.12818717956543
    7. '(in' → logprob: -17.00318717956543
    8. '(

' → logprob: -17.37818717956543
    9. '=input' → logprob: -17.50318717956543
    10. ' input' → logprob: -18.12818717956543

Token 21: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.021314606070518494
    2. '()' → logprob: -4.02131462097168
    3. '().' → logprob: -5.77131462097168
    4. '()))' → logprob: -11.02131462097168
    5. ' ())' → logprob: -11.64631462097168
    6. '())
' → logprob: -11.77131462097168
    7. ')' → logprob: -12.27131462097168
    8. '(' → logprob: -13.02131462097168
    9. '()
' → logprob: -13.64631462097168
    10. '();)' → logprob: -14.02131462097168

Token 22: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27957379817962646
    2. ' ' → logprob: -2.404573917388916
    3. '\n' → logprob: -3.279573917388916
    4. '   ' → logprob: -3.279573917388916
    5. '<|end|>' → logprob: -3.404573917388916
    6. 'if' (adapté à ' if') → logprob: -4.029573917388916
    7. '    ' → logprob: -4.279573917388916
    8. ' 
' → logprob: -5.654573917388916
    9. ')' → logprob: -6.029573917388916
    10. '  ' → logprob: -6.404573917388916

Token 24: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04892706871032715
    2. ' not' → logprob: -3.048927068710327
    3. 'd' → logprob: -8.048927307128906
    4. 'not' → logprob: -11.173927307128906
    5. ' ' → logprob: -12.048927307128906
    6. ' ' → logprob: -15.798927307128906
    7. '  ' → logprob: -17.173927307128906
    8. '	d' → logprob: -17.298927307128906
    9. '	not' → logprob: -17.423927307128906
    10. '```' → logprob: -17.798927307128906

Token 25: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3918750584125519
    2. ' ==' → logprob: -1.1418750286102295
    3. '<' → logprob: -5.516875267028809
    4. ' <' → logprob: -7.766875267028809
    5. '<=' → logprob: -8.516875267028809
    6. '==-' → logprob: -8.766875267028809
    7. '===' → logprob: -9.891875267028809
    8. ')' → logprob: -9.891875267028809
    9. '=' → logprob: -10.266875267028809
    10. ' ' → logprob: -10.641875267028809

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021745413541794
    2. ' ' → logprob: -2.350217342376709
    3. '-' → logprob: -11.975217819213867
    4. ' -' → logprob: -13.475217819213867
    5. '  ' → logprob: -14.350217819213867
    6. ')' → logprob: -14.350217819213867
    7. '   ' → logprob: -14.600217819213867
    8. '```' → logprob: -15.100217819213867
    9. '_' → logprob: -15.225217819213867
    10. '    ' → logprob: -15.787717819213867

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003370118502061814
    2. '-' → logprob: -8.125336647033691
    3. ' ' → logprob: -10.125336647033691
    4. ' -' → logprob: -15.375336647033691
    5. ''' → logprob: -15.625336647033691
    6. '```' → logprob: -15.875336647033691
    7. '   ' → logprob: -16.375337600708008
    8. ')' → logprob: -16.500337600708008
    9. '_' → logprob: -17.000337600708008
    10. '``' → logprob: -17.125337600708008

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003582263889256865
    2. ':
' → logprob: -8.000358581542969
    3. '   ' → logprob: -11.375358581542969
    4. ' :' → logprob: -11.500358581542969
    5. ':return' → logprob: -15.250358581542969
    6. '.' → logprob: -15.500358581542969
    7. '):' → logprob: -16.12535858154297
    8. '       ' → logprob: -16.50035858154297
    9. '  ' → logprob: -16.62535858154297
    10. '	break' → logprob: -16.62535858154297

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023313960060477257
    2. '   ' → logprob: -3.7733139991760254
    3. '	' → logprob: -11.148313522338867
    4. '	break' → logprob: -11.398313522338867
    5. '    ' → logprob: -11.773313522338867
    6. ' break' → logprob: -11.898313522338867
    7. '     ' → logprob: -12.148313522338867
    8. '\t' → logprob: -12.148313522338867
    9. '      ' → logprob: -12.898313522338867
    10. ' ' → logprob: -12.898313522338867

Token 30: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2516428232192993
    2. '       ' → logprob: -1.7516428232192993
    3. 'break' (adapté à ' break') → logprob: -3.7516427040100098
    4. '   ' → logprob: -3.8766427040100098
    5. '	break' → logprob: -5.37664270401001
    6. '\n' → logprob: -9.126643180847168
    7. '_break' → logprob: -11.376643180847168
    8. '\t' → logprob: -11.876643180847168
    9. ' ' → logprob: -12.001643180847168
    10. '           ' → logprob: -12.126643180847168

Token 31: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014577122405171394
    2. 's' → logprob: -5.6395769119262695
    3. 'n' → logprob: -6.2645769119262695
    4. '    
' → logprob: -6.8895769119262695
    5. 'numbers' → logprob: -6.8895769119262695
    6. 'prices' → logprob: -7.0145769119262695
    7. 'nums' → logprob: -7.2645769119262695
    8. 'data' → logprob: -7.7645769119262695
    9. 'd' → logprob: -8.01457691192627
    10. '    ' → logprob: -8.26457691192627

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011713845655322075
    2. '```' → logprob: -5.011713981628418
    3. '    
' → logprob: -6.511713981628418
    4. 'n' → logprob: -7.136713981628418
    5. 'd' → logprob: -7.636713981628418
    6. 's' → logprob: -7.886713981628418
    7. 'a' → logprob: -8.386713981628418
    8. 'num' → logprob: -8.761713981628418
    9. 'numbers' → logprob: -9.011713981628418
    10. 'data' → logprob: -9.136713981628418

Token 33: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45465293526649475
    2. 'data' → logprob: -2.454653024673462
    3. 'numbers' → logprob: -3.204653024673462
    4. 'arr' → logprob: -3.704653024673462
    5. 'nums' → logprob: -3.704653024673462
    6. ' data' → logprob: -3.704653024673462
    7. ' numbers' → logprob: -4.079652786254883
    8. 's' → logprob: -4.454652786254883
    9. 'd' → logprob: -4.454652786254883
    10. 'list' → logprob: -4.704652786254883

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020456630736589432
    2. '=' → logprob: -4.145456790924072
    3. 'umbers' → logprob: -5.770456790924072
    4. ' ' → logprob: -7.395456790924072
    5. '   ' → logprob: -8.270456314086914
    6. ',' → logprob: -8.645456314086914
    7. '    ' → logprob: -9.645456314086914
    8. 's' → logprob: -9.770456314086914
    9. 'ums' → logprob: -10.270456314086914
    10. '  ' → logprob: -10.770456314086914

Token 35: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1739339530467987
    2. ' int' → logprob: -1.923933982849121
    3. '[int' → logprob: -4.423933982849121
    4. '[]' → logprob: -7.048933982849121
    5. '[' → logprob: -8.923933982849121
    6. ' [' → logprob: -9.048933982849121
    7. 'list' → logprob: -9.173933982849121
    8. ' []' → logprob: -9.548933982849121
    9. 'len' → logprob: -9.923933982849121
    10. 'd' → logprob: -10.048933982849121

Token 36: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.7252845029579476e-05
    2. '(' → logprob: -10.625027656555176
    3. 'input' → logprob: -13.125027656555176
    4. ' (' → logprob: -14.125027656555176
    5. ' input' → logprob: -16.50002670288086
    6. ',input' → logprob: -16.75002670288086
    7. '=input' → logprob: -17.62502670288086
    8. '[input' → logprob: -18.75002670288086
    9. '<input' → logprob: -19.12502670288086
    10. ' ' → logprob: -19.37502670288086

Token 37: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018220998346805573
    2. '()' → logprob: -4.018220901489258
    3. ')' → logprob: -9.893220901489258
    4. '())
' → logprob: -11.518220901489258
    5. ' ())' → logprob: -12.018220901489258
    6. '()
' → logprob: -13.393220901489258
    7. '(' → logprob: -13.518220901489258
    8. '().' → logprob: -14.768220901489258
    9. '();)' → logprob: -14.768220901489258
    10. '())

' → logprob: -14.893220901489258

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8541044592857361
    2. 'arr' → logprob: -1.9791045188903809
    3. 'numbers' → logprob: -2.479104518890381
    4. 'data' → logprob: -3.104104518890381
    5. 's' → logprob: -3.479104518890381
    6. 'nums' → logprob: -3.854104518890381
    7. 'array' → logprob: -4.104104518890381
    8. 'list' → logprob: -4.104104518890381
    9. 'd' → logprob: -4.354104518890381
    10. 'cards' → logprob: -4.479104518890381

Token 39: ' m' (ID: 284)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.6162326335906982
    2. 'a' → logprob: -2.2412326335906982
    3. '   ' → logprob: -2.3662326335906982
    4. 'data' → logprob: -2.4912326335906982
    5. 'numbers' → logprob: -2.6162326335906982
    6. 'cards' → logprob: -2.9912326335906982
    7. 'nums' → logprob: -3.2412326335906982
    8. 'd' → logprob: -3.8662326335906982
    9. 'lst' → logprob: -3.8662326335906982
    10. 's' → logprob: -3.9912326335906982

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018199576064944267
    2. '=' → logprob: -4.018199443817139
    3. '=int' → logprob: -11.518199920654297
    4. ' ' → logprob: -11.893199920654297
    5. '   ' → logprob: -12.268199920654297
    6. ',' → logprob: -12.393199920654297
    7. '    ' → logprob: -12.518199920654297
    8. 'ap' → logprob: -12.768199920654297
    9. '=input' → logprob: -12.768199920654297
    10. 'aps' → logprob: -13.143199920654297

Token 41: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.40381503105163574
    2. ' int' → logprob: -1.1538150310516357
    3. '[int' → logprob: -4.278815269470215
    4. 'list' → logprob: -7.028815269470215
    5. ' list' → logprob: -7.403815269470215
    6. ' [' → logprob: -8.153815269470215
    7. '0' → logprob: -8.403815269470215
    8. ' n' → logprob: -8.528815269470215
    9. '[]' → logprob: -8.903815269470215
    10. ' ' → logprob: -8.903815269470215

Token 42: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.584239938296378e-06
    2. 'input' → logprob: -12.250007629394531
    3. ' (' → logprob: -13.250007629394531
    4. '(' → logprob: -14.500007629394531
    5. '=input' → logprob: -15.875007629394531
    6. '[input' → logprob: -16.12500762939453
    7. '(int' → logprob: -16.37500762939453
    8. '(sys' → logprob: -16.62500762939453
    9. ',input' → logprob: -17.37500762939453
    10. '<input' → logprob: -17.37500762939453

Token 43: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03227139264345169
    2. '()' → logprob: -3.532271385192871
    3. ')' → logprob: -6.032271385192871
    4. '())
' → logprob: -9.532271385192871
    5. '()
' → logprob: -10.282271385192871
    6. ' ())' → logprob: -11.907271385192871
    7. '();)' → logprob: -13.407271385192871
    8. '(' → logprob: -14.407271385192871
    9. '())

' → logprob: -14.407271385192871
    10. '()]' → logprob: -14.657271385192871

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0926501750946045
    2. 'data' → logprob: -2.3426501750946045
    3. 'list' → logprob: -2.4676501750946045
    4. 'numbers' → logprob: -2.9676501750946045
    5. 's' → logprob: -3.0926501750946045
    6. 'arr' → logprob: -3.4676501750946045
    7. 'a' → logprob: -3.5926501750946045
    8. 'array' → logprob: -3.5926501750946045
    9. 'nums' → logprob: -3.9676501750946045
    10. 'houses' → logprob: -3.9676501750946045

Token 45: ' positions' (ID: 15897)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4147948026657104
    2. 'cards' → logprob: -2.164794921875
    3. 'numbers' → logprob: -2.539794921875
    4. 'arr' → logprob: -2.914794921875
    5. 'lst' → logprob: -3.164794921875
    6. 's' → logprob: -3.164794921875
    7. 'l' → logprob: -3.289794921875
    8. 'list' → logprob: -3.289794921875
    9. 'data' → logprob: -3.914794921875
    10. 'deck' → logprob: -3.914794921875

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012519894167780876
    2. '=' → logprob: -4.387519836425781
    3. '=[]' → logprob: -12.887519836425781
    4. '[]' → logprob: -13.512519836425781
    5. '[' → logprob: -14.012519836425781
    6. ',' → logprob: -14.012519836425781
    7. '[:]' → logprob: -14.137519836425781
    8. ' ' → logprob: -14.137519836425781
    9. '	' → logprob: -14.512519836425781
    10. ' =[' → logprob: -14.512519836425781

Token 47: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1418505162000656
    2. 'list' → logprob: -3.141850471496582
    3. ' []' → logprob: -3.516850471496582
    4. '[' → logprob: -3.516850471496582
    5. '[list' → logprob: -3.891850471496582
    6. ' list' → logprob: -5.266850471496582
    7. ' [' → logprob: -5.641850471496582
    8. '[int' → logprob: -9.016850471496582
    9. '[input' → logprob: -9.016850471496582
    10. '[]
' → logprob: -10.141850471496582

Token 48: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.026154326274991035
    2. '0' → logprob: -4.401154518127441
    3. ']' → logprob: -4.526154518127441
    4. ']int' → logprob: -6.151154518127441
    5. ' int' → logprob: -8.901154518127441
    6. 'list' → logprob: -9.026154518127441
    7. '[]' → logprob: -9.651154518127441
    8. 'tuple' → logprob: -10.026154518127441
    9. '[int' → logprob: -10.026154518127441
    10. ']*' → logprob: -10.026154518127441

Token 49: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000983508420176804
    2. ',' → logprob: -7.750983715057373
    3. ' ]' → logprob: -7.750983715057373
    4. ']+' → logprob: -9.375983238220215
    5. ']*' → logprob: -11.375983238220215
    6. '0' → logprob: -12.375983238220215
    7. ']*(' → logprob: -12.750983238220215
    8. ']int' → logprob: -12.875983238220215
    9. '<|end|>' → logprob: -13.125983238220215
    10. '<|end|>' → logprob: -13.750983238220215

Token 50: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3559040427207947
    2. '[list' → logprob: -1.8559041023254395
    3. ' list' → logprob: -2.2309041023254395
    4. ' [' → logprob: -4.4809041023254395
    5. 'sorted' → logprob: -4.6059041023254395
    6. '[' → logprob: -4.6059041023254395
    7. ' sorted' → logprob: -6.3559041023254395
    8. '[input' → logprob: -6.3559041023254395
    9. '[int' → logprob: -8.105903625488281
    10. '[s' → logprob: -9.105903625488281

Token 52: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.6789137084269896e-05
    2. ' int' → logprob: -10.87503719329834
    3. '*' → logprob: -11.37503719329834
    4. ']int' → logprob: -13.25003719329834
    5. ']' → logprob: -13.87503719329834
    6. '[int' → logprob: -14.37503719329834
    7. '```' → logprob: -14.37503719329834
    8. '	int' → logprob: -14.87503719329834
    9. '<int' → logprob: -15.00003719329834
    10. '   ' → logprob: -15.00003719329834

Token 53: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -9.269565634895116e-05
    2. '(' → logprob: -9.500092506408691
    3. 'input' → logprob: -11.000092506408691
    4. ' (' → logprob: -14.750092506408691
    5. '(
' → logprob: -15.125092506408691
    6. '(x' → logprob: -15.875092506408691
    7. '()' → logprob: -16.125093460083008
    8. ' input' → logprob: -16.750093460083008
    9. ',input' → logprob: -17.125093460083008
    10. 'positions' → logprob: -17.750093460083008

Token 54: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00010139751975657418
    2. '().' → logprob: -10.000101089477539
    3. '()' → logprob: -10.625101089477539
    4. '())
' → logprob: -11.250101089477539
    5. '()]' → logprob: -11.750101089477539
    6. ')' → logprob: -12.000101089477539
    7. ' ())' → logprob: -12.875101089477539
    8. '()),' → logprob: -13.750101089477539
    9. '()
' → logprob: -15.000101089477539
    10. '()))' → logprob: -15.250101089477539

Token 55: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23160795867443085
    2. 'for' → logprob: -1.6066079139709473
    3. '()' → logprob: -5.356607913970947
    4. ')' → logprob: -6.856607913970947
    5. '	for' → logprob: -7.981607913970947
    6. '   ' → logprob: -11.106608390808105
    7. ' ' → logprob: -11.356608390808105
    8. ']' → logprob: -11.356608390808105
    9. ' ()' → logprob: -11.606608390808105
    10. '(' → logprob: -12.356608390808105

Token 56: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.575955331325531
    2. '_' → logprob: -0.825955331325531
    3. ' ' → logprob: -11.450955390930176
    4. ' i' → logprob: -12.700955390930176
    5. '_i' → logprob: -14.325955390930176
    6. ' ' → logprob: -14.450955390930176
    7. ' in' → logprob: -15.075955390930176
    8. 'i' → logprob: -15.450955390930176
    9. '_range' → logprob: -15.575955390930176
    10. ' range' → logprob: -15.700955390930176

Token 57: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0489688366651535
    2. ' range' → logprob: -3.04896879196167
    3. ' in' → logprob: -8.173969268798828
    4. ' ' → logprob: -10.298969268798828
    5. 'in' → logprob: -10.673969268798828
    6. '  ' → logprob: -10.923969268798828
    7. '	range' → logprob: -11.298969268798828
    8. '   ' → logprob: -12.173969268798828
    9. '(range' → logprob: -12.673969268798828
    10. 'r' → logprob: -14.298969268798828

Token 58: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0021895181853324175
    2. ' range' → logprob: -6.127189636230469
    3. 'rang' → logprob: -13.752189636230469
    4. '	range' → logprob: -14.252189636230469
    5. '(range' → logprob: -14.377189636230469
    6. ' ' → logprob: -14.502189636230469
    7. '   ' → logprob: -14.627189636230469
    8. '  ' → logprob: -14.752189636230469
    9. 'r' → logprob: -15.502189636230469
    10. 'ran' → logprob: -15.502189636230469

Token 59: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009337326046079397
    2. '(m' → logprob: -7.000933647155762
    3. '(' → logprob: -10.750933647155762
    4. ' (' → logprob: -14.875933647155762
    5. 'n' → logprob: -15.375933647155762
    6. ' n' → logprob: -16.000934600830078
    7. 'm' → logprob: -17.250934600830078
    8. '((' → logprob: -17.500934600830078
    9. '	n' → logprob: -18.875934600830078
    10. '(d' → logprob: -19.000934600830078

Token 60: ' -' (ID: 533)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0027568526566028595
    2. ']' → logprob: -6.0027570724487305
    3. ')' → logprob: -9.00275707244873
    4. '+' → logprob: -9.75275707244873
    5. ' ]' → logprob: -10.37775707244873
    6. '   ' → logprob: -10.37775707244873
    7. ' )' → logprob: -10.62775707244873
    8. ')]
' → logprob: -13.50275707244873
    9. ')])' → logprob: -13.75275707244873
    10. '       ' → logprob: -13.87775707244873

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020552517846226692
    2. ' ' → logprob: -3.895552635192871
    3. '2' → logprob: -12.270552635192871
    4. '<|end|>' → logprob: -12.520552635192871
    5. '   ' → logprob: -14.020552635192871
    6. ')' → logprob: -14.145552635192871
    7. '  ' → logprob: -14.520552635192871
    8. '<|end|>' → logprob: -15.895552635192871
    9. '0' → logprob: -16.145551681518555
    10. '+' → logprob: -16.895551681518555

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009328982559964061
    2. ' ' → logprob: -7.000932693481445
    3. '2' → logprob: -10.875932693481445
    4. '   ' → logprob: -13.375932693481445
    5. '  ' → logprob: -14.625932693481445
    6. ')' → logprob: -16.000932693481445
    7. '3' → logprob: -16.750932693481445
    8. '﻿' → logprob: -17.438432693481445
    9. '<|end|>' → logprob: -17.438432693481445
    10. '    ' → logprob: -17.625932693481445

Token 63: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1282474845647812
    2. ']' → logprob: -2.1282474994659424
    3. ' ]' → logprob: -7.128247261047363
    4. ')' → logprob: -7.753247261047363
    5. ' )' → logprob: -10.003247261047363
    6. '   ' → logprob: -11.503247261047363
    7. ']+' → logprob: -12.003247261047363
    8. '])]' → logprob: -12.378247261047363
    9. '])' → logprob: -12.628247261047363
    10. ']]' → logprob: -12.753247261047363

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19797366857528687
    2. 'positions' → logprob: -1.8229737281799316
    3. ' positions' → logprob: -4.447973728179932
    4. '<|end|>' → logprob: -6.072973728179932
    5. '+' → logprob: -7.322973728179932
    6. '```' → logprob: -7.447973728179932
    7. '    
' → logprob: -7.697973728179932
    8. '
' → logprob: -7.697973728179932
    9. ' +' → logprob: -8.072973251342773
    10. 's' → logprob: -9.072973251342773

Token 65: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' (adapté à ' positions') → logprob: -0.053882770240306854
    2. ' positions' → logprob: -3.1788828372955322
    3. '   ' → logprob: -4.928882598876953
    4. 'cuts' → logprob: -7.303882598876953
    5. 's' → logprob: -7.678882598876953
    6. 'pos' → logprob: -8.241382598876953
    7. '<|end|>' → logprob: -8.428882598876953
    8. 'position' → logprob: -8.928882598876953
    9. ' ' → logprob: -9.053882598876953
    10. '  ' → logprob: -9.303882598876953

Token 66: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.015232578851282597
    2. '.' → logprob: -4.890232563018799
    3. '.append' → logprob: -4.890232563018799
    4. ' .' → logprob: -11.015233039855957
    5. '.extend' → logprob: -11.140233039855957
    6. '=' → logprob: -11.515233039855957
    7. '[' → logprob: -11.765233039855957
    8. '.insert' → logprob: -12.390233039855957
    9. '+' → logprob: -12.515233039855957
    10. 'sort' → logprob: -12.640233039855957

Token 67: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00028159678913652897
    2. '(' → logprob: -8.62528133392334
    3. '()
' → logprob: -9.25028133392334
    4. ')' → logprob: -13.62528133392334
    5. '()
' → logprob: -13.75028133392334
    6. '()

' → logprob: -14.00028133392334
    7. '()\' → logprob: -14.62528133392334
    8. '()`' → logprob: -15.12528133392334
    9. '())' → logprob: -15.25028133392334
    10. ' ()' → logprob: -15.37528133392334

Token 68: '   ' (ID: 271)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -0.23718738555908203
    2. 'dp' → logprob: -1.987187385559082
    3. ' cuts' → logprob: -3.737187385559082
    4. 'cut' → logprob: -4.237187385559082
    5. 'max' → logprob: -5.237187385559082
    6. 'length' → logprob: -5.487187385559082
    7. ' dp' → logprob: -5.612187385559082
    8. 'c' → logprob: -5.737187385559082
    9. '   ' → logprob: -5.862187385559082
    10. 'dist' → logprob: -6.362187385559082

Token 69: ' total' (ID: 3609)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -0.6405898332595825
    2. 'dp' → logprob: -0.8905898332595825
    3. 'cut' → logprob: -4.390589714050293
    4. 'length' → logprob: -4.640589714050293
    5. 'c' → logprob: -5.890589714050293
    6. 'max' → logprob: -5.890589714050293
    7. 'answers' → logprob: -6.015589714050293
    8. 'sticks' → logprob: -6.015589714050293
    9. 'stones' → logprob: -6.015589714050293
    10. 'segments' → logprob: -6.140589714050293

Token 70: ' =' (ID: 314)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5387005805969238
    2. ' =' → logprob: -1.9137005805969238
    3. '_c' → logprob: -2.163700580596924
    4. '_' → logprob: -3.038700580596924
    5. '_cut' → logprob: -3.413700580596924
    6. '_positions' → logprob: -3.913700580596924
    7. '_cost' → logprob: -4.538700580596924
    8. '_distance' → logprob: -4.663700580596924
    9. '_lengths' → logprob: -4.913700580596924
    10. '=' → logprob: -5.163700580596924

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7949962615966797
    2. ' m' → logprob: -1.4199962615966797
    3. ' ' → logprob: -2.4199962615966797
    4. 'm' → logprob: -2.4199962615966797
    5. 'positions' → logprob: -2.6699962615966797
    6. ' positions' → logprob: -3.0449962615966797
    7. '100' → logprob: -5.66999626159668
    8. ' d' → logprob: -6.41999626159668
    9. 'd' → logprob: -6.79499626159668
    10. ' sum' → logprob: -6.91999626159668

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4755081236362457
    2. 'positions' → logprob: -1.2255080938339233
    3. 'm' → logprob: -2.600508213043213
    4. '100' → logprob: -6.350508213043213
    5. 'sum' → logprob: -6.350508213043213
    6. ' positions' → logprob: -6.975508213043213
    7. 'bis' → logprob: -7.100508213043213
    8. ' ' → logprob: -7.225508213043213
    9. 'd' → logprob: -7.350508213043213
    10. '[m' → logprob: -7.350508213043213

Token 73: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10133210569620132
    2. '<|end|>' → logprob: -2.851332187652588
    3. '
' → logprob: -4.226332187652588
    4. '    
' → logprob: -4.726332187652588
    5. 'for' → logprob: -5.226332187652588
    6. '    ' → logprob: -6.101332187652588
    7. ' for' → logprob: -6.101332187652588
    8. '<|end|>' → logprob: -6.226332187652588
    9. ' ' → logprob: -7.351332187652588
    10. '  ' → logprob: -7.601332187652588

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036195579916238785
    2. '<|end|>' → logprob: -4.036195755004883
    3. 'for' → logprob: -4.661195755004883
    4. ' for' → logprob: -4.911195755004883
    5. '    
' → logprob: -8.161195755004883
    6. '<|end|>' → logprob: -8.411195755004883
    7. '    ' → logprob: -8.911195755004883
    8. '
' → logprob: -9.661195755004883
    9. '	for' → logprob: -9.661195755004883
    10. '  ' → logprob: -10.036195755004883

Token 75: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21454952657222748
    2. ' for' → logprob: -2.4645495414733887
    3. 'cuts' → logprob: -2.8395495414733887
    4. '   ' → logprob: -4.089549541473389
    5. 'dp' → logprob: -4.964549541473389
    6. 'left' → logprob: -5.464549541473389
    7. 'cut' → logprob: -5.964549541473389
    8. ' cuts' → logprob: -6.089549541473389
    9. 'segments' → logprob: -6.214549541473389
    10. 'length' → logprob: -6.589549541473389

Token 76: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17610615491867065
    2. ' _' → logprob: -2.8011062145233154
    3. 'i' → logprob: -2.9261062145233154
    4. '_' → logprob: -3.3011062145233154
    5. ' j' → logprob: -6.301105976104736
    6. ' pos' → logprob: -6.551105976104736
    7. '_i' → logprob: -6.676105976104736
    8. 'pos' → logprob: -6.926105976104736
    9. ' length' → logprob: -7.738605976104736
    10. ' ' → logprob: -7.926105976104736

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013325992971658707
    2. 'in' → logprob: -4.513326168060303
    3. 'range' → logprob: -6.138326168060303
    4. ' ' → logprob: -9.763325691223145
    5. ' range' → logprob: -10.513325691223145
    6. '  ' → logprob: -11.888325691223145
    7. 'n' → logprob: -12.388325691223145
    8. '   ' → logprob: -12.638325691223145
    9. 's' → logprob: -12.763325691223145
    10. '```' → logprob: -12.888325691223145

Token 78: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05658714100718498
    2. ' range' → logprob: -2.9315872192382812
    3. 'positions' → logprob: -6.556587219238281
    4. ' positions' → logprob: -8.806587219238281
    5. '	range' → logprob: -10.556587219238281
    6. '(range' → logprob: -10.681587219238281
    7. ')' → logprob: -10.931587219238281
    8. 'ranges' → logprob: -11.556587219238281
    9. ']' → logprob: -11.806587219238281
    10. 'ange' → logprob: -11.931587219238281

Token 79: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0010910429991781712
    2. '(' → logprob: -7.501091003417969
    3. '(n' → logprob: -7.626091003417969
    4. 'm' → logprob: -10.876091003417969
    5. ' m' → logprob: -11.001091003417969
    6. ' (' → logprob: -11.501091003417969
    7. '(d' → logprob: -13.626091003417969
    8. '(M' → logprob: -13.876091003417969
    9. '(s' → logprob: -13.876091003417969
    10. '(k' → logprob: -15.751091003417969

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016569748520851135
    2. ')' → logprob: -4.6415696144104
    3. ' ):' → logprob: -5.8915696144104
    4. '   ' → logprob: -6.0165696144104
    5. '):
' → logprob: -6.7665696144104
    6. ':' → logprob: -8.891570091247559
    7. ' )' → logprob: -9.016570091247559
    8. ',' → logprob: -9.891570091247559
    9. '       ' → logprob: -10.266570091247559
    10. '    ' → logprob: -11.016570091247559

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061195068061351776
    2. '   ' → logprob: -2.936195135116577
    3. '<|end|>' → logprob: -6.061194896697998
    4. '	   ' → logprob: -6.686194896697998
    5. '    ' → logprob: -7.061194896697998
    6. ':' → logprob: -7.686194896697998
    7. ' ' → logprob: -8.311195373535156
    8. '<|end|>' → logprob: -8.686195373535156
    9. ',' → logprob: -8.936195373535156
    10. '```' → logprob: -9.436195373535156

Token 82: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1279155015945435
    2. ' x' → logprob: -1.5029155015945435
    3. ' d' → logprob: -2.377915382385254
    4. 'd' → logprob: -3.127915382385254
    5. 'x' → logprob: -3.252915382385254
    6. ' target' → logprob: -3.377915382385254
    7. ' p' → logprob: -3.502915382385254
    8. 'distance' → logprob: -3.502915382385254
    9. ' distance' → logprob: -4.002915382385254
    10. ' cut' → logprob: -4.002915382385254

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034025538712739944
    2. '=' → logprob: -3.4090254306793213
    3. ',' → logprob: -8.534025192260742
    4. ' ' → logprob: -9.534025192260742
    5. '=int' → logprob: -9.909025192260742
    6. ')' → logprob: -10.909025192260742
    7. 'e' → logprob: -11.784025192260742
    8. 'ey' → logprob: -12.034025192260742
    9. '   ' → logprob: -12.284025192260742
    10. ' ,' → logprob: -12.409025192260742

Token 84: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5232754945755005
    2. ' int' → logprob: -0.8982754945755005
    3. ' ' → logprob: -9.648275375366211
    4. '  ' → logprob: -10.273275375366211
    5. '	int' → logprob: -11.398275375366211
    6. ' bis' → logprob: -11.523275375366211
    7. 'in' → logprob: -11.773275375366211
    8. '   ' → logprob: -12.398275375366211
    9. 'bis' → logprob: -12.773275375366211
    10. ' i' → logprob: -12.898275375366211

Token 85: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00034714414505288005
    2. '(' → logprob: -8.000347137451172
    3. ' (' → logprob: -12.000347137451172
    4. 'input' → logprob: -13.125347137451172
    5. '(in' → logprob: -13.750347137451172
    6. '()' → logprob: -14.250347137451172
    7. '(
' → logprob: -15.000347137451172
    8. ' input' → logprob: -15.250347137451172
    9. '=input' → logprob: -15.250347137451172
    10. '(int' → logprob: -16.000347137451172

Token 86: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10464053601026535
    2. '())' → logprob: -2.479640483856201
    3. '()' → logprob: -4.854640483856201
    4. ')
' → logprob: -5.229640483856201
    5. '())
' → logprob: -6.479640483856201
    6. ' )' → logprob: -8.35464096069336
    7. '(' → logprob: -8.60464096069336
    8. '   ' → logprob: -8.85464096069336
    9. '()
' → logprob: -9.60464096069336
    10. ')
' → logprob: -9.97964096069336

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23954689502716064
    2. '   ' → logprob: -2.489546775817871
    3. '
' → logprob: -2.864546775817871
    4. '<|end|>' → logprob: -3.364546775817871
    5. ' ' → logprob: -3.989546775817871
    6. '' → logprob: -5.989546775817871
    7. '        
' → logprob: -6.114546775817871
    8. '  
' → logprob: -6.114546775817871
    9. '<|end|>' → logprob: -6.114546775817871
    10. '    
' → logprob: -6.489546775817871

Token 88: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.7436180114746094
    2. ' i' → logprob: -1.2436180114746094
    3. ' pos' → logprob: -2.1186180114746094
    4. 'idx' (adapté à ' idx') → logprob: -3.1186180114746094
    5. 'pos' → logprob: -3.8686180114746094
    6. 'i' → logprob: -3.8686180114746094
    7. ' index' → logprob: -4.243618011474609
    8. 'index' → logprob: -5.618618011474609
    9. '   ' → logprob: -6.243618011474609
    10. 'l' → logprob: -6.368618011474609

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028076060116291046
    2. '=' → logprob: -5.8778076171875
    3. ' ' → logprob: -13.6278076171875
    4. ')' → logprob: -14.6278076171875
    5. 'x' → logprob: -14.6278076171875
    6. 'ex' → logprob: -15.8778076171875
    7. '	' → logprob: -16.2528076171875
    8. ' ' → logprob: -16.5028076171875
    9. ',' → logprob: -17.0028076171875
    10. ' )' → logprob: -17.1903076171875

Token 90: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.4740873873233795
    2. 'bis' → logprob: -0.9740873575210571
    3. 'b' → logprob: -11.724087715148926
    4. '	b' → logprob: -14.099087715148926
    5. ' positions' → logprob: -14.599087715148926
    6. 'positions' → logprob: -14.599087715148926
    7. 'Bis' → logprob: -15.599087715148926
    8. ' ' → logprob: -16.59908676147461
    9. 'bs' → logprob: -16.84908676147461
    10. 'len' → logprob: -16.97408676147461

Token 91: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0008216609712690115
    2. 'sect' → logprob: -7.125821590423584
    3. 'e' → logprob: -12.500822067260742
    4. '```' → logprob: -12.750822067260742
    5. 'lect' → logprob: -12.875822067260742
    6. 'ects' → logprob: -13.250822067260742
    7. '   ' → logprob: -13.750822067260742
    8. 'ext' → logprob: -14.125822067260742
    9. 'ectl' → logprob: -14.125822067260742
    10. 'est' → logprob: -14.625822067260742

Token 92: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0018977019935846329
    2. '.' → logprob: -6.501897811889648
    3. '_left' → logprob: -7.876897811889648
    4. '_right' → logprob: -11.876897811889648
    5. '.ins' → logprob: -12.001897811889648
    6. ' .' → logprob: -14.001897811889648
    7. '_' → logprob: -14.751897811889648
    8. '.c' → logprob: -14.876897811889648
    9. '._' → logprob: -15.126897811889648
    10. '.left' → logprob: -15.251897811889648

Token 93: 'is' (ID: 276)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.38794630765914917
    2. 'ct' → logprob: -1.637946367263794
    3. 's' → logprob: -2.262946367263794
    4. 'n' → logprob: -4.762946128845215
    5. 'spect' → logprob: -5.762946128845215
    6. '```' → logprob: -6.137946128845215
    7. 'se' → logprob: -7.012946128845215
    8. 'st' → logprob: -7.012946128845215
    9. 'r' → logprob: -7.387946128845215
    10. 'is' → logprob: -7.512946128845215

Token 94: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.6656825866666622e-05
    2. 'ct' → logprob: -11.00002670288086
    3. 'e' → logprob: -12.00002670288086
    4. 'sect' → logprob: -13.37502670288086
    5. 'ectl' → logprob: -13.87502670288086
    6. 'ects' → logprob: -15.37502670288086
    7. '```' → logprob: -15.50002670288086
    8. 'ected' → logprob: -15.75002670288086
    9. 'lect' → logprob: -15.75002670288086
    10. '#' → logprob: -16.62502670288086

Token 95: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.039539139717817307
    2. '_right' → logprob: -3.289539098739624
    3. '(' → logprob: -6.539539337158203
    4. ' positions' → logprob: -11.039539337158203
    5. 'left' → logprob: -11.164539337158203
    6. '_positions' → logprob: -12.039539337158203
    7. '_' → logprob: -12.539539337158203
    8. 'Left' → logprob: -12.539539337158203
    9. 'positions' → logprob: -13.289539337158203
    10. 'right' → logprob: -13.414539337158203

Token 96: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.4121114822482923e-06
    2. ' (' → logprob: -12.875003814697266
    3. 'positions' → logprob: -14.250003814697266
    4. ' positions' → logprob: -17.875003814697266
    5. '(
' → logprob: -18.125003814697266
    6. '```' → logprob: -18.500003814697266
    7. '((' → logprob: -19.000003814697266
    8. '(pos' → logprob: -19.125003814697266
    9. '(position' → logprob: -19.375003814697266
    10. '`' → logprob: -19.750003814697266

Token 97: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0005284877843223512
    2. '(' → logprob: -7.750528335571289
    3. ' positions' → logprob: -9.250528335571289
    4. ')' → logprob: -13.500528335571289
    5. 'pos' → logprob: -16.25052833557129
    6. 'Positions' → logprob: -16.62552833557129
    7. '_positions' → logprob: -17.00052833557129
    8. 'position' → logprob: -17.00052833557129
    9. '.positions' → logprob: -17.25052833557129
    10. ')(' → logprob: -17.50052833557129

Token 98: ',' (ID: 11)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.9737085700035095
    2. ',' → logprob: -1.2237086296081543
    3. '(k' → logprob: -1.2237086296081543
    4. ',(' → logprob: -3.8487086296081543
    5. '(' → logprob: -4.473708629608154
    6. ' ,' → logprob: -7.098708629608154
    7. ' (' → logprob: -7.848708629608154
    8. ')(' → logprob: -10.223708152770996
    9. ')' → logprob: -11.348708152770996
    10. ',[' → logprob: -11.473708152770996

Token 99: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4740881323814392
    2. ' k' → logprob: -0.9740881323814392
    3. '(k' → logprob: -11.974087715148926
    4. ')' → logprob: -12.724087715148926
    5. '	k' → logprob: -13.599087715148926
    6. '(' → logprob: -16.224088668823242
    7. ' ' → logprob: -16.474088668823242
    8. ',k' → logprob: -16.474088668823242
    9. '=k' → logprob: -16.724088668823242
    10. '   ' → logprob: -16.849088668823242

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08023896813392639
    2. ')
' → logprob: -2.5802390575408936
    3. ' )' → logprob: -6.9552388191223145
    4. ' )
' → logprob: -8.205239295959473
    5. ')
' → logprob: -10.080239295959473
    6. ')

' → logprob: -10.955239295959473
    7. '   ' → logprob: -11.080239295959473
    8. '-' → logprob: -11.205239295959473
    9. ')`' → logprob: -11.705239295959473
    10. '       ' → logprob: -11.830239295959473

Token 101: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3858933448791504
    2. '       ' → logprob: -1.2608933448791504
    3. ' if' → logprob: -4.76089334487915
    4. '   ' → logprob: -5.01089334487915
    5. '        
' → logprob: -5.13589334487915
    6. ' 
' → logprob: -6.01089334487915
    7. 'if' → logprob: -6.26089334487915
    8. '    
' → logprob: -6.38589334487915
    9. ' ' → logprob: -6.88589334487915
    10. '  
' → logprob: -6.88589334487915

Token 102: ' candidates' (ID: 18116)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0204997062683105
    2. 'left' → logprob: -1.0204997062683105
    3. 'total' → logprob: -2.1454997062683105
    4. ' if' → logprob: -2.5204997062683105
    5. ' left' → logprob: -3.3954997062683105
    6. ' total' → logprob: -4.1454997062683105
    7. 'l' → logprob: -5.1454997062683105
    8. 'distance' → logprob: -5.1454997062683105
    9. 'dist' → logprob: -5.2704997062683105
    10. 'print' → logprob: -5.3954997062683105

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002197717549279332
    2. '=' → logprob: -6.127197742462158
    3. ' ' → logprob: -11.377197265625
    4. ' =[' → logprob: -14.502197265625
    5. '   ' → logprob: -15.252197265625
    6. ' ' → logprob: -16.502197265625
    7. ' =
' → logprob: -16.752197265625
    8. '    ' → logprob: -16.877197265625
    9. '  ' → logprob: -16.877197265625
    10. '=[' → logprob: -17.752197265625

Token 104: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8347852230072021
    2. '[]
' → logprob: -0.8347852230072021
    3. '[' → logprob: -3.334785223007202
    4. 'positions' → logprob: -3.709785223007202
    5. ' []
' → logprob: -4.084785461425781
    6. ' positions' → logprob: -4.084785461425781
    7. ' [' → logprob: -4.084785461425781
    8. ' []' → logprob: -4.584785461425781
    9. '[]

' → logprob: -4.709785461425781
    10. '[pos' → logprob: -7.334785461425781

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09875556081533432
    2. '   ' → logprob: -3.0987555980682373
    3. ' if' → logprob: -4.598755359649658
    4. 'for' → logprob: -4.848755359649658
    5. 'if' → logprob: -4.973755359649658
    6. '[' → logprob: -5.098755359649658
    7. ' for' → logprob: -5.098755359649658
    8. '<|end|>' → logprob: -5.723755359649658
    9. 'c' → logprob: -6.098755359649658
    10. ' ' → logprob: -7.098755359649658

Token 106: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.044994011521339417
    2. ' if' → logprob: -3.7949941158294678
    3. '   ' → logprob: -4.669993877410889
    4. 'for' → logprob: -4.919993877410889
    5. 'c' → logprob: -5.419993877410889
    6. ' for' → logprob: -8.919994354248047
    7. ' candidates' → logprob: -9.169994354248047
    8. '       ' → logprob: -9.669994354248047
    9. '[' → logprob: -10.294994354248047
    10. '```' → logprob: -10.419994354248047

Token 107: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.005267549771815538
    2. 'idx' → logprob: -5.25526762008667
    3. ' ' → logprob: -11.255267143249512
    4. '(idx' → logprob: -11.380267143249512
    5. '	idx' → logprob: -12.005267143249512
    6. '0' → logprob: -13.755267143249512
    7. ' id' → logprob: -14.505267143249512
    8. '[idx' → logprob: -14.505267143249512
    9. ' index' → logprob: -15.255267143249512
    10. ' ' → logprob: -15.505267143249512

Token 108: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.13519635796546936
    2. ' <' → logprob: -2.6351964473724365
    3. '>' → logprob: -3.0101964473724365
    4. '<' → logprob: -5.760196208953857
    5. ' ==' → logprob: -6.385196208953857
    6. '==' → logprob: -8.010196685791016
    7. ' !=' → logprob: -9.260196685791016
    8. ':' → logprob: -9.760196685791016
    9. ' ' → logprob: -10.260196685791016
    10. '-' → logprob: -10.385196685791016

Token 109: ' n' (ID: 297)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.38707229495048523
    2. 'len' → logprob: -1.1370723247528076
    3. ' n' → logprob: -8.887072563171387
    4. 'n' → logprob: -9.887072563171387
    5. ' ' → logprob: -12.262072563171387
    6. '(len' → logprob: -12.762072563171387
    7. 'l' → logprob: -13.512072563171387
    8. '=len' → logprob: -13.887072563171387
    9. '<len' → logprob: -14.512072563171387
    10. ' l' → logprob: -14.512072563171387

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.046394381672143936
    2. ':
' → logprob: -3.6713943481445312
    3. ' and' → logprob: -4.046394348144531
    4. 'and' → logprob: -6.171394348144531
    5. ' :' → logprob: -8.921394348144531
    6. '):' → logprob: -9.296394348144531
    7. '+' → logprob: -10.671394348144531
    8. ' :
' → logprob: -10.796394348144531
    9. '):
' → logprob: -11.046394348144531
    10. ')' → logprob: -11.796394348144531

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3294532001018524
    2. ' candidates' → logprob: -1.4544532299041748
    3. '       ' → logprob: -3.204453229904175
    4. ' and' → logprob: -6.704452991485596
    5. ':' → logprob: -6.829452991485596
    6. '   ' → logprob: -7.079452991485596
    7. ':
' → logprob: -7.204452991485596
    8. '_candidates' → logprob: -7.579452991485596
    9. ' if' → logprob: -7.954452991485596
    10. 'andidates' → logprob: -8.454453468322754

Token 112: ' dist' (ID: 3601)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.03194007650017738
    2. 'c' → logprob: -3.53193998336792
    3. '           ' → logprob: -6.40693998336792
    4. 'cand' → logprob: -9.406940460205078
    5. ' c' → logprob: -9.656940460205078
    6. '_candidates' → logprob: -9.906940460205078
    7. 'candidate' → logprob: -10.156940460205078
    8. '   ' → logprob: -10.156940460205078
    9. ' if' → logprob: -10.281940460205078
    10. '```' → logprob: -10.281940460205078

Token 113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38691815733909607
    2. ' =' → logprob: -1.1369181871414185
    3. 'ance' → logprob: -10.636918067932129
    4. 'ances' → logprob: -11.011918067932129
    5. ' ' → logprob: -12.886918067932129
    6. 's' → logprob: -14.386918067932129
    7. '   ' → logprob: -14.511918067932129
    8. '1' → logprob: -14.636918067932129
    9. ' ' → logprob: -15.136918067932129
    10. '=c' → logprob: -15.136918067932129

Token 114: ' abs' (ID: 8443)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.3014281392097473
    2. ' abs' → logprob: -2.0514280796051025
    3. 'positions' → logprob: -2.5514280796051025
    4. 'abs' → logprob: -2.9264280796051025
    5. '(abs' → logprob: -10.488927841186523
    6. '   ' → logprob: -11.176427841186523
    7. 'pos' → logprob: -11.426427841186523
    8. 'position' → logprob: -11.801427841186523
    9. 'k' → logprob: -11.863927841186523
    10. ' ' → logprob: -11.988927841186523

Token 115: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012901252135634422
    2. '(k' → logprob: -4.387901306152344
    3. 'positions' → logprob: -8.012901306152344
    4. 'k' → logprob: -10.512901306152344
    5. ' positions' → logprob: -11.012901306152344
    6. ' (' → logprob: -11.637901306152344
    7. '(pos' → logprob: -12.887901306152344
    8. ' k' → logprob: -13.512901306152344
    9. '(position' → logprob: -13.762901306152344
    10. '((' → logprob: -15.012901306152344

Token 116: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.005177070386707783
    2. ' positions' → logprob: -5.380177021026611
    3. 'k' → logprob: -7.505177021026611
    4. ' k' → logprob: -12.50517749786377
    5. 'pos' → logprob: -14.00517749786377
    6. '(' → logprob: -14.63017749786377
    7. '   ' → logprob: -14.88017749786377
    8. 'position' → logprob: -15.38017749786377
    9. '.positions' → logprob: -15.38017749786377
    10. 'locations' → logprob: -15.75517749786377

Token 117: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.2127087504486553e-05
    2. '[' → logprob: -11.125021934509277
    3. 'idx' → logprob: -12.625021934509277
    4. ' idx' → logprob: -13.125021934509277
    5. '   ' → logprob: -13.875021934509277
    6. '	idx' → logprob: -15.250021934509277
    7. '[i' → logprob: -15.500021934509277
    8. ' [' → logprob: -15.500021934509277
    9. '(idx' → logprob: -16.750022888183594
    10. '[-' → logprob: -16.875022888183594

Token 118: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08912703394889832
    2. '-' → logprob: -2.4641270637512207
    3. ' ' → logprob: -8.964126586914062
    4. '-k' → logprob: -10.464126586914062
    5. '   ' → logprob: -11.214126586914062
    6. ')' → logprob: -11.964126586914062
    7. ']' → logprob: -12.214126586914062
    8. '[' → logprob: -12.964126586914062
    9. '  ' → logprob: -14.339126586914062
    10. '    ' → logprob: -14.464126586914062

Token 119: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25201907753944397
    2. '-' → logprob: -1.5020190477371216
    3. '-k' → logprob: -9.502018928527832
    4. ' ' → logprob: -11.252018928527832
    5. '   ' → logprob: -13.877018928527832
    6. ' ' → logprob: -15.502018928527832
    7. ')' → logprob: -15.877018928527832
    8. '  ' → logprob: -16.37701988220215
    9. '```' → logprob: -16.37701988220215
    10. '−' → logprob: -16.50201988220215

Token 120: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2519334554672241
    2. ' k' → logprob: -1.5019334554672241
    3. '	k' → logprob: -12.876933097839355
    4. ' к' → logprob: -14.626933097839355
    5. ' ' → logprob: -14.751933097839355
    6. '   ' → logprob: -15.001933097839355
    7. ')' → logprob: -15.126933097839355
    8. '    ' → logprob: -16.126934051513672
    9. ',k' → logprob: -16.626934051513672
    10. '<|end|>' → logprob: -16.626934051513672

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08980240672826767
    2. ')
' → logprob: -2.4648025035858154
    3. ' )' → logprob: -7.964802265167236
    4. ')
' → logprob: -8.214802742004395
    5. ' )
' → logprob: -8.839802742004395
    6. '       ' → logprob: -9.714802742004395
    7. ')

' → logprob: -11.089802742004395
    8. '   ' → logprob: -12.089802742004395
    9. ')`' → logprob: -12.964802742004395
    10. '))' → logprob: -13.339802742004395

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005033321212977171
    2. '       ' → logprob: -5.380033493041992
    3. ' candidates' → logprob: -9.255033493041992
    4. ')' → logprob: -9.630033493041992
    5. '
' → logprob: -9.755033493041992
    6. ',' → logprob: -10.130033493041992
    7. '<|end|>' → logprob: -10.130033493041992
    8. 'c' → logprob: -10.505033493041992
    9. '               ' → logprob: -10.630033493041992
    10. ')
' → logprob: -11.630033493041992

Token 123: ' dist' (ID: 3601)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.019019942730665207
    2. ' candidates' → logprob: -4.144020080566406
    3. '   ' → logprob: -6.644020080566406
    4. '       ' → logprob: -7.394020080566406
    5. '           ' → logprob: -7.394020080566406
    6. 'if' → logprob: -8.769020080566406
    7. ' if' → logprob: -9.144020080566406
    8. ' c' → logprob: -9.519020080566406
    9. '	c' → logprob: -10.019020080566406
    10. '```' → logprob: -11.019020080566406

Token 124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7207661867141724
    2. '_candidates' → logprob: -1.4707661867141724
    3. ' =' → logprob: -2.345766067504883
    4. ',' → logprob: -3.345766067504883
    5. ')' → logprob: -3.470766067504883
    6. ' candidates' → logprob: -3.720766067504883
    7. 's' → logprob: -3.845766067504883
    8. '+' → logprob: -4.470766067504883
    9. '>' → logprob: -4.595766067504883
    10. '   ' → logprob: -4.845766067504883

Token 125: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5429922342300415
    2. 'min' → logprob: -0.9179922342300415
    3. 'dist' → logprob: -5.292992115020752
    4. ' dist' → logprob: -5.542992115020752
    5. ' abs' → logprob: -5.542992115020752
    6. 'abs' → logprob: -5.667992115020752
    7. '0' → logprob: -6.917992115020752
    8. ' positions' → logprob: -7.167992115020752
    9. 'max' → logprob: -8.04299259185791
    10. 'positions' → logprob: -8.04299259185791

Token 126: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.00387121201492846
    2. '(' → logprob: -6.253871440887451
    3. 'dist' → logprob: -6.503871440887451
    4. '(abs' → logprob: -8.753870964050293
    5. '(distance' → logprob: -8.878870964050293
    6. '(total' → logprob: -9.878870964050293
    7. ' (' → logprob: -10.878870964050293
    8. ',' → logprob: -11.378870964050293
    9. ' dist' → logprob: -11.378870964050293
    10. '(d' → logprob: -11.378870964050293

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022292369976639748
    2. '(' → logprob: -7.0022292137146
    3. ' ,' → logprob: -7.2522292137146
    4. '(abs' → logprob: -9.002229690551758
    5. '(dist' → logprob: -9.127229690551758
    6. '),' → logprob: -9.252229690551758
    7. ')' → logprob: -9.377229690551758
    8. ',
' → logprob: -9.877229690551758
    9. 'abs' → logprob: -10.002229690551758
    10. 'dist' → logprob: -11.127229690551758

Token 128: ' d' (ID: 272)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.5260029435157776
    2. 'abs' → logprob: -0.9010029435157776
    3. ' positions' → logprob: -6.276002883911133
    4. 'positions' → logprob: -7.401002883911133
    5. '(abs' → logprob: -9.276002883911133
    6. ')' → logprob: -9.526002883911133
    7. ' ' → logprob: -10.651002883911133
    8. '   ' → logprob: -10.776002883911133
    9. 'k' → logprob: -10.901002883911133
    10. ' len' → logprob: -10.901002883911133

Token 129: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.24450963735580444
    2. ')' → logprob: -1.6195096969604492
    3. '-' → logprob: -4.369509696960449
    4. ' )' → logprob: -5.119509696960449
    5. '))' → logprob: -10.11950969696045
    6. '-distance' → logprob: -10.36950969696045
    7. '-)' → logprob: -10.49450969696045
    8. ' ' → logprob: -10.86950969696045
    9. ')
' → logprob: -10.99450969696045
    10. '-dist' → logprob: -10.99450969696045

Token 130: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.040452562272548676
    2. 'abs' → logprob: -3.415452480316162
    3. ' dist' → logprob: -5.915452480316162
    4. '(dist' → logprob: -6.415452480316162
    5. '(abs' → logprob: -6.915452480316162
    6. ' abs' → logprob: -7.290452480316162
    7. 'k' → logprob: -8.04045295715332
    8. ' (' → logprob: -8.66545295715332
    9. '(' → logprob: -9.04045295715332
    10. ')' → logprob: -9.54045295715332

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12703782320022583
    2. ')
' → logprob: -2.127037763595581
    3. ' )' → logprob: -9.75203800201416
    4. ' )
' → logprob: -10.50203800201416
    5. '       ' → logprob: -11.37703800201416
    6. ')
' → logprob: -11.75203800201416
    7. ')

' → logprob: -12.87703800201416
    8. '   ' → logprob: -14.00203800201416
    9. '           ' → logprob: -14.75203800201416
    10. '))' → logprob: -15.75203800201416

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008002190152183175
    2. '       ' → logprob: -8.000800132751465
    3. ')' → logprob: -8.250800132751465
    4. ' candidates' → logprob: -9.625800132751465
    5. '
' → logprob: -10.500800132751465
    6. ',' → logprob: -10.500800132751465
    7. '            
' → logprob: -10.875800132751465
    8. ')
' → logprob: -11.125800132751465
    9. ')c' → logprob: -11.750800132751465
    10. 'c' → logprob: -11.875800132751465

Token 133: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.26361706852912903
    2. ' candidates' → logprob: -2.1386170387268066
    3. '           ' → logprob: -2.3886170387268066
    4. '       ' → logprob: -3.8886170387268066
    5. ' c' → logprob: -7.388617038726807
    6. '   ' → logprob: -7.513617038726807
    7. '	c' → logprob: -8.763617515563965
    8. ' if' → logprob: -9.138617515563965
    9. 'candidate' → logprob: -9.888617515563965
    10. 'if' → logprob: -10.138617515563965

Token 134: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006735860835760832
    2. '.' → logprob: -5.006735801696777
    3. '.ap' → logprob: -11.756735801696777
    4. '.app' → logprob: -12.131735801696777
    5. ' .' → logprob: -12.631735801696777
    6. '.extend' → logprob: -12.881735801696777
    7. '.add' → logprob: -14.256735801696777
    8. '.push' → logprob: -15.381735801696777
    9. '.=' → logprob: -15.381735801696777
    10. '.setdefault' → logprob: -16.881736755371094

Token 135: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.19252096116542816
    2. '((' → logprob: -1.9425209760665894
    3. '(' → logprob: -3.5675208568573
    4. 'dist' → logprob: -5.692521095275879
    5. '(abs' → logprob: -9.817521095275879
    6. '(
' → logprob: -9.942521095275879
    7. '(pos' → logprob: -10.942521095275879
    8. '(distance' → logprob: -11.192521095275879
    9. 'positions' → logprob: -11.317521095275879
    10. '(d' → logprob: -12.317521095275879

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08268169313669205
    2. ')
' → logprob: -2.582681655883789
    3. '       ' → logprob: -5.582681655883789
    4. ' )' → logprob: -12.082681655883789
    5. ')
' → logprob: -12.207681655883789
    6. ')

' → logprob: -12.332681655883789
    7. '   ' → logprob: -12.582681655883789
    8. ' )
' → logprob: -13.582681655883789
    9. '+' → logprob: -15.082681655883789
    10. '
' → logprob: -15.457681655883789

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04113487899303436
    2. 'if' → logprob: -3.791134834289551
    3. '   ' → logprob: -4.791134834289551
    4. ' if' → logprob: -4.791134834289551
    5. '<|end|>' → logprob: -7.291134834289551
    6. ')' → logprob: -8.16613483428955
    7. '```' → logprob: -10.29113483428955
    8. ' ' → logprob: -10.66613483428955
    9. '
' → logprob: -11.16613483428955
    10. ' ' → logprob: -11.54113483428955

Token 138: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007225489243865013
    2. ' if' → logprob: -5.007225513458252
    3. '   ' → logprob: -7.632225513458252
    4. '       ' → logprob: -10.882225036621094
    5. ' ' → logprob: -12.632225036621094
    6. '	if' → logprob: -14.132225036621094
    7. 'else' → logprob: -14.757225036621094
    8. ')' → logprob: -14.757225036621094
    9. '```' → logprob: -14.757225036621094
    10. '
' → logprob: -14.882225036621094

Token 139: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.42874056100845337
    2. 'idx' → logprob: -1.0537405014038086
    3. '(idx' → logprob: -10.803740501403809
    4. '0' → logprob: -11.928740501403809
    5. '	idx' → logprob: -11.928740501403809
    6. ' ' → logprob: -12.803740501403809
    7. '[idx' → logprob: -13.553740501403809
    8. '1' → logprob: -14.303740501403809
    9. '   ' → logprob: -14.553740501403809
    10. '.idx' → logprob: -15.303740501403809

Token 140: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05581945925951004
    2. '>' → logprob: -2.930819511413574
    3. ' -' → logprob: -7.680819511413574
    4. '-' → logprob: -7.680819511413574
    5. ' ' → logprob: -11.430819511413574
    6. ' ' → logprob: -13.680819511413574
    7. '   ' → logprob: -14.805819511413574
    8. ':' → logprob: -15.055819511413574
    9. ' >
' → logprob: -16.055818557739258
    10. '1' → logprob: -16.180818557739258

Token 141: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1602269560098648
    2. ' ' → logprob: -1.9102269411087036
    3. '   ' → logprob: -14.285226821899414
    4. '  ' → logprob: -14.785226821899414
    5. '1' → logprob: -15.222726821899414
    6. '<|end|>' → logprob: -15.285226821899414
    7. '=' → logprob: -15.347726821899414
    8. ' ' → logprob: -15.597726821899414
    9. '    ' → logprob: -16.285226821899414
    10. '
' → logprob: -16.785226821899414

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000804745068307966
    2. ' ' → logprob: -7.125804901123047
    3. '1' → logprob: -16.000804901123047
    4. '   ' → logprob: -16.938304901123047
    5. ' ' → logprob: -17.875804901123047
    6. '  ' → logprob: -17.875804901123047
    7. '۰' → logprob: -18.250804901123047
    8. '=' → logprob: -18.438304901123047
    9. '<|end|>' → logprob: -18.500804901123047
    10. '```' → logprob: -18.938304901123047

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006895582191646099
    2. ':
' → logprob: -5.006895542144775
    3. '       ' → logprob: -9.006896018981934
    4. ' :' → logprob: -10.631896018981934
    5. '<|end|>' → logprob: -11.631896018981934
    6. '=' → logprob: -12.131896018981934
    7. ',' → logprob: -12.131896018981934
    8. '   ' → logprob: -12.631896018981934
    9. ' :
' → logprob: -12.881896018981934
    10. ':

' → logprob: -13.006896018981934

Token 144: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13406889140605927
    2. '           ' → logprob: -2.6340689659118652
    3. ':' → logprob: -3.3840689659118652
    4. '<|end|>' → logprob: -4.759068965911865
    5. '   ' → logprob: -5.634068965911865
    6. ':
' → logprob: -5.759068965911865
    7. '```' → logprob: -6.509068965911865
    8. ',' → logprob: -7.509068965911865
    9. '
' → logprob: -8.509068489074707
    10. '	       ' → logprob: -8.634068489074707

Token 145: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.4288554787635803
    2. ' dist' → logprob: -1.0538554191589355
    3. '           ' → logprob: -9.678855895996094
    4. '	dist' → logprob: -9.803855895996094
    5. '       ' → logprob: -11.053855895996094
    6. '   ' → logprob: -11.678855895996094
    7. '```' → logprob: -12.678855895996094
    8. '_dist' → logprob: -13.053855895996094
    9. '(dist' → logprob: -13.178855895996094
    10. '
' → logprob: -13.303855895996094

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197025999426842
    2. '=' → logprob: -2.8119702339172363
    3. '   ' → logprob: -13.811970710754395
    4. ' ' → logprob: -13.811970710754395
    5. ' ' → logprob: -15.436970710754395
    6. '```' → logprob: -16.436969757080078
    7. 'abs' → logprob: -17.499469757080078
    8. '    ' → logprob: -17.624469757080078
    9. 'dist' → logprob: -17.686969757080078
    10. '  ' → logprob: -17.811969757080078

Token 147: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.22547200322151184
    2. ' abs' → logprob: -1.6004719734191895
    3. '(abs' → logprob: -10.350472450256348
    4. 'min' → logprob: -11.100472450256348
    5. ' min' → logprob: -11.475472450256348
    6. '.abs' → logprob: -14.350472450256348
    7. ' ' → logprob: -15.725472450256348
    8. ' ' → logprob: -15.725472450256348
    9. '_abs' → logprob: -15.725472450256348
    10. '```' → logprob: -15.975472450256348

Token 148: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007131471065804362
    2. '(k' → logprob: -7.250713348388672
    3. 'k' → logprob: -13.125713348388672
    4. 'positions' → logprob: -13.875713348388672
    5. ' (' → logprob: -16.125713348388672
    6. '((' → logprob: -17.000713348388672
    7. '(
' → logprob: -17.375713348388672
    8. '(pos' → logprob: -17.625713348388672
    9. ' positions' → logprob: -18.000713348388672
    10. '(c' → logprob: -18.250713348388672

Token 149: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.002057119505479932
    2. 'k' → logprob: -6.377057075500488
    3. ' positions' → logprob: -8.002057075500488
    4. '(' → logprob: -10.877057075500488
    5. ' k' → logprob: -15.002057075500488
    6. 'position' → logprob: -15.877057075500488
    7. '(k' → logprob: -16.252058029174805
    8. 'pos' → logprob: -16.252058029174805
    9. '.positions' → logprob: -16.252058029174805
    10. 'Positions' → logprob: -16.377058029174805

Token 150: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00012475410767365247
    2. '[' → logprob: -9.50012493133545
    3. '(idx' → logprob: -10.00012493133545
    4. '[pos' → logprob: -13.50012493133545
    5. 'idx' → logprob: -13.62512493133545
    6. '[(' → logprob: -14.50012493133545
    7. 'positions' → logprob: -14.62512493133545
    8. '[k' → logprob: -15.12512493133545
    9. '[
' → logprob: -15.87512493133545
    10. '   ' → logprob: -16.000123977661133

Token 151: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01603495515882969
    2. ' -' → logprob: -4.141035079956055
    3. ' ' → logprob: -15.266035079956055
    4. '   ' → logprob: -15.391035079956055
    5. '1' → logprob: -16.266035079956055
    6. '```' → logprob: -16.391035079956055
    7. ']' → logprob: -16.891035079956055
    8. '−' → logprob: -17.516035079956055
    9. '[' → logprob: -17.891035079956055
    10. '-
' → logprob: -18.016035079956055

Token 152: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001414426224073395
    2. ' ' → logprob: -8.875141143798828
    3. ']' → logprob: -14.250141143798828
    4. ')' → logprob: -15.250141143798828
    5. '-' → logprob: -15.687641143798828
    6. ' ' → logprob: -16.125141143798828
    7. '   ' → logprob: -16.125141143798828
    8. '```' → logprob: -16.562641143798828
    9. '  ' → logprob: -17.125141143798828
    10. ' -' → logprob: -17.187641143798828

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001392496284097433
    2. ' ' → logprob: -7.251392364501953
    3. 'k' → logprob: -7.626392364501953
    4. '-' → logprob: -9.751392364501953
    5. ' -' → logprob: -9.876392364501953
    6. ']' → logprob: -10.001392364501953
    7. ')' → logprob: -10.626392364501953
    8. ' k' → logprob: -11.501392364501953
    9. '```' → logprob: -13.626392364501953
    10. '  ' → logprob: -13.813892364501953

Token 154: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006746632046997547
    2. '-' → logprob: -5.006746768951416
    3. ' ' → logprob: -10.631746292114258
    4. ']' → logprob: -12.631746292114258
    5. '-k' → logprob: -13.506746292114258
    6. ')' → logprob: -13.631746292114258
    7. ' -
' → logprob: -15.256746292114258
    8. ' ' → logprob: -15.381746292114258
    9. '   ' → logprob: -15.631746292114258
    10. '	' → logprob: -16.006746292114258

Token 155: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01607320085167885
    2. '-' → logprob: -4.141073226928711
    3. ' ' → logprob: -10.391073226928711
    4. '-k' → logprob: -11.891073226928711
    5. ' ' → logprob: -14.266073226928711
    6. '   ' → logprob: -15.891073226928711
    7. ' -
' → logprob: -15.891073226928711
    8. ')' → logprob: -16.26607322692871
    9. '  ' → logprob: -16.39107322692871
    10. ',' → logprob: -16.89107322692871

Token 156: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5759419202804565
    2. ' k' → logprob: -0.8259419202804565
    3. '```' → logprob: -14.200942039489746
    4. ',k' → logprob: -15.200942039489746
    5. '	k' → logprob: -15.200942039489746
    6. ')' → logprob: -15.325942039489746
    7. ' к' → logprob: -15.700942039489746
    8. ' ' → logprob: -16.20094108581543
    9. '<|end|>' → logprob: -16.57594108581543
    10. ' ' → logprob: -16.57594108581543

Token 157: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011076239868998528
    2. ')' → logprob: -4.5110764503479
    3. ')
' → logprob: -11.386075973510742
    4. ' )
' → logprob: -11.511075973510742
    5. '           ' → logprob: -12.636075973510742
    6. '       ' → logprob: -13.011075973510742
    7. ')

' → logprob: -13.761075973510742
    8. '   ' → logprob: -16.511075973510742
    9. ')`
' → logprob: -16.761075973510742
    10. ' )' → logprob: -16.886075973510742

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16903291642665863
    2. 'dist' → logprob: -2.4190328121185303
    3. '       ' → logprob: -3.6690328121185303
    4. '
' → logprob: -3.9190328121185303
    5. ' dist' → logprob: -3.9190328121185303
    6. '```' → logprob: -7.669033050537109
    7. '   ' → logprob: -8.16903305053711
    8. '	dist' → logprob: -8.91903305053711
    9. '(dist' → logprob: -9.04403305053711
    10. '            
' → logprob: -10.29403305053711

Token 159: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.07895610481500626
    2. 'dist' (adapté à ' dist') → logprob: -2.578956127166748
    3. '           ' → logprob: -10.32895565032959
    4. '            ' → logprob: -10.45395565032959
    5. '	dist' → logprob: -13.45395565032959
    6. ' ' → logprob: -13.95395565032959
    7. '(dist' → logprob: -14.57895565032959
    8. '.dist' → logprob: -14.70395565032959
    9. '    ' → logprob: -14.82895565032959
    10. ' ' → logprob: -14.82895565032959

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193020701408386
    2. '=' → logprob: -1.5019302368164062
    3. '   ' → logprob: -14.501930236816406
    4. ' ' → logprob: -14.751930236816406
    5. '           ' → logprob: -16.501930236816406
    6. '    ' → logprob: -16.876930236816406
    7. '       ' → logprob: -17.626930236816406
    8. '>' → logprob: -17.626930236816406
    9. '```' → logprob: -17.626930236816406
    10. '        ' → logprob: -18.251930236816406

Token 161: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.22541490197181702
    2. 'min' → logprob: -1.6004148721694946
    3. '(min' → logprob: -13.975415229797363
    4. 'max' → logprob: -15.225415229797363
    5. ' max' → logprob: -15.475415229797363
    6. '[min' → logprob: -15.475415229797363
    7. '	min' → logprob: -15.850415229797363
    8. ' ' → logprob: -15.975415229797363
    9. '=min' → logprob: -16.225414276123047
    10. 'm' → logprob: -16.475414276123047

Token 162: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -9.949026571121067e-05
    2. '(' → logprob: -9.250099182128906
    3. 'dist' → logprob: -12.625099182128906
    4. '(distance' → logprob: -17.375099182128906
    5. ' (' → logprob: -17.750099182128906
    6. '(diff' → logprob: -18.625099182128906
    7. '(
' → logprob: -18.875099182128906
    8. '(dis' → logprob: -19.000099182128906
    9. '	dist' → logprob: -19.000099182128906
    10. '(div' → logprob: -19.375099182128906

Token 163: ',' (ID: 11)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0067536174319684505
    2. 'dist' → logprob: -5.006753444671631
    3. '(' → logprob: -10.756753921508789
    4. ',' → logprob: -11.631753921508789
    5. ' dist' → logprob: -12.131753921508789
    6. ' (' → logprob: -13.631753921508789
    7. '	dist' → logprob: -14.756753921508789
    8. ')' → logprob: -15.256753921508789
    9. '(distance' → logprob: -15.506753921508789
    10. '.dist' → logprob: -15.506753921508789

Token 164: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.054892104119062424
    2. 'd' → logprob: -2.929892063140869
    3. ' ' → logprob: -12.054892539978027
    4. ' ' → logprob: -13.179892539978027
    5. '```' → logprob: -14.429892539978027
    6. ')d' → logprob: -14.929892539978027
    7. '	d' → logprob: -15.304892539978027
    8. '(d' → logprob: -15.304892539978027
    9. ')' → logprob: -16.05489158630371
    10. '`' → logprob: -16.49239158630371

Token 165: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14294229447841644
    2. '-' → logprob: -2.017942190170288
    3. '-dist' → logprob: -8.267942428588867
    4. ' ' → logprob: -12.142942428588867
    5. ' -
' → logprob: -13.767942428588867
    6. 'dist' → logprob: -13.892942428588867
    7. '-d' → logprob: -13.892942428588867
    8. ' dist' → logprob: -14.017942428588867
    9. '-
' → logprob: -14.892942428588867
    10. ')' → logprob: -15.142942428588867

Token 166: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.003600782947614789
    2. ' dist' → logprob: -5.628600597381592
    3. '(dist' → logprob: -15.12860107421875
    4. '	dist' → logprob: -16.37860107421875
    5. ')' → logprob: -16.62860107421875
    6. 'diff' → logprob: -16.62860107421875
    7. ' ' → logprob: -16.87860107421875
    8. '.dist' → logprob: -17.75360107421875
    9. 'd' → logprob: -18.50360107421875
    10. '
' → logprob: -18.62860107421875

Token 167: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014290434308350086
    2. ')' → logprob: -4.2642903327941895
    3. '           ' → logprob: -9.514290809631348
    4. '       ' → logprob: -10.389290809631348
    5. ')
' → logprob: -11.014290809631348
    6. ' )
' → logprob: -12.264290809631348
    7. ')

' → logprob: -14.139290809631348
    8. ')`
' → logprob: -15.264290809631348
    9. '               ' → logprob: -16.26428985595703
    10. '   ' → logprob: -17.01428985595703

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09090489149093628
    2. '       ' → logprob: -2.465904951095581
    3. ' candidates' → logprob: -6.590904712677002
    4. 'c' → logprob: -7.715904712677002
    5. '   ' → logprob: -8.96590518951416
    6. '               ' → logprob: -12.34090518951416
    7. '	c' → logprob: -12.84090518951416
    8. '          ' → logprob: -13.09090518951416
    9. '_candidates' → logprob: -13.46590518951416
    10. '         ' → logprob: -14.09090518951416

Token 169: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16128109395503998
    2. ' candidates' → logprob: -1.9112811088562012
    3. '           ' → logprob: -7.411281108856201
    4. '       ' → logprob: -7.786281108856201
    5. '   ' → logprob: -10.911280632019043
    6. '	c' → logprob: -11.911280632019043
    7. '_candidates' → logprob: -12.536280632019043
    8. ')c' → logprob: -13.161280632019043
    9. ' c' → logprob: -13.536280632019043
    10. '               ' → logprob: -13.911280632019043

Token 170: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00071386230411008
    2. '.' → logprob: -7.25071382522583
    3. '.extend' → logprob: -13.250714302062988
    4. '.app' → logprob: -14.125714302062988
    5. ' .' → logprob: -14.375714302062988
    6. '.setdefault' → logprob: -15.250714302062988
    7. '.add' → logprob: -15.750714302062988
    8. '<|end|>' → logprob: -16.125713348388672
    9. ').' → logprob: -17.250713348388672
    10. '.push' → logprob: -17.250713348388672

Token 171: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -4.842555426876061e-06
    2. 'dist' → logprob: -12.250004768371582
    3. '(' → logprob: -17.3750057220459
    4. '(
' → logprob: -17.8750057220459
    5. '(distance' → logprob: -18.8750057220459
    6. '	dist' → logprob: -20.2500057220459
    7. ' (' → logprob: -20.3750057220459
    8. '(d' → logprob: -20.3750057220459
    9. '(abs' → logprob: -21.0000057220459
    10. ' dist' → logprob: -21.0000057220459

Token 172: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31711477041244507
    2. ')' → logprob: -1.9421148300170898
    3. '       ' → logprob: -2.06711483001709
    4. '   ' → logprob: -6.44211483001709
    5. ')

' → logprob: -9.31711483001709
    6. ')
' → logprob: -10.19211483001709
    7. '
' → logprob: -10.19211483001709
    8. ' )
' → logprob: -11.94211483001709
    9. ',' → logprob: -12.06711483001709
    10. '()
' → logprob: -12.31711483001709

Token 173: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3962564468383789
    2. 'total' → logprob: -1.146256446838379
    3. ' total' → logprob: -5.396256446838379
    4. 'print' → logprob: -5.646256446838379
    5. '```' → logprob: -7.396256446838379
    6. '
' → logprob: -8.021256446838379
    7. '    
' → logprob: -9.146256446838379
    8. '       ' → logprob: -9.396256446838379
    9. 'if' → logprob: -9.646256446838379
    10. ' print' → logprob: -11.021256446838379

Token 174: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.05802564322948456
    2. '   ' → logprob: -3.808025598526001
    3. 'print' → logprob: -3.808025598526001
    4. ' total' → logprob: -4.55802583694458
    5. '
' → logprob: -7.68302583694458
    6. 'if' → logprob: -7.80802583694458
    7. ' print' → logprob: -8.558025360107422
    8. '       ' → logprob: -9.308025360107422
    9. '    
' → logprob: -9.933025360107422
    10. '	total' → logprob: -10.183025360107422

Token 175: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6934302449226379
    2. '+=' → logprob: -0.6934302449226379
    3. '=' → logprob: -9.068429946899414
    4. '+' → logprob: -9.193429946899414
    5. ']+=' → logprob: -10.068429946899414
    6. ' =' → logprob: -11.568429946899414
    7. '+=(' → logprob: -12.693429946899414
    8. ' +' → logprob: -12.943429946899414
    9. '+='' → logprob: -13.443429946899414
    10. '```' → logprob: -13.818429946899414

Token 176: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1270500123500824
    2. ' min' → logprob: -2.1270499229431152
    3. 'max' → logprob: -9.252050399780273
    4. 'sum' → logprob: -11.502050399780273
    5. ' max' → logprob: -12.127050399780273
    6. '(min' → logprob: -12.377050399780273
    7. ' ' → logprob: -13.877050399780273
    8. '	min' → logprob: -13.877050399780273
    9. 'm' → logprob: -14.252050399780273
    10. 'c' → logprob: -14.502050399780273

Token 177: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.125001907348633
    3. 'c' → logprob: -14.750001907348633
    4. ' (' → logprob: -15.625001907348633
    5. '(candidate' → logprob: -16.500001907348633
    6. '()' → logprob: -18.375001907348633
    7. '(
' → logprob: -19.250001907348633
    8. ')c' → logprob: -19.375001907348633
    9. '©' → logprob: -19.750001907348633
    10. '(min' → logprob: -20.875001907348633

Token 178: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.0016288828337565064
    2. 'c' → logprob: -6.876628875732422
    3. 'and' → logprob: -7.876628875732422
    4. '(c' → logprob: -8.501628875732422
    5. 'andid' → logprob: -12.751628875732422
    6. '_candidates' → logprob: -12.751628875732422
    7. '[c' → logprob: -13.126628875732422
    8. ')' → logprob: -13.876628875732422
    9. 'andidate' → logprob: -13.876628875732422
    10. '(' → logprob: -13.876628875732422

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002892258344218135
    2. ')
' → logprob: -8.500288963317871
    3. '())' → logprob: -9.750288963317871
    4. ' )' → logprob: -11.250288963317871
    5. '()' → logprob: -12.000288963317871
    6. ')

' → logprob: -12.875288963317871
    7. '   ' → logprob: -13.250288963317871
    8. '))' → logprob: -13.625288963317871
    9. '}' → logprob: -14.375288963317871
    10. '<|end|>' → logprob: -14.625288963317871

Token 180: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0802728608250618
    2. '   ' → logprob: -2.830272912979126
    3. '
' → logprob: -4.080272674560547
    4. ' print' → logprob: -7.205272674560547
    5. '    
' → logprob: -8.330272674560547
    6. '<|end|>' → logprob: -9.455272674560547
    7. '  
' → logprob: -10.080272674560547
    8. '	print' → logprob: -10.205272674560547
    9. ')' → logprob: -10.205272674560547
    10. ' 
' → logprob: -10.705272674560547

Token 181: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004802245646715164
    2. '   ' → logprob: -5.504802227020264
    3. ' print' → logprob: -7.379802227020264
    4. '
' → logprob: -9.504802703857422
    5. '```' → logprob: -10.754802703857422
    6. '    
' → logprob: -12.879802703857422
    7. '	print' → logprob: -14.254802703857422
    8. '#print' → logprob: -15.504802703857422
    9. '``' → logprob: -16.504802703857422
    10. '  
' → logprob: -16.504802703857422

Token 182: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.12708821892738342
    2. '(' → logprob: -2.1270883083343506
    3. '(f' → logprob: -9.00208854675293
    4. '('' → logprob: -10.75208854675293
    5. '()' → logprob: -11.62708854675293
    6. '("' → logprob: -13.12708854675293
    7. '("("' → logprob: -13.37708854675293
    8. '(`' → logprob: -13.75208854675293
    9. 'total' → logprob: -14.50208854675293
    10. '(T' → logprob: -14.62708854675293

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. ' )' → logprob: -12.125008583068848
    3. '())' → logprob: -13.500008583068848
    4. ')
' → logprob: -13.875008583068848
    5. '()' → logprob: -14.250008583068848
    6. '`)' → logprob: -15.750008583068848
    7. ')`' → logprob: -16.000009536743164
    8. '))' → logprob: -16.500009536743164
    9. '```' → logprob: -16.500009536743164
    10. '*' → logprob: -17.250009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 181
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 96
Tokens correctement prédits (top 10): 162
Précision stricte (1ère position): 49.17%
Précision adaptée (1ère position): 53.04%
Précision (top 10): 89.50%
================================================================================
