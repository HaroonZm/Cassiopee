================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:29:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

N = int(sys.stdin.readline())
A = [int(sys.stdin.readline()) for _ in range(N)]

# 0-based index for convenience
# Since pieces are arranged in a circle, neighbors are (i-1)%N and (i+1)%N

# We try all possible first picks by JOI-kun
max_sum = 0

for first in range(N):
    taken = [False]*N
    joi_sum = A[first]
    taken[first] = True
    # The order of picking after the first pick is:
    # IOI first, then JOI, alternating
    
    # We maintain a list of pieces still available
    # and pick according to rules:
    # A piece can be taken if at least one neighbor is taken
    
    # After the first pick, the candidates are neighbors of first pick (both not taken)
    # On each turn:
    # - IOI must take the largest piece among candidates
    # - JOI can pick any from candidates
    
    # We simulate picking until all pieces are taken
    
    # We'll keep track of candidates for next pick (pieces adjacent to taken pieces)
    taken_count = 1
    
    # Using a deque or set to find candidates easily
    candidates = set()
    for i in range(N):
        if not taken[i]:
            # check if either neighbor is taken
            left = (i-1)%N
            right = (i+1)%N
            if taken[left] or taken[right]:
                candidates.add(i)
    
    turn_ioi = True  # IOI picks next
    
    # For JOI's picks, he wants to maximize sum,
    # so he will choose the candidate with largest A[i]
    
    while taken_count < N:
        if turn_ioi:
            # IOI chooses the largest piece among candidates
            if not candidates:
                break
            pick = max(candidates, key=lambda x:A[x])
            taken[pick] = True
            candidates.remove(pick)
        else:
            # JOI chooses optimally: pick candidate with largest A[i]
            if not candidates:
                break
            pick = max(candidates, key=lambda x:A[x])
            taken[pick] = True
            candidates.remove(pick)
            joi_sum += A[pick]
        taken_count += 1
        
        # update candidates: new candidates are pieces not taken
        # and have at least one neighbor taken
        for i in range(N):
            if not taken[i]:
                left = (i-1)%N
                right = (i+1)%N
                if taken[left] or taken[right]:
                    candidates.add(i)
                else:
                    candidates.discard(i)
        turn_ioi = not turn_ioi
    
    max_sum = max(max_sum, joi_sum)

print(max_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18198244273662567
    2. '\n' → logprob: -2.0569825172424316
    3. '<|end|>' → logprob: -4.181982517242432
    4. '\' → logprob: -4.431982517242432
    5. 'newline' → logprob: -5.556982517242432
    6. 'import' → logprob: -6.181982517242432
    7. '<|end|>' → logprob: -6.681982517242432
    8. '```' → logprob: -7.431982517242432
    9. ';' → logprob: -7.556982517242432
    10. '\r' → logprob: -7.556982517242432

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037681119283661246
    2. 'ursive' → logprob: -8.37537670135498
    3. 'urs' → logprob: -10.37537670135498
    4. 'limit' → logprob: -10.62537670135498
    5. 'urf' → logprob: -10.62537670135498
    6. 'ur' → logprob: -10.87537670135498
    7. '_limit' → logprob: -11.25037670135498
    8. '_' → logprob: -11.75037670135498
    9. 'ursor' → logprob: -12.37537670135498
    10. 'ursively' → logprob: -12.75037670135498

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4140441635390744e-05
    2. '(
' → logprob: -11.875014305114746
    3. ' (' → logprob: -12.375014305114746
    4. '(

' → logprob: -13.375014305114746
    5. '("("' → logprob: -15.250014305114746
    6. '((' → logprob: -15.375014305114746
    7. '('' → logprob: -15.500014305114746
    8. '(
' → logprob: -15.750014305114746
    9. '```' → logprob: -16.12501335144043
    10. '(.' → logprob: -16.50001335144043

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16023612022399902
    2. '100' → logprob: -1.910236120223999
    3. ' ' → logprob: -12.660236358642578
    4. '500' → logprob: -12.785236358642578
    5. '300' → logprob: -13.285236358642578
    6. '999' → logprob: -13.660236358642578
    7. '1' → logprob: -13.910236358642578
    8. '150' → logprob: -14.285236358642578
    9. '200' → logprob: -14.785236358642578
    10. '(' → logprob: -15.160236358642578

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09284054487943649
    2. '000' → logprob: -2.7178404331207275
    3. '00' → logprob: -3.8428404331207275
    4. '4' → logprob: -7.092840671539307
    5. '6' → logprob: -8.217840194702148
    6. '**' → logprob: -9.967840194702148
    7. '```' → logprob: -10.842840194702148
    8. '5' → logprob: -11.092840194702148
    9. '3' → logprob: -11.592840194702148
    10. '2' → logprob: -12.092840194702148

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0028600357472896576
    2. '6' → logprob: -6.252860069274902
    3. '9' → logprob: -7.002860069274902
    4. '8' → logprob: -10.752860069274902
    5. ' ' → logprob: -15.502860069274902
    6. '(' → logprob: -16.502859115600586
    7. '```' → logprob: -17.377859115600586
    8. '3' → logprob: -18.377859115600586
    9. ')' → logprob: -19.002859115600586
    10. '0' → logprob: -19.502859115600586

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -16.750003814697266
    5. ')))' → logprob: -18.000003814697266
    6. ' ' → logprob: -18.125003814697266
    7. '）' → logprob: -18.625003814697266
    8. '),' → logprob: -18.750003814697266
    9. ')`' → logprob: -18.750003814697266
    10. '')' → logprob: -19.000003814697266

Token 13: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7271348834037781
    2. ' ' → logprob: -1.3521349430084229
    3. ',' → logprob: -1.7271349430084229
    4. '=' → logprob: -2.852134943008423
    5. '.' → logprob: -4.727134704589844
    6. ' ,' → logprob: -4.852134704589844
    7. ')' → logprob: -6.852134704589844
    8. '[' → logprob: -6.977134704589844
    9. '  ' → logprob: -7.102134704589844
    10. '_' → logprob: -7.477134704589844

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05811439827084541
    2. 'int' → logprob: -3.0581142902374268
    3. ' ' → logprob: -4.933114528656006
    4. '10' → logprob: -6.433114528656006
    5. '20' → logprob: -8.308114051818848
    6. '5' → logprob: -8.808114051818848
    7. '100' → logprob: -9.558114051818848
    8. ' input' → logprob: -9.808114051818848
    9. '0' → logprob: -10.308114051818848
    10. '50' → logprob: -10.558114051818848

Token 16: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010360259329900146
    2. '(input' → logprob: -7.001036167144775
    3. '(sys' → logprob: -9.876035690307617
    4. '()' → logprob: -10.626035690307617
    5. '(N' → logprob: -10.751035690307617
    6. ' (' → logprob: -11.251035690307617
    7. '(
' → logprob: -12.751035690307617
    8. '('' → logprob: -13.501035690307617
    9. 'input' → logprob: -13.501035690307617
    10. '(int' → logprob: -14.001035690307617

Token 17: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.2927415668964386
    2. '.' → logprob: -1.5427415370941162
    3. '.argv' → logprob: -3.542741537094116
    4. '.readline' → logprob: -4.667741775512695
    5. '.input' → logprob: -7.167741775512695
    6. ' .' → logprob: -7.917741775512695
    7. '.stdout' → logprob: -8.542741775512695
    8. '.read' → logprob: -8.792741775512695
    9. '.import' → logprob: -10.167741775512695
    10. '.std' → logprob: -10.417741775512695

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0028406570199877024
    2. '.read' → logprob: -6.252840518951416
    3. '.' → logprob: -7.002840518951416
    4. '.readlines' → logprob: -14.502840995788574
    5. '.Read' → logprob: -14.877840995788574
    6. '.)' → logprob: -15.002840995788574
    7. '.READ' → logprob: -15.252840995788574
    8. '.stdin' → logprob: -15.752840995788574
    9. ' readline' → logprob: -16.002840042114258
    10. ' .' → logprob: -16.127840042114258

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01041497103869915
    2. '()' → logprob: -4.760415077209473
    3. ')' → logprob: -6.385415077209473
    4. '().' → logprob: -9.385415077209473
    5. '()))' → logprob: -11.760415077209473
    6. ' ())' → logprob: -11.760415077209473
    7. '())
' → logprob: -12.260415077209473
    8. '(' → logprob: -13.010415077209473
    9. '();)' → logprob: -13.885415077209473
    10. '()),' → logprob: -14.135415077209473

Token 20: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.028603434562683
    2. 'a' → logprob: -1.028603434562683
    3. 'for' → logprob: -2.1536035537719727
    4. 'data' → logprob: -3.1536035537719727
    5. 'tree' → logprob: -4.028603553771973
    6. 'dp' → logprob: -4.153603553771973
    7. 'S' → logprob: -4.403603553771973
    8. 'arr' → logprob: -4.528603553771973
    9. 'array' → logprob: -5.153603553771973
    10. 'x' → logprob: -5.403603553771973

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04832910746335983
    2. ' =' → logprob: -3.2983291149139404
    3. '[]' → logprob: -5.923328876495361
    4. '.' → logprob: -5.923328876495361
    5. '=' → logprob: -6.048328876495361
    6. '[:]' → logprob: -6.673328876495361
    7. '.append' → logprob: -7.798328876495361
    8. '[i' → logprob: -8.29832935333252
    9. '[int' → logprob: -9.17332935333252
    10. '[A' → logprob: -9.54832935333252

Token 22: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1618276834487915
    2. 'list' → logprob: -1.9118276834487915
    3. ' [' → logprob: -6.786827564239502
    4. ' []' → logprob: -8.16182804107666
    5. '[list' → logprob: -9.41182804107666
    6. '[' → logprob: -9.66182804107666
    7. '[]' → logprob: -10.53682804107666
    8. '[int' → logprob: -11.66182804107666
    9. ' ' → logprob: -12.91182804107666
    10. ' tuple' → logprob: -13.28682804107666

Token 23: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0023658976424485445
    2. ' int' → logprob: -6.252366065979004
    3. ']int' → logprob: -8.377366065979004
    4. '0' → logprob: -8.877366065979004
    5. '*' → logprob: -10.377366065979004
    6. '(int' → logprob: -11.002366065979004
    7. ']' → logprob: -11.877366065979004
    8. '[int' → logprob: -12.127366065979004
    9. ',int' → logprob: -13.002366065979004
    10. '<int' → logprob: -13.252366065979004

Token 24: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.2526473104953766
    2. '(' → logprob: -1.5026472806930542
    3. '(x' → logprob: -7.377647399902344
    4. '()' → logprob: -10.877647399902344
    5. '(s' → logprob: -11.127647399902344
    6. 'sys' → logprob: -11.627647399902344
    7. '(i' → logprob: -11.752647399902344
    8. '(input' → logprob: -11.877647399902344
    9. '(system' → logprob: -12.127647399902344
    10. '()]' → logprob: -12.377647399902344

Token 25: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06220295652747154
    2. '.readline' → logprob: -2.8122029304504395
    3. '.' → logprob: -8.812203407287598
    4. '.stdout' → logprob: -10.062203407287598
    5. '(stdin' → logprob: -10.687203407287598
    6. '().' → logprob: -11.437203407287598
    7. ' .' → logprob: -12.312203407287598
    8. ')' → logprob: -13.437203407287598
    9. 'stdin' → logprob: -13.812203407287598
    10. ').' → logprob: -14.437203407287598

Token 26: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00012654215970542282
    2. '.' → logprob: -9.125126838684082
    3. '().' → logprob: -12.000126838684082
    4. '.stdin' → logprob: -12.125126838684082
    5. '.readlines' → logprob: -13.125126838684082
    6. ').' → logprob: -14.250126838684082
    7. ')' → logprob: -14.375126838684082
    8. '(stdin' → logprob: -14.750126838684082
    9. '```' → logprob: -15.000126838684082
    10. '())' → logprob: -15.250126838684082

Token 27: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0008844300173223019
    2. '()' → logprob: -7.250884532928467
    3. '()]' → logprob: -8.750884056091309
    4. '()))' → logprob: -12.375884056091309
    5. '())
' → logprob: -12.375884056091309
    6. '()),' → logprob: -12.875884056091309
    7. ' ())' → logprob: -13.000884056091309
    8. '().' → logprob: -13.875884056091309
    9. '()`' → logprob: -14.875884056091309
    10. '()
' → logprob: -15.000884056091309

Token 28: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01976974867284298
    2. ')]' → logprob: -4.769769668579102
    3. '()' → logprob: -5.144769668579102
    4. ']' → logprob: -5.519769668579102
    5. 'for' → logprob: -7.519769668579102
    6. ' for' → logprob: -8.019769668579102
    7. '()]' → logprob: -8.394769668579102
    8. '())' → logprob: -9.394769668579102
    9. '[i' → logprob: -11.144769668579102
    10. ' )' → logprob: -11.394769668579102

Token 29: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4416818618774414
    2. ' range' → logprob: -1.4416818618774414
    3. ' ' → logprob: -2.8166818618774414
    4. ' _' → logprob: -2.9416818618774414
    5. ' i' → logprob: -5.191681861877441
    6. ' in' → logprob: -7.066681861877441
    7. '(' → logprob: -7.316681861877441
    8. '(range' → logprob: -8.691681861877441
    9. ' ▁' → logprob: -8.816681861877441
    10. 'range' → logprob: -8.941681861877441

Token 30: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16047169268131256
    2. ' range' → logprob: -1.9104716777801514
    3. '_' → logprob: -9.66047191619873
    4. ' in' → logprob: -9.66047191619873
    5. 'in' → logprob: -9.66047191619873
    6. '	range' → logprob: -10.03547191619873
    7. '(range' → logprob: -12.03547191619873
    8. ' ' → logprob: -12.91047191619873
    9. '  ' → logprob: -14.03547191619873
    10. ' xrange' → logprob: -14.53547191619873

Token 31: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '	range' → logprob: -17.251928329467773
    4. '(range' → logprob: -17.501928329467773
    5. ')' → logprob: -19.501928329467773
    6. '```' → logprob: -19.751928329467773
    7. ' ' → logprob: -20.001928329467773
    8. 'rang' → logprob: -20.251928329467773
    9. 'A' → logprob: -20.376928329467773
    10. '.range' → logprob: -21.251928329467773

Token 32: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06198001280426979
    2. '(' → logprob: -2.8119800090789795
    3. 'N' → logprob: -11.686980247497559
    4. ' (' → logprob: -13.686980247497559
    5. '(
' → logprob: -14.061980247497559
    6. '(n' → logprob: -14.186980247497559
    7. '(len' → logprob: -15.061980247497559
    8. ' N' → logprob: -15.436980247497559
    9. '(

' → logprob: -15.436980247497559
    10. '()' → logprob: -16.186979293823242

Token 33: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007362506585195661
    2. ')' → logprob: -7.500736236572266
    3. ']' → logprob: -8.625736236572266
    4. ' )' → logprob: -13.375736236572266
    5. '])]' → logprob: -14.500736236572266
    6. '）' → logprob: -14.500736236572266
    7. ')])' → logprob: -15.125736236572266
    8. '')]' → logprob: -15.375736236572266
    9. ')]
' → logprob: -15.625736236572266
    10. '])' → logprob: -16.000736236572266

Token 34: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0357166528701782
    2. 'def' → logprob: -1.0357166528701782
    3. 'A' → logprob: -2.1607165336608887
    4. 'dp' → logprob: -2.4107165336608887
    5. 'a' → logprob: -3.4107165336608887
    6. '#' → logprob: -4.535716533660889
    7. ')' → logprob: -4.785716533660889
    8. ',' → logprob: -5.535716533660889
    9. 'max' → logprob: -5.535716533660889
    10. 'result' → logprob: -6.035716533660889

Token 35: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8283917903900146
    2. 'def' → logprob: -1.0783917903900146
    3. 'dp' → logprob: -2.2033917903900146
    4. ' dp' → logprob: -3.3283917903900146
    5. ' def' → logprob: -3.7033917903900146
    6. ' d' → logprob: -4.828392028808594
    7. 'a' → logprob: -5.078392028808594
    8. 's' → logprob: -5.203392028808594
    9. ' ' → logprob: -5.328392028808594
    10. '#' → logprob: -5.453392028808594

Token 36: '0' (ID: 15)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5461068749427795
    2. 'dp' → logprob: -1.0461068153381348
    3. 'from' → logprob: -3.2961068153381348
    4. 'import' → logprob: -4.671106815338135
    5. 'A' → logprob: -4.921106815338135
    6. 'd' → logprob: -5.421106815338135
    7. 'stack' → logprob: -6.171106815338135
    8. 'max' → logprob: -6.296106815338135
    9. 'sys' → logprob: -6.421106815338135
    10. '#' → logprob: -6.546106815338135

Token 37: '-based' (ID: 8235)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2189251035451889
    2. '#' → logprob: -2.5939249992370605
    3. '<|end|>' → logprob: -3.4689249992370605
    4. 'x' → logprob: -3.5939249992370605
    5. ' #' → logprob: -4.5939249992370605
    6. '
' → logprob: -4.8439249992370605
    7. '.' → logprob: -5.2189249992370605
    8. ')' → logprob: -5.4689249992370605
    9. '<|end|>' → logprob: -5.4689249992370605
    10. ':' → logprob: -5.4689249992370605

Token 38: ' index' (ID: 3472)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9789339900016785
    2. 'dp' → logprob: -1.2289340496063232
    3. 'for' → logprob: -2.7289340496063232
    4. ')' → logprob: -3.2289340496063232
    5. 'a' → logprob: -3.3539340496063232
    6. '_' → logprob: -3.7289340496063232
    7. 'i' → logprob: -3.8539340496063232
    8. 'index' → logprob: -4.103933811187744
    9. ',' → logprob: -4.103933811187744
    10. 'depth' → logprob: -4.353933811187744

Token 39: ' for' (ID: 395)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1679483652114868
    2. '
' → logprob: -1.2929483652114868
    3. 'i' → logprob: -1.7929483652114868
    4. 'dp' → logprob: -3.2929482460021973
    5. ':' → logprob: -3.4179482460021973
    6. 'for' → logprob: -3.5429482460021973
    7. '' → logprob: -4.042948246002197
    8. '#' → logprob: -4.042948246002197
    9. ')' → logprob: -4.042948246002197
    10. ',' → logprob: -4.292948246002197

Token 40: ' convenience' (ID: 24582)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6065633893013
    2. 'i' → logprob: -1.4815633296966553
    3. 'dp' → logprob: -2.8565633296966553
    4. ' the' → logprob: -3.6065633296966553
    5. ' node' → logprob: -3.8565633296966553
    6. ' dp' → logprob: -4.231563568115234
    7. 'dfs' → logprob: -4.606563568115234
    8. ' recursion' → logprob: -4.856563568115234
    9. ' k' → logprob: -5.106563568115234
    10. ' sorting' → logprob: -5.231563568115234

Token 41: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1496882438659668
    2. 'd' → logprob: -3.024688243865967
    3. 'pos' → logprob: -4.399688243865967
    4. 'stack' → logprob: -4.649688243865967
    5. 'visited' → logprob: -4.774688243865967
    6. 'max' → logprob: -5.024688243865967
    7. 'i' → logprob: -5.399688243865967
    8. 'idx' → logprob: -5.399688243865967
    9. 'depth' → logprob: -5.399688243865967
    10. 'parent' → logprob: -5.524688243865967

Token 42: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12627427279949188
    2. 'stack' → logprob: -3.626274347305298
    3. 'parent' → logprob: -4.376274108886719
    4. 'depth' → logprob: -4.376274108886719
    5. 'for' → logprob: -4.626274108886719
    6. 'idx' → logprob: -4.751274108886719
    7. 'd' → logprob: -5.001274108886719
    8. 'pos' → logprob: -5.126274108886719
    9. 'def' → logprob: -5.251274108886719
    10. 'visited' → logprob: -5.501274108886719

Token 43: ' Since' (ID: 12265)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18401236832141876
    2. 'parent' → logprob: -3.6840124130249023
    3. 'depth' → logprob: -3.6840124130249023
    4. 'def' → logprob: -4.059012413024902
    5. 'stack' → logprob: -4.059012413024902
    6. 'A' → logprob: -4.684012413024902
    7. 'pos' → logprob: -4.809012413024902
    8. 'for' → logprob: -4.934012413024902
    9. 'edges' → logprob: -5.059012413024902
    10. 'l' → logprob: -5.309012413024902

Token 44: ' pieces' (ID: 12762)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4350462853908539
    2. 'the' → logprob: -2.1850461959838867
    3. 'A' → logprob: -2.4350461959838867
    4. ' we' → logprob: -2.9350461959838867
    5. ' A' → logprob: -3.3100461959838867
    6. 'we' → logprob: -4.435046195983887
    7. ' a' → logprob: -5.310046195983887
    8. ' Python' → logprob: -5.435046195983887
    9. ' in' → logprob: -5.560046195983887
    10. 'a' → logprob: -5.810046195983887

Token 45: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.24220333993434906
    2. ' can' → logprob: -2.1172032356262207
    3. 'are' → logprob: -3.3672032356262207
    4. ' of' → logprob: -3.8672032356262207
    5. 'can' → logprob: -4.492203235626221
    6. ' =' → logprob: -5.742203235626221
    7. ' ' → logprob: -5.867203235626221
    8. 'of' → logprob: -6.117203235626221
    9. ' have' → logprob: -6.242203235626221
    10. '=' → logprob: -6.492203235626221

Token 46: ' arranged' (ID: 36276)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7117863893508911
    2. 'cut' → logprob: -1.9617863893508911
    3. 'stack' → logprob: -2.4617862701416016
    4. ' ' → logprob: -2.9617862701416016
    5. 'placed' → logprob: -3.0867862701416016
    6. '1' → logprob: -3.2117862701416016
    7. 'connected' → logprob: -3.3367862701416016
    8. 'div' → logprob: -3.4617862701416016
    9. 'merged' → logprob: -3.5867862701416016
    10. 'to' → logprob: -3.7117862701416016

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39067763090133667
    2. 'in' → logprob: -1.2656776905059814
    3. 'from' → logprob: -4.390677452087402
    4. ' on' → logprob: -4.515677452087402
    5. ' line' → logprob: -5.140677452087402
    6. ' from' → logprob: -5.140677452087402
    7. 'on' → logprob: -6.265677452087402
    8. ' counter' → logprob: -6.890677452087402
    9. ' clockwise' → logprob: -7.140677452087402
    10. 'line' → logprob: -7.390677452087402

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.045030027627944946
    2. ' a' → logprob: -3.295030117034912
    3. 'circle' → logprob: -5.420030117034912
    4. 'line' → logprob: -7.795030117034912
    5. '円' → logprob: -8.045029640197754
    6. '一' → logprob: -8.545029640197754
    7. 'c' → logprob: -8.545029640197754
    8. ' circle' → logprob: -8.795029640197754
    9. '```' → logprob: -8.920029640197754
    10. 'an' → logprob: -8.982529640197754

Token 49: ' circle' (ID: 22005)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.4618052542209625
    2. ' circle' → logprob: -1.0868052244186401
    3. 'line' → logprob: -4.46180534362793
    4. 'c' → logprob: -4.83680534362793
    5. ' line' → logprob: -6.08680534362793
    6. 'ring' → logprob: -6.21180534362793
    7. ' circular' → logprob: -6.21180534362793
    8. ' ring' → logprob: -6.21180534362793
    9. 'row' → logprob: -6.83680534362793
    10. ' row' → logprob: -7.77430534362793

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019430378451943398
    2. ',
' → logprob: -6.501943111419678
    3. ' ,' → logprob: -9.62694263458252
    4. ')' → logprob: -9.75194263458252
    5. 'd' → logprob: -10.25194263458252
    6. 'circle' → logprob: -10.25194263458252
    7. '.' → logprob: -10.62694263458252
    8. 'a' → logprob: -10.87694263458252
    9. 'for' → logprob: -10.87694263458252
    10. ' clockwise' → logprob: -11.12694263458252

Token 51: ' neighbors' (ID: 31655)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.34183764457702637
    2. ' the' → logprob: -2.3418376445770264
    3. ' next' → logprob: -3.4668376445770264
    4. 'we' → logprob: -3.4668376445770264
    5. ' there' → logprob: -4.0918378829956055
    6. ' i' → logprob: -4.3418378829956055
    7. ' A' → logprob: -4.5918378829956055
    8. ' for' → logprob: -4.5918378829956055
    9. 'A' → logprob: -4.7168378829956055
    10. 'the' → logprob: -4.9668378829956055

Token 52: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09906677901744843
    2. ' are' → logprob: -2.849066734313965
    3. '=' → logprob: -3.474066734313965
    4. 'are' → logprob: -5.599066734313965
    5. ':' → logprob: -8.349066734313965
    6. ')' → logprob: -8.349066734313965
    7. 'A' → logprob: -8.474066734313965
    8. 'a' → logprob: -8.599066734313965
    9. ',' → logprob: -8.724066734313965
    10. 's' → logprob: -8.974066734313965

Token 53: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5562050342559814
    2. '(i' → logprob: -1.3062050342559814
    3. '[(' → logprob: -2.8062050342559814
    4. 'i' → logprob: -3.8062050342559814
    5. ' at' → logprob: -3.9312050342559814
    6. '```' → logprob: -4.431204795837402
    7. '[i' → logprob: -4.681204795837402
    8. ' i' → logprob: -4.931204795837402
    9. ' [(' → logprob: -5.056204795837402
    10. '(' → logprob: -5.181204795837402

Token 54: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07127353549003601
    2. ' (' → logprob: -2.9462735652923584
    3. 'i' → logprob: -4.196273326873779
    4. ' i' → logprob: -7.321273326873779
    5. '(N' → logprob: -8.821273803710938
    6. ')' → logprob: -9.696273803710938
    7. '(' → logprob: -9.821273803710938
    8. '```' → logprob: -9.821273803710938
    9. '(idx' → logprob: -10.196273803710938
    10. '(index' → logprob: -10.321273803710938

Token 55: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010839232243597507
    2. '+' → logprob: -4.885839462280273
    3. ' -' → logprob: -5.760839462280273
    4. ' +' → logprob: -10.260839462280273
    5. '1' → logprob: -11.010839462280273
    6. ' ' → logprob: -11.260839462280273
    7. '```' → logprob: -12.635839462280273
    8. '−' → logprob: -12.885839462280273
    9. ',' → logprob: -13.010839462280273
    10. '-
' → logprob: -13.760839462280273

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012494005495682359
    2. ' ' → logprob: -6.751249313354492
    3. '```' → logprob: -9.876249313354492
    4. 'i' → logprob: -12.126249313354492
    5. '+' → logprob: -12.251249313354492
    6. '-' → logprob: -12.376249313354492
    7. '2' → logprob: -12.563749313354492
    8. ')' → logprob: -13.376249313354492
    9. '``' → logprob: -13.876249313354492
    10. 'N' → logprob: -14.438749313354492

Token 57: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09117784351110458
    2. ')%' → logprob: -2.4661779403686523
    3. ' )' → logprob: -6.591177940368652
    4. ',' → logprob: -7.966177940368652
    5. '%' → logprob: -8.591177940368652
    6. '+' → logprob: -8.966177940368652
    7. ' and' → logprob: -9.716177940368652
    8. '),' → logprob: -9.716177940368652
    9. '```' → logprob: -10.716177940368652
    10. ' +' → logprob: -10.966177940368652

Token 58: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1269686371088028
    2. ' N' → logprob: -2.1269686222076416
    3. ' ' → logprob: -10.501968383789062
    4. 'n' → logprob: -12.751968383789062
    5. '	N' → logprob: -12.751968383789062
    6. ' ' → logprob: -13.126968383789062
    7. ',' → logprob: -13.751968383789062
    8. '```' → logprob: -14.001968383789062
    9. '(N' → logprob: -14.251968383789062
    10. '_N' → logprob: -14.376968383789062

Token 59: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5011727809906006
    2. 'for' → logprob: -1.8761727809906006
    3. ',' → logprob: -2.2511727809906006
    4. '#' → logprob: -3.0011727809906006
    5. '
' → logprob: -3.5011727809906006
    6. 'i' → logprob: -3.8761727809906006
    7. 'def' → logprob: -4.62617301940918
    8. ' for' → logprob: -5.25117301940918
    9. '```' → logprob: -5.25117301940918
    10. ',
' → logprob: -6.12617301940918

Token 60: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.14282387495040894
    2. '(i' → logprob: -2.0178239345550537
    3. '(' → logprob: -9.642824172973633
    4. ' ' → logprob: -10.017824172973633
    5. ' ' → logprob: -11.017824172973633
    6. '`' → logprob: -11.767824172973633
    7. '(I' → logprob: -12.892824172973633
    8. '```' → logprob: -12.892824172973633
    9. ' `(' → logprob: -13.142824172973633
    10. ',' → logprob: -13.392824172973633

Token 61: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.13587133586406708
    2. ' (' → logprob: -2.510871410369873
    3. 'i' → logprob: -3.135871410369873
    4. ' i' → logprob: -6.635871410369873
    5. '(' → logprob: -7.260871410369873
    6. '`' → logprob: -8.635870933532715
    7. ' ' → logprob: -10.135870933532715
    8. ')i' → logprob: -10.760870933532715
    9. '{i' → logprob: -11.010870933532715
    10. '```' → logprob: -11.010870933532715

Token 62: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00022678142704535276
    2. '-' → logprob: -9.250226974487305
    3. ')' → logprob: -9.625226974487305
    4. ' +' → logprob: -10.250226974487305
    5. '+
' → logprob: -11.875226974487305
    6. '```' → logprob: -12.125226974487305
    7. '1' → logprob: -12.250226974487305
    8. '＋' → logprob: -12.875226974487305
    9. '%' → logprob: -13.000226974487305
    10. '+)' → logprob: -13.250226974487305

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.052377623040229e-05
    2. ' ' → logprob: -9.625070571899414
    3. '```' → logprob: -12.875070571899414
    4. ')' → logprob: -14.500070571899414
    5. '+' → logprob: -15.125070571899414
    6. '
' → logprob: -15.375070571899414
    7. '`' → logprob: -15.750070571899414
    8. ' ' → logprob: -15.937570571899414
    9. '``' → logprob: -16.000070571899414
    10. '2' → logprob: -16.125070571899414

Token 64: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0010362643515691161
    2. ')' → logprob: -6.876036167144775
    3. '```' → logprob: -14.001036643981934
    4. '%' → logprob: -14.251036643981934
    5. ')
' → logprob: -14.876036643981934
    6. ' )' → logprob: -15.126036643981934
    7. ']%' → logprob: -15.376036643981934
    8. ')

' → logprob: -15.626036643981934
    9. ')`' → logprob: -15.751036643981934
    10. ')#' → logprob: -16.001035690307617

Token 65: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0325924449716695e-05
    2. ' N' → logprob: -11.62501049041748
    3. '```' → logprob: -14.37501049041748
    4. '<|end|>' → logprob: -15.25001049041748
    5. 'n' → logprob: -15.50001049041748
    6. ' ' → logprob: -16.125009536743164
    7. '`' → logprob: -17.375009536743164
    8. '	N' → logprob: -17.500009536743164
    9. '(' → logprob: -18.000009536743164
    10. ')' → logprob: -18.250009536743164

Token 66: '

' (ID: 279)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.2894233465194702
    2. 'dp' → logprob: -1.5394233465194702
    3. 'd' → logprob: -2.2894234657287598
    4. 'i' → logprob: -2.6644234657287598
    5. '#' → logprob: -2.7894234657287598
    6. 'def' → logprob: -3.1644234657287598
    7. 'used' → logprob: -3.6644234657287598
    8. 'max' → logprob: -3.7894234657287598
    9. 'answer' → logprob: -4.03942346572876
    10. 'stack' → logprob: -4.41442346572876

Token 67: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6655186414718628
    2. 'visited' → logprob: -1.4155186414718628
    3. 'def' → logprob: -2.7905187606811523
    4. 'd' → logprob: -3.1655187606811523
    5. 'max' → logprob: -3.7905187606811523
    6. 'answer' → logprob: -3.7905187606811523
    7. '#' → logprob: -4.165518760681152
    8. 'result' → logprob: -4.290518760681152
    9. 'stack' → logprob: -4.790518760681152
    10. 'used' → logprob: -5.040518760681152

Token 68: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.732140302658081
    2. 'visited' → logprob: -1.482140302658081
    3. 'def' → logprob: -2.107140302658081
    4. '#' → logprob: -2.482140302658081
    5. 'from' → logprob: -4.10714054107666
    6. 'd' → logprob: -4.48214054107666
    7. 'stack' → logprob: -4.60714054107666
    8. 'ans' → logprob: -4.85714054107666
    9. 'result' → logprob: -5.10714054107666
    10. 'answer' → logprob: -5.35714054107666

Token 69: ' try' (ID: 2075)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.559516191482544
    2. ''ll' → logprob: -1.809516191482544
    3. ''re' → logprob: -2.184516191482544
    4. ' want' → logprob: -3.059516191482544
    5. '=' → logprob: -3.934516191482544
    6. '#' → logprob: -4.309515953063965
    7. ''d' → logprob: -4.309515953063965
    8. ' =' → logprob: -4.684515953063965
    9. ' need' → logprob: -4.934515953063965
    10. 'd' → logprob: -5.059515953063965

Token 70: ' all' (ID: 722)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6334878206253052
    2. ' to' → logprob: -0.7584878206253052
    3. ':' → logprob: -8.383487701416016
    4. ' a' → logprob: -9.008487701416016
    5. 'a' → logprob: -9.258487701416016
    6. 'def' → logprob: -9.758487701416016
    7. 't' → logprob: -10.008487701416016
    8. '_to' → logprob: -10.133487701416016
    9. '#' → logprob: -10.258487701416016
    10. '```' → logprob: -10.383487701416016

Token 71: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.111887812614441
    2. ' starting' → logprob: -1.736887812614441
    3. 'i' → logprob: -2.1118879318237305
    4. 'starting' → logprob: -2.4868879318237305
    5. ' possible' → logprob: -2.8618879318237305
    6. ' i' → logprob: -2.8618879318237305
    7. 'poss' → logprob: -3.6118879318237305
    8. 'm' → logprob: -3.7368879318237305
    9. ' subsets' → logprob: -3.9868879318237305
    10. '```' → logprob: -4.6118879318237305

Token 72: ' first' (ID: 1577)
  Prédit: ' starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' starting' → logprob: -0.47928810119628906
    2. ' ways' → logprob: -1.729288101196289
    3. ' cuts' → logprob: -2.979288101196289
    4. ' pairs' → logprob: -3.979288101196289
    5. ' positions' → logprob: -4.104288101196289
    6. ' initial' → logprob: -4.479288101196289
    7. 'starting' → logprob: -4.604288101196289
    8. ' choices' → logprob: -4.854288101196289
    9. ' lengths' → logprob: -4.854288101196289
    10. ' cut' → logprob: -5.104288101196289

Token 73: ' picks' (ID: 37120)
  Prédit: ' moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' moves' → logprob: -1.1651628017425537
    2. ' cuts' → logprob: -1.7901628017425537
    3. 'moves' → logprob: -2.0401628017425537
    4. ' choices' → logprob: -2.6651628017425537
    5. 'cuts' → logprob: -2.9151628017425537
    6. ' pieces' → logprob: -3.1651628017425537
    7. '<|end|>' → logprob: -3.7901628017425537
    8. 'cut' → logprob: -3.7901628017425537
    9. ' cut' → logprob: -3.9151628017425537
    10. 'pieces' → logprob: -4.040163040161133

Token 74: ' by' (ID: 656)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5225602984428406
    2. 'for' → logprob: -1.5225603580474854
    3. 'i' → logprob: -2.5225603580474854
    4. ':' → logprob: -2.6475603580474854
    5. 'p' → logprob: -4.272560119628906
    6. ' for' → logprob: -5.772560119628906
    7. ',' → logprob: -5.772560119628906
    8. 'first' → logprob: -5.897560119628906
    9. 'result' → logprob: -6.147560119628906
    10. '(' → logprob: -6.647560119628906

Token 75: ' JO' (ID: 72685)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8365846276283264
    2. ' picking' → logprob: -2.7115845680236816
    3. 'for' → logprob: -2.9615845680236816
    4. 'cho' → logprob: -2.9615845680236816
    5. 'rem' → logprob: -3.0865845680236816
    6. 'enumer' → logprob: -3.0865845680236816
    7. ' choosing' → logprob: -3.2115845680236816
    8. ' iter' → logprob: -3.3365845680236816
    9. ' removing' → logprob: -3.5865845680236816
    10. 'range' → logprob: -3.7115845680236816

Token 76: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.28543519973754883
    2. 'JO' → logprob: -2.785435199737549
    3. 'Y' → logprob: -2.910435199737549
    4. 'B' → logprob: -3.785435199737549
    5. 'H' → logprob: -3.910435199737549
    6. 'E' → logprob: -4.410435199737549
    7. 'A' → logprob: -4.660435199737549
    8. 'hn' → logprob: -4.785435199737549
    9. 'i' → logprob: -4.785435199737549
    10. '```' → logprob: -5.160435199737549

Token 77: '-k' (ID: 10897)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6645547747612
    2. ':' → logprob: -1.5395548343658447
    3. '#' → logprob: -2.1645548343658447
    4. 'i' → logprob: -3.1645548343658447
    5. ' for' → logprob: -4.039554595947266
    6. 'f' → logprob: -4.414554595947266
    7. '_' → logprob: -4.914554595947266
    8. 'result' → logprob: -5.039554595947266
    9. 'dp' → logprob: -5.039554595947266
    10. '\' → logprob: -5.164554595947266

Token 78: 'un' (ID: 373)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8817929029464722
    2. '-k' → logprob: -1.3817929029464722
    3. '<|end|>' → logprob: -2.7567930221557617
    4. ' ' → logprob: -3.0067930221557617
    5. '_' → logprob: -3.1317930221557617
    6. ' -' → logprob: -3.5067930221557617
    7. '.' → logprob: -3.8817930221557617
    8. 'k' → logprob: -4.631793022155762
    9. ')' → logprob: -4.881793022155762
    10. ''s' → logprob: -4.881793022155762

Token 79: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8035937547683716
    2. 'result' → logprob: -2.303593635559082
    3. 'answer' → logprob: -2.553593635559082
    4. 'for' → logprob: -2.553593635559082
    5. 'answers' → logprob: -3.053593635559082
    6. 'p' → logprob: -3.178593635559082
    7. 'picked' → logprob: -3.428593635559082
    8. 'ans' → logprob: -3.678593635559082
    9. 'selected' → logprob: -3.803593635559082
    10. 'visited' → logprob: -3.928593635559082

Token 80: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0145845413208008
    2. 'i' → logprob: -1.6395845413208008
    3. 'f' → logprob: -2.139584541320801
    4. 'first' → logprob: -2.639584541320801
    5. 'answer' → logprob: -2.889584541320801
    6. 'p' → logprob: -3.139584541320801
    7. '#' → logprob: -3.264584541320801
    8. 'result' → logprob: -4.139584541320801
    9. 'answers' → logprob: -4.264584541320801
    10. ':' → logprob: -4.389584541320801

Token 81: '_sum' (ID: 29859)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.20249779522418976
    2. '_' → logprob: -2.577497720718384
    3. '_points' → logprob: -3.077497720718384
    4. '_sum' → logprob: -3.827497720718384
    5. '_value' → logprob: -4.077497959136963
    6. '_p' → logprob: -5.452497959136963
    7. '_val' → logprob: -6.077497959136963
    8. '_diff' → logprob: -6.327497959136963
    9. '_removed' → logprob: -6.452497959136963
    10. '_count' → logprob: -6.952497959136963

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043853312730789185
    2. '=' → logprob: -3.168853282928467
    3. ' ' → logprob: -7.293853282928467
    4. '_' → logprob: -8.793853759765625
    5. ',' → logprob: -11.418853759765625
    6. ')' → logprob: -12.668853759765625
    7. 's' → logprob: -13.168853759765625
    8. '  ' → logprob: -13.668853759765625
    9. ' ' → logprob: -14.418853759765625
    10. '.' → logprob: -14.418853759765625

Token 83: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20311272144317627
    2. '0' → logprob: -1.7031127214431763
    3. ' -' → logprob: -6.828112602233887
    4. '-' → logprob: -7.703112602233887
    5. ' float' → logprob: -9.328112602233887
    6. 'float' → logprob: -10.203112602233887
    7. ' max' → logprob: -10.828112602233887
    8. ' ' → logprob: -11.953112602233887
    9. 'max' → logprob: -12.078112602233887
    10. '  ' → logprob: -13.328112602233887

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008475062204524875
    2. '-' → logprob: -7.750847339630127
    3. ' ' → logprob: -8.250847816467285
    4. 'float' → logprob: -9.375847816467285
    5. 'max' → logprob: -10.125847816467285
    6. '-A' → logprob: -11.375847816467285
    7. 'A' → logprob: -12.125847816467285
    8. 'sum' → logprob: -12.625847816467285
    9. '-s' → logprob: -12.750847816467285
    10. '-max' → logprob: -13.125847816467285

Token 85: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06390520185232162
    2. ' for' → logprob: -2.9389052391052246
    3. '
' → logprob: -4.938905239105225
    4. '\n' → logprob: -7.688905239105225
    5. '' → logprob: -7.813905239105225
    6. ' ' → logprob: -7.938905239105225
    7. ' 
' → logprob: -8.688904762268066
    8. ',' → logprob: -9.313904762268066
    9. '\' → logprob: -9.438904762268066
    10. '#' → logprob: -9.563904762268066

Token 86: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014001218369230628
    2. ' for' → logprob: -9.125140190124512
    3. 'f' → logprob: -10.625140190124512
    4. ')' → logprob: -13.000140190124512
    5. 'i' → logprob: -14.250140190124512
    6. 'visited' → logprob: -14.250140190124512
    7. 'fo' → logprob: -14.500140190124512
    8. 'from' → logprob: -15.000140190124512
    9. 'dp' → logprob: -15.000140190124512
    10. ',' → logprob: -15.375140190124512

Token 87: ' first' (ID: 1577)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00154533376917243
    2. 'i' → logprob: -7.126545429229736
    3. ' _' → logprob: -7.501545429229736
    4. ' ' → logprob: -9.001544952392578
    5. '_' → logprob: -10.751544952392578
    6. ' first' → logprob: -11.626544952392578
    7. '_i' → logprob: -12.251544952392578
    8. '	i' → logprob: -12.376544952392578
    9. ' idx' → logprob: -12.814044952392578
    10. ' pick' → logprob: -13.064044952392578

Token 88: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19380399584770203
    2. '_p' → logprob: -2.5688040256500244
    3. ' _' → logprob: -3.1938040256500244
    4. '_pick' → logprob: -3.4438040256500244
    5. '_i' → logprob: -4.318803787231445
    6. '_piece' → logprob: -5.693803787231445
    7. '_choice' → logprob: -5.943803787231445
    8. ' in' → logprob: -6.068803787231445
    9. '_idx' → logprob: -6.193803787231445
    10. '_in' → logprob: -6.693803787231445

Token 89: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03366091102361679
    2. 'range' → logprob: -3.408660888671875
    3. '	range' → logprob: -11.783660888671875
    4. '(range' → logprob: -12.158660888671875
    5. ' ' → logprob: -13.658660888671875
    6. '   ' → logprob: -15.408660888671875
    7. '  ' → logprob: -16.158660888671875
    8. ' ' → logprob: -16.283660888671875
    9. ')' → logprob: -16.283660888671875
    10. '```' → logprob: -16.408660888671875

Token 90: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.12693335115909576
    2. '(' → logprob: -2.1269333362579346
    3. '(n' → logprob: -13.001933097839355
    4. '(
' → logprob: -13.501933097839355
    5. ' (' → logprob: -13.751933097839355
    6. '(len' → logprob: -15.751933097839355
    7. '(`' → logprob: -16.001934051513672
    8. '((' → logprob: -16.126934051513672
    9. '(

' → logprob: -16.126934051513672
    10. '(A' → logprob: -16.876934051513672

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.9743012671824545e-05
    2. ')' → logprob: -11.750020027160645
    3. '):
' → logprob: -12.375020027160645
    4. '+' → logprob: -12.500020027160645
    5. ':' → logprob: -13.125020027160645
    6. ' ):' → logprob: -13.375020027160645
    7. ']:' → logprob: -16.375019073486328
    8. '}:' → logprob: -16.625019073486328
    9. '-' → logprob: -16.750019073486328
    10. ',' → logprob: -17.750019073486328

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007725872565060854
    2. ' ' → logprob: -6.757725715637207
    3. ' sum' → logprob: -6.757725715637207
    4. '    ' → logprob: -6.882725715637207
    5. '   ' → logprob: -7.257725715637207
    6. '    
' → logprob: -7.757725715637207
    7. ' current' → logprob: -7.882725715637207
    8. ' dp' → logprob: -8.257725715637207
    9. ' ' → logprob: -8.257725715637207
    10. ':' → logprob: -8.257725715637207

Token 93: ' taken' (ID: 6697)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.15035772323608398
    2. 'dp' → logprob: -2.775357723236084
    3. '   ' → logprob: -3.400357723236084
    4. ' used' → logprob: -4.650357723236084
    5. ' visited' → logprob: -4.775357723236084
    6. ' DP' → logprob: -5.275357723236084
    7. ' ' → logprob: -5.400357723236084
    8. ' current' → logprob: -5.650357723236084
    9. '    ' → logprob: -6.150357723236084
    10. 'visited' → logprob: -6.400357723236084

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026462852954864502
    2. '=' → logprob: -3.6514627933502197
    3. '[' → logprob: -9.90146255493164
    4. ',' → logprob: -10.40146255493164
    5. ')' → logprob: -10.40146255493164
    6. 's' → logprob: -11.02646255493164
    7. '[]' → logprob: -11.65146255493164
    8. ' ' → logprob: -11.90146255493164
    9. '_' → logprob: -12.77646255493164
    10. ']' → logprob: -12.90146255493164

Token 95: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10276944190263748
    2. ' [' → logprob: -2.352769374847412
    3. '{' → logprob: -6.602769374847412
    4. 'set' → logprob: -6.977769374847412
    5. ' set' → logprob: -8.97776985168457
    6. '[N' → logprob: -9.72776985168457
    7. ' {' → logprob: -9.85276985168457
    8. ' ' → logprob: -11.60276985168457
    9. '[int' → logprob: -12.60276985168457
    10. '[start' → logprob: -12.97776985168457

Token 96: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00014644917973782867
    2. ' False' → logprob: -8.875146865844727
    3. '0' → logprob: -12.000146865844727
    4. '(False' → logprob: -15.000146865844727
    5. 'True' → logprob: -16.625146865844727
    6. ']' → logprob: -17.375146865844727
    7. '=False' → logprob: -18.500146865844727
    8. 'F' → logprob: -18.750146865844727
    9. ')' → logprob: -19.125146865844727
    10. 'Fal' → logprob: -19.125146865844727

Token 97: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023793911561369896
    2. ']*' → logprob: -4.148793697357178
    3. ' for' → logprob: -5.523793697357178
    4. 'for' → logprob: -5.898793697357178
    5. ' ]' → logprob: -8.023794174194336
    6. ']*(' → logprob: -8.273794174194336
    7. '(N' → logprob: -8.398794174194336
    8. ')' → logprob: -9.148794174194336
    9. '(' → logprob: -11.148794174194336
    10. ',' → logprob: -11.273794174194336

Token 98: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.1008713702030946e-06
    2. '(N' → logprob: -13.500001907348633
    3. ' N' → logprob: -14.250001907348633
    4. '(' → logprob: -17.875001907348633
    5. '	N' → logprob: -21.875001907348633
    6. ' (' → logprob: -22.250001907348633
    7. '[N' → logprob: -23.625001907348633
    8. 'Ｎ' → logprob: -23.625001907348633
    9. '{' → logprob: -24.375001907348633
    10. 'n' → logprob: -24.500001907348633

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6741837859153748
    2. '<|end|>' → logprob: -0.9241837859153748
    3. '   ' → logprob: -2.7991838455200195
    4. '	t' → logprob: -4.5491838455200195
    5. '    
' → logprob: -5.0491838455200195
    6. '<|end|>' → logprob: -5.6741838455200195
    7. '  ' → logprob: -5.9241838455200195
    8. 't' → logprob: -6.2991838455200195
    9. '    ' → logprob: -6.4241838455200195
    10. '  
' → logprob: -6.6741838455200195

Token 100: '   ' (ID: 271)
  Prédit: ' taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taken' → logprob: -0.8522652983665466
    2. '   ' → logprob: -1.2272653579711914
    3. 'taken' → logprob: -1.3522653579711914
    4. '    ' → logprob: -4.602265357971191
    5. ' ' → logprob: -5.602265357971191
    6. '<|end|>' → logprob: -6.102265357971191
    7. 't' → logprob: -6.727265357971191
    8. 'sum' → logprob: -7.227265357971191
    9. '    
' → logprob: -7.352265357971191
    10. '	t' → logprob: -7.477265357971191

Token 101: ' joi' (ID: 193529)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.22655804455280304
    2. 'sum' → logprob: -2.101557970046997
    3. 'stack' → logprob: -3.601557970046997
    4. 'current' → logprob: -4.226558208465576
    5. 'dp' → logprob: -4.351558208465576
    6. 'total' → logprob: -4.601558208465576
    7. ' taken' → logprob: -5.226558208465576
    8. '   ' → logprob: -6.101558208465576
    9. 'score' → logprob: -6.351558208465576
    10. 'queue' → logprob: -6.726558208465576

Token 102: '_sum' (ID: 29859)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.9406370520591736
    2. '_taken' → logprob: -1.0656371116638184
    3. '_sum' → logprob: -1.8156371116638184
    4. '-t' → logprob: -3.0656371116638184
    5. 'sum' → logprob: -4.065637111663818
    6. 'taken' → logprob: -5.065637111663818
    7. '-s' → logprob: -5.190637111663818
    8. ' =' → logprob: -5.440637111663818
    9. '_k' → logprob: -5.690637111663818
    10. '-' → logprob: -5.690637111663818

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698817253112793
    2. '=' → logprob: -2.126988172531128
    3. ' +=' → logprob: -10.376988410949707
    4. ' ' → logprob: -10.751988410949707
    5. '<|end|>' → logprob: -12.626988410949707
    6. '+=' → logprob: -13.626988410949707
    7. '  ' → logprob: -14.376988410949707
    8. ')' → logprob: -14.876988410949707
    9. ',' → logprob: -14.876988410949707
    10. '[' → logprob: -15.251988410949707

Token 104: ' A' (ID: 355)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5282526016235352
    2. 'A' → logprob: -1.2782526016235352
    3. ' A' → logprob: -2.278252601623535
    4. ' ' → logprob: -3.528252601623535
    5. '   ' → logprob: -12.528252601623535
    6. '	A' → logprob: -12.778252601623535
    7. '1' → logprob: -12.965752601623535
    8. '```' → logprob: -13.340752601623535
    9. '+A' → logprob: -13.715752601623535
    10. '  ' → logprob: -14.153252601623535

Token 105: '[first' (ID: 162208)
  Prédit: '[first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[first' → logprob: -0.06377513706684113
    2. '<|end|>' → logprob: -3.188775062561035
    3. '[' → logprob: -4.938775062561035
    4. '[:' → logprob: -5.063775062561035
    5. 'first' → logprob: -5.938775062561035
    6. '[:]' → logprob: -6.313775062561035
    7. '.copy' → logprob: -6.563775062561035
    8. '[
' → logprob: -8.063775062561035
    9. '
' → logprob: -8.813775062561035
    10. '<|end|>' → logprob: -8.938775062561035

Token 106: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023545988369733095
    2. ' ]' → logprob: -6.377354621887207
    3. ']+' → logprob: -8.002354621887207
    4. ')' → logprob: -8.877354621887207
    5. '])' → logprob: -9.252354621887207
    6. ']
' → logprob: -9.752354621887207
    7. ')]' → logprob: -11.627354621887207
    8. ' )' → logprob: -12.877354621887207
    9. '+' → logprob: -13.127354621887207
    10. ']

' → logprob: -13.502354621887207

Token 107: '   ' (ID: 271)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.5866885185241699
    2. ' taken' → logprob: -1.33668851852417
    3. '   ' → logprob: -1.71168851852417
    4. '	t' → logprob: -8.711688995361328
    5. '
' → logprob: -9.211688995361328
    6. '    
' → logprob: -9.586688995361328
    7. '_taken' → logprob: -9.586688995361328
    8. 't' → logprob: -9.836688995361328
    9. '```' → logprob: -10.586688995361328
    10. '\t' → logprob: -11.086688995361328

Token 108: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' (adapté à ' taken') → logprob: -0.011476418934762478
    2. ' taken' → logprob: -4.511476516723633
    3. '   ' → logprob: -7.761476516723633
    4. '```' → logprob: -13.636476516723633
    5. 'tak' → logprob: -14.136476516723633
    6. 't' → logprob: -15.386476516723633
    7. '
' → logprob: -15.886476516723633
    8. '  ' → logprob: -16.136476516723633
    9. ' ' → logprob: -16.261476516723633
    10. '_taken' → logprob: -16.511476516723633

Token 109: '[first' (ID: 162208)
  Prédit: '[first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[first' → logprob: -3.225939872208983e-05
    2. '[' → logprob: -10.375032424926758
    3. ')[' → logprob: -15.125032424926758
    4. '```' → logprob: -15.875032424926758
    5. '[f' → logprob: -16.250032424926758
    6. ' [' → logprob: -16.375032424926758
    7. '[j' → logprob: -16.500032424926758
    8. '[i' → logprob: -16.500032424926758
    9. '[start' → logprob: -16.625032424926758
    10. '\[' → logprob: -16.750032424926758

Token 110: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.65707261255011e-06
    2. ']=' → logprob: -11.875008583068848
    3. ' ]' → logprob: -13.375008583068848
    4. ']
' → logprob: -17.625009536743164
    5. '=' → logprob: -17.625009536743164
    6. '[' → logprob: -17.875009536743164
    7. ' ' → logprob: -18.250009536743164
    8. '']' → logprob: -18.875009536743164
    9. ')' → logprob: -18.875009536743164
    10. ' ' → logprob: -19.000009536743164

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25199800729751587
    2. '=' → logprob: -1.501997947692871
    3. '=True' → logprob: -9.626997947692871
    4. ']' → logprob: -13.751997947692871
    5. ' ' → logprob: -14.501997947692871
    6. '[' → logprob: -14.876997947692871
    7. ')' → logprob: -14.876997947692871
    8. ',' → logprob: -15.001997947692871
    9. 'True' → logprob: -15.376997947692871
    10. ']=' → logprob: -16.126998901367188

Token 112: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. '(True' → logprob: -21.000158309936523
    4. '=True' → logprob: -21.500158309936523
    5. '1' → logprob: -22.250158309936523
    6. 'Tr' → logprob: -23.875158309936523
    7. ' ' → logprob: -24.750158309936523
    8. 'T' → logprob: -25.125158309936523
    9. 'False' → logprob: -25.375158309936523
    10. 'true' → logprob: -26.000158309936523

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.263180136680603
    2. 'left' → logprob: -1.263180136680603
    3. 'next' → logprob: -1.388180136680603
    4. 'prev' → logprob: -2.5131802558898926
    5. 'j' → logprob: -3.6381802558898926
    6. 'last' → logprob: -4.138180255889893
    7. 'current' → logprob: -4.263180255889893
    8. ' next' → logprob: -4.388180255889893
    9. 'for' → logprob: -4.513180255889893
    10. '#' → logprob: -4.763180255889893

Token 114: '   ' (ID: 271)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2634947896003723
    2. 'next' → logprob: -2.2634947299957275
    3. 'prev' → logprob: -2.7634947299957275
    4. '   ' → logprob: -3.7634947299957275
    5. 'last' → logprob: -4.388494968414307
    6. 'current' → logprob: -4.888494968414307
    7. 'j' → logprob: -4.888494968414307
    8. 'right' → logprob: -5.013494968414307
    9. 'for' → logprob: -6.388494968414307
    10. ' left' → logprob: -6.638494968414307

Token 115: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.29519471526145935
    2. 'prev' → logprob: -1.7951947450637817
    3. 'current' → logprob: -3.420194625854492
    4. 'last' → logprob: -3.920194625854492
    5. 'next' → logprob: -4.045194625854492
    6. 'j' → logprob: -4.920194625854492
    7. 'for' → logprob: -5.545194625854492
    8. 'stack' → logprob: -6.545194625854492
    9. 'right' → logprob: -6.795194625854492
    10. '#' (adapté à ' #') → logprob: -6.920194625854492

Token 116: ' The' (ID: 623)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.629060685634613
    2. ' next' → logprob: -2.504060745239258
    3. 'current' → logprob: -2.629060745239258
    4. 'prev' → logprob: -2.879060745239258
    5. 'left' → logprob: -3.129060745239258
    6. 'for' → logprob: -3.129060745239258
    7. 'j' → logprob: -3.254060745239258
    8. '#' → logprob: -3.629060745239258
    9. 'i' → logprob: -3.879060745239258
    10. 'last' → logprob: -3.879060745239258

Token 117: ' order' (ID: 2569)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.0041166543960571
    2. 'next' → logprob: -1.8791166543960571
    3. 'left' → logprob: -2.1291165351867676
    4. ' left' → logprob: -2.2541165351867676
    5. 'n' → logprob: -2.7541165351867676
    6. ' neighbors' → logprob: -3.5041165351867676
    7. '#' → logprob: -3.6291165351867676
    8. 'rest' → logprob: -3.7541165351867676
    9. 'neighbors' → logprob: -3.7541165351867676
    10. ' rest' → logprob: -4.129116535186768

Token 118: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' picking' (ID: 30859)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09398581832647324
    2. ' picks' → logprob: -3.3439857959747314
    3. 'taking' → logprob: -4.8439860343933105
    4. 'for' → logprob: -5.2189860343933105
    5. 'selection' → logprob: -5.3439860343933105
    6. '#' → logprob: -5.4689860343933105
    7. ' picking' → logprob: -5.4689860343933105
    8. 'the' → logprob: -5.7189860343933105
    9. ' taking' → logprob: -5.8439860343933105
    10. ' the' → logprob: -5.9689860343933105

Token 120: ' after' (ID: 1934)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.755567729473114
    2. ' for' → logprob: -0.880567729473114
    3. ' is' → logprob: -2.880567789077759
    4. ' and' → logprob: -3.755567789077759
    5. 'is' → logprob: -4.75556755065918
    6. 'and' → logprob: -5.00556755065918
    7. '<|end|>' → logprob: -5.25556755065918
    8. 'next' → logprob: -5.88056755065918
    9. '   ' → logprob: -6.63056755065918
    10. ' after' → logprob: -6.88056755065918

Token 121: ' the' (ID: 290)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.11192033439874649
    2. 'the' → logprob: -2.6119203567504883
    3. ' first' → logprob: -3.9869203567504883
    4. 'j' → logprob: -4.861920356750488
    5. ' the' → logprob: -5.736920356750488
    6. 'JO' → logprob: -6.736920356750488
    7. 'taking' → logprob: -7.736920356750488
    8. 'initial' → logprob: -8.486920356750488
    9. '"' → logprob: -8.486920356750488
    10. '#' → logprob: -9.111920356750488

Token 122: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0014327395474538207
    2. ' first' → logprob: -6.6264328956604
    3. 'initial' → logprob: -9.376432418823242
    4. 'j' → logprob: -12.126432418823242
    5. '#' → logprob: -12.501432418823242
    6. 'for' → logprob: -12.751432418823242
    7. 'last' → logprob: -13.001432418823242
    8. '```' → logprob: -13.251432418823242
    9. 'current' → logprob: -13.751432418823242
    10. 'second' → logprob: -13.876432418823242

Token 123: ' pick' (ID: 5230)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.3172993063926697
    2. 'for' → logprob: -2.6922993659973145
    3. '=' → logprob: -2.9422993659973145
    4. 'token' → logprob: -3.3172993659973145
    5. ' for' → logprob: -4.0672993659973145
    6. '<|end|>' → logprob: -4.1922993659973145
    7. ' is' → logprob: -4.3172993659973145
    8. 'is' → logprob: -4.4422993659973145
    9. ' =' → logprob: -4.4422993659973145
    10. ' ' → logprob: -5.0672993659973145

Token 124: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2067006826400757
    2. 'not' → logprob: -1.3317006826400757
    3. '[]' → logprob: -1.9567006826400757
    4. 'for' → logprob: -2.4567008018493652
    5. ' not' → logprob: -2.9567008018493652
    6. 'None' → logprob: -3.2067008018493652
    7. '#' → logprob: -3.8317008018493652
    8. ' None' → logprob: -4.331700801849365
    9. ' [' → logprob: -4.456700801849365
    10. ' for' → logprob: -4.706700801849365

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29535743594169617
    2. 'for' → logprob: -2.0453574657440186
    3. ' for' → logprob: -2.7953574657440186
    4. '#' → logprob: -3.5453574657440186
    5. 'j' → logprob: -4.5453572273254395
    6. 'next' → logprob: -5.1703572273254395
    7. 'pick' → logprob: -5.2953572273254395
    8. '    
' → logprob: -5.4203572273254395
    9. 'i' → logprob: -6.4203572273254395
    10. 'current' → logprob: -6.5453572273254395

Token 127: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5739495754241943
    2. 'for' → logprob: -1.4489495754241943
    3. 'j' → logprob: -2.1989495754241943
    4. 'current' → logprob: -3.6989495754241943
    5. 'idx' → logprob: -4.073949813842773
    6. 'i' → logprob: -4.573949813842773
    7. ' #' → logprob: -5.073949813842773
    8. ' for' → logprob: -5.198949813842773
    9. 'order' → logprob: -5.573949813842773
    10. 'turn' → logprob: -5.698949813842773

Token 128: ' IO' (ID: 10357)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2207391262054443
    2. '#' → logprob: -1.5957391262054443
    3. 'j' → logprob: -1.5957391262054443
    4. ' for' → logprob: -3.0957391262054443
    5. 'current' → logprob: -3.0957391262054443
    6. 'left' → logprob: -3.0957391262054443
    7. 'i' → logprob: -3.2207391262054443
    8. 'prev' → logprob: -4.095739364624023
    9. ' #' → logprob: -4.470739364624023
    10. 'pick' → logprob: -4.595739364624023

Token 129: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.3299497663974762
    2. 'i' → logprob: -2.2049498558044434
    3. '-k' → logprob: -2.4549498558044434
    4. 'j' → logprob: -4.454949855804443
    5. '-' → logprob: -4.454949855804443
    6. 'k' → logprob: -4.704949855804443
    7. 'for' → logprob: -5.204949855804443
    8. '#' → logprob: -5.329949855804443
    9. ' =' → logprob: -5.329949855804443
    10. '=' → logprob: -5.329949855804443

Token 130: ' first' (ID: 1577)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.27126145362854
    2. '-k' → logprob: -1.39626145362854
    3. ' picks' → logprob: -2.27126145362854
    4. 'k' → logprob: -2.77126145362854
    5. ''s' → logprob: -3.02126145362854
    6. '_index' → logprob: -3.14626145362854
    7. 'for' → logprob: -3.89626145362854
    8. ',' → logprob: -3.89626145362854
    9. '-' → logprob: -4.021261215209961
    10. 's' → logprob: -4.021261215209961

Token 131: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: ' then' (ID: 1815)
  Prédit: ' then'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.23809602856636047
    2. 'j' → logprob: -2.238095998764038
    3. 'then' → logprob: -2.738095998764038
    4. ' joi' → logprob: -4.488096237182617
    5. '#' → logprob: -4.988096237182617
    6. ' j' → logprob: -5.238096237182617
    7. ' #' → logprob: -5.863096237182617
    8. 'for' → logprob: -6.113096237182617
    9. 'J' → logprob: -6.113096237182617
    10. ' ' → logprob: -6.738096237182617

Token 133: ' JO' (ID: 72685)
  Prédit: 'JO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JO' → logprob: -0.06632473319768906
    2. 'J' → logprob: -3.3163247108459473
    3. 'j' → logprob: -4.066324710845947
    4. ' JO' → logprob: -4.816324710845947
    5. '   ' → logprob: -6.691324710845947
    6. ' ' → logprob: -7.441324710845947
    7. '
' → logprob: -7.816324710845947
    8. '#' → logprob: -9.066325187683105
    9. 'for' → logprob: -9.441325187683105
    10. ' joi' → logprob: -9.941325187683105

Token 134: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.11026279628276825
    2. 'i' → logprob: -2.860262870788574
    3. '-' → logprob: -3.485262870788574
    4. '-k' → logprob: -4.360262870788574
    5. '```' → logprob: -7.110262870788574
    6. '
' → logprob: -7.735262870788574
    7. '   ' → logprob: -8.235262870788574
    8. '-i' → logprob: -8.485262870788574
    9. 'k' → logprob: -8.735262870788574
    10. ' ' → logprob: -8.860262870788574

Token 135: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' alternating' (ID: 125099)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4991196095943451
    2. ' IO' → logprob: -1.6241196393966675
    3. 'IO' → logprob: -1.9991196393966675
    4. ' then' → logprob: -3.124119520187378
    5. '#' → logprob: -5.374119758605957
    6. ' for' → logprob: -6.374119758605957
    7. ' and' → logprob: -6.499119758605957
    8. ' #' → logprob: -6.499119758605957
    9. ' ' → logprob: -6.749119758605957
    10. 'io' → logprob: -6.874119758605957

Token 137: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: '   ' (ID: 271)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.57786625623703
    2. 'turn' → logprob: -1.4528663158416748
    3. 'next' → logprob: -3.202866315841675
    4. 'j' → logprob: -3.327866315841675
    5. 'idx' → logprob: -3.452866315841675
    6. 'pick' → logprob: -3.577866315841675
    7. 'i' → logprob: -3.702866315841675
    8. 'def' → logprob: -4.577866077423096
    9. 'for' → logprob: -5.202866077423096
    10. 'current' → logprob: -5.327866077423096

Token 139: ' #' (ID: 1069)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'io' → logprob: -1.0310072898864746
    2. 'j' → logprob: -1.6560072898864746
    3. 'turn' → logprob: -1.9060072898864746
    4. 'order' → logprob: -2.5310072898864746
    5. 'next' → logprob: -2.7810072898864746
    6. 'idx' → logprob: -3.4060072898864746
    7. 'i' → logprob: -3.9060072898864746
    8. 'prev' → logprob: -4.156007289886475
    9. 'from' → logprob: -4.281007289886475
    10. 'pick' → logprob: -4.281007289886475

Token 140: ' We' (ID: 1416)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.38321608304977417
    2. 'j' → logprob: -2.508216142654419
    3. 'next' → logprob: -2.508216142654419
    4. 'turn' → logprob: -3.383216142654419
    5. 'i' → logprob: -3.633216142654419
    6. 'def' → logprob: -4.13321590423584
    7. 'from' → logprob: -4.38321590423584
    8. 'current' → logprob: -4.50821590423584
    9. '#' → logprob: -4.63321590423584
    10. 'idx' → logprob: -4.75821590423584

Token 141: ' maintain' (ID: 12930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45431405305862427
    2. '=' → logprob: -1.9543139934539795
    3. '#' → logprob: -2.4543139934539795
    4. 'n' → logprob: -3.7043139934539795
    5. ' for' → logprob: -4.204314231872559
    6. 'for' → logprob: -4.204314231872559
    7. '   ' → logprob: -4.579314231872559
    8. ' continue' → logprob: -4.704314231872559
    9. 'i' → logprob: -4.829314231872559
    10. 'continue' → logprob: -4.829314231872559

Token 142: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3670000731945038
    2. 'j' → logprob: -1.8670001029968262
    3. ' a' → logprob: -3.242000102996826
    4. 'io' → logprob: -3.492000102996826
    5. 'i' → logprob: -4.242000102996826
    6. 'queue' → logprob: -4.367000102996826
    7. 'turn' → logprob: -4.492000102996826
    8. 'order' → logprob: -4.992000102996826
    9. 'two' → logprob: -4.992000102996826
    10. 'current' → logprob: -5.617000102996826

Token 143: ' list' (ID: 1562)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3046835660934448
    2. 'from' → logprob: -2.0546836853027344
    3. 'deque' → logprob: -2.1796836853027344
    4. 'stack' → logprob: -4.054683685302734
    5. ' queue' → logprob: -6.554683685302734
    6. 'import' → logprob: -6.929683685302734
    7. 'pointer' → logprob: -8.554683685302734
    8. 'candidate' → logprob: -8.679683685302734
    9. ' from' → logprob: -9.054683685302734
    10. 'def' → logprob: -9.054683685302734

Token 144: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.19860073924064636
    2. 'of' → logprob: -1.9486007690429688
    3. '<|end|>' → logprob: -3.8236007690429688
    4. '<|end|>' → logprob: -5.323600769042969
    5. 'neighbors' → logprob: -5.573600769042969
    6. ' =' → logprob: -6.448600769042969
    7. '_neighbors' → logprob: -7.323600769042969
    8. 'indices' → logprob: -7.698600769042969
    9. 'available' → logprob: -8.073600769042969
    10. 'positions' → logprob: -8.198600769042969

Token 145: ' pieces' (ID: 12762)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1360408514738083
    2. 'available' → logprob: -2.6360409259796143
    3. 'neighbors' → logprob: -4.011040687561035
    4. 'indices' → logprob: -4.136040687561035
    5. 'remaining' → logprob: -5.136040687561035
    6. 'possible' → logprob: -5.261040687561035
    7. 'candidate' → logprob: -6.261040687561035
    8. ' candidates' → logprob: -6.511040687561035
    9. 'taken' → logprob: -6.636040687561035
    10. 'picked' → logprob: -7.011040687561035

Token 146: ' still' (ID: 2928)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.09630701690912247
    2. ' that' → logprob: -3.7213070392608643
    3. 'that' → logprob: -4.346306800842285
    4. ' available' → logprob: -4.346306800842285
    5. 'indices' → logprob: -4.596306800842285
    6. 'left' → logprob: -5.471306800842285
    7. 'remaining' → logprob: -5.596306800842285
    8. ' =' → logprob: -5.721306800842285
    9. 'positions' → logprob: -5.971306800842285
    10. ' of' → logprob: -6.221306800842285

Token 147: ' available' (ID: 2839)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.014909306541085243
    2. ' available' → logprob: -4.889909267425537
    3. 'to' → logprob: -5.514909267425537
    4. 'left' → logprob: -7.014909267425537
    5. '<|end|>' → logprob: -7.389909267425537
    6. '_available' → logprob: -7.764909267425537
    7. 'remaining' → logprob: -8.264909744262695
    8. 'not' → logprob: -8.764909744262695
    9. 'taken' → logprob: -8.764909744262695
    10. ' to' → logprob: -9.014909744262695

Token 148: '
' (ID: 198)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.019881824031472206
    2. 'pieces' → logprob: -4.769881725311279
    3. 'remaining' → logprob: -5.519881725311279
    4. ' available' → logprob: -5.644881725311279
    5. '<|end|>' → logprob: -7.144881725311279
    6. ',' → logprob: -7.269881725311279
    7. 'indices' → logprob: -7.519881725311279
    8. ' pieces' → logprob: -7.894881725311279
    9. ' =' → logprob: -8.269882202148438
    10. 'remain' → logprob: -8.894882202148438

Token 149: '   ' (ID: 271)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.11748781055212021
    2. ' available' → logprob: -3.242487907409668
    3. '<|end|>' → logprob: -3.492487907409668
    4. 'remaining' → logprob: -3.742487907409668
    5. 'pieces' → logprob: -4.867487907409668
    6. '   ' → logprob: -6.117487907409668
    7. ',' → logprob: -6.617487907409668
    8. ' remaining' → logprob: -6.742487907409668
    9. ' to' → logprob: -7.117487907409668
    10. ' for' → logprob: -7.742487907409668

Token 150: ' #' (ID: 1069)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.31807583570480347
    2. ' available' → logprob: -1.3180758953094482
    3. 'pieces' → logprob: -6.693075656890869
    4. ' pieces' → logprob: -6.693075656890869
    5. 'remaining' → logprob: -7.068075656890869
    6. ' remaining' → logprob: -7.068075656890869
    7. ' left' → logprob: -9.068076133728027
    8. 'left' → logprob: -9.318076133728027
    9. 'remain' → logprob: -9.443076133728027
    10. ' taken' → logprob: -9.943076133728027

Token 151: ' and' (ID: 326)
  Prédit: ' available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' available' → logprob: -0.29778730869293213
    2. 'available' → logprob: -1.4227873086929321
    3. ' remaining' → logprob: -5.047787189483643
    4. ' pieces' → logprob: -5.172787189483643
    5. 'remaining' → logprob: -6.797787189483643
    6. 'pieces' → logprob: -6.797787189483643
    7. ' rest' → logprob: -7.297787189483643
    8. ' remain' → logprob: -7.672787189483643
    9. 'rest' → logprob: -8.1727876663208
    10. 'remain' → logprob: -8.5477876663208

Token 152: ' pick' (ID: 5230)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.4667792320251465
    2. 'available' → logprob: -1.5917792320251465
    3. 'current' → logprob: -2.2167792320251465
    4. 'indices' → logprob: -3.2167792320251465
    5. '#' → logprob: -3.4667792320251465
    6. 'remaining' → logprob: -3.4667792320251465
    7. 'order' → logprob: -3.9667792320251465
    8. 'c' → logprob: -3.9667792320251465
    9. 'positions' → logprob: -3.9667792320251465
    10. 'idx' → logprob: -3.9667792320251465

Token 153: ' according' (ID: 7065)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.2938320636749268
    2. ' next' → logprob: -1.5438320636749268
    3. ' the' → logprob: -2.1688320636749268
    4. 'next' → logprob: -2.9188320636749268
    5. ' pieces' → logprob: -2.9188320636749268
    6. '_indices' → logprob: -3.4188320636749268
    7. '_index' → logprob: -3.6688320636749268
    8. '_idx' → logprob: -3.7938320636749268
    9. 'from' → logprob: -3.9188320636749268
    10. 'pieces' → logprob: -4.043831825256348

Token 154: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.01112834457308054
    2. ' to' → logprob: -4.5111284255981445
    3. 'available' → logprob: -10.636128425598145
    4. '#' → logprob: -10.886128425598145
    5. '_to' → logprob: -11.511128425598145
    6. 'ly' → logprob: -11.636128425598145
    7. 'pieces' → logprob: -12.386128425598145
    8. '```' → logprob: -13.011128425598145
    9. '[to' → logprob: -13.136128425598145
    10. 'for' → logprob: -13.636128425598145

Token 155: ' rules' (ID: 9607)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7159363627433777
    2. 'the' → logprob: -1.0909364223480225
    3. ' their' → logprob: -2.3409364223480225
    4. 'their' → logprob: -2.9659364223480225
    5. ' availability' → logprob: -5.590936183929443
    6. 'neighbors' → logprob: -5.590936183929443
    7. ' rules' → logprob: -5.715936183929443
    8. ' certain' → logprob: -5.965936183929443
    9. 'certain' → logprob: -6.715936183929443
    10. 'def' → logprob: -6.840936183929443

Token 156: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1473002433776855
    2. ' i' → logprob: -1.5223002433776855
    3. ' 
' → logprob: -2.0223002433776855
    4. ' available' → logprob: -2.1473002433776855
    5. ' next' → logprob: -2.6473002433776855
    6. '<|end|>' → logprob: -3.0223002433776855
    7. ' current' → logprob: -4.3973002433776855
    8. ' continue' → logprob: -4.6473002433776855
    9. ' for' → logprob: -4.6473002433776855
    10. '   ' → logprob: -4.8973002433776855

Token 158: ' #' (ID: 1069)
  Prédit: ' available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' available' → logprob: -0.6057658791542053
    2. ' next' → logprob: -1.2307658195495605
    3. 'available' → logprob: -2.4807658195495605
    4. '<|end|>' → logprob: -3.4807658195495605
    5. 'next' → logprob: -4.1057658195495605
    6. ' pieces' → logprob: -5.3557658195495605
    7. ' ' → logprob: -5.6057658195495605
    8. '   ' → logprob: -6.2307658195495605
    9. ' idx' → logprob: -6.2307658195495605
    10. ' continue' → logprob: -6.3557658195495605

Token 159: ' A' (ID: 355)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7143535017967224
    2. ' available' → logprob: -0.9643535017967224
    3. 'available' → logprob: -2.964353561401367
    4. 'next' → logprob: -3.964353561401367
    5. ' current' → logprob: -4.464353561401367
    6. ' idx' → logprob: -4.839353561401367
    7. ' remaining' → logprob: -5.089353561401367
    8. ' i' → logprob: -5.339353561401367
    9. ' for' → logprob: -5.589353561401367
    10. ' rest' → logprob: -5.839353561401367

Token 160: ' piece' (ID: 9047)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2210301011800766
    2. 'available' → logprob: -1.7210301160812378
    3. 'll' → logprob: -5.221030235290527
    4. '#' → logprob: -5.346030235290527
    5. 'idx' → logprob: -6.221030235290527
    6. 'current' → logprob: -6.471030235290527
    7. 'avail' → logprob: -6.971030235290527
    8. ' available' → logprob: -6.971030235290527
    9. 'while' → logprob: -7.596030235290527
    10. 'l' → logprob: -7.846030235290527

Token 161: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7890716195106506
    2. 's' → logprob: -1.1640715599060059
    3. '_indices' → logprob: -2.289071559906006
    4. '=' → logprob: -4.039071559906006
    5. '_available' → logprob: -4.039071559906006
    6. '_candidates' → logprob: -4.789071559906006
    7. '_positions' → logprob: -4.914071559906006
    8. '_indexes' → logprob: -4.914071559906006
    9. ',' → logprob: -4.914071559906006
    10. '<|end|>' → logprob: -5.039071559906006

Token 162: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.04962064325809479
    2. 'be' → logprob: -3.9246206283569336
    3. 'not' → logprob: -4.049620628356934
    4. ' not' → logprob: -4.799620628356934
    5. ' only' → logprob: -6.299620628356934
    6. 'only' → logprob: -8.174620628356934
    7. 'taken' → logprob: -8.924620628356934
    8. '#' → logprob: -9.174620628356934
    9. '_be' → logprob: -9.424620628356934
    10. '	be' → logprob: -9.799620628356934

Token 163: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.41387248039245605
    2. 'picked' → logprob: -1.788872480392456
    3. 'chosen' → logprob: -2.288872480392456
    4. ' taken' → logprob: -2.913872480392456
    5. ' chosen' → logprob: -4.663872718811035
    6. ' picked' → logprob: -5.538872718811035
    7. 'selected' → logprob: -6.913872718811035
    8. 'removed' → logprob: -7.788872718811035
    9. '_taken' → logprob: -8.038872718811035
    10. 'p' → logprob: -8.913872718811035

Token 164: ' if' (ID: 538)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.0817037895321846
    2. ' if' → logprob: -2.5817039012908936
    3. 'only' → logprob: -6.3317036628723145
    4. 'if' → logprob: -7.0817036628723145
    5. ' that' → logprob: -8.956704139709473
    6. ' ' → logprob: -10.206704139709473
    7. 'that' → logprob: -11.956704139709473
    8. ' iff' → logprob: -12.706704139709473
    9. '[' → logprob: -13.331704139709473
    10. ' next' → logprob: -13.706704139709473

Token 165: ' at' (ID: 540)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6880291700363159
    2. ' not' → logprob: -1.438029170036316
    3. '(not' → logprob: -1.563029170036316
    4. 'taken' → logprob: -4.0630292892456055
    5. ' taken' → logprob: -4.3130292892456055
    6. 'it' → logprob: -4.8130292892456055
    7. ' it' → logprob: -5.5630292892456055
    8. ' (' → logprob: -5.6880292892456055
    9. ' all' → logprob: -6.9380292892456055
    10. '(' → logprob: -7.1880292892456055

Token 166: ' least' (ID: 5153)
  Prédit: 'aken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.28402504324913025
    2. 'ake' → logprob: -1.7840250730514526
    3. '#' → logprob: -3.284024953842163
    4. 'least' → logprob: -3.784024953842163
    5. ' least' → logprob: -4.659025192260742
    6. 'aking' → logprob: -6.034025192260742
    7. 'not' → logprob: -6.159025192260742
    8. 'taken' → logprob: -6.909025192260742
    9. '```' → logprob: -7.284025192260742
    10. 'akes' → logprob: -7.909025192260742

Token 167: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.38695573806762695
    2. 'one' → logprob: -1.136955738067627
    3. ' two' → logprob: -10.011955261230469
    4. 'two' → logprob: -10.511955261230469
    5. ' ' → logprob: -11.886955261230469
    6. '_one' → logprob: -12.636955261230469
    7. '
' → logprob: -14.261955261230469
    8. '1' → logprob: -15.011955261230469
    9. 'One' → logprob: -15.011955261230469
    10. '   ' → logprob: -15.261955261230469

Token 168: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.4294162392616272
    2. ' neighbor' → logprob: -1.1794161796569824
    3. ' of' → logprob: -3.3044161796569824
    4. ' adjacent' → logprob: -6.304416179656982
    5. ' neighboring' → logprob: -7.304416179656982
    6. ' taken' → logprob: -7.554416179656982
    7. 'taken' → logprob: -7.554416179656982
    8. '_neighbor' → logprob: -7.679416179656982
    9. 'of' → logprob: -8.30441665649414
    10. 'adj' → logprob: -8.80441665649414

Token 169: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.2880368232727051
    2. ' taken' → logprob: -1.663036823272705
    3. 'not' → logprob: -3.413036823272705
    4. ' not' → logprob: -3.788036823272705
    5. 'False' → logprob: -6.163036823272705
    6. 'True' → logprob: -6.788036823272705
    7. ' True' → logprob: -7.163036823272705
    8. ' False' → logprob: -7.288036823272705
    9. '_taken' → logprob: -8.913036346435547
    10. ' ' → logprob: -9.413036346435547

Token 171: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44300174713134766
    2. '<|end|>' → logprob: -1.3180017471313477
    3. '<|end|>' → logprob: -3.8180017471313477
    4. ' 
' → logprob: -3.8180017471313477
    5. ' next' → logprob: -4.818001747131348
    6. ' for' → logprob: -4.943001747131348
    7. ' i' → logprob: -5.943001747131348
    8. '#' → logprob: -5.943001747131348
    9. ',' → logprob: -6.068001747131348
    10. '  
' → logprob: -6.318001747131348

Token 173: ' #' (ID: 1069)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.7091010808944702
    2. ' available' → logprob: -1.3341010808944702
    3. ' next' → logprob: -1.9591010808944702
    4. 'next' → logprob: -2.9591012001037598
    5. '   ' → logprob: -3.9591012001037598
    6. ' turn' → logprob: -5.33410120010376
    7. ' remaining' → logprob: -5.45910120010376
    8. 'remaining' → logprob: -5.58410120010376
    9. ' for' → logprob: -6.08410120010376
    10. 'rest' → logprob: -6.33410120010376

Token 174: ' After' (ID: 6311)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.038944702595472336
    2. ' available' → logprob: -4.413944721221924
    3. 'remaining' → logprob: -4.913944721221924
    4. 'for' → logprob: -5.663944721221924
    5. 'rest' → logprob: -5.663944721221924
    6. 'next' → logprob: -6.163944721221924
    7. 'def' → logprob: -6.413944721221924
    8. 'current' → logprob: -6.538944721221924
    9. 'from' → logprob: -6.663944721221924
    10. 'remain' → logprob: -7.163944721221924

Token 175: ' the' (ID: 290)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.1907249391078949
    2. 'the' → logprob: -1.9407249689102173
    3. ' the' → logprob: -4.565724849700928
    4. ' first' → logprob: -5.065724849700928
    5. 'that' → logprob: -5.315724849700928
    6. 'taking' → logprob: -6.065724849700928
    7. 'initial' → logprob: -6.690724849700928
    8. 'this' → logprob: -6.815724849700928
    9. ' that' → logprob: -6.940724849700928
    10. '#' → logprob: -7.315724849700928

Token 176: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.007314242422580719
    2. ' first' → logprob: -6.132314205169678
    3. 'for' → logprob: -6.257314205169678
    4. 'initial' → logprob: -6.382314205169678
    5. 'import' → logprob: -7.257314205169678
    6. 'current' → logprob: -8.132314682006836
    7. 'next' → logprob: -8.757314682006836
    8. '#' → logprob: -9.257314682006836
    9. 'line' → logprob: -10.007314682006836
    10. ' for' → logprob: -10.257314682006836

Token 177: ' pick' (ID: 5230)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.27836093306541443
    2. ' pick' → logprob: -1.7783609628677368
    3. 'token' → logprob: -4.278360843658447
    4. '_pick' → logprob: -4.403360843658447
    5. '_taken' → logprob: -4.903360843658447
    6. ' line' → logprob: -5.278360843658447
    7. ' taken' → logprob: -5.278360843658447
    8. 'picked' → logprob: -5.903360843658447
    9. 'take' → logprob: -6.028360843658447
    10. 'for' → logprob: -6.153360843658447

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007422872353345156
    2. ',
' → logprob: -5.382422924041748
    3. '   ' → logprob: -7.007422924041748
    4. ' ,' → logprob: -7.382422924041748
    5. ':' → logprob: -8.13242244720459
    6. '<|end|>' → logprob: -8.38242244720459
    7. '    
' → logprob: -9.38242244720459
    8. '.' → logprob: -9.75742244720459
    9. 'neighbors' → logprob: -9.75742244720459
    10. '<|end|>' → logprob: -9.88242244720459

Token 179: ' the' (ID: 290)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.4588683247566223
    2. ' available' → logprob: -2.0838682651519775
    3. 'current' → logprob: -3.3338682651519775
    4. 'io' → logprob: -3.5838682651519775
    5. '   ' → logprob: -3.9588682651519775
    6. 'next' → logprob: -4.333868503570557
    7. 'for' → logprob: -4.333868503570557
    8. '#' → logprob: -4.583868503570557
    9. 'neighbors' → logprob: -4.583868503570557
    10. 'remaining' → logprob: -4.708868503570557

Token 180: ' candidates' (ID: 18116)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.4786373376846313
    2. 'available' → logprob: -1.6036373376846313
    3. 'rest' → logprob: -1.8536373376846313
    4. 'current' → logprob: -2.603637218475342
    5. 'neighbors' → logprob: -2.853637218475342
    6. 'taken' → logprob: -2.978637218475342
    7. 'remaining' → logprob: -3.103637218475342
    8. '#' → logprob: -3.603637218475342
    9. 'io' → logprob: -3.603637218475342
    10. 'for' → logprob: -3.853637218475342

Token 181: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05516638234257698
    2. '=' → logprob: -2.930166482925415
    3. ' are' → logprob: -9.180166244506836
    4. '=[]' → logprob: -9.430166244506836
    5. '_indices' → logprob: -10.180166244506836
    6. ' ' → logprob: -11.805166244506836
    7. 'indices' → logprob: -12.055166244506836
    8. 'are' → logprob: -12.180166244506836
    9. '_candidates' → logprob: -12.305166244506836
    10. ',' → logprob: -12.680166244506836

Token 182: ' neighbors' (ID: 31655)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.46086254715919495
    2. '{' → logprob: -1.8358625173568726
    3. '[i' → logprob: -2.960862636566162
    4. '{i' → logprob: -3.085862636566162
    5. '[]
' → logprob: -3.460862636566162
    6. '[]' → logprob: -3.585862636566162
    7. 'neighbors' → logprob: -4.085862636566162
    8. '[' → logprob: -4.710862636566162
    9. ' [(' → logprob: -4.710862636566162
    10. '[first' → logprob: -5.460862636566162

Token 183: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08745010197162628
    2. '_neighbors' → logprob: -3.4624500274658203
    3. '=' → logprob: -3.8374500274658203
    4. 'neighbors' → logprob: -3.9624500274658203
    5. 's' → logprob: -5.96245002746582
    6. '_candidates' → logprob: -6.33745002746582
    7. '_' → logprob: -6.46245002746582
    8. '   ' → logprob: -6.58745002746582
    9. ':' → logprob: -7.21245002746582
    10. ',' → logprob: -7.46245002746582

Token 184: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0019348275382071733
    2. ' first' → logprob: -6.251935005187988
    3. '[first' → logprob: -12.251935005187988
    4. '(first' → logprob: -13.876935005187988
    5. '	first' → logprob: -15.376935005187988
    6. 'fi' → logprob: -17.251934051513672
    7. 'f' → logprob: -17.501934051513672
    8. 'the' → logprob: -17.626934051513672
    9. '```' → logprob: -17.751934051513672
    10. ' ' → logprob: -18.126934051513672

Token 185: ' pick' (ID: 5230)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0685376524925232
    2. 'neighbors' → logprob: -2.943537712097168
    3. ' candidates' → logprob: -5.068537712097168
    4. ' neighbors' → logprob: -5.318537712097168
    5. ' next' → logprob: -7.443537712097168
    6. 'next' → logprob: -7.568537712097168
    7. '   ' → logprob: -7.818537712097168
    8. 'available' → logprob: -8.443537712097168
    9. ' c' → logprob: -8.568537712097168
    10. 'taken' → logprob: -9.568537712097168

Token 186: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06198617070913315
    2. 'neighbors' → logprob: -3.561986207962036
    3. '   ' → logprob: -3.686986207962036
    4. ' candidates' → logprob: -5.436985969543457
    5. ' neighbors' → logprob: -6.686985969543457
    6. 'available' → logprob: -7.686985969543457
    7. 'next' → logprob: -8.686985969543457
    8. ' c' → logprob: -8.936985969543457
    9. ' next' → logprob: -9.561985969543457
    10. '    
' → logprob: -10.311985969543457

Token 187: 'both' (ID: 47163)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006947310641407967
    2. 'first' → logprob: -6.2569475173950195
    3. ' )' → logprob: -7.2569475173950195
    4. 'neighbors' → logprob: -7.6319475173950195
    5. '+' → logprob: -7.7569475173950195
    6. '):' → logprob: -7.8819475173950195
    7. ',' → logprob: -8.00694751739502
    8. ')
' → logprob: -8.13194751739502
    9. '[' → logprob: -8.38194751739502
    10. ').' → logprob: -8.50694751739502

Token 188: ' not' (ID: 625)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.6161552667617798
    2. ')' → logprob: -0.9911552667617798
    3. ' neighbors' → logprob: -3.2411551475524902
    4. 'indices' → logprob: -3.6161551475524902
    5. '   ' → logprob: -5.49115514755249
    6. '_neighbors' → logprob: -6.24115514755249
    7. 'taken' → logprob: -6.24115514755249
    8. 'left' → logprob: -6.36615514755249
    9. ')%' → logprob: -6.74115514755249
    10. 'indexes' → logprob: -6.74115514755249

Token 189: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.29803040623664856
    2. ' taken' → logprob: -1.4230303764343262
    3. 'None' → logprob: -4.673030376434326
    4. 'first' → logprob: -5.923030376434326
    5. ' None' → logprob: -5.923030376434326
    6. ' first' → logprob: -6.923030376434326
    7. ')' → logprob: -8.548030853271484
    8. '_taken' → logprob: -8.798030853271484
    9. '#' → logprob: -8.923030853271484
    10. 'False' → logprob: -9.173030853271484

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007720320951193571
    2. ' yet' → logprob: -5.257720470428467
    3. '):' → logprob: -6.632720470428467
    4. 'yet' → logprob: -7.882720470428467
    5. ').' → logprob: -8.632719993591309
    6. 'if' → logprob: -8.757719993591309
    7. ' )' → logprob: -8.882719993591309
    8. ' and' → logprob: -9.757719993591309
    9. 'and' → logprob: -10.257719993591309
    10. ',' → logprob: -10.382719993591309

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07563673704862595
    2. 'c' → logprob: -3.450636625289917
    3. 'neighbors' → logprob: -3.700636625289917
    4. '    
' → logprob: -5.325636863708496
    5. ' candidates' → logprob: -5.325636863708496
    6. 'next' → logprob: -6.450636863708496
    7. ' neighbors' → logprob: -6.450636863708496
    8. ' next' → logprob: -6.825636863708496
    9. 'available' → logprob: -7.450636863708496
    10. '    ' → logprob: -7.825636863708496

Token 192: ' #' (ID: 1069)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.5757673382759094
    2. 'c' → logprob: -1.5757672786712646
    3. '   ' → logprob: -1.7007672786712646
    4. ' next' → logprob: -3.8257672786712646
    5. 'neighbors' → logprob: -5.200767517089844
    6. 'next' → logprob: -5.450767517089844
    7. 'available' → logprob: -5.575767517089844
    8. ' available' → logprob: -5.700767517089844
    9. ' neighbors' → logprob: -5.950767517089844
    10. ' c' → logprob: -6.200767517089844

Token 193: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5884798765182495
    2. 'c' → logprob: -0.8384798765182495
    3. ' candidates' → logprob: -4.963479995727539
    4. 'neighbors' → logprob: -6.213479995727539
    5. 'available' → logprob: -6.963479995727539
    6. 'next' → logprob: -7.463479995727539
    7. ' c' → logprob: -7.838479995727539
    8. ' next' → logprob: -8.088479995727539
    9. '    ' → logprob: -8.088479995727539
    10. '    
' → logprob: -8.338479995727539

Token 194: ' each' (ID: 2454)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03384716063737869
    2. ' candidates' → logprob: -4.283847332000732
    3. '   ' → logprob: -5.033847332000732
    4. 'available' → logprob: -5.283847332000732
    5. 'neighbors' → logprob: -6.908847332000732
    6. '#' → logprob: -7.033847332000732
    7. 'cand' → logprob: -7.033847332000732
    8. 'candidate' → logprob: -7.283847332000732
    9. 'for' → logprob: -7.533847332000732
    10. 'taken' → logprob: -7.533847332000732

Token 195: ' turn' (ID: 3716)
  Prédit: ' iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' iteration' → logprob: -0.9744704961776733
    2. 'line' → logprob: -1.4744704961776733
    3. ' line' → logprob: -1.7244704961776733
    4. 'iteration' → logprob: -1.9744704961776733
    5. ' step' → logprob: -3.474470615386963
    6. 'for' → logprob: -3.724470615386963
    7. 'step' → logprob: -4.474470615386963
    8. ' for' → logprob: -6.474470615386963
    9. '
' → logprob: -6.724470615386963
    10. ' ' → logprob: -6.724470615386963

Token 196: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0090824905782938
    2. ' ,' → logprob: -5.134082317352295
    3. ':' → logprob: -6.384082317352295
    4. ',
' → logprob: -7.384082317352295
    5. '   ' → logprob: -7.759082317352295
    6. '#' → logprob: -9.134082794189453
    7. 'tokens' → logprob: -10.009082794189453
    8. 'neighbors' → logprob: -10.509082794189453
    9. '    ' → logprob: -10.634082794189453
    10. ':
' → logprob: -10.759082794189453

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21974217891693115
    2. '    ' → logprob: -1.9697421789169312
    3. ' turn' → logprob: -4.469742298126221
    4. '    
' → logprob: -4.594742298126221
    5. '<|end|>' → logprob: -4.719742298126221
    6. ' next' → logprob: -5.094742298126221
    7. 'turn' → logprob: -5.719742298126221
    8. 'next' → logprob: -5.844742298126221
    9. ' ' → logprob: -6.219742298126221
    10. 'tokens' → logprob: -6.469742298126221

Token 198: ' #' (ID: 1069)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.04585862159729
    2. ' if' → logprob: -2.04585862159729
    3. ' turn' → logprob: -2.29585862159729
    4. ' candidates' → logprob: -2.42085862159729
    5. ' i' → logprob: -2.67085862159729
    6. ' current' → logprob: -2.92085862159729
    7. '   ' → logprob: -3.17085862159729
    8. ' while' → logprob: -3.67085862159729
    9. ' candidate' → logprob: -3.79585862159729
    10. ' ' → logprob: -4.295858383178711

Token 199: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8967530727386475
    2. ' if' → logprob: -2.0217530727386475
    3. ' candidates' → logprob: -2.2717530727386475
    4. '    ' → logprob: -2.8967530727386475
    5. ' turn' → logprob: -2.8967530727386475
    6. ' next' → logprob: -3.0217530727386475
    7. ' pass' → logprob: -3.3967530727386475
    8. ' #' → logprob: -3.5217530727386475
    9. ' current' → logprob: -3.8967530727386475
    10. ' for' → logprob: -4.146753311157227

Token 200: ' IO' (ID: 10357)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -1.0442910194396973
    2. ' current' → logprob: -1.7942910194396973
    3. ' io' → logprob: -2.7942910194396973
    4. ' candidate' → logprob: -3.0442910194396973
    5. 'candidate' → logprob: -3.0442910194396973
    6. ' IO' → logprob: -3.0442910194396973
    7. ' next' → logprob: -3.1692910194396973
    8. ' for' → logprob: -3.1692910194396973
    9. ' neighbors' → logprob: -3.5442910194396973
    10. ' if' → logprob: -3.7942910194396973

Token 201: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.005824752151966095
    2. ')' → logprob: -5.755824565887451
    3. '   ' → logprob: -7.005824565887451
    4. ' I' → logprob: -8.38082504272461
    5. '[' → logprob: -8.88082504272461
    6. '#' → logprob: -9.00582504272461
    7. ',' → logprob: -9.13082504272461
    8. ' ' → logprob: -9.13082504272461
    9. 'i' → logprob: -9.25582504272461
    10. '_' → logprob: -9.38082504272461

Token 202: ' must' (ID: 2804)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.5672845840454102
    2. ''s' → logprob: -1.6922845840454102
    3. ' picks' → logprob: -2.19228458404541
    4. '_' → logprob: -2.69228458404541
    5. '_t' → logprob: -3.19228458404541
    6. '_turn' → logprob: -3.31728458404541
    7. '_next' → logprob: -3.31728458404541
    8. '_pick' → logprob: -3.56728458404541
    9. '_p' → logprob: -3.69228458404541
    10. 'for' → logprob: -3.81728458404541

Token 203: ' take' (ID: 2304)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.652241587638855
    2. ' pick' → logprob: -1.027241587638855
    3. 'choose' → logprob: -2.9022417068481445
    4. ' take' → logprob: -3.5272417068481445
    5. 'take' → logprob: -4.1522417068481445
    6. ' choose' → logprob: -4.2772417068481445
    7. 'select' → logprob: -5.7772417068481445
    8. ' select' → logprob: -5.7772417068481445
    9. ' not' → logprob: -8.527241706848145
    10. 'not' → logprob: -8.652241706848145

Token 204: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4054289162158966
    2. 'a' → logprob: -1.2804288864135742
    3. ' (' → logprob: -4.280428886413574
    4. ' the' → logprob: -5.030428886413574
    5. ' an' → logprob: -5.280428886413574
    6. 'neighbors' → logprob: -5.280428886413574
    7. '(' → logprob: -5.405428886413574
    8. 'next' → logprob: -5.780428886413574
    9. ' one' → logprob: -5.905428886413574
    10. 'the' → logprob: -5.905428886413574

Token 205: ' largest' (ID: 10574)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.8577659130096436
    2. ' next' → logprob: -1.6077659130096436
    3. 'next' → logprob: -1.8577659130096436
    4. 'piece' → logprob: -2.6077659130096436
    5. ' neighbor' → logprob: -3.1077659130096436
    6. ' piece' → logprob: -3.7327659130096436
    7. 'closest' → logprob: -4.232766151428223
    8. ' closest' → logprob: -4.857766151428223
    9. 'neighbors' → logprob: -4.982766151428223
    10. 'not' → logprob: -5.107766151428223

Token 206: ' piece' (ID: 9047)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: ' among' (ID: 6200)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ' candidates' (ID: 18116)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -1.0090410709381104
    2. '[' → logprob: -1.2590410709381104
    3. ' [' → logprob: -2.2590410709381104
    4. '[i' → logprob: -2.6340410709381104
    5. 'available' → logprob: -2.7590410709381104
    6. '[p' → logprob: -3.1340410709381104
    7. ' available' → logprob: -4.634040832519531
    8. 'not' → logprob: -4.634040832519531
    9. 'unt' → logprob: -5.009040832519531
    10. 'the' → logprob: -5.384040832519531

Token 209: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020066220313310623
    2. '    
' → logprob: -5.145066261291504
    3. ',' → logprob: -5.645066261291504
    4. 'tokens' → logprob: -6.395066261291504
    5. '<|end|>' → logprob: -6.520066261291504
    6. '
' → logprob: -7.145066261291504
    7. '#' → logprob: -7.145066261291504
    8. ' candidates' → logprob: -7.145066261291504
    9. '.' → logprob: -7.520066261291504
    10. '    ' → logprob: -7.895066261291504

Token 211: ' #' (ID: 1069)
  Prédit: '  
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  
' → logprob: -1.0287829637527466
    2. '    
' → logprob: -2.153782844543457
    3. '
' → logprob: -2.403782844543457
    4. '#' (adapté à ' #') → logprob: -2.528782844543457
    5. '   ' → logprob: -2.653782844543457
    6. ',' → logprob: -2.778782844543457
    7. '<|end|>' → logprob: -2.778782844543457
    8. '\n' → logprob: -3.278782844543457
    9. ',
' → logprob: -3.778782844543457
    10. '\' → logprob: -3.903782844543457

Token 212: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17219819128513336
    2. ' candidates' → logprob: -3.2971982955932617
    3. '#' → logprob: -3.7971982955932617
    4. ' ' → logprob: -4.047198295593262
    5. '    
' → logprob: -4.422198295593262
    6. '    ' → logprob: -4.672198295593262
    7. 'tokens' → logprob: -4.672198295593262
    8. 'c' → logprob: -4.797198295593262
    9. '  ' → logprob: -5.422198295593262
    10. '_candidates' → logprob: -5.547198295593262

Token 213: ' JO' (ID: 72685)
  Prédit: ' JO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' JO' → logprob: -1.277173399925232
    2. 'j' → logprob: -1.777173399925232
    3. 'JO' → logprob: -2.0271735191345215
    4. ' j' → logprob: -2.1521735191345215
    5. ' ' → logprob: -2.9021735191345215
    6. ' IO' → logprob: -3.0271735191345215
    7. '#' → logprob: -3.5271735191345215
    8. '   ' → logprob: -3.6521735191345215
    9. ' #' → logprob: -3.7771735191345215
    10. ' for' → logprob: -3.9021735191345215

Token 214: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00013834332639817148
    2. '_' → logprob: -9.625138282775879
    3. ' I' → logprob: -10.250138282775879
    4. ')' → logprob: -11.875138282775879
    5. '_i' → logprob: -11.875138282775879
    6. '_I' → logprob: -12.000138282775879
    7. ' _' → logprob: -12.375138282775879
    8. '-' → logprob: -12.500138282775879
    9. 'O' → logprob: -13.625138282775879
    10. 'i' → logprob: -14.062638282775879

Token 215: ' can' (ID: 665)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.054175060242414474
    2. 'must' → logprob: -3.0541751384735107
    3. ' takes' → logprob: -6.429174900054932
    4. ' picks' → logprob: -6.554174900054932
    5. '   ' → logprob: -7.929174900054932
    6. ' chooses' → logprob: -7.929174900054932
    7. ' will' → logprob: -7.929174900054932
    8. ' continues' → logprob: -8.30417537689209
    9. ' can' → logprob: -8.80417537689209
    10. '_next' → logprob: -9.30417537689209

Token 216: ' pick' (ID: 5230)
  Prédit: ' take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' take' → logprob: -0.5844101309776306
    2. 'take' → logprob: -0.9594101309776306
    3. 'pick' → logprob: -4.084410190582275
    4. ' pick' → logprob: -4.334410190582275
    5. '   ' → logprob: -4.459410190582275
    6. 'choose' → logprob: -4.584410190582275
    7. ' choose' → logprob: -5.459410190582275
    8. ' ' → logprob: -6.834410190582275
    9. '    ' → logprob: -7.209410190582275
    10. ' only' → logprob: -8.334409713745117

Token 217: ' any' (ID: 1062)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.044495701789856
    2. ' among' → logprob: -1.419495701789856
    3. 'the' → logprob: -2.2944955825805664
    4. ' next' → logprob: -2.6694955825805664
    5. '<|end|>' → logprob: -3.0444955825805664
    6. 'neighbors' → logprob: -3.4194955825805664
    7. ' neighbors' → logprob: -4.044495582580566
    8. ' a' → logprob: -4.044495582580566
    9. 'next' → logprob: -4.044495582580566
    10. 'from' → logprob: -4.294495582580566

Token 218: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.30286625027656555
    2. 'c' → logprob: -1.4278662204742432
    3. 'the' → logprob: -4.677866458892822
    4. ' the' → logprob: -5.052866458892822
    5. '_candidates' → logprob: -5.427866458892822
    6. 'candidate' → logprob: -7.552866458892822
    7. 'available' → logprob: -8.427865982055664
    8. ' available' → logprob: -8.677865982055664
    9. '<|end|>' → logprob: -8.802865982055664
    10. 'neighbors' → logprob: -9.677865982055664

Token 220: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.139500617980957
    2. ' candidates' → logprob: -1.389500617980957
    3. ' ' → logprob: -1.514500617980957
    4. '    ' → logprob: -3.014500617980957
    5. ' 
' → logprob: -3.264500617980957
    6. '    
' → logprob: -3.389500617980957
    7. '_candidates' → logprob: -3.889500617980957
    8. '  
' → logprob: -4.639500617980957
    9. '<|end|>' → logprob: -4.639500617980957
    10. '
' → logprob: -5.139500617980957

Token 222: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03730755299329758
    2. '   ' → logprob: -3.9123075008392334
    3. ' candidates' → logprob: -4.1623077392578125
    4. '    ' → logprob: -8.412307739257812
    5. ' c' → logprob: -8.537307739257812
    6. 'candidate' → logprob: -9.412307739257812
    7. '    
' → logprob: -9.412307739257812
    8. '_candidates' → logprob: -9.412307739257812
    9. '#' (adapté à ' #') → logprob: -10.162307739257812
    10. '	c' → logprob: -10.287307739257812

Token 223: ' We' (ID: 1416)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002517873188480735
    2. ' candidates' → logprob: -6.1275177001953125
    3. '   ' → logprob: -9.502517700195312
    4. 'cand' → logprob: -9.627517700195312
    5. ' c' → logprob: -10.002517700195312
    6. '#' → logprob: -10.127517700195312
    7. 'candidate' → logprob: -10.877517700195312
    8. 'neighbors' → logprob: -11.002517700195312
    9. 'from' → logprob: -11.252517700195312
    10. ' #' → logprob: -11.877517700195312

Token 224: ' simulate' (ID: 66687)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5427473187446594
    2. ' need' → logprob: -1.7927472591400146
    3. ' ' → logprob: -2.6677472591400146
    4. ' =' → logprob: -3.0427472591400146
    5. ''ll' → logprob: -3.9177472591400146
    6. 'continue' → logprob: -3.9177472591400146
    7. '_' → logprob: -4.167747497558594
    8. ' have' → logprob: -4.167747497558594
    9. '#' → logprob: -4.542747497558594
    10. ' can' → logprob: -4.917747497558594

Token 225: ' picking' (ID: 30859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4922861158847809
    2. '    ' → logprob: -1.4922860860824585
    3. ' ' → logprob: -2.867286205291748
    4. ' candidates' → logprob: -3.742286205291748
    5. '    
' → logprob: -4.242286205291748
    6. 'tokens' → logprob: -4.492286205291748
    7. '  ' → logprob: -5.117286205291748
    8. ')' → logprob: -5.117286205291748
    9. '_candidates' → logprob: -5.367286205291748
    10. ' for' → logprob: -5.742286205291748

Token 226: ' until' (ID: 4609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27708885073661804
    2. '    ' → logprob: -2.2770888805389404
    3. ' ' → logprob: -3.1520888805389404
    4. ' candidates' → logprob: -3.6520888805389404
    5. '_candidates' → logprob: -4.152088642120361
    6. '  ' → logprob: -4.527088642120361
    7. '    
' → logprob: -4.652088642120361
    8. 'tokens' → logprob: -4.652088642120361
    9. '<|end|>' → logprob: -5.152088642120361
    10. ',' → logprob: -6.152088642120361

Token 227: ' all' (ID: 722)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2895984351634979
    2. 'all' → logprob: -1.7895984649658203
    3. 'sum' → logprob: -3.0395984649658203
    4. ' len' → logprob: -4.03959846496582
    5. ' all' → logprob: -4.53959846496582
    6. 'taken' → logprob: -5.53959846496582
    7. ' sum' → logprob: -6.41459846496582
    8. 'False' → logprob: -7.16459846496582
    9. 'not' → logprob: -7.28959846496582
    10. ' taken' → logprob: -7.66459846496582

Token 228: ' pieces' (ID: 12762)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.6672168374061584
    2. ' taken' → logprob: -0.9172168374061584
    3. ' not' → logprob: -3.4172167778015137
    4. 'pieces' → logprob: -4.167216777801514
    5. ' pieces' → logprob: -4.167216777801514
    6. 'not' → logprob: -4.542216777801514
    7. '(t' → logprob: -5.792216777801514
    8. 'tokens' → logprob: -5.917216777801514
    9. '_taken' → logprob: -6.167216777801514
    10. 't' → logprob: -6.167216777801514

Token 229: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.040652550756931305
    2. '_taken' → logprob: -3.9156525135040283
    3. 'are' → logprob: -4.915652751922607
    4. '_are' → logprob: -5.415652751922607
    5. ' taken' → logprob: -6.290652751922607
    6. ' have' → logprob: -6.415652751922607
    7. ' remain' → logprob: -7.165652751922607
    8. ')' → logprob: -7.165652751922607
    9. ' is' → logprob: -7.665652751922607
    10. '_' → logprob: -7.915652751922607

Token 230: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.1062634065747261
    2. ' taken' → logprob: -2.3562633991241455
    3. 'True' → logprob: -5.231263637542725
    4. ' True' → logprob: -7.356263637542725
    5. 'False' → logprob: -11.481263160705566
    6. '   ' → logprob: -11.481263160705566
    7. '_taken' → logprob: -11.731263160705566
    8. 'picked' → logprob: -11.731263160705566
    9. 't' → logprob: -12.731263160705566
    10. 'chosen' → logprob: -13.231263160705566

Token 231: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0662168562412262
    2. ' candidates' → logprob: -3.8162169456481934
    3. '    
' → logprob: -3.8162169456481934
    4. '<|end|>' → logprob: -5.441216945648193
    5. '    ' → logprob: -5.566216945648193
    6. '
' → logprob: -6.441216945648193
    7. '_candidates' → logprob: -6.441216945648193
    8. ' ' → logprob: -6.691216945648193
    9. '  ' → logprob: -6.816216945648193
    10. ',' → logprob: -6.941216945648193

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4884422719478607
    2. ' candidates' → logprob: -1.113442301750183
    3. '    
' → logprob: -4.363442420959473
    4. '    ' → logprob: -4.613442420959473
    5. '_candidates' → logprob: -4.738442420959473
    6. 'c' → logprob: -5.363442420959473
    7. ' i' → logprob: -5.738442420959473
    8. ' ' → logprob: -5.863442420959473
    9. ' 
' → logprob: -6.113442420959473
    10. '
' → logprob: -6.488442420959473

Token 233: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0029248257633298635
    2. ' candidates' → logprob: -6.627924919128418
    3. '   ' → logprob: -7.252924919128418
    4. ' c' → logprob: -8.002924919128418
    5. 'available' → logprob: -8.752924919128418
    6. 'cand' → logprob: -9.502924919128418
    7. 'for' → logprob: -9.752924919128418
    8. ' for' → logprob: -10.377924919128418
    9. 'neighbors' → logprob: -10.502924919128418
    10. 'left' → logprob: -10.502924919128418

Token 234: ' We'll' (ID: 46830)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019929935224354267
    2. ' candidates' → logprob: -7.126993179321289
    3. '   ' → logprob: -8.001993179321289
    4. 'from' → logprob: -8.501993179321289
    5. 'cand' → logprob: -8.876993179321289
    6. 'for' → logprob: -9.126993179321289
    7. 'available' → logprob: -9.626993179321289
    8. 'import' → logprob: -9.751993179321289
    9. 'candidate' → logprob: -10.001993179321289
    10. ' c' → logprob: -10.126993179321289

Token 235: ' keep' (ID: 3357)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -0.5545725226402283
    2. 'continue' → logprob: -1.304572582244873
    3. 'implement' → logprob: -2.304572582244873
    4. 'use' → logprob: -4.054572582244873
    5. 'write' → logprob: -5.179572582244873
    6. 'complete' → logprob: -5.179572582244873
    7. 'define' → logprob: -5.429572582244873
    8. 'import' → logprob: -5.929572582244873
    9. 'maint' → logprob: -6.054572582244873
    10. 'initialize' → logprob: -6.054572582244873

Token 236: ' track' (ID: 5290)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04341144859790802
    2. 'a' → logprob: -3.9184114933013916
    3. 'taking' → logprob: -4.4184112548828125
    4. 'neighbors' → logprob: -5.2934112548828125
    5. ' candidates' → logprob: -6.7934112548828125
    6. ' a' → logprob: -7.1684112548828125
    7. 'candidate' → logprob: -7.9184112548828125
    8. 'track' → logprob: -7.9184112548828125
    9. 'available' → logprob: -8.168411254882812
    10. '_candidates' → logprob: -8.293411254882812

Token 237: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5682379603385925
    2. 'of' → logprob: -0.9432379603385925
    3. '   ' → logprob: -3.4432380199432373
    4. 'c' → logprob: -5.443237781524658
    5. 'pieces' → logprob: -6.818237781524658
    6. '    ' → logprob: -6.943237781524658
    7. 'available' → logprob: -7.193237781524658
    8. ' candidates' → logprob: -7.443237781524658
    9. '<|end|>' → logprob: -7.443237781524658
    10. 'tokens' → logprob: -7.693237781524658

Token 238: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.022517379373311996
    2. ' candidates' → logprob: -4.647517204284668
    3. 'neighbors' → logprob: -5.272517204284668
    4. 'taken' → logprob: -5.772517204284668
    5. 'candidate' → logprob: -6.522517204284668
    6. 'available' → logprob: -6.647517204284668
    7. ' taken' → logprob: -7.522517204284668
    8. ' neighbors' → logprob: -8.397517204284668
    9. 'the' → logprob: -8.772517204284668
    10. 'current' → logprob: -9.147517204284668

Token 239: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04582168161869049
    2. '_candidates' → logprob: -3.1708216667175293
    3. '=' → logprob: -6.170821666717529
    4. ' candidates' → logprob: -8.420822143554688
    5. 'c' → logprob: -8.920822143554688
    6. ',' → logprob: -9.170822143554688
    7. 'candidate' → logprob: -9.920822143554688
    8. '_candidate' → logprob: -10.045822143554688
    9. ' ' → logprob: -10.295822143554688
    10. ':' → logprob: -10.420822143554688

Token 240: ' next' (ID: 2613)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -1.279111385345459
    2. 'each' → logprob: -1.404111385345459
    3. 'next' → logprob: -2.029111385345459
    4. 'taking' → logprob: -2.404111385345459
    5. ' each' → logprob: -2.904111385345459
    6. ' next' → logprob: -2.904111385345459
    7. ' both' → logprob: -3.654111385345459
    8. ' picking' → logprob: -4.029111385345459
    9. 'IO' → logprob: -4.154111385345459
    10. 'the' → logprob: -4.154111385345459

Token 241: ' pick' (ID: 5230)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.5071812868118286
    2. 'c' → logprob: -2.132181167602539
    3. '_turn' → logprob: -3.007181167602539
    4. '_p' → logprob: -3.257181167602539
    5. '_token' → logprob: -3.382181167602539
    6. '_tokens' → logprob: -3.632181167602539
    7. '_' → logprob: -3.757181167602539
    8. '_taken' → logprob: -4.257181167602539
    9. '_c' → logprob: -4.507181167602539
    10. 'token' → logprob: -4.507181167602539

Token 242: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7058098912239075
    2. ' candidates' → logprob: -0.9558098912239075
    3. 'c' → logprob: -2.4558098316192627
    4. '_candidates' → logprob: -3.8308098316192627
    5. '<|end|>' → logprob: -5.455810070037842
    6. 'neighbors' → logprob: -5.955810070037842
    7. 'candidate' → logprob: -6.830810070037842
    8. '	c' → logprob: -6.955810070037842
    9. ',' → logprob: -7.205810070037842
    10. '    
' → logprob: -7.330810070037842

Token 243: 'pieces' (ID: 71596)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04638836160302162
    2. 'neighbors' → logprob: -4.046388149261475
    3. ' )' → logprob: -4.921388149261475
    4. 'c' → logprob: -5.046388149261475
    5. ' candidates' → logprob: -5.921388149261475
    6. 'set' → logprob: -6.421388149261475
    7. 'indices' → logprob: -6.796388149261475
    8. 'pieces' → logprob: -6.796388149261475
    9. 'candidate' → logprob: -6.796388149261475
    10. 'available' → logprob: -6.921388149261475

Token 244: ' adjacent' (ID: 39069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3993840217590332
    2. ')' → logprob: -1.6493840217590332
    3. ' =' → logprob: -1.7743840217590332
    4. 'that' → logprob: -2.149384021759033
    5. 'with' → logprob: -2.274384021759033
    6. ' that' → logprob: -2.649384021759033
    7. 'indices' → logprob: -3.399384021759033
    8. '   ' → logprob: -4.524384021759033
    9. '=set' → logprob: -4.524384021759033
    10. 'not' → logprob: -4.524384021759033

Token 245: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3681199550628662
    2. 'to' → logprob: -1.2431199550628662
    3. ')' → logprob: -4.118120193481445
    4. ' )' → logprob: -6.618120193481445
    5. '   ' → logprob: -7.243120193481445
    6. ',' → logprob: -7.868120193481445
    7. '=' → logprob: -8.368120193481445
    8. ']' → logprob: -8.868120193481445
    9. '_to' → logprob: -9.868120193481445
    10. ' ' → logprob: -9.868120193481445

Token 246: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.09746219217777252
    2. ' taken' → logprob: -2.8474621772766113
    3. 'any' → logprob: -3.9724621772766113
    4. 'True' → logprob: -5.097462177276611
    5. ' True' → logprob: -5.597462177276611
    6. ' any' → logprob: -5.847462177276611
    7. 'the' → logprob: -6.972462177276611
    8. 'already' → logprob: -7.222462177276611
    9. 'at' → logprob: -7.722462177276611
    10. 'picked' → logprob: -8.09746265411377

Token 247: ' pieces' (ID: 12762)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.4809790253639221
    2. ')' → logprob: -1.9809789657592773
    3. ' pieces' → logprob: -2.3559789657592773
    4. 'indices' → logprob: -3.1059789657592773
    5. 'and' → logprob: -3.8559789657592773
    6. ']' → logprob: -4.105978965759277
    7. ' and' → logprob: -4.230978965759277
    8. ' or' → logprob: -4.480978965759277
    9. ' )' → logprob: -4.605978965759277
    10. 'positions' → logprob: -4.730978965759277

Token 248: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027774691581726074
    2. ' )' → logprob: -4.527774810791016
    3. ' but' → logprob: -4.652774810791016
    4. '   ' → logprob: -5.902774810791016
    5. ',' → logprob: -6.652774810791016
    6. ' that' → logprob: -7.027774810791016
    7. 'that' → logprob: -7.152774810791016
    8. 'but' → logprob: -8.027774810791016
    9. ' and' → logprob: -8.652774810791016
    10. 'and' → logprob: -8.902774810791016

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04000609740614891
    2. ' candidates' → logprob: -3.665006160736084
    3. '    
' → logprob: -5.290006160736084
    4. 'c' → logprob: -6.165006160736084
    5. '_candidates' → logprob: -6.165006160736084
    6. '
' → logprob: -6.915006160736084
    7. '    ' → logprob: -7.415006160736084
    8. ',' → logprob: -7.665006160736084
    9. '	c' → logprob: -8.040005683898926
    10. '  ' → logprob: -8.040005683898926

Token 250: ' taken' (ID: 6697)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.18475714325904846
    2. '   ' → logprob: -2.3097572326660156
    3. 'c' → logprob: -3.1847572326660156
    4. '_candidates' → logprob: -4.309757232666016
    5. '    
' → logprob: -5.434757232666016
    6. '	c' → logprob: -6.059757232666016
    7. 'candidate' → logprob: -6.559757232666016
    8. '
' → logprob: -6.809757232666016
    9. ' 
' → logprob: -7.059757232666016
    10. ' candidats' → logprob: -7.559757232666016

Token 251: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5228932499885559
    2. '=' → logprob: -1.3978931903839111
    3. '_indices' → logprob: -2.647893190383911
    4. '_neighbors' → logprob: -2.772893190383911
    5. '[' → logprob: -5.39789342880249
    6. '[first' → logprob: -5.64789342880249
    7. '[next' → logprob: -5.77289342880249
    8. '_candidates' → logprob: -6.27289342880249
    9. 'neighbors' → logprob: -6.52289342880249
    10. '=set' → logprob: -6.52289342880249

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6937726140022278
    2. ' =' → logprob: -0.6937726140022278
    3. ' +=' → logprob: -7.693772792816162
    4. '+=' → logprob: -8.693772315979004
    5. ')' → logprob: -14.693772315979004
    6. ' |=' → logprob: -15.318772315979004
    7. ' ==' → logprob: -15.693772315979004
    8. ' ' → logprob: -16.06877326965332
    9. ',' → logprob: -16.31877326965332
    10. '＝' → logprob: -16.31877326965332

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015165306394919753
    2. ' ' → logprob: -6.501516342163086
    3. '   ' → logprob: -11.251516342163086
    4. '  ' → logprob: -14.376516342163086
    5. '2' → logprob: -15.501516342163086
    6. '```' → logprob: -16.376516342163086
    7. '    ' → logprob: -16.626516342163086
    8. '0' → logprob: -16.751516342163086
    9. '(' → logprob: -17.626516342163086
    10. '
' → logprob: -18.001516342163086

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.644463479053229e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -15.500046730041504
    4. '0' → logprob: -15.500046730041504
    5. '
' → logprob: -15.500046730041504
    6. '2' → logprob: -15.625046730041504
    7. '```' → logprob: -16.937545776367188
    8. '(' → logprob: -17.062545776367188
    9. 'first' → logprob: -17.562545776367188
    10. '  ' → logprob: -17.625045776367188

Token 255: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7860957980155945
    2. '
' → logprob: -1.6610958576202393
    3. '<|end|>' → logprob: -1.7860958576202393
    4. '    
' → logprob: -2.5360958576202393
    5. ' candidates' → logprob: -3.2860958576202393
    6. '<|end|>' → logprob: -4.03609561920166
    7. ',' → logprob: -4.66109561920166
    8. '_candidates' → logprob: -5.03609561920166
    9. 'candidate' → logprob: -5.53609561920166
    10. '\n' → logprob: -5.66109561920166

Token 256: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7878138422966003
    2. ' candidates' → logprob: -1.4128139019012451
    3. '   ' → logprob: -2.162813901901245
    4. '
' → logprob: -3.037813901901245
    5. '    
' → logprob: -3.037813901901245
    6. '	c' → logprob: -3.162813901901245
    7. 'candidate' → logprob: -4.412813663482666
    8. 'next' → logprob: -5.412813663482666
    9. 'i' → logprob: -5.537813663482666
    10. '_candidates' → logprob: -5.662813663482666

Token 257: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.007155772764235735
    2. ' candidates' → logprob: -5.507155895233154
    3. 'candidate' → logprob: -7.007155895233154
    4. 'while' → logprob: -7.632155895233154
    5. 'turn' → logprob: -8.007155418395996
    6. 'cand' → logprob: -8.007155418395996
    7. 'i' → logprob: -8.632155418395996
    8. ' turn' → logprob: -8.757155418395996
    9. 'io' → logprob: -8.757155418395996
    10. ' c' → logprob: -9.007155418395996

Token 258: ' Using' (ID: 17511)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.022037632763385773
    2. 'from' → logprob: -4.772037506103516
    3. ' candidates' → logprob: -5.147037506103516
    4. 'import' → logprob: -6.397037506103516
    5. 'j' → logprob: -6.522037506103516
    6. 'io' → logprob: -6.897037506103516
    7. 'candidate' → logprob: -7.022037506103516
    8. 'cand' → logprob: -7.272037506103516
    9. 'turn' → logprob: -8.397037506103516
    10. 'left' → logprob: -8.772037506103516

Token 259: ' a' (ID: 261)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3120034337043762
    2. 'c' → logprob: -1.5620033740997314
    3. 'import' → logprob: -2.9370033740997314
    4. 'deque' → logprob: -5.9370036125183105
    5. ' from' → logprob: -6.9370036125183105
    6. 'collections' → logprob: -7.5620036125183105
    7. 'neighbors' → logprob: -7.5620036125183105
    8. ' import' → logprob: -8.937003135681152
    9. 'heap' → logprob: -8.937003135681152
    10. 'candidate' → logprob: -9.437003135681152

Token 260: ' deque' (ID: 90347)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7610458731651306
    2. 'deque' → logprob: -0.7610458731651306
    3. 'import' → logprob: -3.6360459327697754
    4. 'heap' → logprob: -4.511045932769775
    5. 'c' → logprob: -4.761045932769775
    6. 'set' → logprob: -4.761045932769775
    7. 'queue' → logprob: -5.636045932769775
    8. 'while' → logprob: -5.761045932769775
    9. ' from' → logprob: -6.886045932769775
    10. 'collections' → logprob: -7.136045932769775

Token 261: ' or' (ID: 503)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.39650586247444153
    2. ' from' → logprob: -1.6465058326721191
    3. 'import' → logprob: -2.771505832672119
    4. ' =' → logprob: -3.396505832672119
    5. '=' → logprob: -4.021505832672119
    6. ',' → logprob: -4.271505832672119
    7. ')' → logprob: -6.146505832672119
    8. ':' → logprob: -6.771505832672119
    9. '(' → logprob: -7.396505832672119
    10. ' import' → logprob: -7.396505832672119

Token 262: ' set' (ID: 920)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.37012359499931335
    2. 'list' → logprob: -1.6201236248016357
    3. ' heap' → logprob: -2.7451236248016357
    4. 'heap' → logprob: -3.3701236248016357
    5. ' set' → logprob: -5.495123386383057
    6. 'set' → logprob: -5.745123386383057
    7. '[]' → logprob: -5.870123386383057
    8. 'import' → logprob: -6.870123386383057
    9. 'collections' → logprob: -7.245123386383057
    10. 'deque' → logprob: -8.120123863220215

Token 263: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8312937021255493
    2. ' from' → logprob: -1.9562937021255493
    3. '_candidates' → logprob: -2.0812935829162598
    4. ' =' → logprob: -2.2062935829162598
    5. ' candidates' → logprob: -2.4562935829162598
    6. 'import' → logprob: -3.8312935829162598
    7. '=' → logprob: -4.08129358291626
    8. ' for' → logprob: -4.45629358291626
    9. ',' → logprob: -4.58129358291626
    10. 'c' → logprob: -4.58129358291626

Token 264: ' find' (ID: 1646)
  Prédit: ' track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' track' → logprob: -1.1678482294082642
    2. 'import' → logprob: -1.7928482294082642
    3. 'maint' → logprob: -2.2928481101989746
    4. ' keep' → logprob: -2.4178481101989746
    5. 'track' → logprob: -2.5428481101989746
    6. 'keep' → logprob: -2.9178481101989746
    7. 'add' → logprob: -3.0428481101989746
    8. ' maintain' → logprob: -3.2928481101989746
    9. ' add' → logprob: -3.9178481101989746
    10. 'manage' → logprob: -3.9178481101989746

Token 265: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.08246919512748718
    2. 'candidate' → logprob: -3.8324692249298096
    3. ' next' → logprob: -4.5824689865112305
    4. 'neighbors' → logprob: -4.7074689865112305
    5. 'c' → logprob: -4.9574689865112305
    6. '_candidates' → logprob: -4.9574689865112305
    7. 'next' → logprob: -5.2074689865112305
    8. ' the' → logprob: -5.5824689865112305
    9. ' candidate' → logprob: -5.7074689865112305
    10. ' neighbors' → logprob: -5.8324689865112305

Token 266: ' easily' (ID: 7835)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3319450616836548
    2. ' from' → logprob: -2.7069449424743652
    3. ' candidates' → logprob: -2.8319449424743652
    4. '_candidates' → logprob: -3.0819449424743652
    5. '<|end|>' → logprob: -3.2069449424743652
    6. '   ' → logprob: -4.081944942474365
    7. '<|end|>' → logprob: -4.831944942474365
    8. ',' → logprob: -4.956944942474365
    9. 'import' → logprob: -4.956944942474365
    10. 'c' → logprob: -5.206944942474365

Token 267: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2217269390821457
    2. ' from' → logprob: -1.846726894378662
    3. '   ' → logprob: -3.846726894378662
    4. 'import' → logprob: -4.721726894378662
    5. ' candidates' → logprob: -5.096726894378662
    6. 'c' → logprob: -6.721726894378662
    7. ',' → logprob: -6.846726894378662
    8. '<|end|>' → logprob: -7.846726894378662
    9. '_candidates' → logprob: -7.971726894378662
    10. ' ' → logprob: -8.09672737121582

Token 268: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2652600407600403
    2. ' from' → logprob: -2.3902599811553955
    3. ' ' → logprob: -2.8902599811553955
    4. '   ' → logprob: -3.3902599811553955
    5. ',' → logprob: -4.140260219573975
    6. 'import' → logprob: -4.390260219573975
    7. ' candidates' → logprob: -5.015260219573975
    8. 'c' → logprob: -5.390260219573975
    9. '  ' → logprob: -6.515260219573975
    10. ')' → logprob: -6.640260219573975

Token 269: ' candidates' (ID: 18116)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5760945081710815
    2. 'from' → logprob: -1.3260945081710815
    3. ' candidates' → logprob: -1.8260945081710815
    4. 'import' → logprob: -5.451094627380371
    5. ' import' → logprob: -5.576094627380371
    6. ' ' → logprob: -6.451094627380371
    7. 'c' → logprob: -7.701094627380371
    8. ' candidate' → logprob: -7.826094627380371
    9. '_candidates' → logprob: -8.326094627380371
    10. 'candidate' → logprob: -8.576094627380371

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699644461274147
    2. '=' → logprob: -2.6949644088745117
    3. '=set' → logprob: -10.819964408874512
    4. ')' → logprob: -12.694964408874512
    5. 's' → logprob: -13.569964408874512
    6. ',' → logprob: -13.694964408874512
    7. '=[]' → logprob: -14.069964408874512
    8. ' ' → logprob: -15.194964408874512
    9. ':' → logprob: -15.194964408874512
    10. '_set' → logprob: -15.819964408874512

Token 271: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0011434339685365558
    2. '{' → logprob: -7.251143455505371
    3. ' set' → logprob: -7.751143455505371
    4. '(set' → logprob: -14.001143455505371
    5. ' {' → logprob: -14.126143455505371
    6. '{}' → logprob: -14.251143455505371
    7. '	set' → logprob: -14.876143455505371
    8. '[]' → logprob: -15.626143455505371
    9. '=set' → logprob: -16.501142501831055
    10. '{s' → logprob: -16.626142501831055

Token 272: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.061654023826122284
    2. '((' → logprob: -3.9366540908813477
    3. '()' → logprob: -4.061654090881348
    4. '([' → logprob: -4.311654090881348
    5. '({' → logprob: -5.186654090881348
    6. '{' → logprob: -6.561654090881348
    7. '(((' → logprob: -6.561654090881348
    8. '()
' → logprob: -7.186654090881348
    9. '[(' → logprob: -8.561654090881348
    10. '(' → logprob: -8.686654090881348

Token 273: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008706060471013188
    2. '   ' → logprob: -8.125870704650879
    3. 'for' → logprob: -8.500870704650879
    4. 'neighbors' → logprob: -9.000870704650879
    5. ' candidates' → logprob: -9.375870704650879
    6. 'left' → logprob: -9.500870704650879
    7. 'if' → logprob: -11.125870704650879
    8. 'i' → logprob: -11.250870704650879
    9. 'cand' → logprob: -11.250870704650879
    10. '
' → logprob: -11.375870704650879

Token 274: ' for' (ID: 395)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0010684162843972445
    2. 'left' → logprob: -7.501068592071533
    3. 'for' (adapté à ' for') → logprob: -8.251068115234375
    4. 'l' → logprob: -9.376068115234375
    5. 'neighbors' → logprob: -9.376068115234375
    6. 'if' → logprob: -10.376068115234375
    7. ' candidates' → logprob: -11.001068115234375
    8. '   ' → logprob: -11.251068115234375
    9. 'cand' → logprob: -11.251068115234375
    10. 'i' → logprob: -12.126068115234375

Token 275: ' i' (ID: 575)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.21687042713165283
    2. ' neighbor' → logprob: -1.9668704271316528
    3. 'i' → logprob: -3.7168703079223633
    4. 'nbr' → logprob: -4.966870307922363
    5. 'nei' → logprob: -5.341870307922363
    6. 'n' → logprob: -5.466870307922363
    7. ' nei' → logprob: -5.841870307922363
    8. 'd' → logprob: -5.966870307922363
    9. 'v' → logprob: -5.966870307922363
    10. 'delta' → logprob: -6.341870307922363

Token 276: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28121480345726013
    2. 'in' → logprob: -1.4062148332595825
    3. '	in' → logprob: -10.781214714050293
    4. ' ' → logprob: -11.031214714050293
    5. '   ' → logprob: -12.031214714050293
    6. '(in' → logprob: -12.531214714050293
    7. ' (' → logprob: -12.656214714050293
    8. '(i' → logprob: -13.031214714050293
    9. ',' → logprob: -13.531214714050293
    10. 'i' → logprob: -13.531214714050293

Token 277: ' range' (ID: 3352)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.011305520310997963
    2. '{' → logprob: -5.136305332183838
    3. '((' → logprob: -5.761305332183838
    4. ' [(' → logprob: -7.261305332183838
    5. '[first' → logprob: -7.261305332183838
    6. '[((' → logprob: -8.636305809020996
    7. '(range' → logprob: -8.886305809020996
    8. '(first' → logprob: -9.386305809020996
    9. '[' → logprob: -9.511305809020996
    10. '[-' → logprob: -9.636305809020996

Token 278: '(N' (ID: 10564)
  Prédit: '(first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.9568179249763489
    2. 'N' → logprob: -1.206817865371704
    3. '(N' → logprob: -1.331817865371704
    4. 'first' → logprob: -3.456817865371704
    5. '(' → logprob: -5.081818103790283
    6. '1' → logprob: -5.331818103790283
    7. '(max' → logprob: -5.831818103790283
    8. '2' → logprob: -5.956818103790283
    9. ' (' → logprob: -6.456818103790283
    10. '   ' → logprob: -7.081818103790283

Token 279: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07004302740097046
    2. '):' → logprob: -2.6950430870056152
    3. '   ' → logprob: -10.195042610168457
    4. '):
' → logprob: -10.570042610168457
    5. '+' → logprob: -10.945042610168457
    6. '-' → logprob: -11.945042610168457
    7. ' ):
' → logprob: -12.195042610168457
    8. ')' → logprob: -12.820042610168457
    9. '):

' → logprob: -13.195042610168457
    10. '():
' → logprob: -13.320042610168457

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024985339492559433
    2. ' if' → logprob: -3.8999853134155273
    3. 'if' → logprob: -5.774985313415527
    4. '   ' → logprob: -7.274985313415527
    5. '<|end|>' → logprob: -7.899985313415527
    6. '	   ' → logprob: -9.399985313415527
    7. '<|end|>' → logprob: -10.024985313415527
    8. ' ' → logprob: -10.274985313415527
    9. '    ' → logprob: -10.774985313415527
    10. ',' → logprob: -10.899985313415527

Token 281: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23467658460140228
    2. ' if' → logprob: -1.9846765995025635
    3. '   ' → logprob: -2.9846765995025635
    4. '       ' → logprob: -3.8596765995025635
    5. '	if' → logprob: -9.859676361083984
    6. ' ' → logprob: -10.984676361083984
    7. '           ' → logprob: -11.109676361083984
    8. '    ' → logprob: -11.234676361083984
    9. 'for' → logprob: -12.484676361083984
    10. '  ' → logprob: -12.734676361083984

Token 282: ' not' (ID: 625)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.021259985864162445
    2. '(i' → logprob: -5.271259784698486
    3. ' taken' → logprob: -5.521259784698486
    4. 'not' → logprob: -5.771259784698486
    5. '(t' → logprob: -6.146259784698486
    6. 'abs' → logprob: -6.396259784698486
    7. '(not' → logprob: -6.521259784698486
    8. '(' → logprob: -6.646259784698486
    9. 'i' → logprob: -7.146259784698486
    10. '(abs' → logprob: -7.396259784698486

Token 283: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.008618946187198162
    2. ' taken' → logprob: -4.7586188316345215
    3. 't' → logprob: -13.25861930847168
    4. 'tak' → logprob: -13.75861930847168
    5. 'take' → logprob: -14.75861930847168
    6. ' ' → logprob: -15.00861930847168
    7. '   ' → logprob: -15.25861930847168
    8. '_taken' → logprob: -15.63361930847168
    9. 'taking' → logprob: -16.00861930847168
    10. 'Taken' → logprob: -16.50861930847168

Token 284: '[i' (ID: 1768)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7432355284690857
    2. ' and' → logprob: -0.9932355284690857
    3. '[i' → logprob: -1.9932355880737305
    4. ')' → logprob: -4.3682355880737305
    5. '):' → logprob: -6.2432355880737305
    6. '):
' → logprob: -6.7432355880737305
    7. '[' → logprob: -6.9932355880737305
    8. '[(' → logprob: -8.36823558807373
    9. '(i' → logprob: -8.61823558807373
    10. ' ' → logprob: -8.74323558807373

Token 285: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13194526731967926
    2. ' and' → logprob: -2.2569453716278076
    3. 'and' → logprob: -4.5069451332092285
    4. ')' → logprob: -5.8819451332092285
    5. ']:
' → logprob: -6.2569451332092285
    6. '])' → logprob: -6.6319451332092285
    7. ' ]' → logprob: -7.0069451332092285
    8. ']:' → logprob: -7.5069451332092285
    9. '):
' → logprob: -8.631945610046387
    10. ']):
' → logprob: -10.131945610046387

Token 286: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5826519131660461
    2. '           ' → logprob: -0.8326519131660461
    3. 'and' → logprob: -5.5826520919799805
    4. ':
' → logprob: -6.7076520919799805
    5. ':' → logprob: -6.9576520919799805
    6. ' if' → logprob: -8.33265209197998
    7. '	       ' → logprob: -8.95765209197998
    8. ',' → logprob: -9.70765209197998
    9. '            
' → logprob: -10.45765209197998
    10. '          ' → logprob: -10.58265209197998

Token 287: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4159429967403412
    2. 'left' → logprob: -1.6659430265426636
    3. 'neighbors' → logprob: -2.165942907333374
    4. '           ' → logprob: -4.165943145751953
    5. 'for' → logprob: -4.665943145751953
    6. '#' (adapté à ' #') → logprob: -5.540943145751953
    7. 'neighbor' → logprob: -6.415943145751953
    8. 'continue' → logprob: -6.540943145751953
    9. 'count' → logprob: -7.290943145751953
    10. 'cnt' → logprob: -7.415943145751953

Token 288: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29854995012283325
    2. 'left' → logprob: -1.4235498905181885
    3. 'neighbors' → logprob: -4.298550128936768
    4. 'for' → logprob: -6.673550128936768
    5. 'l' → logprob: -7.673550128936768
    6. 'cnt' → logprob: -7.923550128936768
    7. '           ' → logprob: -8.04854965209961
    8. 'neighbor' → logprob: -8.42354965209961
    9. '   ' → logprob: -8.54854965209961
    10. '#' → logprob: -8.79854965209961

Token 289: ' if' (ID: 538)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.2111458778381348
    2. ' neighbors' → logprob: -1.3361458778381348
    3. ' if' → logprob: -1.8361458778381348
    4. ' (' → logprob: -1.9611458778381348
    5. 'if' → logprob: -2.5861458778381348
    6. '((' → logprob: -4.211145877838135
    7. ' ((' → logprob: -4.461145877838135
    8. 'left' → logprob: -4.961145877838135
    9. '   ' → logprob: -5.086145877838135
    10. ' left' → logprob: -5.586145877838135

Token 290: ' either' (ID: 4784)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.36490049958229065
    2. ' (' → logprob: -1.8649004697799683
    3. '(' → logprob: -2.614900588989258
    4. '(i' → logprob: -3.614900588989258
    5. 'taken' → logprob: -3.864900588989258
    6. '(A' → logprob: -4.114900588989258
    7. '((' → logprob: -4.739900588989258
    8. ' taken' → logprob: -7.114900588989258
    9. '(abs' → logprob: -7.114900588989258
    10. ' ((' → logprob: -7.614900588989258

Token 291: ' neighbor' (ID: 13034)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.25350478291511536
    2. 'taken' → logprob: -1.628504753112793
    3. ' taken' → logprob: -4.253504753112793
    4. ' (' → logprob: -4.503504753112793
    5. '(i' → logprob: -7.003504753112793
    6. '((' → logprob: -7.128504753112793
    7. '(' → logprob: -8.503504753112793
    8. 'neighbors' → logprob: -8.753504753112793
    9. 'neighbor' → logprob: -9.253504753112793
    10. 't' → logprob: -9.503504753112793

Token 292: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2719684839248657
    2. ' taken' → logprob: -1.3969684839248657
    3. 'taken' → logprob: -2.021968364715576
    4. 's' → logprob: -2.396968364715576
    5. ' in' → logprob: -3.021968364715576
    6. ' is' → logprob: -3.271968364715576
    7. '(i' → logprob: -3.396968364715576
    8. '==' → logprob: -3.521968364715576
    9. ' (' → logprob: -3.896968364715576
    10. ' of' → logprob: -4.271968364715576

Token 293: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.10024257749319077
    2. ' taken' → logprob: -2.3502426147460938
    3. 't' → logprob: -11.100242614746094
    4. 'True' → logprob: -11.850242614746094
    5. '   ' → logprob: -12.975242614746094
    6. ' first' → logprob: -13.100242614746094
    7. 'first' → logprob: -13.225242614746094
    8. ' in' → logprob: -13.475242614746094
    9. '_taken' → logprob: -13.850242614746094
    10. ' True' → logprob: -13.975242614746094

Token 294: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02407674677670002
    2. 'and' → logprob: -4.52407693862915
    3. '   ' → logprob: -5.14907693862915
    4. ':' → logprob: -5.27407693862915
    5. ':
' → logprob: -6.52407693862915
    6. ' if' → logprob: -9.024076461791992
    7. '):
' → logprob: -9.649076461791992
    8. '           ' → logprob: -9.899076461791992
    9. '       ' → logprob: -9.899076461791992
    10. ')' → logprob: -10.024076461791992

Token 295: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.030037181451916695
    2. '           ' → logprob: -4.2800374031066895
    3. 'and' → logprob: -5.1550374031066895
    4. ':' → logprob: -5.4050374031066895
    5. '               ' → logprob: -5.9050374031066895
    6. ':
' → logprob: -7.0300374031066895
    7. '   ' → logprob: -7.7800374031066895
    8. ' if' → logprob: -7.7800374031066895
    9. '       ' → logprob: -7.7800374031066895
    10. ',' → logprob: -8.655036926269531

Token 296: ' left' (ID: 3561)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9310250282287598
    2. ' (' → logprob: -1.4310250282287598
    3. ' if' → logprob: -1.6810250282287598
    4. ' taken' → logprob: -2.3060250282287598
    5. 'taken' → logprob: -3.0560250282287598
    6. '           ' → logprob: -4.55602502822876
    7. '(i' → logprob: -4.80602502822876
    8. '(t' → logprob: -5.18102502822876
    9. '(A' → logprob: -5.68102502822876
    10. '((' → logprob: -6.68102502822876

Token 297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13332092761993408
    2. '=' → logprob: -3.0083208084106445
    3. '=(' → logprob: -3.1333208084106445
    4. '_idx' → logprob: -4.2583208084106445
    5. '_neighbor' → logprob: -5.1333208084106445
    6. ')' → logprob: -5.6333208084106445
    7. '_index' → logprob: -6.0083208084106445
    8. '=i' → logprob: -6.6333208084106445
    9. ' =(' → logprob: -7.0083208084106445
    10. '(i' → logprob: -7.2583208084106445

Token 298: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2291320264339447
    2. ' (' → logprob: -1.729132056236267
    3. '(t' → logprob: -3.6041319370269775
    4. '   ' → logprob: -10.354131698608398
    5. '           ' → logprob: -10.979131698608398
    6. '(' → logprob: -11.229131698608398
    7. '(A' → logprob: -11.729131698608398
    8. '(I' → logprob: -11.729131698608398
    9. '(first' → logprob: -11.854131698608398
    10. 'taken' → logprob: -12.104131698608398

Token 299: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006532243569381535
    2. '(i' → logprob: -7.500653266906738
    3. ' i' → logprob: -9.875653266906738
    4. '   ' → logprob: -10.750653266906738
    5. '           ' → logprob: -12.000653266906738
    6. ' (' → logprob: -12.375653266906738
    7. 'first' → logprob: -12.500653266906738
    8. '{i' → logprob: -13.000653266906738
    9. ')i' → logprob: -13.375653266906738
    10. 'N' → logprob: -13.625653266906738

Token 300: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04301174357533455
    2. ' -' → logprob: -3.1680116653442383
    3. ')' → logprob: -12.168011665344238
    4. '1' → logprob: -13.293011665344238
    5. ' ' → logprob: -13.418011665344238
    6. '-i' → logprob: -14.043011665344238
    7. '+' → logprob: -14.168011665344238
    8. 'i' → logprob: -14.543011665344238
    9. '−' → logprob: -15.043011665344238
    10. '-N' → logprob: -15.043011665344238

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07227032631635666
    2. 'first' → logprob: -2.947270393371582
    3. '(i' → logprob: -5.072270393371582
    4. 'i' → logprob: -5.072270393371582
    5. '(first' → logprob: -6.072270393371582
    6. ' first' → logprob: -7.197270393371582
    7. ' ' → logprob: -7.322270393371582
    8. ' (' → logprob: -7.447270393371582
    9. '(' → logprob: -8.822270393371582
    10. ' i' → logprob: -9.822270393371582

Token 302: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.313306599855423
    2. ')%' → logprob: -1.3133065700531006
    3. ' )' → logprob: -10.31330680847168
    4. ')
' → logprob: -12.18830680847168
    5. '   ' → logprob: -13.43830680847168
    6. '%' → logprob: -13.43830680847168
    7. '+' → logprob: -13.81330680847168
    8. ')#' → logprob: -13.93830680847168
    9. ')i' → logprob: -16.06330680847168
    10. 'N' → logprob: -16.06330680847168

Token 303: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.339278580620885e-06
    2. ' N' → logprob: -13.000001907348633
    3. '```' → logprob: -19.875001907348633
    4. '
' → logprob: -20.125001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '	N' → logprob: -20.375001907348633
    7. ' ' → logprob: -20.500001907348633
    8. 'n' → logprob: -20.625001907348633
    9. '`' → logprob: -21.000001907348633
    10. '[' → logprob: -21.500001907348633

Token 304: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2586784064769745
    2. ')
' → logprob: -2.758678436279297
    3. ' in' → logprob: -2.883678436279297
    4. '
' → logprob: -3.133678436279297
    5. '<|end|>' → logprob: -3.883678436279297
    6. ']' → logprob: -4.633678436279297
    7. ' not' → logprob: -4.758678436279297
    8. 'in' → logprob: -4.883678436279297
    9. '   ' → logprob: -5.008678436279297
    10. '           ' → logprob: -6.133678436279297

Token 305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008041187189519405
    2. ' if' → logprob: -5.6330413818359375
    3. '<|end|>' → logprob: -5.8830413818359375
    4. ' and' → logprob: -7.5080413818359375
    5. '		' → logprob: -8.383041381835938
    6. 'if' → logprob: -8.633041381835938
    7. '            
' → logprob: -9.258041381835938
    8. ')' → logprob: -9.508041381835938
    9. '<|end|>' → logprob: -9.508041381835938
    10. ',' → logprob: -9.633041381835938

Token 306: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.04474795237183571
    2. ' right' → logprob: -3.169748067855835
    3. 'taken' → logprob: -6.919747829437256
    4. '           ' → logprob: -8.169748306274414
    5. ' taken' → logprob: -8.169748306274414
    6. '(right' → logprob: -9.044748306274414
    7. '   ' → logprob: -10.419748306274414
    8. 'if' → logprob: -10.919748306274414
    9. '	right' → logprob: -11.544748306274414
    10. '       ' → logprob: -12.669748306274414

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.053134266287088394
    2. '=' → logprob: -3.3031342029571533
    3. '=(' → logprob: -5.053134441375732
    4. '=i' → logprob: -5.053134441375732
    5. ')' → logprob: -6.303134441375732
    6. '(i' → logprob: -8.303133964538574
    7. ' =(' → logprob: -9.928133964538574
    8. ')=' → logprob: -11.428133964538574
    9. ')i' → logprob: -11.428133964538574
    10. '=((' → logprob: -11.553133964538574

Token 308: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005235190503299236
    2. ' (' → logprob: -5.255235195159912
    3. '(' → logprob: -13.755234718322754
    4. '(I' → logprob: -15.755234718322754
    5. '   ' → logprob: -16.00523567199707
    6. '(ii' → logprob: -17.13023567199707
    7. '(N' → logprob: -18.00523567199707
    8. '           ' → logprob: -18.25523567199707
    9. '       ' → logprob: -18.88023567199707
    10. ' ' → logprob: -19.13023567199707

Token 309: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6394325494766235
    2. 'i' → logprob: -0.7644325494766235
    3. 'N' → logprob: -5.264432430267334
    4. ' (' → logprob: -6.639432430267334
    5. ' i' → logprob: -8.639432907104492
    6. '{i' → logprob: -9.764432907104492
    7. '(N' → logprob: -10.139432907104492
    8. '   ' → logprob: -10.764432907104492
    9. '(' → logprob: -12.139432907104492
    10. '[i' → logprob: -12.389432907104492

Token 310: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7140966653823853
    2. '1' → logprob: -0.8390966653823853
    3. '(i' → logprob: -2.5890965461730957
    4. '(' → logprob: -7.089096546173096
    5. 'N' → logprob: -7.089096546173096
    6. 'i' → logprob: -7.839096546173096
    7. '(N' → logprob: -7.964096546173096
    8. ' (' → logprob: -8.589097023010254
    9. '{' → logprob: -9.464097023010254
    10. ' +' → logprob: -9.839097023010254

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011883260449394584
    2. 'N' → logprob: -6.751188278198242
    3. '(' → logprob: -12.001188278198242
    4. '(N' → logprob: -12.501188278198242
    5. '+' → logprob: -13.001188278198242
    6. 'i' → logprob: -13.126188278198242
    7. '(i' → logprob: -13.751188278198242
    8. ' ' → logprob: -13.751188278198242
    9. '{' → logprob: -14.251188278198242
    10. '```' → logprob: -14.876188278198242

Token 312: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -5.538490950129926e-05
    2. ')' → logprob: -9.875055313110352
    3. '%' → logprob: -13.125055313110352
    4. 'N' → logprob: -15.125055313110352
    5. '   ' → logprob: -15.125055313110352
    6. ')
' → logprob: -15.125055313110352
    7. ')i' → logprob: -15.375055313110352
    8. ']%' → logprob: -15.500055313110352
    9. '%)' → logprob: -15.625055313110352
    10. '()%' → logprob: -16.25005531311035

Token 313: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.320199877838604e-07
    2. ' N' → logprob: -14.875
    3. '```' → logprob: -16.625
    4. '`' → logprob: -19.125
    5. '
' → logprob: -19.5
    6. '   ' → logprob: -19.875
    7. 'i' → logprob: -19.875
    8. 'n' → logprob: -20.0
    9. ' ' → logprob: -20.0
    10. ')' → logprob: -20.125

Token 314: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3063914179801941
    2. ' if' → logprob: -2.056391477584839
    3. 'if' → logprob: -2.431391477584839
    4. '   ' → logprob: -3.556391477584839
    5. '
' → logprob: -5.05639123916626
    6. ')' → logprob: -5.43139123916626
    7. '       ' → logprob: -5.55639123916626
    8. ')
' → logprob: -6.93139123916626
    9. ',' → logprob: -7.55639123916626
    10. '            
' → logprob: -7.55639123916626

Token 315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002299301093444228
    2. ' if' → logprob: -7.1272993087768555
    3. '   ' → logprob: -7.3772993087768555
    4. '       ' → logprob: -8.127299308776855
    5. '```' → logprob: -8.127299308776855
    6. 'if' → logprob: -8.752299308776855
    7. ')' → logprob: -10.002299308776855
    8. '               ' → logprob: -11.752299308776855
    9. ',' → logprob: -11.752299308776855
    10. '	       ' → logprob: -11.877299308776855

Token 316: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15063369274139404
    2. ' if' → logprob: -2.1506338119506836
    3. '           ' → logprob: -3.7756338119506836
    4. '   ' → logprob: -7.775633811950684
    5. '```' → logprob: -9.900633811950684
    6. '       ' → logprob: -10.900633811950684
    7. '	if' → logprob: -12.150633811950684
    8. ' ' → logprob: -13.025633811950684
    9. 'c' → logprob: -13.650633811950684
    10. '               ' → logprob: -14.025633811950684

Token 317: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.006721995305269957
    2. ' taken' → logprob: -5.0067219734191895
    3. '   ' → logprob: -13.006722450256348
    4. ' ' → logprob: -13.006722450256348
    5. 't' → logprob: -14.131722450256348
    6. 'tak' → logprob: -14.256722450256348
    7. '  ' → logprob: -15.756722450256348
    8. 'take' → logprob: -16.25672149658203
    9. '    ' → logprob: -16.50672149658203
    10. '(t' → logprob: -16.63172149658203

Token 318: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -1.2948405128554441e-05
    2. 'left' → logprob: -11.75001335144043
    3. '[i' → logprob: -12.75001335144043
    4. '[' → logprob: -13.37501335144043
    5. '[right' → logprob: -14.62501335144043
    6. '(left' → logprob: -16.75001335144043
    7. '[
' → logprob: -17.37501335144043
    8. ' [' → logprob: -18.87501335144043
    9. '[(' → logprob: -19.12501335144043
    10. '```' → logprob: -19.37501335144043

Token 319: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0834653377532959
    2. ' or' → logprob: -2.708465337753296
    3. 'or' → logprob: -4.333465576171875
    4. ' ]' → logprob: -8.333465576171875
    5. ')' → logprob: -9.958465576171875
    6. ']==' → logprob: -10.958465576171875
    7. '   ' → logprob: -12.958465576171875
    8. ']:
' → logprob: -13.708465576171875
    9. '	or' → logprob: -13.833465576171875
    10. ']
' → logprob: -13.958465576171875

Token 320: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.16022777557373047
    2. 'or' → logprob: -1.9102277755737305
    3. '	or' → logprob: -13.16022777557373
    4. ')' → logprob: -14.66022777557373
    5. '   ' → logprob: -14.66022777557373
    6. '==' → logprob: -14.78522777557373
    7. ' ' → logprob: -15.91022777557373
    8. '           ' → logprob: -16.660228729248047
    9. '    ' → logprob: -16.910228729248047
    10. ']' → logprob: -17.160228729248047

Token 321: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.38688042759895325
    2. ' taken' → logprob: -1.1368803977966309
    3. '   ' → logprob: -12.511880874633789
    4. 'tak' → logprob: -13.261880874633789
    5. 't' → logprob: -13.511880874633789
    6. ' ' → logprob: -13.636880874633789
    7. '_taken' → logprob: -14.761880874633789
    8. '           ' → logprob: -14.886880874633789
    9. ' tak' → logprob: -16.13688087463379
    10. 'Taken' → logprob: -16.26188087463379

Token 322: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -1.1398757123970427e-05
    2. '[i' → logprob: -12.250011444091797
    3. '[' → logprob: -12.500011444091797
    4. 'right' → logprob: -13.500011444091797
    5. '[left' → logprob: -13.500011444091797
    6. '[root' → logprob: -17.250011444091797
    7. '```' → logprob: -17.375011444091797
    8. '[
' → logprob: -17.750011444091797
    9. '(right' → logprob: -18.625011444091797
    10. ',right' → logprob: -18.750011444091797

Token 323: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.6629372239112854
    2. ']:' → logprob: -0.7879372239112854
    3. '):
' → logprob: -4.162937164306641
    4. '):' → logprob: -4.662937164306641
    5. ']' → logprob: -5.787937164306641
    6. ':' → logprob: -7.787937164306641
    7. ']):' → logprob: -8.16293716430664
    8. ']==' → logprob: -8.53793716430664
    9. ']):
' → logprob: -8.53793716430664
    10. ']:
' → logprob: -8.53793716430664

Token 324: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00047535591875202954
    2. ' candidates' → logprob: -8.37547492980957
    3. 'c' → logprob: -8.75047492980957
    4. '           ' → logprob: -10.75047492980957
    5. ',c' → logprob: -11.25047492980957
    6. ',' → logprob: -11.62547492980957
    7. '                   ' → logprob: -11.75047492980957
    8. '```' → logprob: -11.75047492980957
    9. ')' → logprob: -12.25047492980957
    10. ')c' → logprob: -12.50047492980957

Token 325: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.45243027806282043
    2. '               ' → logprob: -1.327430248260498
    3. ' candidates' → logprob: -2.327430248260498
    4. '   ' → logprob: -7.827430248260498
    5. '                   ' → logprob: -8.202430725097656
    6. ' c' → logprob: -8.327430725097656
    7. '           ' → logprob: -8.702430725097656
    8. '	c' → logprob: -10.452430725097656
    9. '       ' → logprob: -10.702430725097656
    10. ',c' → logprob: -10.952430725097656

Token 326: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.005247275810688734
    2. '.' → logprob: -5.255247116088867
    3. ' .' → logprob: -11.630247116088867
    4. '.append' → logprob: -13.630247116088867
    5. '.Add' → logprob: -13.755247116088867
    6. '   ' → logprob: -13.880247116088867
    7. '                   ' → logprob: -14.755247116088867
    8. '.setdefault' → logprob: -15.255247116088867
    9. '               ' → logprob: -15.755247116088867
    10. '.insert' → logprob: -15.755247116088867

Token 327: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. 'i' → logprob: -16.250001907348633
    4. ' (' → logprob: -16.500001907348633
    5. '(
' → logprob: -17.125001907348633
    6. ' i' → logprob: -21.250001907348633
    7. '(I' → logprob: -21.500001907348633
    8. '(ii' → logprob: -21.500001907348633
    9. '((' → logprob: -22.500001907348633
    10. '{i' → logprob: -22.500001907348633

Token 328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7120533811976202e-05
    2. '   ' → logprob: -12.000017166137695
    3. ')
' → logprob: -12.000017166137695
    4. ' )' → logprob: -12.500017166137695
    5. '}' → logprob: -15.000017166137695
    6. ')}' → logprob: -15.875017166137695
    7. '))' → logprob: -16.250017166137695
    8. '       ' → logprob: -16.750017166137695
    9. '           ' → logprob: -17.250017166137695
    10. ')#' → logprob: -17.250017166137695

Token 329: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06610126048326492
    2. '    
' → logprob: -3.691101312637329
    3. 'while' → logprob: -4.19110107421875
    4. 'turn' → logprob: -4.31610107421875
    5. '
' → logprob: -5.81610107421875
    6. 'current' → logprob: -6.19110107421875
    7. 'for' → logprob: -6.56610107421875
    8. 'next' → logprob: -6.94110107421875
    9. ' while' → logprob: -7.06610107421875
    10. ' turn' → logprob: -7.06610107421875

Token 330: '   ' (ID: 271)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.11613420397043228
    2. '   ' → logprob: -2.3661341667175293
    3. 'while' → logprob: -4.491134166717529
    4. ' turn' → logprob: -6.116134166717529
    5. '    
' → logprob: -6.866134166717529
    6. 'pick' → logprob: -7.991134166717529
    7. 'for' → logprob: -8.116134643554688
    8. 'player' → logprob: -8.241134643554688
    9. 'is' → logprob: -9.241134643554688
    10. ' while' → logprob: -9.866134643554688

Token 331: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' (adapté à ' turn') → logprob: -0.006390268448740244
    2. 'is' → logprob: -6.13139009475708
    3. 'player' → logprob: -6.50639009475708
    4. 'j' → logprob: -6.88139009475708
    5. '   ' → logprob: -7.75639009475708
    6. 'for' → logprob: -7.88139009475708
    7. '    
' → logprob: -8.131390571594238
    8. 'pick' → logprob: -8.506390571594238
    9. 'import' → logprob: -8.631390571594238
    10. 'while' → logprob: -10.131390571594238

Token 332: '_io' (ID: 41683)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016066044569015503
    2. '=' → logprob: -4.141066074371338
    3. '_' → logprob: -10.51606559753418
    4. ' ' → logprob: -12.76606559753418
    5. '_idx' → logprob: -14.76606559753418
    6. 's' → logprob: -15.26606559753418
    7. ' _' → logprob: -15.26606559753418
    8. ' ' → logprob: -15.89106559753418
    9. '   ' → logprob: -16.14106559753418
    10. '_index' → logprob: -16.26606559753418

Token 333: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003004923230037093
    2. ' =' → logprob: -6.128005027770996
    3. '=' → logprob: -7.628005027770996
    4. 'I' → logprob: -8.378005027770996
    5. 'f' → logprob: -10.503005027770996
    6. '_i' → logprob: -10.628005027770996
    7. 'is' → logprob: -10.628005027770996
    8. '_' → logprob: -12.378005027770996
    9. '_is' → logprob: -12.753005027770996
    10. 'if' → logprob: -12.753005027770996

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3136797547340393
    2. ' =' → logprob: -1.3136796951293945
    3. '_' → logprob: -8.063679695129395
    4. ' ' → logprob: -10.313679695129395
    5. '_=' → logprob: -10.563679695129395
    6. '=True' → logprob: -11.188679695129395
    7. '==' → logprob: -11.688679695129395
    8. ' ==' → logprob: -12.563679695129395
    9. '=_' → logprob: -12.563679695129395
    10. '_idx' → logprob: -12.813679695129395

Token 335: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011476299725472927
    2. 'False' → logprob: -4.511476516723633
    3. ' True' → logprob: -7.761476516723633
    4. ' False' → logprob: -13.011476516723633
    5. '(True' → logprob: -15.886476516723633
    6. '1' → logprob: -16.761476516723633
    7. 'not' → logprob: -17.136476516723633
    8. '0' → logprob: -17.386476516723633
    9. '=True' → logprob: -19.386476516723633
    10. '   ' → logprob: -19.386476516723633

Token 336: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5518019795417786
    2. '   ' → logprob: -1.3018019199371338
    3. 'while' → logprob: -2.301801919937134
    4. ' while' → logprob: -3.551801919937134
    5. '    
' → logprob: -4.051802158355713
    6. '  
' → logprob: -6.301802158355713
    7. '	while' → logprob: -6.676802158355713
    8. ':' → logprob: -7.301802158355713
    9. '\n' → logprob: -7.426802158355713
    10. ')' → logprob: -8.176801681518555

Token 337: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04419141262769699
    2. 'while' → logprob: -3.544191360473633
    3. ' while' → logprob: -4.919191360473633
    4. '    
' → logprob: -5.919191360473633
    5. '\n' → logprob: -6.544191360473633
    6. '   ' → logprob: -6.544191360473633
    7. '  
' → logprob: -7.294191360473633
    8. ' 
' → logprob: -8.544191360473633
    9. ':
' → logprob: -9.294191360473633
    10. ':' → logprob: -9.294191360473633

Token 338: ' IO' (ID: 10357)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1481442153453827
    2. 'True' → logprob: -2.148144245147705
    3. 'for' → logprob: -4.523144245147705
    4. ' while' → logprob: -5.148144245147705
    5. ' True' → logprob: -5.898144245147705
    6. '#' → logprob: -7.648144245147705
    7. '
' → logprob: -7.898144245147705
    8. 'While' → logprob: -8.023143768310547
    9. '   ' → logprob: -8.648143768310547
    10. ' for' → logprob: -9.398143768310547

Token 339: 'I' (ID: 40)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.4269760251045227
    2. '_turn' → logprob: -1.301975965499878
    3. 'i' → logprob: -3.301975965499878
    4. 'I' → logprob: -3.926975965499878
    5. '-turn' → logprob: -5.676976203918457
    6. '-' → logprob: -6.051976203918457
    7. ' _' → logprob: -6.301976203918457
    8. '_k' → logprob: -6.301976203918457
    9. 'O' → logprob: -6.301976203918457
    10. '_' → logprob: -6.551976203918457

Token 340: ' picks' (ID: 37120)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13560210168361664
    2. ' while' → logprob: -2.5106019973754883
    3. '
' → logprob: -3.8856019973754883
    4. '   ' → logprob: -4.385601997375488
    5. '<|end|>' → logprob: -5.385601997375488
    6. '	while' → logprob: -5.885601997375488
    7. '    
' → logprob: -6.135601997375488
    8. '<|end|>' → logprob: -6.760601997375488
    9. ')' → logprob: -7.385601997375488
    10. 'for' → logprob: -7.385601997375488

Token 341: ' next' (ID: 2613)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6250202059745789
    2. ' while' → logprob: -1.0000202655792236
    3. '   ' → logprob: -2.8750202655792236
    4. '
' → logprob: -4.5000200271606445
    5. '\n' → logprob: -5.0000200271606445
    6. '<|end|>' → logprob: -5.3750200271606445
    7. '<|end|>' → logprob: -5.7500200271606445
    8. '    
' → logprob: -5.7500200271606445
    9. '	while' → logprob: -5.8750200271606445
    10. ')' → logprob: -6.2500200271606445

Token 342: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5072416067123413
    2. 'while' → logprob: -1.1322416067123413
    3. ' while' → logprob: -2.632241725921631
    4. '
' → logprob: -6.632241725921631
    5. '<|end|>' → logprob: -7.257241725921631
    6. '	while' → logprob: -7.382241725921631
    7. '    
' → logprob: -7.382241725921631
    8. ')' → logprob: -8.632241249084473
    9. '<|end|>' → logprob: -9.507241249084473
    10. 'for' → logprob: -10.507241249084473

Token 343: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.24212707579135895
    2. '   ' → logprob: -1.7421270608901978
    3. ' while' → logprob: -3.2421271800994873
    4. '    
' → logprob: -7.242126941680908
    5. '	while' → logprob: -9.992127418518066
    6. '
' → logprob: -10.867127418518066
    7. 'for' → logprob: -10.992127418518066
    8. 'j' → logprob: -12.492127418518066
    9. '    ' → logprob: -12.742127418518066
    10. ' 
' → logprob: -13.492127418518066

Token 344: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.003097977489233017
    2. '   ' → logprob: -6.253098011016846
    3. ' while' → logprob: -6.753098011016846
    4. '    
' → logprob: -14.003097534179688
    5. 'for' → logprob: -15.378097534179688
    6. '	while' → logprob: -15.378097534179688
    7. 'from' → logprob: -16.753097534179688
    8. '
' → logprob: -17.253097534179688
    9. '  ' → logprob: -17.378097534179688
    10. 'import' → logprob: -17.378097534179688

Token 345: ' For' (ID: 2214)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.005108645185828209
    2. ' while' → logprob: -5.505108833312988
    3. '   ' → logprob: -6.880108833312988
    4. 'for' → logprob: -14.130108833312988
    5. 'from' → logprob: -15.380108833312988
    6. '	while' → logprob: -15.505108833312988
    7. 'While' → logprob: -15.880108833312988
    8. '    
' → logprob: -16.005107879638672
    9. '
' → logprob: -16.630107879638672
    10. 'import' → logprob: -17.005107879638672

Token 346: ' JO' (ID: 72685)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4315984845161438
    2. '_turn' → logprob: -1.681598424911499
    3. 'while' → logprob: -2.306598424911499
    4. 'turn' → logprob: -3.431598424911499
    5. '_i' → logprob: -5.181598663330078
    6. 'i' → logprob: -5.181598663330078
    7. ' while' → logprob: -5.556598663330078
    8. '_taken' → logprob: -5.556598663330078
    9. ' _' → logprob: -6.181598663330078
    10. '_piece' → logprob: -6.431598663330078

Token 347: 'I' (ID: 40)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0021653673611581326
    2. 'I' → logprob: -6.3771653175354
    3. '_i' → logprob: -8.377165794372559
    4. 'for' → logprob: -9.752165794372559
    5. 'in' → logprob: -10.502165794372559
    6. 'turn' → logprob: -10.627165794372559
    7. 'if' → logprob: -10.627165794372559
    8. '```' → logprob: -10.877165794372559
    9. '_turn' → logprob: -11.002165794372559
    10. '   ' → logprob: -11.877165794372559

Token 348: ''s' (ID: 885)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7833828330039978
    2. 'while' → logprob: -1.1583828926086426
    3. '   ' → logprob: -2.2833828926086426
    4. ' while' → logprob: -2.6583828926086426
    5. ''s' → logprob: -3.7833828926086426
    6. ',' → logprob: -4.533382892608643
    7. '  ' → logprob: -6.033382892608643
    8. '<|end|>' → logprob: -6.158382892608643
    9. 'for' → logprob: -6.408382892608643
    10. ':
' → logprob: -6.533382892608643

Token 349: ' picks' (ID: 37120)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.21195219457149506
    2. ' turn' → logprob: -2.2119522094726562
    3. 'next' → logprob: -3.2119522094726562
    4. 'pick' → logprob: -3.9619522094726562
    5. '_turn' → logprob: -4.586952209472656
    6. ' next' → logprob: -5.086952209472656
    7. 'while' → logprob: -6.086952209472656
    8. '_next' → logprob: -7.086952209472656
    9. 'first' → logprob: -7.461952209472656
    10. 'token' → logprob: -7.586952209472656

Token 350: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8201360702514648
    2. 'while' → logprob: -0.8201360702514648
    3. ' while' → logprob: -2.445136070251465
    4. 'for' → logprob: -4.945136070251465
    5. '    
' → logprob: -5.070136070251465
    6. '<|end|>' → logprob: -5.695136070251465
    7. '
' → logprob: -5.945136070251465
    8. ',' → logprob: -6.070136070251465
    9. '    ' → logprob: -6.195136070251465
    10. ' for' → logprob: -6.195136070251465

Token 351: ' he' (ID: 501)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6191893815994263
    2. '   ' → logprob: -1.1191893815994263
    3. ' while' → logprob: -2.2441892623901367
    4. '#' → logprob: -4.244189262390137
    5. 'for' → logprob: -5.619189262390137
    6. 'def' → logprob: -5.994189262390137
    7. 'if' → logprob: -6.369189262390137
    8. 'import' → logprob: -6.494189262390137
    9. ' #' → logprob: -6.994189262390137
    10. ' if' → logprob: -7.119189262390137

Token 352: ' wants' (ID: 10648)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.6595855951309204
    2. ' can' → logprob: -1.2845855951309204
    3. '#' → logprob: -2.659585475921631
    4. 'will' → logprob: -3.409585475921631
    5. 's' → logprob: -4.034585475921631
    6. ' wants' → logprob: -4.409585475921631
    7. ' will' → logprob: -4.409585475921631
    8. '   ' → logprob: -5.034585475921631
    9. 'max' → logprob: -5.409585475921631
    10. 'def' → logprob: -5.534585475921631

Token 353: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5767686367034912
    2. ' to' → logprob: -0.8267686367034912
    3. 'max' → logprob: -7.57676887512207
    4. '#' → logprob: -8.57676887512207
    5. 'maximize' → logprob: -9.95176887512207
    6. '   ' → logprob: -10.70176887512207
    7. 'the' → logprob: -11.70176887512207
    8. 'import' → logprob: -11.95176887512207
    9. '<|end|>' → logprob: -12.32676887512207
    10. '
' → logprob: -12.45176887512207

Token 354: ' maximize' (ID: 44207)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -0.00662418594583869
    2. 'choose' → logprob: -6.006624221801758
    3. ' maximize' → logprob: -6.256624221801758
    4. 'max' → logprob: -6.756624221801758
    5. 'pick' → logprob: -7.131624221801758
    6. 'min' → logprob: -8.631624221801758
    7. 'select' → logprob: -10.756624221801758
    8. ' pick' → logprob: -11.131624221801758
    9. 'take' → logprob: -11.256624221801758
    10. 'increase' → logprob: -12.256624221801758

Token 355: ' sum' (ID: 4215)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12876714766025543
    2. 'the' → logprob: -2.628767251968384
    3. 'his' → logprob: -3.503767251968384
    4. ' the' → logprob: -4.878767013549805
    5. ' his' → logprob: -5.503767013549805
    6. 'max' → logprob: -6.128767013549805
    7. ' joi' → logprob: -6.253767013549805
    8. 'sum' → logprob: -6.503767013549805
    9. ' j' → logprob: -7.503767013549805
    10. 'jo' → logprob: -8.253767013549805

Token 356: ',
' (ID: 412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: '   ' (ID: 271)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.1893717646598816
    2. 'so' → logprob: -2.4393718242645264
    3. '   ' → logprob: -2.5643718242645264
    4. '    ' → logprob: -5.814371585845947
    5. ' ' → logprob: -6.939371585845947
    6. '<|end|>' → logprob: -7.064371585845947
    7. '    
' → logprob: -7.189371585845947
    8. 'not' → logprob: -7.314371585845947
    9. 'and' → logprob: -7.314371585845947
    10. ' and' → logprob: -7.939371585845947

Token 358: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18699835240840912
    2. ' so' → logprob: -3.1869983673095703
    3. ' ' → logprob: -3.3119983673095703
    4. 'so' → logprob: -4.18699836730957
    5. 'while' → logprob: -4.43699836730957
    6. '  ' → logprob: -4.56199836730957
    7. '    ' → logprob: -4.56199836730957
    8. '#' (adapté à ' #') → logprob: -4.68699836730957
    9. 'not' → logprob: -4.68699836730957
    10. 'token' → logprob: -5.43699836730957

Token 359: ' so' (ID: 813)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.49871399998664856
    2. '   ' → logprob: -1.3737139701843262
    3. ' while' → logprob: -2.748713970184326
    4. '#' → logprob: -3.248713970184326
    5. ' so' → logprob: -4.998713970184326
    6. ' #' → logprob: -5.373713970184326
    7. 'for' → logprob: -5.373713970184326
    8. 'so' → logprob: -5.498713970184326
    9. '    
' → logprob: -5.998713970184326
    10. ' ' → logprob: -6.248713970184326

Token 360: ' he' (ID: 501)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44204142689704895
    2. 'while' → logprob: -1.9420413970947266
    3. 'he' → logprob: -3.1920413970947266
    4. '#' → logprob: -3.1920413970947266
    5. 'for' → logprob: -3.4420413970947266
    6. 'we' → logprob: -3.9420413970947266
    7. ' he' → logprob: -4.067041397094727
    8. ' while' → logprob: -4.317041397094727
    9. ' for' → logprob: -4.442041397094727
    10. ' we' → logprob: -4.567041397094727

Token 361: ' will' (ID: 738)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -1.1385653018951416
    2. ' should' → logprob: -1.5135653018951416
    3. ' will' → logprob: -1.6385653018951416
    4. 'will' → logprob: -2.0135653018951416
    5. ' can' → logprob: -3.2635653018951416
    6. '#' → logprob: -3.7635653018951416
    7. ' picks' → logprob: -4.0135650634765625
    8. 'can' → logprob: -4.0135650634765625
    9. ''ll' → logprob: -4.2635650634765625
    10. ' chooses' → logprob: -5.5135650634765625

Token 362: ' choose' (ID: 5655)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.9343351125717163
    2. ' pick' → logprob: -1.4343351125717163
    3. 'pick' → logprob: -1.4343351125717163
    4. ' choose' → logprob: -2.809335231781006
    5. ' select' → logprob: -3.309335231781006
    6. 'select' → logprob: -3.809335231781006
    7. ' always' → logprob: -5.809335231781006
    8. 'always' → logprob: -6.434335231781006
    9. ' take' → logprob: -6.559335231781006
    10. 'try' → logprob: -6.684335231781006

Token 363: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18226104974746704
    2. ' max' → logprob: -1.8072609901428223
    3. '   ' → logprob: -7.057260990142822
    4. ' the' → logprob: -7.682260990142822
    5. 'i' → logprob: -8.18226146697998
    6. ' i' → logprob: -8.55726146697998
    7. 'the' → logprob: -8.80726146697998
    8. 'idx' → logprob: -9.80726146697998
    9. 'next' → logprob: -9.93226146697998
    10. 'piece' → logprob: -9.93226146697998

Token 364: ' candidate' (ID: 17098)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17573945224285126
    2. ' max' → logprob: -2.5507395267486572
    3. 'candidate' → logprob: -2.6757395267486572
    4. ' candidate' → logprob: -5.550739288330078
    5. 'piece' → logprob: -5.550739288330078
    6. 'best' → logprob: -6.050739288330078
    7. 'c' → logprob: -6.175739288330078
    8. 'next' → logprob: -7.300739288330078
    9. ' best' → logprob: -7.925739288330078
    10. 'token' → logprob: -8.050739288330078

Token 365: ' with' (ID: 483)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2251794338226318
    2. ' with' → logprob: -1.3501794338226318
    3. '<|end|>' → logprob: -1.4751794338226318
    4. ' .' → logprob: -2.600179433822632
    5. '<|end|>' → logprob: -2.975179433822632
    6. 'with' → logprob: -3.225179433822632
    7. '.pop' → logprob: -3.850179433822632
    8. '.remove' → logprob: -4.725179672241211
    9. ')' → logprob: -5.100179672241211
    10. '_with' → logprob: -5.225179672241211

Token 366: ' largest' (ID: 10574)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1967153251171112
    2. ' the' → logprob: -2.6967153549194336
    3. ' max' → logprob: -2.6967153549194336
    4. 'the' → logprob: -4.071715354919434
    5. 'largest' → logprob: -4.321715354919434
    6. 'highest' → logprob: -5.071715354919434
    7. ' largest' → logprob: -5.821715354919434
    8. ' highest' → logprob: -6.571715354919434
    9. ' maximum' → logprob: -7.196715354919434
    10. 'maximum' → logprob: -7.571715354919434

Token 367: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08925198018550873
    2. 'value' → logprob: -2.71425199508667
    3. ' A' → logprob: -5.33925199508667
    4. 'max' → logprob: -6.21425199508667
    5. '_value' → logprob: -6.21425199508667
    6. '_' → logprob: -6.33925199508667
    7. ' value' → logprob: -6.46425199508667
    8. ' ' → logprob: -6.58925199508667
    9. 'piece' → logprob: -6.71425199508667
    10. ')' → logprob: -7.08925199508667

Token 368: '[i' (ID: 1768)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.115332007408142
    2. '_max' → logprob: -1.115332007408142
    3. '[max' → logprob: -2.2403321266174316
    4. '[' → logprob: -2.4903321266174316
    5. '[first' → logprob: -2.7403321266174316
    6. '.' → logprob: -3.8653321266174316
    7. '_value' → logprob: -4.365332126617432
    8. '_' → logprob: -4.490332126617432
    9. 'value' → logprob: -4.990332126617432
    10. '_piece' → logprob: -5.115332126617432

Token 369: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.18840546905994415
    2. ']' → logprob: -1.9384055137634277
    3. ')' → logprob: -4.063405513763428
    4. ' ])' → logprob: -5.438405513763428
    5. ')]' → logprob: -6.063405513763428
    6. '[i' → logprob: -7.438405513763428
    7. ' ]' → logprob: -7.563405513763428
    8. 'value' → logprob: -7.688405513763428
    9. ' )' → logprob: -7.938405513763428
    10. '   ' → logprob: -8.56340503692627

Token 370: '    
' (ID: 1944)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.47789105772972107
    2. '   ' → logprob: -1.6028910875320435
    3. '    
' → logprob: -2.352890968322754
    4. ' while' → logprob: -2.727890968322754
    5. '
' → logprob: -4.727890968322754
    6. '  
' → logprob: -5.602890968322754
    7. '\n' → logprob: -6.352890968322754
    8. 'for' → logprob: -6.602890968322754
    9. ' 
' → logprob: -7.477890968322754
    10. '   
' → logprob: -7.852890968322754

Token 371: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06439858675003052
    2. '   ' → logprob: -2.9393985271453857
    3. ' while' → logprob: -4.689398765563965
    4. 'for' → logprob: -8.814398765563965
    5. '    
' → logprob: -9.564398765563965
    6. '
' → logprob: -10.189398765563965
    7. '	while' → logprob: -11.689398765563965
    8. 'While' → logprob: -12.314398765563965
    9. '  
' → logprob: -13.189398765563965
    10. ' for' → logprob: -13.314398765563965

Token 372: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.020800422877073288
    2. '   ' → logprob: -4.270800590515137
    3. ' while' → logprob: -5.020800590515137
    4. 'for' → logprob: -11.645800590515137
    5. '    
' → logprob: -12.645800590515137
    6. '
' → logprob: -12.895800590515137
    7. '	while' → logprob: -14.645800590515137
    8. '```' → logprob: -15.520800590515137
    9. ' 
' → logprob: -15.770800590515137
    10. 'While' → logprob: -15.770800590515137

Token 373: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.006003925576806068
    2. ' taken' → logprob: -5.1310038566589355
    3. 'len' → logprob: -10.006004333496094
    4. 'c' → logprob: -11.131004333496094
    5. 'not' → logprob: -11.381004333496094
    6. 't' → logprob: -13.256004333496094
    7. 'tak' → logprob: -13.506004333496094
    8. ' not' → logprob: -15.506004333496094
    9. ' len' → logprob: -15.631004333496094
    10. 'take' → logprob: -16.006004333496094

Token 374: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.372294698550832e-06
    2. 'count' → logprob: -11.750009536743164
    3. '.count' → logprob: -14.250009536743164
    4. '[' → logprob: -15.375009536743164
    5. '_COUNT' → logprob: -15.500009536743164
    6. '<count' → logprob: -15.625009536743164
    7. '<' → logprob: -16.625009536743164
    8. '!=' → logprob: -17.125009536743164
    9. ')' → logprob: -17.375009536743164
    10. 'Count' → logprob: -17.500009536743164

Token 375: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06198471784591675
    2. '<' → logprob: -2.8119847774505615
    3. ' !=' → logprob: -11.93698501586914
    4. ' ' → logprob: -13.31198501586914
    5. ' <=' → logprob: -13.43698501586914
    6. '<len' → logprob: -13.56198501586914
    7. ' <
' → logprob: -13.68698501586914
    8. '<size' → logprob: -13.93698501586914
    9. '<int' → logprob: -14.18698501586914
    10. '!=' → logprob: -14.43698501586914

Token 376: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005530327325686812
    2. ' N' → logprob: -7.500553131103516
    3. '	N' → logprob: -20.000553131103516
    4. '   ' → logprob: -20.750553131103516
    5. ' ' → logprob: -20.750553131103516
    6. '>N' → logprob: -21.625553131103516
    7. '
' → logprob: -22.000553131103516
    8. '<N' → logprob: -22.250553131103516
    9. '```' → logprob: -22.250553131103516
    10. 'n' → logprob: -22.750553131103516

Token 377: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009324871003627777
    2. ':
' → logprob: -4.75932502746582
    3. '   ' → logprob: -7.38432502746582
    4. '):' → logprob: -10.00932502746582
    5. ' and' → logprob: -11.63432502746582
    6. ')' → logprob: -11.75932502746582
    7. '):
' → logprob: -11.88432502746582
    8. ',' → logprob: -12.00932502746582
    9. ' :' → logprob: -12.38432502746582
    10. '       ' → logprob: -12.75932502746582

Token 378: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012057077838107944
    2. ' if' → logprob: -7.376205921173096
    3. 'if' → logprob: -7.876205921173096
    4. '    
' → logprob: -8.751205444335938
    5. '       ' → logprob: -10.376205444335938
    6. '```' → logprob: -12.376205444335938
    7. '   ' → logprob: -13.751205444335938
    8. '  
' → logprob: -14.376205444335938
    9. '
' → logprob: -14.376205444335938
    10. ')' → logprob: -14.501205444335938

Token 379: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0009523137705400586
    2. '       ' → logprob: -7.000952243804932
    3. ' if' → logprob: -10.12595272064209
    4. '   ' → logprob: -14.12595272064209
    5. '#' → logprob: -17.000951766967773
    6. '	if' → logprob: -17.000951766967773
    7. 'next' → logprob: -17.250951766967773
    8. '        
' → logprob: -17.375951766967773
    9. 'pick' → logprob: -18.250951766967773
    10. '```' → logprob: -18.250951766967773

Token 380: ' turn' (ID: 3716)
  Prédit: ' turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turn' → logprob: -0.020569797605276108
    2. 'turn' → logprob: -3.8955698013305664
    3. ' not' → logprob: -10.895569801330566
    4. '   ' → logprob: -12.020569801330566
    5. 'not' → logprob: -14.145569801330566
    6. ' ' → logprob: -14.145569801330566
    7. '(turn' → logprob: -14.395569801330566
    8. ' ' → logprob: -14.520569801330566
    9. '    ' → logprob: -15.020569801330566
    10. '_turn' → logprob: -15.520569801330566

Token 381: '_io' (ID: 41683)
  Prédit: '_io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_io' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -13.125003814697266
    3. 'io' → logprob: -15.000003814697266
    4. '_ios' → logprob: -15.000003814697266
    5. ' _' → logprob: -15.375003814697266
    6. '_ai' → logprob: -15.625003814697266
    7. '\' → logprob: -16.750003814697266
    8. '_i' → logprob: -16.875003814697266
    9. '   ' → logprob: -16.875003814697266
    10. '=_' → logprob: -17.000003814697266

Token 382: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0280383548888494e-06
    2. ' i' → logprob: -14.250000953674316
    3. '_i' → logprob: -16.500001907348633
    4. 'I' → logprob: -16.875001907348633
    5. 'і' → logprob: -17.000001907348633
    6. 'и' → logprob: -17.500001907348633
    7. '	i' → logprob: -18.000001907348633
    8. '=' → logprob: -18.250001907348633
    9. 'ı' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.750001907348633

Token 383: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04860009253025055
    2. ':
' → logprob: -3.048600196838379
    3. '==' → logprob: -12.048600196838379
    4. ' :' → logprob: -12.673600196838379
    5. ':

' → logprob: -14.173600196838379
    6. '=' → logprob: -14.298600196838379
    7. ' ==' → logprob: -14.298600196838379
    8. ':
' → logprob: -14.423600196838379
    9. '):' → logprob: -14.673600196838379
    10. '):
' → logprob: -14.923600196838379

Token 384: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007480618078261614
    2. '        
' → logprob: -6.257480621337891
    3. 'max' → logprob: -6.257480621337891
    4. ' candidates' → logprob: -6.882480621337891
    5. 'candidate' → logprob: -7.632480621337891
    6. '           ' → logprob: -8.13248062133789
    7. ' max' → logprob: -8.13248062133789
    8. 'idx' → logprob: -8.50748062133789
    9. '   ' → logprob: -8.88248062133789
    10. 'best' → logprob: -8.88248062133789

Token 385: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5970011949539185
    2. 'best' → logprob: -1.4720011949539185
    3. 'pick' → logprob: -2.972001075744629
    4. 'cand' → logprob: -2.972001075744629
    5. 'idx' → logprob: -3.222001075744629
    6. '#' (adapté à ' #') → logprob: -3.597001075744629
    7. ' best' → logprob: -4.722001075744629
    8. ' max' → logprob: -4.847001075744629
    9. '       ' → logprob: -4.847001075744629
    10. ' pick' → logprob: -5.222001075744629

Token 386: ' IO' (ID: 10357)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13721059262752533
    2. 'best' → logprob: -3.3872106075286865
    3. 'idx' → logprob: -3.5122106075286865
    4. '#' → logprob: -3.7622106075286865
    5. 'pick' → logprob: -4.262210369110107
    6. ' max' → logprob: -4.887210369110107
    7. 'cand' → logprob: -5.137210369110107
    8. 'io' → logprob: -5.887210369110107
    9. ' pick' → logprob: -6.012210369110107
    10. 'chosen' → logprob: -6.262210369110107

Token 387: 'I' (ID: 40)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07158397883176804
    2. 'I' → logprob: -2.6965839862823486
    3. '_candidates' → logprob: -6.5715837478637695
    4. 'c' → logprob: -9.19658374786377
    5. 'is' → logprob: -10.82158374786377
    6. '_' → logprob: -11.07158374786377
    7. '_candidate' → logprob: -11.07158374786377
    8. '`' → logprob: -11.19658374786377
    9. '_i' → logprob: -11.44658374786377
    10. '   ' → logprob: -11.69658374786377

Token 388: ' chooses' (ID: 75184)
  Prédit: '_pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pick' → logprob: -0.13974246382713318
    2. '_choice' → logprob: -2.889742374420166
    3. '_max' → logprob: -3.639742374420166
    4. '_idx' → logprob: -3.889742374420166
    5. '_candidate' → logprob: -4.389742374420166
    6. '_choose' → logprob: -5.389742374420166
    7. '_take' → logprob: -5.889742374420166
    8. '_index' → logprob: -5.889742374420166
    9. '_candidates' → logprob: -6.389742374420166
    10. 'max' → logprob: -7.139742374420166

Token 389: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5709782838821411
    2. ' max' → logprob: -1.1959782838821411
    3. ' idx' → logprob: -3.0709781646728516
    4. 'idx' → logprob: -3.3209781646728516
    5. 'best' → logprob: -4.320978164672852
    6. 'cand' → logprob: -5.195978164672852
    7. 'candidate' → logprob: -5.320978164672852
    8. '           ' → logprob: -5.320978164672852
    9. ' best' → logprob: -5.570978164672852
    10. ' i' → logprob: -6.195978164672852

Token 390: ' largest' (ID: 10574)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011137432418763638
    2. 'idx' → logprob: -5.13613748550415
    3. 'best' → logprob: -6.01113748550415
    4. 'cand' → logprob: -6.76113748550415
    5. 'candidate' → logprob: -7.01113748550415
    6. 'next' → logprob: -8.636137008666992
    7. 'c' → logprob: -8.636137008666992
    8. 'i' → logprob: -8.636137008666992
    9. ' max' → logprob: -9.511137008666992
    10. 'largest' → logprob: -10.761137008666992

Token 391: ' piece' (ID: 9047)
  Prédit: '_piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.7624394297599792
    2. '_candidate' → logprob: -1.512439489364624
    3. '_idx' → logprob: -1.887439489364624
    4. '_i' → logprob: -2.762439489364624
    5. '_index' → logprob: -3.512439489364624
    6. 'candidate' → logprob: -3.637439489364624
    7. 'idx' → logprob: -3.887439489364624
    8. 'piece' → logprob: -5.012439250946045
    9. 'i' → logprob: -5.762439250946045
    10. '_' → logprob: -6.262439250946045

Token 392: ' among' (ID: 6200)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07812880724668503
    2. '       ' → logprob: -2.8281288146972656
    3. '=' → logprob: -4.703128814697266
    4. 'idx' → logprob: -6.203128814697266
    5. 'candidate' → logprob: -7.328128814697266
    6. '_idx' → logprob: -7.453128814697266
    7. '        
' → logprob: -7.953128814697266
    8. ' idx' → logprob: -7.953128814697266
    9. '           ' → logprob: -7.953128814697266
    10. '_candidates' → logprob: -8.078128814697266

Token 393: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009136092266999185
    2. ' candidates' → logprob: -7.000913619995117
    3. '[c' → logprob: -13.875913619995117
    4. ' c' → logprob: -15.125913619995117
    5. 'candidate' → logprob: -15.125913619995117
    6. '   ' → logprob: -15.875913619995117
    7. '_candidates' → logprob: -15.875913619995117
    8. '(c' → logprob: -16.125913619995117
    9. 'the' → logprob: -17.125913619995117
    10. ')c' → logprob: -17.125913619995117

Token 394: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04596377909183502
    2. '           ' → logprob: -3.795963764190674
    3. '        
' → logprob: -5.295963764190674
    4. ',' → logprob: -5.295963764190674
    5. 'idx' → logprob: -5.795963764190674
    6. ' =' → logprob: -6.295963764190674
    7. ' idx' → logprob: -7.545963764190674
    8. 'candidate' → logprob: -7.545963764190674
    9. '
' → logprob: -7.670963764190674
    10. '=' → logprob: -7.670963764190674

Token 395: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012728013098239899
    2. 'idx' → logprob: -6.012728214263916
    3. '           ' → logprob: -6.262728214263916
    4. '        
' → logprob: -6.387728214263916
    5. 'candidate' → logprob: -7.012728214263916
    6. ',' → logprob: -7.137728214263916
    7. ' =' → logprob: -7.262728214263916
    8. '   ' → logprob: -7.762728214263916
    9. 'next' → logprob: -8.012727737426758
    10. ' idx' → logprob: -8.137727737426758

Token 396: ' if' (ID: 538)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.37739086151123047
    2. ' pick' → logprob: -1.8773908615112305
    3. 'idx' → logprob: -2.8773908615112305
    4. 'max' → logprob: -3.8773908615112305
    5. ' idx' → logprob: -4.1273908615112305
    6. 'choice' → logprob: -4.5023908615112305
    7. 'best' → logprob: -4.5023908615112305
    8. 'next' → logprob: -4.7523908615112305
    9. 'chosen' → logprob: -5.2523908615112305
    10. ' choice' → logprob: -5.3773908615112305

Token 397: ' not' (ID: 625)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2722075879573822
    2. 'not' → logprob: -1.5222076177597046
    3. 'len' → logprob: -4.397207736968994
    4. ' not' → logprob: -4.897207736968994
    5. ' candidates' → logprob: -8.397207260131836
    6. ' len' → logprob: -9.897207260131836
    7. 'cand' → logprob: -12.272207260131836
    8. 'candidate' → logprob: -13.272207260131836
    9. '   ' → logprob: -13.522207260131836
    10. ' c' → logprob: -13.772207260131836

Token 398: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011047814972698689
    2. ' candidates' → logprob: -4.511047840118408
    3. 'len' → logprob: -17.51104736328125
    4. ' c' → logprob: -17.76104736328125
    5. 'cand' → logprob: -18.01104736328125
    6. '_candidates' → logprob: -18.26104736328125
    7. 'candidate' → logprob: -18.38604736328125
    8. ' candidats' → logprob: -19.13604736328125
    9. 'andidates' → logprob: -19.38604736328125
    10. 'Candidates' → logprob: -19.63604736328125

Token 399: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016240926459431648
    2. ':
' → logprob: -4.141241073608398
    3. '.' → logprob: -9.641241073608398
    4. ':return' → logprob: -9.766241073608398
    5. '):' → logprob: -10.391241073608398
    6. ':
' → logprob: -10.766241073608398
    7. ')' → logprob: -11.641241073608398
    8. '.pop' → logprob: -11.891241073608398
    9. '   ' → logprob: -12.141241073608398
    10. ' or' → logprob: -12.391241073608398

Token 400: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009935164824128151
    2. ' break' → logprob: -5.25993537902832
    3. '           ' → logprob: -6.38493537902832
    4. ':
' → logprob: -6.75993537902832
    5. ')' → logprob: -7.88493537902832
    6. ':' → logprob: -8.13493537902832
    7. '                
' → logprob: -8.38493537902832
    8. 'break' → logprob: -8.38493537902832
    9. '):
' → logprob: -8.88493537902832
    10. ',' → logprob: -9.63493537902832

Token 401: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.07912882417440414
    2. 'break' (adapté à ' break') → logprob: -2.5791287422180176
    3. '               ' → logprob: -8.829129219055176
    4. '           ' → logprob: -9.579129219055176
    5. '       ' → logprob: -11.204129219055176
    6. '   ' → logprob: -12.204129219055176
    7. '	break' → logprob: -13.204129219055176
    8. '                   ' → logprob: -13.579129219055176
    9. '
' → logprob: -14.454129219055176
    10. 'return' → logprob: -14.829129219055176

Token 402: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0904204845428467
    2. ')' → logprob: -1.3404204845428467
    3. '           ' → logprob: -2.4654204845428467
    4. '
' → logprob: -3.0904204845428467
    5. '        
' → logprob: -3.0904204845428467
    6. ')
' → logprob: -3.8404204845428467
    7. 'idx' → logprob: -3.8404204845428467
    8. '  
' → logprob: -4.215420722961426
    9. '[i' → logprob: -4.340420722961426
    10. 'max' → logprob: -4.465420722961426

Token 403: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38328784704208374
    2. ')' → logprob: -1.8832879066467285
    3. '       ' → logprob: -3.0082879066467285
    4. 'max' → logprob: -4.3832879066467285
    5. ' 
' → logprob: -4.5082879066467285
    6. '            
' → logprob: -4.5082879066467285
    7. 'token' → logprob: -4.5082879066467285
    8. 'idx' → logprob: -4.8832879066467285
    9. 'i' → logprob: -5.1332879066467285
    10. ' i' → logprob: -5.3832879066467285

Token 404: ' pick' (ID: 5230)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pick' (adapté à ' pick') → logprob: -1.2963801622390747
    2. 'io' → logprob: -1.6713801622390747
    3. 'max' → logprob: -1.6713801622390747
    4. 'chosen' → logprob: -2.421380043029785
    5. 'best' → logprob: -2.546380043029785
    6. 'choice' → logprob: -2.546380043029785
    7. 'next' → logprob: -3.421380043029785
    8. 'i' → logprob: -3.796380043029785
    9. 'idx' → logprob: -3.921380043029785
    10. ' pick' → logprob: -5.046380043029785

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407880425453186
    2. '=' → logprob: -0.9740787744522095
    3. '_idx' → logprob: -14.224079132080078
    4. '=int' → logprob: -15.349079132080078
    5. '=_' → logprob: -15.474079132080078
    6. '_' → logprob: -15.974079132080078
    7. '＝' → logprob: -16.099079132080078
    8. '_index' → logprob: -16.099079132080078
    9. ' ' → logprob: -16.224079132080078
    10. ')' → logprob: -16.224079132080078

Token 406: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.306760805164231e-05
    2. ' max' → logprob: -11.25001335144043
    3. 'min' → logprob: -17.75001335144043
    4. '(max' → logprob: -22.37501335144043
    5. '[max' → logprob: -23.50001335144043
    6. '	max' → logprob: -23.75001335144043
    7. ',max' → logprob: -24.00001335144043
    8. 'None' → logprob: -24.25001335144043
    9. '-max' → logprob: -24.25001335144043
    10. ' ' → logprob: -24.37501335144043

Token 407: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00020687808864749968
    2. 'c' → logprob: -8.62520694732666
    3. '(' → logprob: -11.12520694732666
    4. '(i' → logprob: -11.62520694732666
    5. '(p' → logprob: -14.00020694732666
    6. '(candidate' → logprob: -14.00020694732666
    7. '([' → logprob: -14.62520694732666
    8. '(k' → logprob: -14.75020694732666
    9. '_candidates' → logprob: -14.75020694732666
    10. '(
' → logprob: -15.12520694732666

Token 408: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.00019495772721711546
    2. 'and' → logprob: -8.625194549560547
    3. 'c' → logprob: -11.375194549560547
    4. 'andid' → logprob: -13.375194549560547
    5. '_candidates' → logprob: -14.125194549560547
    6. 'andi' → logprob: -14.625194549560547
    7. 'ands' → logprob: -14.750194549560547
    8. '{' → logprob: -15.000194549560547
    9. 'andidate' → logprob: -15.750194549560547
    10. ' candidates' → logprob: -16.000194549560547

Token 409: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027729051653295755
    2. ',' → logprob: -6.252772808074951
    3. ' )' → logprob: -7.127772808074951
    4. '<|end|>' → logprob: -11.37777328491211
    5. ',key' → logprob: -11.37777328491211
    6. ' ,' → logprob: -11.87777328491211
    7. ')
' → logprob: -12.87777328491211
    8. ')]' → logprob: -13.12777328491211
    9. '])' → logprob: -13.12777328491211
    10. ']' → logprob: -13.37777328491211

Token 410: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.011048054322600365
    2. ' key' → logprob: -4.511047840118408
    3. ',key' → logprob: -15.511048316955566
    4. '	key' → logprob: -16.38604736328125
    5. '(key' → logprob: -18.01104736328125
    6. '   ' → logprob: -18.13604736328125
    7. 'lambda' → logprob: -20.88604736328125
    8. '
' → logprob: -20.88604736328125
    9. ',' → logprob: -21.01104736328125
    10. '[key' → logprob: -21.26104736328125

Token 411: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.00011212585377506912
    2. 'lambda' → logprob: -9.500112533569336
    3. '=' → logprob: -10.250112533569336
    4. '=A' → logprob: -13.500112533569336
    5. 'A' → logprob: -14.625112533569336
    6. ' lambda' → logprob: -18.000112533569336
    7. '(lambda' → logprob: -18.000112533569336
    8. ' =' → logprob: -20.500112533569336
    9. '_lambda' → logprob: -21.125112533569336
    10. '=
' → logprob: -22.000112533569336

Token 412: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0025736368261277676
    2. ' i' → logprob: -6.002573490142822
    3. 'x' → logprob: -9.25257396697998
    4. 'idx' → logprob: -14.12757396697998
    5. 'lambda' → logprob: -14.12757396697998
    6. ' x' → logprob: -14.62757396697998
    7. 'k' → logprob: -16.502573013305664
    8. 'index' → logprob: -17.002573013305664
    9. '	i' → logprob: -17.627573013305664
    10. 'a' → logprob: -17.877573013305664

Token 413: ':A' (ID: 112571)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010411443654447794
    2. ':A' → logprob: -6.876040935516357
    3. ' :' → logprob: -12.376041412353516
    4. 'A' → logprob: -12.751041412353516
    5. ':x' → logprob: -14.251041412353516
    6. ':
' → logprob: -14.501041412353516
    7. ':a' → logprob: -17.501041412353516
    8. ':(' → logprob: -17.626041412353516
    9. ':int' → logprob: -17.626041412353516
    10. ':i' → logprob: -17.751041412353516

Token 414: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.233804303221405e-05
    2. 'x' → logprob: -9.375092506408691
    3. '[' → logprob: -12.125092506408691
    4. '[
' → logprob: -13.500092506408691
    5. ' [' → logprob: -15.875092506408691
    6. ' x' → logprob: -16.250091552734375
    7. '(x' → logprob: -16.375091552734375
    8. '[i' → logprob: -16.500091552734375
    9. '```' → logprob: -16.875091552734375
    10. '[A' → logprob: -17.875091552734375

Token 415: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0008097442332655191
    2. ')' → logprob: -7.375809669494629
    3. ' ])' → logprob: -9.250809669494629
    4. '])
' → logprob: -9.625809669494629
    5. ']' → logprob: -11.625809669494629
    6. ' )' → logprob: -12.625809669494629
    7. ')])' → logprob: -12.875809669494629
    8. ')]' → logprob: -13.250809669494629
    9. '))' → logprob: -13.375809669494629
    10. ''])' → logprob: -14.125809669494629

Token 416: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7437790632247925
    2. 'c' → logprob: -1.4937790632247925
    3. ')' → logprob: -2.868779182434082
    4. ')
' → logprob: -2.868779182434082
    5. ' taken' → logprob: -2.993779182434082
    6. '       ' → logprob: -3.243779182434082
    7. ' candidates' → logprob: -3.368779182434082
    8. 'taken' → logprob: -3.493779182434082
    9. ')c' → logprob: -3.743779182434082
    10. 'tokens' → logprob: -6.368779182434082

Token 417: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' (adapté à ' taken') → logprob: -0.07280048727989197
    2. ' taken' → logprob: -2.822800397872925
    3. 'c' → logprob: -5.197800636291504
    4. '   ' → logprob: -5.572800636291504
    5. '
' → logprob: -7.197800636291504
    6. '           ' → logprob: -7.572800636291504
    7. '       ' → logprob: -9.072800636291504
    8. ' candidates' → logprob: -10.697800636291504
    9. '            
' → logprob: -11.322800636291504
    10. '    
' → logprob: -11.447800636291504

Token 418: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -15.250000953674316
    3. ' [' → logprob: -15.750000953674316
    4. '[c' → logprob: -16.25
    5. '
' → logprob: -16.375
    6. 'p' → logprob: -16.5
    7. '[
' → logprob: -17.0
    8. '	p' → logprob: -17.0
    9. '```' → logprob: -17.25
    10. '\[' → logprob: -17.25

Token 419: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.0076234228909015656
    2. 'pick' → logprob: -4.882623195648193
    3. 'ack' → logprob: -12.257623672485352
    4. '[' → logprob: -12.757623672485352
    5. '```' → logprob: -12.882623672485352
    6. '[p' → logprob: -13.382623672485352
    7. ' pick' → logprob: -14.007623672485352
    8. 'ck' → logprob: -14.257623672485352
    9. ']' → logprob: -14.382623672485352
    10. 'p' → logprob: -15.132623672485352

Token 420: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.990154047845863e-05
    2. ']=' → logprob: -10.000049591064453
    3. '=' → logprob: -12.500049591064453
    4. ' ]' → logprob: -14.250049591064453
    5. ')' → logprob: -16.750049591064453
    6. ' =' → logprob: -16.750049591064453
    7. '=True' → logprob: -17.250049591064453
    8. ']
' → logprob: -18.375049591064453
    9. 'True' → logprob: -19.625049591064453
    10. '[' → logprob: -20.375049591064453

Token 421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005237075500190258
    2. ' =' → logprob: -5.255237102508545
    3. '=True' → logprob: -12.630236625671387
    4. '=
' → logprob: -19.255237579345703
    5. '＝' → logprob: -19.505237579345703
    6. ']=' → logprob: -20.630237579345703
    7. ' ' → logprob: -20.755237579345703
    8. '[' → logprob: -20.755237579345703
    9. 'True' → logprob: -20.880237579345703
    10. ']' → logprob: -21.005237579345703

Token 422: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.935296834039036e-06
    2. ' True' → logprob: -12.75000286102295
    3. '(True' → logprob: -21.250003814697266
    4. '=True' → logprob: -24.250003814697266
    5. '   ' → logprob: -25.000003814697266
    6. 'true' → logprob: -25.500003814697266
    7. '1' → logprob: -25.750003814697266
    8. '.True' → logprob: -26.875003814697266
    9. 'TRUE' → logprob: -27.125003814697266
    10. 'False' → logprob: -27.125003814697266

Token 423: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022968940436840057
    2. '           ' → logprob: -4.897968769073486
    3. '   ' → logprob: -5.397968769073486
    4. ' taken' → logprob: -5.647968769073486
    5. '       ' → logprob: -6.272968769073486
    6. '
' → logprob: -6.397968769073486
    7. 'taken' → logprob: -6.522968769073486
    8. '<|end|>' → logprob: -6.522968769073486
    9. '    
' → logprob: -8.397969245910645
    10. '```' → logprob: -9.397969245910645

Token 424: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22098596394062042
    2. ' taken' → logprob: -2.3459858894348145
    3. 'taken' → logprob: -2.3459858894348145
    4. '   ' → logprob: -6.0959858894348145
    5. '    
' → logprob: -6.2209858894348145
    6. '
' → logprob: -6.9709858894348145
    7. '```' → logprob: -7.7209858894348145
    8. ' 
' → logprob: -8.345986366271973
    9. '_taken' → logprob: -8.345986366271973
    10. '  
' → logprob: -8.595986366271973

Token 425: ' candidates' (ID: 18116)
  Prédit: ' taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taken' → logprob: -0.693607747554779
    2. 'taken' → logprob: -0.693607747554779
    3. '   ' → logprob: -8.318607330322266
    4. ' candidates' → logprob: -9.068607330322266
    5. '           ' → logprob: -10.443607330322266
    6. '_taken' → logprob: -10.818607330322266
    7. 'picked' → logprob: -11.193607330322266
    8. '
' → logprob: -11.568607330322266
    9. '```' → logprob: -11.568607330322266
    10. '    
' → logprob: -12.318607330322266

Token 426: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0003815756645053625
    2. '.dis' → logprob: -8.000381469726562
    3. '.' → logprob: -10.000381469726562
    4. '.add' → logprob: -14.500381469726562
    5. 'remove' → logprob: -15.375381469726562
    6. '.Remove' → logprob: -16.875381469726562
    7. '.pop' → logprob: -19.625381469726562
    8. '	remove' → logprob: -19.875381469726562
    9. '.delete' → logprob: -20.000381469726562
    10. ' .' → logprob: -20.000381469726562

Token 427: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. 'pick' → logprob: -18.625001907348633
    4. ' (' → logprob: -19.125001907348633
    5. '(
' → logprob: -21.125001907348633
    6. ' pick' → logprob: -21.625001907348633
    7. '((' → logprob: -21.750001907348633
    8. 'p' → logprob: -21.875001907348633
    9. '(P' → logprob: -22.375001907348633
    10. '(x' → logprob: -23.500001907348633

Token 428: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.00020544764993246645
    2. 'pick' → logprob: -8.500205039978027
    3. '_pick' → logprob: -14.750205039978027
    4. 'ack' → logprob: -15.000205039978027
    5. '```' → logprob: -15.125205039978027
    6. ' pick' → logprob: -15.375205039978027
    7. '.pick' → logprob: -15.625205039978027
    8. 'ik' → logprob: -15.875205039978027
    9. '[' → logprob: -16.000205993652344
    10. 'ck' → logprob: -16.875205993652344

Token 429: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5699141025543213
    2. '           ' → logprob: -1.4449141025543213
    3. ')
' → logprob: -1.6949141025543213
    4. ')' → logprob: -4.569913864135742
    5. '   ' → logprob: -6.444913864135742
    6. '       ' → logprob: -6.694913864135742
    7. '            
' → logprob: -7.944913864135742
    8. '
' → logprob: -8.444913864135742
    9. '    
' → logprob: -8.569913864135742
    10. ',' → logprob: -8.569913864135742

Token 430: '       ' (ID: 309)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.31824493408203125
    2. '   ' → logprob: -1.5682449340820312
    3. ' taken' → logprob: -2.8182449340820312
    4. '           ' → logprob: -5.568244934082031
    5. '
' → logprob: -8.318244934082031
    6. '       ' → logprob: -8.693244934082031
    7. 't' → logprob: -9.568244934082031
    8. '	t' → logprob: -9.818244934082031
    9. '```' → logprob: -9.943244934082031
    10. '_taken' → logprob: -11.443244934082031

Token 431: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15191872417926788
    2. 'else' (adapté à ' else') → logprob: -2.151918649673462
    3. ' else' → logprob: -4.401918888092041
    4. 'j' → logprob: -5.276918888092041
    5. '   ' → logprob: -5.526918888092041
    6. '        
' → logprob: -7.026918888092041
    7. '	' → logprob: -7.276918888092041
    8. '
' → logprob: -7.651918888092041
    9. ' taken' → logprob: -7.901918888092041
    10. '    
' → logprob: -9.026918411254883

Token 432: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03732340410351753
    2. ':
' → logprob: -4.037323474884033
    3. '           ' → logprob: -4.287323474884033
    4. ':' → logprob: -5.662323474884033
    5. '   ' → logprob: -7.162323474884033
    6. '#' → logprob: -7.537323474884033
    7. '	' → logprob: -9.537322998046875
    8. '
' → logprob: -9.537322998046875
    9. '	   ' → logprob: -10.162322998046875
    10. '{
' → logprob: -10.287322998046875

Token 433: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03961075097322464
    2. '           ' → logprob: -3.5396108627319336
    3. 'pick' → logprob: -5.039610862731934
    4. '#' → logprob: -6.164610862731934
    5. ' pick' → logprob: -7.664610862731934
    6. '   ' → logprob: -7.664610862731934
    7. ' #' → logprob: -8.664610862731934
    8. '
' → logprob: -9.914610862731934
    9. 'if' → logprob: -11.164610862731934
    10. '```' → logprob: -11.414610862731934

Token 434: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7442308664321899
    2. 'pick' → logprob: -0.9942308664321899
    3. '           ' → logprob: -2.6192307472229004
    4. 'if' → logprob: -2.9942307472229004
    5. '       ' → logprob: -3.4942307472229004
    6. '   ' → logprob: -6.8692307472229
    7. 'max' → logprob: -8.619231224060059
    8. ' #' → logprob: -8.994231224060059
    9. ' pick' → logprob: -9.619231224060059
    10. ' if' → logprob: -10.119231224060059

Token 435: ' JO' (ID: 72685)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.041872866451740265
    2. '#' → logprob: -3.416872978210449
    3. ' pick' → logprob: -5.666872978210449
    4. 'max' → logprob: -6.416872978210449
    5. 'if' → logprob: -6.541872978210449
    6. '           ' → logprob: -7.166872978210449
    7. '   ' → logprob: -8.66687297821045
    8. 'best' → logprob: -8.79187297821045
    9. ' #' → logprob: -8.91687297821045
    10. '       ' → logprob: -9.54187297821045

Token 436: 'I' (ID: 40)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01712241768836975
    2. 'I' → logprob: -4.517122268676758
    3. 'pick' → logprob: -5.642122268676758
    4. '   ' → logprob: -6.392122268676758
    5. '_i' → logprob: -8.767122268676758
    6. '_pick' → logprob: -9.017122268676758
    7. '           ' → logprob: -9.142122268676758
    8. 'oi' → logprob: -9.267122268676758
    9. 'io' → logprob: -9.392122268676758
    10. 'ip' → logprob: -10.142122268676758

Token 437: ' chooses' (ID: 75184)
  Prédit: ' chooses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chooses' → logprob: -0.10077428817749023
    2. ' picks' → logprob: -2.6007742881774902
    3. ' selects' → logprob: -4.60077428817749
    4. 'p' → logprob: -6.72577428817749
    5. 'pick' → logprob: -6.72577428817749
    6. 'cho' → logprob: -6.72577428817749
    7. '_pick' → logprob: -7.22577428817749
    8. 'max' → logprob: -7.35077428817749
    9. '   ' → logprob: -7.35077428817749
    10. 'select' → logprob: -7.35077428817749

Token 438: ' optim' (ID: 9367)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4614437222480774
    2. ' pick' → logprob: -1.2114436626434326
    3. 'max' → logprob: -2.8364436626434326
    4. 'pick' → logprob: -4.336443901062012
    5. ' =' → logprob: -9.836443901062012
    6. '=max' → logprob: -10.461443901062012
    7. '           ' → logprob: -10.711443901062012
    8. '=' → logprob: -11.336443901062012
    9. '(max' → logprob: -12.336443901062012
    10. ' min' → logprob: -12.461443901062012

Token 439: 'ally' (ID: 2146)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.19206272065639496
    2. 'um' → logprob: -2.3170626163482666
    3. 'al' → logprob: -3.0670626163482666
    4. 'max' → logprob: -3.5670626163482666
    5. '(max' → logprob: -7.067062854766846
    6. 'a' → logprob: -8.692062377929688
    7. '   ' → logprob: -9.692062377929688
    8. 'als' → logprob: -10.192062377929688
    9. '[max' → logprob: -10.442062377929688
    10. '=max' → logprob: -10.442062377929688

Token 440: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5276380777359009
    2. ' pick' → logprob: -1.5276380777359009
    3. 'pick' → logprob: -1.6526380777359009
    4. '
' → logprob: -7.902637958526611
    5. '       ' → logprob: -8.02763843536377
    6. ' =' → logprob: -8.65263843536377
    7. ',' → logprob: -9.15263843536377
    8. '   ' → logprob: -9.27763843536377
    9. '_pick' → logprob: -9.40263843536377
    10. '.pick' → logprob: -10.27763843536377

Token 441: ' pick' (ID: 5230)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.12808725237846375
    2. ' pick' → logprob: -2.128087282180786
    3. '           ' → logprob: -7.003087043762207
    4. 'max' → logprob: -9.128087043762207
    5. '   ' → logprob: -10.253087043762207
    6. ' max' → logprob: -11.003087043762207
    7. 'if' → logprob: -11.003087043762207
    8. ' if' → logprob: -11.378087043762207
    9. 'best' → logprob: -11.378087043762207
    10. ' ' → logprob: -11.503087043762207

Token 442: ' candidate' (ID: 17098)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.43895643949508667
    2. 'max' → logprob: -1.4389564990997314
    3. ' =' → logprob: -2.3139564990997314
    4. ' the' → logprob: -4.938956260681152
    5. '=max' → logprob: -5.063956260681152
    6. '=' → logprob: -5.188956260681152
    7. 'the' → logprob: -9.063956260681152
    8. '(max' → logprob: -10.688956260681152
    9. ' pick' → logprob: -10.688956260681152
    10. 'pick' → logprob: -11.938956260681152

Token 443: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06854020804166794
    2. '=' → logprob: -2.818540096282959
    3. '=max' → logprob: -5.568540096282959
    4. 'max' → logprob: -6.193540096282959
    5. ' with' → logprob: -7.943540096282959
    6. 'with' → logprob: -8.693540573120117
    7. ',' → logprob: -9.568540573120117
    8. ' max' → logprob: -9.693540573120117
    9. 'pick' → logprob: -11.443540573120117
    10. '[max' → logprob: -12.318540573120117

Token 444: ' largest' (ID: 10574)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0006490522064268589
    2. ' max' → logprob: -8.000649452209473
    3. 'largest' → logprob: -8.125649452209473
    4. 'maximum' → logprob: -11.625649452209473
    5. 'highest' → logprob: -12.500649452209473
    6. 'the' → logprob: -13.625649452209473
    7. '[max' → logprob: -13.750649452209473
    8. '
' → logprob: -13.750649452209473
    9. ' largest' → logprob: -14.500649452209473
    10. 'lambda' → logprob: -15.000649452209473

Token 445: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5250967741012573
    2. 'A' → logprob: -0.9000967741012573
    3. ' ' → logprob: -6.650096893310547
    4. ' value' → logprob: -8.400096893310547
    5. ' piece' → logprob: -9.025096893310547
    6. 'value' → logprob: -9.025096893310547
    7. '(A' → logprob: -10.400096893310547
    8. ' (' → logprob: -10.400096893310547
    9. '(' → logprob: -10.900096893310547
    10. '_A' → logprob: -11.400096893310547

Token 446: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3944467306137085
    2. '[p' → logprob: -1.1444467306137085
    3. 'pick' → logprob: -5.394446849822998
    4. '[
' → logprob: -6.519446849822998
    5. '[max' → logprob: -7.644446849822998
    6. '[i' → logprob: -8.76944637298584
    7. ' [' → logprob: -9.14444637298584
    8. ' pick' → logprob: -9.26944637298584
    9. '(p' → logprob: -9.51944637298584
    10. '```' → logprob: -9.76944637298584

Token 447: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.17539319396018982
    2. '])
' → logprob: -2.1753931045532227
    3. ')' → logprob: -3.4253931045532227
    4. ']' → logprob: -4.550393104553223
    5. ')
' → logprob: -5.550393104553223
    6. ']
' → logprob: -9.550393104553223
    7. 'pick' → logprob: -9.925393104553223
    8. '   ' → logprob: -10.175393104553223
    9. '])
' → logprob: -10.300393104553223
    10. ',' → logprob: -11.050393104553223

Token 448: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028748035430908203
    2. ' pick' → logprob: -4.528748035430908
    3. 'pick' → logprob: -4.903748035430908
    4. '       ' → logprob: -5.653748035430908
    5. '
' → logprob: -6.028748035430908
    6. '<|end|>' → logprob: -6.153748035430908
    7. '   ' → logprob: -7.903748035430908
    8. '            
' → logprob: -8.40374755859375
    9. '[' → logprob: -8.90374755859375
    10. '  
' → logprob: -8.90374755859375

Token 449: ' if' (ID: 538)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.0046464535407722
    2. ' pick' → logprob: -5.504646301269531
    3. '           ' → logprob: -7.504646301269531
    4. 'max' → logprob: -11.629646301269531
    5. '   ' → logprob: -12.879646301269531
    6. '
' → logprob: -13.004646301269531
    7. '       ' → logprob: -13.754646301269531
    8. 'picked' → logprob: -14.254646301269531
    9. '            
' → logprob: -14.629646301269531
    10. 'candidate' → logprob: -14.879646301269531

Token 450: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06196802109479904
    2. ' not' → logprob: -2.8119680881500244
    3. 'len' → logprob: -16.186967849731445
    4. '	not' → logprob: -16.186967849731445
    5. 'no' → logprob: -16.936967849731445
    6. '(not' → logprob: -17.186967849731445
    7. '!' → logprob: -17.811967849731445
    8. '
' → logprob: -17.936967849731445
    9. 'c' → logprob: -18.186967849731445
    10. '   ' → logprob: -19.561967849731445

Token 451: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12692904472351074
    2. ' candidates' → logprob: -2.1269290447235107
    3. ' c' → logprob: -14.37692928314209
    4. '_candidates' → logprob: -15.75192928314209
    5. '	c' → logprob: -16.376928329467773
    6. ')c' → logprob: -16.376928329467773
    7. ' candidats' → logprob: -16.626928329467773
    8. ' candidatos' → logprob: -17.376928329467773
    9. 'candidate' → logprob: -17.751928329467773
    10. 'andidates' → logprob: -17.876928329467773

Token 452: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.055134449154138565
    2. ':' → logprob: -2.9301345348358154
    3. '):
' → logprob: -8.555134773254395
    4. '           ' → logprob: -10.930134773254395
    5. ':
' → logprob: -11.805134773254395
    6. ')' → logprob: -11.805134773254395
    7. '       ' → logprob: -12.180134773254395
    8. '{
' → logprob: -12.555134773254395
    9. '<|end|>' → logprob: -12.555134773254395
    10. '   ' → logprob: -13.055134773254395

Token 453: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010582595132291317
    2. '       ' → logprob: -5.010582447052002
    3. '   ' → logprob: -6.885582447052002
    4. '               ' → logprob: -7.010582447052002
    5. ' pick' → logprob: -7.510582447052002
    6. 'pick' → logprob: -7.510582447052002
    7. '
' → logprob: -8.13558292388916
    8. '	       ' → logprob: -8.88558292388916
    9. '		' → logprob: -9.76058292388916
    10. '[' → logprob: -9.76058292388916

Token 454: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.018601246178150177
    2. '               ' → logprob: -4.768601417541504
    3. ' break' → logprob: -5.018601417541504
    4. '           ' → logprob: -5.768601417541504
    5. '	break' → logprob: -8.768601417541504
    6. '
' → logprob: -11.268601417541504
    7. '```' → logprob: -11.518601417541504
    8. '       ' → logprob: -12.018601417541504
    9. '                   ' → logprob: -12.893601417541504
    10. '            
' → logprob: -13.143601417541504

Token 455: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06614119559526443
    2. 'pick' → logprob: -3.691141128540039
    3. ' pick' → logprob: -4.066141128540039
    4. '
' → logprob: -4.191141128540039
    5. '		' → logprob: -5.441141128540039
    6. '            
' → logprob: -7.816141128540039
    7. '	       ' → logprob: -7.941141128540039
    8. '   ' → logprob: -7.941141128540039
    9. '       ' → logprob: -8.066141128540039
    10. '			
' → logprob: -8.691141128540039

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3503533601760864
    2. ' pick' → logprob: -1.7253533601760864
    3. 'pick' → logprob: -2.225353240966797
    4. '       ' → logprob: -5.475353240966797
    5. '
' → logprob: -5.975353240966797
    6. '		' → logprob: -7.225353240966797
    7. '   ' → logprob: -7.350353240966797
    8. '\t' → logprob: -8.725353240966797
    9. '	       ' → logprob: -8.850353240966797
    10. '```' → logprob: -8.975353240966797

Token 457: ' pick' (ID: 5230)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pick' (adapté à ' pick') → logprob: -3.7697225252486533e-06
    2. ' pick' → logprob: -12.500003814697266
    3. '
' → logprob: -17.125003814697266
    4. 'max' → logprob: -18.125003814697266
    5. 'pickup' → logprob: -18.125003814697266
    6. '           ' → logprob: -18.375003814697266
    7. 'picked' → logprob: -19.000003814697266
    8. '```' → logprob: -19.125003814697266
    9. '   ' → logprob: -19.500003814697266
    10. 'candidate' → logprob: -19.750003814697266

Token 458: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693031132221222
    2. '=' → logprob: -2.1269302368164062
    3. '=max' → logprob: -13.001930236816406
    4. ' ' → logprob: -17.876930236816406
    5. ',' → logprob: -18.251930236816406
    6. 'max' → logprob: -18.626930236816406
    7. '＝' → logprob: -19.126930236816406
    8. '=
' → logprob: -19.126930236816406
    9. '=min' → logprob: -19.251930236816406
    10. ' =
' → logprob: -19.501930236816406

Token 459: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.615255839889869e-05
    2. ' max' → logprob: -9.250096321105957
    3. 'min' → logprob: -22.37509536743164
    4. '(max' → logprob: -23.37509536743164
    5. '[max' → logprob: -25.00009536743164
    6. ' ' → logprob: -25.62509536743164
    7. '	max' → logprob: -26.25009536743164
    8. '=max' → logprob: -26.62509536743164
    9. 'Max' → logprob: -27.50009536743164
    10. ',max' → logprob: -28.00009536743164

Token 460: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.008661366999149323
    2. 'c' → logprob: -4.758661270141602
    3. '(' → logprob: -10.508661270141602
    4. ' candidates' → logprob: -11.133661270141602
    5. '_candidates' → logprob: -13.633661270141602
    6. ' (' → logprob: -13.758661270141602
    7. '(candidate' → logprob: -14.008661270141602
    8. ')c' → logprob: -14.133661270141602
    9. '<|end|>' → logprob: -14.383661270141602
    10. '	c' → logprob: -15.883661270141602

Token 461: 'andidates' (ID: 38168)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07922739535570145
    2. 'andidates' → logprob: -2.5792274475097656
    3. '(c' → logprob: -8.454227447509766
    4. ' candidates' → logprob: -9.329227447509766
    5. '[c' → logprob: -11.079227447509766
    6. '_candidates' → logprob: -11.454227447509766
    7. 'andid' → logprob: -12.704227447509766
    8. 'and' → logprob: -12.954227447509766
    9. ')c' → logprob: -13.579227447509766
    10. 'cand' → logprob: -13.829227447509766

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.995397365652025e-05
    2. ',key' → logprob: -9.375089645385742
    3. ' ,' → logprob: -12.375089645385742
    4. ')' → logprob: -14.125089645385742
    5. 'key' → logprob: -16.750089645385742
    6. ' key' → logprob: -16.875089645385742
    7. '<|end|>' → logprob: -17.750089645385742
    8. '   ' → logprob: -19.000089645385742
    9. '‌,' → logprob: -19.125089645385742
    10. '```' → logprob: -19.375089645385742

Token 463: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.006715370807796717
    2. ' key' → logprob: -5.006715297698975
    3. 'lambda' → logprob: -21.131715774536133
    4. '(key' → logprob: -21.131715774536133
    5. ' ' → logprob: -21.881715774536133
    6. '	key' → logprob: -22.131715774536133
    7. ',key' → logprob: -22.256715774536133
    8. 'Key' → logprob: -23.756715774536133
    9. '[key' → logprob: -24.131715774536133
    10. '   ' → logprob: -24.506715774536133

Token 464: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0011162848677486181
    2. '=' → logprob: -7.5011162757873535
    3. 'lambda' → logprob: -7.5011162757873535
    4. ' lambda' → logprob: -12.376116752624512
    5. ' =' → logprob: -12.501116752624512
    6. '(lambda' → logprob: -12.876116752624512
    7. '=
' → logprob: -16.876115798950195
    8. 'a' → logprob: -17.251115798950195
    9. '_lambda' → logprob: -17.376115798950195
    10. 'ambda' → logprob: -17.876115798950195

Token 465: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.053116071969270706
    2. ' x' → logprob: -3.5531160831451416
    3. 'lambda' → logprob: -3.8031160831451416
    4. ' lambda' → logprob: -7.3031158447265625
    5. 'A' → logprob: -9.053115844726562
    6. ' A' → logprob: -13.553115844726562
    7. '=lambda' → logprob: -13.928115844726562
    8. '(lambda' → logprob: -15.428115844726562
    9. ' ' → logprob: -15.553115844726562
    10. '(x' → logprob: -15.928115844726562

Token 466: ':A' (ID: 112571)
  Prédit: ':A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':A' → logprob: -0.043802082538604736
    2. ':' → logprob: -3.16880202293396
    3. 'A' → logprob: -7.918802261352539
    4. ' :' → logprob: -8.043802261352539
    5. 'lambda' → logprob: -9.668802261352539
    6. ':x' → logprob: -11.168802261352539
    7. '[A' → logprob: -11.293802261352539
    8. ' A' → logprob: -12.418802261352539
    9. ':[' → logprob: -12.418802261352539
    10. ':
' → logprob: -12.543802261352539

Token 467: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.5451681974809617e-05
    2. 'x' → logprob: -11.375015258789062
    3. '[' → logprob: -13.500015258789062
    4. '[p' → logprob: -14.000015258789062
    5. '[
' → logprob: -14.250015258789062
    6. '```' → logprob: -14.750015258789062
    7. '(x' → logprob: -15.125015258789062
    8. '
' → logprob: -15.750015258789062
    9. '{x' → logprob: -15.750015258789062
    10. ' [' → logprob: -16.500015258789062

Token 468: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07055038958787918
    2. '])
' → logprob: -2.6955504417419434
    3. '[x' → logprob: -8.070549964904785
    4. 'pick' → logprob: -9.195549964904785
    5. ']' → logprob: -9.320549964904785
    6. ')' → logprob: -10.445549964904785
    7. 'x' → logprob: -10.570549964904785
    8. '[i' → logprob: -11.195549964904785
    9. ')
' → logprob: -11.695549964904785
    10. '[p' → logprob: -12.070549964904785

Token 469: '           ' (ID: 352)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.4450547397136688
    2. '           ' → logprob: -1.5700547695159912
    3. '
' → logprob: -2.445054769515991
    4. ' taken' → logprob: -2.945054769515991
    5. '   ' → logprob: -4.570054531097412
    6. '
' → logprob: -8.19505500793457
    7. '            
' → logprob: -8.32005500793457
    8. '       ' → logprob: -8.57005500793457
    9. '    
' → logprob: -8.69505500793457
    10. '_taken' → logprob: -9.07005500793457

Token 470: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' (adapté à ' taken') → logprob: -0.026392726227641106
    2. ' taken' → logprob: -3.651392698287964
    3. '           ' → logprob: -10.526392936706543
    4. 'j' → logprob: -10.651392936706543
    5. '   ' → logprob: -11.151392936706543
    6. '
' → logprob: -12.276392936706543
    7. '_taken' → logprob: -12.276392936706543
    8. 'picked' → logprob: -12.651392936706543
    9. 'chosen' → logprob: -12.776392936706543
    10. 't' → logprob: -12.776392936706543

Token 471: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -12.000008583068848
    3. ' [' → logprob: -13.250008583068848
    4. '[t' → logprob: -14.750008583068848
    5. '```' → logprob: -15.500008583068848
    6. '[c' → logprob: -17.375009536743164
    7. 'p' → logprob: -17.500009536743164
    8. 'pick' → logprob: -17.875009536743164
    9. '
' → logprob: -17.875009536743164
    10. '[P' → logprob: -18.125009536743164

Token 472: 'ick' (ID: 1003)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.01821034960448742
    2. 'ick' → logprob: -4.018210411071777
    3. ' pick' → logprob: -10.268210411071777
    4. 'ck' → logprob: -11.893210411071777
    5. '_pick' → logprob: -13.018210411071777
    6. 'picked' → logprob: -13.143210411071777
    7. '[p' → logprob: -13.268210411071777
    8. '.pick' → logprob: -13.518210411071777
    9. 'take' → logprob: -13.643210411071777
    10. 'ack' → logprob: -13.643210411071777

Token 473: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014164921827614307
    2. '=' → logprob: -4.514164924621582
    3. ' =' → logprob: -6.264164924621582
    4. ']=' → logprob: -7.014164924621582
    5. ')' → logprob: -8.389164924621582
    6. ' ]' → logprob: -9.764164924621582
    7. '[p' → logprob: -11.389164924621582
    8. '=True' → logprob: -12.389164924621582
    9. '[' → logprob: -12.514164924621582
    10. '   ' → logprob: -13.139164924621582

Token 474: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02325817570090294
    2. ' =' → logprob: -3.7732582092285156
    3. '=True' → logprob: -11.398258209228516
    4. ']' → logprob: -13.773258209228516
    5. ']=' → logprob: -15.523258209228516
    6. '[' → logprob: -15.648258209228516
    7. '=False' → logprob: -17.398258209228516
    8. '   ' → logprob: -17.398258209228516
    9. ')' → logprob: -17.523258209228516
    10. 'True' → logprob: -18.023258209228516

Token 475: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033546582562848926
    2. ' True' → logprob: -8.000335693359375
    3. '(True' → logprob: -19.500335693359375
    4. '=True' → logprob: -20.125335693359375
    5. 'False' → logprob: -21.125335693359375
    6. 'true' → logprob: -22.000335693359375
    7. '.True' → logprob: -22.750335693359375
    8. '_true' → logprob: -24.125335693359375
    9. 'TRUE' → logprob: -24.250335693359375
    10. ' ' → logprob: -24.625335693359375

Token 476: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004769972525537014
    2. '<|end|>' → logprob: -5.754769802093506
    3. ' candidates' → logprob: -7.504769802093506
    4. '            
' → logprob: -7.754769802093506
    5. ',' → logprob: -9.004770278930664
    6. '       ' → logprob: -9.254770278930664
    7. '
' → logprob: -9.254770278930664
    8. '   ' → logprob: -9.754770278930664
    9. '        
' → logprob: -10.629770278930664
    10. ' 
' → logprob: -10.879770278930664

Token 477: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11705972254276276
    2. ' candidates' → logprob: -2.8670597076416016
    3. 'c' → logprob: -3.3670597076416016
    4. '   ' → logprob: -4.117059707641602
    5. ' taken' → logprob: -6.867059707641602
    6. '```' → logprob: -7.867059707641602
    7. '       ' → logprob: -8.492059707641602
    8. 'taken' → logprob: -8.492059707641602
    9. ' ' → logprob: -8.992059707641602
    10. 'picked' → logprob: -9.117059707641602

Token 478: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015771172475069761
    2. 'taken' → logprob: -6.501576900482178
    3. 'j' → logprob: -10.626577377319336
    4. '   ' → logprob: -11.001577377319336
    5. '           ' → logprob: -11.001577377319336
    6. ' candidates' → logprob: -11.501577377319336
    7. ' taken' → logprob: -12.626577377319336
    8. 'cand' → logprob: -13.126577377319336
    9. '
' → logprob: -15.126577377319336
    10. 'max' → logprob: -15.251577377319336

Token 479: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.00017278951418120414
    2. '.' → logprob: -8.75017261505127
    3. '.add' → logprob: -11.75017261505127
    4. 'remove' → logprob: -12.37517261505127
    5. '.dis' → logprob: -13.75017261505127
    6. ' .' → logprob: -14.12517261505127
    7. '.pop' → logprob: -16.125173568725586
    8. '   ' → logprob: -16.625173568725586
    9. '	remove' → logprob: -17.250173568725586
    10. '.Remove' → logprob: -17.625173568725586

Token 480: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: 0.0
    2. '(' → logprob: -17.375
    3. ' (' → logprob: -17.625
    4. 'pick' → logprob: -18.875
    5. '(P' → logprob: -20.625
    6. '(
' → logprob: -21.125
    7. '((' → logprob: -21.75
    8. 'p' → logprob: -21.875
    9. '(pred' → logprob: -22.375
    10. ' pick' → logprob: -23.375

Token 481: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.3490760326385498
    2. 'pick' → logprob: -1.2240760326385498
    3. '(p' → logprob: -7.849076271057129
    4. ' pick' → logprob: -9.224076271057129
    5. 'ck' → logprob: -10.224076271057129
    6. ')' → logprob: -10.599076271057129
    7. '
' → logprob: -11.099076271057129
    8. '.pick' → logprob: -11.599076271057129
    9. '_pick' → logprob: -11.599076271057129
    10. 'ik' → logprob: -12.099076271057129

Token 482: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7108478546142578
    2. '
' → logprob: -1.0858478546142578
    3. ')' → logprob: -1.9608478546142578
    4. '   ' → logprob: -4.085847854614258
    5. '    
' → logprob: -4.835847854614258
    6. '       ' → logprob: -6.835847854614258
    7. 'j' → logprob: -6.960847854614258
    8. '<|end|>' → logprob: -7.085847854614258
    9. '  
' → logprob: -7.460847854614258
    10. ',' → logprob: -8.085847854614258

Token 483: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7898833751678467
    2. '    
' → logprob: -1.1648833751678467
    3. '
' → logprob: -1.5398833751678467
    4. '```' → logprob: -5.039883613586426
    5. '  
' → logprob: -5.664883613586426
    6. 'j' → logprob: -5.914883613586426
    7. '   
' → logprob: -6.414883613586426
    8. ' 
' → logprob: -6.539883613586426
    9. '<|end|>' → logprob: -6.664883613586426
    10. '[j' → logprob: -7.289883613586426

Token 484: ' joi' (ID: 193529)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08069346100091934
    2. 'j' → logprob: -2.580693483352661
    3. '           ' → logprob: -7.330693244934082
    4. '    
' → logprob: -8.080693244934082
    5. ' joi' → logprob: -8.205693244934082
    6. '	j' → logprob: -8.330693244934082
    7. '
' → logprob: -8.705693244934082
    8. ' j' → logprob: -9.955693244934082
    9. '```' → logprob: -10.455693244934082
    10. '   ' → logprob: -11.205693244934082

Token 485: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.625000953674316
    3. 'sum' → logprob: -16.375
    4. ' _' → logprob: -16.625
    5. '_s' → logprob: -17.125
    6. '\' → logprob: -17.375
    7. '_max' → logprob: -17.625
    8. '_sub' → logprob: -17.75
    9. '_j' → logprob: -17.875
    10. '_set' → logprob: -18.0

Token 486: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2014167606830597
    2. ' +=' → logprob: -1.7014167308807373
    3. '+' → logprob: -13.201416969299316
    4. ']+=' → logprob: -13.951416969299316
    5. '+=(' → logprob: -15.326416969299316
    6. '+='' → logprob: -16.076416015625
    7. ' ' → logprob: -16.076416015625
    8. '+="' → logprob: -16.201416015625
    9. '=' → logprob: -16.826416015625
    10. '	' → logprob: -17.201416015625

Token 487: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015023599844425917
    2. ' A' → logprob: -6.501502513885498
    3. '	A' → logprob: -19.501502990722656
    4. ' ' → logprob: -19.501502990722656
    5. '(A' → logprob: -20.751502990722656
    6. ' ' → logprob: -21.001502990722656
    7. '   ' → logprob: -21.126502990722656
    8. '
' → logprob: -21.251502990722656
    9. 'Ａ' → logprob: -21.251502990722656
    10. 'a' → logprob: -21.626502990722656

Token 488: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0001427538663847372
    2. 'pick' → logprob: -9.250143051147461
    3. '[' → logprob: -10.000143051147461
    4. 'p' → logprob: -13.875143051147461
    5. ' [' → logprob: -16.12514305114746
    6. '(p' → logprob: -16.75014305114746
    7. ' pick' → logprob: -17.37514305114746
    8. '	p' → logprob: -18.25014305114746
    9. '[
' → logprob: -19.00014305114746
    10. 'pickup' → logprob: -20.00014305114746

Token 489: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.07087027281522751
    2. 'pick' → logprob: -2.6958701610565186
    3. '[p' → logprob: -7.070870399475098
    4. '[' → logprob: -10.320870399475098
    5. 'ck' → logprob: -11.070870399475098
    6. 'ack' → logprob: -11.445870399475098
    7. '```' → logprob: -11.945870399475098
    8. ' pick' → logprob: -12.070870399475098
    9. '[c' → logprob: -13.320870399475098
    10. 'p' → logprob: -13.445870399475098

Token 490: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028108209371566772
    2. ')
' → logprob: -6.502810955047607
    3. '<|end|>' → logprob: -7.502810955047607
    4. ']' → logprob: -8.12781047821045
    5. '       ' → logprob: -8.37781047821045
    6. '
' → logprob: -9.37781047821045
    7. ' )' → logprob: -10.37781047821045
    8. '}' → logprob: -10.62781047821045
    9. '）' → logprob: -10.87781047821045
    10. '[' → logprob: -11.25281047821045

Token 491: '       ' (ID: 309)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -1.0418967008590698
    2. '   ' → logprob: -1.7918967008590698
    3. ' taken' → logprob: -1.7918967008590698
    4. '       ' → logprob: -2.0418968200683594
    5. '```' → logprob: -2.5418968200683594
    6. '           ' → logprob: -2.5418968200683594
    7. '    
' → logprob: -4.791896820068359
    8. '
' → logprob: -5.166896820068359
    9. '        
' → logprob: -5.541896820068359
    10. '``' → logprob: -5.541896820068359

Token 492: ' taken' (ID: 6697)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26964813470840454
    2. 'taken' (adapté à ' taken') → logprob: -1.5196480751037598
    3. ' taken' → logprob: -4.76964807510376
    4. '   ' → logprob: -5.14464807510376
    5. '           ' → logprob: -5.89464807510376
    6. '        
' → logprob: -8.394648551940918
    7. '```' → logprob: -9.019648551940918
    8. '
' → logprob: -9.894648551940918
    9. '    
' → logprob: -10.519648551940918
    10. 't' → logprob: -11.269648551940918

Token 493: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.512236498361744e-07
    2. 'count' → logprob: -14.750000953674316
    3. 'Count' → logprob: -17.625
    4. '[' → logprob: -18.375
    5. '_code' → logprob: -18.5
    6. '_COUNT' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. '_tokens' → logprob: -19.0
    9. '	count' → logprob: -19.0
    10. '_token' → logprob: -19.0

Token 494: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1269473135471344
    2. ' +=' → logprob: -2.1269474029541016
    3. '+' → logprob: -11.126947402954102
    4. '=' → logprob: -13.001947402954102
    5. ']+=' → logprob: -13.751947402954102
    6. '   ' → logprob: -15.126947402954102
    7. '```' → logprob: -15.126947402954102
    8. '+="' → logprob: -15.501947402954102
    9. '+='' → logprob: -16.1269474029541
    10. '<|end|>' → logprob: -16.3769474029541

Token 495: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.875036239624023
    4. '2' → logprob: -21.125036239624023
    5. '```' → logprob: -21.375036239624023
    6. '  ' → logprob: -21.750036239624023
    7. '
' → logprob: -22.250036239624023
    8. '１' → logprob: -22.375036239624023
    9. '(' → logprob: -23.125036239624023
    10. '+' → logprob: -23.375036239624023

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '2' → logprob: -21.125
    4. '   ' → logprob: -22.625
    5. '```' → logprob: -22.75
    6. '１' → logprob: -23.0
    7. '۱' → logprob: -23.5
    8. '
' → logprob: -23.75
    9. '0' → logprob: -24.0
    10. '<|end|>' → logprob: -24.5

Token 497: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09774991124868393
    2. '        
' → logprob: -2.722749948501587
    3. '```' → logprob: -4.972749710083008
    4. 'left' → logprob: -5.347749710083008
    5. '
' → logprob: -5.472749710083008
    6. 'for' → logprob: -6.097749710083008
    7. '  
' → logprob: -6.347749710083008
    8. '    
' → logprob: -6.472749710083008
    9. '   ' → logprob: -6.597749710083008
    10. '<|end|>' → logprob: -6.847749710083008

Token 498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005811840295791626
    2. 'for' → logprob: -5.63081169128418
    3. '   ' → logprob: -6.63081169128418
    4. '```' → logprob: -7.63081169128418
    5. 'left' → logprob: -8.75581169128418
    6. '        
' → logprob: -9.00581169128418
    7. ' for' → logprob: -9.50581169128418
    8. '#' → logprob: -10.75581169128418
    9. '           ' → logprob: -11.75581169128418
    10. ' left' → logprob: -12.13081169128418

Token 499: ' #' (ID: 1069)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.5174853801727295
    2. 'for' → logprob: -1.0174853801727295
    3. '       ' → logprob: -3.7674853801727295
    4. '#' (adapté à ' #') → logprob: -4.142485618591309
    5. 'left' → logprob: -6.392485618591309
    6. '   ' → logprob: -6.767485618591309
    7. '
' → logprob: -8.392485618591309
    8. ' turn' → logprob: -9.017485618591309
    9. '        
' → logprob: -9.017485618591309
    10. ' for' → logprob: -9.892485618591309

Token 500: ' update' (ID: 4027)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034716974943876266
    2. '#' → logprob: -3.409717082977295
    3. 'neighbors' → logprob: -7.284717082977295
    4. 'left' → logprob: -8.659716606140137
    5. '       ' → logprob: -9.034716606140137
    6. 'new' → logprob: -9.659716606140137
    7. '   ' → logprob: -11.659716606140137
    8. '
' → logprob: -12.159716606140137
    9. ' for' → logprob: -12.409716606140137
    10. '        
' → logprob: -13.659716606140137

Token 501: ' candidates' (ID: 18116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007963612675666809
    2. 'neighbors' → logprob: -5.13296365737915
    3. '       ' → logprob: -7.25796365737915
    4. '   ' → logprob: -7.38296365737915
    5. ' for' → logprob: -8.007963180541992
    6. '#' → logprob: -8.632963180541992
    7. 'left' → logprob: -9.007963180541992
    8. ' neighbors' → logprob: -9.757963180541992
    9. '	for' → logprob: -12.382963180541992
    10. 'neighbor' → logprob: -12.632963180541992

Token 502: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0062431450933218
    2. '        
' → logprob: -5.6312432289123535
    3. 'for' → logprob: -6.6312432289123535
    4. ' for' → logprob: -7.0062432289123535
    5. '
' → logprob: -8.256242752075195
    6. '   ' → logprob: -9.381242752075195
    7. '  
' → logprob: -11.006242752075195
    8. '    
' → logprob: -11.381242752075195
    9. '<|end|>' → logprob: -11.756242752075195
    10. ',' → logprob: -12.131242752075195

Token 503: ' new' (ID: 620)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0030314286705106497
    2. ' for' → logprob: -6.503031253814697
    3. '       ' → logprob: -6.753031253814697
    4. 'left' → logprob: -8.253031730651855
    5. '   ' → logprob: -10.003031730651855
    6. '```' → logprob: -10.753031730651855
    7. '	for' → logprob: -11.753031730651855
    8. 'new' → logprob: -11.878031730651855
    9. 'neighbors' → logprob: -12.128031730651855
    10. '#' → logprob: -12.253031730651855

Token 504: ' candidates' (ID: 18116)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.250482439994812
    2. 'for' → logprob: -2.3754825592041016
    3. 'c' → logprob: -3.1254825592041016
    4. '_neighbors' → logprob: -3.2504825592041016
    5. 'pieces' → logprob: -3.6254825592041016
    6. 'indices' → logprob: -4.875482559204102
    7. ' neighbors' → logprob: -5.500482559204102
    8. 'left' → logprob: -6.250482559204102
    9. 'taken' → logprob: -6.625482559204102
    10. '```' → logprob: -7.375482559204102

Token 505: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2831772267818451
    2. ' =' → logprob: -1.4081772565841675
    3. 'for' → logprob: -7.283177375793457
    4. '   ' → logprob: -7.283177375793457
    5. '.clear' → logprob: -8.033177375793457
    6. '=set' → logprob: -9.283177375793457
    7. '=
' → logprob: -9.783177375793457
    8. ' for' → logprob: -9.783177375793457
    9. '       ' → logprob: -10.158177375793457
    10. '=[]
' → logprob: -10.783177375793457

Token 506: ' pieces' (ID: 12762)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.9495120644569397
    2. '{i' → logprob: -1.574512004852295
    3. '[]
' → logprob: -2.074512004852295
    4. '{' → logprob: -2.074512004852295
    5. '[i' → logprob: -2.324512004852295
    6. 'for' → logprob: -3.574512004852295
    7. '       ' → logprob: -4.574512004852295
    8. ' set' → logprob: -5.699512004852295
    9. '   ' → logprob: -5.699512004852295
    10. 'i' → logprob: -6.324512004852295

Token 507: ' not' (ID: 625)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23471947014331818
    2. ' that' → logprob: -2.7347195148468018
    3. ' adjacent' → logprob: -2.7347195148468018
    4. 'for' → logprob: -3.1097195148468018
    5. 'that' → logprob: -4.109719276428223
    6. ' for' → logprob: -4.609719276428223
    7. 'adj' → logprob: -5.234719276428223
    8. '```' → logprob: -7.359719276428223
    9. ' whose' → logprob: -7.609719276428223
    10. 'whose' → logprob: -8.609719276428223

Token 508: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.0003457136917859316
    2. ' taken' → logprob: -8.125346183776855
    3. 'in' → logprob: -10.125346183776855
    4. '   ' → logprob: -12.375346183776855
    5. '_taken' → logprob: -13.750346183776855
    6. '```' → logprob: -14.000346183776855
    7. 'False' → logprob: -14.250346183776855
    8. 't' → logprob: -14.250346183776855
    9. '
' → logprob: -14.625346183776855
    10. 'already' → logprob: -15.000346183776855

Token 509: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7183029055595398
    2. '       ' → logprob: -1.2183029651641846
    3. ' for' → logprob: -1.5933029651641846
    4. '   ' → logprob: -4.7183027267456055
    5. ',' → logprob: -5.8433027267456055
    6. '```' → logprob: -7.4683027267456055
    7. ' that' → logprob: -7.7183027267456055
    8. '
' → logprob: -8.468302726745605
    9. ' ' → logprob: -9.343302726745605
    10. 'that' → logprob: -9.468302726745605

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003976054955273867
    2. 'for' → logprob: -6.253975868225098
    3. ' for' → logprob: -6.878975868225098
    4. '   ' → logprob: -8.003975868225098
    5. '        
' → logprob: -8.003975868225098
    6. ',' → logprob: -9.003975868225098
    7. '
' → logprob: -9.878975868225098
    8. '```' → logprob: -10.503975868225098
    9. ' with' → logprob: -10.628975868225098
    10. '        ' → logprob: -10.753975868225098

Token 511: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19058632850646973
    2. ' for' → logprob: -1.8155863285064697
    3. '   ' → logprob: -5.190586090087891
    4. '       ' → logprob: -5.815586090087891
    5. '
' → logprob: -6.440586090087891
    6. '        
' → logprob: -8.19058609008789
    7. '    
' → logprob: -9.19058609008789
    8. ' that' → logprob: -10.31558609008789
    9. 'not' → logprob: -10.44058609008789
    10. '  
' → logprob: -10.44058609008789

Token 512: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02747945487499237
    2. ' for' → logprob: -4.027479648590088
    3. '   ' → logprob: -5.277479648590088
    4. '       ' → logprob: -5.527479648590088
    5. '	for' → logprob: -9.15247917175293
    6. '```' → logprob: -9.52747917175293
    7. '
' → logprob: -12.02747917175293
    8. '           ' → logprob: -12.02747917175293
    9. ' ' → logprob: -12.77747917175293
    10. '    
' → logprob: -13.15247917175293

Token 513: ' have' (ID: 679)
  Prédit: '(any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(any' → logprob: -1.2210419178009033
    2. 'any' → logprob: -1.3460419178009033
    3. 'for' → logprob: -2.5960419178009033
    4. '((' → logprob: -2.7210419178009033
    5. '(' → logprob: -2.8460419178009033
    6. 'have' → logprob: -3.0960419178009033
    7. ' (' → logprob: -3.5960419178009033
    8. '(at' → logprob: -3.8460419178009033
    9. '(adj' → logprob: -3.8460419178009033
    10. 'having' → logprob: -3.9710419178009033

Token 514: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.14931108057498932
    2. ' at' → logprob: -2.149311065673828
    3. 'taken' → logprob: -4.649311065673828
    4. '(at' → logprob: -5.149311065673828
    5. ' taken' → logprob: -6.524311065673828
    6. '(t' → logprob: -6.524311065673828
    7. ' (' → logprob: -6.774311065673828
    8. 'any' → logprob: -7.274311065673828
    9. 'a' → logprob: -7.774311065673828
    10. 'either' → logprob: -8.024311065673828

Token 515: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.000680265249684453
    2. ' least' → logprob: -7.500680446624756
    3. 'east' → logprob: -10.250679969787598
    4. 'Least' → logprob: -10.625679969787598
    5. '```' → logprob: -11.375679969787598
    6. '_le' → logprob: -11.375679969787598
    7. 'taken' → logprob: -11.625679969787598
    8. 'le' → logprob: -11.750679969787598
    9. 'lest' → logprob: -12.125679969787598
    10. 'lease' → logprob: -12.250679969787598

Token 516: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.011092737317085266
    2. ' one' → logprob: -4.511092662811279
    3. 'taken' → logprob: -10.261093139648438
    4. '   ' → logprob: -12.386093139648438
    5. '_one' → logprob: -13.011093139648438
    6. '```' → logprob: -13.886093139648438
    7. '       ' → logprob: -14.511093139648438
    8. ' taken' → logprob: -14.886093139648438
    9. '(one' → logprob: -15.011093139648438
    10. 'One' → logprob: -15.261093139648438

Token 517: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.14570927619934082
    2. ' neighbor' → logprob: -2.020709276199341
    3. '       ' → logprob: -6.895709037780762
    4. '```' → logprob: -7.395709037780762
    5. '   ' → logprob: -8.020709037780762
    6. '           ' → logprob: -8.520709037780762
    7. 'taken' → logprob: -8.520709037780762
    8. ' (' → logprob: -9.020709037780762
    9. ' taken' → logprob: -9.145709037780762
    10. 'left' → logprob: -9.395709037780762

Token 518: ' taken' (ID: 6697)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8890693783760071
    2. '       ' → logprob: -1.1390693187713623
    3. 'for' → logprob: -2.2640693187713623
    4. '   ' → logprob: -2.3890693187713623
    5. ' =' → logprob: -3.1390693187713623
    6. '=' → logprob: -4.389069557189941
    7. '    
' → logprob: -5.514069557189941
    8. '        
' → logprob: -5.764069557189941
    9. '           ' → logprob: -5.889069557189941
    10. '
' → logprob: -6.639069557189941

Token 519: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04278506711125374
    2. '
' → logprob: -3.292785167694092
    3. '        
' → logprob: -5.667785167694092
    4. 'for' → logprob: -7.792785167694092
    5. ' for' → logprob: -8.042784690856934
    6. '   ' → logprob: -8.292784690856934
    7. '    
' → logprob: -9.167784690856934
    8. '  
' → logprob: -9.917784690856934
    9. '```' → logprob: -10.042784690856934
    10. '
' → logprob: -10.292784690856934

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10604450106620789
    2. '        
' → logprob: -2.4810445308685303
    3. '
' → logprob: -4.731044292449951
    4. '  
' → logprob: -5.606044292449951
    5. '    
' → logprob: -6.231044292449951
    6. '   ' → logprob: -7.106044292449951
    7. 'for' → logprob: -7.231044292449951
    8. ' for' → logprob: -8.10604476928711
    9. '       
' → logprob: -8.48104476928711
    10. '```' → logprob: -8.98104476928711

Token 521: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9760235548019409
    2. '
' → logprob: -1.101023554801941
    3. 'c' → logprob: -2.2260236740112305
    4. '        
' → logprob: -2.4760236740112305
    5. '   ' → logprob: -2.9760236740112305
    6. '    
' → logprob: -3.7260236740112305
    7. ' candidates' → logprob: -3.9760236740112305
    8. '```' → logprob: -6.7260236740112305
    9. '  
' → logprob: -7.2260236740112305
    10. ' 
' → logprob: -7.4760236740112305

Token 522: ' i' (ID: 575)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.03778209909796715
    2. 'nei' → logprob: -4.412782192230225
    3. 'nbr' → logprob: -4.787782192230225
    4. ' neighbor' → logprob: -5.162782192230225
    5. 'd' → logprob: -5.787782192230225
    6. 'n' → logprob: -6.037782192230225
    7. 'delta' → logprob: -6.412782192230225
    8. 'i' → logprob: -7.037782192230225
    9. 'dir' → logprob: -7.412782192230225
    10. 'j' → logprob: -7.787782192230225

Token 523: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04861892759799957
    2. 'in' → logprob: -3.048619031906128
    3. '	in' → logprob: -11.048619270324707
    4. ' ' → logprob: -12.173619270324707
    5. '   ' → logprob: -12.923619270324707
    6. '    ' → logprob: -13.548619270324707
    7. '	' → logprob: -13.673619270324707
    8. '_in' → logprob: -14.048619270324707
    9. ',' → logprob: -14.173619270324707
    10. ' i' → logprob: -14.548619270324707

Token 524: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13325124979019165
    2. 'c' → logprob: -2.758251190185547
    3. ' range' → logprob: -3.883251190185547
    4. '[c' → logprob: -4.133251190185547
    5. '[p' → logprob: -4.758251190185547
    6. '(c' → logprob: -5.883251190185547
    7. '(range' → logprob: -5.883251190185547
    8. '[' → logprob: -6.133251190185547
    9. '[(' → logprob: -6.258251190185547
    10. 'taken' → logprob: -6.633251190185547

Token 525: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4352722764015198
    2. '(N' → logprob: -1.060272216796875
    3. '(p' → logprob: -5.560272216796875
    4. '(-' → logprob: -7.060272216796875
    5. '(' → logprob: -7.185272216796875
    6. 'pick' → logprob: -7.935272216796875
    7. '(max' → logprob: -8.685272216796875
    8. '((' → logprob: -9.560272216796875
    9. '(len' → logprob: -9.560272216796875
    10. ' N' → logprob: -9.935272216796875

Token 526: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.039606861770153046
    2. '):' → logprob: -3.414606809616089
    3. '   ' → logprob: -5.914607048034668
    4. '       ' → logprob: -6.289607048034668
    5. '-' → logprob: -7.039607048034668
    6. '           ' → logprob: -9.289607048034668
    7. '):
' → logprob: -9.289607048034668
    8. ':
' → logprob: -10.039607048034668
    9. ' -' → logprob: -10.039607048034668
    10. '[' → logprob: -10.164607048034668

Token 527: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7024976015090942
    2. '           ' → logprob: -0.9524976015090942
    3. '	       ' → logprob: -2.3274974822998047
    4. '	   ' → logprob: -4.202497482299805
    5. '   ' → logprob: -6.452497482299805
    6. '<|end|>' → logprob: -6.577497482299805
    7. ' if' → logprob: -7.327497482299805
    8. '		   ' → logprob: -7.452497482299805
    9. '	' → logprob: -7.827497482299805
    10. '		' → logprob: -8.202497482299805

Token 528: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5826801657676697
    2. '       ' → logprob: -1.4576802253723145
    3. 'if' (adapté à ' if') → logprob: -2.2076802253723145
    4. '           ' → logprob: -2.5826802253723145
    5. '	       ' → logprob: -4.3326802253723145
    6. '               ' → logprob: -4.9576802253723145
    7. '   ' → logprob: -6.5826802253723145
    8. '	if' → logprob: -7.7076802253723145
    9. '		       ' → logprob: -8.082679748535156
    10. '	           ' → logprob: -8.832679748535156

Token 529: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20145173370838165
    2. ' not' → logprob: -1.7014517784118652
    3. '(not' → logprob: -10.576451301574707
    4. '           ' → logprob: -11.326451301574707
    5. '	not' → logprob: -14.701451301574707
    6. '   ' → logprob: -15.076451301574707
    7. '!' → logprob: -16.701452255249023
    8. ' (' → logprob: -16.826452255249023
    9. '
' → logprob: -17.076452255249023
    10. 'taken' → logprob: -17.451452255249023

Token 530: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.02324605919420719
    2. ' taken' → logprob: -3.7732460498809814
    3. 'tak' → logprob: -15.523245811462402
    4. 't' → logprob: -15.773245811462402
    5. ' ' → logprob: -15.898245811462402
    6. '_taken' → logprob: -16.14824676513672
    7. '   ' → logprob: -17.27324676513672
    8. 'take' → logprob: -17.52324676513672
    9. 'taking' → logprob: -17.89824676513672
    10. 'Taken' → logprob: -18.02324676513672

Token 531: '[i' (ID: 1768)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23569375276565552
    2. 'and' → logprob: -1.6106936931610107
    3. '           ' → logprob: -5.36069393157959
    4. '[i' → logprob: -5.86069393157959
    5. '               ' → logprob: -6.36069393157959
    6. ':
' → logprob: -7.23569393157959
    7. ':' → logprob: -9.73569393157959
    8. '   ' → logprob: -10.23569393157959
    9. '	and' → logprob: -10.23569393157959
    10. '       ' → logprob: -10.73569393157959

Token 532: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8457080721855164
    2. '):
' → logprob: -0.9707080721855164
    3. 'and' → logprob: -2.720708131790161
    4. ')' → logprob: -3.470708131790161
    5. '               ' → logprob: -3.470708131790161
    6. '           ' → logprob: -3.720708131790161
    7. ':
' → logprob: -3.970708131790161
    8. ']' → logprob: -4.595707893371582
    9. ']:
' → logprob: -4.720707893371582
    10. ':' → logprob: -7.220707893371582

Token 533: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000827017764095217
    2. '           ' → logprob: -8.125826835632324
    3. '```' → logprob: -8.500826835632324
    4. ' and' → logprob: -9.750826835632324
    5. ':' → logprob: -10.000826835632324
    6. '	       ' → logprob: -10.375826835632324
    7. '	           ' → logprob: -10.375826835632324
    8. '       ' → logprob: -10.375826835632324
    9. ',' → logprob: -10.500826835632324
    10. '		       ' → logprob: -11.375826835632324

Token 534: ' left' (ID: 3561)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5172609686851501
    2. ' left' → logprob: -1.517261028289795
    3. 'left' (adapté à ' left') → logprob: -1.892261028289795
    4. '                   ' → logprob: -4.142261028289795
    5. '   ' → logprob: -4.767261028289795
    6. '           ' → logprob: -5.517261028289795
    7. '	left' → logprob: -6.392261028289795
    8. '```' → logprob: -6.642261028289795
    9. '       ' → logprob: -6.892261028289795
    10. ' ' → logprob: -7.892261028289795

Token 535: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00928092747926712
    2. '=' → logprob: -4.759281158447266
    3. '=(' → logprob: -7.384281158447266
    4. '=((' → logprob: -11.134281158447266
    5. '           ' → logprob: -11.384281158447266
    6. ' =(' → logprob: -12.384281158447266
    7. ' ==' → logprob: -12.384281158447266
    8. '   ' → logprob: -13.009281158447266
    9. '=(-' → logprob: -13.259281158447266
    10. '==' → logprob: -13.634281158447266

Token 536: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.10021615028381348
    2. ' (' → logprob: -2.3502161502838135
    3. '               ' → logprob: -11.725215911865234
    4. '           ' → logprob: -13.975215911865234
    5. '(I' → logprob: -15.475215911865234
    6. '                   ' → logprob: -16.225215911865234
    7. '   ' → logprob: -16.475215911865234
    8. '(ii' → logprob: -16.600215911865234
    9. '(' → logprob: -17.475215911865234
    10. '(t' → logprob: -18.475215911865234

Token 537: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.020704559981822968
    2. 'i' → logprob: -3.895704507827759
    3. ' (' → logprob: -8.77070426940918
    4. ' i' → logprob: -12.52070426940918
    5. '           ' → logprob: -13.77070426940918
    6. '   ' → logprob: -14.02070426940918
    7. '{i' → logprob: -14.64570426940918
    8. '[i' → logprob: -14.77070426940918
    9. '       ' → logprob: -15.77070426940918
    10. ',i' → logprob: -15.89570426940918

Token 538: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001623291289433837
    2. '(i' → logprob: -7.001623153686523
    3. 'i' → logprob: -7.376623153686523
    4. ' -' → logprob: -10.126623153686523
    5. ' (' → logprob: -10.376623153686523
    6. ' i' → logprob: -12.001623153686523
    7. '(' → logprob: -12.376623153686523
    8. '[i' → logprob: -13.001623153686523
    9. '-i' → logprob: -14.001623153686523
    10. '1' → logprob: -15.251623153686523

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035023114178329706
    2. '(' → logprob: -6.003502368927002
    3. '(i' → logprob: -7.378502368927002
    4. ' ' → logprob: -8.503501892089844
    5. 'i' → logprob: -9.003501892089844
    6. 'N' → logprob: -10.503501892089844
    7. ' (' → logprob: -10.878501892089844
    8. '(N' → logprob: -10.878501892089844
    9. '(A' → logprob: -12.378501892089844
    10. '((' → logprob: -13.253501892089844

Token 540: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -5.538490950129926e-05
    2. ')' → logprob: -9.875055313110352
    3. '%' → logprob: -12.625055313110352
    4. ']%' → logprob: -15.375055313110352
    5. '       ' → logprob: -16.12505531311035
    6. '%)' → logprob: -16.50005531311035
    7. '   ' → logprob: -16.50005531311035
    8. ')
' → logprob: -16.75005531311035
    9. ' )' → logprob: -17.37505531311035
    10. '
' → logprob: -17.75005531311035

Token 541: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9361264946837764e-07
    2. ' N' → logprob: -17.25
    3. '```' → logprob: -17.25
    4. 'i' → logprob: -17.875
    5. '#' → logprob: -20.0
    6. 'n' → logprob: -20.25
    7. '   ' → logprob: -20.5
    8. '[' → logprob: -20.625
    9. '`' → logprob: -20.75
    10. 'A' → logprob: -21.0

Token 542: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002211754210293293
    2. '
' → logprob: -7.002211570739746
    3. '           ' → logprob: -7.627211570739746
    4. 'if' → logprob: -8.002211570739746
    5. '                
' → logprob: -8.752211570739746
    6. '```' → logprob: -9.627211570739746
    7. '              ' → logprob: -9.877211570739746
    8. '                ' → logprob: -10.002211570739746
    9. ' if' → logprob: -10.752211570739746
    10. 'left' → logprob: -11.002211570739746

Token 543: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009401659481227398
    2. '           ' → logprob: -7.875940322875977
    3. '```' → logprob: -8.500940322875977
    4. '                ' → logprob: -8.750940322875977
    5. '              ' → logprob: -9.750940322875977
    6. '                
' → logprob: -9.750940322875977
    7. ' ' → logprob: -10.875940322875977
    8. '             ' → logprob: -11.375940322875977
    9. ' ' → logprob: -11.375940322875977
    10. '                   ' → logprob: -11.875940322875977

Token 544: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.38695767521858215
    2. ' right' → logprob: -1.1369576454162598
    3. '               ' → logprob: -9.386958122253418
    4. 'left' → logprob: -13.886958122253418
    5. '                ' → logprob: -14.261958122253418
    6. '	right' → logprob: -14.636958122253418
    7. '            ' → logprob: -15.261958122253418
    8. '           ' → logprob: -15.261958122253418
    9. '                   ' → logprob: -15.761958122253418
    10. '```' → logprob: -16.6369571685791

Token 545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4759017825126648
    2. '=' → logprob: -0.9759017825126648
    3. '=(' → logprob: -6.4759016036987305
    4. '=i' → logprob: -8.35090160369873
    5. ' =(' → logprob: -11.60090160369873
    6. '           ' → logprob: -11.72590160369873
    7. '(i' → logprob: -12.10090160369873
    8. '=int' → logprob: -12.35090160369873
    9. '=lambda' → logprob: -12.47590160369873
    10. ')' → logprob: -12.97590160369873

Token 546: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07106148451566696
    2. '(N' → logprob: -2.696061372756958
    3. 'N' → logprob: -6.946061611175537
    4. ' (' → logprob: -8.821061134338379
    5. 'i' → logprob: -12.071061134338379
    6. '(' → logprob: -12.821061134338379
    7. '(I' → logprob: -13.321061134338379
    8. '(x' → logprob: -13.696061134338379
    9. '(n' → logprob: -13.821061134338379
    10. '(ii' → logprob: -14.696061134338379

Token 547: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.055086974054574966
    2. '(i' → logprob: -2.930087089538574
    3. 'N' → logprob: -9.055087089538574
    4. ' (' → logprob: -9.930087089538574
    5. ' i' → logprob: -11.180087089538574
    6. '{i' → logprob: -11.680087089538574
    7. 'x' → logprob: -12.430087089538574
    8. '(N' → logprob: -12.680087089538574
    9. ')i' → logprob: -12.680087089538574
    10. '   ' → logprob: -13.430087089538574

Token 548: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00018494461255613714
    2. '%' → logprob: -10.250185012817383
    3. ')%' → logprob: -10.375185012817383
    4. ')' → logprob: -10.500185012817383
    5. '1' → logprob: -10.625185012817383
    6. 'N' → logprob: -10.750185012817383
    7. '(' → logprob: -10.875185012817383
    8. '(i' → logprob: -12.250185012817383
    9. '(N' → logprob: -12.375185012817383
    10. '+i' → logprob: -12.750185012817383

Token 549: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.935296834039036e-06
    2. '1' → logprob: -13.50000286102295
    3. '```' → logprob: -14.75000286102295
    4. 'i' → logprob: -15.00000286102295
    5. '(' → logprob: -15.00000286102295
    6. ' N' → logprob: -15.87500286102295
    7. '(N' → logprob: -16.250003814697266
    8. 'A' → logprob: -17.000003814697266
    9. 'sys' → logprob: -17.000003814697266
    10. ')' → logprob: -17.125003814697266

Token 550: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.00041148843592964113
    2. '%' → logprob: -7.875411510467529
    3. ']%' → logprob: -11.125411033630371
    4. ')' → logprob: -11.375411033630371
    5. 'N' → logprob: -13.125411033630371
    6. '```' → logprob: -14.250411033630371
    7. '   ' → logprob: -14.375411033630371
    8. '%)' → logprob: -14.500411033630371
    9. '()%' → logprob: -14.625411033630371
    10. '       ' → logprob: -15.125411033630371

Token 551: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.875
    3. ' N' → logprob: -16.0
    4. '(' → logprob: -18.5
    5. 'sys' → logprob: -18.625
    6. '``' → logprob: -19.625
    7. ')' → logprob: -19.75
    8. '(N' → logprob: -19.875
    9. '#' → logprob: -20.0
    10. '[' → logprob: -20.5

Token 552: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022482690401375294
    2. 'if' → logprob: -6.752248287200928
    3. ' if' → logprob: -7.252248287200928
    4. '           ' → logprob: -8.50224781036377
    5. '```' → logprob: -9.12724781036377
    6. '
' → logprob: -11.12724781036377
    7. '                
' → logprob: -11.50224781036377
    8. '              ' → logprob: -12.00224781036377
    9. '                   ' → logprob: -12.25224781036377
    10. '       ' → logprob: -12.62724781036377

Token 553: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004768072627484798
    2. '           ' → logprob: -6.254767894744873
    3. '```' → logprob: -6.504767894744873
    4. '                
' → logprob: -7.379767894744873
    5. '       ' → logprob: -8.004768371582031
    6. ' if' → logprob: -9.754768371582031
    7. '                ' → logprob: -9.879768371582031
    8. '              ' → logprob: -9.879768371582031
    9. '                   ' → logprob: -10.129768371582031
    10. '
' → logprob: -10.254768371582031

Token 554: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17090563476085663
    2. ' if' → logprob: -1.920905590057373
    3. '               ' → logprob: -4.545905590057373
    4. '           ' → logprob: -12.045906066894531
    5. '       ' → logprob: -12.920906066894531
    6. '```' → logprob: -12.920906066894531
    7. 'If' → logprob: -14.295906066894531
    8. '                   ' → logprob: -14.545906066894531
    9. '                ' → logprob: -14.545906066894531
    10. '   ' → logprob: -14.670906066894531

Token 555: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.5760014653205872
    2. ' taken' → logprob: -0.8260014653205872
    3. '(t' → logprob: -10.576001167297363
    4. '   ' → logprob: -11.076001167297363
    5. 't' → logprob: -11.826001167297363
    6. '           ' → logprob: -12.951001167297363
    7. ' (' → logprob: -13.201001167297363
    8. ' ' → logprob: -13.326001167297363
    9. '_taken' → logprob: -13.326001167297363
    10. '               ' → logprob: -13.451001167297363

Token 556: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -6.153795766294934e-06
    2. 'left' → logprob: -12.125005722045898
    3. '[right' → logprob: -15.000005722045898
    4. '[i' → logprob: -15.250005722045898
    5. '[' → logprob: -16.8750057220459
    6. '(left' → logprob: -17.3750057220459
    7. '```' → logprob: -18.0000057220459
    8. '	left' → logprob: -19.0000057220459
    9. '[
' → logprob: -19.6250057220459
    10. '   ' → logprob: -20.2500057220459

Token 557: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00757468119263649
    2. ')' → logprob: -5.757574558258057
    3. 'or' → logprob: -6.007574558258057
    4. ']' → logprob: -6.257574558258057
    5. ' )' → logprob: -12.382575035095215
    6. '               ' → logprob: -13.632575035095215
    7. ' ]' → logprob: -13.632575035095215
    8. ' ' → logprob: -13.882575035095215
    9. '           ' → logprob: -14.132575035095215
    10. '}' → logprob: -14.632575035095215

Token 558: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07890212535858154
    2. 'or' → logprob: -2.578902244567871
    3. '               ' → logprob: -11.578902244567871
    4. '              ' → logprob: -14.203902244567871
    5. '	or' → logprob: -14.328902244567871
    6. '                   ' → logprob: -14.828902244567871
    7. '```' → logprob: -15.203902244567871
    8. '                ' → logprob: -15.453902244567871
    9. '                  ' → logprob: -15.703902244567871
    10. ')' → logprob: -15.703902244567871

Token 559: ' taken' (ID: 6697)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.271475225687027
    2. 'right' → logprob: -1.5214751958847046
    3. ' taken' → logprob: -4.271475315093994
    4. ' right' → logprob: -5.271475315093994
    5. '               ' → logprob: -8.521474838256836
    6. '[right' → logprob: -10.646474838256836
    7. '(right' → logprob: -11.271474838256836
    8. '              ' → logprob: -11.646474838256836
    9. 't' → logprob: -11.771474838256836
    10. '   ' → logprob: -13.521474838256836

Token 560: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -5.872261317563243e-05
    2. 'right' → logprob: -9.750059127807617
    3. '(right' → logprob: -15.750059127807617
    4. '[i' → logprob: -16.875059127807617
    5. '[left' → logprob: -17.750059127807617
    6. ' right' → logprob: -18.250059127807617
    7. ':right' → logprob: -18.500059127807617
    8. '   ' → logprob: -18.500059127807617
    9. '[
' → logprob: -18.875059127807617
    10. '	right' → logprob: -18.875059127807617

Token 561: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0057179625146090984
    2. ']:' → logprob: -5.255717754364014
    3. '               ' → logprob: -8.380718231201172
    4. ']' → logprob: -9.005718231201172
    5. ']:
' → logprob: -10.380718231201172
    6. '):
' → logprob: -10.505718231201172
    7. ']==' → logprob: -11.005718231201172
    8. ':' → logprob: -11.255718231201172
    9. ']:

' → logprob: -11.505718231201172
    10. ':
' → logprob: -11.630718231201172

Token 562: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015524751506745815
    2. '               ' → logprob: -6.751552581787109
    3. '                       ' → logprob: -8.00155258178711
    4. '           ' → logprob: -11.25155258178711
    5. ' candidates' → logprob: -11.37655258178711
    6. '                  ' → logprob: -12.25155258178711
    7. '```' → logprob: -12.37655258178711
    8. '                    
' → logprob: -12.50155258178711
    9. '                           ' → logprob: -13.75155258178711
    10. ',' → logprob: -13.75155258178711

Token 563: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.18517407774925232
    2. 'c' → logprob: -2.310173988342285
    3. '                   ' → logprob: -2.685173988342285
    4. '                       ' → logprob: -7.185173988342285
    5. '   ' → logprob: -7.935173988342285
    6. '               ' → logprob: -8.435173988342285
    7. '       ' → logprob: -9.685173988342285
    8. '           ' → logprob: -9.810173988342285
    9. '	c' → logprob: -10.810173988342285
    10. 'candidate' → logprob: -11.185173988342285

Token 564: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.002477081725373864
    2. '.' → logprob: -6.002477169036865
    3. ' .' → logprob: -14.127476692199707
    4. '.Add' → logprob: -15.127476692199707
    5. 'add' → logprob: -15.377476692199707
    6. '.update' → logprob: -17.002477645874023
    7. '.setdefault' → logprob: -17.627477645874023
    8. '                   ' → logprob: -18.252477645874023
    9. ')add' → logprob: -18.377477645874023
    10. '_add' → logprob: -19.127477645874023

Token 565: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. ' (' → logprob: -21.375
    3. 'i' → logprob: -21.625
    4. '(' → logprob: -21.625
    5. '(I' → logprob: -22.5
    6. '(
' → logprob: -22.875
    7. '(ii' → logprob: -23.25
    8. '((' → logprob: -24.5
    9. '(int' → logprob: -24.75
    10. '   ' → logprob: -25.75

Token 566: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.179569077678025e-05
    2. ')
' → logprob: -10.125041961669922
    3. '       ' → logprob: -14.375041961669922
    4. '<|end|>' → logprob: -14.875041961669922
    5. ')}' → logprob: -15.625041961669922
    6. ' )' → logprob: -16.250041961669922
    7. '               ' → logprob: -16.625041961669922
    8. '           ' → logprob: -16.875041961669922
    9. ')

' → logprob: -16.875041961669922
    10. ')return' → logprob: -17.000041961669922

Token 567: '               ' (ID: 506)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.0486408472061157
    2. '       ' → logprob: -1.5486408472061157
    3. '        
' → logprob: -1.6736408472061157
    4. '
' → logprob: -1.7986408472061157
    5. '   ' → logprob: -2.548640727996826
    6. 'turn' → logprob: -6.298640727996826
    7. '            
' → logprob: -6.798640727996826
    8. '  
' → logprob: -6.798640727996826
    9. '<|end|>' → logprob: -7.798640727996826
    10. '\n' → logprob: -8.423641204833984

Token 568: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4507816433906555
    2. '       ' → logprob: -1.2007815837860107
    3. '           ' → logprob: -3.3257815837860107
    4. 'else' (adapté à ' else') → logprob: -4.20078182220459
    5. ' else' → logprob: -5.20078182220459
    6. '<|end|>' → logprob: -5.95078182220459
    7. '                   ' → logprob: -7.07578182220459
    8. '```' → logprob: -7.45078182220459
    9. '
' → logprob: -7.57578182220459
    10. '                ' → logprob: -8.07578182220459

Token 569: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003607296966947615
    2. '               ' → logprob: -9.000360488891602
    3. '           ' → logprob: -9.250360488891602
    4. '   ' → logprob: -9.625360488891602
    5. '                       ' → logprob: -10.125360488891602
    6. ':' → logprob: -11.000360488891602
    7. '       ' → logprob: -12.500360488891602
    8. ' if' → logprob: -12.625360488891602
    9. '		           ' → logprob: -13.000360488891602
    10. 'if' → logprob: -13.375360488891602

Token 570: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00016802136087790132
    2. '   ' → logprob: -9.500167846679688
    3. '                       ' → logprob: -10.125167846679688
    4. '               ' → logprob: -10.125167846679688
    5. '       ' → logprob: -12.125167846679688
    6. '           ' → logprob: -12.125167846679688
    7. '                    ' → logprob: -14.500167846679688
    8. '                  ' → logprob: -14.875167846679688
    9. '#' → logprob: -15.500167846679688
    10. '                     ' → logprob: -15.625167846679688

Token 571: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03842001035809517
    2. ' candidates' → logprob: -3.2884199619293213
    3. '                   ' → logprob: -8.288419723510742
    4. 'if' → logprob: -9.788419723510742
    5. ' if' → logprob: -10.163419723510742
    6. '	c' → logprob: -11.288419723510742
    7. '   ' → logprob: -11.538419723510742
    8. '               ' → logprob: -13.163419723510742
    9. '_candidates' → logprob: -13.163419723510742
    10. '-c' → logprob: -13.538419723510742

Token 572: '.dis' (ID: 8454)
  Prédit: '.dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -0.008712788112461567
    2. 'discard' → logprob: -4.7587127685546875
    3. '.remove' → logprob: -9.383712768554688
    4. '.' → logprob: -11.383712768554688
    5. 'dis' → logprob: -13.383712768554688
    6. 'remove' → logprob: -14.133712768554688
    7. '	dis' → logprob: -15.633712768554688
    8. 'Discard' → logprob: -16.133712768554688
    9. ' discard' → logprob: -16.258712768554688
    10. '(dis' → logprob: -16.633712768554688

Token 573: 'card' (ID: 7687)
  Prédit: 'card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.08834588527679443
    2. 'ards' → logprob: -2.588346004486084
    3. 'ard' → logprob: -4.713346004486084
    4. 'discard' → logprob: -8.588345527648926
    5. 'cards' → logprob: -9.088345527648926
    6. 'remove' → logprob: -10.088345527648926
    7. 'gard' → logprob: -11.213345527648926
    8. 've' → logprob: -11.213345527648926
    9. 'arding' → logprob: -11.213345527648926
    10. 't' → logprob: -11.588345527648926

Token 574: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. ' (' → logprob: -20.0
    3. 'i' → logprob: -20.875
    4. '(' → logprob: -21.25
    5. '   ' → logprob: -22.125
    6. '```' → logprob: -22.5
    7. '((' → logprob: -22.875
    8. '(
' → logprob: -23.375
    9. '(ii' → logprob: -23.625
    10. '[i' → logprob: -23.875

Token 575: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -12.500005722045898
    3. '       ' → logprob: -14.125005722045898
    4. '           ' → logprob: -15.375005722045898
    5. ' )' → logprob: -15.750005722045898
    6. '))' → logprob: -16.0000057220459
    7. '               ' → logprob: -16.0000057220459
    8. '                   ' → logprob: -16.8750057220459
    9. ')`' → logprob: -17.2500057220459
    10. '())' → logprob: -17.6250057220459

Token 576: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29629334807395935
    2. '    
' → logprob: -1.5462933778762817
    3. '
' → logprob: -3.671293258666992
    4. 'turn' → logprob: -4.421293258666992
    5. '        
' → logprob: -6.046293258666992
    6. '  
' → logprob: -6.421293258666992
    7. ' turn' → logprob: -7.671293258666992
    8. 'max' → logprob: -7.671293258666992
    9. '       ' → logprob: -8.046293258666992
    10. '   
' → logprob: -8.546293258666992

Token 577: ' turn' (ID: 3716)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2929524779319763
    2. '
' → logprob: -2.167952537536621
    3. '    
' → logprob: -2.542952537536621
    4. 'turn' (adapté à ' turn') → logprob: -3.167952537536621
    5. '        
' → logprob: -4.667952537536621
    6. '       ' → logprob: -5.167952537536621
    7. ' turn' → logprob: -6.167952537536621
    8. 'max' → logprob: -7.667952537536621
    9. '  
' → logprob: -7.792952537536621
    10. ' 
' → logprob: -8.417952537536621

Token 578: '_io' (ID: 41683)
  Prédit: '_io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_io' → logprob: -8.061054359131958e-06
    2. 'io' → logprob: -12.750007629394531
    3. '=' → logprob: -13.625007629394531
    4. '=_' → logprob: -13.625007629394531
    5. '_' → logprob: -14.125007629394531
    6. '_ios' → logprob: -15.125007629394531
    7. '_IO' → logprob: -15.250007629394531
    8. '"io' → logprob: -15.375007629394531
    9. '   ' → logprob: -15.750007629394531
    10. ' =' → logprob: -15.750007629394531

Token 579: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.080963092041202e-06
    2. '=' → logprob: -12.875004768371582
    3. 'ı' → logprob: -14.000004768371582
    4. ' =' → logprob: -14.875004768371582
    5. 'I' → logprob: -15.000004768371582
    6. 'і' → logprob: -15.250004768371582
    7. ' i' → logprob: -15.750004768371582
    8. 'и' → logprob: -16.0000057220459
    9. 'io' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.2500057220459

Token 580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889056205749512
    2. ' =' → logprob: -2.578890562057495
    3. '=!' → logprob: -14.328890800476074
    4. ' ^=' → logprob: -15.453890800476074
    5. '＝' → logprob: -17.953889846801758
    6. ' ' → logprob: -18.703889846801758
    7. '=True' → logprob: -19.953889846801758
    8. '	' → logprob: -20.078889846801758
    9. '=False' → logprob: -20.078889846801758
    10. '^' → logprob: -20.203889846801758

Token 581: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.048589304089546204
    2. ' not' → logprob: -3.0485892295837402
    3. '(not' → logprob: -14.298589706420898
    4. '   ' → logprob: -14.548589706420898
    5. 'False' → logprob: -15.173589706420898
    6. '!' → logprob: -15.298589706420898
    7. '	not' → logprob: -15.423589706420898
    8. ' ' → logprob: -15.798589706420898
    9. ' ' → logprob: -18.7985897064209
    10. '       ' → logprob: -20.0485897064209

Token 582: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -1.306760805164231e-05
    2. ' turn' → logprob: -11.25001335144043
    3. '(turn' → logprob: -18.12501335144043
    4. 'Turn' → logprob: -20.87501335144043
    5. 'turned' → logprob: -21.25001335144043
    6. '.turn' → logprob: -22.50001335144043
    7. '_turn' → logprob: -22.75001335144043
    8. '-turn' → logprob: -24.25001335144043
    9. 'TURN' → logprob: -25.00001335144043
    10. 'take' → logprob: -25.25001335144043

Token 583: '_io' (ID: 41683)
  Prédit: '_io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_io' → logprob: -0.008981719613075256
    2. 'io' → logprob: -4.758981704711914
    3. '_turn' → logprob: -9.008981704711914
    4. 'turn' → logprob: -9.133981704711914
    5. '_o' → logprob: -10.133981704711914
    6. 'o' → logprob: -10.758981704711914
    7. '_of' → logprob: -10.758981704711914
    8. '_on' → logprob: -11.758981704711914
    9. '_ip' → logprob: -11.883981704711914
    10. 'of' → logprob: -12.258981704711914

Token 584: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.061054359131958e-06
    2. '_i' → logprob: -12.125007629394531
    3. 'turn' → logprob: -13.625007629394531
    4. '_' → logprob: -15.000007629394531
    5. '   ' → logprob: -15.500007629394531
    6. ' i' → logprob: -16.00000762939453
    7. '_turn' → logprob: -16.12500762939453
    8. ' ' → logprob: -16.37500762939453
    9. '  ' → logprob: -16.62500762939453
    10. 'I' → logprob: -16.62500762939453

Token 585: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26443246006965637
    2. '
' → logprob: -1.514432430267334
    3. '    
' → logprob: -4.764432430267334
    4. 'if' → logprob: -6.514432430267334
    5. '  
' → logprob: -6.764432430267334
    6. 'max' → logprob: -7.389432430267334
    7. ' if' → logprob: -8.264432907104492
    8. '   
' → logprob: -9.139432907104492
    9. '
' → logprob: -9.639432907104492
    10. '  ' → logprob: -10.139432907104492

Token 586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21229758858680725
    2. '
' → logprob: -1.7122975587844849
    3. ' if' → logprob: -5.337297439575195
    4. '    
' → logprob: -5.712297439575195
    5. 'if' → logprob: -7.087297439575195
    6. 'max' → logprob: -7.212297439575195
    7. ' 
' → logprob: -7.962297439575195
    8. ' max' → logprob: -8.212297439575195
    9. '  
' → logprob: -8.462297439575195
    10. '
' → logprob: -8.962297439575195

Token 587: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.4333396255970001
    2. '   ' → logprob: -1.1833395957946777
    3. 'if' → logprob: -3.1833395957946777
    4. ' max' → logprob: -6.058339595794678
    5. ' if' → logprob: -6.433339595794678
    6. '
' → logprob: -11.683340072631836
    7. '	max' → logprob: -13.558340072631836
    8. ' ' → logprob: -13.808340072631836
    9. '```' → logprob: -14.058340072631836
    10. '    
' → logprob: -14.683340072631836

Token 588: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -8.637786231702194e-05
    2. '_max' → logprob: -10.125086784362793
    3. '_' → logprob: -11.250086784362793
    4. '\' → logprob: -11.875086784362793
    5. '(_' → logprob: -11.875086784362793
    6. '_s' → logprob: -12.000086784362793
    7. ' _' → logprob: -12.625086784362793
    8. '_score' → logprob: -13.250086784362793
    9. '_val' → logprob: -13.375086784362793
    10. '```' → logprob: -14.000086784362793

Token 589: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4750169813632965
    2. ' =' → logprob: -0.9750169515609741
    3. '=max' → logprob: -6.975017070770264
    4. 'max' → logprob: -12.350016593933105
    5. ',max' → logprob: -16.475017547607422
    6. ' max' → logprob: -16.600017547607422
    7. '＝' → logprob: -16.725017547607422
    8. '(max' → logprob: -17.350017547607422
    9. ',' → logprob: -17.475017547607422
    10. '   ' → logprob: -17.850017547607422

Token 590: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02975141443312168
    2. ' max' → logprob: -3.5297513008117676
    3. 'j' → logprob: -14.904751777648926
    4. '	max' → logprob: -14.904751777648926
    5. '(max' → logprob: -16.15475082397461
    6. '   ' → logprob: -16.27975082397461
    7. '=max' → logprob: -17.40475082397461
    8. ' j' → logprob: -17.52975082397461
    9. ' ' → logprob: -18.15475082397461
    10. '[max' → logprob: -18.27975082397461

Token 591: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0016250719781965017
    2. '(j' → logprob: -6.751625061035156
    3. '(' → logprob: -7.751625061035156
    4. 'max' → logprob: -10.626625061035156
    5. ' (' → logprob: -16.001625061035156
    6. 'j' → logprob: -16.126625061035156
    7. ' max' → logprob: -16.376625061035156
    8. ',max' → logprob: -16.876625061035156
    9. '=max' → logprob: -17.376625061035156
    10. '[max' → logprob: -18.376625061035156

Token 592: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00015586259542033076
    2. 'sum' → logprob: -9.125155448913574
    3. 'max' → logprob: -10.500155448913574
    4. '(max' → logprob: -11.500155448913574
    5. 'j' → logprob: -12.500155448913574
    6. '_max' → logprob: -13.000155448913574
    7. 'Sum' → logprob: -13.875155448913574
    8. '(sum' → logprob: -14.500155448913574
    9. '=max' → logprob: -15.375155448913574
    10. '(j' → logprob: -15.875155448913574

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02342657372355461
    2. ',j' → logprob: -3.7734265327453613
    3. ' ,' → logprob: -8.64842700958252
    4. 'j' → logprob: -12.14842700958252
    5. ',max' → logprob: -16.523426055908203
    6. ' j' → logprob: -16.523426055908203
    7. ',
' → logprob: -16.773426055908203
    8. '(' → logprob: -17.023426055908203
    9. '   ' → logprob: -17.398426055908203
    10. '，' → logprob: -18.273426055908203

Token 594: ' joi' (ID: 193529)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02055169641971588
    2. ' joi' → logprob: -3.8955516815185547
    3. '   ' → logprob: -12.645551681518555
    4. ' ' → logprob: -13.395551681518555
    5. ' j' → logprob: -13.895551681518555
    6. '	j' → logprob: -14.020551681518555
    7. ' Joi' → logprob: -14.520551681518555
    8. '  ' → logprob: -14.520551681518555
    9. ' jai' → logprob: -14.645551681518555
    10. 'jai' → logprob: -14.895551681518555

Token 595: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1472419600977446e-06
    2. '_s' → logprob: -14.875000953674316
    3. '_' → logprob: -15.500000953674316
    4. ' _' → logprob: -15.625000953674316
    5. '__' → logprob: -15.875000953674316
    6. '\' → logprob: -16.875001907348633
    7. 'sum' → logprob: -17.000001907348633
    8. ')_' → logprob: -17.875001907348633
    9. '_SUM' → logprob: -18.250001907348633
    10. '._' → logprob: -18.250001907348633

Token 596: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.719917630311102e-05
    2. ' )' → logprob: -9.625077247619629
    3. '+' → logprob: -11.875077247619629
    4. '   ' → logprob: -13.500077247619629
    5. ')
' → logprob: -13.750077247619629
    6. ' +' → logprob: -14.375077247619629
    7. '))' → logprob: -15.125077247619629
    8. '+)' → logprob: -15.250077247619629
    9. ')+' → logprob: -15.875077247619629
    10. ')`' → logprob: -16.000076293945312

Token 597: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00034177995985373855
    2. '
' → logprob: -8.375341415405273
    3. '```' → logprob: -9.750341415405273
    4. ' print' → logprob: -9.875341415405273
    5. '``' → logprob: -14.875341415405273
    6. '(print' → logprob: -15.000341415405273
    7. '\n' → logprob: -15.125341415405273
    8. '#print' → logprob: -15.750341415405273
    9. '.print' → logprob: -16.000341415405273
    10. '\' → logprob: -16.250341415405273

Token 598: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0002624086628202349
    2. '(' → logprob: -8.250262260437012
    3. 'max' → logprob: -13.875262260437012
    4. '(f' → logprob: -16.625263214111328
    5. ' (' → logprob: -17.375263214111328
    6. '()' → logprob: -17.750263214111328
    7. '((' → logprob: -19.000263214111328
    8. '=max' → logprob: -19.250263214111328
    9. '(sum' → logprob: -19.500263214111328
    10. '(
' → logprob: -19.625263214111328

Token 599: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.8087270038668066e-05
    2. 'sum' → logprob: -10.875027656555176
    3. 'max' → logprob: -12.250027656555176
    4. '(max' → logprob: -12.750027656555176
    5. '_max' → logprob: -14.000027656555176
    6. '(sum' → logprob: -15.125027656555176
    7. '(_' → logprob: -15.750027656555176
    8. '\' → logprob: -17.500028610229492
    9. '_' → logprob: -17.750028610229492
    10. 'a' → logprob: -17.750028610229492

Token 600: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.47626737493556e-05
    2. '())' → logprob: -10.87503433227539
    3. '()' → logprob: -11.12503433227539
    4. ' )' → logprob: -14.75003433227539
    5. '(' → logprob: -14.87503433227539
    6. '))' → logprob: -15.62503433227539
    7. ')`' → logprob: -16.25003433227539
    8. ')
' → logprob: -16.87503433227539
    9. '`)' → logprob: -17.87503433227539
    10. '）' → logprob: -18.37503433227539


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 598
Tokens correctement prédits (1ère position, stricte): 180
Tokens correctement prédits (1ère position, avec adaptation): 197
Tokens correctement prédits (top 10): 418
Précision stricte (1ère position): 30.10%
Précision adaptée (1ère position): 32.94%
Précision (top 10): 69.90%
================================================================================
