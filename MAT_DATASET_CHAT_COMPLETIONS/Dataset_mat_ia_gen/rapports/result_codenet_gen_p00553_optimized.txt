================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:00:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A=int(input())
B=int(input())
C=int(input())
D=int(input())
E=int(input())
time=0
if A<0:
    time+=(0 - A)*C
    time+=D
    time+=(B - 0)*E
else:
    time+=(B - A)*E
print(time)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4737626612186432
    2. '()' → logprob: -1.5987626314163208
    3. ')' → logprob: -1.9737626314163208
    4. '())' → logprob: -3.3487627506256104
    5. '<|end|>' → logprob: -8.723762512207031
    6. '(()' → logprob: -8.848762512207031
    7. '()">' → logprob: -9.473762512207031
    8. '(
' → logprob: -9.473762512207031
    9. '))' → logprob: -9.598762512207031
    10. '(

' → logprob: -9.973762512207031

Token 4: 'B' (ID: 33)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10764254629611969
    2. '*' → logprob: -2.482642650604248
    3. '%' → logprob: -4.732642650604248
    4. '+
' → logprob: -5.357642650604248
    5. '**' → logprob: -5.857642650604248
    6. '#' → logprob: -6.482642650604248
    7. '\n' → logprob: -8.48264217376709
    8. '\' → logprob: -9.85764217376709
    9. 'if' → logprob: -9.98264217376709
    10. '-' → logprob: -9.98264217376709

Token 5: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05627954751253128
    2. '=input' → logprob: -3.3062796592712402
    3. '=int' → logprob: -4.68127965927124
    4. ' =' → logprob: -4.93127965927124
    5. '+' → logprob: -6.55627965927124
    6. '+=' → logprob: -9.181279182434082
    7. '*' → logprob: -10.681279182434082
    8. '=A' → logprob: -10.931279182434082
    9. '*=' → logprob: -12.306279182434082
    10. ',' → logprob: -12.556279182434082

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.160342738032341
    2. '(input' → logprob: -1.9103426933288574
    3. ' (' → logprob: -9.660343170166016
    4. '()' → logprob: -10.785343170166016
    5. '(
' → logprob: -11.785343170166016
    6. 'input' → logprob: -12.785343170166016
    7. '(A' → logprob: -13.160343170166016
    8. '(user' → logprob: -13.160343170166016
    9. ')' → logprob: -13.285343170166016
    10. '(eval' → logprob: -13.285343170166016

Token 7: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11380952596664429
    2. '()' → logprob: -2.238809585571289
    3. ')' → logprob: -7.113809585571289
    4. ' ())' → logprob: -9.488809585571289
    5. '()))' → logprob: -10.113809585571289
    6. '(' → logprob: -10.738809585571289
    7. '();)' → logprob: -11.363809585571289
    8. '()>' → logprob: -11.863809585571289
    9. '()]' → logprob: -12.988809585571289
    10. '());' → logprob: -13.238809585571289

Token 8: 'C' (ID: 34)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018551744520664215
    2. 'print' → logprob: -4.268551826477051
    3. 'C' → logprob: -6.268551826477051
    4. 'sum' → logprob: -6.643551826477051
    5. 'c' → logprob: -7.768551826477051
    6. 's' → logprob: -8.26855182647705
    7. 'result' → logprob: -8.89355182647705
    8. 'for' → logprob: -9.01855182647705
    9. '```' → logprob: -9.76855182647705
    10. '+' → logprob: -9.76855182647705

Token 9: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006358166225254536
    2. '+' → logprob: -5.8813581466674805
    3. ' =' → logprob: -6.1313581466674805
    4. '*' → logprob: -7.3813581466674805
    5. '=int' → logprob: -7.8813581466674805
    6. '+=' → logprob: -8.88135814666748
    7. '=input' → logprob: -9.38135814666748
    8. '*=' → logprob: -9.88135814666748
    9. ')' → logprob: -10.00635814666748
    10. '-' → logprob: -11.63135814666748

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029678281396627426
    2. '()' → logprob: -4.1546783447265625
    3. '(input' → logprob: -4.4046783447265625
    4. ' (' → logprob: -7.1546783447265625
    5. ')' → logprob: -8.779678344726562
    6. '('' → logprob: -9.029678344726562
    7. '(A' → logprob: -9.904678344726562
    8. ' ' → logprob: -10.279678344726562
    9. '(
' → logprob: -10.654678344726562
    10. '((' → logprob: -10.904678344726562

Token 11: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17205068469047546
    2. '()' → logprob: -2.422050714492798
    3. ')' → logprob: -2.672050714492798
    4. '(' → logprob: -9.422050476074219
    5. ' ())' → logprob: -10.172050476074219
    6. '()))' → logprob: -10.422050476074219
    7. '`)' → logprob: -10.797050476074219
    8. '))' → logprob: -11.672050476074219
    9. '();)' → logprob: -11.922050476074219
    10. '())
' → logprob: -12.297050476074219

Token 12: 'D' (ID: 35)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20323161780834198
    2. 'sum' → logprob: -2.0782315731048584
    3. 'total' → logprob: -3.9532315731048584
    4. 's' → logprob: -4.3282318115234375
    5. 'max' → logprob: -4.4532318115234375
    6. 'D' → logprob: -4.7032318115234375
    7. 'print' → logprob: -6.4532318115234375
    8. 'S' → logprob: -7.4532318115234375
    9. 'min' → logprob: -7.4532318115234375
    10. 'result' → logprob: -7.5782318115234375

Token 13: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30489563941955566
    2. ' =' → logprob: -1.6798956394195557
    3. '+' → logprob: -2.6798956394195557
    4. '=int' → logprob: -5.804895401000977
    5. '=input' → logprob: -6.679895401000977
    6. '+=' → logprob: -6.804895401000977
    7. ' +=' → logprob: -7.179895401000977
    8. '-' → logprob: -7.429895401000977
    9. ' +' → logprob: -7.679895401000977
    10. '*' → logprob: -9.054895401000977

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005867878440767527
    2. '(input' → logprob: -5.255867958068848
    3. ' (' → logprob: -8.630867958068848
    4. '(
' → logprob: -9.130867958068848
    5. '()' → logprob: -9.255867958068848
    6. '('' → logprob: -9.505867958068848
    7. ')' → logprob: -10.255867958068848
    8. '(

' → logprob: -10.505867958068848
    9. 'input' → logprob: -10.880867958068848
    10. '(int' → logprob: -11.380867958068848

Token 15: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07923410832881927
    2. '()' → logprob: -2.7042341232299805
    3. ')' → logprob: -4.7042341232299805
    4. '())
' → logprob: -9.70423412322998
    5. '()
' → logprob: -9.95423412322998
    6. ' ())' → logprob: -10.32923412322998
    7. '`)' → logprob: -11.45423412322998
    8. '()>' → logprob: -11.57923412322998
    9. '()))' → logprob: -12.07923412322998
    10. '(' → logprob: -12.07923412322998

Token 16: 'E' (ID: 36)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4659287631511688
    2. 'if' → logprob: -1.2159287929534912
    3. 'E' → logprob: -3.590928792953491
    4. 'result' → logprob: -4.215928554534912
    5. 'sum' → logprob: -4.465928554534912
    6. 'total' → logprob: -4.965928554534912
    7. 'diff' → logprob: -6.215928554534912
    8. 'r' → logprob: -6.840928554534912
    9. 'res' → logprob: -6.840928554534912
    10. 's' → logprob: -6.840928554534912

Token 17: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16352607309818268
    2. ' =' → logprob: -1.9135260581970215
    3. '=int' → logprob: -6.2885260581970215
    4. '+' → logprob: -7.0385260581970215
    5. '=input' → logprob: -8.41352653503418
    6. ')' → logprob: -9.53852653503418
    7. '=A' → logprob: -9.53852653503418
    8. ',' → logprob: -10.28852653503418
    9. '+=' → logprob: -10.66352653503418
    10. '.' → logprob: -10.78852653503418

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007340515032410622
    2. '(input' → logprob: -5.382340431213379
    3. ' (' → logprob: -6.632340431213379
    4. '()' → logprob: -6.882340431213379
    5. '(
' → logprob: -9.382340431213379
    6. '('' → logprob: -9.882340431213379
    7. 'input' → logprob: -9.882340431213379
    8. '(int' → logprob: -10.382340431213379
    9. ')' → logprob: -10.632340431213379
    10. '(

' → logprob: -11.007340431213379

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20181383192539215
    2. ')' → logprob: -1.951813817024231
    3. '()' → logprob: -3.2018139362335205
    4. '`)' → logprob: -11.451813697814941
    5. '())
' → logprob: -11.701813697814941
    6. '();)' → logprob: -12.076813697814941
    7. ' ())' → logprob: -12.076813697814941
    8. '()
' → logprob: -12.326813697814941
    9. ' )' → logprob: -12.951813697814941
    10. '(' → logprob: -13.326813697814941

Token 20: 'time' (ID: 4580)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8216221928596497
    2. 'total' → logprob: -1.4466221332550049
    3. 'F' → logprob: -2.071622133255005
    4. 's' → logprob: -2.446622133255005
    5. 'if' → logprob: -2.821622133255005
    6. 'result' → logprob: -4.321622371673584
    7. 'print' → logprob: -5.071622371673584
    8. 'max' → logprob: -5.321622371673584
    9. 'average' → logprob: -5.446622371673584
    10. 'S' → logprob: -5.571622371673584

Token 21: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6390419602394104
    2. '=' → logprob: -0.7640419602394104
    3. '_' → logprob: -5.389041900634766
    4. 's' → logprob: -6.889041900634766
    5. '=time' → logprob: -8.014041900634766
    6. '=int' → logprob: -9.014041900634766
    7. '1' → logprob: -9.889041900634766
    8. ')' → logprob: -10.264041900634766
    9. '_taken' → logprob: -10.389041900634766
    10. '_=' → logprob: -10.639041900634766

Token 22: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.13601775467395782
    2. '(A' → logprob: -2.6360177993774414
    3. '((' → logprob: -3.8860177993774414
    4. 'D' → logprob: -4.636017799377441
    5. 'B' → logprob: -4.761017799377441
    6. '(min' → logprob: -6.011017799377441
    7. '(max' → logprob: -6.136017799377441
    8. 'max' → logprob: -6.261017799377441
    9. '(B' → logprob: -6.761017799377441
    10. '(' → logprob: -6.761017799377441

Token 23: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1353729963302612
    2. ' ' → logprob: -1.8853729963302612
    3. ' if' → logprob: -2.010373115539551
    4. 'if' → logprob: -2.260373115539551
    5. 'i' → logprob: -2.635373115539551
    6. '\n' → logprob: -3.010373115539551
    7. '<|end|>' → logprob: -3.385373115539551
    8. '
' → logprob: -3.385373115539551
    9. '' → logprob: -3.760373115539551
    10. 't' → logprob: -4.260373115539551

Token 24: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8037875294685364
    2. '+' → logprob: -1.6787874698638916
    3. 'for' → logprob: -1.8037874698638916
    4. 'i' → logprob: -1.9287874698638916
    5. 't' → logprob: -3.8037874698638916
    6. 'f' → logprob: -4.428787708282471
    7. 'time' → logprob: -5.678787708282471
    8. '=' → logprob: -5.928787708282471
    9. '
' → logprob: -6.053787708282471
    10. 'while' → logprob: -6.553787708282471

Token 25: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0571134127676487
    2. 'A' → logprob: -2.9321134090423584
    3. '(A' → logprob: -7.3071136474609375
    4. ' B' → logprob: -7.6821136474609375
    5. ' (' → logprob: -7.8071136474609375
    6. '(' → logprob: -8.307113647460938
    7. ' ' → logprob: -8.432113647460938
    8. 'B' → logprob: -9.807113647460938
    9. ' time' → logprob: -10.307113647460938
    10. 'time' → logprob: -10.807113647460938

Token 26: '<' (ID: 27)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.36004722118377686
    2. ' <' → logprob: -1.9850472211837769
    3. '>' → logprob: -2.8600473403930664
    4. ' <=' → logprob: -3.1100473403930664
    5. '<' → logprob: -3.7350473403930664
    6. '+' → logprob: -4.235047340393066
    7. ' >=' → logprob: -4.735047340393066
    8. ' +' → logprob: -4.985047340393066
    9. ' ==' → logprob: -5.235047340393066
    10. '<=' → logprob: -7.110047340393066

Token 27: '0' (ID: 15)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.012132744304835796
    2. ' B' → logprob: -4.63713264465332
    3. '=' → logprob: -6.88713264465332
    4. 'C' → logprob: -7.51213264465332
    5. 'D' → logprob: -7.88713264465332
    6. 'E' → logprob: -8.38713264465332
    7. '0' → logprob: -9.76213264465332
    8. '=B' → logprob: -10.76213264465332
    9. '60' → logprob: -10.76213264465332
    10. ' ' → logprob: -10.88713264465332

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18510723114013672
    2. ' and' → logprob: -2.0601072311401367
    3. ' or' → logprob: -3.3101072311401367
    4. ' :' → logprob: -5.560107231140137
    5. 'and' → logprob: -7.685107231140137
    6. ':
' → logprob: -8.060107231140137
    7. 'or' → logprob: -8.810107231140137
    8. ' ' → logprob: -9.310107231140137
    9. '.' → logprob: -9.560107231140137
    10. '+' → logprob: -11.435107231140137

Token 29: '   ' (ID: 271)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.3767623007297516
    2. ' ' → logprob: -1.3767622709274292
    3. ' A' → logprob: -3.7517623901367188
    4. 'time' → logprob: -3.8767623901367188
    5. '    ' → logprob: -5.626762390136719
    6. '0' → logprob: -5.876762390136719
    7. '<|end|>' → logprob: -6.751762390136719
    8. 'A' → logprob: -6.876762390136719
    9. '   ' → logprob: -7.001762390136719
    10. ' ```' → logprob: -7.376762390136719

Token 30: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.6523885726928711
    2. ' ' → logprob: -1.777388572692871
    3. ' A' → logprob: -1.777388572692871
    4. 'time' (adapté à ' time') → logprob: -2.777388572692871
    5. '0' → logprob: -3.652388572692871
    6. 'A' → logprob: -4.152388572692871
    7. ' E' → logprob: -4.527388572692871
    8. '    ' → logprob: -5.277388572692871
    9. ' B' → logprob: -5.777388572692871
    10. 'print' → logprob: -6.277388572692871

Token 31: '+=(' (ID: 151033)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.0194250345230103
    2. '=' → logprob: -1.2694250345230103
    3. '+=' → logprob: -1.5194250345230103
    4. ' =' → logprob: -2.0194249153137207
    5. ' -=' → logprob: -5.644424915313721
    6. '-=' → logprob: -6.519424915313721
    7. '+' → logprob: -7.394424915313721
    8. '+=(' → logprob: -7.894424915313721
    9. '-' → logprob: -8.519425392150879
    10. '=time' → logprob: -9.269425392150879

Token 32: '0' (ID: 15)
  Prédit: '-A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-A' → logprob: -1.6133877038955688
    2. ' -' → logprob: -1.7383877038955688
    3. '-B' → logprob: -1.9883877038955688
    4. 'A' → logprob: -2.6133875846862793
    5. ' abs' → logprob: -3.1133875846862793
    6. '-E' → logprob: -3.1133875846862793
    7. '-C' → logprob: -3.1133875846862793
    8. '-' → logprob: -3.2383875846862793
    9. 'B' → logprob: -3.3633875846862793
    10. 'abs' → logprob: -3.3633875846862793

Token 33: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49116942286491394
    2. '-A' → logprob: -1.6161694526672363
    3. ')' → logprob: -2.1161694526672363
    4. ' -' → logprob: -3.8661694526672363
    5. '-C' → logprob: -3.8661694526672363
    6. '-B' → logprob: -4.991169452667236
    7. '-E' → logprob: -5.116169452667236
    8. '.' → logprob: -5.991169452667236
    9. '-if' → logprob: -5.991169452667236
    10. '*' → logprob: -6.616169452667236

Token 34: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01106515247374773
    2. ' A' → logprob: -4.5110650062561035
    3. '	A' → logprob: -11.386065483093262
    4. '   ' → logprob: -12.761065483093262
    5. '>A' → logprob: -13.886065483093262
    6. ')' → logprob: -14.136065483093262
    7. ' ' → logprob: -14.636065483093262
    8. '(A' → logprob: -14.886065483093262
    9. '  ' → logprob: -15.136065483093262
    10. '_A' → logprob: -16.636064529418945

Token 35: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10197530686855316
    2. ')*' → logprob: -2.351975202560425
    3. ' )' → logprob: -6.476975440979004
    4. '+' → logprob: -9.476975440979004
    5. ')+' → logprob: -9.601975440979004
    6. '*' → logprob: -9.976975440979004
    7. ')**' → logprob: -11.476975440979004
    8. '```' → logprob: -12.476975440979004
    9. ')
' → logprob: -12.726975440979004
    10. ' +' → logprob: -12.726975440979004

Token 36: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.0888265371322632
    2. 'E' → logprob: -1.5888265371322632
    3. '6' → logprob: -1.8388265371322632
    4. 'B' → logprob: -1.9638265371322632
    5. '2' → logprob: -2.5888266563415527
    6. 'D' → logprob: -3.3388266563415527
    7. '4' → logprob: -3.8388266563415527
    8. '3' → logprob: -4.713826656341553
    9. '5' → logprob: -4.963826656341553
    10. '11' → logprob: -5.963826656341553

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.801814615726471
    2. 'elif' → logprob: -1.5518145561218262
    3. ')' → logprob: -2.301814556121826
    4. 'time' → logprob: -2.426814556121826
    5. ' else' → logprob: -2.926814556121826
    6. ' ' → logprob: -3.301814556121826
    7. ' elif' → logprob: -3.926814556121826
    8. ' time' → logprob: -4.551814556121826
    9. '+' → logprob: -4.801814556121826
    10. 'if' → logprob: -4.926814556121826

Token 39: ' time' (ID: 1058)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.5626665353775024
    2. 'time' (adapté à ' time') → logprob: -1.6876665353775024
    3. 'elif' → logprob: -1.6876665353775024
    4. ' time' → logprob: -2.187666416168213
    5. ' elif' → logprob: -2.312666416168213
    6. ' else' → logprob: -2.437666416168213
    7. ' ' → logprob: -2.812666416168213
    8. ')' → logprob: -3.562666416168213
    9. '+' → logprob: -4.437666416168213
    10. '    ' → logprob: -5.562666416168213

Token 40: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010288843885064125
    2. '<|end|>' → logprob: -5.135288715362549
    3. '+=' → logprob: -6.385288715362549
    4. ' +=' → logprob: -7.010288715362549
    5. '>' → logprob: -7.510288715362549
    6. ' ' → logprob: -8.010289192199707
    7. ')' → logprob: -8.135289192199707
    8. ' +' → logprob: -8.260289192199707
    9. '<|end|>' → logprob: -9.635289192199707
    10. '=' → logprob: -10.135289192199707

Token 41: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.035679105669260025
    2. 'B' → logprob: -3.4106791019439697
    3. 'E' → logprob: -6.410679340362549
    4. ' D' → logprob: -8.41067886352539
    5. 'C' → logprob: -8.91067886352539
    6. '1' → logprob: -11.28567886352539
    7. ' B' → logprob: -12.16067886352539
    8. '0' → logprob: -12.53567886352539
    9. ' ' → logprob: -13.53567886352539
    10. '(' → logprob: -14.03567886352539

Token 42: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4808291792869568
    2. ' else' → logprob: -0.9808291792869568
    3. 'elif' → logprob: -5.480829238891602
    4. ' elif' → logprob: -6.105829238891602
    5. '<|end|>' → logprob: -8.355829238891602
    6. '+' → logprob: -10.855829238891602
    7. 'time' → logprob: -11.355829238891602
    8. ' ' → logprob: -11.605829238891602
    9. '_else' → logprob: -11.855829238891602
    10. '<|end|>' → logprob: -11.980829238891602

Token 43: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.15372563898563385
    2. 'elif' → logprob: -2.4037256240844727
    3. ' else' → logprob: -3.0287256240844727
    4. ' elif' → logprob: -5.903725624084473
    5. 'if' → logprob: -8.028725624084473
    6. 'time' → logprob: -8.653725624084473
    7. '<|end|>' → logprob: -9.278725624084473
    8. ')' → logprob: -9.528725624084473
    9. ' 
' → logprob: -10.028725624084473
    10. ' if' → logprob: -10.153725624084473

Token 44: ' time' (ID: 1058)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.36090287566185
    2. ' else' → logprob: -1.6109029054641724
    3. 'if' → logprob: -3.360902786254883
    4. 'time' (adapté à ' time') → logprob: -3.860902786254883
    5. 'elif' → logprob: -3.985902786254883
    6. ' if' → logprob: -4.360902786254883
    7. ' elif' → logprob: -5.360902786254883
    8. ' time' → logprob: -5.735902786254883
    9. ' ' → logprob: -6.110902786254883
    10. '+' → logprob: -6.735902786254883

Token 45: '+=(' (ID: 151033)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06386136263608932
    2. '<|end|>' → logprob: -2.81386137008667
    3. '*' → logprob: -7.56386137008667
    4. '%' → logprob: -8.063860893249512
    5. '<|end|>' → logprob: -8.313860893249512
    6. '>' → logprob: -8.438860893249512
    7. '+=' → logprob: -8.938860893249512
    8. '=' → logprob: -9.438860893249512
    9. ')' → logprob: -9.438860893249512
    10. '```' → logprob: -9.938860893249512

Token 46: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05057092756032944
    2. 'E' → logprob: -3.4255709648132324
    3. ' B' → logprob: -4.675570964813232
    4. '0' → logprob: -6.175570964813232
    5. '(B' → logprob: -6.425570964813232
    6. '(' → logprob: -6.800570964813232
    7. 'abs' → logprob: -7.550570964813232
    8. 'A' → logprob: -7.675570964813232
    9. ' E' → logprob: -7.925570964813232
    10. ')' → logprob: -8.550570487976074

Token 47: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2264367640018463
    2. '-' → logprob: -1.601436734199524
    3. '-A' → logprob: -6.976436614990234
    4. ')' → logprob: -9.851436614990234
    5. '-E' → logprob: -10.851436614990234
    6. ' )' → logprob: -12.226436614990234
    7. ' ' → logprob: -12.726436614990234
    8. '>' → logprob: -13.101436614990234
    9. ' A' → logprob: -13.226436614990234
    10. '*' → logprob: -13.351436614990234

Token 48: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2254440188407898
    2. ' A' → logprob: -1.9754440784454346
    3. '0' → logprob: -2.8504440784454346
    4. ' ' → logprob: -5.3504438400268555
    5. 'E' → logprob: -8.725443840026855
    6. ')' → logprob: -9.912943840026855
    7. '1' → logprob: -10.225443840026855
    8. '-' → logprob: -10.412943840026855
    9. ' -' → logprob: -10.412943840026855
    10. '-A' → logprob: -10.412943840026855

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14528433978557587
    2. 'A' → logprob: -2.020284414291382
    3. ' ' → logprob: -6.520284175872803
    4. ' A' → logprob: -6.895284175872803
    5. '1' → logprob: -10.770284652709961
    6. '-' → logprob: -11.270284652709961
    7. '-A' → logprob: -11.582784652709961
    8. '(' → logprob: -11.770284652709961
    9. ')' → logprob: -11.832784652709961
    10. 'D' → logprob: -12.020284652709961

Token 50: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.07090824842453003
    2. ')' → logprob: -2.695908308029175
    3. ' )' → logprob: -6.945908069610596
    4. ')**' → logprob: -12.945908546447754
    5. ')*(' → logprob: -13.070908546447754
    6. ')#' → logprob: -13.320908546447754
    7. ')
' → logprob: -14.695908546447754
    8. ' ' → logprob: -14.820908546447754
    9. '   ' → logprob: -14.820908546447754
    10. '*' → logprob: -14.820908546447754

Token 51: 'E' (ID: 36)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.038531165570020676
    2. 'E' → logprob: -3.5385310649871826
    3. 'D' → logprob: -4.788531303405762
    4. 'A' → logprob: -8.538531303405762
    5. 'B' → logprob: -8.913531303405762
    6. ' C' → logprob: -9.913531303405762
    7. 'F' → logprob: -10.663531303405762
    8. ' E' → logprob: -12.851031303405762
    9. 'I' → logprob: -13.663531303405762
    10. 'c' → logprob: -13.788531303405762

Token 52: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3081563711166382
    2. 'elif' → logprob: -1.9331563711166382
    3. '\n' → logprob: -2.4331564903259277
    4. ' else' → logprob: -4.058156490325928
    5. '<|end|>' → logprob: -4.808156490325928
    6. '
' → logprob: -5.683156490325928
    7. ')' → logprob: -6.683156490325928
    8. ' elif' → logprob: -6.933156490325928
    9. '\r' → logprob: -8.05815601348877
    10. '```' → logprob: -8.18315601348877

Token 53: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7088376879692078
    2. '\n' → logprob: -1.2088377475738525
    3. 'elif' → logprob: -2.3338377475738525
    4. '
' → logprob: -2.9588377475738525
    5. '<|end|>' → logprob: -3.0838377475738525
    6. ' else' → logprob: -4.958837509155273
    7. ')' → logprob: -6.333837509155273
    8. '```' → logprob: -6.458837509155273
    9. '<|end|>' → logprob: -7.333837509155273
    10. ':' → logprob: -7.708837509155273

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2660684287548065
    2. '   ' → logprob: -1.766068458557129
    3. ':
' → logprob: -2.891068458557129
    4. '
' → logprob: -5.266068458557129
    5. '    ' → logprob: -7.516068458557129
    6. '```' → logprob: -8.141068458557129
    7. '    
' → logprob: -8.391068458557129
    8. '<|end|>' → logprob: -8.516068458557129
    9. ' :
' → logprob: -9.516068458557129
    10. '   
' → logprob: -9.766068458557129

Token 55: '   ' (ID: 271)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3242822289466858
    2. ' time' → logprob: -1.324282169342041
    3. '   ' → logprob: -4.574282169342041
    4. '"time' → logprob: -8.8242826461792
    5. '	time' → logprob: -9.0742826461792
    6. '    ' → logprob: -9.0742826461792
    7. ' ' → logprob: -9.0742826461792
    8. '```' → logprob: -9.8242826461792
    9. '`' → logprob: -10.1992826461792
    10. ' ' → logprob: -11.5742826461792

Token 56: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.04870523139834404
    2. ' time' → logprob: -3.0487053394317627
    3. '"time' → logprob: -9.423705101013184
    4. '   ' → logprob: -10.548705101013184
    5. '(time' → logprob: -12.798705101013184
    6. '	time' → logprob: -12.798705101013184
    7. '`' → logprob: -13.548705101013184
    8. 'times' → logprob: -14.423705101013184
    9. '    ' → logprob: -14.548705101013184
    10. '_time' → logprob: -14.798705101013184

Token 57: '+=(' (ID: 151033)
  Prédit: '+=('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=(' → logprob: -0.02978416346013546
    2. '+=' → logprob: -3.5297842025756836
    3. ' +=' → logprob: -10.404784202575684
    4. '+' → logprob: -13.904784202575684
    5. '+='' → logprob: -13.904784202575684
    6. '+="' → logprob: -14.529784202575684
    7. '+(' → logprob: -15.029784202575684
    8. '-' → logprob: -15.279784202575684
    9. '=' → logprob: -15.404784202575684
    10. ']+=' → logprob: -15.404784202575684

Token 58: 'B' (ID: 33)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.22580836713314056
    2. 'B' → logprob: -1.7258083820343018
    3. '(A' → logprob: -4.100808143615723
    4. 'A' → logprob: -5.225808143615723
    5. '(' → logprob: -6.975808143615723
    6. ' (' → logprob: -7.600808143615723
    7. ' B' → logprob: -8.350808143615723
    8. '   ' → logprob: -9.100808143615723
    9. ')' → logprob: -9.100808143615723
    10. 'abs' → logprob: -10.038308143615723

Token 59: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09095050394535065
    2. '-' → logprob: -2.4659504890441895
    3. '-A' → logprob: -6.2159504890441895
    4. '-E' → logprob: -11.840950965881348
    5. ' ' → logprob: -12.965950965881348
    6. '-B' → logprob: -13.715950965881348
    7. '   ' → logprob: -14.715950965881348
    8. ' ' → logprob: -15.465950965881348
    9. '  ' → logprob: -15.715950965881348
    10. '-I' → logprob: -16.21595001220703

Token 60: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0001847062085289508
    2. ' A' → logprob: -8.625185012817383
    3. '   ' → logprob: -13.125185012817383
    4. '<|end|>' → logprob: -13.625185012817383
    5. ')' → logprob: -14.500185012817383
    6. '0' → logprob: -15.000185012817383
    7. '>A' → logprob: -15.000185012817383
    8. '	A' → logprob: -15.250185012817383
    9. ' ' → logprob: -15.375185012817383
    10. '  ' → logprob: -16.000185012817383

Token 61: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.029778728261590004
    2. ')' → logprob: -3.5297787189483643
    3. ' )' → logprob: -10.529778480529785
    4. '*' → logprob: -14.779778480529785
    5. ')*(' → logprob: -14.779778480529785
    6. '*)' → logprob: -15.279778480529785
    7. ')**' → logprob: -15.279778480529785
    8. '   ' → logprob: -16.0297794342041
    9. '）' → logprob: -17.7797794342041
    10. '	' → logprob: -18.0297794342041

Token 62: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.007130327634513378
    2. 'C' → logprob: -5.382130146026611
    3. 'D' → logprob: -6.007130146026611
    4. ' E' → logprob: -10.13213062286377
    5. '	E' → logprob: -13.38213062286377
    6. 'B' → logprob: -14.13213062286377
    7. ' C' → logprob: -14.50713062286377
    8. '*' → logprob: -14.50713062286377
    9. 'A' → logprob: -14.94463062286377
    10. ' ' → logprob: -15.00713062286377

Token 63: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003111519617959857
    2. '
' → logprob: -8.750310897827148
    3. ' print' → logprob: -9.500310897827148
    4. ')' → logprob: -10.500310897827148
    5. '<|end|>' → logprob: -11.000310897827148
    6. 'time' → logprob: -11.125310897827148
    7. '```' → logprob: -11.750310897827148
    8. '\n' → logprob: -12.250310897827148
    9. 'if' → logprob: -13.625310897827148
    10. '#' → logprob: -14.000310897827148

Token 64: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0058510503731667995
    2. '
' → logprob: -5.6308512687683105
    3. ')' → logprob: -6.6308512687683105
    4. '\n' → logprob: -8.130850791931152
    5. '<|end|>' → logprob: -8.255850791931152
    6. 'time' → logprob: -9.380850791931152
    7. ' print' → logprob: -9.380850791931152
    8. '```' → logprob: -9.380850791931152
    9. '
' → logprob: -10.380850791931152
    10. ')
' → logprob: -10.630850791931152

Token 65: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.006716436706483364
    2. '(' → logprob: -5.006716251373291
    3. ' (' → logprob: -15.13171672821045
    4. 'time' → logprob: -15.75671672821045
    5. '(f' → logprob: -15.88171672821045
    6. '(t' → logprob: -16.131715774536133
    7. '(Time' → logprob: -16.256715774536133
    8. '()' → logprob: -16.631715774536133
    9. '('' → logprob: -16.881715774536133
    10. '(times' → logprob: -17.131715774536133

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')`' → logprob: -16.75
    4. ')
' → logprob: -17.75
    5. '))' → logprob: -18.125
    6. '`)' → logprob: -19.375
    7. '）' → logprob: -19.75
    8. ')**' → logprob: -20.5
    9. ')#' → logprob: -20.625
    10. '')' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 64
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 26.56%
Précision adaptée (1ère position): 28.12%
Précision (top 10): 82.81%
================================================================================
