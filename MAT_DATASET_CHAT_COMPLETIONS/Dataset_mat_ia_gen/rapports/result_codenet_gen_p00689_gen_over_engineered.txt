================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import sys
from typing import Tuple, List, Optional, Iterable


class Vector2D:
    __slots__ = ('x', 'y')

    def __init__(self, x: float, y: float):
        self.x = x
        self.y = y

    def __sub__(self, other: 'Vector2D') -> 'Vector2D':
        return Vector2D(self.x - other.x, self.y - other.y)

    def length(self) -> float:
        return math.hypot(self.x, self.y)

    def normalize(self) -> 'Vector2D':
        l = self.length()
        if l == 0:
            return Vector2D(0.0, 0.0)
        return Vector2D(self.x / l, self.y / l)

    def dot(self, other: 'Vector2D') -> float:
        return self.x * other.x + self.y * other.y

    def cross(self, other: 'Vector2D') -> float:
        return self.x * other.y - self.y * other.x

    def angle_to_right(self, other: 'Vector2D') -> float:
        # Returns angle from self to other turning right (clockwise) between 0 and 2pi
        # Because clockwise is right turn: angle is 2*pi - CCW_angle
        ccw_angle = math.atan2(other.cross(self), other.dot(self))
        if ccw_angle < 0:
            ccw_angle += 2 * math.pi
        right_angle = 2 * math.pi - ccw_angle
        if right_angle >= 2 * math.pi:
            right_angle -= 2 * math.pi
        return right_angle

    def __repr__(self):
        return f"Vector2D({self.x:.3f},{self.y:.3f})"

    
class Flag:
    __slots__ = ('position',)

    def __init__(self, x: float, y: float):
        self.position = Vector2D(x, y)

    def distance_from(self, point: Vector2D) -> float:
        return (self.position - point).length()


class SpiralFootrace:
    def __init__(self, flags: List[Flag]):
        # The start flag is fixed at origin
        # We insert (0,0) flag explicitly
        self.flags: List[Flag] = [Flag(0.0, 0.0)] + flags
        self.visited = [False] * len(self.flags)
        self.visited[0] = True  # starting point is visited
        self.path_length: float = 0.0
        self.current_index: int = 0
        self.facing_direction: Vector2D = Vector2D(0.0, 1.0)  # initial direction: north

    def solve(self) -> float:
        visit_count = 1
        total_flags = len(self.flags)
        while visit_count < total_flags:
            next_index = self._select_next_flag(self.current_index, self.facing_direction)
            if next_index is None:
                break  # no more flags to visit
            self._advance_to(next_index)
            visit_count += 1
        return self.path_length

    def _select_next_flag(self, current_index: int, facing: Vector2D) -> Optional[int]:
        current_pos = self.flags[current_index].position
        candidates = []
        for i, flag in enumerate(self.flags):
            if self.visited[i]:
                continue
            direction_vec = (flag.position - current_pos)
            # If direction vector zero (same point), skip
            if direction_vec.x == 0 and direction_vec.y == 0:
                continue
            angle = facing.angle_to_right(direction_vec)
            dist = direction_vec.length()
            candidates.append((angle, dist, i))
        if not candidates:
            return None
        # Sort by smallest angle to the right, then nearest distance
        candidates.sort(key=lambda x: (x[0], x[1]))
        return candidates[0][2]

    def _advance_to(self, next_index: int):
        current_pos = self.flags[self.current_index].position
        next_pos = self.flags[next_index].position
        vector = next_pos - current_pos
        dist = vector.length()
        self.path_length += dist
        self.current_index = next_index
        self.visited[next_index] = True
        self.facing_direction = vector.normalize()


class InputParser:
    def __init__(self, source: Iterable[str]):
        self.source = source

    def parse_all_cases(self) -> Iterable[List[Tuple[int, int]]]:
        it = iter(self.source)
        while True:
            line = self._read_non_empty_line(it)
            if line is None:
                break
            n = int(line)
            if n == 0:
                break
            flags = []
            while len(flags) < n:
                line = self._read_non_empty_line(it)
                if line is None:
                    raise EOFError("Unexpected end of input while reading flags")
                parts = line.split()
                for i in range(0, len(parts), 2):
                    x = int(parts[i])
                    y = int(parts[i + 1])
                    flags.append((x, y))
            yield flags

    @staticmethod
    def _read_non_empty_line(it) -> Optional[str]:
        for line in it:
            line = line.strip()
            if line:
                return line
        return None


def main():
    parser = InputParser(sys.stdin)
    for flag_positions in parser.parse_all_cases():
        flags = [Flag(x, y) for (x, y) in flag_positions]
        race = SpiralFootrace(flags)
        length = race.solve()
        print(f"{length:.1f}")


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007273536641150713
    2. '\n' → logprob: -6.2572736740112305
    3. 'import' → logprob: -6.5072736740112305
    4. '\' → logprob: -7.0072736740112305
    5. '```' → logprob: -7.0072736740112305
    6. '<|end|>' → logprob: -7.2572736740112305
    7. '.pi' → logprob: -8.00727367401123
    8. '.e' → logprob: -9.25727367401123
    9. 'newline' → logprob: -9.25727367401123
    10. '<|end|>' → logprob: -9.63227367401123

Token 4: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.4802471399307251
    2. ' sys' → logprob: -0.9802471399307251
    3. ' numpy' → logprob: -5.6052470207214355
    4. ' random' → logprob: -7.2302470207214355
    5. ' ' → logprob: -7.3552470207214355
    6. 'os' → logprob: -7.9802470207214355
    7. ' re' → logprob: -8.355247497558594
    8. 'sys' → logprob: -8.605247497558594
    9. ' statistics' → logprob: -9.105247497558594
    10. '_' → logprob: -9.605247497558594

Token 5: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 6: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4309844672679901
    2. 'import' → logprob: -1.5559844970703125
    3. '
' → logprob: -2.8059844970703125
    4. '\' → logprob: -3.4309844970703125
    5. '.' → logprob: -4.4309844970703125
    6. '<|end|>' → logprob: -4.5559844970703125
    7. '```' → logprob: -4.8059844970703125
    8. '

' → logprob: -5.4309844970703125
    9. 'newline' → logprob: -5.9309844970703125
    10. ',' → logprob: -6.5559844970703125

Token 7: ' typing' (ID: 34152)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.21401554346084595
    2. ' collections' → logprob: -1.8390154838562012
    3. ' math' → logprob: -4.214015483856201
    4. 'os' → logprob: -4.964015483856201
    5. 'collections' → logprob: -5.589015483856201
    6. ' typing' → logprob: -5.714015483856201
    7. ' pathlib' → logprob: -6.214015483856201
    8. ' datetime' → logprob: -6.714015483856201
    9. ' itertools' → logprob: -7.839015483856201
    10. ' ' → logprob: -8.33901596069336

Token 8: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.22998853027820587
    2. 'import' → logprob: -1.6049885749816895
    3. '.' → logprob: -5.4799885749816895
    4. '[' → logprob: -9.104988098144531
    5. '```' → logprob: -9.354988098144531
    6. ' ' → logprob: -9.979988098144531
    7. '.import' → logprob: -10.479988098144531
    8. '<|end|>' → logprob: -10.604988098144531
    9. '	import' → logprob: -10.729988098144531
    10. '_import' → logprob: -10.979988098144531

Token 9: ' Tuple' (ID: 50841)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.8578729629516602
    2. ' Any' → logprob: -0.8578729629516602
    3. 'Any' → logprob: -2.10787296295166
    4. 'List' → logprob: -3.60787296295166
    5. ' Optional' → logprob: -6.48287296295166
    6. ' Generator' → logprob: -7.35787296295166
    7. ' Union' → logprob: -7.48287296295166
    8. 'Optional' → logprob: -8.98287296295166
    9. 'Generator' → logprob: -9.23287296295166
    10. 'Union' → logprob: -9.85787296295166

Token 10: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.28008219599723816
    2. '
' → logprob: -2.5300822257995605
    3. '```' → logprob: -2.7800822257995605
    4. '\n' → logprob: -2.9050822257995605
    5. ',' → logprob: -3.6550822257995605
    6. 'import' → logprob: -4.9050822257995605
    7. 'def' → logprob: -5.5300822257995605
    8. '<|end|>' → logprob: -5.6550822257995605
    9. '\' → logprob: -6.2800822257995605
    10. '.' → logprob: -7.2800822257995605

Token 11: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.3631778061389923
    2. ' List' → logprob: -1.48817777633667
    3. 'Any' → logprob: -3.48817777633667
    4. 'Union' → logprob: -3.86317777633667
    5. 'Optional' → logprob: -4.36317777633667
    6. ' Union' → logprob: -4.98817777633667
    7. ' Optional' → logprob: -5.36317777633667
    8. ' Any' → logprob: -6.23817777633667
    9. 'Callable' → logprob: -7.86317777633667
    10. 'Iterable' → logprob: -8.613178253173828

Token 12: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.094294548034668
    2. '\n' → logprob: -1.594294548034668
    3. '
' → logprob: -1.719294548034668
    4. 'import' → logprob: -2.094294548034668
    5. '

' → logprob: -2.594294548034668
    6. '\' → logprob: -3.344294548034668
    7. 'def' → logprob: -3.719294548034668
    8. ',' → logprob: -4.719294548034668
    9. 'class' → logprob: -5.469294548034668
    10. '``' → logprob: -5.719294548034668

Token 13: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.8692414164543152
    2. ' Union' → logprob: -1.49424147605896
    3. ' Dict' → logprob: -2.11924147605896
    4. 'Optional' → logprob: -2.36924147605896
    5. ' Callable' → logprob: -3.36924147605896
    6. ' Any' → logprob: -3.49424147605896
    7. 'Any' → logprob: -3.74424147605896
    8. 'Union' → logprob: -3.74424147605896
    9. 'Dict' → logprob: -3.86924147605896
    10. 'Callable' → logprob: -5.744241237640381

Token 14: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7905064821243286
    2. '
' → logprob: -1.0405064821243286
    3. 'def' → logprob: -2.790506362915039
    4. '\n' → logprob: -2.790506362915039
    5. '```' → logprob: -2.915506362915039
    6. '\' → logprob: -5.415506362915039
    7. 'import' → logprob: -5.665506362915039
    8. 'class' → logprob: -5.915506362915039
    9. ',' → logprob: -6.790506362915039
    10. '``' → logprob: -6.915506362915039

Token 15: ' Iterable' (ID: 71228)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Union' → logprob: -1.1693249940872192
    2. 'Any' → logprob: -1.4193249940872192
    3. ' Union' → logprob: -1.4193249940872192
    4. 'Dict' → logprob: -2.0443248748779297
    5. ' Any' → logprob: -3.5443248748779297
    6. ' Dict' → logprob: -3.6693248748779297
    7. 'Callable' → logprob: -4.91932487487793
    8. ' Callable' → logprob: -5.41932487487793
    9. 'Iterable' → logprob: -5.54432487487793
    10. 'Named' → logprob: -6.16932487487793

Token 16: '


' (ID: 2499)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4171063899993896
    2. '

' → logprob: -1.5421063899993896
    3. '\n' → logprob: -1.5421063899993896
    4. 'def' → logprob: -2.4171063899993896
    5. '
' → logprob: -2.4171063899993896
    6. 'import' → logprob: -2.5421063899993896
    7. ',' → logprob: -3.6671063899993896
    8. '\' → logprob: -3.7921063899993896
    9. '<|end|>' → logprob: -4.542106628417969
    10. 'from' → logprob: -6.417106628417969

Token 17: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02999299205839634
    2. 'class' → logprob: -3.5299930572509766
    3. 'd' → logprob: -8.904993057250977
    4. '```' → logprob: -9.529993057250977
    5. 'de' → logprob: -10.779993057250977
    6. '\' → logprob: -12.279993057250977
    7. '@dat' → logprob: -13.404993057250977
    8. '#' → logprob: -13.404993057250977
    9. 'import' → logprob: -13.529993057250977
    10. '@' → logprob: -13.654993057250977

Token 18: ' Vector' (ID: 8764)
  Prédit: ' Math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Math' → logprob: -1.0990411043167114
    2. ' Geometry' → logprob: -1.5990411043167114
    3. ' Vector' → logprob: -1.7240411043167114
    4. ' Calculator' → logprob: -2.099040985107422
    5. ' My' → logprob: -2.474040985107422
    6. ' Solver' → logprob: -3.849040985107422
    7. ' Point' → logprob: -4.849040985107422
    8. ' Solution' → logprob: -4.974040985107422
    9. ' Parser' → logprob: -5.099040985107422
    10. ' Factor' → logprob: -5.224040985107422

Token 19: '2' (ID: 17)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003939598333090544
    2. '(' → logprob: -6.753939628601074
    3. '<|end|>' → logprob: -7.003939628601074
    4. '[' → logprob: -7.628939628601074
    5. ' :' → logprob: -8.128939628601074
    6. '():' → logprob: -8.503939628601074
    7. '(object' → logprob: -8.753939628601074
    8. '):' → logprob: -8.878939628601074
    9. ' (' → logprob: -9.003939628601074
    10. '(Vector' → logprob: -9.253939628601074

Token 20: 'D' (ID: 35)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.674858301877975e-05
    2. 'D' → logprob: -9.875096321105957
    3. '):' → logprob: -10.625096321105957
    4. ':
' → logprob: -11.625096321105957
    5. '():' → logprob: -12.125096321105957
    6. ' :' → logprob: -13.125096321105957
    7. '(' → logprob: -13.250096321105957
    8. '>:' → logprob: -14.250096321105957
    9. ':**' → logprob: -14.500096321105957
    10. '(object' → logprob: -15.000096321105957

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007497096667066216
    2. '(' → logprob: -7.250749588012695
    3. ' :' → logprob: -11.375749588012695
    4. '):' → logprob: -11.625749588012695
    5. ':
' → logprob: -12.250749588012695
    6. '():' → logprob: -12.250749588012695
    7. '(object' → logprob: -12.375749588012695
    8. ':**' → logprob: -12.875749588012695
    9. '<|end|>' → logprob: -14.625749588012695
    10. '.' → logprob: -14.625749588012695

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09660471230745316
    2. '   ' → logprob: -3.096604824066162
    3. ':
' → logprob: -3.971604824066162
    4. '(' → logprob: -4.471604824066162
    5. ' :' → logprob: -5.471604824066162
    6. '<|end|>' → logprob: -6.096604824066162
    7. ' ' → logprob: -6.221604824066162
    8. ' 
' → logprob: -6.471604824066162
    9. ' (' → logprob: -6.846604824066162
    10. '(object' → logprob: -7.096604824066162

Token 23: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3390535116195679
    2. ':' → logprob: -1.4640535116195679
    3. ' def' → logprob: -1.4640535116195679
    4. '   ' → logprob: -2.2140536308288574
    5. '(' → logprob: -2.5890536308288574
    6. ' ' → logprob: -3.0890536308288574
    7. ' (' → logprob: -5.214053630828857
    8. '(object' → logprob: -5.214053630828857
    9. 'class' → logprob: -5.589053630828857
    10. '```' → logprob: -5.839053630828857

Token 24: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.049233175814151764
    2. 'slots' → logprob: -3.0492331981658936
    3. ' init' → logprob: -8.299233436584473
    4. '_init' → logprob: -8.549233436584473
    5. ' slots' → logprob: -9.549233436584473
    6. '_slots' → logprob: -10.299233436584473
    7. 'def' → logprob: -10.674233436584473
    8. 'slot' → logprob: -11.049233436584473
    9. '_x' → logprob: -11.799233436584473
    10. 'x' → logprob: -11.799233436584473

Token 25: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.069664333248511e-05
    2. '=' → logprob: -11.000020980834961
    3. '___' → logprob: -13.250020980834961
    4. '=['' → logprob: -14.125020980834961
    5. '__('' → logprob: -14.500020980834961
    6. '__[' → logprob: -15.000020980834961
    7. '____' → logprob: -15.875020980834961
    8. '__["' → logprob: -16.00002098083496
    9. '__:' → logprob: -16.00002098083496
    10. '__.__' → logprob: -16.25002098083496

Token 26: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011734114959836006
    2. '=' → logprob: -4.6367340087890625
    3. ' =' → logprob: -6.5117340087890625
    4. '=['' → logprob: -7.8867340087890625
    5. '__[' → logprob: -10.136734008789062
    6. '___' → logprob: -10.511734008789062
    7. '__('' → logprob: -11.636734008789062
    8. '['' → logprob: -11.761734008789062
    9. '[' → logprob: -11.761734008789062
    10. '__["' → logprob: -12.136734008789062

Token 27: ' ('' (ID: 9906)
  Prédit: '('_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('_' → logprob: -0.4237716794013977
    2. '('' → logprob: -1.798771619796753
    3. ''' → logprob: -2.673771619796753
    4. ' ('' → logprob: -3.298771619796753
    5. '('__' → logprob: -4.048771858215332
    6. '(' → logprob: -4.173771858215332
    7. ''s' → logprob: -4.798771858215332
    8. ''_' → logprob: -4.923771858215332
    9. '("_' → logprob: -5.173771858215332
    10. '['' → logprob: -5.298771858215332

Token 28: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16061565279960632
    2. '_x' → logprob: -1.9106156826019287
    3. '__' → logprob: -8.160615921020508
    4. ' x' → logprob: -9.285615921020508
    5. '_' → logprob: -12.285615921020508
    6. ' _' → logprob: -12.910615921020508
    7. ''x' → logprob: -13.785615921020508
    8. 'a' → logprob: -14.410615921020508
    9. '   ' → logprob: -14.660615921020508
    10. '_dx' → logprob: -14.785615921020508

Token 29: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00029875844484195113
    2. ',' → logprob: -8.125298500061035
    3. ' ',' → logprob: -13.500298500061035
    4. '','' → logprob: -14.000298500061035
    5. ''' → logprob: -15.250298500061035
    6. '",' → logprob: -16.25029945373535
    7. '',
' → logprob: -16.62529945373535
    8. '')' → logprob: -16.75029945373535
    9. '=',' → logprob: -19.00029945373535
    10. '`,' → logprob: -19.12529945373535

Token 30: ' '' (ID: 461)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47394683957099915
    2. ''y' → logprob: -1.2239468097686768
    3. ' y' → logprob: -2.5989468097686768
    4. ''' → logprob: -5.848947048187256
    5. '‘y' → logprob: -5.848947048187256
    6. ' '' → logprob: -5.973947048187256
    7. ' ' → logprob: -8.098946571350098
    8. '<|end|>' → logprob: -8.473946571350098
    9. '    ' → logprob: -9.223946571350098
    10. '   ' → logprob: -10.348946571350098

Token 31: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.41866585687967e-06
    2. ' y' → logprob: -11.750008583068848
    3. ''y' → logprob: -15.000008583068848
    4. '<|end|>' → logprob: -17.00000762939453
    5. '<|end|>' → logprob: -17.62500762939453
    6. '_y' → logprob: -18.00000762939453
    7. '‘y' → logprob: -18.37500762939453
    8. 'y's' → logprob: -18.62500762939453
    9. '	y' → logprob: -18.75000762939453
    10. ''' → logprob: -18.75000762939453

Token 32: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005018855910748243
    2. ')' → logprob: -5.880018711090088
    3. '',' → logprob: -6.130018711090088
    4. ',' → logprob: -11.005019187927246
    5. '')
' → logprob: -11.380019187927246
    6. '')

' → logprob: -12.755019187927246
    7. ''' → logprob: -12.880019187927246
    8. ' ')' → logprob: -14.630019187927246
    9. '")' → logprob: -15.630019187927246
    10. '']' → logprob: -15.630019187927246

Token 33: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3319367468357086
    2. '   ' → logprob: -1.8319367170333862
    3. ':' → logprob: -2.581936836242676
    4. '    
' → logprob: -3.831936836242676
    5. 'def' → logprob: -4.456936836242676
    6. ',' → logprob: -5.206936836242676
    7. '

' → logprob: -6.081936836242676
    8. ':
' → logprob: -6.831936836242676
    9. ' def' → logprob: -7.206936836242676
    10. '  
' → logprob: -7.331936836242676

Token 34: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002485884353518486
    2. ' def' → logprob: -6.002485752105713
    3. '   ' → logprob: -11.502486228942871
    4. 'x' → logprob: -17.752485275268555
    5. '	def' → logprob: -19.252485275268555
    6. ' ' → logprob: -20.627485275268555
    7. '    
' → logprob: -20.627485275268555
    8. '@' → logprob: -21.627485275268555
    9. '```' → logprob: -22.127485275268555
    10. '_def' → logprob: -22.252485275268555

Token 35: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.047368403524160385
    2. ' ' → logprob: -3.172368288040161
    3. '__' → logprob: -6.42236852645874
    4. ' init' → logprob: -6.54736852645874
    5. '_init' → logprob: -7.42236852645874
    6. ' def' → logprob: -7.92236852645874
    7. '  ' → logprob: -8.797368049621582
    8. 'init' → logprob: -9.547368049621582
    9. ' ' → logprob: -10.172368049621582
    10. ' ```' → logprob: -10.172368049621582

Token 36: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -17.125
    3. ' init' → logprob: -18.75
    4. 'in' → logprob: -19.375
    5. '_init' → logprob: -20.25
    6. 'inite' → logprob: -21.0
    7. 'int' → logprob: -21.25
    8. 'slots' → logprob: -22.25
    9. '	init' → logprob: -23.25
    10. 'i' → logprob: -23.5

Token 37: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04644707962870598
    2. '(self' → logprob: -3.7964470386505127
    3. '(' → logprob: -4.546447277069092
    4. '__' → logprob: -4.671447277069092
    5. '__(
' → logprob: -6.546447277069092
    6. ' (' → logprob: -7.421447277069092
    7. '<|end|>' → logprob: -8.046446800231934
    8. '__((' → logprob: -8.421446800231934
    9. '__(*' → logprob: -9.296446800231934
    10. '<|end|>' → logprob: -9.421446800231934

Token 38: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019306590547785163
    2. ' self' → logprob: -6.2519307136535645
    3. '(self' → logprob: -13.501930236816406
    4. '	self' → logprob: -15.751930236816406
    5. ',self' → logprob: -15.876930236816406
    6. '_self' → logprob: -16.001930236816406
    7. ')' → logprob: -16.251930236816406
    8. ' ' → logprob: -16.626930236816406
    9. 's' → logprob: -16.751930236816406
    10. '0' → logprob: -17.501930236816406

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08447133004665375
    2. ' ,' → logprob: -2.5844712257385254
    3. 'self' → logprob: -5.709471225738525
    4. ' self' → logprob: -6.459471225738525
    5. '<|end|>' → logprob: -8.334471702575684
    6. ',self' → logprob: -8.834471702575684
    7. '(self' → logprob: -9.334471702575684
    8. ')' → logprob: -9.584471702575684
    9. ' ' → logprob: -9.709471702575684
    10. '<|end|>' → logprob: -10.959471702575684

Token 40: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2813796103000641
    2. ' x' → logprob: -1.4063795804977417
    3. 'self' → logprob: -8.906379699707031
    4. ' self' → logprob: -9.406379699707031
    5. ' ' → logprob: -11.531379699707031
    6. '	x' → logprob: -14.406379699707031
    7. '   ' → logprob: -14.531379699707031
    8. '_x' → logprob: -15.781379699707031
    9. ')x' → logprob: -16.03137969970703
    10. ')' → logprob: -16.15637969970703

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12777864933013916
    2. ',' → logprob: -2.1277785301208496
    3. ':int' → logprob: -8.252779006958008
    4. ')' → logprob: -8.377779006958008
    5. '=' → logprob: -8.502779006958008
    6. ' ,' → logprob: -9.627779006958008
    7. '):' → logprob: -9.752779006958008
    8. '<|end|>' → logprob: -11.877779006958008
    9. '=None' → logprob: -12.002779006958008
    10. ' :' → logprob: -12.127779006958008

Token 42: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.036419983953237534
    2. 'float' → logprob: -3.5364198684692383
    3. ' int' → logprob: -5.786419868469238
    4. ' ' → logprob: -5.911419868469238
    5. 'int' → logprob: -7.661419868469238
    6. '0' → logprob: -8.161419868469238
    7. ' )' → logprob: -10.661419868469238
    8. '=float' → logprob: -10.786419868469238
    9. ')' → logprob: -11.036419868469238
    10. ' x' → logprob: -11.536419868469238

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031854258850216866
    2. ' ,' → logprob: -8.50031852722168
    3. ')' → logprob: -10.25031852722168
    4. '<|end|>' → logprob: -10.25031852722168
    5. '):' → logprob: -10.75031852722168
    6. ':' → logprob: -11.50031852722168
    7. '=' → logprob: -12.12531852722168
    8. '<|end|>' → logprob: -13.37531852722168
    9. ' ' → logprob: -13.62531852722168
    10. '=None' → logprob: -13.87531852722168

Token 44: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132915198802948
    2. 'y' → logprob: -1.3132915496826172
    3. ' ' → logprob: -10.688291549682617
    4. '<|end|>' → logprob: -12.813291549682617
    5. '	y' → logprob: -12.938291549682617
    6. ' ' → logprob: -14.938291549682617
    7. ')' → logprob: -14.938291549682617
    8. 'x' → logprob: -15.438291549682617
    9. '```' → logprob: -15.813291549682617
    10. ')y' → logprob: -15.938291549682617

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05503404885530472
    2. '):' → logprob: -3.1800341606140137
    3. ')' → logprob: -4.430034160614014
    4. ' ):' → logprob: -11.180033683776855
    5. '=' → logprob: -11.680033683776855
    6. '<|end|>' → logprob: -12.055033683776855
    7. ' )' → logprob: -12.430033683776855
    8. '):
' → logprob: -12.555033683776855
    9. '<|end|>' → logprob: -12.555033683776855
    10. ' :' → logprob: -12.680033683776855

Token 46: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.023504599928855896
    2. 'float' → logprob: -3.7735044956207275
    3. ' ' → logprob: -9.148504257202148
    4. ')' → logprob: -10.148504257202148
    5. '=float' → logprob: -10.148504257202148
    6. ' )' → logprob: -10.398504257202148
    7. '	float' → logprob: -10.648504257202148
    8. ',float' → logprob: -12.273504257202148
    9. '<|end|>' → logprob: -12.398504257202148
    10. '<float' → logprob: -12.648504257202148

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.061990655958652496
    2. ')' → logprob: -2.811990737915039
    3. ':' → logprob: -11.311990737915039
    4. ' ):' → logprob: -12.186990737915039
    5. '):
' → logprob: -12.811990737915039
    6. ')->' → logprob: -13.436990737915039
    7. ''):' → logprob: -15.061990737915039
    8. '),' → logprob: -15.686990737915039
    9. ' )' → logprob: -15.686990737915039
    10. ',' → logprob: -15.811990737915039

Token 48: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5941696763038635
    2. '):' → logprob: -1.4691696166992188
    3. ' )' → logprob: -2.7191696166992188
    4. ' ):' → logprob: -2.7191696166992188
    5. ' ' → logprob: -2.8441696166992188
    6. 'x' → logprob: -4.469169616699219
    7. '       ' → logprob: -4.969169616699219
    8. '    ' → logprob: -5.219169616699219
    9. '   ' → logprob: -7.094169616699219
    10. '        ' → logprob: -7.344169616699219

Token 49: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2816416621208191
    2. ' self' → logprob: -1.5316417217254639
    3. '       ' → logprob: -3.531641721725464
    4. '   ' → logprob: -11.906641960144043
    5. ' ' → logprob: -12.531641960144043
    6. ' ' → logprob: -12.656641960144043
    7. '	self' → logprob: -12.906641960144043
    8. '```' → logprob: -13.281641960144043
    9. '(self' → logprob: -15.406641960144043
    10. '        ' → logprob: -16.281641006469727

Token 50: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005951671861112118
    2. '.x' → logprob: -5.130951881408691
    3. ' .' → logprob: -11.130951881408691
    4. '.)' → logprob: -13.255951881408691
    5. '.i' → logprob: -14.005951881408691
    6. '.=' → logprob: -14.005951881408691
    7. ' ' → logprob: -14.130951881408691
    8. '.y' → logprob: -14.755951881408691
    9. ')' → logprob: -14.755951881408691
    10. ').' → logprob: -15.005951881408691

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23036830127239227
    2. '=' → logprob: -1.6053682565689087
    3. ' ' → logprob: -5.355368137359619
    4. ',' → logprob: -9.105368614196777
    5. '<|end|>' → logprob: -10.230368614196777
    6. ' ,' → logprob: -10.730368614196777
    7. ')' → logprob: -11.230368614196777
    8. ' =)' → logprob: -11.980368614196777
    9. '_' → logprob: -12.230368614196777
    10. '.' → logprob: -12.355368614196777

Token 52: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38687121868133545
    2. 'x' → logprob: -1.1368712186813354
    3. '	x' → logprob: -15.636871337890625
    4. ' ' → logprob: -17.386871337890625
    5. ' ' → logprob: -17.511871337890625
    6. ' float' → logprob: -19.011871337890625
    7. ')x' → logprob: -19.386871337890625
    8. '(x' → logprob: -19.761871337890625
    9. 'float' → logprob: -20.511871337890625
    10. '_x' → logprob: -21.011871337890625

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009132809937000275
    2. '<|end|>' → logprob: -5.3841328620910645
    3. '
' → logprob: -5.6341328620910645
    4. 'self' → logprob: -7.7591328620910645
    5. '   ' → logprob: -8.634132385253906
    6. '        
' → logprob: -9.509132385253906
    7. '<|end|>' → logprob: -9.884132385253906
    8. ' ' → logprob: -10.384132385253906
    9. ',' → logprob: -10.634132385253906
    10. ' self' → logprob: -10.759132385253906

Token 55: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05446659028530121
    2. ' self' → logprob: -3.304466485977173
    3. 'y' → logprob: -4.429466724395752
    4. ' y' → logprob: -5.554466724395752
    5. '       ' → logprob: -7.804466724395752
    6. ',' → logprob: -9.929466247558594
    7. ' ' → logprob: -10.804466247558594
    8. '   ' → logprob: -11.804466247558594
    9. ',y' → logprob: -12.179466247558594
    10. ' ' → logprob: -12.679466247558594

Token 56: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00042686203960329294
    2. '.y' → logprob: -8.50042724609375
    3. ' .' → logprob: -8.87542724609375
    4. ' ' → logprob: -10.37542724609375
    5. '.x' → logprob: -10.75042724609375
    6. '<|end|>' → logprob: -10.75042724609375
    7. '<|end|>' → logprob: -12.87542724609375
    8. '.py' → logprob: -13.37542724609375
    9. ')' → logprob: -13.62542724609375
    10. '.space' → logprob: -14.50042724609375

Token 57: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1269284337759018
    2. 'y' → logprob: -2.1269283294677734
    3. ' ' → logprob: -14.876928329467773
    4. ' ' → logprob: -16.876928329467773
    5. '	y' → logprob: -17.251928329467773
    6. ')y' → logprob: -20.251928329467773
    7. '‘y' → logprob: -20.501928329467773
    8. ''y' → logprob: -20.751928329467773
    9. '_y' → logprob: -21.126928329467773
    10. '(y' → logprob: -21.251928329467773

Token 59: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13222897052764893
    2. '<|end|>' → logprob: -2.5072288513183594
    3. '   ' → logprob: -3.7572288513183594
    4. '    
' → logprob: -4.632228851318359
    5. '\n' → logprob: -6.007228851318359
    6. '

' → logprob: -6.132228851318359
    7. '<|end|>' → logprob: -7.007228851318359
    8. ' 
' → logprob: -7.382228851318359
    9. 'newline' → logprob: -7.382228851318359
    10. ' ' → logprob: -7.632228851318359

Token 60: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16732336580753326
    2. '   ' → logprob: -2.792323350906372
    3. 'def' → logprob: -3.542323350906372
    4. '<|end|>' → logprob: -3.792323350906372
    5. ' def' → logprob: -4.667323589324951
    6. '\n' → logprob: -5.167323589324951
    7. '

' → logprob: -5.292323589324951
    8. ')' → logprob: -5.542323589324951
    9. '    
' → logprob: -5.667323589324951
    10. '\' → logprob: -5.792323589324951

Token 61: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.016604682430624962
    2. ' def' → logprob: -4.141604900360107
    3. '   ' → logprob: -7.766604900360107
    4. '@property' → logprob: -9.89160442352295
    5. '
' → logprob: -10.14160442352295
    6. '    
' → logprob: -10.51660442352295
    7. ' 
' → logprob: -12.01660442352295
    8. '@' → logprob: -12.01660442352295
    9. ')' → logprob: -12.89160442352295
    10. ' ' → logprob: -12.89160442352295

Token 62: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03916964307427406
    2. '_' → logprob: -3.5391695499420166
    3. ' def' → logprob: -6.164169788360596
    4. ' ' → logprob: -6.664169788360596
    5. '.' → logprob: -7.039169788360596
    6. ' space' → logprob: -7.164169788360596
    7. ' .' → logprob: -7.539169788360596
    8. ' add' → logprob: -7.789169788360596
    9. ' x' → logprob: -8.289169311523438
    10. '_add' → logprob: -8.414169311523438

Token 63: 'sub' (ID: 3834)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -1.015723466873169
    2. 'add' → logprob: -1.515723466873169
    3. 'init' → logprob: -1.890723466873169
    4. 'a' → logprob: -2.140723466873169
    5. 'repr' → logprob: -2.265723466873169
    6. 'i' → logprob: -3.390723466873169
    7. 'str' → logprob: -5.14072322845459
    8. 's' → logprob: -6.26572322845459
    9. 'e' → logprob: -6.51572322845459
    10. ' ' → logprob: -7.26572322845459

Token 64: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6939156651496887
    2. '__(' → logprob: -0.6939156651496887
    3. '__(
' → logprob: -7.693915843963623
    4. '_' → logprob: -9.068915367126465
    5. '__('' → logprob: -9.068915367126465
    6. '__((' → logprob: -9.693915367126465
    7. '__("' → logprob: -11.943915367126465
    8. '(' → logprob: -12.443915367126465
    9. '__(*' → logprob: -12.568915367126465
    10. '___' → logprob: -12.943915367126465

Token 65: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0030534081161022186
    2. 'other' → logprob: -6.378053188323975
    3. ' self' → logprob: -6.628053188323975
    4. ' other' → logprob: -10.878053665161133
    5. ',' → logprob: -13.378053665161133
    6. '(self' → logprob: -13.378053665161133
    7. ' ' → logprob: -13.503053665161133
    8. '       ' → logprob: -13.753053665161133
    9. ')' → logprob: -14.003053665161133
    10. '   ' → logprob: -14.253053665161133

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38718852400779724
    2. ' ,' → logprob: -1.1371885538101196
    3. ')' → logprob: -9.262188911437988
    4. ' ' → logprob: -9.387188911437988
    5. '<|end|>' → logprob: -9.762188911437988
    6. ' )' → logprob: -10.262188911437988
    7. 'self' → logprob: -10.637188911437988
    8. ' self' → logprob: -11.887188911437988
    9. ',self' → logprob: -12.637188911437988
    10. ' ,
' → logprob: -12.887188911437988

Token 67: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.31343135237693787
    2. ' other' → logprob: -1.3134313821792603
    3. '<|end|>' → logprob: -9.313431739807129
    4. ' ' → logprob: -10.313431739807129
    5. ' o' → logprob: -10.813431739807129
    6. 'self' → logprob: -11.813431739807129
    7. 'Other' → logprob: -12.188431739807129
    8. '_other' → logprob: -12.188431739807129
    9. 'o' → logprob: -12.563431739807129
    10. '(other' → logprob: -13.813431739807129

Token 68: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02953083999454975
    2. ':' → logprob: -4.029531002044678
    3. ')' → logprob: -4.779531002044678
    4. '<|end|>' → logprob: -6.529531002044678
    5. ' ):' → logprob: -6.904531002044678
    6. '):
' → logprob: -8.02953052520752
    7. '<|end|>' → logprob: -9.65453052520752
    8. ' :' → logprob: -10.52953052520752
    9. ' )' → logprob: -11.02953052520752
    10. ',' → logprob: -12.52953052520752

Token 69: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11567888408899307
    2. ' )' → logprob: -2.3656787872314453
    3. ')' → logprob: -5.240678787231445
    4. ' Vector' → logprob: -5.365678787231445
    5. '<|end|>' → logprob: -5.490678787231445
    6. ' vector' → logprob: -7.615678787231445
    7. 'Vector' → logprob: -7.990678787231445
    8. ' ' → logprob: -8.490678787231445
    9. ' '' → logprob: -10.240678787231445
    10. '  ' → logprob: -10.990678787231445

Token 70: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0002636006975080818
    2. ' Vector' → logprob: -8.250263214111328
    3. 'Vect' → logprob: -14.125263214111328
    4. 'Vec' → logprob: -14.250263214111328
    5. '_Vector' → logprob: -14.875263214111328
    6. '	Vector' → logprob: -16.125263214111328
    7. 'vector' → logprob: -16.250263214111328
    8. 'Vectors' → logprob: -16.500263214111328
    9. ' vector' → logprob: -16.500263214111328
    10. '<Vector' → logprob: -17.500263214111328

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '<|end|>' → logprob: -17.375
    3. '')' → logprob: -17.5
    4. ' ' → logprob: -17.5
    5. 'Vector' → logprob: -17.5
    6. ')' → logprob: -17.75
    7. '<Vector' → logprob: -19.25
    8. '```' → logprob: -19.5
    9. '۲' → logprob: -19.75
    10. '  ' → logprob: -20.25

Token 72: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0038387870881706476
    2. '2' → logprob: -5.628839015960693
    3. 'Vector' → logprob: -8.378838539123535
    4. ')' → logprob: -12.253838539123535
    5. 'vector' → logprob: -14.003838539123535
    6. '')' → logprob: -14.378838539123535
    7. ' ' → logprob: -14.503838539123535
    8. '<|end|>' → logprob: -14.503838539123535
    9. ''D' → logprob: -15.128838539123535
    10. '<D' → logprob: -15.378838539123535

Token 73: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.28486165404319763
    2. ''):' → logprob: -1.40986168384552
    3. ')' → logprob: -5.7848615646362305
    4. '):' → logprob: -8.03486156463623
    5. '')->' → logprob: -8.53486156463623
    6. ''):
' → logprob: -10.03486156463623
    7. ':' → logprob: -10.15986156463623
    8. ''' → logprob: -12.15986156463623
    9. ' ')' → logprob: -12.28486156463623
    10. ''):
' → logprob: -12.53486156463623

Token 74: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007436839397996664
    2. '):' → logprob: -5.382436752319336
    3. ')' → logprob: -6.132436752319336
    4. ')->' → logprob: -8.257436752319336
    5. '->' → logprob: -8.507436752319336
    6. ' ->' → logprob: -9.007436752319336
    7. '<|end|>' → logprob: -10.882436752319336
    8. ' :' → logprob: -11.257436752319336
    9. ':return' → logprob: -11.257436752319336
    10. ':
' → logprob: -12.882436752319336

Token 75: ' '' (ID: 461)
  Prédit: ' Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.023242564871907234
    2. 'Vector' → logprob: -4.273242473602295
    3. ' '' → logprob: -4.898242473602295
    4. ' ' → logprob: -7.523242473602295
    5. ' Optional' → logprob: -7.648242473602295
    6. ''' → logprob: -8.273242950439453
    7. ' float' → logprob: -8.898242950439453
    8. ' ' → logprob: -8.898242950439453
    9. '	Vector' → logprob: -11.773242950439453
    10. ' vector' → logprob: -11.898242950439453

Token 76: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0031812789384275675
    2. ' Vector' → logprob: -5.753181457519531
    3. '_Vector' → logprob: -13.628181457519531
    4. '	Vector' → logprob: -14.128181457519531
    5. ' vector' → logprob: -14.753181457519531
    6. 'Vect' → logprob: -15.003181457519531
    7. 'Vec' → logprob: -15.253181457519531
    8. '<Vector' → logprob: -15.503181457519531
    9. '.Vector' → logprob: -15.628181457519531
    10. 'vector' → logprob: -15.753181457519531

Token 77: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. 'Vector' → logprob: -12.500003814697266
    3. '```' → logprob: -17.500003814697266
    4. 'vector' → logprob: -18.125003814697266
    5. '   ' → logprob: -18.250003814697266
    6. ' ' → logprob: -18.750003814697266
    7. '<Vector' → logprob: -18.875003814697266
    8. ')' → logprob: -19.125003814697266
    9. '<|end|>' → logprob: -20.000003814697266
    10. '[' → logprob: -20.250003814697266

Token 78: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -5.3954463510308415e-05
    2. '2' → logprob: -10.000054359436035
    3. 'Vector' → logprob: -12.250054359436035
    4. ' D' → logprob: -13.875054359436035
    5. '<D' → logprob: -15.125054359436035
    6. ''D' → logprob: -15.250054359436035
    7. '```' → logprob: -15.375054359436035
    8. 'd' → logprob: -15.500054359436035
    9. '')' → logprob: -15.500054359436035
    10. 'vector' → logprob: -15.500054359436035

Token 79: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14005671441555023
    2. '':' → logprob: -2.140056610107422
    3. '):' → logprob: -4.390056610107422
    4. ''):' → logprob: -7.890056610107422
    5. ':
' → logprob: -9.015056610107422
    6. ' :' → logprob: -10.515056610107422
    7. '':'' → logprob: -10.640056610107422
    8. ''' → logprob: -11.015056610107422
    9. ')' → logprob: -11.140056610107422
    10. '):
' → logprob: -11.265056610107422

Token 80: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2438773512840271
    2. 'return' (adapté à ' return') → logprob: -1.6188774108886719
    3. ' 
' → logprob: -4.368877410888672
    4. '<|end|>' → logprob: -5.868877410888672
    5. ' ' → logprob: -6.743877410888672
    6. '
' → logprob: -7.618877410888672
    7. '       ' → logprob: -8.243877410888672
    8. ':return' → logprob: -8.368877410888672
    9. 'Vector' → logprob: -8.868877410888672
    10. ' Vector' → logprob: -8.993877410888672

Token 82: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.0002545448951423168
    2. 'Vector' → logprob: -8.37525463104248
    3. ' ' → logprob: -10.75025463104248
    4. ' self' → logprob: -13.12525463104248
    5. '_Vector' → logprob: -15.62525463104248
    6. ' Vec' → logprob: -16.125253677368164
    7. ' ' → logprob: -16.625253677368164
    8. '	Vector' → logprob: -16.750253677368164
    9. ' Space' → logprob: -16.750253677368164
    10. ' space' → logprob: -17.250253677368164

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '(' → logprob: -17.375
    3. 'Vector' → logprob: -19.5
    4. ' ' → logprob: -19.75
    5. '۲' → logprob: -19.75
    6. '２' → logprob: -20.0
    7. '```' → logprob: -20.125
    8. '('' → logprob: -21.375
    9. '(x' → logprob: -21.75
    10. '   ' → logprob: -21.875

Token 84: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.27099974633893e-05
    2. '2' → logprob: -11.625012397766113
    3. 'Vector' → logprob: -13.500012397766113
    4. '<|end|>' → logprob: -14.000012397766113
    5. '   ' → logprob: -14.500012397766113
    6. '(' → logprob: -15.125012397766113
    7. '_D' → logprob: -15.375012397766113
    8. ')' → logprob: -16.50001335144043
    9. '  ' → logprob: -16.75001335144043
    10. ' D' → logprob: -17.00001335144043

Token 85: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07894840091466904
    2. '(self' → logprob: -2.578948497772217
    3. '(
' → logprob: -10.328948020935059
    4. '(s' → logprob: -10.828948020935059
    5. '(x' → logprob: -13.078948020935059
    6. '((' → logprob: -13.453948020935059
    7. '(other' → logprob: -13.578948020935059
    8. '(

' → logprob: -14.578948020935059
    9. '(this' → logprob: -14.703948020935059
    10. ' (' → logprob: -15.578948020935059

Token 86: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.5759453773498535
    2. '.' → logprob: -0.8259453773498535
    3. ' .' → logprob: -12.575944900512695
    4. 'x' → logprob: -13.200944900512695
    5. '.
' → logprob: -15.200944900512695
    6. ' ' → logprob: -15.575944900512695
    7. ').' → logprob: -16.825944900512695
    8. '.

' → logprob: -16.950944900512695
    9. '._' → logprob: -17.075944900512695
    10. '.s' → logprob: -17.200944900512695

Token 87: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004835226573050022
    2. '-' → logprob: -5.50483512878418
    3. ' ' → logprob: -7.25483512878418
    4. ' ' → logprob: -11.12983512878418
    5. ',' → logprob: -11.37983512878418
    6. '<|end|>' → logprob: -11.37983512878418
    7. ' ,' → logprob: -12.62983512878418
    8. ')' → logprob: -12.62983512878418
    9. ' -,' → logprob: -12.62983512878418
    10. ' -
' → logprob: -14.37983512878418

Token 88: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.016171731054782867
    2. 'other' → logprob: -4.141171932220459
    3. ' ' → logprob: -9.0161714553833
    4. '(other' → logprob: -12.1411714553833
    5. '<|end|>' → logprob: -12.6411714553833
    6. ' ' → logprob: -12.7661714553833
    7. '_other' → logprob: -13.3911714553833
    8. '.other' → logprob: -14.2661714553833
    9. ' oth' → logprob: -14.5161714553833
    10. ' Other' → logprob: -15.0161714553833

Token 89: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.023266909644007683
    2. '.x' → logprob: -3.7732667922973633
    3. '<|end|>' → logprob: -11.898266792297363
    4. ' .' → logprob: -12.273266792297363
    5. ').' → logprob: -12.398266792297363
    6. ' ' → logprob: -13.648266792297363
    7. 'x' → logprob: -13.898266792297363
    8. '.
' → logprob: -14.023266792297363
    9. ')' → logprob: -14.523266792297363
    10. '‌.' → logprob: -14.648266792297363

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034392563975416124
    2. ' ,' → logprob: -8.000344276428223
    3. ')' → logprob: -12.125344276428223
    4. ',
' → logprob: -12.875344276428223
    5. ',

' → logprob: -16.000343322753906
    6. '<|end|>' → logprob: -16.250343322753906
    7. ',y' → logprob: -16.375343322753906
    8. ' ' → logprob: -16.375343322753906
    9. ',self' → logprob: -17.375343322753906
    10. '‌,' → logprob: -17.750343322753906

Token 91: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005097018554806709
    2. ' self' → logprob: -5.755096912384033
    3. ' ' → logprob: -6.755096912384033
    4. '<|end|>' → logprob: -8.380097389221191
    5. ' other' → logprob: -8.755097389221191
    6. 'self' → logprob: -9.630097389221191
    7. ' )' → logprob: -9.755097389221191
    8. ' 
' → logprob: -9.880097389221191
    9. ' a' → logprob: -10.130097389221191
    10. ')' → logprob: -10.130097389221191

Token 92: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.3133162558078766
    2. '.' → logprob: -1.3133162260055542
    3. 'y' → logprob: -10.313316345214844
    4. ').' → logprob: -11.938316345214844
    5. ')' → logprob: -12.313316345214844
    6. ' .' → logprob: -12.313316345214844
    7. '.x' → logprob: -13.188316345214844
    8. '-' → logprob: -14.188316345214844
    9. '<|end|>' → logprob: -14.438316345214844
    10. '.
' → logprob: -14.938316345214844

Token 93: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0025074053555727005
    2. '-' → logprob: -6.002507209777832
    3. ')' → logprob: -10.877507209777832
    4. ' ' → logprob: -12.752507209777832
    5. ' -
' → logprob: -12.752507209777832
    6. ' )' → logprob: -12.877507209777832
    7. '-)' → logprob: -13.127507209777832
    8. '<|end|>' → logprob: -13.252507209777832
    9. ' ' → logprob: -14.752507209777832
    10. ' -

' → logprob: -15.627507209777832

Token 94: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.47407805919647217
    2. 'other' → logprob: -0.9740780591964722
    3. '(other' → logprob: -14.599078178405762
    4. 'Other' → logprob: -15.224078178405762
    5. '.other' → logprob: -15.349078178405762
    6. '_other' → logprob: -15.724078178405762
    7. ' ' → logprob: -17.474077224731445
    8. ')' → logprob: -17.599077224731445
    9. '<|end|>' → logprob: -17.849077224731445
    10. ' Other' → logprob: -19.224077224731445

Token 95: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.16457070410251617
    2. '-' → logprob: -2.1645708084106445
    3. ')' → logprob: -3.4145708084106445
    4. '.' → logprob: -6.1645708084106445
    5. ' -' → logprob: -6.5395708084106445
    6. 'y' → logprob: -8.539570808410645
    7. '-)' → logprob: -8.914570808410645
    8. '-y' → logprob: -10.039570808410645
    9. '<|end|>' → logprob: -10.414570808410645
    10. '.x' → logprob: -10.664570808410645

Token 96: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.541112427134067e-05
    2. ')
' → logprob: -9.500075340270996
    3. ')

' → logprob: -15.375075340270996
    4. ' )' → logprob: -15.750075340270996
    5. ')return' → logprob: -16.750076293945312
    6. '<|end|>' → logprob: -17.375076293945312
    7. '),' → logprob: -17.875076293945312
    8. '   ' → logprob: -18.375076293945312
    9. ')`' → logprob: -18.625076293945312
    10. '       ' → logprob: -19.250076293945312

Token 97: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19366304576396942
    2. '   ' → logprob: -1.8186630010604858
    3. '<|end|>' → logprob: -4.693663120269775
    4. '    
' → logprob: -6.068663120269775
    5. '```' → logprob: -6.818663120269775
    6. ' 
' → logprob: -7.943663120269775
    7. ' ' → logprob: -8.443662643432617
    8. '

' → logprob: -8.693662643432617
    9. '  
' → logprob: -9.443662643432617
    10. '<|end|>' → logprob: -9.693662643432617

Token 98: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024619951844215393
    2. 'def' (adapté à ' def') → logprob: -4.774620056152344
    3. '
' → logprob: -5.024620056152344
    4. ' ' → logprob: -5.899620056152344
    5. '    
' → logprob: -5.899620056152344
    6. ' def' → logprob: -6.649620056152344
    7. ' 
' → logprob: -7.024620056152344
    8. '```' → logprob: -7.774620056152344
    9. '  
' → logprob: -8.024620056152344
    10. '  ' → logprob: -8.524620056152344

Token 99: ' length' (ID: 5517)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3669701814651489
    2. ' ' → logprob: -1.241970181465149
    3. ' `' → logprob: -5.366970062255859
    4. ' ' → logprob: -5.491970062255859
    5. '+' → logprob: -6.366970062255859
    6. '.' → logprob: -6.616970062255859
    7. ')' → logprob: -6.741970062255859
    8. '__' → logprob: -6.741970062255859
    9. '_' → logprob: -6.866970062255859
    10. ' .' → logprob: -7.616970062255859

Token 100: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9642201662063599
    2. '(self' → logprob: -0.9642201662063599
    3. '(' → logprob: -1.4642201662063599
    4. '(
' → logprob: -5.21422004699707
    5. '()(' → logprob: -9.08922004699707
    6. ' ()' → logprob: -9.21422004699707
    7. '_squared' → logprob: -9.21422004699707
    8. ' (' → logprob: -9.33922004699707
    9. '(

' → logprob: -9.33922004699707
    10. 'self' → logprob: -10.08922004699707

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7754257321357727
    2. '()' → logprob: -0.7754257321357727
    3. '())' → logprob: -2.775425672531128
    4. '():' → logprob: -4.275425910949707
    5. '):' → logprob: -7.400425910949707
    6. '(' → logprob: -7.900425910949707
    7. ' )' → logprob: -8.025425910949707
    8. '()
' → logprob: -8.150425910949707
    9. ' ())' → logprob: -8.900425910949707
    10. ' ()' → logprob: -9.025425910949707

Token 102: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023599375039339066
    2. '(' → logprob: -4.023599147796631
    3. '()' → logprob: -6.148599147796631
    4. '():' → logprob: -6.648599147796631
    5. 'self' → logprob: -7.273599147796631
    6. ')' → logprob: -7.523599147796631
    7. ':' → logprob: -8.148599624633789
    8. ' ->' → logprob: -8.398599624633789
    9. '->' → logprob: -9.023599624633789
    10. '(
' → logprob: -10.273599624633789

Token 103: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.03992363065481186
    2. ' math' → logprob: -3.289923667907715
    3. 'float' → logprob: -6.289923667907715
    4. 'math' → logprob: -11.289923667907715
    5. ' ' → logprob: -11.664923667907715
    6. ' ' → logprob: -13.164923667907715
    7. '(float' → logprob: -13.414923667907715
    8. '<float' → logprob: -15.664923667907715
    9. ' (' → logprob: -15.914923667907715
    10. ' int' → logprob: -16.0399227142334

Token 104: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1302852630615234
    2. '(' → logprob: -1.2552852630615234
    3. ':' → logprob: -1.5052852630615234
    4. '():' → logprob: -1.8802852630615234
    5. '()' → logprob: -4.755285263061523
    6. '(
' → logprob: -5.255285263061523
    7. 'self' → logprob: -6.630285263061523
    8. ')' → logprob: -7.380285263061523
    9. '<|end|>' → logprob: -7.630285263061523
    10. '):' → logprob: -7.880285263061523

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08543755859136581
    2. ' math' → logprob: -2.835437536239624
    3. ' return' → logprob: -3.960437536239624
    4. 'return' → logprob: -6.335437774658203
    5. 'math' → logprob: -6.335437774658203
    6. ' self' → logprob: -8.585437774658203
    7. '    ' → logprob: -9.460437774658203
    8. '   ' → logprob: -9.710437774658203
    9. '(math' → logprob: -9.710437774658203
    10. 'self' → logprob: -9.960437774658203

Token 106: ' return' (ID: 622)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.1379929482936859
    2. ' math' → logprob: -2.6379928588867188
    3. 'return' (adapté à ' return') → logprob: -2.8879928588867188
    4. ' return' → logprob: -6.887992858886719
    5. 'import' → logprob: -7.762992858886719
    6. '(math' → logprob: -8.387992858886719
    7. '       ' → logprob: -10.762992858886719
    8. '   ' → logprob: -12.137992858886719
    9. ' (' → logprob: -14.012992858886719
    10. 'Math' → logprob: -14.512992858886719

Token 107: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0003361774142831564
    2. 'math' → logprob: -8.750336647033691
    3. '(math' → logprob: -8.875336647033691
    4. ' (' → logprob: -10.250336647033691
    5. ' ' → logprob: -13.500336647033691
    6. ' ' → logprob: -14.000336647033691
    7. '(' → logprob: -16.375335693359375
    8. '.math' → logprob: -17.750335693359375
    9. ' m' → logprob: -17.875335693359375
    10. ' self' → logprob: -18.000335693359375

Token 108: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0411406010389328
    2. '.' → logprob: -3.291140556335449
    3. '.h' → logprob: -5.791140556335449
    4. '.s' → logprob: -10.41614055633545
    5. '.Sqrt' → logprob: -12.16614055633545
    6. '.atan' → logprob: -13.29114055633545
    7. '.square' → logprob: -13.91614055633545
    8. ' .' → logprob: -14.41614055633545
    9. '.dist' → logprob: -14.66614055633545
    10. '.pow' → logprob: -15.04114055633545

Token 109: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.26019930839538574
    2. 'sqrt' → logprob: -1.5101993083953857
    3. '.sqrt' → logprob: -5.135199546813965
    4. 'hyp' → logprob: -6.760199546813965
    5. 'ath' → logprob: -6.885199546813965
    6. 's' → logprob: -10.135199546813965
    7. 'at' → logprob: -10.510199546813965
    8. ' sqrt' → logprob: -10.760199546813965
    9. 'e' → logprob: -11.135199546813965
    10. 'y' → logprob: -11.385199546813965

Token 110: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.00017541198758408427
    2. 'o' → logprob: -8.750175476074219
    3. 'otp' → logprob: -12.625175476074219
    4. 'otl' → logprob: -12.750175476074219
    5. 'otlin' → logprob: -13.125175476074219
    6. 'at' → logprob: -13.125175476074219
    7. '```' → logprob: -13.375175476074219
    8. ' ot' → logprob: -13.750175476074219
    9. '2' → logprob: -13.875175476074219
    10. 'sqrt' → logprob: -14.125175476074219

Token 111: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00671584764495492
    2. '(' → logprob: -5.006715774536133
    3. '(
' → logprob: -15.256715774536133
    4. ' (' → logprob: -15.506715774536133
    5. '(

' → logprob: -18.006715774536133
    6. '(s' → logprob: -18.256715774536133
    7. '(this' → logprob: -18.631715774536133
    8. 'self' → logprob: -19.256715774536133
    9. '((' → logprob: -19.506715774536133
    10. ' ' → logprob: -19.881715774536133

Token 112: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.019470850005745888
    2. '.' → logprob: -4.019470691680908
    3. ' .' → logprob: -6.644470691680908
    4. ' ' → logprob: -11.894471168518066
    5. ').' → logprob: -11.894471168518066
    6. '.s' → logprob: -12.894471168518066
    7. ',' → logprob: -13.644471168518066
    8. '.y' → logprob: -14.644471168518066
    9. '`.' → logprob: -15.019471168518066
    10. ')' → logprob: -15.519471168518066

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010581758106127381
    2. ' ,' → logprob: -6.876058101654053
    3. ',self' → logprob: -10.626058578491211
    4. ',
' → logprob: -14.626058578491211
    5. 'self' → logprob: -14.751058578491211
    6. ',

' → logprob: -16.25105857849121
    7. ')' → logprob: -16.25105857849121
    8. ' ' → logprob: -17.00105857849121
    9. ',y' → logprob: -17.12605857849121
    10. ' self' → logprob: -18.00105857849121

Token 114: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.201437309384346
    2. ' self' → logprob: -1.7014373540878296
    3. '<|end|>' → logprob: -11.701436996459961
    4. '	self' → logprob: -12.076436996459961
    5. ' ' → logprob: -12.451436996459961
    6. '(self' → logprob: -12.576436996459961
    7. '       ' → logprob: -13.451436996459961
    8. '[self' → logprob: -14.701436996459961
    9. '=self' → logprob: -15.826436996459961
    10. '   ' → logprob: -15.951436996459961

Token 115: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.002029277151450515
    2. '.' → logprob: -6.3770294189453125
    3. 'y' → logprob: -8.127029418945312
    4. ')' → logprob: -10.752029418945312
    5. ' y' → logprob: -12.127029418945312
    6. ' .' → logprob: -13.377029418945312
    7. ',y' → logprob: -13.752029418945312
    8. ',' → logprob: -14.377029418945312
    9. '	y' → logprob: -14.752029418945312
    10. ')y' → logprob: -15.127029418945312

Token 116: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -15.625001907348633
    4. ')return' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.625001907348633
    6. ')

' → logprob: -17.875001907348633
    7. '()' → logprob: -18.000001907348633
    8. '))' → logprob: -18.250001907348633
    9. '())' → logprob: -18.375001907348633
    10. '}' → logprob: -18.375001907348633

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14241577684879303
    2. '
' → logprob: -2.142415761947632
    3. '    
' → logprob: -5.017416000366211
    4. '<|end|>' → logprob: -6.017416000366211
    5. '```' → logprob: -6.142416000366211
    6. '  
' → logprob: -7.017416000366211
    7. ' ' → logprob: -7.517416000366211
    8. '\n' → logprob: -7.517416000366211
    9. ' 
' → logprob: -7.767416000366211
    10. '  ' → logprob: -7.767416000366211

Token 118: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0018279805080965161
    2. '   ' → logprob: -6.751828193664551
    3. '@property' → logprob: -7.501828193664551
    4. ' def' → logprob: -9.25182819366455
    5. '@' → logprob: -12.00182819366455
    6. '    
' → logprob: -13.25182819366455
    7. '	def' → logprob: -14.75182819366455
    8. ' ' → logprob: -15.00182819366455
    9. '```' → logprob: -15.12682819366455
    10. '
' → logprob: -16.251827239990234

Token 119: ' normalize' (ID: 44464)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.817977786064148
    2. ' ' → logprob: -0.942977786064148
    3. ' normalized' → logprob: -3.0679779052734375
    4. ' normalize' → logprob: -3.3179779052734375
    5. ' __' → logprob: -3.4429779052734375
    6. ' dot' → logprob: -3.6929779052734375
    7. '_' → logprob: -4.8179779052734375
    8. ' `' → logprob: -5.4429779052734375
    9. ' .' → logprob: -5.5679779052734375
    10. ' ' → logprob: -5.8179779052734375

Token 120: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04902468994259834
    2. '()' → logprob: -3.6740245819091797
    3. '(' → logprob: -3.7990245819091797
    4. ' (' → logprob: -10.17402458190918
    5. 'self' → logprob: -11.17402458190918
    6. '(
' → logprob: -12.42402458190918
    7. '()(' → logprob: -12.42402458190918
    8. ' ' → logprob: -12.67402458190918
    9. ' ()' → logprob: -12.67402458190918
    10. '(s' → logprob: -12.92402458190918

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026280203834176064
    2. '()' → logprob: -4.401280403137207
    3. '(self' → logprob: -5.026280403137207
    4. '):' → logprob: -5.151280403137207
    5. '())' → logprob: -7.526280403137207
    6. '():' → logprob: -8.401280403137207
    7. 'self' → logprob: -8.651280403137207
    8. '(' → logprob: -8.776280403137207
    9. ' )' → logprob: -9.276280403137207
    10. ' ' → logprob: -10.026280403137207

Token 122: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006199076771736145
    2. '(' → logprob: -6.131198883056641
    3. ' ->' → logprob: -6.506198883056641
    4. 'self' → logprob: -6.881198883056641
    5. ':' → logprob: -7.506198883056641
    6. '->' → logprob: -7.756198883056641
    7. '       ' → logprob: -8.75619888305664
    8. '   ' → logprob: -9.13119888305664
    9. ')' → logprob: -9.50619888305664
    10. ' (' → logprob: -9.63119888305664

Token 123: ' '' (ID: 461)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.2852027416229248
    2. ' Vector' → logprob: -1.6602027416229248
    3. 'self' → logprob: -3.535202741622925
    4. ' self' → logprob: -4.285202980041504
    5. 'None' → logprob: -4.785202980041504
    6. ' None' → logprob: -5.910202980041504
    7. '()' → logprob: -6.160202980041504
    8. '(Vector' → logprob: -7.160202980041504
    9. '   ' → logprob: -8.285202980041504
    10. ' (' → logprob: -8.535202980041504

Token 124: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0008074867073446512
    2. ' Vector' → logprob: -7.125807285308838
    3. '	Vector' → logprob: -13.750807762145996
    4. '_Vector' → logprob: -14.250807762145996
    5. '<Vector' → logprob: -14.625807762145996
    6. '_vector' → logprob: -15.250807762145996
    7. '(Vector' → logprob: -15.500807762145996
    8. 'vector' → logprob: -15.875807762145996
    9. ' ' → logprob: -16.25080680847168
    10. '.Vector' → logprob: -16.37580680847168

Token 125: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.50000286102295
    3. 'Vector' → logprob: -14.12500286102295
    4. ' ' → logprob: -15.25000286102295
    5. '       ' → logprob: -15.87500286102295
    6. '```' → logprob: -16.875001907348633
    7. '  ' → logprob: -18.125001907348633
    8. '    ' → logprob: -18.250001907348633
    9. '<Vector' → logprob: -18.500001907348633
    10. '[' → logprob: -18.750001907348633

Token 126: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.1994775377388578e-05
    2. 'Vector' → logprob: -11.500012397766113
    3. '2' → logprob: -14.875012397766113
    4. ' D' → logprob: -15.125012397766113
    5. '<|end|>' → logprob: -15.125012397766113
    6. 'vector' → logprob: -15.375012397766113
    7. 'Dto' → logprob: -16.500011444091797
    8. '<D' → logprob: -16.500011444091797
    9. '
' → logprob: -16.625011444091797
    10. ')' → logprob: -17.000011444091797

Token 127: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.006002386566251516
    2. ''' → logprob: -6.256002426147461
    3. '()' → logprob: -6.256002426147461
    4. '':
' → logprob: -6.881002426147461
    5. '():' → logprob: -7.131002426147461
    6. '(self' → logprob: -9.006002426147461
    7. '():
' → logprob: -9.506002426147461
    8. '(':' → logprob: -10.256002426147461
    9. ':' → logprob: -11.006002426147461
    10. '('' → logprob: -11.006002426147461

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009517362341284752
    2. '
' → logprob: -5.134517192840576
    3. ' 
' → logprob: -5.884517192840576
    4. ' return' → logprob: -7.759517192840576
    5. '        
' → logprob: -9.259517669677734
    6. '        ' → logprob: -9.384517669677734
    7. ')' → logprob: -10.384517669677734
    8. '  
' → logprob: -10.509517669677734
    9. ' x' → logprob: -11.134517669677734
    10. ',' → logprob: -11.384517669677734

Token 129: ' l' (ID: 305)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.21875452995300293
    2. ' length' → logprob: -1.968754529953003
    3. 'len' → logprob: -3.843754529953003
    4. '       ' → logprob: -4.968754768371582
    5. 'if' → logprob: -5.218754768371582
    6. ' if' → logprob: -5.343754768371582
    7. ' l' → logprob: -5.468754768371582
    8. 'l' (adapté à ' l') → logprob: -5.718754768371582
    9. '   ' → logprob: -5.843754768371582
    10. ' len' → logprob: -6.218754768371582

Token 130: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.8683109283447266
    2. 'ength' → logprob: -0.8683109283447266
    3. ' =' → logprob: -1.9933109283447266
    4. '=' → logprob: -3.7433109283447266
    5. 'eng' → logprob: -7.993310928344727
    6. 'e' → logprob: -8.118310928344727
    7. 'engt' → logprob: -9.243310928344727
    8. '_' → logprob: -11.993310928344727
    9. '   ' → logprob: -12.493310928344727
    10. 'et' → logprob: -12.743310928344727

Token 131: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31326213479042053
    2. 'self' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.313261985778809
    4. '	self' → logprob: -15.938261985778809
    5. '(self' → logprob: -16.813262939453125
    6. '1' → logprob: -17.313262939453125
    7. 's' → logprob: -17.313262939453125
    8. '=self' → logprob: -17.688262939453125
    9. 'elf' → logprob: -18.438262939453125
    10. ' ' → logprob: -18.688262939453125

Token 132: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.002494683489203453
    2. '.' → logprob: -6.002494812011719
    3. 'length' → logprob: -11.502494812011719
    4. ' .' → logprob: -12.627494812011719
    5. 'ength' → logprob: -12.877494812011719
    6. ' length' → logprob: -13.627494812011719
    7. '.len' → logprob: -14.502494812011719
    8. '.LENGTH' → logprob: -15.127494812011719
    9. '.Length' → logprob: -15.127494812011719
    10. '	length' → logprob: -15.502494812011719

Token 133: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2519488036632538
    2. '()' → logprob: -1.5019488334655762
    3. '()
' → logprob: -11.251948356628418
    4. '()

' → logprob: -12.376948356628418
    5. '       ' → logprob: -13.376948356628418
    6. ' ()
' → logprob: -14.876948356628418
    7. '()\' → logprob: -15.501948356628418
    8. '()`' → logprob: -16.001949310302734
    9. 'if' → logprob: -16.751949310302734
    10. ' ()' → logprob: -17.001949310302734

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03583208844065666
    2. '
' → logprob: -3.910832166671753
    3. ' if' → logprob: -4.285831928253174
    4. 'if' → logprob: -7.035831928253174
    5. '        
' → logprob: -9.160832405090332
    6. '   ' → logprob: -9.785832405090332
    7. '\n' → logprob: -10.160832405090332
    8. ',' → logprob: -10.285832405090332
    9. ' or' → logprob: -10.410832405090332
    10. ' ' → logprob: -10.410832405090332

Token 135: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6578489542007446
    2. 'return' → logprob: -1.5328489542007446
    3. 'if' (adapté à ' if') → logprob: -2.157848834991455
    4. ' return' → logprob: -2.282848834991455
    5. '       ' → logprob: -3.032848834991455
    6. '        ' → logprob: -8.407849311828613
    7. '
' → logprob: -9.907849311828613
    8. ' 
' → logprob: -10.282849311828613
    9. 'self' → logprob: -10.657849311828613
    10. '        
' → logprob: -11.157849311828613

Token 136: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.001170460251159966
    2. 'l' → logprob: -6.751170635223389
    3. ' ' → logprob: -16.251171112060547
    4. '	l' → logprob: -16.876171112060547
    5. ' ' → logprob: -17.251171112060547
    6. ' not' → logprob: -17.376171112060547
    7. '   ' → logprob: -17.876171112060547
    8. '0' → logprob: -18.126171112060547
    9. ' л' → logprob: -18.501171112060547
    10. '    ' → logprob: -19.251171112060547

Token 137: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1165170818567276
    2. '==' → logprob: -2.2415170669555664
    3. ' >' → logprob: -5.741517066955566
    4. '>' → logprob: -8.241517066955566
    5. ' !=' → logprob: -8.991517066955566
    6. '=' → logprob: -9.616517066955566
    7. '!=' → logprob: -11.491517066955566
    8. '0' → logprob: -12.866517066955566
    9. ' ' → logprob: -12.991517066955566
    10. ' =' → logprob: -13.116517066955566

Token 138: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993654370307922
    2. ' ' → logprob: -2.694936513900757
    3. ' ' → logprob: -16.319936752319336
    4. '
' → logprob: -17.444936752319336
    5. '  ' → logprob: -17.569936752319336
    6. ' 
' → logprob: -18.069936752319336
    7. '۰' → logprob: -18.132436752319336
    8. '```' → logprob: -18.382436752319336
    9. '1' → logprob: -18.507436752319336
    10. '

' → logprob: -18.569936752319336

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '۰' → logprob: -17.87747573852539
    4. ' ' → logprob: -18.12747573852539
    5. '

' → logprob: -18.25247573852539
    6. '  ' → logprob: -18.25247573852539
    7. '1' → logprob: -18.75247573852539
    8. '
' → logprob: -19.00247573852539
    9. '```' → logprob: -19.50247573852539
    10. '   ' → logprob: -19.56497573852539

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5761392116546631
    2. ':
' → logprob: -0.8261392116546631
    3. ':return' → logprob: -8.576139450073242
    4. ' or' → logprob: -12.326139450073242
    5. ' :
' → logprob: -12.701139450073242
    6. ' :' → logprob: -13.326139450073242
    7. ':

' → logprob: -13.951139450073242
    8. '):
' → logprob: -14.826139450073242
    9. ':
' → logprob: -14.951139450073242
    10. '):' → logprob: -16.576139450073242

Token 141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6962639093399048
    2. '       ' → logprob: -1.1962639093399048
    3. ' return' → logprob: -2.1962637901306152
    4. '
' → logprob: -2.6962637901306152
    5. 'return' → logprob: -4.071263790130615
    6. '0' → logprob: -7.196263790130615
    7. ' 
' → logprob: -7.446263790130615
    8. ':return' → logprob: -7.571263790130615
    9. '   ' → logprob: -8.196264266967773
    10. ':
' → logprob: -8.321264266967773

Token 142: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006152750458568335
    2. ' return' → logprob: -5.131152629852295
    3. '       ' → logprob: -9.131153106689453
    4. 'raise' → logprob: -10.256153106689453
    5. 'self' → logprob: -10.381153106689453
    6. '           ' → logprob: -10.506153106689453
    7. '
' → logprob: -11.131153106689453
    8. '```' → logprob: -13.506153106689453
    9. '	return' → logprob: -13.756153106689453
    10. ' raise' → logprob: -13.881153106689453

Token 143: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.26884016394615173
    2. ' Vector' → logprob: -1.5188401937484741
    3. 'self' → logprob: -4.268840312957764
    4. ' self' → logprob: -5.893840312957764
    5. '	Vector' → logprob: -12.018839836120605
    6. ' ' → logprob: -12.643839836120605
    7. '  ' → logprob: -13.018839836120605
    8. '_Vector' → logprob: -14.143839836120605
    9. 'Vec' → logprob: -14.393839836120605
    10. '   ' → logprob: -14.768839836120605

Token 144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. 'Vector' → logprob: -14.125000953674316
    3. '0' → logprob: -15.375000953674316
    4. ' ' → logprob: -16.875001907348633
    5. '       ' → logprob: -17.625001907348633
    6. '(Vector' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.000001907348633
    8. ' Vector' → logprob: -18.375001907348633
    9. '```' → logprob: -18.375001907348633
    10. '(' → logprob: -18.750001907348633

Token 145: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0005240809405222535
    2. '2' → logprob: -7.625524044036865
    3. 'Vector' → logprob: -10.250524520874023
    4. '0' → logprob: -15.625524520874023
    5. '_D' → logprob: -15.750524520874023
    6. '.Vector' → logprob: -17.250524520874023
    7. 'DC' → logprob: -17.500524520874023
    8. ' D' → logprob: -17.750524520874023
    9. 'vector' → logprob: -17.875524520874023
    10. '(Vector' → logprob: -17.875524520874023

Token 146: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00041613372741267085
    2. '0' → logprob: -8.000415802001953
    3. '(self' → logprob: -9.500415802001953
    4. ' (' → logprob: -12.250415802001953
    5. '(
' → logprob: -14.375415802001953
    6. 'self' → logprob: -14.625415802001953
    7. ' ' → logprob: -17.125415802001953
    8. '```' → logprob: -17.875415802001953
    9. '   ' → logprob: -18.250415802001953
    10. ' self' → logprob: -19.250415802001953

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'self' → logprob: -14.75001335144043
    4. '   ' → logprob: -17.12501335144043
    5. '  ' → logprob: -17.50001335144043
    6. '
' → logprob: -18.62501335144043
    7. '```' → logprob: -18.75001335144043
    8. '۰' → logprob: -19.25001335144043
    9. '０' → logprob: -19.68751335144043
    10. '    ' → logprob: -19.75001335144043

Token 148: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003209799760952592
    2. '.' → logprob: -5.753209590911865
    3. ' ,' → logprob: -10.378210067749023
    4. '0' → logprob: -15.378210067749023
    5. ' ' → logprob: -15.378210067749023
    6. ')' → logprob: -15.628210067749023
    7. ',
' → logprob: -15.753210067749023
    8. '.,' → logprob: -16.503210067749023
    9. '```' → logprob: -17.253210067749023
    10. ',

' → logprob: -18.128210067749023

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. ',' → logprob: -20.125
    4. ')' → logprob: -20.625
    5. '```' → logprob: -21.625
    6. ' 
' → logprob: -23.0
    7. '  ' → logprob: -23.25
    8. '
' → logprob: -23.625
    9. '   ' → logprob: -23.875
    10. '.' → logprob: -23.875

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.236549335066229e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',
' → logprob: -14.625021934509277
    4. '0' → logprob: -16.000022888183594
    5. ')' → logprob: -16.625022888183594
    6. ',

' → logprob: -17.000022888183594
    7. ' ' → logprob: -17.750022888183594
    8. ',float' → logprob: -18.000022888183594
    9. ',self' → logprob: -18.250022888183594
    10. '‌,' → logprob: -18.625022888183594

Token 151: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02630099281668663
    2. ' ' → logprob: -3.6513009071350098
    3. '   ' → logprob: -15.151301383972168
    4. '  ' → logprob: -15.401301383972168
    5. ' ' → logprob: -16.65130043029785
    6. '    ' → logprob: -17.15130043029785
    7. ')' → logprob: -17.58880043029785
    8. '
' → logprob: -17.96380043029785
    9. '```' → logprob: -18.21380043029785
    10. '	' → logprob: -18.21380043029785

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '  ' → logprob: -19.125017166137695
    4. '   ' → logprob: -19.375017166137695
    5. ')' → logprob: -20.000017166137695
    6. '
' → logprob: -20.375017166137695
    7. '۰' → logprob: -20.875017166137695
    8. '```' → logprob: -21.125017166137695
    9. '    ' → logprob: -21.375017166137695
    10. '

' → logprob: -22.187517166137695

Token 153: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00012439649435691535
    2. '0' → logprob: -9.625123977661133
    3. ')' → logprob: -9.750123977661133
    4. ',' → logprob: -17.625123977661133
    5. ')
' → logprob: -18.125123977661133
    6. '.)' → logprob: -18.125123977661133
    7. ' ' → logprob: -18.625123977661133
    8. '.
' → logprob: -18.875123977661133
    9. '00' → logprob: -19.250123977661133
    10. '2' → logprob: -19.250123977661133

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ')' → logprob: -19.5
    3. '```' → logprob: -19.75
    4. ' ' → logprob: -20.375
    5. '   ' → logprob: -21.5
    6. '۰' → logprob: -22.0625
    7. '  ' → logprob: -22.3125
    8. ')
' → logprob: -22.5
    9. '    ' → logprob: -22.875
    10. '``' → logprob: -23.0625

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25412848591804504
    2. ')
' → logprob: -1.5041284561157227
    3. '       ' → logprob: -6.129128456115723
    4. ')
' → logprob: -11.629128456115723
    5. '   ' → logprob: -12.629128456115723
    6. ' )
' → logprob: -12.754128456115723
    7. ')

' → logprob: -13.504128456115723
    8. ' )' → logprob: -13.504128456115723
    9. ')`
' → logprob: -16.00412940979004
    10. ')\
' → logprob: -16.25412940979004

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00048596507986076176
    2. '        
' → logprob: -8.000486373901367
    3. '
' → logprob: -9.125486373901367
    4. '    
' → logprob: -10.875486373901367
    5. '   ' → logprob: -11.500486373901367
    6. '  
' → logprob: -12.500486373901367
    7. '       
' → logprob: -13.625486373901367
    8. 'return' → logprob: -13.875486373901367
    9. '   
' → logprob: -14.000486373901367
    10. '	' → logprob: -14.125486373901367

Token 157: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23897069692611694
    2. ' return' → logprob: -1.8639707565307617
    3. 'return' (adapté à ' return') → logprob: -2.8639707565307617
    4. '   ' → logprob: -8.238970756530762
    5. '        
' → logprob: -9.863970756530762
    6. ' /' → logprob: -10.363970756530762
    7. '
' → logprob: -10.738970756530762
    8. ' ' → logprob: -10.863970756530762
    9. ' 
' → logprob: -11.238970756530762
    10. '	return' → logprob: -11.488970756530762

Token 158: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.1269323080778122
    2. ' Vector' → logprob: -2.126932382583618
    3. '   ' → logprob: -13.376932144165039
    4. '	Vector' → logprob: -13.376932144165039
    5. ' ' → logprob: -14.626932144165039
    6. '  ' → logprob: -15.126932144165039
    7. 'self' → logprob: -15.376932144165039
    8. '(Vector' → logprob: -16.62693214416504
    9. ' self' → logprob: -17.12693214416504
    10. '_Vector' → logprob: -17.12693214416504

Token 159: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'Vector' → logprob: -17.875
    3. '(Vector' → logprob: -19.375
    4. '.Vector' → logprob: -21.0
    5. '(' → logprob: -21.25
    6. '   ' → logprob: -21.375
    7. '       ' → logprob: -21.75
    8. 'To' → logprob: -22.0
    9. ' ' → logprob: -22.25
    10. '۲' → logprob: -22.75

Token 160: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0002251125843031332
    2. '2' → logprob: -8.750225067138672
    3. 'Vector' → logprob: -9.750225067138672
    4. '(' → logprob: -12.250225067138672
    5. '(Vector' → logprob: -12.875225067138672
    6. 'o' → logprob: -15.875225067138672
    7. 'V' → logprob: -15.875225067138672
    8. 'd' → logprob: -16.125225067138672
    9. '(D' → logprob: -16.125225067138672
    10. '0' → logprob: -16.375225067138672

Token 161: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033581978641450405
    2. '(' → logprob: -8.000335693359375
    3. '(
' → logprob: -15.250335693359375
    4. '(s' → logprob: -16.000335693359375
    5. 'self' → logprob: -17.625335693359375
    6. ' (' → logprob: -18.250335693359375
    7. '((' → logprob: -18.500335693359375
    8. '(sel' → logprob: -19.125335693359375
    9. '(

' → logprob: -19.625335693359375
    10. '(this' → logprob: -20.750335693359375

Token 162: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.2015824317932129
    2. '.' → logprob: -1.701582431793213
    3. ' .' → logprob: -8.701581954956055
    4. 'x' → logprob: -13.701581954956055
    5. ').' → logprob: -14.576581954956055
    6. ' ' → logprob: -14.951581954956055
    7. '.s' → logprob: -15.451581954956055
    8. '0' → logprob: -15.576581954956055
    9. '1' → logprob: -16.701581954956055
    10. '.
' → logprob: -16.951581954956055

Token 163: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.00280558317899704
    2. '/' → logprob: -5.877805709838867
    3. ' ' → logprob: -14.502805709838867
    4. ' /
' → logprob: -16.002805709838867
    5. ' ' → logprob: -17.127805709838867
    6. ')' → logprob: -18.377805709838867
    7. '```' → logprob: -19.002805709838867
    8. ' 
' → logprob: -20.377805709838867
    9. '/
' → logprob: -20.502805709838867
    10. 's' → logprob: -20.502805709838867

Token 164: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2014133334159851
    2. 'l' → logprob: -1.7014133930206299
    3. '	l' → logprob: -17.576414108276367
    4. ' ' → logprob: -17.701414108276367
    5. ' ' → logprob: -18.326414108276367
    6. ' л' → logprob: -18.826414108276367
    7. '```' → logprob: -19.701414108276367
    8. '_l' → logprob: -19.826414108276367
    9. 's' → logprob: -20.076414108276367
    10. ',' → logprob: -20.451414108276367

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014013137842994183
    2. ' ,' → logprob: -8.875140190124512
    3. ',
' → logprob: -16.000139236450195
    4. ',self' → logprob: -16.250139236450195
    5. ',

' → logprob: -17.875139236450195
    6. ')' → logprob: -19.625139236450195
    7. '‌,' → logprob: -21.000139236450195
    8. ' ,
' → logprob: -21.375139236450195
    9. ',
' → logprob: -21.750139236450195
    10. '   ' → logprob: -22.125139236450195

Token 166: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12693072855472565
    2. 'self' → logprob: -2.1269307136535645
    3. ' ' → logprob: -13.126931190490723
    4. ' 
' → logprob: -15.001931190490723
    5. '	self' → logprob: -15.626931190490723
    6. ' ' → logprob: -16.626930236816406
    7. '(self' → logprob: -17.001930236816406
    8. '    ' → logprob: -17.876930236816406
    9. '  
' → logprob: -19.001930236816406
    10. '        ' → logprob: -19.251930236816406

Token 167: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.26415935158729553
    2. 'y' → logprob: -1.5141593217849731
    3. '.' → logprob: -4.639159202575684
    4. ' y' → logprob: -6.014159202575684
    5. ' .' → logprob: -10.889159202575684
    6. '	y' → logprob: -11.264159202575684
    7. ' ' → logprob: -11.514159202575684
    8. 'Y' → logprob: -13.889159202575684
    9. ',y' → logprob: -14.264159202575684
    10. '_y' → logprob: -14.264159202575684

Token 168: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.06197183206677437
    2. '/' → logprob: -2.81197190284729
    3. ' ' → logprob: -12.686971664428711
    4. ')' → logprob: -14.186971664428711
    5. ' ' → logprob: -15.936971664428711
    6. '/l' → logprob: -15.936971664428711
    7. '   ' → logprob: -17.06197166442871
    8. ' /
' → logprob: -17.43697166442871
    9. '  ' → logprob: -17.93697166442871
    10. '.' → logprob: -18.43697166442871

Token 169: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.011047814972698689
    2. ' l' → logprob: -4.511047840118408
    3. 'length' → logprob: -17.38604736328125
    4. '	l' → logprob: -18.38604736328125
    5. ' ' → logprob: -18.88604736328125
    6. '   ' → logprob: -19.26104736328125
    7. '_l' → logprob: -19.63604736328125
    8. ')' → logprob: -19.76104736328125
    9. '
' → logprob: -19.88604736328125
    10. 's' → logprob: -20.01104736328125

Token 170: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -13.625000953674316
    3. ' )' → logprob: -16.000001907348633
    4. ')

' → logprob: -16.875001907348633
    5. '),' → logprob: -19.875001907348633
    6. '   ' → logprob: -20.125001907348633
    7. ')return' → logprob: -20.750001907348633
    8. ')}' → logprob: -20.750001907348633
    9. ')`' → logprob: -20.875001907348633
    10. '))' → logprob: -21.250001907348633

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08718104660511017
    2. '<|end|>' → logprob: -2.5871810913085938
    3. ' ' → logprob: -5.337181091308594
    4. '    
' → logprob: -6.962181091308594
    5. '  ' → logprob: -7.212181091308594
    6. ' 
' → logprob: -7.587181091308594
    7. '
' → logprob: -7.962181091308594
    8. ')' → logprob: -7.962181091308594
    9. '    ' → logprob: -8.587181091308594
    10. '  
' → logprob: -8.962181091308594

Token 172: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.0391463193809614e-05
    2. ' def' → logprob: -10.250060081481934
    3. '   ' → logprob: -10.625060081481934
    4. '@property' → logprob: -14.750060081481934
    5. '	def' → logprob: -16.00006103515625
    6. '```' → logprob: -16.62506103515625
    7. '@' → logprob: -17.00006103515625
    8. ' ' → logprob: -17.12506103515625
    9. ')' → logprob: -17.75006103515625
    10. ':def' → logprob: -18.62506103515625

Token 173: ' dot' (ID: 16579)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7242758274078369
    2. ' dot' → logprob: -0.7242758274078369
    3. 'dot' → logprob: -3.974275827407837
    4. '__' → logprob: -4.474275588989258
    5. '_dot' → logprob: -8.349275588989258
    6. ' cross' → logprob: -8.724275588989258
    7. ' def' → logprob: -10.974275588989258
    8. ' ' → logprob: -11.349275588989258
    9. '.dot' → logprob: -12.099275588989258
    10. 'cross' → logprob: -12.349275588989258

Token 174: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007387024816125631
    2. '(self' → logprob: -5.007387161254883
    3. ' (' → logprob: -7.507387161254883
    4. '<|end|>' → logprob: -9.507387161254883
    5. '(
' → logprob: -10.507387161254883
    6. '(other' → logprob: -11.132387161254883
    7. '(

' → logprob: -13.257387161254883
    8. '('' → logprob: -14.257387161254883
    9. '<|end|>' → logprob: -14.757387161254883
    10. '(this' → logprob: -14.757387161254883

Token 175: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08517452329397202
    2. '(self' → logprob: -2.710174560546875
    3. '(other' → logprob: -4.335174560546875
    4. ' (' → logprob: -6.835174560546875
    5. '<|end|>' → logprob: -7.835174560546875
    6. ')' → logprob: -8.335174560546875
    7. '(
' → logprob: -8.710174560546875
    8. 'other' → logprob: -10.335174560546875
    9. ')(' → logprob: -10.585174560546875
    10. '<|end|>' → logprob: -11.460174560546875

Token 176: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.048587486147880554
    2. 'other' → logprob: -3.0485875606536865
    3. '(other' → logprob: -15.798587799072266
    4. 'Other' → logprob: -17.548587799072266
    5. 'self' → logprob: -17.673587799072266
    6. ' self' → logprob: -18.298587799072266
    7. '.other' → logprob: -18.548587799072266
    8. '_other' → logprob: -18.798587799072266
    9. ' ' → logprob: -19.173587799072266
    10. ' oth' → logprob: -19.798587799072266

Token 177: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10991328954696655
    2. ':' → logprob: -2.3599133491516113
    3. ' )' → logprob: -5.359913349151611
    4. '):' → logprob: -5.859913349151611
    5. ',' → logprob: -7.234913349151611
    6. '<|end|>' → logprob: -7.359913349151611
    7. '<|end|>' → logprob: -8.734912872314453
    8. '):
' → logprob: -8.984912872314453
    9. '(self' → logprob: -9.234912872314453
    10. ' ' → logprob: -9.234912872314453

Token 178: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.1850830316543579
    2. ''' → logprob: -2.1850829124450684
    3. ' Vector' → logprob: -3.4350829124450684
    4. 'Vector' → logprob: -4.435082912445068
    5. ')' → logprob: -4.810082912445068
    6. ' ' → logprob: -5.560082912445068
    7. ''s' → logprob: -9.685083389282227
    8. ' vector' → logprob: -9.810083389282227
    9. '<|end|>' → logprob: -9.810083389282227
    10. ' ')' → logprob: -10.060083389282227

Token 179: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.25193464756011963
    2. ' Vector' → logprob: -1.5019346475601196
    3. '	Vector' → logprob: -13.376935005187988
    4. ' vector' → logprob: -13.501935005187988
    5. ' ' → logprob: -13.751935005187988
    6. '_Vector' → logprob: -14.501935005187988
    7. '<Vector' → logprob: -15.126935005187988
    8. '.Vector' → logprob: -15.876935005187988
    9. 'Vectors' → logprob: -16.001934051513672
    10. '  ' → logprob: -16.001934051513672

Token 180: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011152983643114567
    2. 'Vector' → logprob: -9.12511157989502
    3. '   ' → logprob: -13.87511157989502
    4. ')' → logprob: -15.00011157989502
    5. '')' → logprob: -15.50011157989502
    6. '```' → logprob: -15.50011157989502
    7. ' Vector' → logprob: -15.75011157989502
    8. ' ' → logprob: -16.125110626220703
    9. '.Vector' → logprob: -16.250110626220703
    10. '(Vector' → logprob: -16.500110626220703

Token 181: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.023480257019400597
    2. '2' → logprob: -3.773480176925659
    3. 'Vector' → logprob: -8.398480415344238
    4. ''' → logprob: -12.523480415344238
    5. 'vector' → logprob: -12.773480415344238
    6. '')' → logprob: -13.273480415344238
    7. 'V' → logprob: -15.273480415344238
    8. ' D' → logprob: -15.398480415344238
    9. ' Vector' → logprob: -15.648480415344238
    10. ' ' → logprob: -16.023479461669922

Token 182: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.008749425411224365
    2. ')' → logprob: -4.758749485015869
    3. ''):' → logprob: -9.383749008178711
    4. ' ')' → logprob: -10.258749008178711
    5. ''' → logprob: -12.258749008178711
    6. '")' → logprob: -12.383749008178711
    7. ''):
' → logprob: -13.008749008178711
    8. '   ' → logprob: -14.008749008178711
    9. '`)' → logprob: -14.133749008178711
    10. ':' → logprob: -14.258749008178711

Token 183: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005523311905562878
    2. ')->' → logprob: -5.880523204803467
    3. ' ->' → logprob: -6.255523204803467
    4. '->' → logprob: -7.380523204803467
    5. ':' → logprob: -9.255523681640625
    6. ' )' → logprob: -10.380523681640625
    7. ',' → logprob: -11.255523681640625
    8. '):' → logprob: -11.505523681640625
    9. '   ' → logprob: -12.130523681640625
    10. '<|end|>' → logprob: -12.255523681640625

Token 184: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.01815134845674038
    2. 'float' → logprob: -4.01815128326416
    3. '(float' → logprob: -14.01815128326416
    4. '	float' → logprob: -15.14315128326416
    5. '<float' → logprob: -16.018152236938477
    6. '=float' → logprob: -16.143152236938477
    7. ' ' → logprob: -17.268152236938477
    8. ' ' → logprob: -18.018152236938477
    9. '_float' → logprob: -18.143152236938477
    10. 'Float' → logprob: -18.143152236938477

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33552083373069763
    2. '(' → logprob: -1.33552086353302
    3. '(self' → logprob: -4.9605207443237305
    4. ')' → logprob: -5.2105207443237305
    5. '):' → logprob: -5.2105207443237305
    6. ' :' → logprob: -6.4605207443237305
    7. ',' → logprob: -6.9605207443237305
    8. '(
' → logprob: -7.5855207443237305
    9. '.' → logprob: -8.58552074432373
    10. ' (' → logprob: -8.58552074432373

Token 186: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3183141350746155
    2. ' self' → logprob: -1.3183140754699707
    3. 'return' → logprob: -5.818314075469971
    4. ' return' → logprob: -6.193314075469971
    5. '       ' → logprob: -11.443314552307129
    6. '    ' → logprob: -12.193314552307129
    7. ' ' → logprob: -12.818314552307129
    8. '   ' → logprob: -12.943314552307129
    9. ' 
' → logprob: -14.068314552307129
    10. '(self' → logprob: -14.443314552307129

Token 187: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007058938965201378
    2. 'return' (adapté à ' return') → logprob: -5.007059097290039
    3. ' self' → logprob: -8.007059097290039
    4. ' return' → logprob: -11.507059097290039
    5. '       ' → logprob: -15.007059097290039
    6. '(self' → logprob: -17.00705909729004
    7. '   ' → logprob: -17.63205909729004
    8. '
' → logprob: -18.38205909729004
    9. '	self' → logprob: -19.88205909729004
    10. ' ' → logprob: -20.38205909729004

Token 188: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740777611732483
    2. 'self' → logprob: -0.9740777611732483
    3. '(self' → logprob: -14.349078178405762
    4. '	self' → logprob: -16.099077224731445
    5. ' ' → logprob: -17.849077224731445
    6. ' ' → logprob: -17.974077224731445
    7. '_self' → logprob: -18.849077224731445
    8. '[self' → logprob: -18.974077224731445
    9. '$self' → logprob: -19.474077224731445
    10. 'Self' → logprob: -19.849077224731445

Token 189: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.07892228662967682
    2. '.' → logprob: -2.5789222717285156
    3. ' .' → logprob: -10.453922271728516
    4. 'x' → logprob: -12.578922271728516
    5. ' ' → logprob: -16.078922271728516
    6. '.s' → logprob: -16.703922271728516
    7. '.
' → logprob: -18.078922271728516
    8. '.space' → logprob: -18.328922271728516
    9. ' x' → logprob: -18.828922271728516
    10. ').' → logprob: -18.953922271728516

Token 190: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0031786637846380472
    2. '*' → logprob: -5.753178596496582
    3. ' ' → logprob: -13.878178596496582
    4. '*object' → logprob: -18.6281795501709
    5. ' ' → logprob: -19.1281795501709
    6. ' **' → logprob: -20.5031795501709
    7. '**' → logprob: -21.2531795501709
    8. '   ' → logprob: -21.7531795501709
    9. '*self' → logprob: -21.8781795501709
    10. '*out' → logprob: -22.0031795501709

Token 191: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.38687121868133545
    2. ' other' → logprob: -1.1368712186813354
    3. '(other' → logprob: -15.886871337890625
    4. 'Other' → logprob: -17.136871337890625
    5. '_other' → logprob: -17.511871337890625
    6. '.other' → logprob: -18.136871337890625
    7. ' ' → logprob: -20.261871337890625
    8. ' oth' → logprob: -20.261871337890625
    9. 'othe' → logprob: -21.011871337890625
    10. 'OTHER' → logprob: -21.511871337890625

Token 192: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.20147015154361725
    2. '.' → logprob: -1.701470136642456
    3. 'x' → logprob: -10.451470375061035
    4. ' .' → logprob: -10.576470375061035
    5. '.y' → logprob: -14.201470375061035
    6. ' ' → logprob: -14.326470375061035
    7. '.
' → logprob: -14.576470375061035
    8. ' x' → logprob: -15.076470375061035
    9. '.other' → logprob: -16.20146942138672
    10. '`.' → logprob: -16.82646942138672

Token 193: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692831456661224
    2. '+' → logprob: -2.1269283294677734
    3. '+self' → logprob: -15.876928329467773
    4. ' ' → logprob: -16.626928329467773
    5. ' plus' → logprob: -18.126928329467773
    6. ' +
' → logprob: -18.251928329467773
    7. ' ' → logprob: -18.376928329467773
    8. '+
' → logprob: -19.001928329467773
    9. '+y' → logprob: -19.001928329467773
    10. '+b' → logprob: -19.751928329467773

Token 194: ' self' (ID: 1051)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.2252049595117569
    2. ' self' → logprob: -1.7252049446105957
    3. 'other' → logprob: -4.225204944610596
    4. 'self' → logprob: -4.725204944610596
    5. ' ' → logprob: -11.100205421447754
    6. 'Other' → logprob: -12.975205421447754
    7. ' oth' → logprob: -14.225205421447754
    8. '(other' → logprob: -14.350205421447754
    9. '_other' → logprob: -14.850205421447754
    10. '	self' → logprob: -15.975205421447754

Token 195: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.31508252024650574
    2. 'y' → logprob: -1.3150825500488281
    3. '.' → logprob: -6.440082550048828
    4. ' y' → logprob: -8.440082550048828
    5. ' .' → logprob: -13.065082550048828
    6. ' ' → logprob: -13.815082550048828
    7. '.user' → logprob: -13.815082550048828
    8. '	y' → logprob: -14.065082550048828
    9. 'user' → logprob: -14.315082550048828
    10. '<|end|>' → logprob: -14.815082550048828

Token 196: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06197104603052139
    2. '*' → logprob: -2.8119709491729736
    3. ' ' → logprob: -12.936970710754395
    4. ' ' → logprob: -14.686970710754395
    5. '*object' → logprob: -14.811970710754395
    6. '<|end|>' → logprob: -16.43697166442871
    7. '`' → logprob: -16.93697166442871
    8. '**' → logprob: -17.81197166442871
    9. '*out' → logprob: -17.93697166442871
    10. '   ' → logprob: -18.31197166442871

Token 197: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.061969030648469925
    2. ' other' → logprob: -2.811969041824341
    3. '(other' → logprob: -14.061968803405762
    4. 'othe' → logprob: -16.061969757080078
    5. '.other' → logprob: -16.186969757080078
    6. 'Other' → logprob: -16.561969757080078
    7. ' oth' → logprob: -16.686969757080078
    8. ' ' → logprob: -16.811969757080078
    9. 'oth' → logprob: -17.311969757080078
    10. '_other' → logprob: -17.686969757080078

Token 198: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.031081270426511765
    2. 'y' → logprob: -3.531081199645996
    3. '.' → logprob: -6.656081199645996
    4. ' y' → logprob: -11.281081199645996
    5. '	y' → logprob: -11.531081199645996
    6. '*y' → logprob: -12.156081199645996
    7. '<|end|>' → logprob: -12.281081199645996
    8. '*' → logprob: -12.781081199645996
    9. 'Y' → logprob: -13.156081199645996
    10. '_y' → logprob: -13.281081199645996

Token 199: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21033355593681335
    2. '<|end|>' → logprob: -2.0853335857391357
    3. '
' → logprob: -2.8353335857391357
    4. '    
' → logprob: -5.835333347320557
    5. '  ' → logprob: -7.085333347320557
    6. '```' → logprob: -7.585333347320557
    7. ' ' → logprob: -7.710333347320557
    8. ')' → logprob: -7.960333347320557
    9. '\n' → logprob: -7.960333347320557
    10. 'def' → logprob: -8.085333824157715

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035040881484746933
    2. '<|end|>' → logprob: -6.253504276275635
    3. 'def' → logprob: -6.753504276275635
    4. '
' → logprob: -8.378503799438477
    5. '    
' → logprob: -9.628503799438477
    6. '```' → logprob: -10.253503799438477
    7. ' def' → logprob: -11.128503799438477
    8. ')' → logprob: -11.128503799438477
    9. '<|end|>' → logprob: -11.128503799438477
    10. 'class' → logprob: -11.878503799438477

Token 201: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00030841029365547
    2. '   ' → logprob: -8.3753080368042
    3. ' def' → logprob: -9.5003080368042
    4. '	def' → logprob: -13.7503080368042
    5. ')' → logprob: -14.5003080368042
    6. ' ' → logprob: -14.6253080368042
    7. '  ' → logprob: -15.0003080368042
    8. '@property' → logprob: -15.1253080368042
    9. ':def' → logprob: -16.375308990478516
    10. '```' → logprob: -16.500308990478516

Token 202: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.8678099513053894
    2. ' __' → logprob: -1.3678100109100342
    3. 'cross' → logprob: -1.8678100109100342
    4. '__' → logprob: -2.117810010910034
    5. ' def' → logprob: -3.742810010910034
    6. 'angle' → logprob: -4.492809772491455
    7. 'def' → logprob: -5.242809772491455
    8. ' ' → logprob: -5.867809772491455
    9. '_cross' → logprob: -5.867809772491455
    10. ' angle' → logprob: -5.867809772491455

Token 203: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0020930420141667128
    2. '(' → logprob: -6.2520928382873535
    3. ' (' → logprob: -8.877093315124512
    4. '<|end|>' → logprob: -10.752093315124512
    5. '(
' → logprob: -13.752093315124512
    6. '(other' → logprob: -13.877093315124512
    7. '<|end|>' → logprob: -14.502093315124512
    8. 'self' → logprob: -14.877093315124512
    9. ')' → logprob: -15.627093315124512
    10. ',' → logprob: -16.502092361450195

Token 204: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.5473183989524841
    2. '(' → logprob: -0.9223183989524841
    3. ' (' → logprob: -3.797318458557129
    4. '(self' → logprob: -7.672318458557129
    5. ',' → logprob: -7.922318458557129
    6. '<|end|>' → logprob: -8.297318458557129
    7. ')' → logprob: -8.547318458557129
    8. '(
' → logprob: -9.797318458557129
    9. 'other' → logprob: -10.297318458557129
    10. ' ' → logprob: -10.422318458557129

Token 205: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.03804837539792061
    2. 'other' → logprob: -3.288048267364502
    3. ' self' → logprob: -13.03804874420166
    4. 'self' → logprob: -13.03804874420166
    5. '(other' → logprob: -13.41304874420166
    6. 'Other' → logprob: -14.41304874420166
    7. '.other' → logprob: -15.66304874420166
    8. ' ' → logprob: -15.78804874420166
    9. '_other' → logprob: -15.78804874420166
    10. ' Other' → logprob: -19.163047790527344

Token 206: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017051050439476967
    2. ')' → logprob: -4.2670512199401855
    3. '):' → logprob: -6.6420512199401855
    4. ' :' → logprob: -7.3920512199401855
    5. ' (' → logprob: -8.392050743103027
    6. '('' → logprob: -8.517050743103027
    7. '(' → logprob: -9.017050743103027
    8. ',' → logprob: -9.142050743103027
    9. ''' → logprob: -9.517050743103027
    10. ' '' → logprob: -9.642050743103027

Token 207: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.47786709666252136
    2. ''' → logprob: -0.9778671264648438
    3. ' other' → logprob: -6.227867126464844
    4. 'other' → logprob: -7.227867126464844
    5. ''s' → logprob: -7.477867126464844
    6. ' ' → logprob: -8.227867126464844
    7. 'Vector' → logprob: -9.352867126464844
    8. ' Vector' → logprob: -9.477867126464844
    9. ')' → logprob: -10.477867126464844
    10. 'Other' → logprob: -11.727867126464844

Token 208: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0053505669347941875
    2. ' Vector' → logprob: -5.255350589752197
    3. ''' → logprob: -9.255350112915039
    4. ' '' → logprob: -11.505350112915039
    5. '	Vector' → logprob: -12.880350112915039
    6. ' ' → logprob: -13.005350112915039
    7. '<Vector' → logprob: -13.505350112915039
    8. '(Vector' → logprob: -14.005350112915039
    9. '_Vector' → logprob: -14.130350112915039
    10. 'vector' → logprob: -14.505350112915039

Token 209: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5120287066092715e-05
    2. 'D' → logprob: -10.875035285949707
    3. ''' → logprob: -11.500035285949707
    4. 'Vector' → logprob: -12.375035285949707
    5. '')' → logprob: -14.750035285949707
    6. ''D' → logprob: -15.125035285949707
    7. 'V' → logprob: -15.250035285949707
    8. ')' → logprob: -15.250035285949707
    9. '('' → logprob: -15.750035285949707
    10. ' ' → logprob: -15.875035285949707

Token 210: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -2.935296834039036e-06
    2. 'Vector' → logprob: -13.25000286102295
    3. '2' → logprob: -14.00000286102295
    4. 'vector' → logprob: -16.500003814697266
    5. ' D' → logprob: -17.000003814697266
    6. ''' → logprob: -17.375003814697266
    7. '
' → logprob: -17.375003814697266
    8. 'd' → logprob: -17.625003814697266
    9. '('' → logprob: -17.875003814697266
    10. ''D' → logprob: -18.375003814697266

Token 211: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0005089493934065104
    2. ')' → logprob: -7.625508785247803
    3. ''' → logprob: -11.625509262084961
    4. ')'' → logprob: -12.875509262084961
    5. ' ')' → logprob: -12.875509262084961
    6. ''):
' → logprob: -13.000509262084961
    7. ':' → logprob: -13.500509262084961
    8. '")' → logprob: -13.750509262084961
    9. '('' → logprob: -14.125509262084961
    10. ''):' → logprob: -14.375509262084961

Token 212: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4282795786857605
    2. ')' → logprob: -2.4282796382904053
    3. ' ' → logprob: -2.5532796382904053
    4. ' ->' → logprob: -2.5532796382904053
    5. ':' → logprob: -3.1782796382904053
    6. ' (' → logprob: -3.5532796382904053
    7. '   ' → logprob: -4.553279399871826
    8. ',' → logprob: -5.178279399871826
    9. '(self' → logprob: -5.178279399871826
    10. '       ' → logprob: -5.303279399871826

Token 213: ' float' (ID: 4428)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.023314891383051872
    2. 'self' → logprob: -3.773314952850342
    3. '(self' → logprob: -10.148314476013184
    4. ' (' → logprob: -11.148314476013184
    5. ' ' → logprob: -11.523314476013184
    6. ' float' → logprob: -12.523314476013184
    7. '
' → logprob: -14.648314476013184
    8. '	self' → logprob: -14.648314476013184
    9. 'float' → logprob: -15.148314476013184
    10. ' ' → logprob: -15.398314476013184

Token 214: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.062316201627254486
    2. '(' → logprob: -3.5623161792755127
    3. ':' → logprob: -4.187316417694092
    4. ',' → logprob: -5.437316417694092
    5. '       ' → logprob: -5.812316417694092
    6. '   ' → logprob: -5.812316417694092
    7. ' (' → logprob: -6.312316417694092
    8. '(other' → logprob: -6.562316417694092
    9. '=' → logprob: -6.937316417694092
    10. ' =' → logprob: -7.187316417694092

Token 215: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1658678501844406
    2. ' self' → logprob: -1.915867805480957
    3. '       ' → logprob: -5.665867805480957
    4. 'return' → logprob: -6.665867805480957
    5. ' return' → logprob: -7.040867805480957
    6. '   ' → logprob: -11.790867805480957
    7. '(self' → logprob: -11.915867805480957
    8. ' ' → logprob: -13.790867805480957
    9. '	self' → logprob: -13.790867805480957
    10. '```' → logprob: -16.540868759155273

Token 216: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001249877386726439
    2. ' self' → logprob: -7.00124979019165
    3. 'return' (adapté à ' return') → logprob: -8.001250267028809
    4. ' return' → logprob: -13.001250267028809
    5. '(self' → logprob: -13.876250267028809
    6. '   ' → logprob: -16.376249313354492
    7. '	self' → logprob: -17.251249313354492
    8. '
' → logprob: -17.626249313354492
    9. '       ' → logprob: -18.251249313354492
    10. ' ' → logprob: -19.001249313354492

Token 217: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3868733048439026
    2. ' self' → logprob: -1.1368732452392578
    3. '(self' → logprob: -13.136873245239258
    4. '	self' → logprob: -15.636873245239258
    5. '       ' → logprob: -16.511873245239258
    6. '   ' → logprob: -17.636873245239258
    7. 'Self' → logprob: -17.886873245239258
    8. ' ' → logprob: -18.136873245239258
    9. '```' → logprob: -18.261873245239258
    10. '[self' → logprob: -18.511873245239258

Token 218: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -7.719917630311102e-05
    2. '.' → logprob: -9.500077247619629
    3. 'x' → logprob: -13.125077247619629
    4. ' .' → logprob: -15.500077247619629
    5. '.y' → logprob: -19.750076293945312
    6. '.s' → logprob: -19.750076293945312
    7. ').' → logprob: -20.250076293945312
    8. '0' → logprob: -20.500076293945312
    9. '.
' → logprob: -21.000076293945312
    10. 'Vector' → logprob: -21.250076293945312

Token 219: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0003357006062287837
    2. '*' → logprob: -8.000335693359375
    3. ' ' → logprob: -15.500335693359375
    4. '*object' → logprob: -18.875335693359375
    5. ' ' → logprob: -19.875335693359375
    6. ' **' → logprob: -20.750335693359375
    7. '*out' → logprob: -20.875335693359375
    8. '**' → logprob: -20.875335693359375
    9. '*self' → logprob: -21.625335693359375
    10. '.' → logprob: -22.625335693359375

Token 220: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0007099286303855479
    2. ' other' → logprob: -7.2507100105285645
    3. '(other' → logprob: -19.750709533691406
    4. 'Other' → logprob: -20.000709533691406
    5. '.other' → logprob: -21.625709533691406
    6. '_other' → logprob: -22.750709533691406
    7. ' ' → logprob: -23.250709533691406
    8. 'oth' → logprob: -24.875709533691406
    9. 'OTHER' → logprob: -25.125709533691406
    10. 'y' → logprob: -25.250709533691406

Token 221: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.22774064540863037
    2. '.y' → logprob: -1.6027406454086304
    3. '.' → logprob: -6.47774076461792
    4. ' y' → logprob: -7.72774076461792
    5. '*y' → logprob: -8.227740287780762
    6. '*' → logprob: -10.227740287780762
    7. ' *' → logprob: -11.227740287780762
    8. ' .' → logprob: -12.102740287780762
    9. ',y' → logprob: -12.102740287780762
    10. '   ' → logprob: -12.477740287780762

Token 222: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008618239313364029
    2. '-' → logprob: -4.758618354797363
    3. ' ' → logprob: -12.633618354797363
    4. ' ' → logprob: -15.633618354797363
    5. ' -
' → logprob: -16.133617401123047
    6. '        ' → logprob: -16.258617401123047
    7. ',' → logprob: -17.258617401123047
    8. '       ' → logprob: -17.383617401123047
    9. '```' → logprob: -18.008617401123047
    10. '-
' → logprob: -18.258617401123047

Token 223: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018151111900806427
    2. ' self' → logprob: -4.01815128326416
    3. '       ' → logprob: -14.64315128326416
    4. '(self' → logprob: -15.01815128326416
    5. '	self' → logprob: -15.39315128326416
    6. ' ' → logprob: -16.643150329589844
    7. '<|end|>' → logprob: -17.643150329589844
    8. '[self' → logprob: -17.768150329589844
    9. '   ' → logprob: -18.143150329589844
    10. '
' → logprob: -18.393150329589844

Token 224: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.25262120366096497
    2. 'y' → logprob: -1.5026211738586426
    3. 'self' → logprob: -7.627621173858643
    4. '.' → logprob: -9.1276216506958
    5. ' y' → logprob: -9.6276216506958
    6. 'other' → logprob: -11.3776216506958
    7. '1' → logprob: -12.6276216506958
    8. '_y' → logprob: -12.7526216506958
    9. ' ' → logprob: -13.0026216506958
    10. ' self' → logprob: -13.2526216506958

Token 225: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -6.611323624383658e-05
    2. '*' → logprob: -9.625065803527832
    3. '*object' → logprob: -17.00006675720215
    4. ' ' → logprob: -17.75006675720215
    5. '<|end|>' → logprob: -18.87506675720215
    6. '**' → logprob: -20.62506675720215
    7. '*out' → logprob: -21.00006675720215
    8. ' *
' → logprob: -21.25006675720215
    9. 'import' → logprob: -21.87506675720215
    10. '.' → logprob: -22.62506675720215

Token 226: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.005233882926404476
    2. ' other' → logprob: -5.2552337646484375
    3. '(other' → logprob: -16.380233764648438
    4. '.other' → logprob: -18.005233764648438
    5. 'Other' → logprob: -18.755233764648438
    6. '_other' → logprob: -19.755233764648438
    7. ' ' → logprob: -20.380233764648438
    8. '   ' → logprob: -20.880233764648438
    9. '       ' → logprob: -21.630233764648438
    10. 'othe' → logprob: -21.755233764648438

Token 227: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.27099974633893e-05
    2. '.' → logprob: -11.625012397766113
    3. 'x' → logprob: -12.500012397766113
    4. ' .' → logprob: -16.87501335144043
    5. ' x' → logprob: -18.37501335144043
    6. '.y' → logprob: -20.50001335144043
    7. '_x' → logprob: -20.87501335144043
    8. '*' → logprob: -21.00001335144043
    9. '[' → logprob: -21.12501335144043
    10. '{x' → logprob: -21.12501335144043

Token 228: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7672348618507385
    2. '<|end|>' → logprob: -1.1422348022460938
    3. '
' → logprob: -1.6422348022460938
    4. '```' → logprob: -5.017234802246094
    5. ')' → logprob: -5.142234802246094
    6. '    
' → logprob: -5.517234802246094
    7. '\n' → logprob: -6.017234802246094
    8. 'newline' → logprob: -6.767234802246094
    9. '<|end|>' → logprob: -7.267234802246094
    10. '  
' → logprob: -7.517234802246094

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04927108436822891
    2. '<|end|>' → logprob: -3.7992711067199707
    3. '
' → logprob: -4.174271106719971
    4. 'class' → logprob: -5.174271106719971
    5. '```' → logprob: -6.299271106719971
    6. '    
' → logprob: -7.549271106719971
    7. ')' → logprob: -7.549271106719971
    8. ' ' → logprob: -7.799271106719971
    9. 'def' → logprob: -8.174270629882812
    10. '\n' → logprob: -8.674270629882812

Token 230: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0006463141762651503
    2. '   ' → logprob: -7.500646114349365
    3. ' def' → logprob: -9.375646591186523
    4. ')' → logprob: -12.875646591186523
    5. '	def' → logprob: -13.000646591186523
    6. 'class' → logprob: -13.750646591186523
    7. '```' → logprob: -14.500646591186523
    8. '@property' → logprob: -14.875646591186523
    9. '#' → logprob: -15.125646591186523
    10. ' ' → logprob: -15.375646591186523

Token 231: ' angle' (ID: 16538)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.43774813413619995
    2. '__' → logprob: -1.0627481937408447
    3. ' def' → logprob: -5.437747955322266
    4. ' ' → logprob: -6.312747955322266
    5. '_repr' → logprob: -7.062747955322266
    6. '_' → logprob: -7.312747955322266
    7. '_angle' → logprob: -8.312747955322266
    8. ' to' → logprob: -8.937747955322266
    9. '_scaled' → logprob: -9.062747955322266
    10. 'def' → logprob: -9.062747955322266

Token 232: '_to' (ID: 5089)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.35704073309898376
    2. '(' → logprob: -1.2320407629013062
    3. '_to' → logprob: -4.982040882110596
    4. '_between' → logprob: -6.982040882110596
    5. '_' → logprob: -8.107040405273438
    6. ' (' → logprob: -8.482040405273438
    7. '(
' → logprob: -9.607040405273438
    8. '_with' → logprob: -10.107040405273438
    9. 'to' → logprob: -10.607040405273438
    10. 's' → logprob: -10.607040405273438

Token 233: '_right' (ID: 24402)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011215222999453545
    2. '(' → logprob: -4.5112152099609375
    3. ' (' → logprob: -8.886215209960938
    4. '<|end|>' → logprob: -11.261215209960938
    5. '(
' → logprob: -12.011215209960938
    6. 'self' → logprob: -12.011215209960938
    7. '(s' → logprob: -13.136215209960938
    8. '<|end|>' → logprob: -15.011215209960938
    9. ' self' → logprob: -15.511215209960938
    10. '(other' → logprob: -15.511215209960938

Token 234: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005491891410201788
    2. '(' → logprob: -5.255491733551025
    3. '_of' → logprob: -9.630492210388184
    4. 'of' → logprob: -10.005492210388184
    5. ' (' → logprob: -10.005492210388184
    6. '(
' → logprob: -10.505492210388184
    7. '_vector' → logprob: -11.380492210388184
    8. '_hand' → logprob: -11.505492210388184
    9. '_angle' → logprob: -11.630492210388184
    10. '_(' → logprob: -11.630492210388184

Token 235: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5943957567214966
    2. ')(' → logprob: -1.2193957567214966
    3. '(self' → logprob: -1.9693957567214966
    4. ')(
' → logprob: -5.719395637512207
    5. '):' → logprob: -5.969395637512207
    6. '_angle' → logprob: -6.469395637512207
    7. '')(' → logprob: -7.094395637512207
    8. '(' → logprob: -7.469395637512207
    9. ' ' → logprob: -7.844395637512207
    10. '   ' → logprob: -7.969395637512207

Token 236: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.47498318552970886
    2. ' other' → logprob: -1.0999832153320312
    3. 'self' → logprob: -3.3499832153320312
    4. ' self' → logprob: -4.599983215332031
    5. ' ' → logprob: -9.974983215332031
    6. '(other' → logprob: -11.599983215332031
    7. ')' → logprob: -11.974983215332031
    8. 'Other' → logprob: -12.224983215332031
    9. '   ' → logprob: -12.849983215332031
    10. 'to' → logprob: -12.849983215332031

Token 237: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2911806106567383
    2. ')' → logprob: -1.5411806106567383
    3. '):' → logprob: -3.2911806106567383
    4. ' :' → logprob: -7.291180610656738
    5. '):
' → logprob: -9.041180610656738
    6. ' )' → logprob: -9.291180610656738
    7. ' ):' → logprob: -9.291180610656738
    8. '   ' → logprob: -9.916180610656738
    9. '':' → logprob: -10.166180610656738
    10. ',' → logprob: -10.291180610656738

Token 238: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.43596646189689636
    2. ''' → logprob: -1.0609664916992188
    3. ')' → logprob: -5.685966491699219
    4. ''s' → logprob: -5.935966491699219
    5. ' ' → logprob: -7.435966491699219
    6. ' ')' → logprob: -8.935966491699219
    7. '')' → logprob: -9.060966491699219
    8. 'Vector' → logprob: -9.560966491699219
    9. ' )' → logprob: -10.560966491699219
    10. ' Vector' → logprob: -10.685966491699219

Token 239: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0011771318968385458
    2. ' Vector' → logprob: -6.7511773109436035
    3. '')' → logprob: -13.376176834106445
    4. ')' → logprob: -13.376176834106445
    5. '	Vector' → logprob: -13.751176834106445
    6. ''' → logprob: -14.126176834106445
    7. 'vector' → logprob: -15.001176834106445
    8. '_Vector' → logprob: -15.001176834106445
    9. ' ' → logprob: -15.126176834106445
    10. '_vector' → logprob: -15.501176834106445

Token 240: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005328150931745768
    2. 'D' → logprob: -5.255328178405762
    3. 'Vector' → logprob: -9.505328178405762
    4. '   ' → logprob: -12.005328178405762
    5. ')' → logprob: -12.255328178405762
    6. '')' → logprob: -12.505328178405762
    7. '```' → logprob: -14.130328178405762
    8. ' ' → logprob: -14.505328178405762
    9. ''' → logprob: -14.630328178405762
    10. '  ' → logprob: -14.880328178405762

Token 241: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -2.939851037808694e-05
    2. 'Vector' → logprob: -10.875029563903809
    3. '2' → logprob: -12.125029563903809
    4. '')' → logprob: -13.375029563903809
    5. ')' → logprob: -13.875029563903809
    6. 'vector' → logprob: -14.250029563903809
    7. ''' → logprob: -14.250029563903809
    8. ''D' → logprob: -14.500029563903809
    9. ' D' → logprob: -16.125028610229492
    10. '<D' → logprob: -16.625028610229492

Token 242: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0017237268621101975
    2. ')' → logprob: -6.376723766326904
    3. ''' → logprob: -11.251723289489746
    4. '")' → logprob: -13.126723289489746
    5. ' ')' → logprob: -13.251723289489746
    6. ':' → logprob: -13.751723289489746
    7. ''):' → logprob: -14.001723289489746
    8. '',' → logprob: -14.001723289489746
    9. ''):
' → logprob: -14.126723289489746
    10. '`)' → logprob: -14.876723289489746

Token 243: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05973486602306366
    2. ' ->' → logprob: -2.93473482131958
    3. '->' → logprob: -5.80973482131958
    4. ':' → logprob: -6.43473482131958
    5. ' )' → logprob: -9.309735298156738
    6. ')->' → logprob: -9.684735298156738
    7. ' ' → logprob: -10.184735298156738
    8. '   ' → logprob: -10.684735298156738
    9. ',' → logprob: -11.809735298156738
    10. ' :' → logprob: -12.184735298156738

Token 244: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.04873565584421158
    2. 'float' → logprob: -3.0487356185913086
    3. ''' → logprob: -9.548735618591309
    4. ' '' → logprob: -10.423735618591309
    5. ' Optional' → logprob: -10.923735618591309
    6. 'Optional' → logprob: -11.673735618591309
    7. ' ' → logprob: -11.673735618591309
    8. '	float' → logprob: -12.298735618591309
    9. '(float' → logprob: -12.798735618591309
    10. ' int' → logprob: -14.173735618591309

Token 245: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4972974359989166
    2. ':' → logprob: -0.9972974061965942
    3. '(' → logprob: -3.997297525405884
    4. ')' → logprob: -6.747297286987305
    5. '       ' → logprob: -6.872297286987305
    6. '(
' → logprob: -7.747297286987305
    7. ':
' → logprob: -7.997297286987305
    8. '   ' → logprob: -8.122297286987305
    9. 'self' → logprob: -8.122297286987305
    10. ' ->' → logprob: -8.372297286987305

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005373051972128451
    2. '
' → logprob: -8.375536918640137
    3. 'a' → logprob: -10.000536918640137
    4. 'dot' → logprob: -10.125536918640137
    5. '```' → logprob: -10.250536918640137
    6. 'v' → logprob: -10.500536918640137
    7. 'r' → logprob: -10.625536918640137
    8. 'angle' → logprob: -10.875536918640137
    9. 'diff' → logprob: -11.750536918640137
    10. '   ' → logprob: -11.750536918640137

Token 247: ' #' (ID: 1069)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.14108772575855255
    2. '   ' → logprob: -2.641087770462036
    3. 'cross' → logprob: -4.141087532043457
    4. 'cos' → logprob: -4.266087532043457
    5. 'angle' → logprob: -5.141087532043457
    6. 'a' → logprob: -5.141087532043457
    7. 'd' → logprob: -5.641087532043457
    8. '       ' → logprob: -5.641087532043457
    9. '"""' → logprob: -5.766087532043457
    10. 'diff' → logprob: -6.141087532043457

Token 248: ' Returns' (ID: 9609)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7251177430152893
    2. 'diff' → logprob: -1.8501176834106445
    3. 'delta' → logprob: -2.3501176834106445
    4. 'vec' → logprob: -2.4751176834106445
    5. 'dot' → logprob: -3.2251176834106445
    6. ' v' → logprob: -3.6001176834106445
    7. '"""' → logprob: -3.7251176834106445
    8. ' """' → logprob: -3.9751176834106445
    9. ' diff' → logprob: -4.2251176834106445
    10. 'a' → logprob: -4.6001176834106445

Token 249: ' angle' (ID: 16538)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.3843347728252411
    2. ' math' → logprob: -1.6343348026275635
    3. ' the' → logprob: -3.1343348026275635
    4. '(math' → logprob: -3.3843348026275635
    5. 'the' → logprob: -3.8843348026275635
    6. 'self' → logprob: -4.509334564208984
    7. ' self' → logprob: -4.634334564208984
    8. 'abs' → logprob: -6.134334564208984
    9. ' (' → logprob: -6.634334564208984
    10. '(self' → logprob: -7.134334564208984

Token 250: ' from' (ID: 591)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2480437755584717
    2. ' between' → logprob: -1.2480437755584717
    3. ' (' → logprob: -1.8730437755584717
    4. ' in' → logprob: -2.1230437755584717
    5. ' =' → logprob: -3.4980437755584717
    6. 'between' → logprob: -3.4980437755584717
    7. '_between' → logprob: -3.6230437755584717
    8. '=' → logprob: -4.373044013977051
    9. '       ' → logprob: -4.748044013977051
    10. ':' → logprob: -5.248044013977051

Token 251: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011295263655483723
    2. ' self' → logprob: -4.511295318603516
    3. '(self' → logprob: -9.136295318603516
    4. 'this' → logprob: -10.011295318603516
    5. '       ' → logprob: -10.511295318603516
    6. 'other' → logprob: -10.636295318603516
    7. 'the' → logprob: -11.011295318603516
    8. 'math' → logprob: -12.136295318603516
    9. '1' → logprob: -12.261295318603516
    10. 'Vector' → logprob: -12.386295318603516

Token 252: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05076390877366066
    2. 'to' → logprob: -3.0507638454437256
    3. ' vector' → logprob: -6.675764083862305
    4. ' clockwise' → logprob: -8.050764083862305
    5. ' in' → logprob: -9.050764083862305
    6. ' (' → logprob: -9.550764083862305
    7. 'Vector' → logprob: -9.800764083862305
    8. ' ' → logprob: -9.800764083862305
    9. ' Vector' → logprob: -10.175764083862305
    10. 'vector' → logprob: -10.300764083862305

Token 253: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.38708677887916565
    2. 'other' → logprob: -1.1370867490768433
    3. ' the' → logprob: -8.637086868286133
    4. 'the' → logprob: -10.637086868286133
    5. '(other' → logprob: -12.387086868286133
    6. ' right' → logprob: -12.637086868286133
    7. 'right' → logprob: -13.387086868286133
    8. '.other' → logprob: -13.512086868286133
    9. 'self' → logprob: -13.762086868286133
    10. ' ' → logprob: -14.262086868286133

Token 254: ' turning' (ID: 21087)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06974411755800247
    2. ' (' → logprob: -3.569744110107422
    3. ' in' → logprob: -4.069744110107422
    4. '   ' → logprob: -5.069744110107422
    5. '(' → logprob: -5.319744110107422
    6. ':' → logprob: -5.444744110107422
    7. ',' → logprob: -5.944744110107422
    8. '        ' → logprob: -6.694744110107422
    9. ' ' → logprob: -7.444744110107422
    10. ' :' → logprob: -7.944744110107422

Token 255: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.7818160057067871
    2. ' clockwise' → logprob: -1.406816005706787
    3. ' right' → logprob: -1.656816005706787
    4. 'clock' → logprob: -3.156816005706787
    5. '_clock' → logprob: -3.531816005706787
    6. '90' → logprob: -4.906816005706787
    7. ' to' → logprob: -5.406816005706787
    8. ')' → logprob: -5.406816005706787
    9. ' ' → logprob: -5.656816005706787
    10. 'counter' → logprob: -6.156816005706787

Token 256: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014641153626143932
    2. ':' → logprob: -5.264641284942627
    3. '        ' → logprob: -6.139641284942627
    4. ',' → logprob: -6.264641284942627
    5. ' (' → logprob: -6.514641284942627
    6. ' :' → logprob: -6.889641284942627
    7. '   ' → logprob: -7.389641284942627
    8. ')' → logprob: -7.389641284942627
    9. '):' → logprob: -8.264640808105469
    10. '(self' → logprob: -8.389640808105469

Token 257: 'clock' (ID: 34421)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7428920269012451
    2. ' clockwise' → logprob: -1.1178920269012451
    3. 'clock' → logprob: -2.867892026901245
    4. ' in' → logprob: -3.117892026901245
    5. ' )' → logprob: -3.742892026901245
    6. ' counter' → logprob: -3.992892026901245
    7. 'counter' → logprob: -4.492892265319824
    8. ')
' → logprob: -4.992892265319824
    9. ' between' → logprob: -5.367892265319824
    10. '
' → logprob: -5.742892265319824

Token 258: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -4.961759259458631e-06
    2. '-wise' → logprob: -13.500004768371582
    3. '```' → logprob: -13.625004768371582
    4. 'w' → logprob: -14.125004768371582
    5. 'wis' → logprob: -14.375004768371582
    6. '   ' → logprob: -15.250004768371582
    7. '       ' → logprob: -15.375004768371582
    8. ' wise' → logprob: -16.0000057220459
    9. '-' → logprob: -16.5000057220459
    10. 'clock' → logprob: -16.5000057220459

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017292790114879608
    2. '):' → logprob: -4.8922929763793945
    3. ' )' → logprob: -5.6422929763793945
    4. ')
' → logprob: -5.6422929763793945
    5. ',' → logprob: -7.1422929763793945
    6. '   ' → logprob: -7.7672929763793945
    7. '):
' → logprob: -7.8922929763793945
    8. ' in' → logprob: -7.8922929763793945
    9. '       ' → logprob: -8.642292976379395
    10. ' )
' → logprob: -9.517292976379395

Token 260: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009300658479332924
    2. ':' → logprob: -5.259300708770752
    3. ' vector' → logprob: -7.134300708770752
    4. ',' → logprob: -7.509300708770752
    5. ' (' → logprob: -7.884300708770752
    6. 'v' → logprob: -7.884300708770752
    7. '        ' → logprob: -8.009300231933594
    8. ' v' → logprob: -8.384300231933594
    9. ')' → logprob: -8.509300231933594
    10. '
' → logprob: -8.759300231933594

Token 261: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05549720302224159
    2. ' ' → logprob: -2.930497169494629
    3. ' -' → logprob: -8.430497169494629
    4. ' vectors' → logprob: -9.305497169494629
    5. '-' → logprob: -9.430497169494629
    6. 'self' → logprob: -9.680497169494629
    7. '   ' → logprob: -9.930497169494629
    8. 'Vector' → logprob: -11.055497169494629
    9. ' self' → logprob: -11.430497169494629
    10. 'the' → logprob: -11.430497169494629

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004648591857403517
    2. '-' → logprob: -5.629648685455322
    3. ' ' → logprob: -7.379648685455322
    4. 'self' → logprob: -8.629648208618164
    5. '-self' → logprob: -9.254648208618164
    6. ' -' → logprob: -9.629648208618164
    7. '-vector' → logprob: -10.379648208618164
    8. 'math' → logprob: -11.629648208618164
    9. '
' → logprob: -11.754648208618164
    10. 'Vector' → logprob: -12.004648208618164

Token 263: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.32875099778175354
    2. 'and' → logprob: -1.3287509679794312
    3. '.' → logprob: -4.453751087188721
    4. ',' → logprob: -5.703751087188721
    5. ' ' → logprob: -8.703750610351562
    6. ' ,' → logprob: -9.328750610351562
    7. '	and' → logprob: -10.328750610351562
    8. 'to' → logprob: -10.453750610351562
    9. ' to' → logprob: -10.953750610351562
    10. '<=' → logprob: -11.203750610351562

Token 264: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02774779312312603
    2. 'math' → logprob: -4.152747631072998
    3. '360' → logprob: -4.527747631072998
    4. ' ' → logprob: -7.652747631072998
    5. ' math' → logprob: -8.027748107910156
    6. '180' → logprob: -11.027748107910156
    7. '1' → logprob: -11.527748107910156
    8. '   ' → logprob: -12.652748107910156
    9. '(' → logprob: -12.902748107910156
    10. '```' → logprob: -13.402748107910156

Token 265: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43469518423080444
    2. '360' → logprob: -1.0596952438354492
    3. '6' → logprob: -5.434695243835449
    4. 'math' → logprob: -6.809695243835449
    5. '3' → logprob: -8.30969524383545
    6. ' ' → logprob: -8.68469524383545
    7. '180' → logprob: -10.55969524383545
    8. '1' → logprob: -10.68469524383545
    9. ' math' → logprob: -11.43469524383545
    10. '```' → logprob: -11.55969524383545

Token 266: 'pi' (ID: 3455)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04189572483301163
    2. ' *' → logprob: -4.166895866394043
    3. 'math' → logprob: -4.666895866394043
    4. ' math' → logprob: -4.791895866394043
    5. '*pi' → logprob: -5.041895866394043
    6. 'import' → logprob: -7.291895866394043
    7. 'pi' → logprob: -7.916895866394043
    8. '.' → logprob: -8.416895866394043
    9. '(math' → logprob: -10.041895866394043
    10. '.pi' → logprob: -10.916895866394043

Token 267: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006957377307116985
    2. ':' → logprob: -5.256957530975342
    3. ')' → logprob: -7.506957530975342
    4. ',' → logprob: -7.881957530975342
    5. ':
' → logprob: -8.881957054138184
    6. '
' → logprob: -9.006957054138184
    7. ' vector' → logprob: -9.256957054138184
    8. '.' → logprob: -10.131957054138184
    9. '        ' → logprob: -10.256957054138184
    10. '   ' → logprob: -10.256957054138184

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007753237732686102
    2. 'v' → logprob: -7.875775337219238
    3. 'vec' → logprob: -9.500775337219238
    4. 'delta' → logprob: -9.500775337219238
    5. ' v' → logprob: -9.625775337219238
    6. ' delta' → logprob: -10.250775337219238
    7. '   ' → logprob: -10.625775337219238
    8. 'd' → logprob: -10.625775337219238
    9. 'diff' → logprob: -11.000775337219238
    10. ')' → logprob: -11.875775337219238

Token 269: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10413998365402222
    2. 'a' → logprob: -3.604140043258667
    3. 'delta' → logprob: -3.729140043258667
    4. 'u' → logprob: -4.354139804840088
    5. 'diff' → logprob: -4.729139804840088
    6. 'vec' → logprob: -4.729139804840088
    7. 'dot' → logprob: -5.104139804840088
    8. '   ' → logprob: -5.354139804840088
    9. 'd' → logprob: -5.854139804840088
    10. ' v' → logprob: -6.229139804840088

Token 270: ' Because' (ID: 13602)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10607367008924484
    2. 'diff' → logprob: -3.4810736179351807
    3. 'vec' → logprob: -3.6060736179351807
    4. 'delta' → logprob: -3.7310736179351807
    5. 'a' → logprob: -4.73107385635376
    6. 'dot' → logprob: -5.85607385635376
    7. 'd' → logprob: -6.10607385635376
    8. ' v' → logprob: -6.60607385635376
    9. 'u' → logprob: -6.98107385635376
    10. '   ' → logprob: -7.10607385635376

Token 271: ' clockwise' (ID: 141888)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2807910442352295
    2. ' vectors' → logprob: -1.5307910442352295
    3. ' self' → logprob: -2.4057910442352295
    4. ' the' → logprob: -2.6557910442352295
    5. ' math' → logprob: -2.9057910442352295
    6. ' we' → logprob: -3.1557910442352295
    7. 'the' → logprob: -3.1557910442352295
    8. 'vectors' → logprob: -3.1557910442352295
    9. 'we' → logprob: -3.6557910442352295
    10. 'math' → logprob: -4.155791282653809

Token 272: ' is' (ID: 382)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -1.211962103843689
    2. ' direction' → logprob: -1.461962103843689
    3. 'angle' → logprob: -1.836962103843689
    4. ' is' → logprob: -2.5869622230529785
    5. ' rotation' → logprob: -2.8369622230529785
    6. 'direction' → logprob: -3.2119622230529785
    7. ':' → logprob: -3.7119622230529785
    8. ',' → logprob: -4.0869622230529785
    9. '_angle' → logprob: -4.0869622230529785
    10. ' vector' → logprob: -4.0869622230529785

Token 273: ' right' (ID: 1849)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4415826797485352
    2. '1' → logprob: -1.4415826797485352
    3. ' (' → logprob: -1.4415826797485352
    4. ' math' → logprob: -2.066582679748535
    5. '2' → logprob: -3.441582679748535
    6. ' -' → logprob: -3.441582679748535
    7. 'math' → logprob: -3.691582679748535
    8. ' ' → logprob: -3.691582679748535
    9. '-' → logprob: -3.941582679748535
    10. ' self' → logprob: -4.566582679748535

Token 274: ' turn' (ID: 3716)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7391589879989624
    2. ',' → logprob: -1.1141589879989624
    3. ':' → logprob: -2.239159107208252
    4. ':
' → logprob: -3.989159107208252
    5. 'angle' → logprob: -4.489159107208252
    6. 'return' → logprob: -4.864159107208252
    7. ',
' → logprob: -4.864159107208252
    8. ' and' → logprob: -5.114159107208252
    9. '   ' → logprob: -5.489159107208252
    10. ' return' → logprob: -5.489159107208252

Token 275: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28806164860725403
    2. ',' → logprob: -1.5380616188049316
    3. ':' → logprob: -4.038061618804932
    4. ',
' → logprob: -5.288061618804932
    5. ' ,' → logprob: -5.788061618804932
    6. ':
' → logprob: -5.788061618804932
    7. '
' → logprob: -6.163061618804932
    8. ' and' → logprob: -7.413061618804932
    9. '.' → logprob: -7.538061618804932
    10. ')' → logprob: -7.663061618804932

Token 276: ' angle' (ID: 16538)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.1912507563829422
    2. 'v' → logprob: -2.941250801086426
    3. 'diff' → logprob: -3.816250801086426
    4. '   ' → logprob: -3.941250801086426
    5. 'vec' → logprob: -3.941250801086426
    6. ' dot' → logprob: -4.316250801086426
    7. 'angle' → logprob: -4.441250801086426
    8. 'd' → logprob: -4.816250801086426
    9. 'cross' → logprob: -5.066250801086426
    10. 'dx' → logprob: -5.191250801086426

Token 277: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1340283453464508
    2. '=' → logprob: -2.134028434753418
    3. '_self' → logprob: -5.634028434753418
    4. '1' → logprob: -6.134028434753418
    5. '_diff' → logprob: -7.634028434753418
    6. 'diff' → logprob: -7.759028434753418
    7. 'self' → logprob: -8.634028434753418
    8. '   ' → logprob: -9.884028434753418
    9. '=self' → logprob: -10.509028434753418
    10. 's' → logprob: -10.634028434753418

Token 278: ' ' (ID: 220)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.6327065229415894
    2. '(self' → logprob: -1.5077065229415894
    3. ' (' → logprob: -1.6327065229415894
    4. 'math' → logprob: -3.507706642150879
    5. ' math' → logprob: -4.257706642150879
    6. '(' → logprob: -5.132706642150879
    7. '(-' → logprob: -7.257706642150879
    8. '((' → logprob: -7.382706642150879
    9. '(
' → logprob: -8.632706642150879
    10. ' self' → logprob: -9.257706642150879

Token 279: '2' (ID: 17)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.9200130105018616
    2. '(math' → logprob: -0.9200130105018616
    3. 'math' → logprob: -2.170012950897217
    4. '(' → logprob: -2.670012950897217
    5. 'self' → logprob: -4.795012950897217
    6. '(-' → logprob: -5.045012950897217
    7. '-m' → logprob: -6.170012950897217
    8. '((' → logprob: -7.545012950897217
    9. '-self' → logprob: -7.545012950897217
    10. '-' → logprob: -7.670012950897217

Token 280: '*pi' (ID: 112844)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01121404580771923
    2. ' *' → logprob: -4.511214256286621
    3. '*pi' → logprob: -9.011214256286621
    4. 'math' → logprob: -10.511214256286621
    5. 'import' → logprob: -11.386214256286621
    6. ' math' → logprob: -12.886214256286621
    7. '*object' → logprob: -14.386214256286621
    8. 'pi' → logprob: -14.511214256286621
    9. '*Math' → logprob: -14.511214256286621
    10. '3' → logprob: -14.636214256286621

Token 281: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47454699873924255
    2. '-' → logprob: -0.9745470285415649
    3. '*' → logprob: -7.724546909332275
    4. ' *' → logprob: -11.349547386169434
    5. ' ' → logprob: -13.099547386169434
    6. '-(' → logprob: -13.474547386169434
    7. '+' → logprob: -13.599547386169434
    8. ')' → logprob: -13.599547386169434
    9. '-self' → logprob: -13.849547386169434
    10. '-import' → logprob: -13.849547386169434

Token 282: ' CC' (ID: 21547)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2902878224849701
    2. ' math' → logprob: -1.4152878522872925
    3. '(math' → logprob: -5.165287971496582
    4. 'self' → logprob: -6.040287971496582
    5. ' self' → logprob: -7.165287971496582
    6. ' (' → logprob: -8.915287971496582
    7. '(self' → logprob: -9.665287971496582
    8. '(' → logprob: -10.915287971496582
    9. '```' → logprob: -12.415287971496582
    10. '(
' → logprob: -12.540287971496582

Token 283: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.14450818300247192
    2. 'w' → logprob: -2.019508123397827
    3. '_angle' → logprob: -7.519508361816406
    4. '_w' → logprob: -7.894508361816406
    5. '*' → logprob: -8.269508361816406
    6. '_' → logprob: -8.394508361816406
    7. '```' → logprob: -9.394508361816406
    8. 'angle' → logprob: -9.769508361816406
    9. 'wt' → logprob: -10.019508361816406
    10. '
' → logprob: -10.144508361816406

Token 284: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.005591483321040869
    2. 'angle' → logprob: -5.38059139251709
    3. ' angle' → logprob: -8.38059139251709
    4. 'self' → logprob: -8.75559139251709
    5. '(self' → logprob: -9.00559139251709
    6. '_' → logprob: -9.50559139251709
    7. '_pi' → logprob: -9.63059139251709
    8. '(angle' → logprob: -9.75559139251709
    9. '*' → logprob: -9.88059139251709
    10. 'import' → logprob: -10.25559139251709

Token 285: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013460656628012657
    2. 'import' → logprob: -7.376346111297607
    3. '
' → logprob: -8.37634563446045
    4. ',' → logprob: -9.00134563446045
    5. '   ' → logprob: -9.62634563446045
    6. 'from' → logprob: -10.00134563446045
    7. ':' → logprob: -10.37634563446045
    8. 'return' → logprob: -11.00134563446045
    9. '(' → logprob: -11.12634563446045
    10. '```' → logprob: -11.12634563446045

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.4894986785948277e-05
    2. 'v' → logprob: -11.500044822692871
    3. '   ' → logprob: -12.250044822692871
    4. ',' → logprob: -12.250044822692871
    5. '
' → logprob: -12.750044822692871
    6. ')' → logprob: -12.875044822692871
    7. ' v' → logprob: -13.000044822692871
    8. ':' → logprob: -13.250044822692871
    9. 'vec' → logprob: -13.500044822692871
    10. '      ' → logprob: -13.625044822692871

Token 287: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -0.2557528614997864
    2. '   ' → logprob: -2.5057528018951416
    3. 'angle' → logprob: -2.7557528018951416
    4. 'dot' → logprob: -3.2557528018951416
    5. 'a' → logprob: -4.505753040313721
    6. 'diff' → logprob: -4.755753040313721
    7. 'return' → logprob: -4.880753040313721
    8. '       ' → logprob: -5.755753040313721
    9. 'delta' → logprob: -6.005753040313721
    10. 'ang' → logprob: -6.380753040313721

Token 288: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0001625379954930395
    2. '_angle' → logprob: -9.500162124633789
    3. '_w' → logprob: -10.125162124633789
    4. '
' → logprob: -11.250162124633789
    5. '       ' → logprob: -12.250162124633789
    6. '

' → logprob: -12.250162124633789
    7. ' =' → logprob: -12.375162124633789
    8. '=' → logprob: -12.625162124633789
    9. '   ' → logprob: -12.625162124633789
    10. '	w' → logprob: -13.125162124633789

Token 289: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.005709539633244276
    2. ' =' → logprob: -5.255709648132324
    3. '_' → logprob: -7.880709648132324
    4. '=' → logprob: -9.505709648132324
    5. '_ang' → logprob: -11.630709648132324
    6. 'angle' → logprob: -12.255709648132324
    7. '_a' → logprob: -13.130709648132324
    8. '_an' → logprob: -13.380709648132324
    9. '=_' → logprob: -13.755709648132324
    10. '_angles' → logprob: -14.005709648132324

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000805341056548059
    2. '=' → logprob: -7.125805377960205
    3. '(' → logprob: -14.500804901123047
    4. ' ' → logprob: -15.375804901123047
    5. ',' → logprob: -17.125804901123047
    6. ':' → logprob: -17.375804901123047
    7. '()' → logprob: -18.250804901123047
    8. ' ' → logprob: -18.375804901123047
    9. ' =
' → logprob: -18.375804901123047
    10. ' =(' → logprob: -18.375804901123047

Token 291: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.019215144217014313
    2. ' math' → logprob: -4.144215106964111
    3. '(math' → logprob: -5.894215106964111
    4. 'self' → logprob: -8.26921558380127
    5. '       ' → logprob: -8.89421558380127
    6. '(self' → logprob: -11.39421558380127
    7. ' self' → logprob: -12.64421558380127
    8. ' (' → logprob: -12.76921558380127
    9. '(' → logprob: -13.14421558380127
    10. '           ' → logprob: -13.26921558380127

Token 292: '.atan' (ID: 157113)
  Prédit: '.atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.atan' → logprob: -0.05249277129769325
    2. '.ac' → logprob: -3.05249285697937
    3. '.' → logprob: -5.552492618560791
    4. '.as' → logprob: -10.92749309539795
    5. '.pi' → logprob: -14.42749309539795
    6. '.f' → logprob: -14.67749309539795
    7. ' .' → logprob: -15.17749309539795
    8. '‌.' → logprob: -15.55249309539795
    9. ').' → logprob: -15.92749309539795
    10. '.at' → logprob: -16.052492141723633

Token 293: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '２' → logprob: -21.375
    4. '۲' → logprob: -21.625
    5. '22' → logprob: -22.0
    6. '
' → logprob: -22.0
    7. '3' → logprob: -23.25
    8. '_' → logprob: -23.5
    9. '₂' → logprob: -23.75
    10. '   ' → logprob: -24.0

Token 294: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.00036953974631614983
    2. 'other' → logprob: -8.25036907196045
    3. '((' → logprob: -9.37536907196045
    4. '(self' → logprob: -11.00036907196045
    5. ' other' → logprob: -12.25036907196045
    6. '(' → logprob: -13.75036907196045
    7. ' (' → logprob: -14.37536907196045
    8. '(
' → logprob: -16.000370025634766
    9. '.other' → logprob: -16.500370025634766
    10. 'self' → logprob: -16.500370025634766

Token 295: '.cross' (ID: 108957)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.1512668877840042
    2. '.' → logprob: -2.0262668132781982
    3. ' .' → logprob: -4.776267051696777
    4. '().' → logprob: -10.151267051696777
    5. 'y' → logprob: -10.651267051696777
    6. ')' → logprob: -11.651267051696777
    7. ').' → logprob: -11.776267051696777
    8. ' ' → logprob: -11.901267051696777
    9. '.x' → logprob: -11.901267051696777
    10. '(y' → logprob: -12.151267051696777

Token 296: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012342237867414951
    2. '(' → logprob: -5.01234245300293
    3. 'self' → logprob: -5.51234245300293
    4. '(other' → logprob: -7.26234245300293
    5. ')' → logprob: -7.51234245300293
    6. ' (' → logprob: -9.38734245300293
    7. ' self' → logprob: -9.51234245300293
    8. '(
' → logprob: -10.13734245300293
    9. '(Vector' → logprob: -10.26234245300293
    10. ')(' → logprob: -11.13734245300293

Token 297: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.001232849550433457
    2. ' ),' → logprob: -6.876232624053955
    3. ')' → logprob: -8.751233100891113
    4. ',' → logprob: -10.626233100891113
    5. 'self' → logprob: -12.126233100891113
    6. '),
' → logprob: -12.751233100891113
    7. '),(' → logprob: -13.126233100891113
    8. ' ' → logprob: -13.376233100891113
    9. '(' → logprob: -13.876233100891113
    10. '(self' → logprob: -14.001233100891113

Token 298: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0028140286449342966
    2. ' other' → logprob: -5.877813816070557
    3. 'self' → logprob: -11.752814292907715
    4. '-other' → logprob: -14.377814292907715
    5. ' self' → logprob: -15.502814292907715
    6. '   ' → logprob: -16.2528133392334
    7. ' ' → logprob: -16.3778133392334
    8. '-' → logprob: -16.5028133392334
    9. '.other' → logprob: -17.0028133392334
    10. '  ' → logprob: -17.1278133392334

Token 299: '.dot' (ID: 52692)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09232186526060104
    2. '.dot' → logprob: -2.4673218727111816
    3. ' .' → logprob: -6.092321872711182
    4. ').' → logprob: -7.842321872711182
    5. '.x' → logprob: -7.967321872711182
    6. ')' → logprob: -8.967321395874023
    7. '.angle' → logprob: -9.342321395874023
    8. '.
' → logprob: -10.717321395874023
    9. '.y' → logprob: -11.092321395874023
    10. '.)' → logprob: -11.217321395874023

Token 300: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004689526278525591
    2. '(' → logprob: -5.379689693450928
    3. ' (' → logprob: -10.12968921661377
    4. 'self' → logprob: -11.12968921661377
    5. ')' → logprob: -11.87968921661377
    6. '(s' → logprob: -12.50468921661377
    7. ' self' → logprob: -13.25468921661377
    8. '(other' → logprob: -13.87968921661377
    9. '(
' → logprob: -14.12968921661377
    10. '(

' → logprob: -15.37968921661377

Token 301: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07946436107158661
    2. '))' → logprob: -2.5794644355773926
    3. ' )' → logprob: -7.579464435577393
    4. ' ))' → logprob: -10.204463958740234
    5. '())' → logprob: -11.454463958740234
    6. ')))' → logprob: -12.329463958740234
    7. ')
' → logprob: -12.454463958740234
    8. ')+' → logprob: -13.829463958740234
    9. ')}' → logprob: -13.829463958740234
    10. '   ' → logprob: -14.204463958740234

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018406514078378677
    2. ')' → logprob: -4.518406391143799
    3. ' return' → logprob: -5.643406391143799
    4. '
' → logprob: -6.018406391143799
    5. 'return' → logprob: -7.643406391143799
    6. ' +' → logprob: -7.768406391143799
    7. ' )' → logprob: -8.893406867980957
    8. ',' → logprob: -9.518406867980957
    9. ')
' → logprob: -9.893406867980957
    10. '	' → logprob: -10.268406867980957

Token 303: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7737311720848083
    2. 'return' → logprob: -0.7737311720848083
    3. '       ' → logprob: -2.773731231689453
    4. ' angle' → logprob: -5.023731231689453
    5. 'angle' → logprob: -5.148731231689453
    6. ' if' → logprob: -6.523731231689453
    7. 'result' → logprob: -8.148731231689453
    8. '2' → logprob: -8.148731231689453
    9. 'if' (adapté à ' if') → logprob: -9.148731231689453
    10. ')' → logprob: -9.398731231689453

Token 304: ' cc' (ID: 22988)
  Prédit: ' cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.11316067725419998
    2. 'cc' → logprob: -2.2381606101989746
    3. '	cc' → logprob: -8.113161087036133
    4. '(cc' → logprob: -10.363161087036133
    5. '_cc' → logprob: -12.988161087036133
    6. ' ' → logprob: -13.113161087036133
    7. '   ' → logprob: -14.113161087036133
    8. ' c' → logprob: -14.238161087036133
    9. 'c' → logprob: -14.988161087036133
    10. ' ' → logprob: -15.363161087036133

Token 305: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.610702363715973e-06
    2. 'cw' → logprob: -12.625009536743164
    3. '       ' → logprob: -13.875009536743164
    4. '   ' → logprob: -14.125009536743164
    5. 'W' → logprob: -14.250009536743164
    6. 'ww' → logprob: -14.750009536743164
    7. '
' → logprob: -15.000009536743164
    8. 'wc' → logprob: -15.125009536743164
    9. '```' → logprob: -15.375009536743164
    10. '_w' → logprob: -15.375009536743164

Token 306: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -4.320199877838604e-07
    2. 'angle' → logprob: -14.75
    3. '_' → logprob: -17.875
    4. 'Angle' → logprob: -19.25
    5. '_angles' → logprob: -19.375
    6. '_ang' → logprob: -20.125
    7. '_age' → logprob: -20.375
    8. 'ANGLE' → logprob: -20.5
    9. '=' → logprob: -20.875
    10. ' angle' → logprob: -21.0

Token 307: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11297851800918579
    2. '<' → logprob: -2.237978458404541
    3. ' <=' → logprob: -9.3629789352417
    4. ' ==' → logprob: -11.1129789352417
    5. ' ' → logprob: -11.2379789352417
    6. '<=' → logprob: -11.6129789352417
    7. ' >=' → logprob: -11.8629789352417
    8. ' >' → logprob: -12.6129789352417
    9. '>' → logprob: -12.7379789352417
    10. '==' → logprob: -12.7379789352417

Token 308: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '=' → logprob: -16.750431060791016
    4. '۰' → logprob: -17.125431060791016
    5. '<|end|>' → logprob: -17.500431060791016
    6. '```' → logprob: -17.750431060791016
    7. '
' → logprob: -17.875431060791016
    8. '   ' → logprob: -18.625431060791016
    9. '1' → logprob: -18.875431060791016
    10. ')' → logprob: -19.000431060791016

Token 309: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۰' → logprob: -17.625003814697266
    4. '```' → logprob: -19.000003814697266
    5. '=' → logprob: -19.375003814697266
    6. '
' → logprob: -19.625003814697266
    7. '   ' → logprob: -20.250003814697266
    8. '<|end|>' → logprob: -20.375003814697266
    9. '00' → logprob: -20.625003814697266
    10. '٠' → logprob: -20.875003814697266

Token 310: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05253474414348602
    2. ':
' → logprob: -3.677534818649292
    3. '       ' → logprob: -3.802534818649292
    4. '           ' → logprob: -6.052534580230713
    5. '<|end|>' → logprob: -7.302534580230713
    6. '):' → logprob: -8.552535057067871
    7. '<|end|>' → logprob: -9.177535057067871
    8. '):
' → logprob: -9.552535057067871
    9. ',' → logprob: -10.052535057067871
    10. ' :' → logprob: -10.427535057067871

Token 311: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11732160300016403
    2. '       ' → logprob: -2.242321491241455
    3. 'cc' → logprob: -5.617321491241455
    4. ' cc' → logprob: -8.242321968078613
    5. '<|end|>' → logprob: -8.992321968078613
    6. '	       ' → logprob: -9.117321968078613
    7. '   ' → logprob: -9.492321968078613
    8. '        ' → logprob: -9.617321968078613
    9. '	cc' → logprob: -10.367321968078613
    10. '               ' → logprob: -10.742321968078613

Token 312: ' cc' (ID: 22988)
  Prédit: ' cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.4389510750770569
    2. 'cc' (adapté à ' cc') → logprob: -1.563951015472412
    3. '           ' → logprob: -1.938951015472412
    4. '	cc' → logprob: -7.188951015472412
    5. '       ' → logprob: -7.313951015472412
    6. '               ' → logprob: -7.688951015472412
    7. '   ' → logprob: -9.18895149230957
    8. '(cc' → logprob: -10.18895149230957
    9. '_cc' → logprob: -10.81395149230957
    10. '	       ' → logprob: -11.68895149230957

Token 313: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0005893715424463153
    2. 'cw' → logprob: -7.625589370727539
    3. '       ' → logprob: -9.375589370727539
    4. '=' → logprob: -12.250589370727539
    5. '_angle' → logprob: -12.750589370727539
    6. '   ' → logprob: -13.000589370727539
    7. 'wc' → logprob: -13.375589370727539
    8. '
' → logprob: -14.125589370727539
    9. '           ' → logprob: -14.250589370727539
    10. '_w' → logprob: -14.250589370727539

Token 314: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -2.935296834039036e-06
    2. 'angle' → logprob: -12.75000286102295
    3. 'Angle' → logprob: -17.625003814697266
    4. ' angle' → logprob: -18.500003814697266
    5. '_angles' → logprob: -19.375003814697266
    6. 'ANGLE' → logprob: -19.500003814697266
    7. '_' → logprob: -19.500003814697266
    8. '-angle' → logprob: -19.500003814697266
    9. '_ang' → logprob: -20.000003814697266
    10. '_age' → logprob: -20.125003814697266

Token 315: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5776458978652954
    2. '+=' → logprob: -0.8276458978652954
    3. '=' → logprob: -6.952645778656006
    4. '+' → logprob: -7.452645778656006
    5. ' =' → logprob: -9.077646255493164
    6. ' +' → logprob: -9.952646255493164
    7. ']+=' → logprob: -12.202646255493164
    8. ' ' → logprob: -13.827646255493164
    9. '    ' → logprob: -15.327646255493164
    10. '+='' → logprob: -15.452646255493164

Token 316: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001514504081569612
    2. ' ' → logprob: -6.501514434814453
    3. 'math' → logprob: -11.501514434814453
    4. '6' → logprob: -13.751514434814453
    5. '   ' → logprob: -14.751514434814453
    6. ' math' → logprob: -15.001514434814453
    7. '```' → logprob: -16.751514434814453
    8. 'import' → logprob: -16.876514434814453
    9. '(' → logprob: -17.626514434814453
    10. '360' → logprob: -18.626514434814453

Token 317: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.685467764735222e-05
    2. 'math' → logprob: -9.750086784362793
    3. ' ' → logprob: -10.500086784362793
    4. '   ' → logprob: -14.875086784362793
    5. '```' → logprob: -15.375086784362793
    6. '6' → logprob: -15.875086784362793
    7. ' math' → logprob: -16.00008773803711
    8. '(' → logprob: -16.87508773803711
    9. '`' → logprob: -18.25008773803711
    10. 'import' → logprob: -18.50008773803711

Token 318: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2534441649913788
    2. ' *' → logprob: -1.5034441947937012
    3. '*pi' → logprob: -6.503444194793701
    4. '*Math' → logprob: -11.253443717956543
    5. ' math' → logprob: -14.128443717956543
    6. 'math' → logprob: -14.378443717956543
    7. '.' → logprob: -14.878443717956543
    8. '*object' → logprob: -15.378443717956543
    9. '*np' → logprob: -15.503443717956543
    10. '*m' → logprob: -15.878443717956543

Token 319: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.47407791018486023
    2. ' math' → logprob: -0.9740779399871826
    3. '(math' → logprob: -14.474078178405762
    4. 'pi' → logprob: -15.349078178405762
    5. '.math' → logprob: -17.849077224731445
    6. '```' → logprob: -17.849077224731445
    7. '3' → logprob: -18.099077224731445
    8. 'Math' → logprob: -18.224077224731445
    9. ' ' → logprob: -18.474077224731445
    10. 'import' → logprob: -18.974077224731445

Token 320: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -4.644463479053229e-05
    2. '.' → logprob: -10.000046730041504
    3. 'pi' → logprob: -15.000046730041504
    4. '.PI' → logprob: -15.375046730041504
    5. '*pi' → logprob: -15.625046730041504
    6. '.p' → logprob: -16.000045776367188
    7. '.py' → logprob: -16.125045776367188
    8. ' .' → logprob: -16.500045776367188
    9. '.
' → logprob: -17.875045776367188
    10. '.atan' → logprob: -19.125045776367188

Token 321: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010266187600791454
    2. '
' → logprob: -4.635266304016113
    3. ')' → logprob: -8.885266304016113
    4. '   ' → logprob: -9.010266304016113
    5. '<|end|>' → logprob: -9.385266304016113
    6. 'return' → logprob: -10.135266304016113
    7. ' return' → logprob: -10.510266304016113
    8. '        
' → logprob: -10.635266304016113
    9. '           ' → logprob: -11.635266304016113
    10. '
' → logprob: -11.885266304016113

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024995561689138412
    2. ')' → logprob: -6.502499580383301
    3. ' return' → logprob: -7.752499580383301
    4. '   ' → logprob: -8.3774995803833
    5. 'return' → logprob: -8.5024995803833
    6. '        
' → logprob: -10.7524995803833
    7. '
' → logprob: -11.1274995803833
    8. ' ' → logprob: -11.2524995803833
    9. ' )' → logprob: -11.3774995803833
    10. '	return' → logprob: -11.3774995803833

Token 323: ' right' (ID: 1849)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2270706743001938
    2. '       ' → logprob: -2.2270705699920654
    3. ' return' → logprob: -2.3520705699920654
    4. '   ' → logprob: -9.977070808410645
    5. '	return' → logprob: -10.477070808410645
    6. 'angle' → logprob: -11.102070808410645
    7. 'eturn' → logprob: -12.477070808410645
    8. ')' → logprob: -12.602070808410645
    9. '        ' → logprob: -12.852070808410645
    10. 'result' → logprob: -12.977070808410645

Token 324: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.0020352264400571585
    2. '_turn' → logprob: -6.377035140991211
    3. ' =' → logprob: -8.627035140991211
    4. '_' → logprob: -9.502035140991211
    5. 'angle' → logprob: -10.877035140991211
    6. '_angles' → logprob: -11.127035140991211
    7. '<|end|>' → logprob: -12.002035140991211
    8. '=' → logprob: -12.002035140991211
    9. ' angle' → logprob: -12.127035140991211
    10. 'Angle' → logprob: -12.502035140991211

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021985520143061876
    2. '=' → logprob: -6.127198696136475
    3. 'return' → logprob: -12.127198219299316
    4. ' ' → logprob: -12.377198219299316
    5. ' return' → logprob: -12.627198219299316
    6. 'eturn' → logprob: -15.877198219299316
    7. ':' → logprob: -15.877198219299316
    8. '   ' → logprob: -16.002199172973633
    9. '	return' → logprob: -17.127199172973633
    10. ')' → logprob: -17.377199172973633

Token 326: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.061980683356523514
    2. ' ' → logprob: -2.811980724334717
    3. '       ' → logprob: -12.186980247497559
    4. '   ' → logprob: -12.561980247497559
    5. '(' → logprob: -13.186980247497559
    6. ' (' → logprob: -13.686980247497559
    7. '        ' → logprob: -14.436980247497559
    8. '    ' → logprob: -14.686980247497559
    9. '           ' → logprob: -15.811980247497559
    10. '     ' → logprob: -16.186981201171875

Token 327: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001617035741219297
    2. ' ' → logprob: -9.125162124633789
    3. '(' → logprob: -9.875162124633789
    4. '   ' → logprob: -13.875162124633789
    5. ' (' → logprob: -15.875162124633789
    6. '
' → logprob: -16.62516212463379
    7. '  ' → logprob: -17.12516212463379
    8. '0' → logprob: -17.25016212463379
    9. '           ' → logprob: -18.00016212463379
    10. '```' → logprob: -18.00016212463379

Token 328: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07908333092927933
    2. '*' → logprob: -2.5790834426879883
    3. '*pi' → logprob: -8.579083442687988
    4. '*Math' → logprob: -12.329083442687988
    5. ' ' → logprob: -14.954083442687988
    6. '*object' → logprob: -15.829083442687988
    7. ' ' → logprob: -16.079082489013672
    8. '*np' → logprob: -16.204082489013672
    9. '**' → logprob: -16.204082489013672
    10. '.' → logprob: -16.454082489013672

Token 329: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.07889848947525024
    2. 'math' → logprob: -2.5788984298706055
    3. '(math' → logprob: -12.203898429870605
    4. '*' → logprob: -13.203898429870605
    5. ' *' → logprob: -13.953898429870605
    6. '.math' → logprob: -15.078898429870605
    7. '```' → logprob: -15.453898429870605
    8. ' ' → logprob: -15.828898429870605
    9. 'pi' → logprob: -16.078899383544922
    10. 'import' → logprob: -16.703899383544922

Token 330: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.0003918271977454424
    2. '.' → logprob: -7.875391960144043
    3. ' .' → logprob: -11.875391960144043
    4. '*pi' → logprob: -13.000391960144043
    5. '.PI' → logprob: -13.625391960144043
    6. '.p' → logprob: -14.000391960144043
    7. '.atan' → logprob: -16.250391006469727
    8. '.py' → logprob: -16.250391006469727
    9. '.psi' → logprob: -17.125391006469727
    10. '\.' → logprob: -17.250391006469727

Token 331: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05488476902246475
    2. '-' → logprob: -2.929884672164917
    3. '<|end|>' → logprob: -13.679884910583496
    4. ' ' → logprob: -14.054884910583496
    5. ')' → logprob: -16.05488395690918
    6. '*' → logprob: -16.67988395690918
    7. ' -
' → logprob: -16.92988395690918
    8. ' ' → logprob: -16.92988395690918
    9. '   ' → logprob: -17.42988395690918
    10. '```' → logprob: -17.55488395690918

Token 332: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0001234428636962548
    2. ' cc' → logprob: -9.000123023986816
    3. '	cc' → logprob: -17.875123977661133
    4. '_cc' → logprob: -19.625123977661133
    5. '(cc' → logprob: -19.750123977661133
    6. 'ccc' → logprob: -20.250123977661133
    7. 'c' → logprob: -21.000123977661133
    8. '   ' → logprob: -21.375123977661133
    9. ' ' → logprob: -22.125123977661133
    10. 'cccc' → logprob: -22.375123977661133

Token 333: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.5776860184123507e-06
    2. 'cw' → logprob: -14.12500286102295
    3. '       ' → logprob: -14.50000286102295
    4. '   ' → logprob: -15.87500286102295
    5. 'ww' → logprob: -16.000001907348633
    6. 'wright' → logprob: -16.125001907348633
    7. 'right' → logprob: -16.250001907348633
    8. 'W' → logprob: -16.250001907348633
    9. '
' → logprob: -16.500001907348633
    10. '           ' → logprob: -16.500001907348633

Token 334: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -9.253090865968261e-06
    2. 'angle' → logprob: -11.625009536743164
    3. 'w' → logprob: -16.625009536743164
    4. '_angles' → logprob: -16.875009536743164
    5. 'pi' → logprob: -17.250009536743164
    6. 'o' → logprob: -17.375009536743164
    7. 'Angle' → logprob: -17.750009536743164
    8. '\' → logprob: -18.000009536743164
    9. 'ANGLE' → logprob: -18.625009536743164
    10. 'p' → logprob: -18.625009536743164

Token 335: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19901171326637268
    2. '
' → logprob: -1.8240116834640503
    3. 'return' → logprob: -4.32401180267334
    4. ' return' → logprob: -6.07401180267334
    5. '	return' → logprob: -6.57401180267334
    6. '	' → logprob: -6.94901180267334
    7. '   ' → logprob: -8.07401180267334
    8. '        
' → logprob: -8.07401180267334
    9. '
' → logprob: -9.07401180267334
    10. '<|end|>' → logprob: -9.32401180267334

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012560156174004078
    2. ' return' → logprob: -5.3875603675842285
    3. '
' → logprob: -5.7625603675842285
    4. '   ' → logprob: -6.2625603675842285
    5. 'return' → logprob: -6.8875603675842285
    6. '	return' → logprob: -7.0125603675842285
    7. '<|end|>' → logprob: -7.3875603675842285
    8. '	' → logprob: -9.13755989074707
    9. ')' → logprob: -10.01255989074707
    10. '        
' → logprob: -10.26255989074707

Token 337: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1755773276090622
    2. 'return' → logprob: -2.175577402114868
    3. ' return' → logprob: -3.050577402114868
    4. '   ' → logprob: -9.550577163696289
    5. '	return' → logprob: -9.800577163696289
    6. '
' → logprob: -11.425577163696289
    7. '	' → logprob: -11.675577163696289
    8. ' ' → logprob: -13.925577163696289
    9. '        
' → logprob: -14.050577163696289
    10. ':return' → logprob: -14.175577163696289

Token 338: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4740801155567169
    2. ' right' → logprob: -0.9740800857543945
    3. '	right' → logprob: -13.849080085754395
    4. '   ' → logprob: -14.349080085754395
    5. ' ' → logprob: -14.724080085754395
    6. '(right' → logprob: -15.099080085754395
    7. 'abs' → logprob: -15.724080085754395
    8. 'left' → logprob: -16.09908103942871
    9. 'math' → logprob: -16.47408103942871
    10. 'Right' → logprob: -16.47408103942871

Token 339: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -5.512236498361744e-07
    2. 'angle' → logprob: -14.750000953674316
    3. '   ' → logprob: -17.75
    4. 'Angle' → logprob: -17.75
    5. '>' → logprob: -18.125
    6. '_' → logprob: -19.0
    7. '
' → logprob: -19.125
    8. ' angle' → logprob: -19.75
    9. ')' → logprob: -19.875
    10. ' _' → logprob: -20.125

Token 340: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.27063554525375366
    2. '>=' → logprob: -2.2706356048583984
    3. ' >' → logprob: -2.6456356048583984
    4. '>' → logprob: -2.7706356048583984
    5. ' ==' → logprob: -8.895635604858398
    6. '==' → logprob: -8.895635604858398
    7. '=' → logprob: -14.395635604858398
    8. ' ' → logprob: -14.770635604858398
    9. ' >
' → logprob: -15.145635604858398
    10. ' <' → logprob: -15.645635604858398

Token 341: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '   ' → logprob: -16.750911712646484
    4. '6' → logprob: -19.125911712646484
    5. 'math' → logprob: -21.000911712646484
    6. '  ' → logprob: -21.625911712646484
    7. '       ' → logprob: -21.750911712646484
    8. '    ' → logprob: -22.125911712646484
    9. '```' → logprob: -22.125911712646484
    10. '
' → logprob: -22.375911712646484

Token 342: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.00002098083496
    4. 'math' → logprob: -19.12502098083496
    5. '6' → logprob: -20.00002098083496
    6. '  ' → logprob: -21.00002098083496
    7. '(' → logprob: -21.37502098083496
    8. '```' → logprob: -21.87502098083496
    9. '
' → logprob: -22.25002098083496
    10. ' math' → logprob: -22.75002098083496

Token 343: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023300565779209137
    2. '*' → logprob: -3.7733006477355957
    3. '*pi' → logprob: -9.898300170898438
    4. ' math' → logprob: -13.148300170898438
    5. '*Math' → logprob: -13.398300170898438
    6. 'math' → logprob: -14.148300170898438
    7. '(math' → logprob: -15.648300170898438
    8. ' ' → logprob: -16.398300170898438
    9. '*np' → logprob: -16.523300170898438
    10. '*object' → logprob: -16.648300170898438

Token 344: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.07888989895582199
    2. ' math' → logprob: -2.578889846801758
    3. '(math' → logprob: -16.828889846801758
    4. 'pi' → logprob: -18.203889846801758
    5. '2' → logprob: -18.328889846801758
    6. '.math' → logprob: -18.328889846801758
    7. ' ' → logprob: -18.453889846801758
    8. 'Math' → logprob: -19.078889846801758
    9. 'python' → logprob: -19.078889846801758
    10. '1' → logprob: -19.828889846801758

Token 345: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -4.11996734328568e-05
    2. '.' → logprob: -10.125041007995605
    3. '.PI' → logprob: -14.250041007995605
    4. '*pi' → logprob: -16.000041961669922
    5. '.atan' → logprob: -16.250041961669922
    6. '.p' → logprob: -16.375041961669922
    7. 'pi' → logprob: -17.125041961669922
    8. '.py' → logprob: -17.500041961669922
    9. ' .' → logprob: -17.875041961669922
    10. '.pow' → logprob: -18.750041961669922

Token 346: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44663161039352417
    2. ':
' → logprob: -1.071631669998169
    3. '       ' → logprob: -4.19663143157959
    4. '           ' → logprob: -6.57163143157959
    5. ':return' → logprob: -7.44663143157959
    6. '):
' → logprob: -7.94663143157959
    7. ' :
' → logprob: -9.07163143157959
    8. '):' → logprob: -9.19663143157959
    9. ' :' → logprob: -9.69663143157959
    10. '.' → logprob: -10.94663143157959

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029164576902985573
    2. ' right' → logprob: -4.279164791107178
    3. '       ' → logprob: -4.529164791107178
    4. 'right' → logprob: -6.279164791107178
    5. ' return' → logprob: -6.279164791107178
    6. 'return' → logprob: -8.27916431427002
    7. '<|end|>' → logprob: -11.40416431427002
    8. '	       ' → logprob: -11.52916431427002
    9. '0' → logprob: -11.65416431427002
    10. '   ' → logprob: -11.90416431427002

Token 348: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6934545040130615
    2. 'right' (adapté à ' right') → logprob: -0.6934545040130615
    3. '       ' → logprob: -8.31845474243164
    4. 'return' → logprob: -10.31845474243164
    5. ' return' → logprob: -10.56845474243164
    6. '	right' → logprob: -13.31845474243164
    7. '0' → logprob: -14.31845474243164
    8. '           ' → logprob: -14.69345474243164
    9. '_right' → logprob: -15.19345474243164
    10. '   ' → logprob: -15.44345474243164

Token 349: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.500001907348633
    3. 'angle' → logprob: -15.250001907348633
    4. '_right' → logprob: -15.500001907348633
    5. ' _' → logprob: -15.625001907348633
    6. 'Angle' → logprob: -15.875001907348633
    7. '\' → logprob: -17.500001907348633
    8. '-' → logprob: -17.625001907348633
    9. '   ' → logprob: -17.875001907348633
    10. '_
' → logprob: -18.125001907348633

Token 350: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.1277972310781479
    2. ' -=' → logprob: -2.1277971267700195
    3. '-' → logprob: -7.1277971267700195
    4. '=' → logprob: -9.62779712677002
    5. ' -' → logprob: -14.62779712677002
    6. '+=' → logprob: -16.877798080444336
    7. ' =' → logprob: -17.502798080444336
    8. '*=' → logprob: -18.752798080444336
    9. '%=' → logprob: -19.002798080444336
    10. ')' → logprob: -19.502798080444336

Token 351: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.881715774536133
    4. '1' → logprob: -19.381715774536133
    5. '0' → logprob: -21.506715774536133
    6. '
' → logprob: -21.881715774536133
    7. 'math' → logprob: -21.881715774536133
    8. '  ' → logprob: -22.506715774536133
    9. '(' → logprob: -22.631715774536133
    10. '	' → logprob: -22.631715774536133

Token 352: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.50020408630371
    4. '
' → logprob: -19.12520408630371
    5. '0' → logprob: -19.37520408630371
    6. '1' → logprob: -20.12520408630371
    7. '(' → logprob: -20.25020408630371
    8. '  ' → logprob: -21.37520408630371
    9. '```' → logprob: -22.25020408630371
    10. '

' → logprob: -22.50020408630371

Token 353: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6934051513671875
    2. ' *' → logprob: -0.6934051513671875
    3. '*pi' → logprob: -8.318405151367188
    4. '*Math' → logprob: -11.443405151367188
    5. '*object' → logprob: -13.443405151367188
    6. '.' → logprob: -14.443405151367188
    7. '*np' → logprob: -15.068405151367188
    8. ' ' → logprob: -15.318405151367188
    9. ' ' → logprob: -15.818405151367188
    10. 'import' → logprob: -15.943405151367188

Token 354: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0380459688603878
    2. ' math' → logprob: -3.288045883178711
    3. 'pi' → logprob: -12.538045883178711
    4. '.math' → logprob: -14.788045883178711
    5. 'python' → logprob: -15.038045883178711
    6. '(math' → logprob: -15.538045883178711
    7. 'Math' → logprob: -17.28804588317871
    8. '_math' → logprob: -17.53804588317871
    9. 'cmath' → logprob: -18.66304588317871
    10. ' pi' → logprob: -19.03804588317871

Token 355: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.00170684396289289
    2. '.' → logprob: -6.376707077026367
    3. '.PI' → logprob: -13.251707077026367
    4. '.p' → logprob: -14.251707077026367
    5. ' .' → logprob: -14.626707077026367
    6. '.pow' → logprob: -15.126707077026367
    7. '*pi' → logprob: -15.126707077026367
    8. '.atan' → logprob: -15.126707077026367
    9. '.py' → logprob: -15.251707077026367
    10. 'pi' → logprob: -15.751707077026367

Token 356: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009155054576694965
    2. 'return' → logprob: -7.75091552734375
    3. ' return' → logprob: -7.87591552734375
    4. '   ' → logprob: -10.12591552734375
    5. '
' → logprob: -10.50091552734375
    6. '	return' → logprob: -10.50091552734375
    7. '	' → logprob: -12.00091552734375
    8. '           ' → logprob: -13.62591552734375
    9. '<|end|>' → logprob: -13.87591552734375
    10. '	   ' → logprob: -14.62591552734375

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014857756905257702
    2. 'return' → logprob: -4.389857769012451
    3. ' return' → logprob: -6.139857769012451
    4. '   ' → logprob: -8.889857292175293
    5. '	return' → logprob: -10.139857292175293
    6. ':return' → logprob: -12.389857292175293
    7. '
' → logprob: -12.889857292175293
    8. ')return' → logprob: -13.139857292175293
    9. '	' → logprob: -13.514857292175293
    10. '```' → logprob: -14.264857292175293

Token 358: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3171755373477936
    2. 'return' (adapté à ' return') → logprob: -1.3171755075454712
    3. ' return' → logprob: -5.567175388336182
    4. '   ' → logprob: -9.94217586517334
    5. '	return' → logprob: -10.31717586517334
    6. ':return' → logprob: -13.81717586517334
    7. ')return' → logprob: -14.56717586517334
    8. '	' → logprob: -14.69217586517334
    9. '           ' → logprob: -14.81717586517334
    10. '```' → logprob: -15.19217586517334

Token 359: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00861468818038702
    2. ' right' → logprob: -4.758614540100098
    3. '	right' → logprob: -16.258615493774414
    4. 'r' → logprob: -17.633615493774414
    5. '   ' → logprob: -18.508615493774414
    6. 'left' → logprob: -19.133615493774414
    7. '(right' → logprob: -19.758615493774414
    8. 'rig' → logprob: -20.008615493774414
    9. '       ' → logprob: -20.258615493774414
    10. 'Right' → logprob: -20.258615493774414

Token 360: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -1.9361264946837764e-07
    2. 'angle' → logprob: -16.5
    3. '_right' → logprob: -17.875
    4. '_' → logprob: -18.625
    5. 'ight' → logprob: -19.75
    6. 'Angle' → logprob: -20.25
    7. '_arrow' → logprob: -21.125
    8. '_ang' → logprob: -21.25
    9. '_answer' → logprob: -21.375
    10. '_age' → logprob: -21.5

Token 361: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8631699681282043
    2. '<|end|>' → logprob: -1.7381699085235596
    3. ':' → logprob: -1.8631699085235596
    4. ')' → logprob: -1.9881699085235596
    5. 'def' → logprob: -2.9881699085235596
    6. '+' → logprob: -3.7381699085235596
    7. '.' → logprob: -4.738170146942139
    8. ' ' → logprob: -5.363170146942139
    9. '
' → logprob: -5.488170146942139
    10. ' def' → logprob: -5.488170146942139

Token 363: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5688372254371643
    2. '   ' → logprob: -1.0688371658325195
    3. ' def' → logprob: -2.4438371658325195
    4. '<|end|>' → logprob: -6.6938371658325195
    5. '	def' → logprob: -7.3188371658325195
    6. ')' → logprob: -7.4438371658325195
    7. ' ' → logprob: -7.8188371658325195
    8. '
' → logprob: -8.69383716583252
    9. '  ' → logprob: -9.19383716583252
    10. '    
' → logprob: -9.31883716583252

Token 364: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.43251851201057434
    2. 'angle' → logprob: -1.682518482208252
    3. ' __' → logprob: -1.932518482208252
    4. ' angle' → logprob: -3.932518482208252
    5. '_angle' → logprob: -7.182518482208252
    6. 'rotate' → logprob: -10.55751895904541
    7. 'distance' → logprob: -11.43251895904541
    8. ' rotate' → logprob: -11.55751895904541
    9. ' ' → logprob: -11.68251895904541
    10. '_' → logprob: -11.93251895904541

Token 365: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.16029144823551178
    2. 'repr' → logprob: -1.9102914333343506
    3. 'lt' → logprob: -10.28529167175293
    4. 'add' → logprob: -11.16029167175293
    5. 'mul' → logprob: -11.16029167175293
    6. 'neg' → logprob: -13.66029167175293
    7. 'str' → logprob: -13.78529167175293
    8. 'hash' → logprob: -14.53529167175293
    9. 'gt' → logprob: -14.53529167175293
    10. 'abs' → logprob: -14.91029167175293

Token 366: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.022502345964312553
    2. '__' → logprob: -4.022502422332764
    3. '__('' → logprob: -5.647502422332764
    4. '__(
' → logprob: -7.272502422332764
    5. '__("' → logprob: -10.022501945495605
    6. '__((' → logprob: -10.397501945495605
    7. '(' → logprob: -10.772501945495605
    8. '_' → logprob: -11.647501945495605
    9. '___' → logprob: -12.147501945495605
    10. '__(*' → logprob: -12.272501945495605

Token 367: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.273621405242011e-05
    2. ')' → logprob: -10.375032424926758
    3. ' self' → logprob: -13.875032424926758
    4. '(self' → logprob: -14.750032424926758
    5. '	self' → logprob: -16.000032424926758
    6. '
' → logprob: -17.500032424926758
    7. 's' → logprob: -18.000032424926758
    8. '   ' → logprob: -18.500032424926758
    9. ')(' → logprob: -19.375032424926758
    10. '):' → logprob: -19.500032424926758

Token 368: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8005132675170898
    2. '__('' → logprob: -1.0505132675170898
    3. '__(' → logprob: -2.05051326751709
    4. 'self' → logprob: -3.67551326751709
    5. '(self' → logprob: -4.55051326751709
    6. '__(
' → logprob: -4.80051326751709
    7. '__(*' → logprob: -5.42551326751709
    8. '__((' → logprob: -5.55051326751709
    9. '__:' → logprob: -5.55051326751709
    10. '__)' → logprob: -5.67551326751709

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2441202849149704
    2. 'f' → logprob: -2.2441203594207764
    3. 'return' → logprob: -2.4941203594207764
    4. ' f' → logprob: -3.8691203594207764
    5. ' return' → logprob: -4.994120121002197
    6. '(f' → logprob: -8.244120597839355
    7. '   ' → logprob: -9.494120597839355
    8. '{return' → logprob: -12.119120597839355
    9. '      ' → logprob: -12.619120597839355
    10. 'Return' → logprob: -12.744120597839355

Token 370: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005606291815638542
    2. ' return' → logprob: -5.255606174468994
    3. '       ' → logprob: -8.005606651306152
    4. '   ' → logprob: -10.255606651306152
    5. 'f' → logprob: -12.630606651306152
    6. '	return' → logprob: -15.630606651306152
    7. '           ' → logprob: -16.880605697631836
    8. 'Return' → logprob: -16.880605697631836
    9. '{return' → logprob: -17.255605697631836
    10. ' f' → logprob: -17.255605697631836

Token 371: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003177952254191041
    2. ' f' → logprob: -5.753178119659424
    3. 'Vector' → logprob: -15.753177642822266
    4. ' ' → logprob: -17.128177642822266
    5. '	f' → logprob: -17.378177642822266
    6. '(f' → logprob: -17.753177642822266
    7. '   ' → logprob: -18.003177642822266
    8. ' Vector' → logprob: -18.253177642822266
    9. ''f' → logprob: -18.253177642822266
    10. ' ' → logprob: -20.128177642822266

Token 372: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31692561507225037
    2. ''' → logprob: -1.3169256448745728
    3. 'Vector' → logprob: -5.691925525665283
    4. '('' → logprob: -9.441926002502441
    5. 'f' → logprob: -10.066926002502441
    6. '<Vector' → logprob: -10.066926002502441
    7. '(Vector' → logprob: -10.066926002502441
    8. '`' → logprob: -10.566926002502441
    9. '("' → logprob: -10.691926002502441
    10. '.Vector' → logprob: -11.941926002502441

Token 373: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -1.1637164789135568e-05
    2. '<Vector' → logprob: -11.500011444091797
    3. '(Vector' → logprob: -14.375011444091797
    4. ' Vector' → logprob: -14.500011444091797
    5. 'Vec' → logprob: -16.000011444091797
    6. '('' → logprob: -16.250011444091797
    7. '_Vector' → logprob: -16.625011444091797
    8. '.Vector' → logprob: -17.500011444091797
    9. '	Vector' → logprob: -17.875011444091797
    10. '_vector' → logprob: -18.875011444091797

Token 374: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '(' → logprob: -21.0
    3. '(x' → logprob: -21.125
    4. '۲' → logprob: -21.5
    5. 'Vector' → logprob: -21.75
    6. '```' → logprob: -21.75
    7. ' ' → logprob: -22.125
    8. '２' → logprob: -23.0625
    9. '٢' → logprob: -23.125
    10. '{' → logprob: -23.5625

Token 375: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -2.339278580620885e-06
    2. '{' → logprob: -13.875001907348633
    3. '(' → logprob: -14.625001907348633
    4. '(D' → logprob: -14.875001907348633
    5. ' D' → logprob: -15.000001907348633
    6. '<D' → logprob: -16.875001907348633
    7. '(self' → logprob: -17.000001907348633
    8. '2' → logprob: -17.375001907348633
    9. '"D' → logprob: -17.375001907348633
    10. 'd' → logprob: -17.625001907348633

Token 376: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.0007920012576505542
    2. '(self' → logprob: -7.750792026519775
    3. '(' → logprob: -8.000791549682617
    4. '(x' → logprob: -10.625791549682617
    5. '{' → logprob: -14.250791549682617
    6. '({
' → logprob: -14.750791549682617
    7. '("{' → logprob: -15.625791549682617
    8. '('{' → logprob: -15.625791549682617
    9. '(
' → logprob: -16.000791549682617
    10. '(`' → logprob: -16.250791549682617

Token 377: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.704273118884885e-07
    2. '{' → logprob: -14.750000953674316
    3. ' self' → logprob: -15.375000953674316
    4. '   ' → logprob: -18.375
    5. 'sel' → logprob: -20.0
    6. 'repr' → logprob: -20.0
    7. '{
' → logprob: -20.125
    8. 'round' → logprob: -20.375
    9. '(self' → logprob: -20.5
    10. '	self' → logprob: -20.5

Token 378: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0015568782109767199
    2. '.' → logprob: -6.501556873321533
    3. 'self' → logprob: -9.876557350158691
    4. ' .' → logprob: -13.001557350158691
    5. ' self' → logprob: -15.001557350158691
    6. 'x' → logprob: -15.251557350158691
    7. '.self' → logprob: -15.626557350158691
    8. '{x' → logprob: -17.001556396484375
    9. '.s' → logprob: -17.251556396484375
    10. ' ' → logprob: -17.751556396484375

Token 379: ':.' (ID: 27474)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031899516470730305
    2. '},' → logprob: -5.753190040588379
    3. ' ,' → logprob: -11.628190040588379
    4. '},{' → logprob: -13.378190040588379
    5. ',
' → logprob: -14.503190040588379
    6. '}' → logprob: -14.503190040588379
    7. ',.' → logprob: -15.378190040588379
    8. ' },' → logprob: -16.503189086914062
    9. '‌,' → logprob: -16.753189086914062
    10. '),' → logprob: -16.878189086914062

Token 380: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5345603227615356
    2. '6' → logprob: -1.2845603227615356
    3. '2' → logprob: -2.034560203552246
    4. '4' → logprob: -5.034560203552246
    5. '1' → logprob: -10.159560203552246
    6. '5' → logprob: -11.659560203552246
    7. '{' → logprob: -12.409560203552246
    8. '8' → logprob: -13.534560203552246
    9. ' ' → logprob: -15.159560203552246
    10. '06' → logprob: -15.159560203552246

Token 381: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. 'g' → logprob: -15.625
    3. ',f' → logprob: -17.75
    4. '
' → logprob: -18.875
    5. '}' → logprob: -19.25
    6. ',' → logprob: -20.125
    7. ' f' → logprob: -20.125
    8. ''f' → logprob: -20.125
    9. '},{' → logprob: -20.75
    10. '```' → logprob: -20.875

Token 382: '},{' (ID: 34684)
  Prédit: '},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.4742286503314972
    2. ',' → logprob: -0.9742286205291748
    3. '},{' → logprob: -8.849228858947754
    4. '}' → logprob: -12.724228858947754
    5. ' ,' → logprob: -13.224228858947754
    6. '},
' → logprob: -13.349228858947754
    7. ' },' → logprob: -14.599228858947754
    8. 'f' → logprob: -14.849228858947754
    9. '),' → logprob: -14.974228858947754
    10. ',
' → logprob: -15.849228858947754

Token 383: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02978786639869213
    2. ' self' → logprob: -3.52978777885437
    3. '{' → logprob: -10.90478801727295
    4. ' ' → logprob: -11.40478801727295
    5. ' ' → logprob: -12.52978801727295
    6. '	self' → logprob: -13.15478801727295
    7. ' {' → logprob: -14.52978801727295
    8. '_self' → logprob: -15.27978801727295
    9. 'Self' → logprob: -15.40478801727295
    10. '  ' → logprob: -15.40478801727295

Token 384: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.04863164573907852
    2. '.' → logprob: -3.0486316680908203
    3. 'y' → logprob: -10.92363166809082
    4. ',' → logprob: -10.92363166809082
    5. ',y' → logprob: -12.54863166809082
    6. ' .' → logprob: -12.79863166809082
    7. ' ' → logprob: -14.29863166809082
    8. ' y' → logprob: -14.67363166809082
    9. '.x' → logprob: -15.29863166809082
    10. ',.' → logprob: -15.79863166809082

Token 385: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.0001434690784662962
    2. '.' → logprob: -8.875143051147461
    3. ' :.' → logprob: -12.625143051147461
    4. '})' → logprob: -16.62514305114746
    5. ' .' → logprob: -16.87514305114746
    6. '.f' → logprob: -17.12514305114746
    7. '.:' → logprob: -17.12514305114746
    8. '%.' → logprob: -17.25014305114746
    9. ':f' → logprob: -17.62514305114746
    10. ':' → logprob: -17.75014305114746

Token 386: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1444658786058426
    2. 'f' → logprob: -2.019465923309326
    3. '{' → logprob: -6.644465923309326
    4. ' ' → logprob: -7.894465923309326
    5. '   ' → logprob: -10.269465446472168
    6. '  ' → logprob: -10.519465446472168
    7. '}' → logprob: -11.019465446472168
    8. ' f' → logprob: -11.269465446472168
    9. ':f' → logprob: -12.519465446472168
    10. '```' → logprob: -12.519465446472168

Token 387: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. '3' → logprob: -17.0
    3. '})' → logprob: -18.5
    4. '}' → logprob: -19.625
    5. ':f' → logprob: -19.625
    6. ' f' → logprob: -19.625
    7. '{' → logprob: -20.375
    8. '}")' → logprob: -21.0
    9. ''f' → logprob: -21.125
    10. '	f' → logprob: -21.625

Token 388: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -2.15310683415737e-05
    2. ')' → logprob: -11.000021934509277
    3. ')")' → logprob: -12.750021934509277
    4. ')">' → logprob: -14.500021934509277
    5. '")' → logprob: -14.625021934509277
    6. '')"' → logprob: -14.750021934509277
    7. ')`' → logprob: -15.750021934509277
    8. ')"
' → logprob: -16.12502098083496
    9. ')”' → logprob: -16.50002098083496
    10. '})' → logprob: -16.50002098083496

Token 389: '"

' (ID: 2678)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.566651463508606
    2. '"' → logprob: -0.941651463508606
    3. ')' → logprob: -3.1916513442993164
    4. '<|end|>' → logprob: -6.941651344299316
    5. ')"' → logprob: -8.066651344299316
    6. '"""' → logprob: -9.816651344299316
    7. '```' → logprob: -9.941651344299316
    8. '"
' → logprob: -10.566651344299316
    9. '">' → logprob: -10.941651344299316
    10. '"}' → logprob: -11.316651344299316

Token 390: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25855201482772827
    2. 'class' → logprob: -1.508552074432373
    3. '   ' → logprob: -5.133552074432373
    4. 'from' → logprob: -7.383552074432373
    5. ' def' → logprob: -9.633551597595215
    6. '```' → logprob: -12.758551597595215
    7. ' class' → logprob: -12.883551597595215
    8. '#' → logprob: -12.883551597595215
    9. '
' → logprob: -13.008551597595215
    10. '	def' → logprob: -13.133551597595215

Token 392: ' Flag' (ID: 40343)
  Prédit: ' Polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Polygon' → logprob: -0.3962368667125702
    2. ' Conv' → logprob: -2.0212368965148926
    3. ' Point' → logprob: -2.5212368965148926
    4. 'Polygon' → logprob: -3.0212368965148926
    5. ' Path' → logprob: -4.146236896514893
    6. ' Vector' → logprob: -4.521236896514893
    7. 'Conv' → logprob: -4.896236896514893
    8. 'Point' → logprob: -5.021236896514893
    9. ' Line' → logprob: -6.021236896514893
    10. 'Vector' → logprob: -6.271236896514893

Token 393: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004702464677393436
    2. ':
' → logprob: -6.504702568054199
    3. '():' → logprob: -6.879702568054199
    4. 'Point' → logprob: -7.629702568054199
    5. 'Position' → logprob: -8.5047025680542
    6. '(' → logprob: -8.7547025680542
    7. '{' → logprob: -9.1297025680542
    8. 'Type' → logprob: -9.2547025680542
    9. 'Area' → logprob: -9.3797025680542
    10. 'Recognizer' → logprob: -9.3797025680542

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010366239439463243
    2. '__' → logprob: -10.375103950500488
    3. ' def' → logprob: -10.375103950500488
    4. 'def' → logprob: -10.625103950500488
    5. ' __' → logprob: -11.125103950500488
    6. '   ' → logprob: -14.375103950500488
    7. '	def' → logprob: -14.750103950500488
    8. '\t' → logprob: -15.750103950500488
    9. 'class' → logprob: -16.375102996826172
    10. '  ' → logprob: -16.500102996826172

Token 395: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11797087639570236
    2. '__' (adapté à ' __') → logprob: -2.6179709434509277
    3. ' def' → logprob: -3.4929709434509277
    4. 'def' → logprob: -4.867970943450928
    5. '   ' → logprob: -8.99297046661377
    6. 'pass' → logprob: -10.24297046661377
    7. ' pass' → logprob: -11.86797046661377
    8. 'from' → logprob: -12.30547046661377
    9. 'slots' → logprob: -12.30547046661377
    10. '.__' → logprob: -12.43047046661377

Token 396: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.00011236425780225545
    2. '_slots' → logprob: -9.125112533569336
    3. 'slot' → logprob: -13.000112533569336
    4. 'init' → logprob: -14.250112533569336
    5. ' slots' → logprob: -15.500112533569336
    6. 'name' → logprob: -15.625112533569336
    7. '__' → logprob: -16.625112533569336
    8. 'code' → logprob: -17.375112533569336
    9. '
' → logprob: -17.500112533569336
    10. 'Slots' → logprob: -17.875112533569336

Token 397: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.1008713702030946e-06
    2. '=' → logprob: -14.250001907348633
    3. '___' → logprob: -14.250001907348633
    4. '__('' → logprob: -14.375001907348633
    5. '__:' → logprob: -17.000001907348633
    6. '____' → logprob: -17.125001907348633
    7. '_' → logprob: -17.250001907348633
    8. '__
' → logprob: -18.625001907348633
    9. '__

' → logprob: -18.875001907348633
    10. '__)' → logprob: -19.250001907348633

Token 398: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3253694176673889
    2. '=' → logprob: -1.3253693580627441
    3. '__' → logprob: -4.450369358062744
    4. '=('' → logprob: -7.950369358062744
    5. '=['' → logprob: -13.325369834899902
    6. '_' → logprob: -13.450369834899902
    7. '___' → logprob: -13.575369834899902
    8. '_=' → logprob: -14.075369834899902
    9. '__('' → logprob: -14.200369834899902
    10. '   ' → logprob: -14.825369834899902

Token 399: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.053296804428100586
    2. '('_' → logprob: -3.0532968044281006
    3. ' ('' → logprob: -5.55329704284668
    4. '('__' → logprob: -7.17829704284668
    5. ''s' → logprob: -10.05329704284668
    6. '(' → logprob: -12.55329704284668
    7. ''x' → logprob: -12.67829704284668
    8. '['' → logprob: -12.67829704284668
    9. ''' → logprob: -13.55329704284668
    10. ''name' → logprob: -13.92829704284668

Token 400: 'position' (ID: 4504)
  Prédit: 'position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.7789796590805054
    2. 'pos' → logprob: -1.6539796590805054
    3. 'point' → logprob: -2.778979778289795
    4. 'name' → logprob: -3.403979778289795
    5. 'index' → logprob: -3.403979778289795
    6. 'direction' → logprob: -3.403979778289795
    7. 'id' → logprob: -3.653979778289795
    8. 'angle' → logprob: -3.778979778289795
    9. 'points' → logprob: -4.153979778289795
    10. 'value' → logprob: -4.278979778289795

Token 401: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.009464584290981293
    2. '')' → logprob: -4.759464740753174
    3. ',' → logprob: -7.134464740753174
    4. '','' → logprob: -10.384464263916016
    5. ')' → logprob: -12.009464263916016
    6. '_vector' → logprob: -12.509464263916016
    7. ''' → logprob: -12.759464263916016
    8. '',
' → logprob: -13.009464263916016
    9. ':' → logprob: -13.634464263916016
    10. ','' → logprob: -13.759464263916016

Token 402: ')

' (ID: 1029)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8214676380157471
    2. ' '' → logprob: -2.071467638015747
    3. ' direction' → logprob: -2.321467638015747
    4. ''s' → logprob: -2.446467638015747
    5. 'direction' → logprob: -2.821467638015747
    6. ''name' → logprob: -3.696467638015747
    7. ''d' → logprob: -4.071467399597168
    8. ''type' → logprob: -4.696467399597168
    9. ''is' → logprob: -4.696467399597168
    10. '   ' → logprob: -4.821467399597168

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06001286953687668
    2. 'position' → logprob: -3.1850128173828125
    3. ' position' → logprob: -4.6850128173828125
    4. ' def' → logprob: -5.4350128173828125
    5. 'def' → logprob: -6.0600128173828125
    6. '    
' → logprob: -8.185012817382812
    7. '('' → logprob: -8.810012817382812
    8. ' (' → logprob: -8.935012817382812
    9. ':' → logprob: -9.935012817382812
    10. '(' → logprob: -9.935012817382812

Token 404: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007725514937192202
    2. ' def' → logprob: -5.257725715637207
    3. 'position' → logprob: -6.007725715637207
    4. '   ' → logprob: -10.632725715637207
    5. ' position' → logprob: -12.257725715637207
    6. '	def' → logprob: -17.25772476196289
    7. ' ' → logprob: -17.38272476196289
    8. '  ' → logprob: -17.75772476196289
    9. '
' → logprob: -18.50772476196289
    10. '    
' → logprob: -18.50772476196289

Token 405: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.52840256690979
    2. ' position' → logprob: -1.15340256690979
    3. 'position' → logprob: -2.52840256690979
    4. '__' → logprob: -4.528402328491211
    5. ' def' → logprob: -5.778402328491211
    6. '_position' → logprob: -7.278402328491211
    7. '_init' → logprob: -9.153402328491211
    8. ' ' → logprob: -9.278402328491211
    9. 'def' → logprob: -9.403402328491211
    10. 'init' → logprob: -9.778402328491211

Token 406: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.7697225252486533e-06
    2. 'slots' → logprob: -12.500003814697266
    3. 'slot' → logprob: -18.875003814697266
    4. '_init' → logprob: -19.000003814697266
    5. ' init' → logprob: -19.625003814697266
    6. 'ini' → logprob: -20.750003814697266
    7. 'inite' → logprob: -22.250003814697266
    8. '	init' → logprob: -22.250003814697266
    9. 'in' → logprob: -22.500003814697266
    10. '(init' → logprob: -23.125003814697266

Token 407: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0009046725463122129
    2. '__' → logprob: -7.750904560089111
    3. '(self' → logprob: -8.00090503692627
    4. '__(
' → logprob: -9.62590503692627
    5. '(' → logprob: -10.12590503692627
    6. '_(' → logprob: -11.00090503692627
    7. ' (' → logprob: -11.37590503692627
    8. '__((' → logprob: -12.87590503692627
    9. 'self' → logprob: -13.75090503692627
    10. '_' → logprob: -15.00090503692627

Token 408: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00041816019802354276
    2. 'position' → logprob: -7.875418186187744
    3. ' self' → logprob: -10.250417709350586
    4. '(self' → logprob: -13.250417709350586
    5. 'pos' → logprob: -15.375417709350586
    6. ',' → logprob: -15.500417709350586
    7. '0' → logprob: -16.000417709350586
    8. '
' → logprob: -16.125417709350586
    9. ' position' → logprob: -16.250417709350586
    10. '<|end|>' → logprob: -16.375417709350586

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018328495789319277
    2. 'self' → logprob: -6.501832962036133
    3. ' ,' → logprob: -8.751832962036133
    4. '(self' → logprob: -9.626832962036133
    5. ' self' → logprob: -9.876832962036133
    6. '<|end|>' → logprob: -10.126832962036133
    7. ')' → logprob: -12.376832962036133
    8. ',self' → logprob: -12.751832962036133
    9. 'position' → logprob: -13.251832962036133
    10. ' (' → logprob: -13.376832962036133

Token 410: ' x' (ID: 1215)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.00071553117595613
    2. ' position' → logprob: -7.250715732574463
    3. 'self' → logprob: -12.750715255737305
    4. 'x' → logprob: -13.125715255737305
    5. 'pos' → logprob: -15.125715255737305
    6. '	position' → logprob: -15.750715255737305
    7. '<|end|>' → logprob: -17.125715255737305
    8. '.position' → logprob: -17.125715255737305
    9. '   ' → logprob: -17.625715255737305
    10. '_position' → logprob: -18.375715255737305

Token 411: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010410251561552286
    2. ',' → logprob: -6.876040935516357
    3. '=' → logprob: -12.876041412353516
    4. ':int' → logprob: -13.001041412353516
    5. ' :' → logprob: -13.126041412353516
    6. '=float' → logprob: -14.751041412353516
    7. ' ,' → logprob: -14.876041412353516
    8. '<|end|>' → logprob: -15.126041412353516
    9. ',float' → logprob: -16.001041412353516
    10. '   ' → logprob: -16.626041412353516

Token 412: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0019366045016795397
    2. ' float' → logprob: -6.251936435699463
    3. 'int' → logprob: -12.251936912536621
    4. '=float' → logprob: -13.626936912536621
    5. '	float' → logprob: -13.751936912536621
    6. '(float' → logprob: -15.001936912536621
    7. ',float' → logprob: -15.001936912536621
    8. '<float' → logprob: -16.376935958862305
    9. '.float' → logprob: -16.501935958862305
    10. ':' → logprob: -16.626935958862305

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.408677290892228e-05
    2. ' ,' → logprob: -10.0000638961792
    3. ',float' → logprob: -11.2500638961792
    4. ',y' → logprob: -13.2500638961792
    5. '   ' → logprob: -13.7500638961792
    6. ',x' → logprob: -14.1250638961792
    7. '=' → logprob: -14.3750638961792
    8. ')' → logprob: -14.5000638961792
    9. '):' → logprob: -15.1250638961792
    10. ',
' → logprob: -15.2500638961792

Token 414: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00861456897109747
    2. ' y' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.383615493774414
    4. '	y' → logprob: -17.883615493774414
    5. '    ' → logprob: -18.258615493774414
    6. 'x' → logprob: -18.508615493774414
    7. ' ' → logprob: -18.633615493774414
    8. '<|end|>' → logprob: -18.633615493774414
    9. '  ' → logprob: -19.383615493774414
    10. '
' → logprob: -20.758615493774414

Token 415: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15513594448566437
    2. ':' → logprob: -2.0301358699798584
    3. ')' → logprob: -5.0301361083984375
    4. '):
' → logprob: -5.1551361083984375
    5. '   ' → logprob: -10.655136108398438
    6. ' ):' → logprob: -10.655136108398438
    7. '):
' → logprob: -12.280136108398438
    8. '=' → logprob: -12.405136108398438
    9. '):

' → logprob: -12.780136108398438
    10. ''):' → logprob: -12.780136108398438

Token 416: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004081959370523691
    2. ' float' → logprob: -5.504081726074219
    3. '	float' → logprob: -13.504081726074219
    4. '=float' → logprob: -13.504081726074219
    5. ')' → logprob: -15.004081726074219
    6. ',float' → logprob: -15.504081726074219
    7. '<float' → logprob: -16.50408172607422
    8. '(float' → logprob: -16.62908172607422
    9. '.float' → logprob: -17.00408172607422
    10. 'flo' → logprob: -17.75408172607422

Token 417: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4829619824886322
    2. '):
' → logprob: -0.9829620122909546
    3. ')' → logprob: -4.732962131500244
    4. '   ' → logprob: -10.982961654663086
    5. '):
' → logprob: -11.107961654663086
    6. ''):
' → logprob: -12.232961654663086
    7. ''):' → logprob: -12.857961654663086
    8. '):

' → logprob: -13.482961654663086
    9. ':' → logprob: -13.607961654663086
    10. ')**' → logprob: -14.357961654663086

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010792064480483532
    2. 'self' → logprob: -4.760792255401611
    3. ' self' → logprob: -6.135792255401611
    4. '      ' → logprob: -13.010791778564453
    5. ')' → logprob: -13.135791778564453
    6. ' ' → logprob: -13.760791778564453
    7. '):
' → logprob: -13.760791778564453
    8. '	self' → logprob: -13.760791778564453
    9. '   ' → logprob: -14.010791778564453
    10. ',' → logprob: -14.510791778564453

Token 419: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00010235115041723475
    2. ' self' → logprob: -9.250102043151855
    3. '       ' → logprob: -12.000102043151855
    4. 'super' → logprob: -16.875102996826172
    5. '   ' → logprob: -20.125102996826172
    6. '	self' → logprob: -20.625102996826172
    7. '(self' → logprob: -21.125102996826172
    8. '
' → logprob: -23.250102996826172
    9. '        
' → logprob: -23.625102996826172
    10. '[self' → logprob: -24.000102996826172

Token 420: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.005448970478028059
    2. 'position' → logprob: -5.880448818206787
    3. '=' → logprob: -6.505448818206787
    4. '.' → logprob: -7.255448818206787
    5. ' =' → logprob: -8.630449295043945
    6. ':' → logprob: -8.755449295043945
    7. ' position' → logprob: -9.880449295043945
    8. '_position' → logprob: -10.880449295043945
    9. 'Position' → logprob: -12.005449295043945
    10. 'self' → logprob: -12.130449295043945

Token 421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. ')' → logprob: -16.686967849731445
    4. ' ' → logprob: -16.936967849731445
    5. '=
' → logprob: -18.186967849731445
    6. '=

' → logprob: -18.811967849731445
    7. '<|end|>' → logprob: -18.811967849731445
    8. ' =
' → logprob: -19.186967849731445
    9. '＝' → logprob: -19.436967849731445
    10. '=}' → logprob: -19.686967849731445

Token 422: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.07889044284820557
    2. ' Vector' → logprob: -2.578890323638916
    3. '	Vector' → logprob: -14.453890800476074
    4. '(Vector' → logprob: -15.828890800476074
    5. '<Vector' → logprob: -17.953889846801758
    6. '_Vector' → logprob: -18.203889846801758
    7. '.Vector' → logprob: -19.453889846801758
    8. '_vector' → logprob: -21.078889846801758
    9. '   ' → logprob: -22.328889846801758
    10. ' vector' → logprob: -22.578889846801758

Token 423: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '(Vector' → logprob: -20.125
    4. 'Vector' → logprob: -20.5
    5. '(' → logprob: -22.125
    6. '   ' → logprob: -22.625
    7. '۲' → logprob: -23.0
    8. '.Vector' → logprob: -23.0
    9. '(x' → logprob: -23.125
    10. '<Vector' → logprob: -23.25

Token 424: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -8.180258191714529e-06
    2. '2' → logprob: -11.750008583068848
    3. 'Vector' → logprob: -15.375008583068848
    4. '(' → logprob: -18.62500762939453
    5. '_D' → logprob: -19.12500762939453
    6. ' D' → logprob: -20.50000762939453
    7. '   ' → logprob: -21.12500762939453
    8. '(Vector' → logprob: -21.12500762939453
    9. '(D' → logprob: -21.25000762939453
    10. '{' → logprob: -21.62500762939453

Token 425: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. 'x' → logprob: -16.125017166137695
    4. '(
' → logprob: -18.375017166137695
    5. ' (' → logprob: -18.625017166137695
    6. '(float' → logprob: -20.500017166137695
    7. '((' → logprob: -21.125017166137695
    8. '(f' → logprob: -22.000017166137695
    9. '(y' → logprob: -22.000017166137695
    10. '```' → logprob: -22.250017166137695

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028374455869197845
    2. ',y' → logprob: -5.877837657928467
    3. ' ,' → logprob: -10.377837181091309
    4. ',
' → logprob: -14.127837181091309
    5. ',x' → logprob: -14.752837181091309
    6. ',user' → logprob: -17.002838134765625
    7. ',float' → logprob: -17.127838134765625
    8. '‌,' → logprob: -17.377838134765625
    9. '<|end|>' → logprob: -17.377838134765625
    10. ',Y' → logprob: -17.502838134765625

Token 427: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006715370807796717
    2. ' y' → logprob: -5.006715297698975
    3. '	y' → logprob: -18.631715774536133
    4. ' ' → logprob: -19.381715774536133
    5. '
' → logprob: -20.881715774536133
    6. ')y' → logprob: -21.006715774536133
    7. '   ' → logprob: -22.006715774536133
    8. '    ' → logprob: -22.006715774536133
    9. ''y' → logprob: -22.381715774536133
    10. '  ' → logprob: -22.756715774536133

Token 428: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.375001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '       ' → logprob: -17.250001907348633
    6. ')return' → logprob: -18.250001907348633
    7. '}' → logprob: -18.500001907348633
    8. '<|end|>' → logprob: -18.500001907348633
    9. ')}' → logprob: -18.625001907348633
    10. '))' → logprob: -20.000001907348633

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21699728071689606
    2. '<|end|>' → logprob: -1.7169972658157349
    3. 'class' → logprob: -4.966997146606445
    4. '
' → logprob: -5.091997146606445
    5. '    
' → logprob: -6.966997146606445
    6. '<|end|>' → logprob: -7.091997146606445
    7. '```' → logprob: -8.716997146606445
    8. ')' → logprob: -9.091997146606445
    9. 'def' → logprob: -9.591997146606445
    10. ' ' → logprob: -10.466997146606445

Token 430: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016861737822182477
    2. 'class' → logprob: -9.750168800354004
    3. '<|end|>' → logprob: -9.875168800354004
    4. ' def' → logprob: -10.625168800354004
    5. '@property' → logprob: -11.125168800354004
    6. '   ' → logprob: -11.750168800354004
    7. '```' → logprob: -11.875168800354004
    8. ')' → logprob: -13.375168800354004
    9. '<|end|>' → logprob: -14.250168800354004
    10. '#' → logprob: -14.250168800354004

Token 431: ' distance' (ID: 9324)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6500240564346313
    2. ' __' → logprob: -1.1500240564346313
    3. '__' → logprob: -2.525023937225342
    4. 'def' → logprob: -4.025023937225342
    5. ' move' → logprob: -4.275023937225342
    6. ' position' → logprob: -4.650023937225342
    7. ' distance' → logprob: -4.775023937225342
    8. '_repr' → logprob: -5.275023937225342
    9. 'distance' → logprob: -5.275023937225342
    10. 'repr' → logprob: -5.525023937225342

Token 432: '_from' (ID: 12526)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.5860876441001892
    2. '(self' → logprob: -0.8360876441001892
    3. '(' → logprob: -4.836087703704834
    4. 'to' → logprob: -6.336087703704834
    5. ' (' → logprob: -8.461087226867676
    6. '_' → logprob: -9.586087226867676
    7. '_from' → logprob: -9.711087226867676
    8. ' to' → logprob: -11.461087226867676
    9. 'self' → logprob: -11.461087226867676
    10. 'To' → logprob: -11.836087226867676

Token 433: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015214069280773401
    2. 'self' → logprob: -7.251521587371826
    3. '(' → logprob: -7.626521587371826
    4. '_player' → logprob: -9.251521110534668
    5. '<|end|>' → logprob: -9.251521110534668
    6. '_origin' → logprob: -10.501521110534668
    7. '_flag' → logprob: -11.001521110534668
    8. '_point' → logprob: -11.126521110534668
    9. '_position' → logprob: -11.376521110534668
    10. '_vector' → logprob: -11.751521110534668

Token 434: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008962165447883308
    2. '(' → logprob: -7.750896453857422
    3. ',' → logprob: -8.500896453857422
    4. ' (' → logprob: -9.000896453857422
    5. 'self' → logprob: -9.250896453857422
    6. ')' → logprob: -10.500896453857422
    7. 'def' → logprob: -12.875896453857422
    8. ')(' → logprob: -13.000896453857422
    9. ',self' → logprob: -13.125896453857422
    10. '(position' → logprob: -13.625896453857422

Token 435: ' point' (ID: 2438)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3457946479320526
    2. 'self' → logprob: -1.845794677734375
    3. 'point' → logprob: -2.220794677734375
    4. ' other' → logprob: -3.845794677734375
    5. 'position' → logprob: -6.595794677734375
    6. ' point' → logprob: -6.595794677734375
    7. 'pos' → logprob: -6.970794677734375
    8. ' self' → logprob: -7.345794677734375
    9. 'p' → logprob: -9.720794677734375
    10. 'vector' → logprob: -10.095794677734375

Token 436: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001499060745118186
    2. ')' → logprob: -9.125149726867676
    3. '):' → logprob: -10.375149726867676
    4. 'self' → logprob: -12.375149726867676
    5. '(self' → logprob: -12.625149726867676
    6. '   ' → logprob: -14.375149726867676
    7. '       ' → logprob: -15.000149726867676
    8. '):
' → logprob: -15.125149726867676
    9. '_:' → logprob: -15.250149726867676
    10. '_point' → logprob: -16.125150680541992

Token 437: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.015570069663226604
    2. ' Vector' → logprob: -4.265570163726807
    3. ''' → logprob: -6.765570163726807
    4. ' '' → logprob: -8.390569686889648
    5. '<Vector' → logprob: -11.640569686889648
    6. '	Vector' → logprob: -12.390569686889648
    7. '_Vector' → logprob: -12.390569686889648
    8. '(Vector' → logprob: -12.640569686889648
    9. ''s' → logprob: -12.890569686889648
    10. '.Vector' → logprob: -13.640569686889648

Token 438: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'Vector' → logprob: -16.75
    3. '(Vector' → logprob: -18.0
    4. '```' → logprob: -18.0
    5. ' ' → logprob: -18.125
    6. '<Vector' → logprob: -18.625
    7. '.Vector' → logprob: -18.875
    8. '۲' → logprob: -19.0625
    9. '[' → logprob: -19.1875
    10. ')' → logprob: -19.5

Token 439: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -7.004696090007201e-05
    2. '2' → logprob: -9.750069618225098
    3. 'Vector' → logprob: -11.375069618225098
    4. '(Vector' → logprob: -16.750070571899414
    5. 'd' → logprob: -16.875070571899414
    6. 'Point' → logprob: -17.500070571899414
    7. '(' → logprob: -18.125070571899414
    8. '('' → logprob: -18.375070571899414
    9. 'vector' → logprob: -18.500070571899414
    10. 'V' → logprob: -18.625070571899414

Token 440: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. ' )' → logprob: -11.75001335144043
    3. ':' → logprob: -12.37501335144043
    4. '):' → logprob: -14.87501335144043
    5. '')' → logprob: -15.12501335144043
    6. '   ' → logprob: -16.12501335144043
    7. '):
' → logprob: -16.75001335144043
    8. '`)' → logprob: -17.37501335144043
    9. ' ' → logprob: -18.25001335144043
    10. '       ' → logprob: -19.50001335144043

Token 441: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8046712279319763
    2. ' ->' → logprob: -0.9296712279319763
    3. '->' → logprob: -2.054671287536621
    4. '(self' → logprob: -3.929671287536621
    5. ':' → logprob: -5.429671287536621
    6. '(' → logprob: -5.429671287536621
    7. '   ' → logprob: -7.679671287536621
    8. '       ' → logprob: -7.804671287536621
    9. ')->' → logprob: -8.429671287536621
    10. '=' → logprob: -9.429671287536621

Token 442: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.026359405368566513
    2. 'float' → logprob: -3.6513593196868896
    3. ' Vector' → logprob: -10.651359558105469
    4. '(float' → logprob: -11.276359558105469
    5. ' math' → logprob: -11.401359558105469
    6. 'Vector' → logprob: -12.026359558105469
    7. ' ' → logprob: -13.276359558105469
    8. ' self' → logprob: -14.151359558105469
    9. 'math' → logprob: -14.276359558105469
    10. '=float' → logprob: -14.276359558105469

Token 443: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012160412035882473
    2. ':
' → logprob: -4.637160301208496
    3. '       ' → logprob: -6.512160301208496
    4. '):' → logprob: -8.512160301208496
    5. '(self' → logprob: -8.762160301208496
    6. ':return' → logprob: -8.887160301208496
    7. '   ' → logprob: -9.262160301208496
    8. '):
' → logprob: -9.262160301208496
    9. ')' → logprob: -10.137160301208496
    10. '=' → logprob: -10.387160301208496

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027125652879476547
    2. ' return' → logprob: -3.902125597000122
    3. 'return' → logprob: -5.027125835418701
    4. '	return' → logprob: -13.152125358581543
    5. '   ' → logprob: -14.277125358581543
    6. 'import' → logprob: -14.402125358581543
    7. '```' → logprob: -14.902125358581543
    8. '{return' → logprob: -15.152125358581543
    9. '      ' → logprob: -15.277125358581543
    10. ':return' → logprob: -15.902125358581543

Token 445: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012660329230129719
    2. '       ' → logprob: -4.512660503387451
    3. ' return' → logprob: -6.512660503387451
    4. '(self' → logprob: -9.012660026550293
    5. '	return' → logprob: -13.137660026550293
    6. '(return' → logprob: -14.262660026550293
    7. 'math' → logprob: -14.387660026550293
    8. ' (' → logprob: -14.512660026550293
    9. '   ' → logprob: -15.262660026550293
    10. '((' → logprob: -15.887660026550293

Token 446: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.19041654467582703
    2. '(point' → logprob: -2.0654165744781494
    3. 'math' → logprob: -3.5654165744781494
    4. '(math' → logprob: -4.56541633605957
    5. ' (' → logprob: -4.94041633605957
    6. 'self' → logprob: -7.69041633605957
    7. ' math' → logprob: -8.56541633605957
    8. 'point' → logprob: -9.31541633605957
    9. 'Math' → logprob: -11.44041633605957
    10. '(abs' → logprob: -11.69041633605957

Token 447: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0048235999420285225
    2. 'point' → logprob: -5.504823684692383
    3. '(self' → logprob: -7.504823684692383
    4. ' self' → logprob: -8.629823684692383
    5. '(point' → logprob: -11.254823684692383
    6. ' point' → logprob: -13.129823684692383
    7. '	self' → logprob: -15.004823684692383
    8. '   ' → logprob: -15.629823684692383
    9. '       ' → logprob: -15.754823684692383
    10. '(' → logprob: -16.004823684692383

Token 448: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.00026217024424113333
    2. 'position' → logprob: -8.250262260437012
    3. '.' → logprob: -14.250262260437012
    4. '.distance' → logprob: -17.000261306762695
    5. '	position' → logprob: -17.500261306762695
    6. ' .' → logprob: -17.875261306762695
    7. '[position' → logprob: -17.875261306762695
    8. ' position' → logprob: -18.125261306762695
    9. '(position' → logprob: -18.500261306762695
    10. 'osition' → logprob: -19.125261306762695

Token 449: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28117698431015015
    2. '-' → logprob: -1.406177043914795
    3. ' ' → logprob: -10.781176567077637
    4. '-sub' → logprob: -12.531176567077637
    5. ' ' → logprob: -14.656176567077637
    6. '-point' → logprob: -15.031176567077637
    7. '-vector' → logprob: -15.156176567077637
    8. '-
' → logprob: -15.781176567077637
    9. ' -
' → logprob: -15.906176567077637
    10. '<|end|>' → logprob: -16.156177520751953

Token 450: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.00020354038861114532
    2. ' point' → logprob: -8.500203132629395
    3. '	point' → logprob: -22.25020408630371
    4. '(point' → logprob: -22.50020408630371
    5. 'Point' → logprob: -22.75020408630371
    6. '_point' → logprob: -22.87520408630371
    7. '.point' → logprob: -23.87520408630371
    8. 'position' → logprob: -24.75020408630371
    9. 'points' → logprob: -25.75020408630371
    10. '-point' → logprob: -26.12520408630371

Token 451: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -2.696889623621246e-06
    2. ' ).' → logprob: -12.87500286102295
    3. ')' → logprob: -16.750001907348633
    4. '.' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '.length' → logprob: -18.625001907348633
    7. '`).' → logprob: -19.000001907348633
    8. '()).' → logprob: -19.125001907348633
    9. '').' → logprob: -19.500001907348633
    10. 'length' → logprob: -19.500001907348633

Token 452: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: 0.0
    2. ' length' → logprob: -20.0
    3. 'leng' → logprob: -22.125
    4. '.length' → logprob: -22.125
    5. 'ength' → logprob: -22.5
    6. 'len' → logprob: -23.5
    7. 'l' → logprob: -23.875
    8. '	length' → logprob: -24.0
    9. '_length' → logprob: -24.875
    10. '-length' → logprob: -25.875

Token 453: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -3.292907877039397e-06
    2. '()
' → logprob: -13.25000286102295
    3. ' ()' → logprob: -14.62500286102295
    4. '()`' → logprob: -15.75000286102295
    5. '(' → logprob: -16.125003814697266
    6. '()+' → logprob: -16.250003814697266
    7. '()

' → logprob: -16.500003814697266
    8. '().' → logprob: -16.625003814697266
    9. '()>' → logprob: -16.625003814697266
    10. '（）' → logprob: -16.625003814697266

Token 454: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00707646319642663
    2. '
' → logprob: -5.007076263427734
    3. '   ' → logprob: -8.632076263427734
    4. '<|end|>' → logprob: -9.882076263427734
    5. '    
' → logprob: -10.007076263427734
    6. 'def' → logprob: -10.257076263427734
    7. ' class' → logprob: -10.757076263427734
    8. '

' → logprob: -11.257076263427734
    9. '```' → logprob: -12.882076263427734
    10. 'from' → logprob: -12.882076263427734

Token 455: ' Spiral' (ID: 179761)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Player' → logprob: -1.5939221382141113
    2. ' Player' → logprob: -2.0939221382141113
    3. 'Obstacle' → logprob: -2.0939221382141113
    4. 'Flag' → logprob: -2.3439221382141113
    5. ' Robot' → logprob: -2.7189221382141113
    6. 'Robot' → logprob: -2.7189221382141113
    7. 'Agent' → logprob: -3.4689221382141113
    8. 'Goal' → logprob: -3.5939221382141113
    9. ' Agent' → logprob: -3.7189221382141113
    10. ' Flag' → logprob: -3.9689221382141113

Token 456: 'Foot' (ID: 19958)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010305462637916207
    2. ':
' → logprob: -7.501030445098877
    3. 'Path' → logprob: -9.251030921936035
    4. '(' → logprob: -9.376030921936035
    5. 'Generator' → logprob: -9.876030921936035
    6. '():' → logprob: -10.126030921936035
    7. 'Pattern' → logprob: -10.376030921936035
    8. 'Iterator' → logprob: -11.001030921936035
    9. 'Rotation' → logprob: -11.251030921936035
    10. 'Trajectory' → logprob: -11.501030921936035

Token 457: 'race' (ID: 93075)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014647148549556732
    2. 'prints' → logprob: -5.264647006988525
    3. 'step' → logprob: -5.764647006988525
    4. ':' → logprob: -6.389647006988525
    5. 'pr' → logprob: -6.639647006988525
    6. 'printer' → logprob: -7.014647006988525
    7. 'Print' → logprob: -7.389647006988525
    8. 'path' → logprob: -7.514647006988525
    9. '{' → logprob: -8.014647483825684
    10. ':
' → logprob: -9.139647483825684

Token 458: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003939728485420346
    2. ':
' → logprob: -7.875393867492676
    3. '(' → logprob: -12.000393867492676
    4. '():' → logprob: -12.500393867492676
    5. ':def' → logprob: -13.375393867492676
    6. '(object' → logprob: -14.250393867492676
    7. ':

' → logprob: -14.375393867492676
    8. '):' → logprob: -15.750393867492676
    9. '(Abstract' → logprob: -15.750393867492676
    10. ' :' → logprob: -15.750393867492676

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003697781648952514
    2. ' def' → logprob: -8.000370025634766
    3. 'def' → logprob: -10.625370025634766
    4. '   ' → logprob: -12.125370025634766
    5. '	def' → logprob: -13.375370025634766
    6. '    
' → logprob: -13.875370025634766
    7. '__' → logprob: -14.500370025634766
    8. '
' → logprob: -14.625370025634766
    9. '   ' → logprob: -15.125370025634766
    10. ' __' → logprob: -15.750370025634766

Token 460: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.32805535197257996
    2. ' def' → logprob: -1.3280553817749023
    3. '__' → logprob: -4.328055381774902
    4. ' __' → logprob: -7.203055381774902
    5. '   ' → logprob: -7.328055381774902
    6. 'MAX' → logprob: -10.453055381774902
    7. 'class' → logprob: -11.453055381774902
    8. ' ' → logprob: -12.328055381774902
    9. '	def' → logprob: -12.578055381774902
    10. 'DE' → logprob: -12.703055381774902

Token 461: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00601316848769784
    2. '__' → logprob: -5.8810133934021
    3. ' init' → logprob: -6.2560133934021
    4. 'init' → logprob: -7.7560133934021
    5. ' def' → logprob: -7.8810133934021
    6. '_init' → logprob: -7.8810133934021
    7. ' ' → logprob: -10.131012916564941
    8. ' _' → logprob: -10.881012916564941
    9. ' ' → logprob: -11.006012916564941
    10. ' ___' → logprob: -11.756012916564941

Token 462: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0009115827269852161
    2. 'slots' → logprob: -7.000911712646484
    3. 'slot' → logprob: -16.375911712646484
    4. ' init' → logprob: -18.250911712646484
    5. '_init' → logprob: -19.750911712646484
    6. '_slots' → logprob: -19.875911712646484
    7. 'sl' → logprob: -20.000911712646484
    8. ' slots' → logprob: -20.125911712646484
    9. 'inite' → logprob: -21.125911712646484
    10. 'def' → logprob: -21.750911712646484

Token 463: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.028379620984196663
    2. '(self' → logprob: -3.6533796787261963
    3. '(' → logprob: -6.903379440307617
    4. '_(' → logprob: -7.653379440307617
    5. '__(
' → logprob: -7.778379440307617
    6. '__' → logprob: -9.528379440307617
    7. ' (' → logprob: -9.903379440307617
    8. ')(' → logprob: -11.653379440307617
    9. '
' → logprob: -11.778379440307617
    10. '   ' → logprob: -11.903379440307617

Token 464: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.0339031834737398e-05
    2. '
' → logprob: -11.125020027160645
    3. ' self' → logprob: -12.500020027160645
    4. '0' → logprob: -14.125020027160645
    5. '   ' → logprob: -14.500020027160645
    6. '       ' → logprob: -15.750020027160645
    7. ',' → logprob: -16.37502098083496
    8. ')' → logprob: -16.37502098083496
    9. '(self' → logprob: -16.75002098083496
    10. '1' → logprob: -17.00002098083496

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008137921802699566
    2. 'self' → logprob: -4.8831377029418945
    3. '   ' → logprob: -8.008137702941895
    4. ',
' → logprob: -9.133137702941895
    5. '
' → logprob: -10.633137702941895
    6. '       ' → logprob: -11.008137702941895
    7. ' self' → logprob: -11.258137702941895
    8. ',self' → logprob: -11.383137702941895
    9. '(self' → logprob: -11.758137702941895
    10. ')' → logprob: -12.258137702941895

Token 466: ' flags' (ID: 17376)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22151672840118408
    2. 'flags' → logprob: -1.721516728401184
    3. ' self' → logprob: -4.2215166091918945
    4. ' flags' → logprob: -5.7215166091918945
    5. 'points' → logprob: -7.4715166091918945
    6. 'start' → logprob: -8.096516609191895
    7. 'spir' → logprob: -8.221516609191895
    8. '   ' → logprob: -8.971516609191895
    9. 'n' → logprob: -9.346516609191895
    10. '       ' → logprob: -9.471516609191895

Token 467: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0325924449716695e-05
    2. '):' → logprob: -12.75001049041748
    3. ' :' → logprob: -12.87501049041748
    4. '_:' → logprob: -13.00001049041748
    5. ',' → logprob: -13.25001049041748
    6. ')' → logprob: -15.25001049041748
    7. '   ' → logprob: -16.500009536743164
    8. '):
' → logprob: -16.625009536743164
    9. ':list' → logprob: -16.625009536743164
    10. 'self' → logprob: -17.000009536743164

Token 468: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.029766570776700974
    2. ' List' → logprob: -3.52976655960083
    3. '[List' → logprob: -11.279767036437988
    4. 'list' → logprob: -13.904767036437988
    5. 'Iterable' → logprob: -13.904767036437988
    6. 'Optional' → logprob: -14.529767036437988
    7. 'self' → logprob: -15.404767036437988
    8. ' list' → logprob: -15.654767036437988
    9. ')' → logprob: -15.779767036437988
    10. '       ' → logprob: -15.904767036437988

Token 469: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.941850526549388e-06
    2. '['' → logprob: -12.125007629394531
    3. '[
' → logprob: -13.625007629394531
    4. '[int' → logprob: -15.250007629394531
    5. ' [' → logprob: -15.375007629394531
    6. 'Flag' → logprob: -16.00000762939453
    7. ' ' → logprob: -16.12500762939453
    8. '[str' → logprob: -16.37500762939453
    9. '	' → logprob: -16.50000762939453
    10. '
' → logprob: -16.75000762939453

Token 470: 'Flag' (ID: 13267)
  Prédit: 'Flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -5.8961017202818766e-05
    2. 'Vector' → logprob: -9.750059127807617
    3. ' Flag' → logprob: -14.750059127807617
    4. 'Tuple' → logprob: -15.500059127807617
    5. 'flag' → logprob: -18.375059127807617
    6. '[' → logprob: -18.375059127807617
    7. 'Optional' → logprob: -19.375059127807617
    8. 'Float' → logprob: -19.500059127807617
    9. 'Flags' → logprob: -19.625059127807617
    10. ''' → logprob: -20.500059127807617

Token 471: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.19093593955039978
    2. ']):
' → logprob: -2.3159358501434326
    3. ']' → logprob: -3.1909358501434326
    4. '])' → logprob: -3.9409358501434326
    5. '],' → logprob: -4.315936088562012
    6. ')' → logprob: -7.315936088562012
    7. '']):
' → logprob: -8.315936088562012
    8. '):' → logprob: -9.065936088562012
    9. '[' → logprob: -9.815936088562012
    10. ',' → logprob: -9.940936088562012

Token 472: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007668029051274061
    2. 'self' → logprob: -5.0076680183410645
    3. ' self' → logprob: -7.0076680183410645
    4. '   ' → logprob: -10.132668495178223
    5. '	self' → logprob: -12.507668495178223
    6. '	' → logprob: -14.257668495178223
    7. '      ' → logprob: -14.507668495178223
    8. '(self' → logprob: -14.632668495178223
    9. ' ' → logprob: -14.882668495178223
    10. ' ' → logprob: -14.882668495178223

Token 473: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003885819111019373
    2. ' self' → logprob: -5.753885746002197
    3. '       ' → logprob: -7.253885746002197
    4. '   ' → logprob: -14.878886222839355
    5. '	self' → logprob: -16.75388526916504
    6. ' ' → logprob: -18.87888526916504
    7. 'import' → logprob: -19.00388526916504
    8. '(self' → logprob: -19.37888526916504
    9. '           ' → logprob: -20.12888526916504
    10. '     ' → logprob: -20.75388526916504

Token 474: ' The' (ID: 623)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06765466183423996
    2. ' self' → logprob: -2.817654609680176
    3. '       ' → logprob: -5.192654609680176
    4. 'if' → logprob: -10.192654609680176
    5. '   ' → logprob: -11.067654609680176
    6. 'assert' → logprob: -11.192654609680176
    7. '#' → logprob: -11.442654609680176
    8. ' if' → logprob: -11.942654609680176
    9. 'super' → logprob: -12.567654609680176
    10. 'Self' → logprob: -12.567654609680176

Token 475: ' start' (ID: 1604)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flags' → logprob: -0.051575109362602234
    2. 'self' → logprob: -3.051575183868408
    3. ' flags' → logprob: -6.051575183868408
    4. ' self' → logprob: -7.801575183868408
    5. '_flags' → logprob: -9.55157470703125
    6. 'flag' → logprob: -10.30157470703125
    7. 'def' → logprob: -10.80157470703125
    8. '.flags' → logprob: -10.92657470703125
    9. 'fl' → logprob: -11.05157470703125
    10. '	flags' → logprob: -11.67657470703125

Token 476: ' flag' (ID: 9641)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.9615150094032288
    2. '_point' → logprob: -1.211514949798584
    3. 'point' → logprob: -2.211514949798584
    4. 'position' → logprob: -2.836514949798584
    5. 'ing' → logprob: -3.211514949798584
    6. ' =' → logprob: -3.711514949798584
    7. '_index' → logprob: -3.711514949798584
    8. ' position' → logprob: -4.711514949798584
    9. '_pos' → logprob: -5.086514949798584
    10. '       ' → logprob: -5.211514949798584

Token 477: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29856958985328674
    2. '=' → logprob: -1.5485695600509644
    3. '       ' → logprob: -3.798569679260254
    4. 'self' → logprob: -4.548569679260254
    5. ' is' → logprob: -4.673569679260254
    6. '=self' → logprob: -6.673569679260254
    7. ':' → logprob: -7.048569679260254
    8. ' self' → logprob: -7.423569679260254
    9. ',' → logprob: -8.673569679260254
    10. 'is' → logprob: -9.048569679260254

Token 478: ' fixed' (ID: 13213)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flags' → logprob: -0.008800698444247246
    2. ' flags' → logprob: -4.758800506591797
    3. 'self' → logprob: -8.883800506591797
    4. '	flags' → logprob: -11.008800506591797
    5. 'flag' → logprob: -12.133800506591797
    6. '       ' → logprob: -12.133800506591797
    7. '(flags' → logprob: -12.383800506591797
    8. ' self' → logprob: -12.883800506591797
    9. 'the' → logprob: -13.133800506591797
    10. ' the' → logprob: -13.446300506591797

Token 479: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.09470460563898087
    2. '       ' → logprob: -3.7197046279907227
    3. ',' → logprob: -3.8447046279907227
    4. 'self' → logprob: -4.094704627990723
    5. ' self' → logprob: -4.344704627990723
    6. ' as' → logprob: -4.844704627990723
    7. ' and' → logprob: -6.219704627990723
    8. ' in' → logprob: -6.969704627990723
    9. '<|end|>' → logprob: -6.969704627990723
    10. ' to' → logprob: -7.219704627990723

Token 480: ' origin' (ID: 12839)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flags' → logprob: -0.1544344127178192
    2. ' flags' → logprob: -2.7794344425201416
    3. 'Vector' → logprob: -2.7794344425201416
    4. ' Vector' → logprob: -4.1544342041015625
    5. 'self' → logprob: -6.4044342041015625
    6. '0' → logprob: -7.9044342041015625
    7. '(' → logprob: -8.029434204101562
    8. ' self' → logprob: -8.154434204101562
    9. '(Vector' → logprob: -8.654434204101562
    10. ' (' → logprob: -8.904434204101562

Token 481: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02354523539543152
    2. 'self' → logprob: -4.523545265197754
    3. ',' → logprob: -5.523545265197754
    4. ' self' → logprob: -6.023545265197754
    5. ' (' → logprob: -6.023545265197754
    6. '(self' → logprob: -6.773545265197754
    7. ' and' → logprob: -7.148545265197754
    8. '
' → logprob: -7.773545265197754
    9. ':' → logprob: -8.398545265197754
    10. '.' → logprob: -8.523545265197754

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010845718905329704
    2. ' self' → logprob: -4.88584566116333
    3. 'self' → logprob: -5.76084566116333
    4. ',' → logprob: -9.885846138000488
    5. '<|end|>' → logprob: -11.385846138000488
    6. '```' → logprob: -12.510846138000488
    7. '(self' → logprob: -12.885846138000488
    8. '
' → logprob: -13.010846138000488
    9. '   ' → logprob: -13.135846138000488
    10. '        
' → logprob: -13.260846138000488

Token 483: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004202813375741243
    2. ' self' → logprob: -5.504202842712402
    3. 'assert' → logprob: -9.504202842712402
    4. '       ' → logprob: -10.004202842712402
    5. 'if' → logprob: -13.004202842712402
    6. ' assert' → logprob: -13.629202842712402
    7. 'for' → logprob: -14.129202842712402
    8. 'flags' → logprob: -15.879202842712402
    9. ' if' → logprob: -16.379201889038086
    10. 'super' → logprob: -17.004201889038086

Token 484: ' We' (ID: 1416)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.024995464831590652
    2. ' self' → logprob: -3.7749955654144287
    3. 'assert' → logprob: -6.77499532699585
    4. '       ' → logprob: -8.149995803833008
    5. 'for' → logprob: -8.899995803833008
    6. ' assert' → logprob: -9.399995803833008
    7. '#' → logprob: -10.524995803833008
    8. 'if' → logprob: -10.774995803833008
    9. 'super' → logprob: -10.899995803833008
    10. 'import' → logprob: -11.399995803833008

Token 485: ' insert' (ID: 10898)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flags' → logprob: -0.6453357338905334
    2. 'have' → logprob: -2.5203356742858887
    3. 'assert' → logprob: -3.0203356742858887
    4. 'def' → logprob: -3.2703356742858887
    5. '       ' → logprob: -3.3953356742858887
    6. 'self' → logprob: -3.6453356742858887
    7. 'continue' → logprob: -3.7703356742858887
    8. 'import' → logprob: -3.8953356742858887
    9. '_flags' → logprob: -4.020335674285889
    10. 'need' → logprob: -4.270335674285889

Token 486: ' (' (ID: 350)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.4848659336566925
    2. 'Flag' → logprob: -0.9848659038543701
    3. 'self' → logprob: -5.109866142272949
    4. ' Vector' → logprob: -5.734866142272949
    5. ' Flag' → logprob: -6.859866142272949
    6. 'flags' → logprob: -8.60986614227295
    7. 'Flags' → logprob: -9.60986614227295
    8. ' self' → logprob: -9.85986614227295
    9. ' flags' → logprob: -9.98486614227295
    10. '       ' → logprob: -9.98486614227295

Token 487: '0' (ID: 15)
  Prédit: 'Flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -0.12756797671318054
    2. 'Vector' → logprob: -2.127568006515503
    3. 'self' → logprob: -7.752567768096924
    4. ' Flag' → logprob: -9.377568244934082
    5. 'Flags' → logprob: -9.627568244934082
    6. 'flags' → logprob: -10.877568244934082
    7. ' Vector' → logprob: -11.377568244934082
    8. '   ' → logprob: -11.627568244934082
    9. '       ' → logprob: -11.877568244934082
    10. ')' → logprob: -12.627568244934082

Token 488: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5235713720321655
    2. ',' → logprob: -0.8985713720321655
    3. '0' → logprob: -8.148571014404297
    4. ' ,' → logprob: -9.398571014404297
    5. '.,' → logprob: -9.898571014404297
    6. ')' → logprob: -10.898571014404297
    7. ' ' → logprob: -14.148571014404297
    8. ':' → logprob: -14.211071014404297
    9. ',
' → logprob: -14.336071014404297
    10. '```' → logprob: -14.586071014404297

Token 489: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002187972189858556
    2. ' ' → logprob: -6.127188205718994
    3. ')' → logprob: -12.877187728881836
    4. ' ' → logprob: -15.752187728881836
    5. '  ' → logprob: -16.377187728881836
    6. '   ' → logprob: -17.002187728881836
    7. ',' → logprob: -17.627187728881836
    8. '
' → logprob: -18.064687728881836
    9. '```' → logprob: -18.377187728881836
    10. ' )' → logprob: -18.439687728881836

Token 490: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06324508786201477
    2. ',' → logprob: -2.8132450580596924
    3. '),' → logprob: -6.8132452964782715
    4. ',
' → logprob: -10.063244819641113
    5. ')
' → logprob: -10.063244819641113
    6. ' ,' → logprob: -10.188244819641113
    7. ' )' → logprob: -10.938244819641113
    8. ',)' → logprob: -11.063244819641113
    9. ' at' → logprob: -12.688244819641113
    10. '))' → logprob: -13.188244819641113

Token 491: ' flag' (ID: 9641)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7830228209495544
    2. ' at' → logprob: -0.7830228209495544
    3. 'flag' → logprob: -3.408022880554199
    4. ' into' → logprob: -4.533022880554199
    5. 'at' → logprob: -4.533022880554199
    6. '       ' → logprob: -5.158022880554199
    7. 'flags' → logprob: -5.533022880554199
    8. 'self' → logprob: -5.783022880554199
    9. ',
' → logprob: -6.033022880554199
    10. ' in' → logprob: -6.033022880554199

Token 492: ' explicitly' (ID: 45615)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.19392605125904083
    2. ',' → logprob: -2.6939260959625244
    3. ' =' → logprob: -3.4439260959625244
    4. ' into' → logprob: -4.068925857543945
    5. 'at' → logprob: -4.318925857543945
    6. '       ' → logprob: -4.818925857543945
    7. 'flags' → logprob: -5.068925857543945
    8. '
' → logprob: -5.568925857543945
    9. 'self' → logprob: -5.693925857543945
    10. ')' → logprob: -5.693925857543945

Token 493: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015397985465824604
    2. '
' → logprob: -5.390398025512695
    3. 'self' → logprob: -5.390398025512695
    4. ',' → logprob: -5.640398025512695
    5. 'flags' → logprob: -6.890398025512695
    6. '        
' → logprob: -8.015398025512695
    7. ':' → logprob: -8.640398025512695
    8. ' at' → logprob: -8.890398025512695
    9. ' self' → logprob: -9.140398025512695
    10. ':
' → logprob: -9.265398025512695

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015046248445287347
    2. 'self' → logprob: -7.001504421234131
    3. ',' → logprob: -8.376504898071289
    4. ' self' → logprob: -9.001504898071289
    5. 'flags' → logprob: -9.126504898071289
    6. ' for' → logprob: -9.751504898071289
    7. ' if' → logprob: -11.001504898071289
    8. ' at' → logprob: -11.876504898071289
    9. ' flags' → logprob: -12.126504898071289
    10. ':' → logprob: -12.376504898071289

Token 495: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0044174171052873135
    2. ' self' → logprob: -5.754417419433594
    3. 'start' → logprob: -6.879417419433594
    4. 'origin' → logprob: -9.379417419433594
    5. '       ' → logprob: -9.629417419433594
    6. 'flags' → logprob: -10.129417419433594
    7. ' start' → logprob: -11.379417419433594
    8. ' origin' → logprob: -12.504417419433594
    9. 'if' → logprob: -12.754417419433594
    10. 'all' → logprob: -13.879417419433594

Token 496: '.flags' (ID: 62738)
  Prédit: '.flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flags' → logprob: -0.001144026406109333
    2. 'flags' → logprob: -7.376143932342529
    3. '.' → logprob: -7.876143932342529
    4. ' .' → logprob: -9.751144409179688
    5. '._' → logprob: -10.126144409179688
    6. '_flags' → logprob: -10.626144409179688
    7. '.fl' → logprob: -12.251144409179688
    8. '	flags' → logprob: -12.626144409179688
    9. 'Flags' → logprob: -13.251144409179688
    10. '.Flags' → logprob: -13.376144409179688

Token 497: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6943816542625427
    2. ' =' → logprob: -0.6943816542625427
    3. '.insert' → logprob: -6.9443817138671875
    4. '=[' → logprob: -8.819381713867188
    5. '.append' → logprob: -9.319381713867188
    6. ' =[' → logprob: -10.694381713867188
    7. '[' → logprob: -12.444381713867188
    8. ':' → logprob: -13.069381713867188
    9. ' ' → logprob: -14.069381713867188
    10. '[:]' → logprob: -14.194381713867188

Token 498: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.038664329797029495
    2. ' List' → logprob: -3.2886643409729004
    3. '[List' → logprob: -7.4136643409729
    4. 'list' → logprob: -12.163663864135742
    5. '[' → logprob: -12.288663864135742
    6. '   ' → logprob: -12.413663864135742
    7. ' ' → logprob: -13.663663864135742
    8. '	List' → logprob: -13.663663864135742
    9. 'Tuple' → logprob: -14.038663864135742
    10. ' list' → logprob: -14.788663864135742

Token 499: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008470137603580952
    2. ' =' → logprob: -5.258470058441162
    3. '=' → logprob: -5.758470058441162
    4. '[int' → logprob: -9.75847053527832
    5. '[
' → logprob: -12.50847053527832
    6. ']' → logprob: -12.63347053527832
    7. '[List' → logprob: -12.63347053527832
    8. '       ' → logprob: -13.00847053527832
    9. 'Flag' → logprob: -13.38347053527832
    10. '[Index' → logprob: -13.50847053527832

Token 500: 'Flag' (ID: 13267)
  Prédit: 'Flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -0.12720757722854614
    2. 'Vector' → logprob: -2.1272075176239014
    3. 'Optional' → logprob: -8.25220775604248
    4. 'Tuple' → logprob: -11.25220775604248
    5. ' Flag' → logprob: -13.25220775604248
    6. 'Flags' → logprob: -13.50220775604248
    7. 'flag' → logprob: -14.37720775604248
    8. ' Vector' → logprob: -15.25220775604248
    9. '   ' → logprob: -15.25220775604248
    10. ')' → logprob: -15.62720775604248

Token 501: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025255633518099785
    2. '=' → logprob: -4.1502556800842285
    3. ' =' → logprob: -5.0252556800842285
    4. ')' → logprob: -6.2752556800842285
    5. ']=' → logprob: -7.4002556800842285
    6. '[' → logprob: -9.52525520324707
    7. ' ]' → logprob: -10.40025520324707
    8. '=[' → logprob: -12.77525520324707
    9. ')=' → logprob: -13.15025520324707
    10. '>' → logprob: -13.40025520324707

Token 502: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06199502944946289
    2. ' =' → logprob: -2.811995029449463
    3. '=[' → logprob: -11.186994552612305
    4. ' =[' → logprob: -11.561994552612305
    5. '[' → logprob: -13.311994552612305
    6. '.append' → logprob: -13.561994552612305
    7. '=[]' → logprob: -14.061994552612305
    8. '   ' → logprob: -17.061994552612305
    9. '＝' → logprob: -17.186994552612305
    10. ')' → logprob: -17.311994552612305

Token 503: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.817902173381299e-05
    2. ' [' → logprob: -9.87509822845459
    3. 'flags' → logprob: -10.00009822845459
    4. '[self' → logprob: -14.50009822845459
    5. '[List' → logprob: -15.62509822845459
    6. '   ' → logprob: -16.250097274780273
    7. ' ' → logprob: -16.625097274780273
    8. '[(' → logprob: -17.125097274780273
    9. '(flags' → logprob: -17.125097274780273
    10. '[new' → logprob: -17.125097274780273

Token 504: 'Flag' (ID: 13267)
  Prédit: 'Flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -3.292907877039397e-06
    2. ' Flag' → logprob: -12.75000286102295
    3. 'Vector' → logprob: -15.37500286102295
    4. 'Flags' → logprob: -16.625003814697266
    5. '   ' → logprob: -17.625003814697266
    6. '       ' → logprob: -19.750003814697266
    7. '  ' → logprob: -20.375003814697266
    8. 'Fl' → logprob: -20.750003814697266
    9. 'FLAG' → logprob: -20.750003814697266
    10. '.Flag' → logprob: -20.875003814697266

Token 505: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000497032655403018
    2. '0' → logprob: -7.625496864318848
    3. ' (' → logprob: -11.625496864318848
    4. '(
' → logprob: -16.000497817993164
    5. '](' → logprob: -17.000497817993164
    6. ']' → logprob: -18.125497817993164
    7. ' ' → logprob: -18.125497817993164
    8. ')' → logprob: -18.750497817993164
    9. ')(' → logprob: -19.250497817993164
    10. '((' → logprob: -19.375497817993164

Token 506: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.625001907348633
    4. '
' → logprob: -20.125001907348633
    5. ')' → logprob: -20.375001907348633
    6. '  ' → logprob: -21.250001907348633
    7. '(' → logprob: -22.000001907348633
    8. '```' → logprob: -22.375001907348633
    9. '۰' → logprob: -22.375001907348633
    10. '    ' → logprob: -22.500001907348633

Token 507: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11292602121829987
    2. ',' → logprob: -2.2379260063171387
    3. ' ,' → logprob: -10.112926483154297
    4. '0' → logprob: -10.237926483154297
    5. '.,' → logprob: -11.487926483154297
    6. ',
' → logprob: -12.237926483154297
    7. ' ' → logprob: -12.362926483154297
    8. ')' → logprob: -12.987926483154297
    9. '```' → logprob: -13.737926483154297
    10. ' .' → logprob: -13.987926483154297

Token 508: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -17.25
    4. ',' → logprob: -18.75
    5. '```' → logprob: -19.125
    6. '       ' → logprob: -19.75
    7. '  ' → logprob: -19.875
    8. '00' → logprob: -19.875
    9. 'float' → logprob: -19.875
    10. '000' → logprob: -20.25

Token 509: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020509003661572933
    2. ' ,' → logprob: -8.500205039978027
    3. '0' → logprob: -14.000205039978027
    4. ',
' → logprob: -14.500205039978027
    5. ' ' → logprob: -16.000205993652344
    6. '   ' → logprob: -17.000205993652344
    7. ',float' → logprob: -17.750205993652344
    8. '```' → logprob: -17.875205993652344
    9. '
' → logprob: -18.375205993652344
    10. '‌,' → logprob: -18.375205993652344

Token 510: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715728435665369
    2. ' ' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.506715774536133
    4. '  ' → logprob: -16.131715774536133
    5. ' ' → logprob: -18.006715774536133
    6. '
' → logprob: -18.381715774536133
    7. '    ' → logprob: -19.006715774536133
    8. ')' → logprob: -19.319215774536133
    9. '```' → logprob: -19.381715774536133
    10. '	' → logprob: -19.881715774536133

Token 511: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.25010871887207
    4. '  ' → logprob: -17.12510871887207
    5. '
' → logprob: -18.12510871887207
    6. ')' → logprob: -19.00010871887207
    7. ' ' → logprob: -19.43760871887207
    8. '    ' → logprob: -19.50010871887207
    9. '

' → logprob: -20.37510871887207
    10. '     ' → logprob: -20.43760871887207

Token 512: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.65101717156358e-05
    2. '0' → logprob: -9.375096321105957
    3. ')' → logprob: -11.750096321105957
    4. ')]' → logprob: -12.750096321105957
    5. '),' → logprob: -14.500096321105957
    6. ' .' → logprob: -16.500097274780273
    7. ')])' → logprob: -16.750097274780273
    8. ',' → logprob: -16.875097274780273
    9. '.)' → logprob: -17.125097274780273
    10. ' ' → logprob: -17.500097274780273

Token 513: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '   ' → logprob: -16.875
    3. ' ' → logprob: -17.0
    4. ')' → logprob: -17.875
    5. '       ' → logprob: -19.875
    6. '  ' → logprob: -20.75
    7. '```' → logprob: -21.125
    8. '    ' → logprob: -21.6875
    9. '),' → logprob: -22.0625
    10. '))' → logprob: -22.375

Token 514: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002764710516203195
    2. ')' → logprob: -8.250276565551758
    3. ']' → logprob: -12.125276565551758
    4. ')]
' → logprob: -12.250276565551758
    5. '),' → logprob: -12.875276565551758
    6. ' )' → logprob: -13.500276565551758
    7. '')]' → logprob: -15.125276565551758
    8. ')+' → logprob: -16.375276565551758
    9. ')])' → logprob: -16.375276565551758
    10. ')}' → logprob: -16.500276565551758

Token 515: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31402066349983215
    2. ' +' → logprob: -1.3140206336975098
    3. '       ' → logprob: -7.68902063369751
    4. '
' → logprob: -8.939021110534668
    5. '+self' → logprob: -9.939021110534668
    6. ']+' → logprob: -10.314021110534668
    7. '+[' → logprob: -11.064021110534668
    8. '<|end|>' → logprob: -11.189021110534668
    9. '```' → logprob: -11.814021110534668
    10. ']' → logprob: -12.064021110534668

Token 516: ' flags' (ID: 17376)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flags' → logprob: -0.004087185952812433
    2. ' flags' → logprob: -5.504086971282959
    3. 'flag' → logprob: -12.754087448120117
    4. '[' → logprob: -13.129087448120117
    5. '(flags' → logprob: -13.379087448120117
    6. '	flags' → logprob: -13.879087448120117
    7. '.flags' → logprob: -15.129087448120117
    8. '   ' → logprob: -15.379087448120117
    9. 'Flags' → logprob: -15.754087448120117
    10. ' [' → logprob: -15.879087448120117

Token 517: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5688101649284363
    2. '<|end|>' → logprob: -0.9438101649284363
    3. '   ' → logprob: -3.318810224533081
    4. '<|end|>' → logprob: -5.443809986114502
    5. '       ' → logprob: -6.068809986114502
    6. 'def' → logprob: -7.068809986114502
    7. '

' → logprob: -7.818809986114502
    8. ')' → logprob: -9.19381046295166
    9. ' def' → logprob: -9.56881046295166
    10. ',' → logprob: -9.56881046295166

Token 518: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3548722565174103
    2. '       ' → logprob: -1.479872226715088
    3. 'def' → logprob: -3.104872226715088
    4. '   ' → logprob: -3.854872226715088
    5. ' self' → logprob: -5.604872226715088
    6. '#' → logprob: -7.604872226715088
    7. '<|end|>' → logprob: -7.854872226715088
    8. 'current' → logprob: -9.229872703552246
    9. 's' → logprob: -9.854872703552246
    10. '```' → logprob: -10.104872703552246

Token 520: '.vis' (ID: 15800)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.45047348737716675
    2. '.vis' → logprob: -2.4504735469818115
    3. '.current' → logprob: -2.9504735469818115
    4. '.num' → logprob: -2.9504735469818115
    5. '.selected' → logprob: -3.4504735469818115
    6. '.flags' → logprob: -4.075473308563232
    7. '.next' → logprob: -4.075473308563232
    8. '._' → logprob: -4.200473308563232
    9. '.distance' → logprob: -4.200473308563232
    10. '.' → logprob: -4.200473308563232

Token 521: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -7.941850526549388e-06
    2. 'ible' → logprob: -12.750007629394531
    3. 'isted' → logprob: -13.750007629394531
    4. '_' → logprob: -13.875007629394531
    5. '
' → logprob: -14.000007629394531
    6. '

' → logprob: -15.375007629394531
    7. 'iting' → logprob: -15.750007629394531
    8. 'its' → logprob: -15.750007629394531
    9. 'ite' → logprob: -15.750007629394531
    10. '[' → logprob: -15.750007629394531

Token 522: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3379891514778137
    2. ' =' → logprob: -1.337989091873169
    3. ':' → logprob: -3.712989091873169
    4. '=set' → logprob: -11.21298885345459
    5. '=[]' → logprob: -13.46298885345459
    6. '_ids' → logprob: -13.83798885345459
    7. '_indices' → logprob: -14.33798885345459
    8. '_flags' → logprob: -14.46298885345459
    9. '_set' → logprob: -14.83798885345459
    10. ' ' → logprob: -14.83798885345459

Token 523: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02383325807750225
    2. 'set' → logprob: -3.7738332748413086
    3. '{' → logprob: -7.523833274841309
    4. ' [' → logprob: -10.773833274841309
    5. '[]' → logprob: -10.898833274841309
    6. ' set' → logprob: -11.898833274841309
    7. '[len' → logprob: -14.648833274841309
    8. '[int' → logprob: -15.398833274841309
    9. '[List' → logprob: -16.273832321166992
    10. '[self' → logprob: -16.398832321166992

Token 524: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.054500666621607e-06
    2. ' False' → logprob: -13.37500286102295
    3. 'True' → logprob: -13.50000286102295
    4. '0' → logprob: -17.875003814697266
    5. '(False' → logprob: -18.250003814697266
    6. '   ' → logprob: -19.750003814697266
    7. 'Fal' → logprob: -21.875003814697266
    8. 'false' → logprob: -22.000003814697266
    9. '=False' → logprob: -22.125003814697266
    10. '[' → logprob: -22.250003814697266

Token 525: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012166635133326054
    2. ']*' → logprob: -7.251216888427734
    3. ' for' → logprob: -8.126216888427734
    4. ' ]' → logprob: -9.001216888427734
    5. ',' → logprob: -9.376216888427734
    6. 'for' → logprob: -13.626216888427734
    7. ']+' → logprob: -14.376216888427734
    8. ']*(' → logprob: -14.501216888427734
    9. ')' → logprob: -15.376216888427734
    10. '   ' → logprob: -15.501216888427734

Token 526: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05065751075744629
    2. ' for' → logprob: -3.1756575107574463
    3. ']*' → logprob: -5.675657272338867
    4. ')' → logprob: -6.800657272338867
    5. ',' → logprob: -7.050657272338867
    6. '*' → logprob: -7.425657272338867
    7. 'for' → logprob: -7.550657272338867
    8. ' *' → logprob: -7.675657272338867
    9. ' ]' → logprob: -7.925657272338867
    10. 'len' → logprob: -9.550657272338867

Token 527: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2526400089263916
    2. '(len' → logprob: -1.5026400089263916
    3. ' len' → logprob: -7.2526397705078125
    4. ' (' → logprob: -13.502639770507812
    5. '       ' → logprob: -14.377639770507812
    6. '(' → logprob: -15.627639770507812
    7. '	len' → logprob: -16.252639770507812
    8. '[len' → logprob: -16.752639770507812
    9. '   ' → logprob: -17.252639770507812
    10. ',len' → logprob: -17.752639770507812

Token 528: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.500004768371582
    3. 'self' → logprob: -13.875004768371582
    4. '(flags' → logprob: -16.875003814697266
    5. '(
' → logprob: -18.875003814697266
    6. '(s' → logprob: -19.000003814697266
    7. ' (' → logprob: -19.375003814697266
    8. '(sel' → logprob: -19.875003814697266
    9. '((' → logprob: -20.000003814697266
    10. ' self' → logprob: -20.375003814697266

Token 529: '.flags' (ID: 62738)
  Prédit: '.flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flags' → logprob: -0.00023107275774236768
    2. 'flags' → logprob: -8.50023078918457
    3. '.' → logprob: -11.37523078918457
    4. '(flags' → logprob: -12.12523078918457
    5. '	flags' → logprob: -12.25023078918457
    6. ' .' → logprob: -12.62523078918457
    7. '.fl' → logprob: -14.12523078918457
    8. '.Flags' → logprob: -15.00023078918457
    9. ').' → logprob: -15.12523078918457
    10. '.flag' → logprob: -15.12523078918457

Token 530: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')
' → logprob: -14.375003814697266
    4. '       ' → logprob: -15.250003814697266
    5. '   ' → logprob: -16.125003814697266
    6. '<|end|>' → logprob: -16.250003814697266
    7. '),' → logprob: -17.125003814697266
    8. '}' → logprob: -18.250003814697266
    9. ' ' → logprob: -18.500003814697266
    10. ']' → logprob: -18.875003814697266

Token 531: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0020216628909111023
    2. '       ' → logprob: -6.877021789550781
    3. 'def' → logprob: -7.752021789550781
    4. ' self' → logprob: -8.127021789550781
    5. '   ' → logprob: -10.002021789550781
    6. '0' → logprob: -10.002021789550781
    7. 'current' → logprob: -10.502021789550781
    8. '
' → logprob: -10.502021789550781
    9. 'pass' → logprob: -10.752021789550781
    10. '<|end|>' → logprob: -11.002021789550781

Token 533: '.vis' (ID: 15800)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.034273818135261536
    2. '.vis' → logprob: -4.534273624420166
    3. '.next' → logprob: -4.784273624420166
    4. '.n' → logprob: -6.284273624420166
    5. '.start' → logprob: -6.284273624420166
    6. '.distance' → logprob: -6.409273624420166
    7. '.selected' → logprob: -6.409273624420166
    8. '.path' → logprob: -7.034273624420166
    9. '.best' → logprob: -7.034273624420166
    10. '.visit' → logprob: -7.284273624420166

Token 534: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -3.857719275401905e-05
    2. '
' → logprob: -11.000038146972656
    3. '_' → logprob: -12.000038146972656
    4. 'ted' → logprob: -12.875038146972656
    5. '[' → logprob: -13.375038146972656
    6. '=' → logprob: -13.500038146972656
    7. 'ed' → logprob: -13.625038146972656
    8. '   ' → logprob: -13.750038146972656
    9. 'it' → logprob: -14.125038146972656
    10. '

' → logprob: -14.250038146972656

Token 535: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -15.125000953674316
    3. ' =' → logprob: -15.750000953674316
    4. '[self' → logprob: -16.25
    5. '=' → logprob: -17.875
    6. '[
' → logprob: -18.0
    7. '```' → logprob: -18.5
    8. ' ' → logprob: -19.375
    9. '0' → logprob: -19.75
    10. '\[' → logprob: -19.875

Token 536: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -19.375
    4. '       ' → logprob: -20.375
    5. ']' → logprob: -20.75
    6. ')' → logprob: -20.75
    7. '[' → logprob: -20.75
    8. '00' → logprob: -20.75
    9. '(' → logprob: -21.0
    10. '1' → logprob: -21.125

Token 537: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006736916024237871
    2. ' ]' → logprob: -5.006736755371094
    3. ']=' → logprob: -10.756736755371094
    4. ' =' → logprob: -16.756736755371094
    5. '=' → logprob: -16.881736755371094
    6. ']
' → logprob: -17.131736755371094
    7. '   ' → logprob: -17.506736755371094
    8. '`]' → logprob: -17.881736755371094
    9. ' ' → logprob: -19.006736755371094
    10. '']' → logprob: -19.256736755371094

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694963812828064
    2. ' =' → logprob: -2.1269495487213135
    3. '=True' → logprob: -10.751949310302734
    4. ']' → logprob: -15.751949310302734
    5. 'True' → logprob: -17.876949310302734
    6. ']=' → logprob: -18.001949310302734
    7. '=False' → logprob: -18.626949310302734
    8. '[' → logprob: -18.751949310302734
    9. ')' → logprob: -18.876949310302734
    10. '＝' → logprob: -19.501949310302734

Token 539: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001234428636962548
    2. ' True' → logprob: -9.000123023986816
    3. 'False' → logprob: -21.125123977661133
    4. '(True' → logprob: -21.125123977661133
    5. '=True' → logprob: -21.750123977661133
    6. '   ' → logprob: -22.375123977661133
    7. 'Tr' → logprob: -22.750123977661133
    8. '1' → logprob: -23.250123977661133
    9. 'TRUE' → logprob: -25.375123977661133
    10. '.True' → logprob: -25.375123977661133

Token 540: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07110157608985901
    2. '<|end|>' → logprob: -3.196101665496826
    3. '   ' → logprob: -4.071101665496826
    4. '

' → logprob: -5.446101665496826
    5. '       ' → logprob: -5.946101665496826
    6. 'def' → logprob: -6.696101665496826
    7. '    
' → logprob: -6.696101665496826
    8. '<|end|>' → logprob: -7.321101665496826
    9. ' def' → logprob: -8.571101188659668
    10. '  
' → logprob: -9.071101188659668

Token 541: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2303420752286911
    2. '<|end|>' → logprob: -2.230342149734497
    3. '       ' → logprob: -3.105342149734497
    4. 'def' → logprob: -3.230342149734497
    5. '   ' → logprob: -4.605341911315918
    6. 'self' → logprob: -6.230341911315918
    7. ' ' → logprob: -7.730341911315918
    8. '<|end|>' → logprob: -8.480341911315918
    9. ')' → logprob: -8.605341911315918
    10. ' def' → logprob: -8.730341911315918

Token 542: ' starting' (ID: 8601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06103885546326637
    2. 'self' → logprob: -4.186038970947266
    3. 'Start' → logprob: -4.186038970947266
    4. 'True' → logprob: -4.311038970947266
    5. 'start' → logprob: -5.186038970947266
    6. 'Starting' → logprob: -5.936038970947266
    7. ' start' → logprob: -6.561038970947266
    8. '
' → logprob: -7.186038970947266
    9. 'Visited' → logprob: -7.311038970947266
    10. ' #' → logprob: -7.436038970947266

Token 543: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.6678229570388794
    2. ' point' → logprob: -0.7928229570388794
    3. ' at' → logprob: -3.66782283782959
    4. ' flag' → logprob: -6.04282283782959
    5. '_point' → logprob: -6.04282283782959
    6. 'flag' → logprob: -6.54282283782959
    7. ' from' → logprob: -7.16782283782959
    8. 'position' → logprob: -7.66782283782959
    9. ' with' → logprob: -7.91782283782959
    10. '=True' → logprob: -8.04282283782959

Token 544: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1249915063381195
    2. ' visited' → logprob: -2.4999914169311523
    3. 'True' → logprob: -3.7499914169311523
    4. ' True' → logprob: -4.499991416931152
    5. 'already' → logprob: -7.749991416931152
    6. 'always' → logprob: -8.374991416931152
    7. ' always' → logprob: -9.374991416931152
    8. ' already' → logprob: -11.124991416931152
    9. ' considered' → logprob: -12.249991416931152
    10. 'true' → logprob: -12.874991416931152

Token 546: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3016524612903595
    2. '
' → logprob: -1.426652431488037
    3. '<|end|>' → logprob: -4.926652431488037
    4. '    
' → logprob: -5.176652431488037
    5. 'def' → logprob: -5.301652431488037
    6. ' def' → logprob: -7.176652431488037
    7. '```' → logprob: -8.051652908325195
    8. '

' → logprob: -8.426652908325195
    9. '  
' → logprob: -8.676652908325195
    10. '<|end|>' → logprob: -8.676652908325195

Token 548: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6477474570274353
    2. 'def' → logprob: -0.7727474570274353
    3. '       ' → logprob: -4.52274751663208
    4. '<|end|>' → logprob: -6.02274751663208
    5. ' def' → logprob: -7.52274751663208
    6. 'self' (adapté à ' self') → logprob: -7.64774751663208
    7. '
' → logprob: -7.89774751663208
    8. '	def' → logprob: -9.522747039794922
    9. '    
' → logprob: -9.522747039794922
    10. '    ' → logprob: -10.022747039794922

Token 549: '.path' (ID: 8153)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.015548589639365673
    2. '.next' → logprob: -4.5155487060546875
    3. '.selected' → logprob: -7.1405487060546875
    4. '.n' → logprob: -7.2655487060546875
    5. '.best' → logprob: -8.015548706054688
    6. 'current' → logprob: -8.015548706054688
    7. '.remaining' → logprob: -8.140548706054688
    8. '.distance' → logprob: -8.265548706054688
    9. '.path' → logprob: -8.390548706054688
    10. '.start' → logprob: -8.515548706054688

Token 550: '_length' (ID: 11514)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10339374840259552
    2. ':' → logprob: -2.603393793106079
    3. '=' → logprob: -3.728393793106079
    4. '=[]' → logprob: -9.2283935546875
    5. ' :' → logprob: -9.6033935546875
    6. ' ' → logprob: -12.3533935546875
    7. '  ' → logprob: -13.6033935546875
    8. ',' → logprob: -14.3533935546875
    9. 's' → logprob: -14.4783935546875
    10. '   ' → logprob: -14.6033935546875

Token 551: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.080475814640522
    2. '=' → logprob: -2.5804758071899414
    3. ':' → logprob: -6.455475807189941
    4. ' ' → logprob: -11.705475807189941
    5. ' :' → logprob: -12.580475807189941
    6. ':int' → logprob: -14.080475807189941
    7. '=float' → logprob: -15.830475807189941
    8. '  ' → logprob: -16.455476760864258
    9. '.' → logprob: -17.330476760864258
    10. '0' → logprob: -17.330476760864258

Token 552: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.029755352064967155
    2. ' float' → logprob: -3.5297553539276123
    3. '=float' → logprob: -13.154755592346191
    4. '0' → logprob: -13.779755592346191
    5. 'flo' → logprob: -14.154755592346191
    6. '	float' → logprob: -15.154755592346191
    7. 'int' → logprob: -15.529755592346191
    8. ' ' → logprob: -15.779755592346191
    9. '   ' → logprob: -16.029754638671875
    10. '=' → logprob: -16.154754638671875

Token 553: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. ' ' → logprob: -15.063261985778809
    4. '   ' → logprob: -17.688262939453125
    5. '0' → logprob: -18.438262939453125
    6. '    ' → logprob: -19.938262939453125
    7. '=None' → logprob: -20.188262939453125
    8. '  ' → logprob: -20.313262939453125
    9. '_=' → logprob: -20.938262939453125
    10. '.=' → logprob: -21.063262939453125

Token 554: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.37501335144043
    3. '1' → logprob: -14.50001335144043
    4. 'math' → logprob: -14.75001335144043
    5. '   ' → logprob: -15.75001335144043
    6. 'float' → logprob: -16.31251335144043
    7. '  ' → logprob: -16.56251335144043
    8. ' ' → logprob: -17.00001335144043
    9. '2' → logprob: -17.06251335144043
    10. '=' → logprob: -17.06251335144043

Token 555: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.455048449221067e-05
    2. ' ' → logprob: -9.875054359436035
    3. 'math' → logprob: -13.875054359436035
    4. '1' → logprob: -14.000054359436035
    5. 'float' → logprob: -15.125054359436035
    6. '2' → logprob: -16.00005531311035
    7. '  ' → logprob: -16.31255531311035
    8. '-' → logprob: -16.43755531311035
    9. '   ' → logprob: -16.62505531311035
    10. '(' → logprob: -16.75005531311035

Token 556: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: 0.0
    2. '.
' → logprob: -16.75
    3. ' .' → logprob: -17.375
    4. '0' → logprob: -17.375
    5. ' ' → logprob: -18.75
    6. '   ' → logprob: -19.125
    7. '.

' → logprob: -19.25
    8. '.

' → logprob: -19.75
    9. 'e' → logprob: -19.875
    10. '.
' → logprob: -20.375

Token 557: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -16.375
    3. 'float' → logprob: -16.375
    4. '       ' → logprob: -16.625
    5. 'def' → logprob: -17.0
    6. '```' → logprob: -17.125
    7. ' ' → logprob: -17.25
    8. 'f' → logprob: -17.375
    9. 'distance' → logprob: -18.875
    10. 'abs' → logprob: -18.875

Token 558: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 559: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2575835883617401
    2. '
' → logprob: -2.2575836181640625
    3. 'def' → logprob: -2.6325836181640625
    4. '<|end|>' → logprob: -3.5075836181640625
    5. '    
' → logprob: -4.5075836181640625
    6. ' def' → logprob: -5.3825836181640625
    7. '<|end|>' → logprob: -6.3825836181640625
    8. '	def' → logprob: -6.6325836181640625
    9. ' ' → logprob: -7.8825836181640625
    10. '

' → logprob: -8.007583618164062

Token 560: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10641122609376907
    2. '   ' → logprob: -3.2314112186431885
    3. '       ' → logprob: -3.2314112186431885
    4. 'def' → logprob: -3.9814112186431885
    5. 'current' → logprob: -6.231411457061768
    6. ' self' → logprob: -6.981411457061768
    7. '
' → logprob: -9.73141098022461
    8. '<|end|>' → logprob: -9.85641098022461
    9. '	self' → logprob: -9.98141098022461
    10. 'last' → logprob: -10.60641098022461

Token 561: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.061143144965171814
    2. '.next' → logprob: -3.436143159866333
    3. '.path' → logprob: -3.936143159866333
    4. '.' → logprob: -6.686142921447754
    5. '.selected' → logprob: -6.686142921447754
    6. '.best' → logprob: -7.186142921447754
    7. '.closest' → logprob: -7.311142921447754
    8. 'current' → logprob: -7.436142921447754
    9. '.previous' → logprob: -7.561142921447754
    10. '.remaining' → logprob: -7.561142921447754

Token 562: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0024769625160843134
    2. '_position' → logprob: -7.002477169036865
    3. '_pos' → logprob: -7.627477169036865
    4. '_vector' → logprob: -8.252476692199707
    5. '_point' → logprob: -8.377476692199707
    6. '_flag' → logprob: -8.502476692199707
    7. ' =' → logprob: -8.877476692199707
    8. '_idx' → logprob: -8.877476692199707
    9. '_' → logprob: -10.127476692199707
    10. '=' → logprob: -10.252476692199707

Token 563: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689282536506653
    2. '=' → logprob: -1.1368927955627441
    3. ':' → logprob: -10.761893272399902
    4. ' ' → logprob: -14.761893272399902
    5. '0' → logprob: -15.511893272399902
    6. ' :' → logprob: -17.761892318725586
    7. '   ' → logprob: -17.886892318725586
    8. ',' → logprob: -18.511892318725586
    9. ')' → logprob: -18.636892318725586
    10. '1' → logprob: -18.886892318725586

Token 564: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.829823102336377e-05
    2. ' ' → logprob: -9.37509822845459
    3. 'int' → logprob: -11.50009822845459
    4. '=' → logprob: -13.37509822845459
    5. ' =' → logprob: -13.75009822845459
    6. '[int' → logprob: -15.12509822845459
    7. '<|end|>' → logprob: -15.75009822845459
    8. ' int' → logprob: -16.625099182128906
    9. '1' → logprob: -17.000099182128906
    10. '[' → logprob: -17.625099182128906

Token 565: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687217235565186
    2. ' =' → logprob: -1.1368721723556519
    3. '0' → logprob: -14.011872291564941
    4. ' ' → logprob: -16.761871337890625
    5. '<|end|>' → logprob: -16.886871337890625
    6. ' =
' → logprob: -17.011871337890625
    7. ')' → logprob: -17.136871337890625
    8. ':' → logprob: -17.761871337890625
    9. '_=' → logprob: -18.136871337890625
    10. '=}' → logprob: -18.261871337890625

Token 566: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -18.875001907348633
    4. '1' → logprob: -19.875001907348633
    5. '=' → logprob: -20.625001907348633
    6. '   ' → logprob: -20.812501907348633
    7. '０' → logprob: -20.875001907348633
    8. '০' → logprob: -21.125001907348633
    9. '```' → logprob: -21.125001907348633
    10. '٠' → logprob: -21.687501907348633

Token 567: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '1' → logprob: -16.625001907348633
    4. '۰' → logprob: -18.687501907348633
    5. '000' → logprob: -20.375001907348633
    6. '০' → logprob: -20.375001907348633
    7. '０' → logprob: -20.625001907348633
    8. 'start' → logprob: -20.687501907348633
    9. '=' → logprob: -20.875001907348633
    10. '00' → logprob: -21.312501907348633

Token 568: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20759131014347076
    2. '<|end|>' → logprob: -2.2075912952423096
    3. '

' → logprob: -3.4575912952423096
    4. '   ' → logprob: -3.5825912952423096
    5. 'def' → logprob: -4.707591533660889
    6. ' def' → logprob: -5.707591533660889
    7. '<|end|>' → logprob: -5.957591533660889
    8. '    
' → logprob: -6.082591533660889
    9. '  
' → logprob: -8.20759105682373
    10. '	def' → logprob: -8.70759105682373

Token 569: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5266783237457275
    2. '<|end|>' → logprob: -1.0266783237457275
    3. '   ' → logprob: -3.4016783237457275
    4. '

' → logprob: -4.776678085327148
    5. '<|end|>' → logprob: -5.026678085327148
    6. '    
' → logprob: -6.651678085327148
    7. 'def' → logprob: -7.026678085327148
    8. ' def' → logprob: -7.901678085327148
    9. ' ' → logprob: -9.651678085327148
    10. '```' → logprob: -9.776678085327148

Token 570: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0408710278570652
    2. '   ' → logprob: -3.2908711433410645
    3. ' def' → logprob: -6.1658711433410645
    4. '       ' → logprob: -7.7908711433410645
    5. '
' → logprob: -9.165870666503906
    6. 'self' (adapté à ' self') → logprob: -9.665870666503906
    7. '<|end|>' → logprob: -9.790870666503906
    8. '    
' → logprob: -10.915870666503906
    9. '	def' → logprob: -11.165870666503906
    10. '```' → logprob: -11.290870666503906

Token 571: '.f' (ID: 1196)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.4540567994117737
    2. '.' → logprob: -1.829056739807129
    3. 'def' → logprob: -2.954056739807129
    4. '.next' → logprob: -3.079056739807129
    5. 'current' → logprob: -3.454056739807129
    6. '.flags' → logprob: -4.329056739807129
    7. '.path' → logprob: -4.579056739807129
    8. '   ' → logprob: -5.579056739807129
    9. 'path' → logprob: -5.704056739807129
    10. ' .' → logprob: -5.829056739807129

Token 572: 'acing' (ID: 7997)
  Prédit: 'lags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lags' → logprob: -0.0038284603506326675
    2. 'inal' → logprob: -6.753828525543213
    3. 'lag' → logprob: -6.753828525543213
    4. 'or' → logprob: -7.503828525543213
    5. 'inished' → logprob: -7.753828525543213
    6. 'l' → logprob: -8.128828048706055
    7. 'irst' → logprob: -9.128828048706055
    8. 'inish' → logprob: -9.878828048706055
    9. 'alse' → logprob: -11.253828048706055
    10. 'arth' → logprob: -11.753828048706055

Token 573: '_direction' (ID: 64332)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5383116006851196
    2. '=' → logprob: -1.4133116006851196
    3. ' =' → logprob: -1.7883116006851196
    4. '_direction' → logprob: -5.78831148147583
    5. 'direction' → logprob: -6.41331148147583
    6. '_vector' → logprob: -8.038311958312988
    7. 'vector' → logprob: -8.288311958312988
    8. ' :' → logprob: -8.538311958312988
    9. 'Vector' → logprob: -9.663311958312988
    10. 'Direction' → logprob: -10.038311958312988

Token 574: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12132773548364639
    2. ' =' → logprob: -2.3713276386260986
    3. '=' → logprob: -3.8713276386260986
    4. ' :' → logprob: -9.62132740020752
    5. ' ' → logprob: -13.99632740020752
    6. '=None' → logprob: -14.24632740020752
    7. '   ' → logprob: -14.99632740020752
    8. '  ' → logprob: -15.74632740020752
    9. '	' → logprob: -16.308828353881836
    10. ',' → logprob: -16.558828353881836

Token 575: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.031330958008766174
    2. 'Optional' → logprob: -3.9063310623168945
    3. ' Vector' → logprob: -4.6563310623168945
    4. ' =' → logprob: -7.4063310623168945
    5. '=' → logprob: -8.031331062316895
    6. ' Optional' → logprob: -8.281331062316895
    7. '	Vector' → logprob: -11.531331062316895
    8. 'optional' → logprob: -11.906331062316895
    9. '(Vector' → logprob: -12.031331062316895
    10. '.Vector' → logprob: -12.656331062316895

Token 576: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. '=' → logprob: -13.125003814697266
    3. 'Vector' → logprob: -13.875003814697266
    4. ' =' → logprob: -14.250003814697266
    5. ' ' → logprob: -16.375003814697266
    6. '(Vector' → logprob: -16.750003814697266
    7. '<Vector' → logprob: -17.125003814697266
    8. '.Vector' → logprob: -17.250003814697266
    9. '[' → logprob: -17.500003814697266
    10. '   ' → logprob: -18.125003814697266

Token 577: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.4121114822482923e-06
    2. 'Vector' → logprob: -12.875003814697266
    3. ' D' → logprob: -14.875003814697266
    4. '=' → logprob: -15.375003814697266
    5. ' =' → logprob: -16.500003814697266
    6. 'd' → logprob: -17.000003814697266
    7. 'vector' → logprob: -17.500003814697266
    8. 'DV' → logprob: -17.625003814697266
    9. '   ' → logprob: -18.375003814697266
    10. '_D' → logprob: -18.375003814697266

Token 578: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020699352025986
    2. ' =' → logprob: -2.3502070903778076
    3. ' ' → logprob: -16.60020637512207
    4. 'Vector' → logprob: -16.97520637512207
    5. '(Vector' → logprob: -17.10020637512207
    6. '=None' → logprob: -17.60020637512207
    7. ')' → logprob: -17.60020637512207
    8. '<Vector' → logprob: -17.60020637512207
    9. ' Vector' → logprob: -17.97520637512207
    10. ':' → logprob: -18.72520637512207

Token 579: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -1.6047699318733066e-05
    2. ' Vector' → logprob: -11.250016212463379
    3. 'self' → logprob: -13.375016212463379
    4. '(Vector' → logprob: -13.625016212463379
    5. '	Vector' → logprob: -16.875015258789062
    6. '   ' → logprob: -17.000015258789062
    7. 'Flag' → logprob: -17.250015258789062
    8. '  ' → logprob: -18.250015258789062
    9. '(' → logprob: -18.375015258789062
    10. '<Vector' → logprob: -18.750015258789062

Token 580: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'Vector' → logprob: -16.0
    3. '(' → logprob: -18.25
    4. '(Vector' → logprob: -18.375
    5. '```' → logprob: -20.5
    6. '.Vector' → logprob: -20.625
    7. '   ' → logprob: -21.0625
    8. ' ' → logprob: -21.1875
    9. '۲' → logprob: -21.25
    10. '{' → logprob: -21.6875

Token 581: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0006774079520255327
    2. 'Vector' → logprob: -7.500677585601807
    3. '2' → logprob: -9.000677108764648
    4. '(Vector' → logprob: -14.500677108764648
    5. '0' → logprob: -15.375677108764648
    6. '.Vector' → logprob: -15.500677108764648
    7. '(' → logprob: -16.00067710876465
    8. ' Vector' → logprob: -16.37567710876465
    9. 'd' → logprob: -18.00067710876465
    10. '   ' → logprob: -18.62567710876465

Token 582: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002191064180806279
    2. '1' → logprob: -6.127191066741943
    3. '0' → logprob: -12.502190589904785
    4. '(-' → logprob: -13.377190589904785
    5. ' (' → logprob: -14.502190589904785
    6. '(
' → logprob: -16.0021915435791
    7. '(math' → logprob: -16.8771915435791
    8. '(+' → logprob: -17.7521915435791
    9. '((' → logprob: -18.0021915435791
    10. '   ' → logprob: -18.0021915435791

Token 583: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012564396485686302
    2. '0' → logprob: -4.387564182281494
    3. '-' → logprob: -10.512564659118652
    4. ' ' → logprob: -11.137564659118652
    5. '(' → logprob: -11.762564659118652
    6. '   ' → logprob: -12.637564659118652
    7. '
' → logprob: -14.950064659118652
    8. ' -' → logprob: -15.200064659118652
    9. ')' → logprob: -15.262564659118652
    10. '  ' → logprob: -15.512564659118652

Token 584: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2597864270210266
    2. ',' → logprob: -1.5097863674163818
    3. '1' → logprob: -4.884786605834961
    4. '0' → logprob: -9.634786605834961
    5. ' ,' → logprob: -9.759786605834961
    6. ',-' → logprob: -9.759786605834961
    7. '-' → logprob: -10.384786605834961
    8. '.,' → logprob: -10.509786605834961
    9. ' ' → logprob: -12.009786605834961
    10. '```' → logprob: -12.322286605834961

Token 585: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.315433531999588
    2. '1' → logprob: -1.9404335021972656
    3. '0' → logprob: -2.0654335021972656
    4. ' ' → logprob: -10.190433502197266
    5. ' -' → logprob: -10.440433502197266
    6. '01' → logprob: -11.190433502197266
    7. '   ' → logprob: -11.565433502197266
    8. ')' → logprob: -12.815433502197266
    9. '```' → logprob: -12.877933502197266
    10. '000' → logprob: -12.940433502197266

Token 586: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003435061778873205
    2. '1' → logprob: -5.878435134887695
    3. ',-' → logprob: -7.753435134887695
    4. '-' → logprob: -8.878435134887695
    5. ' ,' → logprob: -10.003435134887695
    6. ',
' → logprob: -12.003435134887695
    7. ' ' → logprob: -13.128435134887695
    8. '0' → logprob: -13.128435134887695
    9. ')' → logprob: -13.628435134887695
    10. ' -' → logprob: -13.878435134887695

Token 587: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14268766343593597
    2. '-' → logprob: -2.0176875591278076
    3. ' -' → logprob: -11.892687797546387
    4. ' ' → logprob: -13.017687797546387
    5. '
' → logprob: -13.267687797546387
    6. '-
' → logprob: -14.267687797546387
    7. '   ' → logprob: -14.642687797546387
    8. '

' → logprob: -15.705187797546387
    9. '0' → logprob: -16.26768684387207
    10. '−' → logprob: -16.89268684387207

Token 588: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06994543969631195
    2. '-' → logprob: -2.6949453353881836
    3. ' -' → logprob: -12.569945335388184
    4. '
' → logprob: -13.069945335388184
    5. ' ' → logprob: -13.944945335388184
    6. '

' → logprob: -14.069945335388184
    7. '0' → logprob: -14.257445335388184
    8. '(-' → logprob: -15.569945335388184
    9. '   ' → logprob: -15.694945335388184
    10. '-
' → logprob: -15.757445335388184

Token 589: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04860416799783707
    2. ')' → logprob: -3.0486042499542236
    3. '0' → logprob: -11.923604011535645
    4. ')
' → logprob: -12.423604011535645
    5. '.)' → logprob: -12.548604011535645
    6. ' )' → logprob: -14.298604011535645
    7. '')' → logprob: -14.923604011535645
    8. '))' → logprob: -15.548604011535645
    9. '),' → logprob: -15.798604011535645
    10. '`)' → logprob: -15.798604011535645

Token 590: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ')' → logprob: -18.0
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -19.875
    5. ' ' → logprob: -20.0
    6. ')
' → logprob: -22.5
    7. '``' → logprob: -22.5625
    8. 'f' → logprob: -23.0
    9. '       ' → logprob: -23.125
    10. '  ' → logprob: -23.1875

Token 591: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.500006675720215
    3. ' )' → logprob: -13.750006675720215
    4. '       ' → logprob: -13.875006675720215
    5. '   ' → logprob: -14.750006675720215
    6. '<|end|>' → logprob: -16.0000057220459
    7. '))' → logprob: -17.0000057220459
    8. '),' → logprob: -17.2500057220459
    9. ')}' → logprob: -17.7500057220459
    10. '')' → logprob: -17.8750057220459

Token 592: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 593: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08647720515727997
    2. '<|end|>' → logprob: -3.086477279663086
    3. '   ' → logprob: -3.586477279663086
    4. ' def' → logprob: -4.961477279663086
    5. '<|end|>' → logprob: -7.086477279663086
    6. ' ' → logprob: -7.711477279663086
    7. '
' → logprob: -8.336477279663086
    8. '    
' → logprob: -8.336477279663086
    9. ')' → logprob: -8.461477279663086
    10. '```' → logprob: -9.336477279663086

Token 594: ' initial' (ID: 4871)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0008879951201379299
    2. ' Vector' → logprob: -7.625887870788574
    3. '0' → logprob: -8.500887870788574
    4. '(Vector' → logprob: -8.750887870788574
    5. 'The' → logprob: -11.500887870788574
    6. 'self' → logprob: -11.625887870788574
    7. '(' → logprob: -12.625887870788574
    8. 'vector' → logprob: -13.000887870788574
    9. 'Point' → logprob: -13.250887870788574
    10. 'up' → logprob: -13.250887870788574

Token 595: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.21543218195438385
    2. 'f' → logprob: -2.3404321670532227
    3. ' direction' → logprob: -2.5904321670532227
    4. ' facing' → logprob: -4.340432167053223
    5. '<|end|>' → logprob: -4.965432167053223
    6. 'orientation' → logprob: -6.715432167053223
    7. 'vector' → logprob: -7.715432167053223
    8. ' vector' → logprob: -8.340432167053223
    9. '_direction' → logprob: -8.715432167053223
    10. 'heading' → logprob: -8.965432167053223

Token 596: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2742290496826172
    2. '<|end|>' → logprob: -1.5242290496826172
    3. 'def' → logprob: -4.149229049682617
    4. '<|end|>' → logprob: -5.524229049682617
    5. ')' → logprob: -7.399229049682617
    6. '.' → logprob: -7.524229049682617
    7. '       ' → logprob: -7.649229049682617
    8. '    
' → logprob: -8.774229049682617
    9. ' def' → logprob: -9.274229049682617
    10. ',' → logprob: -9.649229049682617

Token 597: ' north' (ID: 16173)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.7332444190979004
    2. 'up' → logprob: -1.1082444190979004
    3. '0' → logprob: -2.1082444190979004
    4. '(' → logprob: -2.9832444190979004
    5. 'north' → logprob: -5.3582444190979
    6. ' Vector' → logprob: -5.6082444190979
    7. 'straight' → logprob: -5.7332444190979
    8. '(Vector' → logprob: -6.1082444190979
    9. 'point' → logprob: -6.2332444190979
    10. 'Point' → logprob: -7.6082444190979

Token 598: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18215206265449524
    2. '<|end|>' → logprob: -1.9321520328521729
    3. '
' → logprob: -4.557152271270752
    4. '    
' → logprob: -5.557152271270752
    5. 'def' → logprob: -5.932152271270752
    6. '<|end|>' → logprob: -6.057152271270752
    7. '       ' → logprob: -7.182152271270752
    8. ')' → logprob: -7.307152271270752
    9. '.' → logprob: -8.182151794433594
    10. ',' → logprob: -8.682151794433594

Token 599: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025721872225403786
    2. '   ' → logprob: -3.775721788406372
    3. ' def' → logprob: -6.025722026824951
    4. '
' → logprob: -10.150721549987793
    5. '    
' → logprob: -12.275721549987793
    6. ')' → logprob: -12.525721549987793
    7. '

' → logprob: -13.150721549987793
    8. '	def' → logprob: -13.275721549987793
    9. '```' → logprob: -13.400721549987793
    10. '<|end|>' → logprob: -14.025721549987793

Token 600: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.696889623621246e-06
    2. ' def' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.125001907348633
    4. 'from' → logprob: -20.375001907348633
    5. 'de' → logprob: -21.500001907348633
    6. '    
' → logprob: -21.500001907348633
    7. 'class' → logprob: -22.125001907348633
    8. '@' → logprob: -22.125001907348633
    9. '	def' → logprob: -22.125001907348633
    10. '@property' → logprob: -22.500001907348633

Token 601: ' solve' (ID: 17722)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7893974184989929
    2. ' find' → logprob: -1.4143974781036377
    3. ' run' → logprob: -1.9143974781036377
    4. 'next' → logprob: -2.5393974781036377
    5. 'run' → logprob: -4.289397239685059
    6. ' choose' → logprob: -4.289397239685059
    7. 'find' → logprob: -4.539397239685059
    8. ' select' → logprob: -4.664397239685059
    9. ' step' → logprob: -4.664397239685059
    10. 'choose' → logprob: -5.414397239685059

Token 602: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001450187264708802
    2. '(' → logprob: -8.875144958496094
    3. ' (' → logprob: -12.375144958496094
    4. 'self' → logprob: -15.000144958496094
    5. '   ' → logprob: -15.250144958496094
    6. '(s' → logprob: -16.250144958496094
    7. '(sel' → logprob: -16.625144958496094
    8. '(
' → logprob: -17.125144958496094
    9. '()' → logprob: -17.500144958496094
    10. ' ' → logprob: -17.625144958496094

Token 603: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6537888050079346
    2. 'self' → logprob: -1.2787888050079346
    3. '(self' → logprob: -2.4037888050079346
    4. '):' → logprob: -3.4037888050079346
    5. '   ' → logprob: -3.7787888050079346
    6. '       ' → logprob: -4.1537885665893555
    7. '):
' → logprob: -4.2787885665893555
    8. ',' → logprob: -4.2787885665893555
    9. ')(' → logprob: -4.5287885665893555
    10. ' self' → logprob: -8.278788566589355

Token 604: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1293356567621231
    2. '->' → logprob: -2.754335641860962
    3. ' ->' → logprob: -2.879335641860962
    4. '       ' → logprob: -7.879335880279541
    5. 'self' → logprob: -7.879335880279541
    6. ':' → logprob: -8.254335403442383
    7. ')' → logprob: -8.379335403442383
    8. '   ' → logprob: -9.254335403442383
    9. '(' → logprob: -9.379335403442383
    10. ':
' → logprob: -10.879335403442383

Token 605: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3989429771900177
    2. 'None' → logprob: -1.3989429473876953
    3. ' float' → logprob: -3.0239429473876953
    4. ' None' → logprob: -3.8989429473876953
    5. 'List' → logprob: -4.398942947387695
    6. ' List' → logprob: -7.148942947387695
    7. 'int' → logprob: -10.148942947387695
    8. 'Optional' → logprob: -10.648942947387695
    9. 'Tuple' → logprob: -10.898942947387695
    10. 'bool' → logprob: -10.898942947387695

Token 606: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1312849223613739
    2. ':
' → logprob: -2.1312849521636963
    3. '       ' → logprob: -5.631284713745117
    4. '():' → logprob: -7.881284713745117
    5. '():
' → logprob: -8.131284713745117
    6. '):
' → logprob: -10.381284713745117
    7. '(self' → logprob: -11.006284713745117
    8. '):' → logprob: -11.131284713745117
    9. '   ' → logprob: -11.256284713745117
    10. ':
' → logprob: -12.006284713745117

Token 607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026088329032063484
    2. 'while' → logprob: -6.502608776092529
    3. ' while' → logprob: -6.877608776092529
    4. 'n' → logprob: -9.752609252929688
    5. ' n' → logprob: -12.252609252929688
    6. 'current' → logprob: -12.627609252929688
    7. 'for' → logprob: -12.877609252929688
    8. '   ' → logprob: -13.377609252929688
    9. 'next' → logprob: -13.377609252929688
    10. ' for' → logprob: -14.252609252929688

Token 608: ' visit' (ID: 4030)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0042616128921509
    2. 'while' → logprob: -1.2542616128921509
    3. '       ' → logprob: -1.7542616128921509
    4. ' n' → logprob: -2.2542614936828613
    5. ' while' → logprob: -2.7542614936828613
    6. 'for' → logprob: -5.379261493682861
    7. ' for' → logprob: -6.754261493682861
    8. 'num' → logprob: -7.004261493682861
    9. ' num' → logprob: -9.87926197052002
    10. ' N' → logprob: -12.50426197052002

Token 609: '_count' (ID: 7536)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.027249442413449287
    2. '_count' → logprob: -3.652249336242676
    3. '_order' → logprob: -7.652249336242676
    4. 'ing' → logprob: -8.402249336242676
    5. '_index' → logprob: -8.777249336242676
    6. '_idx' → logprob: -11.277249336242676
    7. 'able' → logprob: -11.277249336242676
    8. 'count' → logprob: -11.777249336242676
    9. 'Count' → logprob: -11.902249336242676
    10. '_cnt' → logprob: -11.902249336242676

Token 610: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009187239338643849
    2. '=' → logprob: -7.000918865203857
    3. '   ' → logprob: -12.6259183883667
    4. ':' → logprob: -12.8759183883667
    5. ' ' → logprob: -14.1259183883667
    6. '  ' → logprob: -15.2509183883667
    7. '    ' → logprob: -16.500919342041016
    8. ',' → logprob: -16.750919342041016
    9. '       ' → logprob: -16.875919342041016
    10. ')' → logprob: -17.125919342041016

Token 611: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010549608850851655
    2. 'len' → logprob: -7.376054763793945
    3. ' ' → logprob: -7.876054763793945
    4. '0' → logprob: -10.376054763793945
    5. ' len' → logprob: -11.001054763793945
    6. '(len' → logprob: -15.751054763793945
    7. '   ' → logprob: -16.126054763793945
    8. '
' → logprob: -16.251054763793945
    9. '```' → logprob: -16.938554763793945
    10. 'self' → logprob: -17.188554763793945

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040831477381289005
    2. 'len' → logprob: -5.504083156585693
    3. '0' → logprob: -13.254082679748535
    4. ' len' → logprob: -13.379082679748535
    5. ' ' → logprob: -13.629082679748535
    6. '(len' → logprob: -16.50408363342285
    7. 'sum' → logprob: -16.62908363342285
    8. '
' → logprob: -17.50408363342285
    9. '2' → logprob: -17.87908363342285
    10. '[len' → logprob: -18.31658363342285

Token 613: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11099034547805786
    2. '
' → logprob: -2.485990285873413
    3. ' while' → logprob: -3.985990285873413
    4. 'while' → logprob: -5.860990524291992
    5. '        
' → logprob: -9.110990524291992
    6. '<|end|>' → logprob: -9.485990524291992
    7. ',' → logprob: -9.610990524291992
    8. ' 
' → logprob: -10.235990524291992
    9. '	while' → logprob: -10.860990524291992
    10. '' → logprob: -11.485990524291992

Token 615: ' total' (ID: 3609)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06771114468574524
    2. ' while' → logprob: -2.817711114883423
    3. '       ' → logprob: -5.567711353302002
    4. 'n' → logprob: -6.317711353302002
    5. ' n' → logprob: -9.192710876464844
    6. 'total' (adapté à ' total') → logprob: -14.567710876464844
    7. '	while' → logprob: -14.817710876464844
    8. 'num' → logprob: -15.317710876464844
    9. 'While' → logprob: -15.442710876464844
    10. '        ' → logprob: -15.692710876464844

Token 616: '_flags' (ID: 33898)
  Prédit: '_flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flags' → logprob: -0.09353690594434738
    2. '_count' → logprob: -3.093536853790283
    3. ' =' → logprob: -3.468536853790283
    4. '_' → logprob: -5.468536853790283
    5. '_tokens' → logprob: -6.093536853790283
    6. '_points' → logprob: -6.468536853790283
    7. '=' → logprob: -6.468536853790283
    8. '_length' → logprob: -6.718536853790283
    9. '_len' → logprob: -7.593536853790283
    10. 'flags' → logprob: -7.593536853790283

Token 617: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008665744215250015
    2. '=' → logprob: -4.758665561676025
    3. '=len' → logprob: -10.008666038513184
    4. ' ' → logprob: -12.508666038513184
    5. ':' → logprob: -14.383666038513184
    6. ' =
' → logprob: -14.383666038513184
    7. ')' → logprob: -15.008666038513184
    8. ' +=' → logprob: -15.633666038513184
    9. ' ==' → logprob: -15.633666038513184
    10. ',' → logprob: -15.883666038513184

Token 618: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0040785204619169235
    2. ' len' → logprob: -5.504078388214111
    3. '(len' → logprob: -16.129077911376953
    4. '       ' → logprob: -17.879077911376953
    5. '=len' → logprob: -18.129077911376953
    6. '	len' → logprob: -18.379077911376953
    7. '           ' → logprob: -18.629077911376953
    8. '   ' → logprob: -19.504077911376953
    9. '[len' → logprob: -20.004077911376953
    10. ',len' → logprob: -20.379077911376953

Token 619: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9361264946837764e-07
    2. 'self' → logprob: -16.125
    3. '(' → logprob: -16.875
    4. '(this' → logprob: -20.25
    5. '(s' → logprob: -21.75
    6. '=self' → logprob: -21.875
    7. ' self' → logprob: -22.375
    8. ' (' → logprob: -22.375
    9. 's' → logprob: -22.5
    10. '[self' → logprob: -22.75

Token 620: '.flags' (ID: 62738)
  Prédit: '.flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flags' → logprob: -2.176947600673884e-05
    2. '(flags' → logprob: -11.625021934509277
    3. 'flags' → logprob: -11.875021934509277
    4. '.' → logprob: -12.625021934509277
    5. ' .' → logprob: -14.250021934509277
    6. ').' → logprob: -14.375021934509277
    7. '	flags' → logprob: -14.875021934509277
    8. '.Flags' → logprob: -15.125021934509277
    9. 'self' → logprob: -15.750021934509277
    10. '.flag' → logprob: -15.875021934509277

Token 621: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11303005367517471
    2. ')
' → logprob: -2.238029956817627
    3. '       ' → logprob: -8.613030433654785
    4. ')

' → logprob: -11.488030433654785
    5. '
' → logprob: -11.863030433654785
    6. ' )' → logprob: -12.488030433654785
    7. '<|end|>' → logprob: -13.488030433654785
    8. ' )
' → logprob: -13.738030433654785
    9. ')
' → logprob: -13.863030433654785
    10. '   ' → logprob: -14.738030433654785

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10114854574203491
    2. '
' → logprob: -2.4761486053466797
    3. 'while' → logprob: -5.10114860534668
    4. ' while' → logprob: -5.22614860534668
    5. '        
' → logprob: -7.72614860534668
    6. '	while' → logprob: -9.47614860534668
    7. '```' → logprob: -9.72614860534668
    8. '<|end|>' → logprob: -10.72614860534668
    9. '   ' → logprob: -10.97614860534668
    10. '    
' → logprob: -11.10114860534668

Token 623: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.026364047080278397
    2. '       ' → logprob: -3.7763640880584717
    3. ' while' → logprob: -5.776363849639893
    4. '        
' → logprob: -12.77636432647705
    5. '	while' → logprob: -12.77636432647705
    6. '```' → logprob: -12.90136432647705
    7. 'While' → logprob: -13.02636432647705
    8. '
' → logprob: -13.15136432647705
    9. 'current' → logprob: -14.40136432647705
    10. '   ' → logprob: -15.27636432647705

Token 624: ' visit' (ID: 4030)
  Prédit: ' visit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visit' → logprob: -0.3868720829486847
    2. 'visit' → logprob: -1.1368720531463623
    3. 'visited' → logprob: -14.761872291564941
    4. '.visit' → logprob: -15.761872291564941
    5. ' visite' → logprob: -16.136871337890625
    6. '_visit' → logprob: -16.261871337890625
    7. ' ' → logprob: -16.511871337890625
    8. ' visited' → logprob: -16.761871337890625
    9. '   ' → logprob: -16.886871337890625
    10. '	' → logprob: -17.886871337890625

Token 625: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.875
    3. 'count' → logprob: -16.625
    4. '_COUNT' → logprob: -19.0
    5. 'ed' → logprob: -19.875
    6. '_counts' → logprob: -20.125
    7. '__' → logprob: -20.25
    8. 's' → logprob: -20.375
    9. ' count' → logprob: -20.5
    10. '_Count' → logprob: -21.125

Token 626: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5759406089782715
    2. '<' → logprob: -0.8259406089782715
    3. ' ' → logprob: -14.82594108581543
    4. '<n' → logprob: -15.07594108581543
    5. '<len' → logprob: -16.20094108581543
    6. ' ' → logprob: -16.32594108581543
    7. '<num' → logprob: -16.57594108581543
    8. '[' → logprob: -16.82594108581543
    9. '<size' → logprob: -17.20094108581543
    10. '<int' → logprob: -17.20094108581543

Token 627: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0019289902411401272
    2. ' total' → logprob: -6.251928806304932
    3. '
' → logprob: -16.251928329467773
    4. '	total' → logprob: -16.626928329467773
    5. '   ' → logprob: -16.751928329467773
    6. '       ' → logprob: -17.001928329467773
    7. 'len' → logprob: -17.376928329467773
    8. '           ' → logprob: -17.501928329467773
    9. '(total' → logprob: -17.626928329467773
    10. ' ' → logprob: -17.876928329467773

Token 628: '_flags' (ID: 33898)
  Prédit: '_flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flags' → logprob: -1.6240566083070007e-06
    2. 'flags' → logprob: -14.000001907348633
    3. 'Flags' → logprob: -14.500001907348633
    4. '_FLAGS' → logprob: -15.750001907348633
    5. '_' → logprob: -15.875001907348633
    6. '_f' → logprob: -18.625001907348633
    7. '\' → logprob: -19.000001907348633
    8. ' flags' → logprob: -19.750001907348633
    9. '.flags' → logprob: -19.750001907348633
    10. '	flags' → logprob: -19.875001907348633

Token 629: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1603921800851822
    2. ':
' → logprob: -1.910392165184021
    3. '       ' → logprob: -9.910391807556152
    4. ' and' → logprob: -9.910391807556152
    5. ',' → logprob: -10.535391807556152
    6. ':

' → logprob: -11.410391807556152
    7. '):
' → logprob: -11.535391807556152
    8. '           ' → logprob: -11.910391807556152
    9. '):' → logprob: -12.410391807556152
    10. ':
' → logprob: -12.910391807556152

Token 630: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03562837094068527
    2. 'next' → logprob: -4.160628318786621
    3. 'current' → logprob: -4.160628318786621
    4. 'nearest' → logprob: -6.910628318786621
    5. 'closest' → logprob: -7.035628318786621
    6. 'best' → logprob: -7.660628318786621
    7. ' next' → logprob: -7.910628318786621
    8. '```' → logprob: -8.160628318786621
    9. ' current' → logprob: -8.410628318786621
    10. '       ' → logprob: -8.785628318786621

Token 631: ' next' (ID: 2613)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.22283290326595306
    2. '           ' → logprob: -2.7228329181671143
    3. 'next' (adapté à ' next') → logprob: -2.7228329181671143
    4. 'best' → logprob: -2.8478329181671143
    5. 'candidate' → logprob: -5.472832679748535
    6. 'curr' → logprob: -5.972832679748535
    7. ' current' → logprob: -6.722832679748535
    8. 'min' → logprob: -7.347832679748535
    9. 'closest' → logprob: -7.847832679748535
    10. 'c' → logprob: -7.847832679748535

Token 632: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.05786220356822014
    2. '_flag' → logprob: -2.9328622817993164
    3. '_candidate' → logprob: -6.307862281799316
    4. '_candidates' → logprob: -7.432862281799316
    5. '_flags' → logprob: -8.932862281799316
    6. '_indices' → logprob: -9.057862281799316
    7. '_idx' → logprob: -9.182862281799316
    8. '_best' → logprob: -9.682862281799316
    9. '_distance' → logprob: -10.182862281799316
    10. '_point' → logprob: -10.682862281799316

Token 633: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20192381739616394
    2. '=' → logprob: -1.7019238471984863
    3. ',' → logprob: -7.826923847198486
    4. ':' → logprob: -9.201923370361328
    5. '=None' → logprob: -11.951923370361328
    6. ' ' → logprob: -13.201923370361328
    7. ' ,' → logprob: -14.201923370361328
    8. '   ' → logprob: -14.951923370361328
    9. '_candidates' → logprob: -15.076923370361328
    10. '=-' → logprob: -15.451923370361328

Token 634: ' self' (ID: 1051)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6943009495735168
    2. '-' → logprob: -0.9443009495735168
    3. 'self' → logprob: -2.194300889968872
    4. ' None' → logprob: -9.069300651550293
    5. ' -' → logprob: -10.069300651550293
    6. '   ' → logprob: -10.944300651550293
    7. ' self' → logprob: -11.569300651550293
    8. '       ' → logprob: -13.569300651550293
    9. '-self' → logprob: -14.319300651550293
    10. 'none' → logprob: -14.569300651550293

Token 635: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.28451254963874817
    2. '.find' → logprob: -1.7845125198364258
    3. 'find' → logprob: -3.034512519836426
    4. '_find' → logprob: -4.034512519836426
    5. 'None' → logprob: -5.534512519836426
    6. '.select' → logprob: -5.659512519836426
    7. 'select' → logprob: -5.909512519836426
    8. '.choose' → logprob: -6.659512519836426
    9. '_select' → logprob: -8.034512519836426
    10. '.get' → logprob: -8.034512519836426

Token 636: 'select' (ID: 4007)
  Prédit: 'select'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'select' → logprob: -0.8858811259269714
    2. 'find' → logprob: -1.0108811855316162
    3. 'choose' → logprob: -1.5108811855316162
    4. 'next' → logprob: -6.385880947113037
    5. 'get' → logprob: -7.260880947113037
    6. 'pick' → logprob: -7.885880947113037
    7. 'det' → logprob: -8.760881423950195
    8. 'compute' → logprob: -10.510881423950195
    9. 'best' → logprob: -11.260881423950195
    10. ' find' → logprob: -11.260881423950195

Token 637: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.662417471408844
    2. 'next' → logprob: -0.787417471408844
    3. '_flag' → logprob: -4.287417411804199
    4. 'flag' → logprob: -4.912417411804199
    5. '()' → logprob: -6.537417411804199
    6. '(next' → logprob: -6.787417411804199
    7. '(' → logprob: -7.037417411804199
    8. ' next' → logprob: -7.662417411804199
    9. 'Next' → logprob: -7.787417411804199
    10. '(flag' → logprob: -8.0374174118042

Token 638: '_flag' (ID: 25269)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1772259920835495
    2. '_flag' → logprob: -2.0522260665893555
    3. '_index' → logprob: -4.1772260665893555
    4. '(' → logprob: -4.9272260665893555
    5. 'flag' → logprob: -6.0522260665893555
    6. '_point' → logprob: -6.3022260665893555
    7. '_candidate' → logprob: -6.3022260665893555
    8. '_' → logprob: -7.1772260665893555
    9. '(next' → logprob: -7.3022260665893555
    10. '_token' → logprob: -7.4272260665893555

Token 639: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03399823233485222
    2. '()
' → logprob: -3.4089982509613037
    3. '           ' → logprob: -8.158998489379883
    4. '(' → logprob: -10.283998489379883
    5. '()

' → logprob: -11.533998489379883
    6. ' ()' → logprob: -11.658998489379883
    7. '(
' → logprob: -12.158998489379883
    8. '()
' → logprob: -13.158998489379883
    9. '            
' → logprob: -13.283998489379883
    10. '(self' → logprob: -14.033998489379883

Token 640: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.042696885764598846
    2. ')' → logprob: -3.667696952819824
    3. 'current' → logprob: -4.292696952819824
    4. '.flags' → logprob: -6.167696952819824
    5. ')
' → logprob: -8.917696952819824
    6. '.' → logprob: -9.417696952819824
    7. ',' → logprob: -9.667696952819824
    8. ' current' → logprob: -10.542696952819824
    9. 'flags' → logprob: -10.542696952819824
    10. ' .' → logprob: -10.917696952819824

Token 641: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.500001907348633
    3. ' _' → logprob: -15.750001907348633
    4. 'index' → logprob: -16.375001907348633
    5. ')' → logprob: -16.375001907348633
    6. '_
' → logprob: -16.625001907348633
    7. 'Index' → logprob: -16.750001907348633
    8. '__' → logprob: -17.125001907348633
    9. '_INDEX' → logprob: -17.125001907348633
    10. '_flag' → logprob: -17.125001907348633

Token 642: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07332095503807068
    2. ')
' → logprob: -3.0733208656311035
    3. ',' → logprob: -3.9483208656311035
    4. '           ' → logprob: -5.8233208656311035
    5. ' )' → logprob: -6.4483208656311035
    6. ' )
' → logprob: -7.8233208656311035
    7. ' ,' → logprob: -9.448321342468262
    8. ')`
' → logprob: -10.698321342468262
    9. '          ' → logprob: -10.823321342468262
    10. ')`' → logprob: -10.948321342468262

Token 643: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.052193544805049896
    2. ')' → logprob: -3.1771936416625977
    3. '           ' → logprob: -5.927193641662598
    4. ' self' → logprob: -6.052193641662598
    5. '[self' → logprob: -6.802193641662598
    6. ')
' → logprob: -7.052193641662598
    7. '       ' → logprob: -7.677193641662598
    8. 'visit' → logprob: -8.302193641662598
    9. '[' → logprob: -8.677193641662598
    10. 'visited' → logprob: -8.677193641662598

Token 644: '.f' (ID: 1196)
  Prédit: '.vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.5072965025901794
    2. '.f' → logprob: -1.1322965621948242
    3. '.flags' → logprob: -2.632296562194824
    4. ')' → logprob: -6.757296562194824
    5. '.current' → logprob: -6.882296562194824
    6. '.' → logprob: -7.507296562194824
    7. '.path' → logprob: -8.257296562194824
    8. ',' → logprob: -9.382296562194824
    9. '.visit' → logprob: -9.507296562194824
    10. ')
' → logprob: -9.882296562194824

Token 645: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -0.017590804025530815
    2. 'lags' → logprob: -4.1425909996032715
    3. 'l' → logprob: -6.8925909996032715
    4. 'aced' → logprob: -9.267590522766113
    5. 'or' → logprob: -9.392590522766113
    6. 'visited' → logprob: -9.767590522766113
    7. 'lag' → logprob: -9.892590522766113
    8. 'aces' → logprob: -10.017590522766113
    9. 'flags' → logprob: -10.642590522766113
    10. 'ags' → logprob: -10.892590522766113

Token 646: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -5.848420551046729e-05
    2. 'direction' → logprob: -9.7500581741333
    3. ' direction' → logprob: -16.875059127807617
    4. '_DIRECTION' → logprob: -16.875059127807617
    5. 'Direction' → logprob: -17.125059127807617
    6. '-direction' → logprob: -18.125059127807617
    7. '_' → logprob: -18.875059127807617
    8. '_d' → logprob: -19.000059127807617
    9. ')' → logprob: -19.000059127807617
    10. '方向' → logprob: -19.375059127807617

Token 647: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.15154558420181274
    2. ')' → logprob: -2.151545524597168
    3. '           ' → logprob: -3.776545524597168
    4. ',' → logprob: -7.151545524597168
    5. ' )
' → logprob: -7.651545524597168
    6. ')
' → logprob: -10.276545524597168
    7. ')

' → logprob: -10.276545524597168
    8. '            ' → logprob: -10.401545524597168
    9. ' )' → logprob: -10.651545524597168
    10. '          ' → logprob: -11.276545524597168

Token 648: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015938175842165947
    2. '
' → logprob: -4.3909382820129395
    3. '            
' → logprob: -6.3909382820129395
    4. ' if' → logprob: -6.7659382820129395
    5. '<|end|>' → logprob: -8.765937805175781
    6. ')' → logprob: -9.390937805175781
    7. ' 
' → logprob: -9.640937805175781
    8. 'if' → logprob: -9.890937805175781
    9. '            ' → logprob: -10.515937805175781
    10. ',' → logprob: -10.640937805175781

Token 649: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46907463669776917
    2. 'if' (adapté à ' if') → logprob: -1.7190746068954468
    3. ' if' → logprob: -1.7190746068954468
    4. 'distance' → logprob: -5.344074726104736
    5. 'next' → logprob: -5.469074726104736
    6. 'self' → logprob: -5.844074726104736
    7. ' next' → logprob: -6.469074726104736
    8. ' self' → logprob: -6.969074726104736
    9. '#' → logprob: -7.719074726104736
    10. '
' → logprob: -8.594074249267578

Token 650: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.38688844442367554
    2. ' next' → logprob: -1.1368885040283203
    3. '           ' → logprob: -11.13688850402832
    4. '(next' → logprob: -13.76188850402832
    5. '	next' → logprob: -14.01188850402832
    6. '            ' → logprob: -15.13688850402832
    7. '[next' → logprob: -15.26188850402832
    8. '.next' → logprob: -16.01188850402832
    9. '_next' → logprob: -16.13688850402832
    10. '               ' → logprob: -16.88688850402832

Token 651: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.749814019713085e-06
    2. 'index' → logprob: -12.125006675720215
    3. '_' → logprob: -14.500006675720215
    4. 'Index' → logprob: -15.375006675720215
    5. 'dex' → logprob: -16.12500762939453
    6. '_INDEX' → logprob: -16.75000762939453
    7. 'nd' → logprob: -17.12500762939453
    8. 'd' → logprob: -17.37500762939453
    9. 'ex' → logprob: -17.37500762939453
    10. '_
' → logprob: -17.75000762939453

Token 652: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10723109543323517
    2. ' ==' → logprob: -2.3572311401367188
    3. 'is' → logprob: -5.357231140136719
    4. '==' → logprob: -6.107231140136719
    5. '==-' → logprob: -9.857231140136719
    6. ')' → logprob: -12.982231140136719
    7. ' ' → logprob: -13.232231140136719
    8. 'Is' → logprob: -13.982231140136719
    9. '[' → logprob: -15.107231140136719
    10. '<|end|>' → logprob: -15.232231140136719

Token 653: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03607853502035141
    2. '-' → logprob: -4.036078453063965
    3. ' None' → logprob: -4.036078453063965
    4. ' -' → logprob: -9.286078453063965
    5. '   ' → logprob: -11.661078453063965
    6. '_None' → logprob: -15.036078453063965
    7. ' ' → logprob: -15.661078453063965
    8. '  ' → logprob: -15.661078453063965
    9. '=None' → logprob: -15.911078453063965
    10. '-none' → logprob: -16.78607940673828

Token 654: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3322003483772278
    2. ':
' → logprob: -1.332200288772583
    3. '               ' → logprob: -4.082200527191162
    4. '           ' → logprob: -6.457200527191162
    5. ' or' → logprob: -8.332200050354004
    6. ':return' → logprob: -10.832200050354004
    7. ':
' → logprob: -11.332200050354004
    8. '):
' → logprob: -11.707200050354004
    9. '              ' → logprob: -11.957200050354004
    10. '                   ' → logprob: -12.457200050354004

Token 655: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.220573363360018e-05
    2. '                ' → logprob: -10.750082015991211
    3. '           ' → logprob: -11.375082015991211
    4. '                
' → logprob: -11.625082015991211
    5. ' return' → logprob: -11.875082015991211
    6. '                   ' → logprob: -11.875082015991211
    7. ' break' → logprob: -12.000082015991211
    8. '	           ' → logprob: -12.750082015991211
    9. 'return' → logprob: -12.875082015991211
    10. '   ' → logprob: -13.250082015991211

Token 656: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1741490215063095
    2. ' break' → logprob: -2.2991490364074707
    3. '           ' → logprob: -3.2991490364074707
    4. 'break' (adapté à ' break') → logprob: -3.7991490364074707
    5. '                   ' → logprob: -9.674148559570312
    6. '	break' → logprob: -9.924148559570312
    7. '   ' → logprob: -10.799148559570312
    8. '```' → logprob: -11.299148559570312
    9. 'raise' → logprob: -11.674148559570312
    10. ' raise' → logprob: -12.174148559570312

Token 657: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.292130708694458
    2. '
' → logprob: -1.417130708694458
    3. '            
' → logprob: -4.542130470275879
    4. ' 
' → logprob: -9.792130470275879
    5. '    
' → logprob: -9.917130470275879
    6. '           
' → logprob: -10.042130470275879
    7. '
' → logprob: -10.292130470275879
    8. '  
' → logprob: -11.042130470275879
    9. '\n' → logprob: -11.042130470275879
    10. '   
' → logprob: -11.667130470275879

Token 658: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04622253030538559
    2. '           ' → logprob: -3.171222448348999
    3. '            
' → logprob: -5.796222686767578
    4. '
' → logprob: -9.296222686767578
    5. ' 
' → logprob: -10.546222686767578
    6. '           
' → logprob: -10.796222686767578
    7. '    
' → logprob: -11.546222686767578
    8. '  
' → logprob: -11.671222686767578
    9. '

' → logprob: -12.046222686767578
    10. '\n' → logprob: -12.671222686767578

Token 659: ' no' (ID: 860)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002987448126077652
    2. '
' → logprob: -6.002987384796143
    3. '            
' → logprob: -8.1279878616333
    4. ' ' → logprob: -10.1279878616333
    5. ' 
' → logprob: -10.8779878616333
    6. '          ' → logprob: -10.8779878616333
    7. '       ' → logprob: -11.0029878616333
    8. '    
' → logprob: -11.0029878616333
    9. ' ' → logprob: -11.6279878616333
    10. '   ' → logprob: -11.7529878616333

Token 660: ' more' (ID: 945)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.30195164680480957
    2. ' more' → logprob: -1.8019516468048096
    3. 'next' → logprob: -3.0519516468048096
    4. ' valid' → logprob: -3.3019516468048096
    5. 'more' → logprob: -5.3019514083862305
    6. '_valid' → logprob: -6.8019514083862305
    7. 'valid' → logprob: -6.9269514083862305
    8. ' ' → logprob: -7.0519514083862305
    9. '_next' → logprob: -7.1769514083862305
    10. ' suitable' → logprob: -7.3019514083862305

Token 661: ' flags' (ID: 17376)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3107515871524811
    2. ' valid' → logprob: -1.9357515573501587
    3. ' flags' → logprob: -2.8107516765594482
    4. ' next' → logprob: -4.060751438140869
    5. 'flags' → logprob: -4.560751438140869
    6. ' available' → logprob: -4.685751438140869
    7. 'un' → logprob: -5.185751438140869
    8. ' viable' → logprob: -5.435751438140869
    9. '_flags' → logprob: -5.935751438140869
    10. '_un' → logprob: -6.310751438140869

Token 662: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024744639173150063
    2. '
' → logprob: -4.024744510650635
    3. '            
' → logprob: -5.149744510650635
    4. '<|end|>' → logprob: -8.899744987487793
    5. '[' → logprob: -9.274744987487793
    6. '
' → logprob: -9.274744987487793
    7. '		' → logprob: -9.399744987487793
    8. ',' → logprob: -9.524744987487793
    9. '            ' → logprob: -10.149744987487793
    10. '          ' → logprob: -10.524744987487793

Token 663: ' visit' (ID: 4030)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.004223589785397053
    2. ' visit' → logprob: -5.504223823547363
    3. 'select' → logprob: -9.129223823547363
    4. '_visit' → logprob: -10.379223823547363
    5. 'choose' → logprob: -12.879223823547363
    6. 'visited' → logprob: -13.629223823547363
    7. '.visit' → logprob: -14.379223823547363
    8. ' select' → logprob: -15.254223823547363
    9. '
' → logprob: -15.504223823547363
    10. 'go' → logprob: -16.129222869873047

Token 664: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2059081643819809
    2. '           ' → logprob: -1.705908179283142
    3. '            
' → logprob: -5.455908298492432
    4. '
' → logprob: -9.330907821655273
    5. '\n' → logprob: -10.330907821655273
    6. '    
' → logprob: -10.955907821655273
    7. ' 
' → logprob: -11.205907821655273
    8. '           
' → logprob: -11.330907821655273
    9. '

' → logprob: -11.830907821655273
    10. '  
' → logprob: -11.955907821655273

Token 665: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18610982596874237
    2. '           ' → logprob: -1.8111097812652588
    3. '            
' → logprob: -5.186110019683838
    4. ' 
' → logprob: -8.06110954284668
    5. '  
' → logprob: -8.93610954284668
    6. '
' → logprob: -9.56110954284668
    7. '    
' → logprob: -9.81110954284668
    8. '        
' → logprob: -10.31110954284668
    9. '           
' → logprob: -10.81110954284668
    10. '\n' → logprob: -10.93610954284668

Token 666: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2607017457485199
    2. 'next' → logprob: -1.6357017755508423
    3. ' next' → logprob: -3.7607016563415527
    4. 'self' (adapté à ' self') → logprob: -5.260701656341553
    5. 'distance' → logprob: -5.885701656341553
    6. 'current' → logprob: -6.635701656341553
    7. ' self' → logprob: -7.760701656341553
    8. 'flag' → logprob: -7.885701656341553
    9. 'prev' → logprob: -8.135702133178711
    10. 'delta' → logprob: -8.385702133178711

Token 667: '._' (ID: 2697)
  Prédit: '.vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.5394259691238403
    2. '.path' → logprob: -0.9144259691238403
    3. 'path' → logprob: -4.914425849914551
    4. 'visited' → logprob: -5.539425849914551
    5. '.current' → logprob: -6.664425849914551
    6. '_path' → logprob: -6.914425849914551
    7. '.flags' → logprob: -7.289425849914551
    8. '.' → logprob: -7.539425849914551
    9. '.visit' → logprob: -8.28942584991455
    10. '_' → logprob: -8.53942584991455

Token 668: 'advance' (ID: 75456)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.4052504003047943
    2. 'update' → logprob: -2.155250310897827
    3. 'visit' → logprob: -2.280250310897827
    4. 'mark' → logprob: -2.655250310897827
    5. 'advance' → logprob: -3.280250310897827
    6. 'add' → logprob: -5.905250549316406
    7. 'go' → logprob: -6.155250549316406
    8. 'select' → logprob: -7.155250549316406
    9. 'travel' → logprob: -7.780250549316406
    10. 'make' → logprob: -8.030250549316406

Token 669: '_to' (ID: 5089)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.03975431248545647
    2. '_to' → logprob: -3.2897543907165527
    3. '(' → logprob: -6.789754390716553
    4. 'to' → logprob: -7.539754390716553
    5. 'To' → logprob: -10.914753913879395
    6. 'next' → logprob: -11.414753913879395
    7. '(to' → logprob: -11.539753913879395
    8. '(self' → logprob: -11.914753913879395
    9. '_next' → logprob: -13.164753913879395
    10. 'tow' → logprob: -13.664753913879395

Token 670: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.16054753959178925
    2. 'next' → logprob: -1.9105474948883057
    3. ' next' → logprob: -8.410547256469727
    4. '[next' → logprob: -9.785547256469727
    5. 'flag' → logprob: -10.410547256469727
    6. '_flag' → logprob: -12.410547256469727
    7. '_next' → logprob: -13.160547256469727
    8. '	next' → logprob: -13.285547256469727
    9. '(' → logprob: -13.285547256469727
    10. 'the' → logprob: -13.535547256469727

Token 671: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.1160349458805285e-05
    2. 'index' → logprob: -12.125011444091797
    3. '_' → logprob: -12.375011444091797
    4. 'Index' → logprob: -15.000011444091797
    5. '_
' → logprob: -15.250011444091797
    6. '__' → logprob: -15.750011444091797
    7. ' _' → logprob: -16.125011444091797
    8. '_INDEX' → logprob: -16.625011444091797
    9. ')' → logprob: -16.875011444091797
    10. '```' → logprob: -17.000011444091797

Token 672: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025812473613768816
    2. ')
' → logprob: -6.0025811195373535
    3. ' )' → logprob: -9.627581596374512
    4. ',' → logprob: -10.377581596374512
    5. ')
' → logprob: -13.002581596374512
    6. ' )
' → logprob: -13.252581596374512
    7. ')

' → logprob: -13.377581596374512
    8. ')`' → logprob: -14.002581596374512
    9. ')return' → logprob: -14.627581596374512
    10. '),' → logprob: -15.002581596374512

Token 673: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06374460458755493
    2. '           ' → logprob: -3.06374454498291
    3. 'return' → logprob: -5.18874454498291
    4. '            
' → logprob: -5.93874454498291
    5. '       ' → logprob: -6.06374454498291
    6. '        
' → logprob: -6.68874454498291
    7. '
' → logprob: -7.31374454498291
    8. '    
' → logprob: -7.68874454498291
    9. '<|end|>' → logprob: -8.18874454498291
    10. ' return' → logprob: -8.31374454498291

Token 674: ' visit' (ID: 4030)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005716211744584143
    2. 'visit' (adapté à ' visit') → logprob: -8.375571250915527
    3. ' visit' → logprob: -8.875571250915527
    4. '       ' → logprob: -9.000571250915527
    5. '   ' → logprob: -9.875571250915527
    6. '
' → logprob: -12.250571250915527
    7. '            
' → logprob: -12.375571250915527
    8. 'return' → logprob: -12.500571250915527
    9. '          ' → logprob: -12.625571250915527
    10. '               ' → logprob: -12.750571250915527

Token 675: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. 'count' → logprob: -17.5
    4. '_c' → logprob: -18.25
    5. '_counts' → logprob: -19.125
    6. 'it' → logprob: -19.25
    7. 'Count' → logprob: -19.875
    8. '_COUNT' → logprob: -19.875
    9. '_cnt' → logprob: -20.375
    10. '_index' → logprob: -20.375

Token 676: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31326213479042053
    2. '+=' → logprob: -1.3132621049880981
    3. '=' → logprob: -15.438261985778809
    4. ']+=' → logprob: -16.688262939453125
    5. '   ' → logprob: -17.563262939453125
    6. '+' → logprob: -17.563262939453125
    7. ' =' → logprob: -19.063262939453125
    8. '+="' → logprob: -19.688262939453125
    9. '    ' → logprob: -19.938262939453125
    10. ' +' → logprob: -20.063262939453125

Token 677: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -18.630233764648438
    4. ' ' → logprob: -19.130233764648438
    5. '  ' → logprob: -20.630233764648438
    6. '```' → logprob: -20.630233764648438
    7. '
' → logprob: -21.630233764648438
    8. '۱' → logprob: -21.755233764648438
    9. '１' → logprob: -22.005233764648438
    10. '    ' → logprob: -22.192733764648438

Token 678: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -20.250003814697266
    4. '   ' → logprob: -20.750003814697266
    5. '１' → logprob: -21.562503814697266
    6. '۱' → logprob: -21.687503814697266
    7. '
' → logprob: -22.125003814697266
    8. '`' → logprob: -22.375003814697266
    9. '  ' → logprob: -22.687503814697266
    10. ' ' → logprob: -23.062503814697266

Token 679: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015318039804697037
    2. '       ' → logprob: -4.640317916870117
    3. '<|end|>' → logprob: -5.765317916870117
    4. '        
' → logprob: -7.015317916870117
    5. '
' → logprob: -7.765317916870117
    6. 'return' → logprob: -7.890317916870117
    7. '<|end|>' → logprob: -9.015317916870117
    8. '

' → logprob: -9.015317916870117
    9. '    
' → logprob: -9.265317916870117
    10. ' 
' → logprob: -9.640317916870117

Token 680: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17915372550487518
    2. '       ' → logprob: -1.9291536808013916
    3. '<|end|>' → logprob: -4.804153919219971
    4. '        
' → logprob: -5.429153919219971
    5. 'return' → logprob: -6.554153919219971
    6. '
' → logprob: -7.179153919219971
    7. '    
' → logprob: -7.429153919219971
    8. ' 
' → logprob: -7.804153919219971
    9. ' return' → logprob: -7.929153919219971
    10. '  
' → logprob: -8.054153442382812

Token 681: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22809438407421112
    2. 'return' (adapté à ' return') → logprob: -1.8530943393707275
    3. ' return' → logprob: -3.6030943393707275
    4. '
' → logprob: -3.9780943393707275
    5. '   ' → logprob: -7.103094577789307
    6. '	return' → logprob: -8.603094100952148
    7. '        
' → logprob: -9.853094100952148
    8. '           ' → logprob: -10.103094100952148
    9. 'eturn' → logprob: -10.853094100952148
    10. '	' → logprob: -10.978094100952148

Token 682: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12692894041538239
    2. ' self' → logprob: -2.1269290447235107
    3. '       ' → logprob: -15.00192928314209
    4. '(self' → logprob: -15.37692928314209
    5. '	self' → logprob: -15.50192928314209
    6. '   ' → logprob: -17.126928329467773
    7. 'round' → logprob: -17.251928329467773
    8. '
' → logprob: -17.876928329467773
    9. ' ' → logprob: -18.001928329467773
    10. ' ' → logprob: -18.126928329467773

Token 683: '.path' (ID: 8153)
  Prédit: '.path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.path' → logprob: -0.0002680112374946475
    2. 'path' → logprob: -8.25026798248291
    3. '.' → logprob: -12.12526798248291
    4. '_path' → logprob: -14.75026798248291
    5. '_.' → logprob: -15.25026798248291
    6. ' .' → logprob: -15.50026798248291
    7. ' path' → logprob: -15.87526798248291
    8. '.p' → logprob: -16.500268936157227
    9. '	path' → logprob: -16.750268936157227
    10. '__.' → logprob: -17.250268936157227

Token 684: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.6240566083070007e-06
    2. '_l' → logprob: -13.500001907348633
    3. '_len' → logprob: -15.875001907348633
    4. '_' → logprob: -17.750001907348633
    5. '_le' → logprob: -17.875001907348633
    6. 'length' → logprob: -20.000001907348633
    7. ' _' → logprob: -20.000001907348633
    8. '_lengths' → logprob: -20.500001907348633
    9. '_leg' → logprob: -21.375001907348633
    10. '_LENGTH' → logprob: -21.625001907348633

Token 685: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10011855512857437
    2. '   ' → logprob: -2.475118637084961
    3. '    
' → logprob: -4.975118637084961
    4. '<|end|>' → logprob: -6.100118637084961
    5. '  
' → logprob: -7.475118637084961
    6. '<|end|>' → logprob: -7.975118637084961
    7. ' 
' → logprob: -8.350118637084961
    8. 'def' → logprob: -8.475118637084961
    9. '

' → logprob: -8.850118637084961
    10. '```' → logprob: -8.975118637084961

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17818988859653473
    2. '
' → logprob: -2.053189992904663
    3. '    
' → logprob: -3.553189992904663
    4. 'def' → logprob: -6.053189754486084
    5. '<|end|>' → logprob: -6.928189754486084
    6. '  
' → logprob: -7.053189754486084
    7. '```' → logprob: -7.428189754486084
    8. ' 
' → logprob: -7.928189754486084
    9. '   
' → logprob: -8.428190231323242
    10. '        
' → logprob: -8.553190231323242

Token 687: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0022140119690448046
    2. ' def' → logprob: -6.252213954925537
    3. '   ' → logprob: -8.252214431762695
    4. '
' → logprob: -10.627214431762695
    5. '    
' → logprob: -15.877214431762695
    6. '	def' → logprob: -15.877214431762695
    7. ' ' → logprob: -16.127214431762695
    8. '_def' → logprob: -17.002214431762695
    9. '

' → logprob: -17.502214431762695
    10. '  ' → logprob: -17.627214431762695

Token 688: ' _' (ID: 1175)
  Prédit: '_select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_select' → logprob: -0.38784512877464294
    2. ' _' → logprob: -1.1378451585769653
    3. '_' → logprob: -7.012845039367676
    4. '_find' → logprob: -10.012845039367676
    5. '_selection' → logprob: -12.387845039367676
    6. '_add' → logprob: -12.887845039367676
    7. '_next' → logprob: -12.887845039367676
    8. '_selected' → logprob: -13.012845039367676
    9. '_sub' → logprob: -13.512845039367676
    10. '_get' → logprob: -13.637845039367676

Token 689: 'select' (ID: 4007)
  Prédit: 'select'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'select' → logprob: -9.253090865968261e-06
    2. '_select' → logprob: -12.500009536743164
    3. 'find' → logprob: -13.000009536743164
    4. ' select' → logprob: -13.250009536743164
    5. 'available' → logprob: -15.375009536743164
    6. 'get' → logprob: -15.500009536743164
    7. '	select' → logprob: -15.500009536743164
    8. 'next' → logprob: -15.625009536743164
    9. 'advance' → logprob: -15.625009536743164
    10. 'def' → logprob: -16.250009536743164

Token 690: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.3856492842023727e-06
    2. ' _' → logprob: -14.500000953674316
    3. 'next' → logprob: -14.750000953674316
    4. '_' → logprob: -16.250001907348633
    5. '
' → logprob: -16.250001907348633
    6. '_new' → logprob: -16.375001907348633
    7. '_current' → logprob: -17.125001907348633
    8. '##_' → logprob: -17.500001907348633
    9. ')_' → logprob: -17.875001907348633
    10. '_ne' → logprob: -17.875001907348633

Token 691: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.00011605957115534693
    2. '_' → logprob: -9.250116348266602
    3. ' _' → logprob: -12.000116348266602
    4. '_index' → logprob: -12.125116348266602
    5. '_f' → logprob: -12.500116348266602
    6. '_flags' → logprob: -13.625116348266602
    7. '_next' → logprob: -14.500116348266602
    8. '   ' → logprob: -15.125116348266602
    9. '_fl' → logprob: -15.375116348266602
    10. 'flag' → logprob: -15.500116348266602

Token 692: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.625009536743164
    3. ' (' → logprob: -15.375009536743164
    4. 'self' → logprob: -16.500009536743164
    5. '(
' → logprob: -16.875009536743164
    6. '   ' → logprob: -18.125009536743164
    7. '       ' → logprob: -18.875009536743164
    8. '(sel' → logprob: -19.250009536743164
    9. '(s' → logprob: -19.750009536743164
    10. '(se' → logprob: -20.250009536743164

Token 693: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002477502857800573
    2. '(' → logprob: -8.750247955322266
    3. ' (' → logprob: -9.625247955322266
    4. 'self' → logprob: -11.500247955322266
    5. ')' → logprob: -11.750247955322266
    6. '       ' → logprob: -13.125247955322266
    7. '(
' → logprob: -13.875247955322266
    8. ')(' → logprob: -14.125247955322266
    9. '   ' → logprob: -14.250247955322266
    10. ' self' → logprob: -15.250247955322266

Token 694: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03735809028148651
    2. ' current' → logprob: -3.412358045578003
    3. 'self' → logprob: -6.037358283996582
    4. 'from' → logprob: -6.787358283996582
    5. '   ' → logprob: -9.537358283996582
    6. 'curr' → logprob: -10.287358283996582
    7. ' self' → logprob: -10.412358283996582
    8. 'cur' → logprob: -11.787358283996582
    9. ' from' → logprob: -11.787358283996582
    10. 'start' → logprob: -12.162358283996582

Token 695: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.166338137816638e-05
    2. ',' → logprob: -11.250031471252441
    3. '   ' → logprob: -12.000031471252441
    4. 'index' → logprob: -12.250031471252441
    5. ':' → logprob: -13.250031471252441
    6. '       ' → logprob: -13.375031471252441
    7. '_idx' → logprob: -13.875031471252441
    8. '_,' → logprob: -14.000031471252441
    9. 'Index' → logprob: -14.750031471252441
    10. '_' → logprob: -15.125031471252441

Token 696: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028841642197221518
    2. ':' → logprob: -5.877884387969971
    3. ' ,' → logprob: -9.627883911132812
    4. '       ' → logprob: -11.377883911132812
    5. 'self' → logprob: -13.752883911132812
    6. ')' → logprob: -14.752883911132812
    7. '   ' → logprob: -15.377883911132812
    8. ',self' → logprob: -16.252883911132812
    9. ' :' → logprob: -16.752883911132812
    10. ',
' → logprob: -17.002883911132812

Token 697: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009175319573841989
    2. ' int' → logprob: -7.000917434692383
    3. ')' → logprob: -12.625917434692383
    4. '   ' → logprob: -13.875917434692383
    5. '[int' → logprob: -14.000917434692383
    6. ':int' → logprob: -14.500917434692383
    7. ' ' → logprob: -16.125917434692383
    8. 'Optional' → logprob: -16.375917434692383
    9. '(int' → logprob: -16.625917434692383
    10. ',' → logprob: -16.875917434692383

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.333223139634356e-05
    2. ' ,' → logprob: -10.875033378601074
    3. '       ' → logprob: -11.625033378601074
    4. 'self' → logprob: -12.875033378601074
    5. ')' → logprob: -13.625033378601074
    6. '   ' → logprob: -13.875033378601074
    7. ',self' → logprob: -14.625033378601074
    8. ',
' → logprob: -16.375032424926758
    9. '      ' → logprob: -18.000032424926758
    10. ',f' → logprob: -18.000032424926758

Token 699: ' facing' (ID: 20511)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.22121329605579376
    2. 'current' → logprob: -1.8462133407592773
    3. ' facing' → logprob: -3.5962133407592773
    4. ' current' → logprob: -4.471213340759277
    5. 'direction' → logprob: -6.471213340759277
    6. ' f' → logprob: -9.846213340759277
    7. ' direction' → logprob: -10.096213340759277
    8. 'incoming' → logprob: -10.721213340759277
    9. '   ' → logprob: -11.096213340759277
    10. 'face' → logprob: -11.096213340759277

Token 700: ':' (ID: 25)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.0010668702889233828
    2. 'direction' → logprob: -6.8760666847229
    3. ',' → logprob: -11.251067161560059
    4. ':' → logprob: -11.501067161560059
    5. 'self' → logprob: -12.626067161560059
    6. ')' → logprob: -13.376067161560059
    7. '_d' → logprob: -13.501067161560059
    8. '_vector' → logprob: -14.001067161560059
    9. '_index' → logprob: -14.126067161560059
    10. ' direction' → logprob: -14.126067161560059

Token 701: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.00015860427811276168
    2. ' Vector' → logprob: -8.750158309936523
    3. '	Vector' → logprob: -17.625158309936523
    4. ' ' → logprob: -18.250158309936523
    5. '   ' → logprob: -18.375158309936523
    6. ''' → logprob: -18.750158309936523
    7. '<Vector' → logprob: -19.125158309936523
    8. '  ' → logprob: -19.250158309936523
    9. '(Vector' → logprob: -19.250158309936523
    10. 'vector' → logprob: -19.250158309936523

Token 702: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.370294846012257e-05
    2. 'Vector' → logprob: -10.125043869018555
    3. ')' → logprob: -12.875043869018555
    4. ':' → logprob: -15.375043869018555
    5. '.Vector' → logprob: -16.000043869018555
    6. '):
' → logprob: -16.125043869018555
    7. '<Vector' → logprob: -16.250043869018555
    8. 'Direction' → logprob: -16.375043869018555
    9. 'To' → logprob: -16.500043869018555
    10. '[' → logprob: -17.000043869018555

Token 703: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.4974866644479334e-05
    2. 'Vector' → logprob: -11.500015258789062
    3. '2' → logprob: -13.625015258789062
    4. ')' → logprob: -13.875015258789062
    5. ' D' → logprob: -14.250015258789062
    6. ':' → logprob: -14.500015258789062
    7. '   ' → logprob: -15.125015258789062
    8. '):' → logprob: -15.125015258789062
    9. 'vector' → logprob: -15.125015258789062
    10. 'C' → logprob: -16.000015258789062

Token 704: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.500000953674316
    4. ')->' → logprob: -16.000001907348633
    5. '')' → logprob: -16.125001907348633
    6. '):' → logprob: -16.500001907348633
    7. '`)' → logprob: -17.125001907348633
    8. '       ' → logprob: -17.250001907348633
    9. ',)' → logprob: -17.875001907348633
    10. '):
' → logprob: -18.500001907348633

Token 705: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2545098066329956
    2. ' ->' → logprob: -1.6295098066329956
    3. '->' → logprob: -3.629509925842285
    4. ':' → logprob: -7.129509925842285
    5. '       ' → logprob: -7.504509925842285
    6. '   ' → logprob: -7.629509925842285
    7. ')->' → logprob: -8.254509925842285
    8. ',' → logprob: -11.504509925842285
    9. 'Optional' → logprob: -11.629509925842285
    10. ' )' → logprob: -11.754509925842285

Token 706: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.00012356207298580557
    2. ' Optional' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.625123977661133
    4. '	Optional' → logprob: -17.375123977661133
    5. ' ' → logprob: -18.500123977661133
    6. '(Optional' → logprob: -18.625123977661133
    7. 'int' → logprob: -18.875123977661133
    8. 'None' → logprob: -20.250123977661133
    9. '       ' → logprob: -20.500123977661133
    10. 'optional' → logprob: -20.500123977661133

Token 707: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.306760805164231e-05
    2. 'int' → logprob: -11.25001335144043
    3. '[' → logprob: -18.12501335144043
    4. '[in' → logprob: -18.25001335144043
    5. '[Int' → logprob: -18.87501335144043
    6. '<int' → logprob: -19.50001335144043
    7. '[
' → logprob: -19.50001335144043
    8. '[i' → logprob: -20.00001335144043
    9. '(int' → logprob: -20.87501335144043
    10. '	int' → logprob: -22.12501335144043

Token 708: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19041822850704193
    2. ':
' → logprob: -1.8154182434082031
    3. '):
' → logprob: -5.190418243408203
    4. '):' → logprob: -5.315418243408203
    5. ')' → logprob: -9.940418243408203
    6. ':
' → logprob: -10.565418243408203
    7. ']:' → logprob: -10.815418243408203
    8. ']:
' → logprob: -11.440418243408203
    9. '   ' → logprob: -11.565418243408203
    10. '():
' → logprob: -12.065418243408203

Token 709: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08566365391016006
    2. ' best' → logprob: -3.0856635570526123
    3. 'best' → logprob: -3.4606635570526123
    4. 'min' → logprob: -6.085663795471191
    5. ' candidates' → logprob: -7.085663795471191
    6. ' min' → logprob: -7.335663795471191
    7. 'candidate' → logprob: -8.085663795471191
    8. 'closest' → logprob: -8.210663795471191
    9. 'next' → logprob: -8.585663795471191
    10. ' next' → logprob: -9.585663795471191

Token 710: ' current' (ID: 2208)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.1031031459569931
    2. 'c' → logprob: -3.1031031608581543
    3. 'min' → logprob: -3.3531031608581543
    4. 'next' → logprob: -4.603103160858154
    5. 'candidate' → logprob: -5.353103160858154
    6. '       ' → logprob: -5.978103160858154
    7. 'closest' → logprob: -8.228102684020996
    8. ' best' → logprob: -8.603102684020996
    9. 'cand' → logprob: -8.603102684020996
    10. 'small' → logprob: -9.728102684020996

Token 711: '_pos' (ID: 14692)
  Prédit: '_flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.5952075123786926
    2. '_pos' → logprob: -0.8452075123786926
    3. '_position' → logprob: -4.220207691192627
    4. '_point' → logprob: -5.470207691192627
    5. '_index' → logprob: -9.220207214355469
    6. '_vec' → logprob: -10.345207214355469
    7. 'flag' → logprob: -10.970207214355469
    8. '_vector' → logprob: -11.345207214355469
    9. 'pos' → logprob: -11.470207214355469
    10. 'Flag' → logprob: -13.345207214355469

Token 712: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132643401622772
    2. '=' → logprob: -1.3132643699645996
    3. '   ' → logprob: -13.688263893127441
    4. ':' → logprob: -14.438263893127441
    5. '       ' → logprob: -14.938263893127441
    6. '=self' → logprob: -15.063263893127441
    7. '=
' → logprob: -15.688263893127441
    8. ' ' → logprob: -16.938264846801758
    9. ' =
' → logprob: -17.188264846801758
    10. '    ' → logprob: -17.688264846801758

Token 713: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011227252893149853
    2. ' self' → logprob: -4.511227130889893
    3. '       ' → logprob: -8.63622760772705
    4. '	self' → logprob: -14.38622760772705
    5. '(self' → logprob: -14.51122760772705
    6. '   ' → logprob: -14.88622760772705
    7. '=self' → logprob: -15.63622760772705
    8. '           ' → logprob: -16.011226654052734
    9. '[self' → logprob: -16.636226654052734
    10. '        ' → logprob: -17.636226654052734

Token 714: '.flags' (ID: 62738)
  Prédit: '.flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flags' → logprob: -0.0031213874462991953
    2. 'self' → logprob: -6.128121376037598
    3. 'flags' → logprob: -7.003121376037598
    4. '.self' → logprob: -11.753121376037598
    5. '.' → logprob: -12.003121376037598
    6. '.position' → logprob: -12.253121376037598
    7. '       ' → logprob: -13.003121376037598
    8. '.flag' → logprob: -13.628121376037598
    9. ' self' → logprob: -14.253121376037598
    10. '   ' → logprob: -14.253121376037598

Token 715: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.038094162940979004
    2. '[self' → logprob: -3.2880940437316895
    3. 'self' → logprob: -10.038094520568848
    4. '       ' → logprob: -12.663094520568848
    5. 'current' → logprob: -13.038094520568848
    6. '[' → logprob: -13.038094520568848
    7. '   ' → logprob: -14.288094520568848
    8. '[
' → logprob: -15.788094520568848
    9. '[cur' → logprob: -16.03809356689453
    10. '[next' → logprob: -16.03809356689453

Token 716: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00011570196511456743
    2. 'index' → logprob: -9.375115394592285
    3. 'Index' → logprob: -11.750115394592285
    4. '._' → logprob: -12.375115394592285
    5. '_' → logprob: -12.500115394592285
    6. '.index' → logprob: -12.750115394592285
    7. '_pos' → logprob: -13.000115394592285
    8. '.' → logprob: -13.875115394592285
    9. '_idx' → logprob: -13.875115394592285
    10. '_.' → logprob: -14.000115394592285

Token 717: '].' (ID: 1651)
  Prédit: '.position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.004407093860208988
    2. '].' → logprob: -5.504406929016113
    3. ').' → logprob: -8.254406929016113
    4. '.' → logprob: -10.504406929016113
    5. '().' → logprob: -10.754406929016113
    6. ' .' → logprob: -11.004406929016113
    7. '   ' → logprob: -13.754406929016113
    8. '}.' → logprob: -14.504406929016113
    9. 'position' → logprob: -14.879406929016113
    10. ' ].' → logprob: -15.379406929016113

Token 718: 'position' (ID: 4504)
  Prédit: 'position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -6.749814019713085e-06
    2. ' position' → logprob: -12.250006675720215
    3. '.position' → logprob: -13.375006675720215
    4. '	position' → logprob: -16.87500762939453
    5. '   ' → logprob: -17.00000762939453
    6. '(position' → logprob: -17.12500762939453
    7. 'distance' → logprob: -17.25000762939453
    8. '[position' → logprob: -17.37500762939453
    9. ' ' → logprob: -17.87500762939453
    10. 'flag' → logprob: -18.25000762939453

Token 719: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021271906734909862
    2. ',' → logprob: -9.500212669372559
    3. '        
' → logprob: -9.875212669372559
    4. '
' → logprob: -10.500212669372559
    5. 'next' → logprob: -11.000212669372559
    6. 'best' → logprob: -12.375212669372559
    7. ':' → logprob: -12.375212669372559
    8. 'candidate' → logprob: -12.875212669372559
    9. '       
' → logprob: -12.875212669372559
    10. '#' → logprob: -13.000212669372559

Token 720: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010476192459464073
    2. 'best' → logprob: -5.010476112365723
    3. 'next' → logprob: -6.885476112365723
    4. 'min' → logprob: -7.260476112365723
    5. 'candidate' → logprob: -7.635476112365723
    6. ' best' → logprob: -7.760476112365723
    7. 'possible' → logprob: -8.385476112365723
    8. 'c' → logprob: -8.510476112365723
    9. 'available' → logprob: -8.635476112365723
    10. ' candidates' → logprob: -9.010476112365723

Token 721: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.41584786772727966
    2. 'best' → logprob: -1.165847897529602
    3. 'min' → logprob: -4.0408477783203125
    4. 'candidate' → logprob: -5.1658477783203125
    5. 'next' → logprob: -5.7908477783203125
    6. 'un' → logprob: -6.4158477783203125
    7. 'closest' → logprob: -8.665847778320312
    8. 'cand' → logprob: -8.915847778320312
    9. '   ' → logprob: -9.665847778320312
    10. '#' → logprob: -10.165847778320312

Token 722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693865954875946
    2. ' =' → logprob: -0.693865954875946
    3. ':' → logprob: -7.568865776062012
    4. '_indices' → logprob: -8.693865776062012
    5. '_idx' → logprob: -11.443865776062012
    6. '=[]' → logprob: -11.568865776062012
    7. '_indexes' → logprob: -12.193865776062012
    8. 'indices' → logprob: -12.693865776062012
    9. '_index' → logprob: -13.318865776062012
    10. '=[]
' → logprob: -13.568865776062012

Token 723: ' []
' (ID: 8911)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.6868793368339539
    2. '[]
' → logprob: -1.1868793964385986
    3. '[(' → logprob: -2.1868793964385986
    4. '[]' → logprob: -2.9368793964385986
    5. '[' → logprob: -3.6868793964385986
    6. '[]

' → logprob: -6.6868791580200195
    7. '[((' → logprob: -10.18687915802002
    8. '[int' → logprob: -10.93687915802002
    9. '   ' → logprob: -11.68687915802002
    10. '(
' → logprob: -11.81187915802002

Token 724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06088867783546448
    2. ' for' → logprob: -3.1858887672424316
    3. 'for' → logprob: -4.060888767242432
    4. '	for' → logprob: -8.685888290405273
    5. '   ' → logprob: -8.935888290405273
    6. '	' → logprob: -9.685888290405273
    7. '	   ' → logprob: -9.810888290405273
    8. '        
' → logprob: -10.560888290405273
    9. '
' → logprob: -10.810888290405273
    10. ' ' → logprob: -11.435888290405273

Token 725: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007265020161867142
    2. ' for' → logprob: -5.007265090942383
    3. '       ' → logprob: -7.507265090942383
    4. '   ' → logprob: -15.757265090942383
    5. 'min' → logprob: -16.382265090942383
    6. '	for' → logprob: -16.382265090942383
    7. ' ' → logprob: -17.257265090942383
    8. 'next' → logprob: -18.632265090942383
    9. '```' → logprob: -18.882265090942383
    10. '           ' → logprob: -19.007265090942383

Token 726: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011392155662178993
    2. 'idx' → logprob: -4.511392116546631
    3. ' i' → logprob: -8.136392593383789
    4. ' idx' → logprob: -10.386392593383789
    5. 'index' → logprob: -10.886392593383789
    6. 'next' → logprob: -14.011392593383789
    7. '   ' → logprob: -14.511392593383789
    8. '	i' → logprob: -15.136392593383789
    9. 'flag' → logprob: -16.38639259338379
    10. '_i' → logprob: -16.51139259338379

Token 727: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6409745216369629
    2. ' in' → logprob: -0.8909745216369629
    3. ',' → logprob: -2.765974521636963
    4. ' ,' → logprob: -11.015974044799805
    5. '   ' → logprob: -11.390974044799805
    6. ',in' → logprob: -11.890974044799805
    7. '```' → logprob: -12.765974044799805
    8. ' ' → logprob: -13.015974044799805
    9. '       ' → logprob: -13.265974044799805
    10. '1' → logprob: -13.765974044799805

Token 728: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0789509266614914
    2. 'visited' → logprob: -2.578950881958008
    3. 'f' → logprob: -11.078950881958008
    4. ' flag' → logprob: -11.203950881958008
    5. 'v' → logprob: -11.578950881958008
    6. '(flag' → logprob: -11.953950881958008
    7. '(' → logprob: -12.078950881958008
    8. ' visited' → logprob: -12.078950881958008
    9. '_flag' → logprob: -13.453950881958008
    10. 'fl' → logprob: -13.953950881958008

Token 729: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011734402505680919
    2. 'in' → logprob: -6.751173496246338
    3. ' ' → logprob: -13.62617301940918
    4. '	in' → logprob: -14.12617301940918
    5. ',' → logprob: -15.12617301940918
    6. 's' → logprob: -15.37617301940918
    7. 'import' → logprob: -15.75117301940918
    8. '   ' → logprob: -16.25117301940918
    9. '_in' → logprob: -16.50117301940918
    10. '  ' → logprob: -16.75117301940918

Token 730: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.005234356038272381
    2. ' enumerate' → logprob: -5.255234241485596
    3. ',' → logprob: -15.505234718322754
    4. '.enumer' → logprob: -16.255233764648438
    5. 'enum' → logprob: -16.505233764648438
    6. 'in' → logprob: -17.255233764648438
    7. '```' → logprob: -17.380233764648438
    8. '   ' → logprob: -17.630233764648438
    9. ' in' → logprob: -17.630233764648438
    10. 'import' → logprob: -17.755233764648438

Token 731: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003827676991932094
    2. 'self' → logprob: -7.875382900238037
    3. '       ' → logprob: -13.750382423400879
    4. ' self' → logprob: -14.500382423400879
    5. ' (' → logprob: -15.250382423400879
    6. '[self' → logprob: -15.250382423400879
    7. '(' → logprob: -15.500382423400879
    8. '   ' → logprob: -16.250383377075195
    9. '=self' → logprob: -16.375383377075195
    10. ',self' → logprob: -16.625383377075195

Token 732: '.flags' (ID: 62738)
  Prédit: '.flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flags' → logprob: -1.0206720617134124e-05
    2. 'flags' → logprob: -12.25001049041748
    3. '.' → logprob: -12.75001049041748
    4. '	flags' → logprob: -13.75001049041748
    5. ' .' → logprob: -14.62501049041748
    6. ').' → logprob: -15.37501049041748
    7. '.fl' → logprob: -16.000009536743164
    8. '.flag' → logprob: -16.000009536743164
    9. '(flags' → logprob: -16.000009536743164
    10. '.filters' → logprob: -16.250009536743164

Token 733: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007136951200664043
    2. '):' → logprob: -5.132136821746826
    3. '):
' → logprob: -6.882136821746826
    4. '           ' → logprob: -8.757137298583984
    5. '       ' → logprob: -11.382137298583984
    6. ' ):
' → logprob: -11.632137298583984
    7. ')' → logprob: -14.132137298583984
    8. '):

' → logprob: -14.132137298583984
    9. '          ' → logprob: -14.632137298583984
    10. ':' → logprob: -14.882137298583984

Token 734: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001200827769935131
    2. '	       ' → logprob: -7.2512006759643555
    3. '	   ' → logprob: -8.876200675964355
    4. ' if' → logprob: -9.001200675964355
    5. '   ' → logprob: -9.126200675964355
    6. '    	   ' → logprob: -10.251200675964355
    7. '		   ' → logprob: -10.501200675964355
    8. '    	' → logprob: -11.626200675964355
    9. '	           ' → logprob: -11.751200675964355
    10. '<|end|>' → logprob: -12.376200675964355

Token 735: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2475685179233551
    2. '           ' → logprob: -1.7475684881210327
    3. 'if' (adapté à ' if') → logprob: -3.1225686073303223
    4. '   ' → logprob: -7.247568607330322
    5. '	       ' → logprob: -8.247568130493164
    6. '	if' → logprob: -10.747568130493164
    7. '	           ' → logprob: -11.247568130493164
    8. '               ' → logprob: -11.247568130493164
    9. ' ' → logprob: -11.372568130493164
    10. '	   ' → logprob: -11.747568130493164

Token 736: ' self' (ID: 1051)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12551549077033997
    2. ' not' → logprob: -2.2505154609680176
    3. 'self' → logprob: -4.750515460968018
    4. 'i' → logprob: -6.125515460968018
    5. '   ' → logprob: -7.000515460968018
    6. ' self' → logprob: -7.625515460968018
    7. ' i' → logprob: -8.125515937805176
    8. '(not' → logprob: -10.250515937805176
    9. '           ' → logprob: -11.750515937805176
    10. '	not' → logprob: -11.875515937805176

Token 737: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.0002712297427933663
    2. 'visited' → logprob: -8.37527084350586
    3. '.i' → logprob: -11.75027084350586
    4. 'vis' → logprob: -11.87527084350586
    5. '.current' → logprob: -12.12527084350586
    6. '==' → logprob: -12.50027084350586
    7. 'i' → logprob: -13.00027084350586
    8. 'and' → logprob: -13.37527084350586
    9. '.visit' → logprob: -13.62527084350586
    10. ' is' → logprob: -13.75027084350586

Token 738: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -1.4974866644479334e-05
    2. '[i' → logprob: -11.875015258789062
    3. '[' → logprob: -12.375015258789062
    4. '```' → logprob: -14.375015258789062
    5. '_' → logprob: -14.500015258789062
    6. 'isted' → logprob: -15.125015258789062
    7. '
' → logprob: -15.250015258789062
    8. 'i' → logprob: -15.250015258789062
    9. 'it' → logprob: -15.500015258789062
    10. 'ITED' → logprob: -15.750015258789062

Token 739: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. ' or' → logprob: -14.250000953674316
    3. '[' → logprob: -14.875000953674316
    4. '[
' → logprob: -16.875001907348633
    5. '```' → logprob: -18.750001907348633
    6. 'i' → logprob: -19.125001907348633
    7. ' [' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.250001907348633
    9. ' i' → logprob: -19.750001907348633
    10. 'or' → logprob: -20.250001907348633

Token 740: ']:
' (ID: 22152)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06284651160240173
    2. 'or' → logprob: -2.8128464221954346
    3. ':' → logprob: -7.187846660614014
    4. ':
' → logprob: -9.937846183776855
    5. '   ' → logprob: -10.812846183776855
    6. '	or' → logprob: -11.187846183776855
    7. '           ' → logprob: -11.437846183776855
    8. ' ' → logprob: -11.562846183776855
    9. '```' → logprob: -12.687846183776855
    10. '       ' → logprob: -12.687846183776855

Token 741: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013648776803165674
    2. '           ' → logprob: -7.751364707946777
    3. ' or' → logprob: -8.126364707946777
    4. ' continue' → logprob: -8.126364707946777
    5. ' and' → logprob: -8.501364707946777
    6. ':' → logprob: -9.626364707946777
    7. '              ' → logprob: -10.876364707946777
    8. 'continue' → logprob: -11.251364707946777
    9. ':
' → logprob: -11.876364707946777
    10. '                   ' → logprob: -12.126364707946777

Token 742: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.483100950717926
    2. '               ' → logprob: -0.983100950717926
    3. 'continue' (adapté à ' continue') → logprob: -4.733100891113281
    4. '	continue' → logprob: -9.233100891113281
    5. '           ' → logprob: -10.483100891113281
    6. '_continue' → logprob: -11.233100891113281
    7. ' continues' → logprob: -11.483100891113281
    8. '                   ' → logprob: -11.608100891113281
    9. '	           ' → logprob: -12.233100891113281
    10. ' ' → logprob: -12.233100891113281

Token 743: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.057392705231904984
    2. '            
' → logprob: -3.3073925971984863
    3. '
' → logprob: -4.307392597198486
    4. ' 
' → logprob: -6.557392597198486
    5. '  
' → logprob: -6.682392597198486
    6. '    
' → logprob: -7.057392597198486
    7. '           
' → logprob: -7.307392597198486
    8. '   
' → logprob: -7.432392597198486
    9. '        
' → logprob: -8.807393074035645
    10. '<|end|>' → logprob: -8.807393074035645

Token 744: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005776750389486551
    2. '
' → logprob: -5.880776882171631
    3. '            
' → logprob: -6.005776882171631
    4. ' if' → logprob: -8.880776405334473
    5. '           
' → logprob: -9.755776405334473
    6. ' 
' → logprob: -9.880776405334473
    7. 'if' → logprob: -10.130776405334473
    8. '          ' → logprob: -10.130776405334473
    9. '        
' → logprob: -10.380776405334473
    10. '    
' → logprob: -10.505776405334473

Token 745: ' direction' (ID: 9262)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.7986567616462708
    2. '           ' → logprob: -1.423656702041626
    3. 'direction' (adapté à ' direction') → logprob: -1.798656702041626
    4. 'vector' → logprob: -2.798656702041626
    5. ' direction' → logprob: -3.923656702041626
    6. 'dir' → logprob: -4.298656940460205
    7. 'delta' → logprob: -4.423656940460205
    8. 'to' → logprob: -4.423656940460205
    9. ' vec' → logprob: -5.048656940460205
    10. 'relative' → logprob: -5.548656940460205

Token 746: '_vec' (ID: 29582)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06209899112582207
    2. '=' → logprob: -2.812098979949951
    3. '_vector' → logprob: -9.18709945678711
    4. '_vec' → logprob: -11.43709945678711
    5. ':' → logprob: -11.68709945678711
    6. '_to' → logprob: -12.93709945678711
    7. 'to' → logprob: -12.93709945678711
    8. '   ' → logprob: -13.68709945678711
    9. ' ' → logprob: -13.81209945678711
    10. 'vector' → logprob: -13.93709945678711

Token 747: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1797550767660141
    2. '=' → logprob: -1.8047550916671753
    3. ':' → logprob: -12.804755210876465
    4. 'to' → logprob: -13.429755210876465
    5. ' =
' → logprob: -13.679755210876465
    6. ' ' → logprob: -13.679755210876465
    7. ',' → logprob: -13.804755210876465
    8. ')' → logprob: -14.429755210876465
    9. '=
' → logprob: -14.554755210876465
    10. '           ' → logprob: -14.804755210876465

Token 748: ' (' (ID: 350)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0029708107467740774
    2. ' flag' → logprob: -6.0029706954956055
    3. '(flag' → logprob: -7.6279706954956055
    4. '   ' → logprob: -13.002970695495605
    5. '	flag' → logprob: -13.252970695495605
    6. ' (' → logprob: -13.252970695495605
    7. '(' → logprob: -14.752970695495605
    8. 'flags' → logprob: -14.877970695495605
    9. 'fl' → logprob: -15.002970695495605
    10. ' ' → logprob: -15.002970695495605

Token 749: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -4.739826181321405e-05
    2. ' flag' → logprob: -10.00004768371582
    3. '(flag' → logprob: -14.75004768371582
    4. ')' → logprob: -14.87504768371582
    5. '           ' → logprob: -15.00004768371582
    6. '   ' → logprob: -15.00004768371582
    7. '	flag' → logprob: -15.50004768371582
    8. 'flags' → logprob: -15.62504768371582
    9. ' ' → logprob: -16.62504768371582
    10. '  ' → logprob: -17.25004768371582

Token 750: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -2.8444881536415778e-05
    2. '.' → logprob: -10.875028610229492
    3. 'position' → logprob: -12.125028610229492
    4. ' .' → logprob: -13.500028610229492
    5. ').' → logprob: -14.000028610229492
    6. '[position' → logprob: -14.125028610229492
    7. '.flag' → logprob: -15.125028610229492
    8. '(position' → logprob: -15.750028610229492
    9. '.location' → logprob: -15.875028610229492
    10. ')' → logprob: -16.750028610229492

Token 751: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11284498870372772
    2. '-' → logprob: -2.237844944000244
    3. ' -
' → logprob: -11.487845420837402
    4. '-
' → logprob: -11.487845420837402
    5. ' ' → logprob: -13.487845420837402
    6. ')' → logprob: -14.862845420837402
    7. ' -

' → logprob: -16.362844467163086
    8. '```' → logprob: -16.487844467163086
    9. ' ' → logprob: -16.612844467163086
    10. '-

' → logprob: -17.362844467163086

Token 752: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.002475777640938759
    2. ' current' → logprob: -6.002475738525391
    3. '           ' → logprob: -17.37747573852539
    4. '	current' → logprob: -18.00247573852539
    5. '(current' → logprob: -18.12747573852539
    6. '[current' → logprob: -18.12747573852539
    7. 'self' → logprob: -18.37747573852539
    8. '=current' → logprob: -18.50247573852539
    9. '.current' → logprob: -18.75247573852539
    10. '$current' → logprob: -19.00247573852539

Token 753: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.20149870216846466
    2. 'pos' → logprob: -1.7014987468719482
    3. 'current' → logprob: -9.951498985290527
    4. 'position' → logprob: -11.576498985290527
    5. 'flag' → logprob: -11.576498985290527
    6. 'flags' → logprob: -11.826498985290527
    7. 'Pos' → logprob: -12.576498985290527
    8. 'self' → logprob: -12.701498985290527
    9. ' pos' → logprob: -14.451498985290527
    10. 'i' → logprob: -14.701498985290527

Token 754: ')
' (ID: 446)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.16140314936637878
    2. ')' → logprob: -1.9114031791687012
    3. ')
' → logprob: -6.786403179168701
    4. ' ).' → logprob: -10.911402702331543
    5. ' )' → logprob: -11.786402702331543
    6. ')

' → logprob: -11.911402702331543
    7. '           ' → logprob: -12.661402702331543
    8. '       ' → logprob: -12.786402702331543
    9. '   ' → logprob: -12.911402702331543
    10. ' ' → logprob: -13.786402702331543

Token 755: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004767595790326595
    2. ' if' → logprob: -5.879767417907715
    3. ' direction' → logprob: -6.504767417907715
    4. 'direction' → logprob: -8.879767417907715
    5. ' angle' → logprob: -9.379767417907715
    6. ' length' → logprob: -9.754767417907715
    7. 'if' → logprob: -10.004767417907715
    8. ' normalized' → logprob: -10.754767417907715
    9. ',' → logprob: -11.379767417907715
    10. '            
' → logprob: -11.504767417907715

Token 756: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7129499316215515
    2. 'direction' → logprob: -1.0879499912261963
    3. 'dir' → logprob: -2.8379499912261963
    4. 'angle' → logprob: -2.8379499912261963
    5. 'distance' → logprob: -3.7129499912261963
    6. 'norm' → logprob: -4.337949752807617
    7. '           ' → logprob: -4.837949752807617
    8. 'unit' → logprob: -5.962949752807617
    9. 'normalized' → logprob: -6.087949752807617
    10. 'right' → logprob: -6.962949752807617

Token 757: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9153549075126648
    2. 'direction' → logprob: -0.9153549075126648
    3. 'distance' → logprob: -2.4153549671173096
    4. 'dir' → logprob: -3.0403549671173096
    5. 'norm' → logprob: -4.0403547286987305
    6. 'angle' → logprob: -4.2903547286987305
    7. '           ' → logprob: -4.2903547286987305
    8. 'dist' → logprob: -4.9153547286987305
    9. 'unit' → logprob: -5.5403547286987305
    10. 'normalized' → logprob: -6.1653547286987305

Token 758: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.01292361132800579
    2. ' direction' → logprob: -4.387923717498779
    3. '(direction' → logprob: -8.262923240661621
    4. '           ' → logprob: -9.262923240661621
    5. 'not' → logprob: -10.637923240661621
    6. '   ' → logprob: -11.887923240661621
    7. ' not' → logprob: -11.887923240661621
    8. '       ' → logprob: -12.637923240661621
    9. '                   ' → logprob: -12.762923240661621
    10. '               ' → logprob: -13.137923240661621

Token 759: ' vector' (ID: 9727)
  Prédit: '_vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -0.03441216051578522
    2. 'vec' → logprob: -3.784412145614624
    3. ' is' → logprob: -5.534412384033203
    4. 'Vec' → logprob: -6.659412384033203
    5. ' vector' → logprob: -6.909412384033203
    6. '_vector' → logprob: -7.159412384033203
    7. '=' → logprob: -7.159412384033203
    8. 'vector' → logprob: -7.159412384033203
    9. ' =' → logprob: -7.784412384033203
    10. ' Vec' → logprob: -8.159412384033203

Token 760: ' zero' (ID: 12421)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2926655113697052
    2. ' is' → logprob: -2.292665481567383
    3. 'length' → logprob: -3.417665481567383
    4. ' has' → logprob: -3.667665481567383
    5. '.length' → logprob: -3.792665481567383
    6. ' length' → logprob: -3.917665481567383
    7. ' .' → logprob: -3.917665481567383
    8. '.x' → logprob: -4.292665481567383
    9. 'is' → logprob: -4.917665481567383
    10. '.dot' → logprob: -5.542665481567383

Token 761: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.560125470161438
    2. 'length' → logprob: -1.560125470161438
    3. ' length' → logprob: -2.8101253509521484
    4. ',' → logprob: -2.9351253509521484
    5. '-length' → logprob: -3.0601253509521484
    6. ' or' → logprob: -3.9351253509521484
    7. ' and' → logprob: -4.310125350952148
    8. '=' → logprob: -4.435125350952148
    9. '_length' → logprob: -5.560125350952148
    10. ':length' → logprob: -6.685125350952148

Token 762: 'same' (ID: 48581)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.05468840152025223
    2. ' direction' → logprob: -3.5546884536743164
    3. ')' → logprob: -4.304688453674316
    4. '),' → logprob: -4.679688453674316
    5. '(direction' → logprob: -6.929688453674316
    6. '0' → logprob: -8.429688453674316
    7. '):
' → logprob: -8.554688453674316
    8. '):' → logprob: -8.804688453674316
    9. '           ' → logprob: -9.679688453674316
    10. ')
' → logprob: -10.054688453674316

Token 763: ' point' (ID: 2438)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.9891766905784607
    2. ' vector' → logprob: -1.8641767501831055
    3. 'vector' → logprob: -2.1141767501831055
    4. 'point' → logprob: -2.3641767501831055
    5. ' position' → logprob: -2.3641767501831055
    6. ' point' → logprob: -3.2391767501831055
    7. '):' → logprob: -3.2391767501831055
    8. 'x' → logprob: -3.8641767501831055
    9. ')' → logprob: -4.1141767501831055
    10. ' or' → logprob: -4.3641767501831055

Token 764: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0969308614730835
    2. ' or' → logprob: -3.471930980682373
    3. ')' → logprob: -4.346930980682373
    4. ',' → logprob: -4.346930980682373
    5. 'and' → logprob: -4.721930980682373
    6. ' and' → logprob: -4.846930980682373
    7. '):' → logprob: -4.971930980682373
    8. '           ' → logprob: -5.221930980682373
    9. '               ' → logprob: -5.721930980682373
    10. '):
' → logprob: -6.346930980682373

Token 765: ' skip' (ID: 16677)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1054401844739914
    2. 'continue' → logprob: -2.605440139770508
    3. '               ' → logprob: -3.730440139770508
    4. '           ' → logprob: -6.355440139770508
    5. ' if' → logprob: -8.605440139770508
    6. '   ' → logprob: -9.355440139770508
    7. '	continue' → logprob: -9.605440139770508
    8. ' ' → logprob: -10.355440139770508
    9. ' continues' → logprob: -10.980440139770508
    10. ' next' → logprob: -11.105440139770508

Token 766: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012110683601349592
    2. ' if' → logprob: -7.001211166381836
    3. '               ' → logprob: -9.251211166381836
    4. ',' → logprob: -9.626211166381836
    5. 'if' → logprob: -10.251211166381836
    6. '            
' → logprob: -10.876211166381836
    7. '          ' → logprob: -11.376211166381836
    8. '       ' → logprob: -11.626211166381836
    9. '.' → logprob: -11.751211166381836
    10. '		' → logprob: -12.001211166381836

Token 767: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015431294741574675
    2. ' if' → logprob: -9.375154495239258
    3. '               ' → logprob: -10.500154495239258
    4. ',' → logprob: -11.250154495239258
    5. '       ' → logprob: -11.875154495239258
    6. '            
' → logprob: -12.625154495239258
    7. '<|end|>' → logprob: -12.750154495239258
    8. '	       ' → logprob: -12.875154495239258
    9. ' continue' → logprob: -13.125154495239258
    10. '		' → logprob: -13.125154495239258

Token 768: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48754408955574036
    2. ' if' → logprob: -1.112544059753418
    3. 'if' (adapté à ' if') → logprob: -2.862544059753418
    4. '	if' → logprob: -12.487544059753418
    5. ' ' → logprob: -12.737544059753418
    6. '               ' → logprob: -13.112544059753418
    7. '		' → logprob: -13.237544059753418
    8. '       ' → logprob: -13.237544059753418
    9. ' continue' → logprob: -13.237544059753418
    10. 'continue' → logprob: -13.487544059753418

Token 769: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.0620565265417099
    2. ' direction' → logprob: -2.812056541442871
    3. '(direction' → logprob: -10.312056541442871
    4. ' math' → logprob: -10.687056541442871
    5. ' ' → logprob: -11.562056541442871
    6. 'math' → logprob: -11.812056541442871
    7. 'abs' → logprob: -12.062056541442871
    8. '   ' → logprob: -12.062056541442871
    9. '  ' → logprob: -13.812056541442871
    10. ' (' → logprob: -14.062056541442871

Token 770: '_vec' (ID: 29582)
  Prédit: '_vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -8.196732960641384e-05
    2. 'vec' → logprob: -10.625082015991211
    3. '_' → logprob: -10.875082015991211
    4. '_vect' → logprob: -11.500082015991211
    5. '_VEC' → logprob: -11.875082015991211
    6. 'Vec' → logprob: -12.375082015991211
    7. ' Vec' → logprob: -12.500082015991211
    8. '=' → logprob: -13.000082015991211
    9. '==' → logprob: -13.500082015991211
    10. '_len' → logprob: -13.500082015991211

Token 771: '.x' (ID: 3700)
  Prédit: '.length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.03823518753051758
    2. '.x' → logprob: -3.2882351875305176
    3. '.' → logprob: -8.66323471069336
    4. ' .' → logprob: -11.66323471069336
    5. '.l' → logprob: -12.28823471069336
    6. 'length' → logprob: -12.66323471069336
    7. '==' → logprob: -13.16323471069336
    8. '.Length' → logprob: -14.41323471069336
    9. ' ==' → logprob: -14.53823471069336
    10. '.LENGTH' → logprob: -14.66323471069336

Token 772: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42927733063697815
    2. ' ==' → logprob: -1.0542773008346558
    3. '<=' → logprob: -7.804277420043945
    4. ' <=' → logprob: -8.804277420043945
    5. '==
' → logprob: -12.054277420043945
    6. '=' → logprob: -12.429277420043945
    7. '()==' → logprob: -13.054277420043945
    8. ' ' → logprob: -13.554277420043945
    9. '0' → logprob: -13.804277420043945
    10. ')==' → logprob: -13.929277420043945

Token 773: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.250158309936523
    4. '  ' → logprob: -19.375158309936523
    5. '۰' → logprob: -19.500158309936523
    6. '```' → logprob: -20.500158309936523
    7. '
' → logprob: -20.625158309936523
    8. '<|end|>' → logprob: -20.750158309936523
    9. ' ' → logprob: -20.875158309936523
    10. '    ' → logprob: -21.125158309936523

Token 774: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '۰' → logprob: -17.625123977661133
    4. '
' → logprob: -18.437623977661133
    5. 'current' → logprob: -18.625123977661133
    6. '   ' → logprob: -18.875123977661133
    7. '  ' → logprob: -18.875123977661133
    8. '```' → logprob: -18.875123977661133
    9. '=' → logprob: -19.562623977661133
    10. 'exact' → logprob: -19.687623977661133

Token 775: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.061980683356523514
    2. 'and' → logprob: -2.811980724334717
    3. ' ' → logprob: -11.311980247497559
    4. '           ' → logprob: -15.311980247497559
    5. '   ' → logprob: -15.436980247497559
    6. '       ' → logprob: -16.561981201171875
    7. '	and' → logprob: -16.686981201171875
    8. '    ' → logprob: -17.061981201171875
    9. '0' → logprob: -17.311981201171875
    10. '  ' → logprob: -17.686981201171875

Token 776: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.10020774602890015
    2. ' direction' → logprob: -2.350207805633545
    3. '(direction' → logprob: -14.475207328796387
    4. '   ' → logprob: -15.975207328796387
    5. '           ' → logprob: -16.225208282470703
    6. '                   ' → logprob: -16.225208282470703
    7. ' ' → logprob: -16.350208282470703
    8. '.direction' → logprob: -16.975208282470703
    9. '_direction' → logprob: -17.475208282470703
    10. 'director' → logprob: -17.725208282470703

Token 777: '_vec' (ID: 29582)
  Prédit: '_vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -0.00352701754309237
    2. 'vec' → logprob: -6.2535271644592285
    3. '_vector' → logprob: -7.0035271644592285
    4. 'vector' → logprob: -7.7535271644592285
    5. 'direction' → logprob: -8.37852668762207
    6. '_vect' → logprob: -11.12852668762207
    7. 'Vec' → logprob: -11.50352668762207
    8. '_direction' → logprob: -14.25352668762207
    9. ' direction' → logprob: -14.50352668762207
    10. '_vectors' → logprob: -14.75352668762207

Token 778: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -4.143808109802194e-05
    2. '.' → logprob: -10.875041007995605
    3. ' .' → logprob: -11.250041007995605
    4. 'y' → logprob: -11.875041007995605
    5. '.x' → logprob: -13.625041007995605
    6. '<|end|>' → logprob: -14.625041007995605
    7. '<|end|>' → logprob: -15.375041007995605
    8. '	y' → logprob: -16.125041961669922
    9. ' ' → logprob: -16.125041961669922
    10. ' y' → logprob: -16.375041961669922

Token 779: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3132841885089874
    2. ' ==' → logprob: -1.313284158706665
    3. ')==' → logprob: -11.813283920288086
    4. '<|end|>' → logprob: -11.938283920288086
    5. '()==' → logprob: -13.063283920288086
    6. '<|end|>' → logprob: -13.438283920288086
    7. '=' → logprob: -13.688283920288086
    8. ']==' → logprob: -13.688283920288086
    9. '==
' → logprob: -13.938283920288086
    10. ' ' → logprob: -14.688283920288086

Token 780: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.500380516052246
    4. '  ' → logprob: -17.75037956237793
    5. '<|end|>' → logprob: -17.75037956237793
    6. '۰' → logprob: -18.37537956237793
    7. '=' → logprob: -19.06287956237793
    8. '       ' → logprob: -19.12537956237793
    9. '```' → logprob: -19.12537956237793
    10. '<|end|>' → logprob: -19.31287956237793

Token 781: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '<|end|>' → logprob: -16.000030517578125
    4. '   ' → logprob: -17.750030517578125
    5. '۰' → logprob: -18.250030517578125
    6. '=' → logprob: -18.750030517578125
    7. '  ' → logprob: -19.125030517578125
    8. '<|end|>' → logprob: -19.187530517578125
    9. '```' → logprob: -20.500030517578125
    10. '    ' → logprob: -20.687530517578125

Token 782: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5873776078224182
    2. '               ' → logprob: -1.3373775482177734
    3. ':' → logprob: -1.9623775482177734
    4. '           ' → logprob: -3.2123775482177734
    5. ' continue' → logprob: -8.212377548217773
    6. '       ' → logprob: -8.587377548217773
    7. ',' → logprob: -9.087377548217773
    8. '):
' → logprob: -9.212377548217773
    9. 'continue' → logprob: -9.337377548217773
    10. ' or' → logprob: -9.712377548217773

Token 783: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002756366156972945
    2. ' continue' → logprob: -8.875275611877441
    3. '           ' → logprob: -9.000275611877441
    4. 'continue' → logprob: -12.625275611877441
    5. '	           ' → logprob: -13.000275611877441
    6. ',' → logprob: -13.625275611877441
    7. '                   ' → logprob: -13.625275611877441
    8. '       ' → logprob: -13.875275611877441
    9. '<|end|>' → logprob: -14.625275611877441
    10. '   ' → logprob: -14.750275611877441

Token 784: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5133656859397888
    2. ' continue' → logprob: -1.5133657455444336
    3. 'continue' (adapté à ' continue') → logprob: -1.7633657455444336
    4. '           ' → logprob: -4.638365745544434
    5. '	continue' → logprob: -9.013365745544434
    6. '   ' → logprob: -10.138365745544434
    7. '	           ' → logprob: -10.763365745544434
    8. '                   ' → logprob: -10.888365745544434
    9. '			' → logprob: -12.513365745544434
    10. '_continue' → logprob: -12.638365745544434

Token 785: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04042727127671242
    2. '
' → logprob: -3.2904272079467773
    3. '            
' → logprob: -6.540427207946777
    4. '<|end|>' → logprob: -8.415427207946777
    5. '    
' → logprob: -8.665427207946777
    6. ',' → logprob: -9.290427207946777
    7. '  
' → logprob: -9.290427207946777
    8. '
' → logprob: -9.790427207946777
    9. '<|end|>' → logprob: -9.915427207946777
    10. '        
' → logprob: -10.165427207946777

Token 786: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032167620956897736
    2. '
' → logprob: -3.657167673110962
    3. '            
' → logprob: -5.657167434692383
    4. '    
' → logprob: -7.532167434692383
    5. ' 
' → logprob: -7.657167434692383
    6. '        
' → logprob: -8.032167434692383
    7. '   ' → logprob: -8.532167434692383
    8. ',' → logprob: -8.782167434692383
    9. '  
' → logprob: -9.157167434692383
    10. '           
' → logprob: -9.282167434692383

Token 787: ' angle' (ID: 16538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35399046540260315
    2. 'angle' (adapté à ' angle') → logprob: -1.6039904356002808
    3. ' angle' → logprob: -2.3539905548095703
    4. ' right' → logprob: -7.85399055480957
    5. 'right' → logprob: -7.85399055480957
    6. '            
' → logprob: -8.22899055480957
    7. '
' → logprob: -8.85399055480957
    8. 'direction' → logprob: -8.97899055480957
    9. 'distance' → logprob: -9.10399055480957
    10. '#' → logprob: -9.35399055480957

Token 788: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.277230441570282
    2. '_to' → logprob: -1.7772305011749268
    3. '=' → logprob: -2.7772305011749268
    4. '_' → logprob: -4.902230262756348
    5. 'to' → logprob: -5.902230262756348
    6. '_right' → logprob: -8.277230262756348
    7. 's' → logprob: -9.027230262756348
    8. '_from' → logprob: -9.652230262756348
    9. '_=' → logprob: -9.652230262756348
    10. '_between' → logprob: -10.402230262756348

Token 789: ' facing' (ID: 20511)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.002900451421737671
    2. ' facing' → logprob: -6.00290060043335
    3. 'self' → logprob: -8.377900123596191
    4. ' f' → logprob: -9.502900123596191
    5. '	f' → logprob: -10.627900123596191
    6. '   ' → logprob: -10.877900123596191
    7. ' self' → logprob: -11.252900123596191
    8. 'fac' → logprob: -11.377900123596191
    9. 'face' → logprob: -11.502900123596191
    10. 'current' → logprob: -12.127900123596191

Token 790: '.angle' (ID: 90963)
  Prédit: '.angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.angle' → logprob: -9.353008499601856e-05
    2. '.' → logprob: -9.375093460083008
    3. ' .' → logprob: -11.875093460083008
    4. '.right' → logprob: -14.375093460083008
    5. ').' → logprob: -15.250093460083008
    6. '.axis' → logprob: -15.875093460083008
    7. '.arrow' → logprob: -16.125093460083008
    8. '.area' → logprob: -16.250093460083008
    9. '.angular' → logprob: -16.375093460083008
    10. '.vector' → logprob: -16.500093460083008

Token 791: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.0280383548888494e-06
    2. 'to' → logprob: -13.875000953674316
    3. '_' → logprob: -17.375001907348633
    4. 'To' → logprob: -18.375001907348633
    5. '_right' → logprob: -18.625001907348633
    6. ')_' → logprob: -18.625001907348633
    7. ')' → logprob: -18.750001907348633
    8. ' to' → logprob: -18.875001907348633
    9. '_TO' → logprob: -19.250001907348633
    10. '(' → logprob: -19.500001907348633

Token 792: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.009858437813818455
    2. 'right' → logprob: -4.63485860824585
    3. '_' → logprob: -9.884858131408691
    4. '(right' → logprob: -10.884858131408691
    5. 'Right' → logprob: -11.759858131408691
    6. '_vector' → logprob: -11.884858131408691
    7. '_left' → logprob: -12.884858131408691
    8. '_(' → logprob: -13.509858131408691
    9. '_other' → logprob: -13.634858131408691
    10. ')' → logprob: -13.759858131408691

Token 793: '(direction' (ID: 97422)
  Prédit: '(direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(direction' → logprob: -0.000307575857732445
    2. '(' → logprob: -8.1253080368042
    3. 'direction' → logprob: -11.5003080368042
    4. ' (' → logprob: -14.7503080368042
    5. '(distance' → logprob: -15.5003080368042
    6. '(Direction' → logprob: -15.5003080368042
    7. '(d' → logprob: -15.6253080368042
    8. '(
' → logprob: -15.6253080368042
    9. ' direction' → logprob: -16.125307083129883
    10. '(angle' → logprob: -16.500307083129883

Token 794: '_vec' (ID: 29582)
  Prédit: '_vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -0.0011343818623572588
    2. 'vec' → logprob: -7.251134395599365
    3. 'vector' → logprob: -9.001133918762207
    4. '(direction' → logprob: -9.126133918762207
    5. 'Vec' → logprob: -9.626133918762207
    6. 'direction' → logprob: -10.001133918762207
    7. '_vect' → logprob: -10.001133918762207
    8. ')' → logprob: -11.376133918762207
    9. '_vector' → logprob: -11.751133918762207
    10. '_dir' → logprob: -13.001133918762207

Token 795: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012367760064080358
    2. ' )' → logprob: -6.876236915588379
    3. ')
' → logprob: -8.751236915588379
    4. '(' → logprob: -11.126236915588379
    5. ',' → logprob: -11.376236915588379
    6. '           ' → logprob: -12.876236915588379
    7. '       ' → logprob: -12.876236915588379
    8. '())' → logprob: -13.001236915588379
    9. ' )
' → logprob: -13.501236915588379
    10. '))' → logprob: -13.626236915588379

Token 796: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011951648048125207
    2. ' if' → logprob: -10.25011920928955
    3. '       ' → logprob: -10.50011920928955
    4. '<|end|>' → logprob: -10.87511920928955
    5. ',' → logprob: -11.12511920928955
    6. '```' → logprob: -12.37511920928955
    7. ')' → logprob: -12.75011920928955
    8. '   ' → logprob: -13.00011920928955
    9. '            
' → logprob: -13.25011920928955
    10. '               ' → logprob: -13.37511920928955

Token 797: ' dist' (ID: 3601)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.5147919058799744
    2. '       ' → logprob: -1.5147919654846191
    3. '           ' → logprob: -2.389791965484619
    4. ' if' → logprob: -2.889791965484619
    5. 'c' → logprob: -3.639791965484619
    6. 'if' → logprob: -4.889791965484619
    7. ' c' → logprob: -8.139791488647461
    8. '_candidates' → logprob: -8.264791488647461
    9. '   ' → logprob: -8.389791488647461
    10. ')' → logprob: -8.889791488647461

Token 798: ' =' (ID: 314)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.07544949650764465
    2. ' =' → logprob: -2.8254494667053223
    3. '=' → logprob: -4.325449466705322
    4. 'ANCE' → logprob: -9.45044994354248
    5. '   ' → logprob: -10.82544994354248
    6. ' ' → logprob: -11.20044994354248
    7. 'a' → logprob: -11.32544994354248
    8. ',' → logprob: -11.45044994354248
    9. '	' → logprob: -11.70044994354248
    10. '_' → logprob: -11.82544994354248

Token 799: ' direction' (ID: 9262)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.08331552892923355
    2. ' flag' → logprob: -3.20831561088562
    3. 'direction' → logprob: -3.83331561088562
    4. '(flag' → logprob: -4.833315372467041
    5. ' direction' → logprob: -5.583315372467041
    6. 'current' → logprob: -5.583315372467041
    7. ' (' → logprob: -6.583315372467041
    8. ' current' → logprob: -7.458315372467041
    9. '(direction' → logprob: -8.0833158493042
    10. '   ' → logprob: -10.0833158493042

Token 800: '_vec' (ID: 29582)
  Prédit: '_vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -0.0012698742793872952
    2. '_flag' → logprob: -8.126270294189453
    3. 'vec' → logprob: -8.376270294189453
    4. 'Vec' → logprob: -8.501270294189453
    5. '_vector' → logprob: -8.751270294189453
    6. '_vect' → logprob: -8.876270294189453
    7. 'flag' → logprob: -10.126270294189453
    8. ')' → logprob: -10.126270294189453
    9. '_flags' → logprob: -10.876270294189453
    10. '_distance' → logprob: -11.251270294189453

Token 801: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -2.5776860184123507e-06
    2. 'length' → logprob: -13.25000286102295
    3. '.' → logprob: -14.37500286102295
    4. ' .' → logprob: -16.500001907348633
    5. ':length' → logprob: -17.375001907348633
    6. '.LENGTH' → logprob: -17.875001907348633
    7. '	length' → logprob: -18.000001907348633
    8. ').' → logprob: -18.250001907348633
    9. ' length' → logprob: -18.375001907348633
    10. '.Length' → logprob: -18.625001907348633

Token 802: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1337624490261078
    2. '           ' → logprob: -2.3837623596191406
    3. '(),' → logprob: -4.258762359619141
    4. ',' → logprob: -4.633762359619141
    5. '()
' → logprob: -4.758762359619141
    6. '(),
' → logprob: -8.88376235961914
    7. '();' → logprob: -9.00876235961914
    8. '       ' → logprob: -9.38376235961914
    9. '())' → logprob: -10.38376235961914
    10. ')' → logprob: -10.38376235961914

Token 803: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.6087021473795176e-05
    2. ' if' → logprob: -10.625045776367188
    3. '       ' → logprob: -11.750045776367188
    4. '<|end|>' → logprob: -12.125045776367188
    5. ',' → logprob: -13.000045776367188
    6. '   ' → logprob: -13.250045776367188
    7. '            
' → logprob: -13.500045776367188
    8. '
' → logprob: -14.000045776367188
    9. 'if' → logprob: -14.875045776367188
    10. '<|end|>' → logprob: -15.125045776367188

Token 804: ' candidates' (ID: 18116)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01586507447063923
    2. 'c' → logprob: -4.765864849090576
    3. ' candidates' → logprob: -5.390864849090576
    4. ' if' → logprob: -6.640864849090576
    5. 'if' → logprob: -7.015864849090576
    6. '       ' → logprob: -8.140865325927734
    7. ' c' → logprob: -9.765865325927734
    8. '   ' → logprob: -10.140865325927734
    9. 'candidate' → logprob: -10.890865325927734
    10. 'tokens' → logprob: -11.140865325927734

Token 805: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008741624653339386
    2. '.' → logprob: -4.758741855621338
    3. '.ap' → logprob: -9.88374137878418
    4. '.app' → logprob: -10.00874137878418
    5. ' .' → logprob: -10.50874137878418
    6. '.a' → logprob: -13.75874137878418
    7. '.push' → logprob: -14.25874137878418
    8. ').' → logprob: -14.75874137878418
    9. '.extend' → logprob: -14.75874137878418
    10. '.add' → logprob: -15.38374137878418

Token 806: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014203235507011414
    2. '(' → logprob: -4.264203071594238
    3. '(
' → logprob: -10.139203071594238
    4. '(((' → logprob: -15.764203071594238
    5. '   ' → logprob: -16.514204025268555
    6. '(

' → logprob: -16.889204025268555
    7. ' ((' → logprob: -17.389204025268555
    8. '(('' → logprob: -17.639204025268555
    9. '((-' → logprob: -18.014204025268555
    10. ' (' → logprob: -18.014204025268555

Token 807: 'angle' (ID: 7140)
  Prédit: 'angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.0007524513057433069
    2. ' angle' → logprob: -7.2507524490356445
    3. '(angle' → logprob: -10.750752449035645
    4. 'i' → logprob: -11.500752449035645
    5. '   ' → logprob: -12.000752449035645
    6. '
' → logprob: -14.250752449035645
    7. ' ' → logprob: -14.250752449035645
    8. ')' → logprob: -14.375752449035645
    9. 'dist' → logprob: -14.875752449035645
    10. '  ' → logprob: -15.000752449035645

Token 808: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. ' ,' → logprob: -11.500029563903809
    3. ',i' → logprob: -11.500029563903809
    4. ',
' → logprob: -11.625029563903809
    5. ',

' → logprob: -16.125030517578125
    6. ',index' → logprob: -16.125030517578125
    7. ',
' → logprob: -16.625030517578125
    8. '‌,' → logprob: -17.000030517578125
    9. ',n' → logprob: -17.125030517578125
    10. '   ' → logprob: -17.625030517578125

Token 809: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.009794222190976143
    2. ' dist' → logprob: -4.634794235229492
    3. 'i' → logprob: -11.259794235229492
    4. '   ' → logprob: -11.884794235229492
    5. '-' → logprob: -12.259794235229492
    6. '	dist' → logprob: -12.759794235229492
    7. ' -' → logprob: -13.009794235229492
    8. ' ' → logprob: -13.134794235229492
    9. '(dist' → logprob: -13.634794235229492
    10. 'distance' → logprob: -14.009794235229492

Token 810: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.141186450899113e-05
    2. ',i' → logprob: -11.125020980834961
    3. ' ,' → logprob: -12.125020980834961
    4. '           ' → logprob: -14.500020980834961
    5. ',
' → logprob: -15.500020980834961
    6. ')' → logprob: -16.50002098083496
    7. ',index' → logprob: -16.50002098083496
    8. '   ' → logprob: -16.87502098083496
    9. '               ' → logprob: -17.50002098083496
    10. '       ' → logprob: -17.50002098083496

Token 811: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.228561349213123e-05
    2. ' i' → logprob: -9.875052452087402
    3. '           ' → logprob: -15.250052452087402
    4. ')' → logprob: -15.750052452087402
    5. 'flag' → logprob: -16.250051498413086
    6. '   ' → logprob: -16.625051498413086
    7. ',' → logprob: -17.000051498413086
    8. '-' → logprob: -17.000051498413086
    9. '```' → logprob: -17.625051498413086
    10. ' -' → logprob: -17.750051498413086

Token 812: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20173607766628265
    2. '))' → logprob: -1.7017360925674438
    3. '))
' → logprob: -8.701736450195312
    4. ')
' → logprob: -8.826736450195312
    5. '       ' → logprob: -12.451736450195312
    6. ',' → logprob: -12.951736450195312
    7. ' )' → logprob: -14.201736450195312
    8. '           ' → logprob: -14.451736450195312
    9. ')))' → logprob: -14.451736450195312
    10. ')}' → logprob: -14.701736450195312

Token 813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7421881556510925
    2. ')' → logprob: -1.2421882152557373
    3. '   ' → logprob: -2.1171882152557373
    4. '
' → logprob: -2.3671882152557373
    5. ')
' → logprob: -5.367187976837158
    6. '    
' → logprob: -5.492187976837158
    7. '        
' → logprob: -5.742187976837158
    8. ',' → logprob: -6.742187976837158
    9. '  
' → logprob: -6.742187976837158
    10. '.sort' → logprob: -6.742187976837158

Token 814: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08299411088228226
    2. '       ' → logprob: -2.957994222640991
    3. 'if' (adapté à ' if') → logprob: -4.707993984222412
    4. '
' → logprob: -4.832993984222412
    5. ' candidates' → logprob: -4.832993984222412
    6. ' if' → logprob: -6.082993984222412
    7. '   ' → logprob: -8.83299446105957
    8. '#' → logprob: -9.08299446105957
    9. '_candidates' → logprob: -10.08299446105957
    10. '        
' → logprob: -10.33299446105957

Token 815: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.632646381855011
    2. 'not' → logprob: -0.757646381855011
    3. 'c' → logprob: -10.632646560668945
    4. 'len' → logprob: -11.007646560668945
    5. '	not' → logprob: -13.257646560668945
    6. ' candidates' → logprob: -14.007646560668945
    7. '(not' → logprob: -14.007646560668945
    8. '   ' → logprob: -14.132646560668945
    9. ' len' → logprob: -14.257646560668945
    10. 'n' → logprob: -15.132646560668945

Token 816: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.08894568681716919
    2. 'c' → logprob: -2.4639456272125244
    3. '_candidates' → logprob: -13.088945388793945
    4. 'andidates' → logprob: -13.838945388793945
    5. ' candidats' → logprob: -13.963945388793945
    6. 'Candidates' → logprob: -14.338945388793945
    7. 'cand' → logprob: -15.088945388793945
    8. ' candidatos' → logprob: -15.338945388793945
    9. '	c' → logprob: -15.588945388793945
    10. ' ' → logprob: -15.963945388793945

Token 817: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018342850729823112
    2. ':
' → logprob: -4.018342971801758
    3. ':return' → logprob: -9.268342971801758
    4. '       ' → logprob: -10.643342971801758
    5. '.sort' → logprob: -11.018342971801758
    6. '.' → logprob: -11.143342971801758
    7. '[' → logprob: -11.393342971801758
    8. ' :' → logprob: -11.893342971801758
    9. '=' → logprob: -12.268342971801758
    10. '   ' → logprob: -12.643342971801758

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04777023196220398
    2. ':' → logprob: -3.1727702617645264
    3. ':
' → logprob: -5.922770023345947
    4. ':return' → logprob: -6.797770023345947
    5. ' return' → logprob: -8.047770500183105
    6. 'return' → logprob: -8.422770500183105
    7. '       ' → logprob: -9.297770500183105
    8. '   ' → logprob: -9.422770500183105
    9. ',' → logprob: -9.547770500183105
    10. '.' → logprob: -9.672770500183105

Token 819: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02367936074733734
    2. ' return' → logprob: -4.523679256439209
    3. '       ' → logprob: -5.023679256439209
    4. '           ' → logprob: -5.148679256439209
    5. 'c' → logprob: -9.398679733276367
    6. '   ' → logprob: -10.148679733276367
    7. 'None' → logprob: -10.648679733276367
    8. '	return' → logprob: -12.273679733276367
    9. ' ' → logprob: -13.273679733276367
    10. 'self' → logprob: -13.273679733276367

Token 820: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009115827269852161
    2. ' None' → logprob: -7.000911712646484
    3. '0' → logprob: -19.000911712646484
    4. '=None' → logprob: -19.000911712646484
    5. ',None' → logprob: -19.000911712646484
    6. '(None' → logprob: -19.625911712646484
    7. '_None' → logprob: -20.250911712646484
    8. 'none' → logprob: -20.250911712646484
    9. '
' → logprob: -21.375911712646484
    10. '       ' → logprob: -21.500911712646484

Token 821: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012026148848235607
    2. '
' → logprob: -5.387026309967041
    3. '        
' → logprob: -5.762026309967041
    4. ' candidates' → logprob: -6.512026309967041
    5. '<|end|>' → logprob: -6.762026309967041
    6. 'c' → logprob: -7.262026309967041
    7. '_candidates' → logprob: -8.637025833129883
    8. ',' → logprob: -9.012025833129883
    9. '#' → logprob: -9.262025833129883
    10. ',c' → logprob: -9.637025833129883

Token 822: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009574279189109802
    2. 'c' → logprob: -5.3845744132995605
    3. ' candidates' → logprob: -5.5095744132995605
    4. '        
' → logprob: -8.259573936462402
    5. '<|end|>' → logprob: -8.634573936462402
    6. ')' → logprob: -9.259573936462402
    7. '_candidates' → logprob: -9.259573936462402
    8. '
' → logprob: -9.634573936462402
    9. ')c' → logprob: -10.384573936462402
    10. '   ' → logprob: -10.634573936462402

Token 823: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01585475727915764
    2. '       ' → logprob: -4.265854835510254
    3. ' candidates' → logprob: -6.640854835510254
    4. '
' → logprob: -8.640854835510254
    5. '#' (adapté à ' #') → logprob: -9.515854835510254
    6. ' c' → logprob: -10.265854835510254
    7. '   ' → logprob: -11.265854835510254
    8. 'sorted' → logprob: -11.515854835510254
    9. '        
' → logprob: -11.515854835510254
    10. '_candidates' → logprob: -11.765854835510254

Token 824: ' Sort' (ID: 25945)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005910431034862995
    2. '#' → logprob: -5.255910396575928
    3. ' candidates' → logprob: -7.505910396575928
    4. '       ' → logprob: -9.255910873413086
    5. '
' → logprob: -11.755910873413086
    6. '   ' → logprob: -11.880910873413086
    7. 'cand' → logprob: -12.005910873413086
    8. 'sorted' → logprob: -13.005910873413086
    9. 'min' → logprob: -13.505910873413086
    10. 'candidate' → logprob: -13.755910873413086

Token 825: ' by' (ID: 656)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0800359696149826
    2. '(c' → logprob: -2.705035924911499
    3. '(key' → logprob: -5.455036163330078
    4. ' candidates' → logprob: -5.830036163330078
    5. '_candidates' → logprob: -6.955036163330078
    6. 'key' → logprob: -7.080036163330078
    7. '       ' → logprob: -7.955036163330078
    8. '(' → logprob: -8.455036163330078
    9. '()' → logprob: -8.830036163330078
    10. '()
' → logprob: -8.955036163330078

Token 826: ' smallest' (ID: 42173)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.04830513894557953
    2. 'lambda' → logprob: -3.423305034637451
    3. 'c' → logprob: -4.673305034637451
    4. '(angle' → logprob: -6.548305034637451
    5. ' angle' → logprob: -6.923305034637451
    6. '(lambda' → logprob: -6.923305034637451
    7. 'key' → logprob: -7.173305034637451
    8. '(' → logprob: -7.548305034637451
    9. ' lambda' → logprob: -9.04830551147461
    10. 'candidate' → logprob: -9.42330551147461

Token 827: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.23125801980495453
    2. ' angle' → logprob: -1.8562580347061157
    3. '(angle' → logprob: -3.231257915496826
    4. '(' → logprob: -4.856257915496826
    5. ' (' → logprob: -6.731257915496826
    6. '_angle' → logprob: -6.981257915496826
    7. '<|end|>' → logprob: -7.981257915496826
    8. ')' → logprob: -8.481258392333984
    9. '(
' → logprob: -9.481258392333984
    10. '[' → logprob: -9.481258392333984

Token 828: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02211599424481392
    2. 'c' → logprob: -4.897116184234619
    3. ',c' → logprob: -5.272116184234619
    4. '       ' → logprob: -5.397116184234619
    5. 'and' → logprob: -5.647116184234619
    6. ',
' → logprob: -8.022115707397461
    7. ' and' → logprob: -8.272115707397461
    8. ' candidates' → logprob: -8.522115707397461
    9. '(c' → logprob: -9.272115707397461
    10. '_candidates' → logprob: -9.772115707397461

Token 829: ' the' (ID: 290)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.04402842000126839
    2. 'the' → logprob: -3.4190285205841064
    3. '_right' → logprob: -4.794028282165527
    4. ' right' → logprob: -6.544028282165527
    5. ' the' → logprob: -8.044028282165527
    6. 'left' → logprob: -10.044028282165527
    7. 'ight' → logprob: -10.419028282165527
    8. '	right' → logprob: -10.544028282165527
    9. 'select' → logprob: -10.669028282165527
    10. '
' → logprob: -10.669028282165527

Token 830: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0006869370117783546
    2. ' right' → logprob: -7.500687122344971
    3. 'left' → logprob: -9.250686645507812
    4. '_right' → logprob: -10.875686645507812
    5. 'ight' → logprob: -12.000686645507812
    6. 'r' → logprob: -13.125686645507812
    7. ' ' → logprob: -13.250686645507812
    8. '	right' → logprob: -13.375686645507812
    9. '
' → logprob: -13.750686645507812
    10. 'Right' → logprob: -13.875686645507812

Token 831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09719861298799515
    2. '       ' → logprob: -2.972198724746704
    3. 'c' → logprob: -3.722198724746704
    4. ',c' → logprob: -4.347198486328125
    5. ' candidates' → logprob: -6.972198486328125
    6. 'and' → logprob: -6.972198486328125
    7. '(c' → logprob: -7.097198486328125
    8. ' and' → logprob: -7.847198486328125
    9. ',
' → logprob: -7.847198486328125
    10. ':' → logprob: -9.097198486328125

Token 832: ' then' (ID: 1815)
  Prédit: ' then'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.06947391480207443
    2. 'then' → logprob: -3.1944739818573
    3. 'dist' → logprob: -4.194473743438721
    4. ' dist' → logprob: -4.694473743438721
    5. ' smallest' → logprob: -6.819473743438721
    6. ',' → logprob: -8.319474220275879
    7. ' and' → logprob: -8.694474220275879
    8. 'distance' → logprob: -9.069474220275879
    9. 'and' → logprob: -9.194474220275879
    10. '       ' → logprob: -10.069474220275879

Token 833: ' nearest' (ID: 35210)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6308135986328125
    2. ' by' → logprob: -1.2558135986328125
    3. ' dist' → logprob: -2.5058135986328125
    4. 'distance' → logprob: -2.7558135986328125
    5. 'by' → logprob: -3.8808135986328125
    6. ' distance' → logprob: -4.1308135986328125
    7. ' smallest' → logprob: -7.1308135986328125
    8. ' shortest' → logprob: -8.755813598632812
    9. '   ' → logprob: -10.005813598632812
    10. 'small' → logprob: -11.255813598632812

Token 834: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.10890991240739822
    2. ' distance' → logprob: -2.483909845352173
    3. 'dist' → logprob: -4.858910083770752
    4. ',' → logprob: -5.358910083770752
    5. 'candidate' → logprob: -6.233910083770752
    6. '(distance' → logprob: -6.858910083770752
    7. '_distance' → logprob: -6.983910083770752
    8. 'neighbor' → logprob: -6.983910083770752
    9. 'angle' → logprob: -7.358910083770752
    10. ' neighbor' → logprob: -7.858910083770752

Token 835: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5102898478507996
    2. ',' → logprob: -1.2602899074554443
    3. 'c' → logprob: -2.3852899074554443
    4. ',c' → logprob: -4.260289669036865
    5. '(c' → logprob: -5.260289669036865
    6. ',
' → logprob: -6.385289669036865
    7. ')c' → logprob: -6.635289669036865
    8. ' candidates' → logprob: -7.635289669036865
    9. ')' → logprob: -8.510290145874023
    10. '_candidates' → logprob: -8.760290145874023

Token 836: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15082111954689026
    2. 'c' → logprob: -2.1508212089538574
    3. ',' → logprob: -4.400821208953857
    4. ',c' → logprob: -4.900821208953857
    5. ' candidates' → logprob: -6.775821208953857
    6. ')c' → logprob: -7.025821208953857
    7. '.sort' → logprob: -7.775821208953857
    8. '(c' → logprob: -8.1508207321167
    9. ',
' → logprob: -8.4008207321167
    10. '_candidates' → logprob: -8.7758207321167

Token 837: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02368099056184292
    2. ' candidates' → logprob: -3.7736809253692627
    3. '       ' → logprob: -7.773681163787842
    4. '
' → logprob: -11.523680686950684
    5. ' c' → logprob: -13.148680686950684
    6. '	c' → logprob: -14.023680686950684
    7. '_candidates' → logprob: -14.148680686950684
    8. ' candidats' → logprob: -15.398680686950684
    9. '```' → logprob: -15.523680686950684
    10. 'sorted' → logprob: -15.523680686950684

Token 838: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -2.4153549020411447e-05
    2. '.' → logprob: -10.75002384185791
    3. 'sort' → logprob: -13.25002384185791
    4. '.c' → logprob: -15.37502384185791
    5. '=' → logprob: -15.50002384185791
    6. '	sort' → logprob: -15.75002384185791
    7. ' .' → logprob: -16.375024795532227
    8. '.sorted' → logprob: -16.875024795532227
    9. ' sort' → logprob: -17.125024795532227
    10. '.s' → logprob: -17.250024795532227

Token 839: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03168107196688652
    2. '(key' → logprob: -3.5316810607910156
    3. '()
' → logprob: -6.281681060791016
    4. 'key' → logprob: -10.156681060791016
    5. '(' → logprob: -11.906681060791016
    6. '(reverse' → logprob: -12.281681060791016
    7. '(lambda' → logprob: -12.906681060791016
    8. ' key' → logprob: -13.781681060791016
    9. ',key' → logprob: -13.906681060791016
    10. '()

' → logprob: -14.031681060791016

Token 840: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0024758970830589533
    2. '=' → logprob: -6.002475738525391
    3. '=
' → logprob: -15.50247573852539
    4. ' =' → logprob: -18.37747573852539
    5. 'lambda' → logprob: -18.75247573852539
    6. '=str' → logprob: -18.87747573852539
    7. '=item' → logprob: -19.00247573852539
    8. '=_' → logprob: -19.12747573852539
    9. '=

' → logprob: -19.12747573852539
    10. '=len' → logprob: -19.87747573852539

Token 841: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015459599904716015
    2. ' x' → logprob: -4.6404595375061035
    3. 'c' → logprob: -5.5154595375061035
    4. 't' → logprob: -6.6404595375061035
    5. 'token' → logprob: -8.765460014343262
    6. 'lambda' → logprob: -9.640460014343262
    7. ' c' → logprob: -10.140460014343262
    8. 'item' → logprob: -10.640460014343262
    9. 'angle' → logprob: -11.015460014343262
    10. 'e' → logprob: -11.015460014343262

Token 842: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.034592388459714e-06
    2. ' :' → logprob: -12.375005722045898
    3. ':(' → logprob: -13.875005722045898
    4. ':x' → logprob: -14.750005722045898
    5. '(' → logprob: -15.625005722045898
    6. ':
' → logprob: -16.0000057220459
    7. 'x' → logprob: -16.6250057220459
    8. '[' → logprob: -17.0000057220459
    9. ' (' → logprob: -17.1250057220459
    10. '(x' → logprob: -17.1250057220459

Token 843: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001624952768906951
    2. ' (' → logprob: -6.751625061035156
    3. '(lambda' → logprob: -7.876625061035156
    4. '(' → logprob: -9.501625061035156
    5. 'x' → logprob: -15.876625061035156
    6. 'lambda' → logprob: -16.501625061035156
    7. '(
' → logprob: -16.626625061035156
    8. '   ' → logprob: -17.376625061035156
    9. '(a' → logprob: -18.251625061035156
    10. '(operator' → logprob: -18.251625061035156

Token 844: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00011105302110081539
    2. ' x' → logprob: -9.250110626220703
    3. '(x' → logprob: -11.125110626220703
    4. ' (' → logprob: -16.375110626220703
    5. '(' → logprob: -16.500110626220703
    6. '	x' → logprob: -18.125110626220703
    7. '{x' → logprob: -18.375110626220703
    8. '
' → logprob: -18.625110626220703
    9. ')x' → logprob: -18.875110626220703
    10. '   ' → logprob: -19.250110626220703

Token 845: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0021885682363063097
    2. '0' → logprob: -6.127188682556152
    3. '(' → logprob: -13.627188682556152
    4. ')' → logprob: -14.377188682556152
    5. ' ' → logprob: -14.502188682556152
    6. '[
' → logprob: -14.627188682556152
    7. 'angle' → logprob: -15.627188682556152
    8. '.' → logprob: -16.127187728881836
    9. ' [' → logprob: -16.127187728881836
    10. '
' → logprob: -16.377187728881836

Token 846: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001793457195162773
    2. '[' → logprob: -8.750179290771484
    3. 'angle' → logprob: -11.250179290771484
    4. ' ' → logprob: -12.250179290771484
    5. '   ' → logprob: -14.125179290771484
    6. '1' → logprob: -14.750179290771484
    7. '.' → logprob: -15.500179290771484
    8. ')' → logprob: -15.500179290771484
    9. ' angle' → logprob: -15.750179290771484
    10. '```' → logprob: -15.937679290771484

Token 847: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005053732893429697
    2. ',x' → logprob: -7.625505447387695
    3. ' ,' → logprob: -11.375505447387695
    4. '[' → logprob: -12.875505447387695
    5. ',
' → logprob: -13.000505447387695
    6. 'x' → logprob: -15.250505447387695
    7. '
' → logprob: -15.875505447387695
    8. '))' → logprob: -15.875505447387695
    9. ',float' → logprob: -16.250505447387695
    10. ' x' → logprob: -16.375505447387695

Token 848: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12692810595035553
    2. ' x' → logprob: -2.1269280910491943
    3. ')x' → logprob: -18.251928329467773
    4. '	x' → logprob: -18.501928329467773
    5. ' ' → logprob: -19.126928329467773
    6. '   ' → logprob: -20.626928329467773
    7. '0' → logprob: -20.626928329467773
    8. '(x' → logprob: -20.626928329467773
    9. ')' → logprob: -20.876928329467773
    10. ' ' → logprob: -21.126928329467773

Token 849: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.702754474943504e-05
    2. '1' → logprob: -10.62503719329834
    3. '[
' → logprob: -11.50003719329834
    4. ',' → logprob: -14.25003719329834
    5. ' [' → logprob: -14.62503719329834
    6. ' ' → logprob: -15.12503719329834
    7. ')' → logprob: -15.75003719329834
    8. '.' → logprob: -15.81253719329834
    9. '
' → logprob: -15.87503719329834
    10. '][' → logprob: -16.437536239624023

Token 850: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.25000286102295
    3. '[' → logprob: -14.12500286102295
    4. '
' → logprob: -16.625001907348633
    5. '```' → logprob: -17.312501907348633
    6. '   ' → logprob: -17.625001907348633
    7. ')' → logprob: -17.812501907348633
    8. '2' → logprob: -17.812501907348633
    9. '' → logprob: -17.875001907348633
    10. ',' → logprob: -17.875001907348633

Token 851: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0029253996908664703
    2. ',' → logprob: -6.127925395965576
    3. '))
' → logprob: -7.252925395965576
    4. ')' → logprob: -11.252925872802734
    5. ' ))' → logprob: -11.627925872802734
    6. '))

' → logprob: -12.252925872802734
    7. '));' → logprob: -13.877925872802734
    8. ')))' → logprob: -13.877925872802734
    9. ',x' → logprob: -14.127925872802734
    10. ',i' → logprob: -14.752925872802734

Token 852: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03146115317940712
    2. '
' → logprob: -4.281461238861084
    3. ' return' → logprob: -4.781461238861084
    4. 'return' → logprob: -4.906461238861084
    5. '        
' → logprob: -7.781461238861084
    6. '   ' → logprob: -8.031460762023926
    7. '[' → logprob: -8.406460762023926
    8. ',' → logprob: -8.906460762023926
    9. '```' → logprob: -9.531460762023926
    10. '  
' → logprob: -10.031460762023926

Token 853: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0185159333050251
    2. '       ' → logprob: -4.6435160636901855
    3. '_,' → logprob: -5.3935160636901855
    4. ' return' → logprob: -5.5185160636901855
    5. 'next' → logprob: -9.518515586853027
    6. '```' → logprob: -10.643515586853027
    7. ' _,' → logprob: -10.643515586853027
    8. '
' → logprob: -11.643515586853027
    9. ',' → logprob: -12.018515586853027
    10. 'selected' → logprob: -12.018515586853027

Token 854: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001234428636962548
    2. ' candidates' → logprob: -9.000123023986816
    3. 'cand' → logprob: -19.875123977661133
    4. ' c' → logprob: -20.625123977661133
    5. 'candidate' → logprob: -20.750123977661133
    6. '_candidates' → logprob: -22.125123977661133
    7. '	c' → logprob: -22.750123977661133
    8. '   ' → logprob: -22.750123977661133
    9. ' candidats' → logprob: -23.000123977661133
    10. 'clients' → logprob: -24.125123977661133

Token 855: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.623244553338736e-05
    2. '0' → logprob: -9.625065803527832
    3. '```' → logprob: -16.12506675720215
    4. '[-' → logprob: -17.62506675720215
    5. '][' → logprob: -17.87506675720215
    6. '   ' → logprob: -17.87506675720215
    7. '1' → logprob: -18.00006675720215
    8. ' [' → logprob: -18.62506675720215
    9. '[
' → logprob: -18.75006675720215
    10. '
' → logprob: -18.87506675720215

Token 856: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -12.500007629394531
    3. '2' → logprob: -12.875007629394531
    4. ' ' → logprob: -14.000007629394531
    5. '
' → logprob: -15.875007629394531
    6. '1' → logprob: -16.62500762939453
    7. '   ' → logprob: -17.00000762939453
    8. '```' → logprob: -17.25000762939453
    9. '-' → logprob: -18.00000762939453
    10. '][' → logprob: -18.75000762939453

Token 857: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10025368630886078
    2. '][' → logprob: -2.3502535820007324
    3. '2' → logprob: -10.60025405883789
    4. ')[' → logprob: -11.85025405883789
    5. '[-' → logprob: -11.97525405883789
    6. '][-' → logprob: -12.35025405883789
    7. '}[' → logprob: -13.60025405883789
    8. ' [' → logprob: -14.35025405883789
    9. ']' → logprob: -14.60025405883789
    10. '```' → logprob: -14.85025405883789

Token 858: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -17.625
    4. '
' → logprob: -17.75
    5. '   ' → logprob: -18.0
    6. '-' → logprob: -18.0
    7. '۲' → logprob: -18.625
    8. '  ' → logprob: -19.125
    9. '２' → logprob: -19.375
    10. '' → logprob: -20.125

Token 859: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 860: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06769832968711853
    2. '<|end|>' → logprob: -3.9426982402801514
    3. '```' → logprob: -4.0676984786987305
    4. 'def' → logprob: -4.0676984786987305
    5. '
' → logprob: -6.1926984786987305
    6. '	def' → logprob: -6.3176984786987305
    7. '<|end|>' → logprob: -6.6926984786987305
    8. ' def' → logprob: -6.8176984786987305
    9. ')' → logprob: -6.9426984786987305
    10. ' ' → logprob: -7.0676984786987305

Token 861: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.395090252161026
    2. '   ' → logprob: -1.1450902223587036
    3. ' def' → logprob: -4.895090103149414
    4. '	def' → logprob: -7.395090103149414
    5. '    
' → logprob: -10.645090103149414
    6. '
' → logprob: -10.645090103149414
    7. ' ' → logprob: -11.395090103149414
    8. '_def' → logprob: -11.895090103149414
    9. '  ' → logprob: -12.145090103149414
    10. ')' → logprob: -12.270090103149414

Token 862: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.660315895918757e-05
    2. ' _' → logprob: -10.250076293945312
    3. '_adv' → logprob: -11.250076293945312
    4. '_continue' → logprob: -11.375076293945312
    5. 'Advance' → logprob: -12.875076293945312
    6. 'def' → logprob: -13.000076293945312
    7. '_next' → logprob: -13.125076293945312
    8. 'advance' → logprob: -13.625076293945312
    9. '_move' → logprob: -13.875076293945312
    10. '_start' → logprob: -14.000076293945312

Token 863: 'advance' (ID: 75456)
  Prédit: 'advance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'advance' → logprob: -2.816093228830141e-06
    2. 'select' → logprob: -13.75000286102295
    3. ' advance' → logprob: -13.75000286102295
    4. 'adv' → logprob: -15.12500286102295
    5. '_' → logprob: -16.125001907348633
    6. '.advance' → logprob: -16.500001907348633
    7. 'Advance' → logprob: -17.625001907348633
    8. 'advanced' → logprob: -18.250001907348633
    9. 'avance' → logprob: -19.125001907348633
    10. '_select' → logprob: -19.625001907348633

Token 864: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.9361264946837764e-07
    2. '_t' → logprob: -16.875
    3. 'to' → logprob: -17.0
    4. '_' → logprob: -17.875
    5. '_TO' → logprob: -18.75
    6. 'To' → logprob: -19.0
    7. '(' → logprob: -20.25
    8. '(_' → logprob: -20.5
    9. '##_' → logprob: -20.5
    10. ' to' → logprob: -20.875

Token 865: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002489423204679042
    2. '(' → logprob: -8.375248908996582
    3. ' (' → logprob: -11.125248908996582
    4. '(
' → logprob: -12.875248908996582
    5. '(next' → logprob: -14.625248908996582
    6. 'self' → logprob: -14.875248908996582
    7. '(s' → logprob: -16.3752498626709
    8. '(sel' → logprob: -16.8752498626709
    9. ' self' → logprob: -18.6252498626709
    10. '(this' → logprob: -19.2502498626709

Token 866: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018343955744057894
    2. '(' → logprob: -7.001834392547607
    3. ' (' → logprob: -7.626834392547607
    4. ')(' → logprob: -8.126834869384766
    5. 'self' → logprob: -9.751834869384766
    6. ',' → logprob: -10.001834869384766
    7. ')' → logprob: -10.626834869384766
    8. '(
' → logprob: -12.001834869384766
    9. '(next' → logprob: -13.626834869384766
    10. ')(
' → logprob: -13.626834869384766

Token 867: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0961727648973465
    2. 'self' → logprob: -2.59617280960083
    3. ' next' → logprob: -4.09617280960083
    4. ' self' → logprob: -7.84617280960083
    5. 'index' → logprob: -9.346172332763672
    6. '_next' → logprob: -11.721172332763672
    7. 'new' → logprob: -11.971172332763672
    8. '(next' → logprob: -13.596172332763672
    9. '	next' → logprob: -13.721172332763672
    10. '   ' → logprob: -14.346172332763672

Token 868: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0003345122095197439
    2. '_' → logprob: -8.125334739685059
    3. '_flag' → logprob: -11.125334739685059
    4. ')_' → logprob: -11.875334739685059
    5. ' _' → logprob: -13.000334739685059
    6. '_idx' → logprob: -13.000334739685059
    7. '}_' → logprob: -13.125334739685059
    8. '_indices' → logprob: -13.375334739685059
    9. '```' → logprob: -13.625334739685059
    10. '_ind' → logprob: -14.000334739685059

Token 869: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29976996779441833
    2. ')' → logprob: -2.049769878387451
    3. '):
' → logprob: -3.299769878387451
    4. '(self' → logprob: -3.424769878387451
    5. ',' → logprob: -4.049769878387451
    6. 'self' → logprob: -4.299769878387451
    7. ':' → logprob: -4.424769878387451
    8. ' ):' → logprob: -4.674769878387451
    9. '       ' → logprob: -5.674769878387451
    10. ' )' → logprob: -6.299769878387451

Token 870: ' int' (ID: 677)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3965526819229126
    2. 'next' → logprob: -1.1465526819229126
    3. 'int' → logprob: -4.771552562713623
    4. ' int' → logprob: -7.146552562713623
    5. ')' → logprob: -8.396553039550781
    6. '(next' → logprob: -9.771553039550781
    7. '):
' → logprob: -10.146553039550781
    8. '[next' → logprob: -10.896553039550781
    9. '):' → logprob: -11.771553039550781
    10. '   ' → logprob: -11.896553039550781

Token 871: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08136602491140366
    2. '):
' → logprob: -2.8313660621643066
    3. '):' → logprob: -3.9563660621643066
    4. '):
' → logprob: -9.956365585327148
    5. '   ' → logprob: -11.581365585327148
    6. '):

' → logprob: -12.081365585327148
    7. ' )' → logprob: -12.206365585327148
    8. ')->' → logprob: -12.331365585327148
    9. '       ' → logprob: -12.956365585327148
    10. ' ):
' → logprob: -13.206365585327148

Token 872: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03180867061018944
    2. 'distance' → logprob: -3.781808614730835
    3. ' distance' → logprob: -5.406808853149414
    4. 'next' → logprob: -6.406808853149414
    5. 'prev' → logprob: -7.156808853149414
    6. ' next' → logprob: -7.156808853149414
    7. '```' → logprob: -8.281808853149414
    8. ' prev' → logprob: -8.656808853149414
    9. 'dist' → logprob: -9.281808853149414
    10. '   ' → logprob: -9.656808853149414

Token 873: ' current' (ID: 2208)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7453850507736206
    2. 'distance' → logprob: -0.9953850507736206
    3. 'dist' → logprob: -2.24538516998291
    4. 'self' → logprob: -3.37038516998291
    5. 'prev' → logprob: -4.87038516998291
    6. '       ' → logprob: -6.12038516998291
    7. 'new' → logprob: -6.49538516998291
    8. 'current' (adapté à ' current') → logprob: -6.49538516998291
    9. 'step' → logprob: -6.99538516998291
    10. 'segment' → logprob: -7.74538516998291

Token 874: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.02485150285065174
    2. '_index' → logprob: -4.399851322174072
    3. '_' → logprob: -4.899851322174072
    4. '_flag' → logprob: -5.899851322174072
    5. '_position' → logprob: -6.274851322174072
    6. 'pos' → logprob: -9.52485179901123
    7. '_vector' → logprob: -9.64985179901123
    8. '_vec' → logprob: -10.27485179901123
    9. ' =' → logprob: -12.52485179901123
    10. '_point' → logprob: -12.64985179901123

Token 875: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269325166940689
    2. ' =' → logprob: -2.1269326210021973
    3. '   ' → logprob: -13.376932144165039
    4. 'pos' → logprob: -13.501932144165039
    5. '=self' → logprob: -14.501932144165039
    6. '=current' → logprob: -15.001932144165039
    7. '=
' → logprob: -15.126932144165039
    8. '_pos' → logprob: -15.126932144165039
    9. ':' → logprob: -16.50193214416504
    10. 'current' → logprob: -17.75193214416504

Token 876: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014174441806972027
    2. ' self' → logprob: -4.264174461364746
    3. '       ' → logprob: -11.514174461364746
    4. '(self' → logprob: -14.514174461364746
    5. '=self' → logprob: -15.389174461364746
    6. '	self' → logprob: -16.26417350769043
    7. '   ' → logprob: -16.63917350769043
    8. '[self' → logprob: -17.88917350769043
    9. ' ' → logprob: -19.01417350769043
    10. 'Vector' → logprob: -19.13917350769043

Token 877: '.flags' (ID: 62738)
  Prédit: '.flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flags' → logprob: -0.0007195804500952363
    2. 'flags' → logprob: -7.3757195472717285
    3. 'self' → logprob: -10.125720024108887
    4. '.' → logprob: -10.625720024108887
    5. ' .' → logprob: -11.375720024108887
    6. '	flags' → logprob: -12.500720024108887
    7. '(flags' → logprob: -12.875720024108887
    8. '.flag' → logprob: -13.250720024108887
    9. '.position' → logprob: -13.375720024108887
    10. '.positions' → logprob: -13.500720024108887

Token 878: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0015565206995233893
    2. 'self' → logprob: -6.501556396484375
    3. '[next' → logprob: -10.876556396484375
    4. '       ' → logprob: -11.001556396484375
    5. ' self' → logprob: -11.376556396484375
    6. '[current' → logprob: -12.376556396484375
    7. '(self' → logprob: -14.126556396484375
    8. '[' → logprob: -14.251556396484375
    9. '   ' → logprob: -14.626556396484375
    10. '=self' → logprob: -14.626556396484375

Token 879: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -7.195421494543552e-05
    2. 'current' → logprob: -9.62507152557373
    3. '       ' → logprob: -13.50007152557373
    4. 'self' → logprob: -13.87507152557373
    5. ' .' → logprob: -14.12507152557373
    6. '.self' → logprob: -14.12507152557373
    7. '.' → logprob: -14.25007152557373
    8. '   ' → logprob: -14.75007152557373
    9. '.next' → logprob: -16.000072479248047
    10. '[current' → logprob: -16.125072479248047

Token 880: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.2723104848410003e-05
    2. 'index' → logprob: -10.750022888183594
    3. 'Index' → logprob: -14.000022888183594
    4. '_' → logprob: -16.000022888183594
    5. 'current' → logprob: -17.500022888183594
    6. '
' → logprob: -17.500022888183594
    7. '\' → logprob: -17.625022888183594
    8. '.index' → logprob: -17.875022888183594
    9. ' index' → logprob: -18.000022888183594
    10. '_INDEX' → logprob: -18.125022888183594

Token 881: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.11842229217290878
    2. '.position' → logprob: -2.243422269821167
    3. ').' → logprob: -5.243422508239746
    4. '.' → logprob: -8.993422508239746
    5. ']' → logprob: -9.243422508239746
    6. '   ' → logprob: -10.868422508239746
    7. '       ' → logprob: -10.868422508239746
    8. ' ].' → logprob: -11.243422508239746
    9. '}.' → logprob: -11.993422508239746
    10. 'position' → logprob: -12.368422508239746

Token 882: 'position' (ID: 4504)
  Prédit: 'position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -5.200166469876422e-06
    2. ' position' → logprob: -12.750004768371582
    3. '.position' → logprob: -13.500004768371582
    4. ' ' → logprob: -15.625004768371582
    5. '	position' → logprob: -16.1250057220459
    6. 'pos' → logprob: -16.6250057220459
    7. '(position' → logprob: -16.6250057220459
    8. '   ' → logprob: -16.7500057220459
    9. '[position' → logprob: -17.3750057220459
    10. 'osition' → logprob: -17.5000057220459

Token 883: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.710679829120636
    2. 'next' → logprob: -0.710679829120636
    3. ' next' → logprob: -4.33568000793457
    4. 'new' → logprob: -6.33568000793457
    5. '
' → logprob: -6.83568000793457
    6. 'direction' → logprob: -8.21068000793457
    7. 'distance' → logprob: -8.58568000793457
    8. 'current' → logprob: -8.71068000793457
    9. 'prev' → logprob: -9.08568000793457
    10. 'target' → logprob: -9.21068000793457

Token 884: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3451530337333679
    2. 'next' → logprob: -1.3451530933380127
    3. ' next' → logprob: -3.4701530933380127
    4. 'new' → logprob: -8.845152854919434
    5. 'distance' → logprob: -10.220152854919434
    6. ' new' → logprob: -10.345152854919434
    7. '
' → logprob: -10.595152854919434
    8. 'target' → logprob: -10.970152854919434
    9. 'prev' → logprob: -12.970152854919434
    10. '   ' → logprob: -13.345152854919434

Token 885: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.00040362097206525505
    2. ' next' → logprob: -8.50040340423584
    3. '       ' → logprob: -9.00040340423584
    4. 'new' → logprob: -9.62540340423584
    5. 'target' → logprob: -11.75040340423584
    6. 'distance' → logprob: -13.37540340423584
    7. 'self' → logprob: -14.00040340423584
    8. '```' → logprob: -15.50040340423584
    9. 'previous' → logprob: -16.875404357910156
    10. 'travel' → logprob: -17.125404357910156

Token 886: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.003287632716819644
    2. 'pos' → logprob: -5.7532877922058105
    3. '_flag' → logprob: -9.378287315368652
    4. '_position' → logprob: -11.503287315368652
    5. '_' → logprob: -12.253287315368652
    6. 'flag' → logprob: -12.378287315368652
    7. 'Pos' → logprob: -12.878287315368652
    8. '_vec' → logprob: -13.378287315368652
    9. '_vector' → logprob: -14.003287315368652
    10. 'position' → logprob: -14.878287315368652

Token 887: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '=
' → logprob: -17.001928329467773
    4. '=self' → logprob: -17.251928329467773
    5. ':' → logprob: -18.126928329467773
    6. ')' → logprob: -18.376928329467773
    7. ' ' → logprob: -18.751928329467773
    8. '       ' → logprob: -19.126928329467773
    9. '   ' → logprob: -19.126928329467773
    10. ' ' → logprob: -19.626928329467773

Token 888: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889298349618912
    2. ' self' → logprob: -2.578892946243286
    3. '       ' → logprob: -12.953892707824707
    4. '(self' → logprob: -15.453892707824707
    5. '	self' → logprob: -15.453892707824707
    6. '=self' → logprob: -15.453892707824707
    7. 'Vector' → logprob: -15.578892707824707
    8. 'Self' → logprob: -17.328893661499023
    9. '[self' → logprob: -17.453893661499023
    10. '   ' → logprob: -17.703893661499023

Token 889: '.flags' (ID: 62738)
  Prédit: '.flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flags' → logprob: -0.12720955908298492
    2. 'flags' → logprob: -2.1272096633911133
    3. 'self' → logprob: -8.377209663391113
    4. '	flags' → logprob: -10.627209663391113
    5. '(flags' → logprob: -11.377209663391113
    6. ' flags' → logprob: -12.252209663391113
    7. '.' → logprob: -12.627209663391113
    8. '.flag' → logprob: -12.877209663391113
    9. 'flag' → logprob: -13.377209663391113
    10. 'FLAGS' → logprob: -14.252209663391113

Token 890: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.008628051728010178
    2. '[self' → logprob: -4.758627891540527
    3. 'self' → logprob: -11.633627891540527
    4. '[' → logprob: -13.258627891540527
    5. '[
' → logprob: -14.008627891540527
    6. '```' → logprob: -14.508627891540527
    7. 'next' → logprob: -14.883627891540527
    8. '[current' → logprob: -15.258627891540527
    9. '(next' → logprob: -15.383627891540527
    10. '[now' → logprob: -16.008628845214844

Token 891: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0003229494614060968
    2. '_pos' → logprob: -8.625323295593262
    3. 'index' → logprob: -9.000323295593262
    4. 'Index' → logprob: -11.625323295593262
    5. 'pos' → logprob: -12.125323295593262
    6. '_position' → logprob: -14.125323295593262
    7. '.index' → logprob: -14.875323295593262
    8. '_' → logprob: -14.937823295593262
    9. '_ind' → logprob: -15.000323295593262
    10. 'Pos' → logprob: -15.187823295593262

Token 892: '].' (ID: 1651)
  Prédit: '.position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.5035901069641113
    2. '].' → logprob: -1.5035901069641113
    3. ').' → logprob: -1.7535901069641113
    4. '}.' → logprob: -9.628589630126953
    5. '.' → logprob: -10.628589630126953
    6. ' .' → logprob: -11.003589630126953
    7. '   ' → logprob: -11.128589630126953
    8. ' ].' → logprob: -11.878589630126953
    9. '.pos' → logprob: -12.253589630126953
    10. '       ' → logprob: -12.253589630126953

Token 893: 'position' (ID: 4504)
  Prédit: 'position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.9361264946837764e-07
    2. '.position' → logprob: -16.375
    3. ' position' → logprob: -16.75
    4. '	position' → logprob: -17.875
    5. 'vector' → logprob: -19.0
    6. 'osition' → logprob: -19.0
    7. '
' → logprob: -19.125
    8. '-' → logprob: -19.875
    9. 'pos' → logprob: -19.875
    10. 'point' → logprob: -19.875

Token 894: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04175053536891937
    2. '
' → logprob: -3.291750431060791
    3. 'distance' → logprob: -7.041750431060791
    4. 'delta' → logprob: -7.291750431060791
    5. 'direction' → logprob: -7.541750431060791
    6. ' direction' → logprob: -7.791750431060791
    7. ' displacement' → logprob: -8.16675090789795
    8. 'self' → logprob: -8.29175090789795
    9. ' delta' → logprob: -8.79175090789795
    10. '        
' → logprob: -8.91675090789795

Token 895: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012161117047071457
    2. 'distance' → logprob: -5.1371612548828125
    3. 'delta' → logprob: -5.5121612548828125
    4. ' displacement' → logprob: -7.6371612548828125
    5. 'self' → logprob: -7.7621612548828125
    6. ' delta' → logprob: -8.262161254882812
    7. 'move' → logprob: -8.512161254882812
    8. 'dist' → logprob: -8.887161254882812
    9. ' distance' → logprob: -9.262161254882812
    10. '
' → logprob: -9.387161254882812

Token 896: ' vector' (ID: 9727)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.3670684099197388
    2. '       ' → logprob: -1.4920684099197388
    3. 'segment' → logprob: -1.7420684099197388
    4. 'step' → logprob: -1.9920684099197388
    5. 'self' → logprob: -2.492068290710449
    6. 'move' → logprob: -2.867068290710449
    7. 'vec' → logprob: -4.117068290710449
    8. 'travel' → logprob: -4.117068290710449
    9. 'delta' → logprob: -4.367068290710449
    10. 'dist' → logprob: -4.492068290710449

Token 897: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017120669363066554
    2. ' =' → logprob: -6.376711845397949
    3. '_to' → logprob: -12.00171184539795
    4. '=
' → logprob: -13.12671184539795
    5. 'to' → logprob: -14.25171184539795
    6. 'next' → logprob: -14.87671184539795
    7. 'direction' → logprob: -15.62671184539795
    8. '_next' → logprob: -15.62671184539795
    9. '=self' → logprob: -16.251712799072266
    10. '_direction' → logprob: -16.376712799072266

Token 898: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5762546062469482
    2. 'next' → logprob: -0.8262546062469482
    3. '(next' → logprob: -8.076254844665527
    4. '	next' → logprob: -13.326254844665527
    5. ' (' → logprob: -13.951254844665527
    6. '.next' → logprob: -14.451254844665527
    7. 'Next' → logprob: -14.826254844665527
    8. '[next' → logprob: -14.951254844665527
    9. '(' → logprob: -15.701254844665527
    10. '_next' → logprob: -15.951254844665527

Token 899: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.6240566083070007e-06
    2. 'pos' → logprob: -13.750001907348633
    3. 'Pos' → logprob: -15.250001907348633
    4. '_' → logprob: -16.125001907348633
    5. '_index' → logprob: -16.875001907348633
    6. '=' → logprob: -17.875001907348633
    7. '_flag' → logprob: -19.000001907348633
    8. '_vec' → logprob: -19.125001907348633
    9. '_to' → logprob: -19.250001907348633
    10. 'index' → logprob: -19.250001907348633

Token 900: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008615161292254925
    2. '-' → logprob: -4.758615016937256
    3. ' ' → logprob: -14.758615493774414
    4. ' ' → logprob: -15.383615493774414
    5. ' -
' → logprob: -17.008615493774414
    6. 'Vector' → logprob: -18.883615493774414
    7. '-
' → logprob: -19.258615493774414
    8. '_' → logprob: -19.258615493774414
    9. 'self' → logprob: -20.133615493774414
    10. '   ' → logprob: -20.133615493774414

Token 901: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0001234428636962548
    2. ' current' → logprob: -9.000123023986816
    3. '.current' → logprob: -22.125123977661133
    4. '=current' → logprob: -22.375123977661133
    5. '	current' → logprob: -22.375123977661133
    6. ' ' → logprob: -22.625123977661133
    7. '   ' → logprob: -22.625123977661133
    8. '$current' → logprob: -22.625123977661133
    9. '(current' → logprob: -22.875123977661133
    10. '[current' → logprob: -23.125123977661133

Token 902: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0013313100207597017
    2. 'pos' → logprob: -6.626331329345703
    3. 'Pos' → logprob: -12.751331329345703
    4. '.pos' → logprob: -14.251331329345703
    5. 'self' → logprob: -14.501331329345703
    6. '	pos' → logprob: -15.001331329345703
    7. '_' → logprob: -15.126331329345703
    8. ' pos' → logprob: -15.251331329345703
    9. '_index' → logprob: -17.126331329345703
    10. '_flag' → logprob: -17.251331329345703

Token 903: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4282349646091461
    2. 'self' → logprob: -1.4282349348068237
    3. '       ' → logprob: -2.4282350540161133
    4. ' self' → logprob: -3.9282350540161133
    5. '        
' → logprob: -7.803235054016113
    6. ' 
' → logprob: -9.053235054016113
    7. 'distance' → logprob: -9.678235054016113
    8. '
' → logprob: -10.178235054016113
    9. '```' → logprob: -10.678235054016113
    10. '  
' → logprob: -11.553235054016113

Token 904: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1965828239917755
    2. '       ' → logprob: -1.9465827941894531
    3. ' self' → logprob: -3.446582794189453
    4. 'distance' → logprob: -5.821582794189453
    5. 'length' → logprob: -7.446582794189453
    6. ' distance' → logprob: -9.196582794189453
    7. 'dist' → logprob: -9.321582794189453
    8. ' length' → logprob: -9.571582794189453
    9. 'vector' → logprob: -10.571582794189453
    10. 'direction' → logprob: -12.571582794189453

Token 905: ' dist' (ID: 3601)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16391369700431824
    2. 'distance' → logprob: -2.0389137268066406
    3. 'dist' (adapté à ' dist') → logprob: -4.163913726806641
    4. '       ' → logprob: -5.538913726806641
    5. 'length' → logprob: -7.288913726806641
    6. 'segment' → logprob: -7.538913726806641
    7. ' self' → logprob: -8.91391372680664
    8. 'step' → logprob: -9.53891372680664
    9. 'd' → logprob: -10.03891372680664
    10. 'travel' → logprob: -10.78891372680664

Token 906: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018152397125959396
    2. '=' → logprob: -4.018152236938477
    3. ' ' → logprob: -13.393152236938477
    4. 'ance' → logprob: -14.143152236938477
    5. ',' → logprob: -16.018152236938477
    6. ':' → logprob: -16.643152236938477
    7. '   ' → logprob: -17.518152236938477
    8. '.' → logprob: -17.643152236938477
    9. ' =
' → logprob: -17.643152236938477
    10. ')' → logprob: -17.643152236938477

Token 907: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.0619683600962162
    2. ' vector' → logprob: -2.8119683265686035
    3. '(vector' → logprob: -14.561968803405762
    4. '	vector' → logprob: -16.186967849731445
    5. 'vect' → logprob: -17.311967849731445
    6. 'vec' → logprob: -17.561967849731445
    7. 'Vector' → logprob: -17.686967849731445
    8. '   ' → logprob: -17.686967849731445
    9. '<vector' → logprob: -17.936967849731445
    10. '.vector' → logprob: -18.061967849731445

Token 908: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -7.896309739408025e-07
    2. 'length' → logprob: -14.625000953674316
    3. '.' → logprob: -15.625000953674316
    4. ' .' → logprob: -16.875
    5. '.Length' → logprob: -18.25
    6. '.LENGTH' → logprob: -18.75
    7. ' length' → logprob: -18.875
    8. '	length' → logprob: -18.875
    9. ':length' → logprob: -19.375
    10. ',length' → logprob: -19.875

Token 909: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.037203382700681686
    2. '()
' → logprob: -3.412203311920166
    3. '       ' → logprob: -5.662203311920166
    4. '(),' → logprob: -10.662203788757324
    5. '()\' → logprob: -11.412203788757324
    6. '();' → logprob: -11.912203788757324
    7. '()<' → logprob: -11.912203788757324
    8. '()>' → logprob: -12.537203788757324
    9. '()
' → logprob: -12.537203788757324
    10. '
' → logprob: -12.662203788757324

Token 910: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7858749032020569
    2. '       ' → logprob: -1.035874843597412
    3. 'self' → logprob: -1.785874843597412
    4. ' self' → logprob: -3.910874843597412
    5. '        
' → logprob: -6.660874843597412
    6. '	self' → logprob: -9.66087532043457
    7. '
' → logprob: -9.91087532043457
    8. '```' → logprob: -9.91087532043457
    9. '\n' → logprob: -10.03587532043457
    10. ' 
' → logprob: -10.28587532043457

Token 911: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00011033779446734115
    2. ' self' → logprob: -9.500110626220703
    3. '       ' → logprob: -10.250110626220703
    4. '```' → logprob: -17.250110626220703
    5. '	self' → logprob: -17.500110626220703
    6. '
' → logprob: -18.000110626220703
    7. '        
' → logprob: -19.000110626220703
    8. '#' → logprob: -19.625110626220703
    9. '   ' → logprob: -20.750110626220703
    10. '(self' → logprob: -21.000110626220703

Token 912: '.path' (ID: 8153)
  Prédit: '.path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.path' → logprob: -5.1689596148207784e-05
    2. '.' → logprob: -10.125051498413086
    3. 'path' → logprob: -11.875051498413086
    4. '.vis' → logprob: -12.625051498413086
    5. '.f' → logprob: -14.125051498413086
    6. '.current' → logprob: -15.125051498413086
    7. ' .' → logprob: -16.000051498413086
    8. '.
' → logprob: -17.250051498413086
    9. '.pos' → logprob: -17.250051498413086
    10. ' path' → logprob: -17.625051498413086

Token 913: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.9361264946837764e-07
    2. 'length' → logprob: -15.75
    3. '_l' → logprob: -18.875
    4. 'Length' → logprob: -20.125
    5. '_' → logprob: -20.75
    6. '_LENGTH' → logprob: -20.875
    7. '_len' → logprob: -21.0
    8. '_Length' → logprob: -22.5
    9. '_lengths' → logprob: -22.625
    10. 'ength' → logprob: -22.75

Token 914: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10020958632230759
    2. ' +=' → logprob: -2.3502094745635986
    3. '+' → logprob: -12.97520923614502
    4. '+=(' → logprob: -15.10020923614502
    5. ']+=' → logprob: -15.60020923614502
    6. '+="' → logprob: -16.600210189819336
    7. '+='' → logprob: -17.100210189819336
    8. ' +' → logprob: -17.725210189819336
    9. '=' → logprob: -17.975210189819336
    10. ' ' → logprob: -18.350210189819336

Token 915: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.25192907452583313
    2. ' dist' → logprob: -1.5019290447235107
    3. '	dist' → logprob: -17.126928329467773
    4. '(dist' → logprob: -17.251928329467773
    5. 'Dist' → logprob: -19.376928329467773
    6. '_dist' → logprob: -19.751928329467773
    7. '.dist' → logprob: -21.126928329467773
    8. ' ' → logprob: -21.126928329467773
    9. 'd' → logprob: -21.251928329467773
    10. '-dist' → logprob: -21.626928329467773

Token 916: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039831411093473434
    2. 'self' → logprob: -3.2898313999176025
    3. ' self' → logprob: -6.414831638336182
    4. '
' → logprob: -8.914831161499023
    5. '   ' → logprob: -11.164831161499023
    6. '        
' → logprob: -14.289831161499023
    7. ' ' → logprob: -14.289831161499023
    8. ',' → logprob: -14.914831161499023
    9. '```' → logprob: -15.039831161499023
    10. '           ' → logprob: -15.664831161499023

Token 917: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015412182547152042
    2. 'self' → logprob: -4.265412330627441
    3. '
' → logprob: -6.890412330627441
    4. ' self' → logprob: -8.515412330627441
    5. '   ' → logprob: -10.515412330627441
    6. '        
' → logprob: -13.890412330627441
    7. '	self' → logprob: -14.640412330627441
    8. ' ' → logprob: -14.765412330627441
    9. '```' → logprob: -15.140412330627441
    10. '[self' → logprob: -15.640412330627441

Token 918: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.2127087504486553e-05
    2. '       ' → logprob: -10.750021934509277
    3. ' self' → logprob: -14.250021934509277
    4. '   ' → logprob: -18.250022888183594
    5. '        
' → logprob: -18.875022888183594
    6. 'direction' → logprob: -19.875022888183594
    7. '	self' → logprob: -20.375022888183594
    8. '
' → logprob: -20.375022888183594
    9. '           ' → logprob: -20.750022888183594
    10. '```' → logprob: -20.875022888183594

Token 919: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.005698992870748043
    2. '.vis' → logprob: -5.380699157714844
    3. '.f' → logprob: -7.005699157714844
    4. 'current' → logprob: -8.755699157714844
    5. '.path' → logprob: -11.505699157714844
    6. '.flags' → logprob: -14.255699157714844
    7. '.' → logprob: -14.755699157714844
    8. 'visited' → logprob: -14.755699157714844
    9. '.visit' → logprob: -15.130699157714844
    10. 'f' → logprob: -15.255699157714844

Token 920: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.875000953674316
    3. 'index' → logprob: -15.250000953674316
    4. 'Index' → logprob: -17.875
    5. '_INDEX' → logprob: -19.25
    6. '__' → logprob: -20.0
    7. '\' → logprob: -20.0
    8. ' _' → logprob: -20.25
    9. '_vector' → logprob: -20.5
    10. '_idx' → logprob: -20.625

Token 921: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740770161151886
    2. '=' → logprob: -0.9740769863128662
    3. '.=' → logprob: -18.724077224731445
    4. ' ' → logprob: -19.099077224731445
    5. '＝' → logprob: -19.599077224731445
    6. '=}' → logprob: -21.099077224731445
    7. '.' → logprob: -21.474077224731445
    8. ',' → logprob: -21.599077224731445
    9. '<|end|>' → logprob: -21.724077224731445
    10. ' .=' → logprob: -21.974077224731445

Token 922: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0001234428636962548
    2. ' next' → logprob: -9.000123023986816
    3. '	next' → logprob: -22.000123977661133
    4. '(next' → logprob: -24.625123977661133
    5. '_next' → logprob: -24.750123977661133
    6. '[next' → logprob: -25.875123977661133
    7. '   ' → logprob: -26.000123977661133
    8. '.next' → logprob: -26.000123977661133
    9. 'Next' → logprob: -26.000123977661133
    10. 'n' → logprob: -29.125123977661133

Token 923: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -4.320199877838604e-07
    2. 'index' → logprob: -14.875
    3. 'Index' → logprob: -17.25
    4. '_' → logprob: -18.75
    5. '_INDEX' → logprob: -19.125
    6. '__' → logprob: -21.375
    7. '_idx' → logprob: -22.125
    8. '_ind' → logprob: -22.125
    9. '\' → logprob: -22.375
    10. 's' → logprob: -22.75

Token 924: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010872321436181664
    2. 'self' → logprob: -6.876087188720703
    3. '
' → logprob: -10.376087188720703
    4. '   ' → logprob: -11.126087188720703
    5. ' self' → logprob: -11.876087188720703
    6. '        
' → logprob: -14.501087188720703
    7. ',' → logprob: -14.501087188720703
    8. '    
' → logprob: -16.376087188720703
    9. '```' → logprob: -16.376087188720703
    10. '           ' → logprob: -16.626087188720703

Token 925: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16025438904762268
    2. 'self' → logprob: -1.9102543592453003
    3. ' self' → logprob: -10.53525447845459
    4. '   ' → logprob: -12.78525447845459
    5. '
' → logprob: -14.78525447845459
    6. '	self' → logprob: -15.16025447845459
    7. '```' → logprob: -16.160253524780273
    8. '        
' → logprob: -16.535253524780273
    9. '           ' → logprob: -17.410253524780273
    10. ' ' → logprob: -17.535253524780273

Token 926: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00016337241686414927
    2. '       ' → logprob: -8.750163078308105
    3. ' self' → logprob: -12.250163078308105
    4. '   ' → logprob: -16.500164031982422
    5. '	self' → logprob: -18.375164031982422
    6. '
' → logprob: -18.500164031982422
    7. '        
' → logprob: -19.125164031982422
    8. '           ' → logprob: -19.875164031982422
    9. '```' → logprob: -19.875164031982422
    10. 'vector' → logprob: -20.875164031982422

Token 927: '.vis' (ID: 15800)
  Prédit: '.f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0001249925117008388
    2. '.' → logprob: -9.12512493133545
    3. ' .' → logprob: -11.50012493133545
    4. '.vis' → logprob: -13.50012493133545
    5. '.fac' → logprob: -13.75012493133545
    6. 'f' → logprob: -14.12512493133545
    7. '.current' → logprob: -14.62512493133545
    8. '.faces' → logprob: -14.87512493133545
    9. '.face' → logprob: -15.37512493133545
    10. '   ' → logprob: -15.37512493133545

Token 928: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.125000953674316
    3. '[' → logprob: -15.875000953674316
    4. 'isted' → logprob: -17.875
    5. 'ITED' → logprob: -18.0
    6. '\' → logprob: -18.5
    7. 'ed' → logprob: -18.75
    8. '
' → logprob: -19.0
    9. '```' → logprob: -19.125
    10. '`' → logprob: -19.125

Token 929: '[next' (ID: 103383)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.038081202656030655
    2. '[next' → logprob: -3.288081169128418
    3. '[' → logprob: -10.163081169128418
    4. 'self' → logprob: -14.413081169128418
    5. '[current' → logprob: -15.038081169128418
    6. '[
' → logprob: -15.913081169128418
    7. '[this' → logprob: -17.288082122802734
    8. '[new' → logprob: -17.413082122802734
    9. '[now' → logprob: -17.913082122802734
    10. '[n' → logprob: -18.288082122802734

Token 930: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0009240844519808888
    2. 'index' → logprob: -7.500924110412598
    3. 'Index' → logprob: -8.250924110412598
    4. 'dex' → logprob: -9.875924110412598
    5. 'x' → logprob: -11.000924110412598
    6. '[index' → logprob: -11.750924110412598
    7. '_INDEX' → logprob: -11.875924110412598
    8. 'ex' → logprob: -12.125924110412598
    9. '][' → logprob: -12.625924110412598
    10. ']' → logprob: -13.000924110412598

Token 931: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.027225754223764e-05
    2. ' ]' → logprob: -10.375060081481934
    3. ']=' → logprob: -10.625060081481934
    4. '=' → logprob: -12.375060081481934
    5. ' =' → logprob: -14.500060081481934
    6. ')' → logprob: -18.87506103515625
    7. '=True' → logprob: -18.87506103515625
    8. ' ' → logprob: -20.50006103515625
    9. '']' → logprob: -21.25006103515625
    10. ']
' → logprob: -21.25006103515625

Token 932: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015028368216007948
    2. ' =' → logprob: -6.501502990722656
    3. '=True' → logprob: -14.501502990722656
    4. 'True' → logprob: -19.876502990722656
    5. ' ' → logprob: -22.001502990722656
    6. ']=' → logprob: -22.126502990722656
    7. '＝' → logprob: -22.251502990722656
    8. '.=' → logprob: -22.501502990722656
    9. ']' → logprob: -23.001502990722656
    10. '_=' → logprob: -23.376502990722656

Token 933: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.15310683415737e-05
    2. ' True' → logprob: -10.750021934509277
    3. '   ' → logprob: -23.62502098083496
    4. '(True' → logprob: -23.62502098083496
    5. '=True' → logprob: -25.12502098083496
    6. 'true' → logprob: -25.25002098083496
    7. '  ' → logprob: -25.75002098083496
    8. ' ' → logprob: -25.75002098083496
    9. '1' → logprob: -25.87502098083496
    10. 'Tr' → logprob: -26.00002098083496

Token 934: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.511406809295295e-06
    2. 'self' → logprob: -12.750006675720215
    3. '   ' → logprob: -13.375006675720215
    4. '
' → logprob: -13.750006675720215
    5. ' self' → logprob: -14.000006675720215
    6. '        
' → logprob: -17.5000057220459
    7. '           ' → logprob: -18.2500057220459
    8. ',' → logprob: -18.5000057220459
    9. '```' → logprob: -18.6250057220459
    10. '      ' → logprob: -18.7500057220459

Token 935: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3150816261768341
    2. '       ' → logprob: -1.3150815963745117
    3. ' self' → logprob: -6.315081596374512
    4. '	self' → logprob: -12.690081596374512
    5. '   ' → logprob: -12.815081596374512
    6. '```' → logprob: -12.815081596374512
    7. ' ' → logprob: -14.315081596374512
    8. '        
' → logprob: -16.690082550048828
    9. '           ' → logprob: -16.690082550048828
    10. '
' → logprob: -17.065082550048828

Token 936: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.8624639324116288e-06
    2. '       ' → logprob: -13.250001907348633
    3. ' self' → logprob: -17.125001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '	self' → logprob: -22.000001907348633
    6. '        
' → logprob: -23.250001907348633
    7. '
' → logprob: -23.750001907348633
    8. '#' → logprob: -24.500001907348633
    9. '           ' → logprob: -24.500001907348633
    10. '```' → logprob: -24.875001907348633

Token 937: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -7.576873758807778e-05
    2. '.' → logprob: -9.500075340270996
    3. ' .' → logprob: -14.875075340270996
    4. '.current' → logprob: -15.500075340270996
    5. '.fac' → logprob: -15.875075340270996
    6. '\.' → logprob: -17.125076293945312
    7. 'f' → logprob: -17.375076293945312
    8. '   ' → logprob: -17.625076293945312
    9. '​.' → logprob: -17.750076293945312
    10. '`.' → logprob: -17.750076293945312

Token 938: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -6.704273118884885e-07
    2. '#' → logprob: -15.125000953674316
    3. 'Facing' → logprob: -16.375
    4. '
' → logprob: -17.0
    5. 'l' → logprob: -17.375
    6. 'aced' → logprob: -17.5
    7. 'f' → logprob: -17.5
    8. 'a' → logprob: -18.125
    9. 'acting' → logprob: -18.375
    10. 'ac' → logprob: -18.375

Token 939: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -2.1008713702030946e-06
    2. 'direction' → logprob: -13.125001907348633
    3. '_directory' → logprob: -18.375001907348633
    4. '_direct' → logprob: -18.375001907348633
    5. '_DIRECTION' → logprob: -18.625001907348633
    6. '_' → logprob: -19.000001907348633
    7. '_vector' → logprob: -19.125001907348633
    8. ' direction' → logprob: -19.375001907348633
    9. '_d' → logprob: -19.750001907348633
    10. '_dir' → logprob: -20.000001907348633

Token 940: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. ',' → logprob: -17.501928329467773
    4. '.' → logprob: -17.626928329467773
    5. '.=' → logprob: -17.626928329467773
    6. ' ' → logprob: -18.001928329467773
    7. '＝' → logprob: -18.251928329467773
    8. ' ' → logprob: -19.001928329467773
    9. '=self' → logprob: -19.001928329467773
    10. '=
' → logprob: -19.251928329467773

Token 941: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -8.494741632603109e-05
    2. ' vector' → logprob: -9.37508487701416
    3. '(vector' → logprob: -16.750085830688477
    4. 'Vector' → logprob: -17.625085830688477
    5. '	vector' → logprob: -18.125085830688477
    6. 'vect' → logprob: -18.375085830688477
    7. 'vec' → logprob: -18.625085830688477
    8. '   ' → logprob: -19.000085830688477
    9. '.vector' → logprob: -19.000085830688477
    10. '_vector' → logprob: -20.250085830688477

Token 942: '.normalize' (ID: 92881)
  Prédit: '.normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normalize' → logprob: -3.607391408877447e-05
    2. '.' → logprob: -10.375036239624023
    3. ' .' → logprob: -12.375036239624023
    4. '.normal' → logprob: -15.500036239624023
    5. '.norm' → logprob: -16.375036239624023
    6. '.rotate' → logprob: -16.625036239624023
    7. 'normalize' → logprob: -16.625036239624023
    8. '   ' → logprob: -17.125036239624023
    9. ').' → logprob: -17.375036239624023
    10. '.divide' → logprob: -17.500036239624023

Token 943: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -3.650518920039758e-06
    2. '()
' → logprob: -12.875003814697266
    3. '()]' → logprob: -15.625003814697266
    4. '()`' → logprob: -15.750003814697266
    5. '()

' → logprob: -16.000003814697266
    6. '().' → logprob: -16.250003814697266
    7. '())' → logprob: -16.250003814697266
    8. '()\' → logprob: -16.250003814697266
    9. ' ()' → logprob: -16.750003814697266
    10. '()<' → logprob: -17.000003814697266

Token 944: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 945: ' Input' (ID: 10090)
  Prédit: 'Sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sp' → logprob: -0.2539171278476715
    2. 'Vector' → logprob: -2.7539172172546387
    3. 'Solution' → logprob: -2.8789172172546387
    4. 'Flag' → logprob: -3.1289172172546387
    5. 'Solver' → logprob: -4.378917217254639
    6. 'sys' → logprob: -4.628917217254639
    7. 'Runner' → logprob: -4.878917217254639
    8. 'Test' → logprob: -5.128917217254639
    9. 'list' → logprob: -5.503917217254639
    10. '__' → logprob: -5.503917217254639

Token 946: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.8177464008331299
    2. 'Handler' → logprob: -1.5677464008331299
    3. 'Parser' → logprob: -1.6927464008331299
    4. 'Processor' → logprob: -2.19274640083313
    5. ':' → logprob: -3.56774640083313
    6. 'Data' → logprob: -4.067746162414551
    7. 'Provider' → logprob: -5.442746162414551
    8. 'Generator' → logprob: -6.817746162414551
    9. '():' → logprob: -7.192746162414551
    10. ':
' → logprob: -7.692746162414551

Token 947: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009184855734929442
    2. ':
' → logprob: -7.000918388366699
    3. ':def' → logprob: -12.3759183883667
    4. ':

' → logprob: -13.1259183883667
    5. '(object' → logprob: -15.1259183883667
    6. ':
' → logprob: -16.000919342041016
    7. '():' → logprob: -16.000919342041016
    8. ':void' → logprob: -16.625919342041016
    9. ':System' → logprob: -16.750919342041016
    10. ' :' → logprob: -16.750919342041016

Token 948: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040180981159210205
    2. ' def' → logprob: -3.2901809215545654
    3. 'def' → logprob: -6.1651811599731445
    4. '	def' → logprob: -10.790181159973145
    5. '```' → logprob: -11.915181159973145
    6. 'import' → logprob: -13.290181159973145
    7. '<|end|>' → logprob: -13.790181159973145
    8. ' ' → logprob: -14.165181159973145
    9. '  ' → logprob: -14.165181159973145
    10. ' indentation' → logprob: -14.415181159973145

Token 949: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2546122968196869
    2. '@' → logprob: -1.5046123266220093
    3. ' def' → logprob: -6.004612445831299
    4. ' @' → logprob: -8.50461196899414
    5. '   ' → logprob: -11.75461196899414
    6. 'import' → logprob: -13.87961196899414
    7. '__' → logprob: -15.12961196899414
    8. '
' → logprob: -15.75461196899414
    9. '```' → logprob: -15.75461196899414
    10. '@property' → logprob: -16.00461196899414

Token 950: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.07469740509986877
    2. 'def' → logprob: -2.949697494506836
    3. 'init' → logprob: -4.199697494506836
    4. ' def' → logprob: -6.324697494506836
    5. '__' → logprob: -6.699697494506836
    6. 'classmethod' → logprob: -7.574697494506836
    7. 'int' → logprob: -8.074697494506836
    8. 'static' → logprob: -9.199697494506836
    9. '_init' → logprob: -9.324697494506836
    10. 'put' → logprob: -9.574697494506836

Token 951: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0009120595059357584
    2. 'slots' → logprob: -7.000912189483643
    3. 'slot' → logprob: -15.750911712646484
    4. '_init' → logprob: -16.125911712646484
    5. 'next' → logprob: -16.125911712646484
    6. 'new' → logprob: -16.750911712646484
    7. ' init' → logprob: -17.375911712646484
    8. 'call' → logprob: -17.750911712646484
    9. 'name' → logprob: -18.125911712646484
    10. '_slots' → logprob: -18.375911712646484

Token 952: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0029782988131046295
    2. '(' → logprob: -6.002978324890137
    3. '__(' → logprob: -8.377978324890137
    4. ' (' → logprob: -8.377978324890137
    5. 'self' → logprob: -10.502978324890137
    6. '()' → logprob: -12.627978324890137
    7. '(
' → logprob: -13.002978324890137
    8. ' ' → logprob: -13.377978324890137
    9. ')(' → logprob: -13.502978324890137
    10. ' self' → logprob: -13.752978324890137

Token 953: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.451116051815916e-05
    2. ')' → logprob: -10.750024795532227
    3. ' self' → logprob: -13.375024795532227
    4. '):
' → logprob: -14.500024795532227
    5. '(self' → logprob: -15.125024795532227
    6. '	self' → logprob: -15.375024795532227
    7. '
' → logprob: -15.625024795532227
    8. '   ' → logprob: -15.875024795532227
    9. '):' → logprob: -17.875024795532227
    10. 's' → logprob: -18.000024795532227

Token 954: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6463744044303894
    2. 'self' → logprob: -0.7713744044303894
    3. ',' → logprob: -5.896374225616455
    4. ')' → logprob: -6.021374225616455
    5. '):' → logprob: -6.021374225616455
    6. '):
' → logprob: -6.146374225616455
    7. ' (' → logprob: -6.396374225616455
    8. ' self' → logprob: -6.771374225616455
    9. ')(' → logprob: -7.771374225616455
    10. '   ' → logprob: -7.896374225616455

Token 955: ' source' (ID: 4256)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008067441172897816
    2. 'lines' → logprob: -5.633067607879639
    3. 'input' → logprob: -5.758067607879639
    4. ')' → logprob: -6.883067607879639
    5. ' self' → logprob: -9.00806713104248
    6. 'sys' → logprob: -10.00806713104248
    7. 'source' → logprob: -10.38306713104248
    8. ' lines' → logprob: -10.50806713104248
    9. 'raw' → logprob: -11.38306713104248
    10. 'stream' → logprob: -11.75806713104248

Token 956: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6365826725959778
    2. '):' → logprob: -0.7615826725959778
    3. ')' → logprob: -5.761582851409912
    4. '):
' → logprob: -7.261582851409912
    5. '=' → logprob: -9.511582374572754
    6. '=None' → logprob: -10.886582374572754
    7. ' :' → logprob: -11.011582374572754
    8. ' ):' → logprob: -12.011582374572754
    9. ':)' → logprob: -13.261582374572754
    10. '=sys' → logprob: -13.386582374572754

Token 957: ' Iterable' (ID: 71228)
  Prédit: 'Iterable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterable' → logprob: -0.0006452414090745151
    2. 'sys' → logprob: -8.125645637512207
    3. ' Iterable' → logprob: -8.375645637512207
    4. 'Optional' → logprob: -9.125645637512207
    5. 'iter' → logprob: -12.625645637512207
    6. 'List' → logprob: -12.750645637512207
    7. 'str' → logprob: -13.750645637512207
    8. 'Iter' → logprob: -14.250645637512207
    9. 'Text' → logprob: -15.000645637512207
    10. ' ' → logprob: -15.250645637512207

Token 958: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0003175889723934233
    2. '[int' → logprob: -8.500317573547363
    3. '):
' → logprob: -9.625317573547363
    4. 'str' → logprob: -11.125317573547363
    5. '):' → logprob: -11.375317573547363
    6. ')' → logprob: -11.500317573547363
    7. '=str' → logprob: -12.625317573547363
    8. ':str' → logprob: -12.750317573547363
    9. '[' → logprob: -13.125317573547363
    10. ' =' → logprob: -13.250317573547363

Token 959: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13007424771785736
    2. '):' → logprob: -2.1300742626190186
    3. ')' → logprob: -5.8800740242004395
    4. ']):
' → logprob: -8.255074501037598
    5. '):
' → logprob: -10.505074501037598
    6. ']):' → logprob: -10.630074501037598
    7. ':' → logprob: -11.630074501037598
    8. ' ):
' → logprob: -11.630074501037598
    9. '   ' → logprob: -12.255074501037598
    10. '[str' → logprob: -12.630074501037598

Token 960: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028080830816179514
    2. 'def' → logprob: -6.502808094024658
    3. '   ' → logprob: -7.002808094024658
    4. 'self' → logprob: -8.1278076171875
    5. ' def' → logprob: -10.8778076171875
    6. ' self' → logprob: -11.1278076171875
    7. '<|end|>' → logprob: -11.1278076171875
    8. ':' → logprob: -11.3778076171875
    9. '	self' → logprob: -11.8778076171875
    10. '```' → logprob: -12.2528076171875

Token 961: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.2127087504486553e-05
    2. '       ' → logprob: -10.750021934509277
    3. ' self' → logprob: -14.500021934509277
    4. 'lines' → logprob: -16.000022888183594
    5. '   ' → logprob: -17.250022888183594
    6. '	self' → logprob: -17.375022888183594
    7. '(self' → logprob: -20.125022888183594
    8. 'iterator' → logprob: -20.500022888183594
    9. '[self' → logprob: -21.125022888183594
    10. '_self' → logprob: -21.125022888183594

Token 962: '.source' (ID: 27872)
  Prédit: '.lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.25617867708206177
    2. '.source' → logprob: -1.506178617477417
    3. '._' → logprob: -5.506178855895996
    4. '.iterator' → logprob: -8.756178855895996
    5. 'source' → logprob: -12.006178855895996
    6. '.iter' → logprob: -12.256178855895996
    7. '.line' → logprob: -12.506178855895996
    8. '	lines' → logprob: -13.131178855895996
    9. 'lines' → logprob: -13.381178855895996
    10. ' lines' → logprob: -13.756178855895996

Token 963: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10158662497997284
    2. ' =' → logprob: -2.3515865802764893
    3. '_iter' → logprob: -6.601586818695068
    4. '_iterator' → logprob: -11.22658634185791
    5. 'iter' → logprob: -12.22658634185791
    6. 'iterator' → logprob: -13.97658634185791
    7. '   ' → logprob: -13.97658634185791
    8. '=self' → logprob: -14.60158634185791
    9. 'self' → logprob: -15.97658634185791
    10. ' iter' → logprob: -16.226587295532227

Token 964: ' source' (ID: 4256)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.018213391304016113
    2. 'iter' → logprob: -4.018213272094727
    3. '(source' → logprob: -10.393213272094727
    4. ' source' → logprob: -10.518213272094727
    5. ' iter' → logprob: -12.643213272094727
    6. '(iter' → logprob: -14.268213272094727
    7. '[source' → logprob: -14.518213272094727
    8. 'iterator' → logprob: -14.768213272094727
    9. '	source' → logprob: -15.018213272094727
    10. 'enumer' → logprob: -15.268213272094727

Token 965: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12275565415620804
    2. '       ' → logprob: -2.622755765914917
    3. '
' → logprob: -3.247755765914917
    4. 'def' → logprob: -5.747755527496338
    5. '    
' → logprob: -8.247756004333496
    6. 'self' → logprob: -8.747756004333496
    7. '<|end|>' → logprob: -8.997756004333496
    8. '

' → logprob: -9.622756004333496
    9. ' def' → logprob: -9.997756004333496
    10. '        
' → logprob: -9.997756004333496

Token 966: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09564388543367386
    2. 'def' → logprob: -2.595643997192383
    3. '
' → logprob: -4.220643997192383
    4. ' def' → logprob: -6.595643997192383
    5. '       ' → logprob: -8.095643997192383
    6. '<|end|>' → logprob: -9.095643997192383
    7. '    
' → logprob: -10.345643997192383
    8. '

' → logprob: -10.720643997192383
    9. '```' → logprob: -10.720643997192383
    10. 'self' → logprob: -11.220643997192383

Token 967: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.200166469876422e-06
    2. ' def' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.375004768371582
    4. 'line' → logprob: -16.1250057220459
    5. 'lines' → logprob: -17.1250057220459
    6. '_def' → logprob: -17.7500057220459
    7. '__' → logprob: -17.8750057220459
    8. 'current' → logprob: -18.0000057220459
    9. '
' → logprob: -18.0000057220459
    10. 'iterator' → logprob: -19.0000057220459

Token 968: ' parse' (ID: 8420)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -1.580929347255733e-05
    2. ' __' → logprob: -11.500016212463379
    3. 'parse' → logprob: -12.125016212463379
    4. '___' → logprob: -16.125015258789062
    5. '.__' → logprob: -16.625015258789062
    6. 'def' → logprob: -17.625015258789062
    7. 'read' → logprob: -17.750015258789062
    8. '
' → logprob: -19.125015258789062
    9. '_parse' → logprob: -19.250015258789062
    10. '**' → logprob: -20.500015258789062

Token 969: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000169332604855299
    2. '(' → logprob: -8.75016975402832
    3. 'self' → logprob: -12.75016975402832
    4. '()' → logprob: -12.87516975402832
    5. ' (' → logprob: -13.12516975402832
    6. '(
' → logprob: -13.62516975402832
    7. '(s' → logprob: -14.12516975402832
    8. 's' → logprob: -15.25016975402832
    9. ' self' → logprob: -15.25016975402832
    10. '_line' → logprob: -15.37516975402832

Token 970: '_cases' (ID: 115457)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.250000953674316
    3. 'self' → logprob: -15.750000953674316
    4. ' (' → logprob: -17.5
    5. '   ' → logprob: -17.75
    6. '(s' → logprob: -18.0
    7. '()' → logprob: -18.25
    8. '(sel' → logprob: -19.125
    9. 's' → logprob: -19.625
    10. '(
' → logprob: -20.0

Token 971: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.750001907348633
    3. ' (' → logprob: -14.375001907348633
    4. 'self' → logprob: -14.750001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '(s' → logprob: -17.625001907348633
    7. '()' → logprob: -18.375001907348633
    8. '       ' → logprob: -18.750001907348633
    9. '(se' → logprob: -18.875001907348633
    10. '(
' → logprob: -19.250001907348633

Token 972: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006007479038089514
    2. 'self' → logprob: -5.381007671356201
    3. '):
' → logprob: -7.506007671356201
    4. '(self' → logprob: -8.006007194519043
    5. ',' → logprob: -8.131007194519043
    6. '):' → logprob: -9.006007194519043
    7. ')->' → logprob: -9.881007194519043
    8. '   ' → logprob: -11.506007194519043
    9. ' ->' → logprob: -11.756007194519043
    10. '->' → logprob: -12.131007194519043

Token 973: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.019720308482646942
    2. '->' → logprob: -4.644720077514648
    3. ' ->' → logprob: -4.644720077514648
    4. '(' → logprob: -8.894720077514648
    5. 'self' → logprob: -9.144720077514648
    6. '       ' → logprob: -10.769720077514648
    7. '()' → logprob: -11.519720077514648
    8. '   ' → logprob: -11.519720077514648
    9. ')' → logprob: -11.644720077514648
    10. ':' → logprob: -13.144720077514648

Token 974: ' Iterable' (ID: 71228)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -9.949026571121067e-05
    2. 'Iterator' → logprob: -9.750099182128906
    3. 'Iterable' → logprob: -10.500099182128906
    4. ' List' → logprob: -11.375099182128906
    5. 'list' → logprob: -13.750099182128906
    6. '[List' → logprob: -14.125099182128906
    7. 'Generator' → logprob: -15.625099182128906
    8. 'Tuple' → logprob: -17.000099182128906
    9. 'Optional' → logprob: -17.625099182128906
    10. '	List' → logprob: -17.625099182128906

Token 975: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.3806975781917572
    2. '[int' → logprob: -1.6306976079940796
    3. '[' → logprob: -2.13069748878479
    4. ':' → logprob: -6.255697727203369
    5. '[list' → logprob: -9.755697250366211
    6. '[
' → logprob: -10.130697250366211
    7. '['' → logprob: -10.755697250366211
    8. '[Int' → logprob: -12.005697250366211
    9. '[(' → logprob: -12.255697250366211
    10. '[[' → logprob: -12.880697250366211

Token 976: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05498891696333885
    2. '[int' → logprob: -3.0549888610839844
    3. '[List' → logprob: -5.054988861083984
    4. 'Flag' → logprob: -13.179988861083984
    5. '[Int' → logprob: -14.304988861083984
    6. 'int' → logprob: -14.429988861083984
    7. '[str' → logprob: -15.429988861083984
    8. '[
' → logprob: -15.679988861083984
    9. ']' → logprob: -16.054988861083984
    10. '[(' → logprob: -16.679988861083984

Token 977: 'Tuple' (ID: 40048)
  Prédit: 'Flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: -0.20233207941055298
    2. 'Tuple' → logprob: -1.7023320198059082
    3. 'float' → logprob: -7.077332019805908
    4. 'Vector' → logprob: -10.077332496643066
    5. 'Float' → logprob: -11.452332496643066
    6. 'flag' → logprob: -12.077332496643066
    7. '[' → logprob: -12.327332496643066
    8. ' Flag' → logprob: -12.702332496643066
    9. 'List' → logprob: -13.327332496643066
    10. 'Point' → logprob: -13.577332496643066

Token 978: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.2530269920825958
    2. '[' → logprob: -1.5030269622802734
    3. 'int' → logprob: -7.628026962280273
    4. 'float' → logprob: -7.878026962280273
    5. '   ' → logprob: -8.503026962280273
    6. '[str' → logprob: -10.628026962280273
    7. ' float' → logprob: -13.378026962280273
    8. ',float' → logprob: -13.878026962280273
    9. ' int' → logprob: -14.253026962280273
    10. '[List' → logprob: -15.003026962280273

Token 979: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03213772177696228
    2. ',float' → logprob: -3.907137632369995
    3. ',int' → logprob: -4.532137870788574
    4. '[int' → logprob: -7.282137870788574
    5. ' ,' → logprob: -9.782137870788574
    6. '[' → logprob: -11.282137870788574
    7. 'int' → logprob: -11.407137870788574
    8. 'float' → logprob: -14.282137870788574
    9. '   ' → logprob: -14.407137870788574
    10. ',bool' → logprob: -14.532137870788574

Token 980: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0037328568287193775
    2. 'float' → logprob: -5.878732681274414
    3. ' int' → logprob: -7.003732681274414
    4. ' float' → logprob: -11.628732681274414
    5. '   ' → logprob: -12.753732681274414
    6. '	int' → logprob: -13.253732681274414
    7. '...' → logprob: -13.503732681274414
    8. '[int' → logprob: -13.753732681274414
    9. ' ' → logprob: -13.878732681274414
    10. '  ' → logprob: -14.878732681274414

Token 981: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.010393614880740643
    2. ']]:
' → logprob: -4.6353936195373535
    3. ']]]' → logprob: -7.5103936195373535
    4. ']' → logprob: -9.635393142700195
    5. ']>' → logprob: -11.885393142700195
    6. ']])' → logprob: -12.510393142700195
    7. ']:' → logprob: -12.635393142700195
    8. '[' → logprob: -13.010393142700195
    9. ']],' → logprob: -13.760393142700195
    10. '>' → logprob: -13.885393142700195

Token 982: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7454558610916138
    2. ':' → logprob: -0.9954558610916138
    3. '):
' → logprob: -2.620455741882324
    4. '():
' → logprob: -3.495455741882324
    5. '       ' → logprob: -3.995455741882324
    6. '):' → logprob: -4.495455741882324
    7. '   ' → logprob: -4.495455741882324
    8. '(self' → logprob: -4.745455741882324
    9. '():' → logprob: -6.245455741882324
    10. ')' → logprob: -7.120455741882324

Token 983: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006411884678527713
    2. ' for' → logprob: -7.625641345977783
    3. 'for' → logprob: -9.375640869140625
    4. '```' → logprob: -9.750640869140625
    5. '   ' → logprob: -12.125640869140625
    6. ',' → logprob: -13.750640869140625
    7. '      ' → logprob: -14.125640869140625
    8. '	' → logprob: -14.500640869140625
    9. '	   ' → logprob: -14.875640869140625
    10. ' ' → logprob: -15.250640869140625

Token 984: ' it' (ID: 480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11128892004489899
    2. '       ' → logprob: -2.4862890243530273
    3. 'lines' → logprob: -4.611289024353027
    4. '   ' → logprob: -5.236289024353027
    5. ' for' → logprob: -6.486289024353027
    6. 'current' → logprob: -6.611289024353027
    7. 'buffer' → logprob: -6.861289024353027
    8. '```' → logprob: -6.986289024353027
    9. 'line' → logprob: -7.361289024353027
    10. 'num' → logprob: -7.486289024353027

Token 985: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22017766535282135
    2. 'er' → logprob: -1.9701776504516602
    3. ' =' → logprob: -2.84517765045166
    4. 'ERATOR' → logprob: -11.09517765045166
    5. 'err' → logprob: -11.34517765045166
    6. '   ' → logprob: -11.34517765045166
    7. 'ertools' → logprob: -12.34517765045166
    8. 'ert' → logprob: -12.84517765045166
    9. 'or' → logprob: -12.97017765045166
    10. 'ern' → logprob: -13.09517765045166

Token 986: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.001045551267452538
    2. '(iter' → logprob: -7.2510457038879395
    3. ' iter' → logprob: -8.001045227050781
    4. 'map' → logprob: -15.626045227050781
    5. 'self' → logprob: -16.00104522705078
    6. '	iter' → logprob: -16.50104522705078
    7. '(' → logprob: -16.87604522705078
    8. '
' → logprob: -17.87604522705078
    9. 'enumer' → logprob: -18.00104522705078
    10. 'iterator' → logprob: -18.25104522705078

Token 987: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. '(this' → logprob: -18.625
    4. 'self' → logprob: -18.75
    5. '((' → logprob: -21.25
    6. '	self' → logprob: -21.5
    7. '(
' → logprob: -21.75
    8. '(s' → logprob: -22.25
    9. ' (' → logprob: -22.5
    10. '=self' → logprob: -23.125

Token 988: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -1.3856492842023727e-06
    2. 'source' → logprob: -13.625000953674316
    3. '.' → logprob: -16.375001907348633
    4. ' .' → logprob: -17.625001907348633
    5. '(source' → logprob: -17.750001907348633
    6. '	source' → logprob: -18.625001907348633
    7. '.s' → logprob: -19.375001907348633
    8. '.self' → logprob: -19.500001907348633
    9. ' source' → logprob: -19.750001907348633
    10. '.src' → logprob: -20.125001907348633

Token 989: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6995816230773926
    2. ')
' → logprob: -0.6995816230773926
    3. '()' → logprob: -5.949581623077393
    4. '()
' → logprob: -5.949581623077393
    5. '       ' → logprob: -7.574581623077393
    6. '   ' → logprob: -7.949581623077393
    7. '
' → logprob: -8.824581146240234
    8. '())
' → logprob: -9.949581146240234
    9. 'def' → logprob: -10.449581146240234
    10. ',' → logprob: -10.699581146240234

Token 990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.692145012086257e-05
    2. 'while' → logprob: -11.375046730041504
    3. 'for' → logprob: -11.875046730041504
    4. '	' → logprob: -12.000046730041504
    5. '   ' → logprob: -12.125046730041504
    6. '        
' → logprob: -12.250046730041504
    7. '<|end|>' → logprob: -12.625046730041504
    8. '
' → logprob: -13.625046730041504
    9. ' for' → logprob: -13.750046730041504
    10. '	   ' → logprob: -14.000046730041504

Token 991: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.18017816543579102
    2. '       ' → logprob: -1.930178165435791
    3. 'for' → logprob: -3.930178165435791
    4. ' while' → logprob: -9.430177688598633
    5. '   ' → logprob: -10.430177688598633
    6. ' for' → logprob: -12.805177688598633
    7. '	while' → logprob: -13.680177688598633
    8. '```' → logprob: -13.680177688598633
    9. 'try' → logprob: -14.555177688598633
    10. 'next' → logprob: -15.805177688598633

Token 992: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007100477814674377
    2. ' True' → logprob: -7.2507100105285645
    3. '(True' → logprob: -15.625710487365723
    4. 'true' → logprob: -17.250709533691406
    5. '
' → logprob: -18.125709533691406
    6. '=True' → logprob: -18.250709533691406
    7. '1' → logprob: -19.875709533691406
    8. '   ' → logprob: -20.375709533691406
    9. 'TRUE' → logprob: -20.750709533691406
    10. ' ' → logprob: -22.375709533691406

Token 993: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09821510314941406
    2. '           ' → logprob: -2.598215103149414
    3. ':
' → logprob: -4.223215103149414
    4. '       ' → logprob: -5.473215103149414
    5. ',' → logprob: -9.473215103149414
    6. '   ' → logprob: -10.973215103149414
    7. '<|end|>' → logprob: -10.973215103149414
    8. '<|end|>' → logprob: -11.098215103149414
    9. '=' → logprob: -11.348215103149414
    10. 'try' → logprob: -11.598215103149414

Token 994: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04029296338558197
    2. 'try' → logprob: -3.290292978286743
    3. '   ' → logprob: -6.290292739868164
    4. '       ' → logprob: -8.790292739868164
    5. ' try' → logprob: -9.165292739868164
    6. 'line' → logprob: -9.290292739868164
    7. '	   ' → logprob: -11.415292739868164
    8. '	       ' → logprob: -11.665292739868164
    9. '	try' → logprob: -11.790292739868164
    10. ' line' → logprob: -12.915292739868164

Token 995: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.03984402120113373
    2. 'try' → logprob: -3.289844036102295
    3. ' line' → logprob: -6.914844036102295
    4. '           ' → logprob: -7.414844036102295
    5. 'n' → logprob: -9.039843559265137
    6. ' try' → logprob: -9.414843559265137
    7. 'count' → logprob: -13.789843559265137
    8. 'length' → logprob: -13.789843559265137
    9. 'num' → logprob: -13.914843559265137
    10. 'size' → logprob: -14.164843559265137

Token 996: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132713735103607
    2. ' =' → logprob: -1.313271403312683
    3. '=line' → logprob: -11.563271522521973
    4. ':' → logprob: -16.188270568847656
    5. 's' → logprob: -17.063270568847656
    6. 'line' → logprob: -17.188270568847656
    7. ' ' → logprob: -17.438270568847656
    8. '.' → logprob: -17.563270568847656
    9. '.=' → logprob: -17.688270568847656
    10. '＝' → logprob: -18.313270568847656

Token 997: ' self' (ID: 1051)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.011056075803935528
    2. ' next' → logprob: -4.511055946350098
    3. '(next' → logprob: -11.761055946350098
    4. '[next' → logprob: -15.886055946350098
    5. 'sys' → logprob: -16.636056900024414
    6. '.next' → logprob: -16.636056900024414
    7. '	next' → logprob: -17.011056900024414
    8. '
' → logprob: -17.136056900024414
    9. 'None' → logprob: -17.886056900024414
    10. ',next' → logprob: -18.386056900024414

Token 998: '._' (ID: 2697)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.103363536298275
    2. '.next' → logprob: -2.478363513946533
    3. 'ext' → logprob: -5.353363513946533
    4. '.readline' → logprob: -5.978363513946533
    5. '(next' → logprob: -6.478363513946533
    6. '_next' → logprob: -6.853363513946533
    7. '.__' → logprob: -6.978363513946533
    8. '.' → logprob: -7.103363513946533
    9. ' next' → logprob: -7.228363513946533
    10. 'for' → logprob: -7.353363513946533

Token 999: 'read' (ID: 1293)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.242070734500885
    2. 'read' → logprob: -2.2420706748962402
    3. 'strip' → logprob: -3.2420706748962402
    4. 'parse' → logprob: -3.7420706748962402
    5. 'get' → logprob: -3.9920706748962402
    6. 'skip' → logprob: -4.36707067489624
    7. 'try' → logprob: -5.24207067489624
    8. '_next' → logprob: -5.86707067489624
    9. 'advance' → logprob: -5.99207067489624
    10. 'safe' → logprob: -6.11707067489624

Token 1000: '_non' (ID: 52193)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0049125696532428265
    2. 'next' → logprob: -5.379912376403809
    3. '_line' → logprob: -9.004912376403809
    4. '()' → logprob: -9.379912376403809
    5. ' line' → logprob: -11.004912376403809
    6. '(line' → logprob: -11.504912376403809
    7. '_next' → logprob: -11.504912376403809
    8. '().' → logprob: -11.629912376403809
    9. 'lin' → logprob: -11.879912376403809
    10. 'strip' → logprob: -12.004912376403809

Token 1001: '_empty' (ID: 35051)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.07289358228445053
    2. 'blank' → logprob: -2.6978936195373535
    3. 'comment' → logprob: -6.1978936195373535
    4. '_empty' → logprob: -7.6978936195373535
    5. '_blank' → logprob: -8.197893142700195
    6. ' empty' → logprob: -9.822893142700195
    7. 'skip' → logprob: -9.822893142700195
    8. 'newline' → logprob: -10.947893142700195
    9. 'None' → logprob: -11.322893142700195
    10. 'none' → logprob: -11.947893142700195

Token 1002: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.38015487790107727
    2. '_line' → logprob: -1.6301548480987549
    3. '()' → logprob: -2.130154848098755
    4. '()
' → logprob: -6.880155086517334
    5. '().' → logprob: -8.505154609680176
    6. '(line' → logprob: -9.005154609680176
    7. ' line' → logprob: -9.130154609680176
    8. '();' → logprob: -11.505154609680176
    9. '()\' → logprob: -11.505154609680176
    10. '()

' → logprob: -12.255154609680176

Token 1003: '(it' (ID: 29445)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006168743595480919
    2. '()
' → logprob: -5.256168842315674
    3. ' =' → logprob: -7.256168842315674
    4. '=' → logprob: -8.506168365478516
    5. '()

' → logprob: -11.381168365478516
    6. '()
' → logprob: -12.506168365478516
    7. ' ()' → logprob: -12.881168365478516
    8. '(' → logprob: -13.131168365478516
    9. '().' → logprob: -14.006168365478516
    10. '())' → logprob: -14.006168365478516

Token 1004: ')
' (ID: 446)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.1611238420009613
    2. '()' → logprob: -2.411123752593994
    3. ')
' → logprob: -3.161123752593994
    4. ')' → logprob: -4.536123752593994
    5. '())
' → logprob: -5.161123752593994
    6. '())' → logprob: -8.786124229431152
    7. '()
' → logprob: -9.911124229431152
    8. '():
' → logprob: -10.536124229431152
    9. '):
' → logprob: -11.411124229431152
    10. ' =' → logprob: -12.161124229431152

Token 1005: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15965259075164795
    2. '       ' → logprob: -2.7846527099609375
    3. 'if' → logprob: -3.2846527099609375
    4. '()' → logprob: -3.4096527099609375
    5. '()
' → logprob: -4.7846527099609375
    6. ' if' → logprob: -5.6596527099609375
    7. ',' → logprob: -7.6596527099609375
    8. ':' → logprob: -7.6596527099609375
    9. ' =' → logprob: -7.6596527099609375
    10. '=' → logprob: -8.034652709960938

Token 1006: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08995668590068817
    2. '           ' → logprob: -2.839956760406494
    3. ' if' → logprob: -3.589956760406494
    4. '       ' → logprob: -14.839956283569336
    5. '	if' → logprob: -14.964956283569336
    6. '            
' → logprob: -15.464956283569336
    7. '	       ' → logprob: -15.964956283569336
    8. '
' → logprob: -16.214956283569336
    9. 'If' → logprob: -16.464956283569336
    10. '   ' → logprob: -16.464956283569336

Token 1007: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.007788320537656546
    2. ' line' → logprob: -4.882788181304932
    3. ' not' → logprob: -9.25778865814209
    4. 'not' → logprob: -9.38278865814209
    5. '(line' → logprob: -14.13278865814209
    6. '#line' → logprob: -14.50778865814209
    7. '	line' → logprob: -14.50778865814209
    8. ' ' → logprob: -14.75778865814209
    9. '=line' → logprob: -16.257787704467773
    10. 'lin' → logprob: -16.382787704467773

Token 1008: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7665380239486694
    2. 'is' → logprob: -1.2665380239486694
    3. '==' → logprob: -1.5165380239486694
    4. ' ==' → logprob: -3.391538143157959
    5. ' in' → logprob: -8.6415376663208
    6. '.strip' → logprob: -8.6415376663208
    7. 'in' → logprob: -10.1415376663208
    8. '===' → logprob: -11.1415376663208
    9. '=="' → logprob: -11.6415376663208
    10. '[' → logprob: -11.6415376663208

Token 1009: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00672566844150424
    2. ' None' → logprob: -5.006725788116455
    3. 'N' → logprob: -12.131725311279297
    4. '''' → logprob: -13.256725311279297
    5. '""' → logprob: -13.881725311279297
    6. '_None' → logprob: -14.381725311279297
    7. 'none' → logprob: -14.506725311279297
    8. 'No' → logprob: -15.381725311279297
    9. '(None' → logprob: -15.381725311279297
    10. ' ' → logprob: -16.006725311279297

Token 1010: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5899800062179565
    2. ':' → logprob: -1.2149800062179565
    3. '           ' → logprob: -2.964980125427246
    4. '               ' → logprob: -2.964980125427246
    5. ' or' → logprob: -3.089980125427246
    6. ':return' → logprob: -9.339980125427246
    7. ',' → logprob: -9.714980125427246
    8. '       ' → logprob: -10.464980125427246
    9. '   ' → logprob: -10.589980125427246
    10. '                   ' → logprob: -11.089980125427246

Token 1011: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35541823506355286
    2. '           ' → logprob: -1.6054182052612305
    3. 'break' → logprob: -2.3554182052612305
    4. ' break' → logprob: -6.1054182052612305
    5. 'return' → logprob: -6.8554182052612305
    6. '            
' → logprob: -10.48041820526123
    7. '
' → logprob: -10.60541820526123
    8. '	break' → logprob: -10.60541820526123
    9. '                
' → logprob: -10.73041820526123
    10. '                   ' → logprob: -10.98041820526123

Token 1012: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.030462095513939857
    2. 'return' → logprob: -3.5304620265960693
    3. '               ' → logprob: -7.530462265014648
    4. ' break' → logprob: -8.905462265014648
    5. '                   ' → logprob: -10.530462265014648
    6. '	break' → logprob: -12.280462265014648
    7. ' return' → logprob: -12.530462265014648
    8. '
' → logprob: -13.155462265014648
    9. '           ' → logprob: -13.405462265014648
    10. '                
' → logprob: -15.530462265014648

Token 1013: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034928040113300085
    2. '            
' → logprob: -6.628492832183838
    3. '<|end|>' → logprob: -7.003492832183838
    4. ',' → logprob: -8.12849235534668
    5. '
' → logprob: -8.12849235534668
    6. '    
' → logprob: -9.12849235534668
    7. '               ' → logprob: -9.25349235534668
    8. '.' → logprob: -9.37849235534668
    9. '       ' → logprob: -9.37849235534668
    10. '<|end|>' → logprob: -10.25349235534668

Token 1014: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018631916027516127
    2. '
' → logprob: -7.0018630027771
    3. '            
' → logprob: -7.3768630027771
    4. '       ' → logprob: -8.501863479614258
    5. '<|end|>' → logprob: -10.251863479614258
    6. '        
' → logprob: -10.876863479614258
    7. '```' → logprob: -11.126863479614258
    8. '    
' → logprob: -11.376863479614258
    9. ',' → logprob: -11.376863479614258
    10. '          ' → logprob: -12.626863479614258

Token 1015: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.10340084135532379
    2. 'N' → logprob: -2.728400945663452
    3. 'num' → logprob: -4.478400707244873
    4. ' n' → logprob: -4.728400707244873
    5. 'try' → logprob: -5.103400707244873
    6. '           ' → logprob: -5.353400707244873
    7. 'count' → logprob: -6.853400707244873
    8. ' try' → logprob: -7.603400707244873
    9. ' num' → logprob: -9.228401184082031
    10. ' N' → logprob: -9.478401184082031

Token 1016: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798488050699234
    2. '=' → logprob: -1.8048487901687622
    3. '=int' → logprob: -10.054848670959473
    4. ',' → logprob: -10.304848670959473
    5. ' ' → logprob: -11.429848670959473
    6. '_tokens' → logprob: -12.804848670959473
    7. '=line' → logprob: -13.054848670959473
    8. '   ' → logprob: -13.304848670959473
    9. ')' → logprob: -13.554848670959473
    10. '  ' → logprob: -13.554848670959473

Token 1017: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007099286303855479
    2. ' int' → logprob: -7.2507100105285645
    3. '(int' → logprob: -22.500709533691406
    4. '[int' → logprob: -23.500709533691406
    5. '	int' → logprob: -24.250709533691406
    6. '=int' → logprob: -24.375709533691406
    7. ' ' → logprob: -24.500709533691406
    8. '<int' → logprob: -24.625709533691406
    9. '
' → logprob: -25.375709533691406
    10. ':int' → logprob: -25.625709533691406

Token 1018: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -6.134509021649137e-05
    2. 'line' → logprob: -9.75006103515625
    3. '(' → logprob: -13.12506103515625
    4. '(n' → logprob: -14.37506103515625
    5. '[line' → logprob: -15.50006103515625
    6. '=line' → logprob: -16.25006103515625
    7. ' line' → logprob: -16.50006103515625
    8. '(next' → logprob: -17.50006103515625
    9. '#line' → logprob: -17.50006103515625
    10. '(
' → logprob: -17.87506103515625

Token 1019: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027807049453258514
    2. '.strip' → logprob: -3.7778069972991943
    3. ')
' → logprob: -5.402807235717773
    4. '())' → logprob: -10.402807235717773
    5. 'strip' → logprob: -11.902807235717773
    6. ' )' → logprob: -12.527807235717773
    7. '.rstrip' → logprob: -13.152807235717773
    8. '())
' → logprob: -13.902807235717773
    9. '.trim' → logprob: -14.527807235717773
    10. '))' → logprob: -14.652807235717773

Token 1020: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004189946048427373
    2. '<|end|>' → logprob: -8.750418663024902
    3. ' if' → logprob: -9.625418663024902
    4. '       ' → logprob: -9.875418663024902
    5. 'if' → logprob: -9.875418663024902
    6. '<|end|>' → logprob: -10.625418663024902
    7. '		' → logprob: -11.375418663024902
    8. '	       ' → logprob: -11.625418663024902
    9. '          ' → logprob: -11.750418663024902
    10. '   ' → logprob: -12.000418663024902

Token 1021: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16968996822834015
    2. '           ' → logprob: -2.169689893722534
    3. 'points' → logprob: -3.794689893722534
    4. ' if' → logprob: -4.044690132141113
    5. 'flags' → logprob: -6.544690132141113
    6. 'coordinates' → logprob: -9.169690132141113
    7. 'coords' → logprob: -9.544690132141113
    8. 'for' → logprob: -9.919690132141113
    9. ' points' → logprob: -10.044690132141113
    10. 'positions' → logprob: -10.669690132141113

Token 1022: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007101670489646494
    2. ' n' → logprob: -7.2507100105285645
    3. '	n' → logprob: -16.000709533691406
    4. 'not' → logprob: -18.000709533691406
    5. ' not' → logprob: -18.750709533691406
    6. '           ' → logprob: -19.125709533691406
    7. '
' → logprob: -20.000709533691406
    8. ')n' → logprob: -20.125709533691406
    9. ' н' → logprob: -20.500709533691406
    10. '(n' → logprob: -20.750709533691406

Token 1023: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05245884135365486
    2. '<=' → logprob: -3.1774587631225586
    3. ' ==' → logprob: -4.677458763122559
    4. ' <=' → logprob: -9.177458763122559
    5. '===' → logprob: -12.802458763122559
    6. '=' → logprob: -13.302458763122559
    7. '[' → logprob: -13.927458763122559
    8. '==
' → logprob: -13.927458763122559
    9. '()==' → logprob: -14.302458763122559
    10. '0' → logprob: -14.552458763122559

Token 1024: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '-' → logprob: -19.6250057220459
    4. '
' → logprob: -21.1250057220459
    5. '```' → logprob: -21.2500057220459
    6. '۰' → logprob: -21.5000057220459
    7. ' -' → logprob: -21.8750057220459
    8. ')' → logprob: -22.0000057220459
    9. '00' → logprob: -22.5000057220459
    10. '  ' → logprob: -22.5000057220459

Token 1025: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '-' → logprob: -14.375004768371582
    4. '۰' → logprob: -17.6250057220459
    5. 'zero' → logprob: -18.4375057220459
    6. ')' → logprob: -18.5000057220459
    7. '
' → logprob: -18.5625057220459
    8. '```' → logprob: -18.6250057220459
    9. '=' → logprob: -18.6875057220459
    10. '﻿' → logprob: -18.8125057220459

Token 1026: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19581177830696106
    2. ':
' → logprob: -1.8208117485046387
    3. '           ' → logprob: -4.320811748504639
    4. ':return' → logprob: -6.570811748504639
    5. '               ' → logprob: -6.945811748504639
    6. '       ' → logprob: -9.320812225341797
    7. '   ' → logprob: -9.570812225341797
    8. '<|end|>' → logprob: -10.570812225341797
    9. '.' → logprob: -11.195812225341797
    10. '                   ' → logprob: -11.445812225341797

Token 1027: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03387263044714928
    2. '           ' → logprob: -3.408872604370117
    3. '	           ' → logprob: -8.783872604370117
    4. '	       ' → logprob: -11.408872604370117
    5. '		       ' → logprob: -11.658872604370117
    6. '<|end|>' → logprob: -11.658872604370117
    7. '			' → logprob: -11.783872604370117
    8. '   ' → logprob: -11.908872604370117
    9. '                   ' → logprob: -12.033872604370117
    10. '              ' → logprob: -12.533872604370117

Token 1028: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.017064297571778297
    2. 'return' → logprob: -4.267064094543457
    3. ' break' → logprob: -6.017064094543457
    4. '               ' → logprob: -8.642064094543457
    5. '	break' → logprob: -8.642064094543457
    6. '           ' → logprob: -9.267064094543457
    7. ' return' → logprob: -11.642064094543457
    8. '                   ' → logprob: -13.142064094543457
    9. '_break' → logprob: -14.642064094543457
    10. '	return' → logprob: -14.767064094543457

Token 1029: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04058043286204338
    2. '
' → logprob: -3.2905805110931396
    3. '            
' → logprob: -6.4155802726745605
    4. '<|end|>' → logprob: -7.4155802726745605
    5. '<|end|>' → logprob: -9.915580749511719
    6. 'newline' → logprob: -10.415580749511719
    7. '       ' → logprob: -10.540580749511719
    8. '    
' → logprob: -10.540580749511719
    9. ',' → logprob: -10.665580749511719
    10. '\n' → logprob: -10.790580749511719

Token 1030: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001024235738441348
    2. '            
' → logprob: -7.75102424621582
    3. 'points' → logprob: -8.25102424621582
    4. '
' → logprob: -9.37602424621582
    5. '```' → logprob: -9.62602424621582
    6. 'lines' → logprob: -10.00102424621582
    7. ' lines' → logprob: -10.50102424621582
    8. '       ' → logprob: -10.75102424621582
    9. 'yield' → logprob: -11.25102424621582
    10. '        
' → logprob: -11.87602424621582

Token 1031: ' flags' (ID: 17376)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flags' (adapté à ' flags') → logprob: -0.2594004273414612
    2. 'points' → logprob: -1.7594003677368164
    3. '           ' → logprob: -3.2594003677368164
    4. 'cases' → logprob: -4.884400367736816
    5. 'coords' → logprob: -5.509400367736816
    6. 'positions' → logprob: -5.759400367736816
    7. 'coordinates' → logprob: -6.134400367736816
    8. 'case' → logprob: -7.134400367736816
    9. ' flags' → logprob: -9.884400367736816
    10. ' points' → logprob: -9.884400367736816

Token 1032: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20281670987606049
    2. '=' → logprob: -1.7028167247772217
    3. ':' → logprob: -6.577816486358643
    4. '=[]' → logprob: -11.5778169631958
    5. '=[]
' → logprob: -13.3278169631958
    6. '_list' → logprob: -15.8278169631958
    7. 's' → logprob: -16.077816009521484
    8. ':list' → logprob: -16.702816009521484
    9. ':=' → logprob: -17.077816009521484
    10. '_points' → logprob: -17.327816009521484

Token 1033: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5810784697532654
    2. '[]
' → logprob: -0.8310784697532654
    3. '[' → logprob: -5.33107852935791
    4. '[n' → logprob: -8.83107852935791
    5. '[
' → logprob: -10.08107852935791
    6. '[(' → logprob: -10.70607852935791
    7. '[self' → logprob: -11.45607852935791
    8. '[int' → logprob: -11.45607852935791
    9. '[next' → logprob: -12.08107852935791
    10. '[new' → logprob: -12.20607852935791

Token 1034: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016506604151800275
    2. '	       ' → logprob: -7.626650810241699
    3. '       ' → logprob: -7.751650810241699
    4. ' for' → logprob: -8.1266508102417
    5. 'for' → logprob: -8.2516508102417
    6. '<|end|>' → logprob: -9.3766508102417
    7. '		' → logprob: -10.6266508102417
    8. '<|end|>' → logprob: -11.1266508102417
    9. '
' → logprob: -11.3766508102417
    10. '	   ' → logprob: -11.3766508102417

Token 1035: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025846069678664207
    2. '           ' → logprob: -3.775846004486084
    3. ' for' → logprob: -6.025846004486084
    4. '       ' → logprob: -8.650846481323242
    5. '	for' → logprob: -12.775846481323242
    6. '   ' → logprob: -12.900846481323242
    7. 'while' (adapté à ' while') → logprob: -14.775846481323242
    8. '	       ' → logprob: -14.900846481323242
    9. '		' → logprob: -15.150846481323242
    10. '	   ' → logprob: -15.525846481323242

Token 1036: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.003241762751713395
    2. ' len' → logprob: -5.753241539001465
    3. 'True' → logprob: -10.003241539001465
    4. 'n' → logprob: -11.378241539001465
    5. '(len' → logprob: -12.128241539001465
    6. ' True' → logprob: -13.753241539001465
    7. '	len' → logprob: -15.003241539001465
    8. 'flags' → logprob: -15.128241539001465
    9. ' ' → logprob: -16.75324249267578
    10. '
' → logprob: -17.37824249267578

Token 1037: '(flags' (ID: 127832)
  Prédit: '(flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flags' → logprob: -0.3132672905921936
    2. 'flags' → logprob: -1.3132672309875488
    3. ' flags' → logprob: -12.313267707824707
    4. '	flags' → logprob: -14.188267707824707
    5. 'flag' → logprob: -16.43826675415039
    6. 'fl' → logprob: -16.56326675415039
    7. '(flag' → logprob: -16.93826675415039
    8. 'FLAGS' → logprob: -17.31326675415039
    9. '.flags' → logprob: -17.81326675415039
    10. '(' → logprob: -17.93826675415039

Token 1038: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20691712200641632
    2. '<' → logprob: -1.7069171667099
    3. '<n' → logprob: -5.3319172859191895
    4. '<len' → logprob: -8.581916809082031
    5. '()<' → logprob: -8.581916809082031
    6. ')' → logprob: -8.831916809082031
    7. '()' → logprob: -10.206916809082031
    8. '<int' → logprob: -10.831916809082031
    9. '<size' → logprob: -10.831916809082031
    10. ')<' → logprob: -11.081916809082031

Token 1039: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4746594727039337
    2. '<' → logprob: -0.9746594429016113
    3. '<n' → logprob: -7.599659442901611
    4. '()<' → logprob: -10.22465991973877
    5. '<len' → logprob: -10.97465991973877
    6. '<size' → logprob: -11.47465991973877
    7. '<num' → logprob: -12.72465991973877
    8. '<int' → logprob: -12.97465991973877
    9. ' ' → logprob: -12.97465991973877
    10. '<class' → logprob: -13.22465991973877

Token 1040: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.547789674485102e-05
    2. ' n' → logprob: -10.250035285949707
    3. '	n' → logprob: -18.250036239624023
    4. ')n' → logprob: -19.000036239624023
    5. '_n' → logprob: -20.875036239624023
    6. '[n' → logprob: -21.000036239624023
    7. '(n' → logprob: -21.125036239624023
    8. '=n' → logprob: -21.375036239624023
    9. '­n' → logprob: -21.375036239624023
    10. '$n' → logprob: -22.125036239624023

Token 1041: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4297805428504944
    2. ':
' → logprob: -1.0547804832458496
    3. '           ' → logprob: -7.42978048324585
    4. ' line' → logprob: -9.179780960083008
    5. '):
' → logprob: -9.304780960083008
    6. ' and' → logprob: -9.929780960083008
    7. '   ' → logprob: -10.304780960083008
    8. '       ' → logprob: -10.429780960083008
    9. '=' → logprob: -10.804780960083008
    10. '(line' → logprob: -10.929780960083008

Token 1042: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12005363404750824
    2. ' line' → logprob: -2.24505352973938
    3. 'line' → logprob: -5.120053768157959
    4. '           ' → logprob: -7.620053768157959
    5. '   ' → logprob: -8.2450532913208
    6. '#line' → logprob: -9.2450532913208
    7. '	           ' → logprob: -9.3700532913208
    8. 'next' → logprob: -9.4950532913208
    9. ' next' → logprob: -9.9950532913208
    10. '	line' → logprob: -10.1200532913208

Token 1043: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.09125086665153503
    2. ' line' → logprob: -2.5912508964538574
    3. '               ' → logprob: -4.841250896453857
    4. 'flag' → logprob: -6.341250896453857
    5. 'data' → logprob: -7.091250896453857
    6. 'try' → logprob: -7.591250896453857
    7. 'coords' → logprob: -8.2162504196167
    8. 'next' → logprob: -8.3412504196167
    9. '	line' → logprob: -9.4662504196167
    10. 'l' → logprob: -9.5912504196167

Token 1044: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06199076771736145
    2. '=' → logprob: -2.811990737915039
    3. '=line' → logprob: -10.686990737915039
    4. ' ' → logprob: -16.18699073791504
    5. ' =
' → logprob: -16.56199073791504
    6. 'line' → logprob: -17.06199073791504
    7. 's' → logprob: -17.31199073791504
    8. '=
' → logprob: -17.43699073791504
    9. '           ' → logprob: -17.56199073791504
    10. '＝' → logprob: -17.81199073791504

Token 1045: ' self' (ID: 1051)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5945355892181396
    2. 'self' → logprob: -0.8445355892181396
    3. ' next' → logprob: -4.094535827636719
    4. ' self' → logprob: -6.344535827636719
    5. '(next' → logprob: -12.719535827636719
    6. '_next' → logprob: -13.969535827636719
    7. '	next' → logprob: -15.969535827636719
    8. '(self' → logprob: -16.21953582763672
    9. '[next' → logprob: -16.34453582763672
    10. '
' → logprob: -16.59453582763672

Token 1046: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00046677692444063723
    2. '_source' → logprob: -9.000466346740723
    3. '_next' → logprob: -9.500466346740723
    4. '.__' → logprob: -9.625466346740723
    5. '.readline' → logprob: -9.875466346740723
    6. '.next' → logprob: -10.000466346740723
    7. '.' → logprob: -10.250466346740723
    8. 'source' → logprob: -10.625466346740723
    9. '_read' → logprob: -12.250466346740723
    10. '.source' → logprob: -12.500466346740723

Token 1047: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.0
    3. '_read' → logprob: -17.75
    4. 'next' → logprob: -18.375
    5. 'parse' → logprob: -18.75
    6. ' read' → logprob: -19.0
    7. '.read' → logprob: -19.625
    8. 'strip' → logprob: -19.875
    9. '(read' → logprob: -19.875
    10. '	read' → logprob: -20.125

Token 1048: '_non' (ID: 52193)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.5760834217071533
    2. '_non' → logprob: -0.8260834217071533
    3. ' non' → logprob: -9.701083183288574
    4. 'line' → logprob: -9.826083183288574
    5. 'Non' → logprob: -12.201083183288574
    6. 'nonnull' → logprob: -12.326083183288574
    7. '(non' → logprob: -12.576083183288574
    8. 'next' → logprob: -12.826083183288574
    9. '_empty' → logprob: -13.201083183288574
    10. '(line' → logprob: -13.326083183288574

Token 1049: '_empty' (ID: 35051)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -7.862962229410186e-05
    2. '_empty' → logprob: -9.500078201293945
    3. ' empty' → logprob: -12.750078201293945
    4. '-empty' → logprob: -14.875078201293945
    5. 'Empty' → logprob: -15.000078201293945
    6. '
' → logprob: -17.000078201293945
    7. 'blank' → logprob: -17.375078201293945
    8. 'emt' → logprob: -17.500078201293945
    9. 'line' → logprob: -18.750078201293945
    10. '.empty' → logprob: -19.000078201293945

Token 1050: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.16024149954319
    2. 'line' → logprob: -1.9102414846420288
    3. ' line' → logprob: -11.91024112701416
    4. '(line' → logprob: -12.16024112701416
    5. 'Line' → logprob: -12.78524112701416
    6. 'lin' → logprob: -13.78524112701416
    7. 'ine' → logprob: -14.41024112701416
    8. '_LINE' → logprob: -15.16024112701416
    9. 'aline' → logprob: -16.285242080688477
    10. '#line' → logprob: -16.410242080688477

Token 1051: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.0007125511183403432
    2. 'it' → logprob: -7.3757123947143555
    3. '(iter' → logprob: -10.000712394714355
    4. '[it' → logprob: -10.750712394714355
    5. '	it' → logprob: -12.250712394714355
    6. '(iterator' → logprob: -12.375712394714355
    7. '(' → logprob: -12.625712394714355
    8. 'def' → logprob: -13.375712394714355
    9. '               ' → logprob: -14.000712394714355
    10. '   ' → logprob: -14.375712394714355

Token 1052: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4907223880290985
    2. ')
' → logprob: -0.9907224178314209
    3. '(it' → logprob: -4.115722179412842
    4. '):
' → logprob: -9.99072265625
    5. ')
' → logprob: -10.24072265625
    6. '               ' → logprob: -10.36572265625
    7. ',' → logprob: -10.86572265625
    8. '           ' → logprob: -10.99072265625
    9. ')(' → logprob: -11.86572265625
    10. 'it' → logprob: -12.36572265625

Token 1053: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028797611594200134
    2. '<|end|>' → logprob: -6.502879619598389
    3. '           ' → logprob: -7.377879619598389
    4. '<|end|>' → logprob: -8.877880096435547
    5. ':' → logprob: -9.002880096435547
    6. ',' → logprob: -9.002880096435547
    7. ' =' → logprob: -9.877880096435547
    8. '                   ' → logprob: -10.377880096435547
    9. 'tokens' → logprob: -10.502880096435547
    10. '                
' → logprob: -10.627880096435547

Token 1054: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4566918909549713
    2. 'if' (adapté à ' if') → logprob: -1.206691861152649
    3. '               ' → logprob: -2.7066919803619385
    4. '           ' → logprob: -7.456691741943359
    5. ' ' → logprob: -10.33169174194336
    6. 'None' → logprob: -10.70669174194336
    7. ' None' → logprob: -10.83169174194336
    8. '	if' → logprob: -11.83169174194336
    9. 'If' → logprob: -12.20669174194336
    10. '                   ' → logprob: -12.83169174194336

Token 1055: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01814994215965271
    2. ' line' → logprob: -4.0181498527526855
    3. '	line' → logprob: -18.268150329589844
    4. 'not' → logprob: -18.643150329589844
    5. '(line' → logprob: -19.768150329589844
    6. ' not' → logprob: -20.268150329589844
    7. '[line' → logprob: -20.643150329589844
    8. '           ' → logprob: -20.893150329589844
    9. '#line' → logprob: -21.018150329589844
    10. 'lines' → logprob: -21.393150329589844

Token 1056: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014166799373924732
    2. 'is' → logprob: -4.264166831970215
    3. '	is' → logprob: -13.889166831970215
    4. ' None' → logprob: -14.889166831970215
    5. ' ' → logprob: -15.014166831970215
    6. '=None' → logprob: -15.389166831970215
    7. 'None' → logprob: -15.514166831970215
    8. ')' → logprob: -15.514166831970215
    9. '()' → logprob: -15.639166831970215
    10. ' ' → logprob: -15.639166831970215

Token 1057: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009117019944824278
    2. ' None' → logprob: -7.000911712646484
    3. '=None' → logprob: -16.625911712646484
    4. '(None' → logprob: -17.000911712646484
    5. 'none' → logprob: -17.375911712646484
    6. '_None' → logprob: -18.250911712646484
    7. 'not' → logprob: -18.875911712646484
    8. ',None' → logprob: -19.500911712646484
    9. '_none' → logprob: -19.875911712646484
    10. '                   ' → logprob: -20.500911712646484

Token 1058: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.33566734194755554
    2. ':' → logprob: -1.585667371749878
    3. '                   ' → logprob: -2.585667371749878
    4. '               ' → logprob: -5.460667133331299
    5. ',' → logprob: -8.210667610168457
    6. '           ' → logprob: -8.835667610168457
    7. '                       ' → logprob: -9.835667610168457
    8. ' or' → logprob: -9.835667610168457
    9. '):
' → logprob: -10.210667610168457
    10. '<|end|>' → logprob: -10.710667610168457

Token 1059: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000520981615409255
    2. '               ' → logprob: -8.375520706176758
    3. '                       ' → logprob: -8.875520706176758
    4. '           ' → logprob: -10.250520706176758
    5. '   ' → logprob: -10.375520706176758
    6. 'break' → logprob: -11.250520706176758
    7. ' ' → logprob: -11.625520706176758
    8. '                           ' → logprob: -11.875520706176758
    9. '                  ' → logprob: -11.875520706176758
    10. ' break' → logprob: -12.000520706176758

Token 1060: ' raise' (ID: 9338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2055799812078476
    2. ' break' → logprob: -1.7055799961090088
    3. '                   ' → logprob: -5.70557975769043
    4. 'return' → logprob: -8.20557975769043
    5. '                       ' → logprob: -8.20557975769043
    6. 'raise' (adapté à ' raise') → logprob: -8.95557975769043
    7. '               ' → logprob: -9.33057975769043
    8. '	break' → logprob: -10.33057975769043
    9. ' return' → logprob: -10.83057975769043
    10. ' raise' → logprob: -11.58057975769043

Token 1061: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.006809037644416094
    2. 'Value' → logprob: -5.256809234619141
    3. 'Runtime' → logprob: -7.006809234619141
    4. 'Stop' → logprob: -8.00680923461914
    5. ' EOF' → logprob: -8.00680923461914
    6. 'Exception' → logprob: -14.50680923461914
    7. ' Value' → logprob: -14.88180923461914
    8. ' Runtime' → logprob: -14.88180923461914
    9. '
' → logprob: -15.50680923461914
    10. 'Syntax' → logprob: -16.25680923461914

Token 1062: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -15.875
    3. 'error' → logprob: -17.375
    4. 'rror' → logprob: -17.625
    5. 'SError' → logprob: -20.75
    6. 'ERROR' → logprob: -20.875
    7. 'Exception' → logprob: -20.875
    8. 'Unexpected' → logprob: -21.0
    9. 'Warning' → logprob: -21.25
    10. 'LError' → logprob: -21.5

Token 1063: '("' (ID: 568)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008454650640487671
    2. '
' → logprob: -5.2584547996521
    3. '("' → logprob: -6.2584547996521
    4. '()
' → logprob: -7.7584547996521
    5. '                
' → logprob: -8.758454322814941
    6. ':' → logprob: -8.883454322814941
    7. '           ' → logprob: -9.133454322814941
    8. '()' → logprob: -9.383454322814941
    9. '                   ' → logprob: -9.883454322814941
    10. ',' → logprob: -9.883454322814941

Token 1064: 'Unexpected' (ID: 59338)
  Prédit: 'Unexpected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unexpected' → logprob: -0.00904515665024519
    2. ' Unexpected' → logprob: -4.884045124053955
    3. 'EOF' → logprob: -7.134045124053955
    4. 'Incomplete' → logprob: -8.634045600891113
    5. 'unexpected' → logprob: -8.884045600891113
    6. ' unexpected' → logprob: -9.509045600891113
    7. 'Expected' → logprob: -9.759045600891113
    8. '"' → logprob: -9.759045600891113
    9. 'Input' → logprob: -9.759045600891113
    10. '")' → logprob: -10.884045600891113

Token 1065: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.16093285381793976
    2. 'end' → logprob: -1.9109328985214233
    3. 'EOF' → logprob: -7.410933017730713
    4. ' EOF' → logprob: -9.285932540893555
    5. '_end' → logprob: -12.910932540893555
    6. 'END' → logprob: -13.535932540893555
    7. '                   ' → logprob: -13.910932540893555
    8. 'End' → logprob: -14.035932540893555
    9. '	end' → logprob: -14.160932540893555
    10. '           ' → logprob: -14.285932540893555

Token 1066: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.02161039412021637
    2. 'of' → logprob: -3.8966104984283447
    3. '               ' → logprob: -7.146610260009766
    4. '                   ' → logprob: -8.396610260009766
    5. '<|end|>' → logprob: -11.521610260009766
    6. '                ' → logprob: -11.646610260009766
    7. '           ' → logprob: -12.021610260009766
    8. '<|end|>' → logprob: -12.146610260009766
    9. '                    ' → logprob: -12.521610260009766
    10. '                       ' → logprob: -12.896610260009766

Token 1067: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023274948820471764
    2. ' input' → logprob: -3.7732748985290527
    3. 'file' → logprob: -10.773275375366211
    4. 'data' → logprob: -11.898275375366211
    5. 'source' → logprob: -14.648275375366211
    6. '
' → logprob: -14.773275375366211
    7. 'Input' → logprob: -15.773275375366211
    8. '_input' → logprob: -15.773275375366211
    9. ' file' → logprob: -15.898275375366211
    10. ' data' → logprob: -16.14827537536621

Token 1068: ' while' (ID: 2049)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.017147263512015343
    2. '")' → logprob: -4.517147064208984
    3. '               ' → logprob: -5.142147064208984
    4. '           ' → logprob: -9.392147064208984
    5. '")
' → logprob: -9.767147064208984
    6. ' ")
' → logprob: -10.892147064208984
    7. '")

' → logprob: -11.267147064208984
    8. ')
' → logprob: -11.767147064208984
    9. '       ' → logprob: -11.767147064208984
    10. '.")
' → logprob: -11.892147064208984

Token 1069: ' reading' (ID: 6085)
  Prédit: 'reading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reading' → logprob: -0.4113409221172333
    2. 'par' → logprob: -1.1613409519195557
    3. ' reading' → logprob: -4.036340713500977
    4. ' parsing' → logprob: -5.036340713500977
    5. ' par' → logprob: -12.786340713500977
    6. 'collect' → logprob: -12.911340713500977
    7. '_par' → logprob: -14.036340713500977
    8. 'trying' → logprob: -14.161340713500977
    9. 'Parsing' → logprob: -14.411340713500977
    10. '-par' → logprob: -14.536340713500977

Token 1070: ' flags' (ID: 17376)
  Prédit: ' flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flags' → logprob: -0.43044835329055786
    2. 'flags' → logprob: -1.055448293685913
    3. 'flag' → logprob: -7.055448532104492
    4. ' flag' → logprob: -7.180448532104492
    5. 'points' → logprob: -10.305448532104492
    6. ' points' → logprob: -10.430448532104492
    7. 'cases' → logprob: -11.680448532104492
    8. ' coordinates' → logprob: -11.805448532104492
    9. 'coordinates' → logprob: -11.930448532104492
    10. '_flags' → logprob: -12.180448532104492

Token 1071: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.12754520773887634
    2. '               ' → logprob: -2.252545118331909
    3. '")' → logprob: -4.252545356750488
    4. '           ' → logprob: -9.127545356750488
    5. '")
' → logprob: -9.127545356750488
    6. ')
' → logprob: -9.877545356750488
    7. '.")
' → logprob: -10.752545356750488
    8. ')")
' → logprob: -10.752545356750488
    9. ')' → logprob: -11.002545356750488
    10. '       ' → logprob: -11.127545356750488

Token 1072: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003265255654696375
    2. '<|end|>' → logprob: -8.875326156616211
    3. '                
' → logprob: -9.625326156616211
    4. 'tokens' → logprob: -10.250326156616211
    5. '       ' → logprob: -10.750326156616211
    6. ' tokens' → logprob: -11.250326156616211
    7. ',' → logprob: -11.375326156616211
    8. '           ' → logprob: -11.750326156616211
    9. '                   ' → logprob: -12.000326156616211
    10. '                ' → logprob: -12.125326156616211

Token 1073: ' parts' (ID: 7881)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2624667286872864
    2. '               ' → logprob: -2.1374666690826416
    3. ' x' → logprob: -2.7624666690826416
    4. ' parts' → logprob: -4.387466907501221
    5. 'parts' (adapté à ' parts') → logprob: -4.512466907501221
    6. 'points' → logprob: -4.887466907501221
    7. '           ' → logprob: -5.137466907501221
    8. 'tokens' → logprob: -5.387466907501221
    9. 'coords' → logprob: -6.137466907501221
    10. ' points' → logprob: -6.387466907501221

Token 1074: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029755352064967155
    2. ' =' → logprob: -3.5297553539276123
    3. '=line' → logprob: -12.279755592346191
    4. '=
' → logprob: -16.779754638671875
    5. '＝' → logprob: -17.029754638671875
    6. 'tokens' → logprob: -17.029754638671875
    7. ')=' → logprob: -18.654754638671875
    8. '<|end|>' → logprob: -19.029754638671875
    9. ')' → logprob: -19.154754638671875
    10. ' =
' → logprob: -19.154754638671875

Token 1075: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004353181866463274
    2. ' line' → logprob: -7.7504353523254395
    3. '[line' → logprob: -12.750434875488281
    4. 'list' → logprob: -13.250434875488281
    5. '(line' → logprob: -18.50043487548828
    6. '=line' → logprob: -19.75043487548828
    7. '[' → logprob: -20.00043487548828
    8. '	line' → logprob: -20.50043487548828
    9. ' list' → logprob: -22.00043487548828
    10. ' [' → logprob: -22.50043487548828

Token 1076: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.321279376745224
    2. '.split' → logprob: -1.4462794065475464
    3. '.' → logprob: -3.821279287338257
    4. '.strip' → logprob: -4.571279525756836
    5. ' =' → logprob: -5.071279525756836
    6. ' .' → logprob: -8.446279525756836
    7. '=line' → logprob: -8.821279525756836
    8. 'split' → logprob: -8.946279525756836
    9. '=.' → logprob: -9.696279525756836
    10. '.s' → logprob: -10.071279525756836

Token 1077: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016218038217630237
    2. '()
' → logprob: -9.000162124633789
    3. '(' → logprob: -10.750162124633789
    4. '('' → logprob: -11.750162124633789
    5. '(None' → logprob: -12.750162124633789
    6. '())' → logprob: -12.875162124633789
    7. '();' → logprob: -13.875162124633789
    8. '(),' → logprob: -14.875162124633789
    9. 'None' → logprob: -14.875162124633789
    10. '()\' → logprob: -15.000162124633789

Token 1078: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017755765293259174
    2. '<|end|>' → logprob: -9.500177383422852
    3. ' if' → logprob: -11.000177383422852
    4. '       ' → logprob: -11.125177383422852
    5. ',' → logprob: -11.250177383422852
    6. '[' → logprob: -11.375177383422852
    7. '                
' → logprob: -12.125177383422852
    8. '		       ' → logprob: -12.125177383422852
    9. '```' → logprob: -12.375177383422852
    10. ' for' → logprob: -12.375177383422852

Token 1079: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18074746429920197
    2. ' for' → logprob: -2.6807475090026855
    3. 'x' → logprob: -2.8057475090026855
    4. 'flags' → logprob: -3.8057475090026855
    5. '               ' → logprob: -4.6807475090026855
    6. ' x' → logprob: -6.1807475090026855
    7. '           ' → logprob: -6.6807475090026855
    8. 'while' → logprob: -7.8057475090026855
    9. 'coords' → logprob: -8.430747032165527
    10. 'if' → logprob: -8.555747032165527

Token 1080: ' i' (ID: 575)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.3238106369972229
    2. 'p' → logprob: -1.3238105773925781
    3. 'j' → logprob: -5.323810577392578
    4. 'i' → logprob: -5.573810577392578
    5. ' part' → logprob: -7.073810577392578
    6. 'pt' → logprob: -7.948810577392578
    7. 'idx' → logprob: -8.073810577392578
    8. ' p' → logprob: -8.573810577392578
    9. 'token' → logprob: -10.573810577392578
    10. '_part' → logprob: -10.698810577392578

Token 1081: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029856937006115913
    2. 'in' → logprob: -3.5298569202423096
    3. ',' → logprob: -9.77985668182373
    4. '_in' → logprob: -10.65485668182373
    5. '	in' → logprob: -12.15485668182373
    6. ' ' → logprob: -12.40485668182373
    7. '_' → logprob: -12.65485668182373
    8. '   ' → logprob: -12.65485668182373
    9. '  ' → logprob: -13.27985668182373
    10. 'import' → logprob: -13.40485668182373

Token 1082: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006718452088534832
    2. ' range' → logprob: -5.006718635559082
    3. 'parts' → logprob: -12.881718635559082
    4. '	range' → logprob: -15.381718635559082
    5. '[' → logprob: -15.756718635559082
    6. '
' → logprob: -16.881717681884766
    7. '0' → logprob: -16.881717681884766
    8. ' parts' → logprob: -17.631717681884766
    9. '(range' → logprob: -17.756717681884766
    10. ' ' → logprob: -17.881717681884766

Token 1083: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5405651926994324
    2. '(' → logprob: -1.5405652523040771
    3. 'len' → logprob: -2.290565252304077
    4. '(len' → logprob: -2.290565252304077
    5. ' len' → logprob: -7.665565013885498
    6. '2' → logprob: -8.415565490722656
    7. ' ' → logprob: -8.790565490722656
    8. '1' → logprob: -10.540565490722656
    9. '	len' → logprob: -11.915565490722656
    10. ',len' → logprob: -12.165565490722656

Token 1084: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005311427637934685
    2. 'len' → logprob: -5.255311489105225
    3. ' ' → logprob: -9.880311012268066
    4. ' len' → logprob: -10.880311012268066
    5. '2' → logprob: -13.130311012268066
    6. '
' → logprob: -13.380311012268066
    7. 'min' → logprob: -13.505311012268066
    8. '   ' → logprob: -14.505311012268066
    9. '(len' → logprob: -14.630311012268066
    10. '1' → logprob: -14.755311012268066

Token 1085: ',' (ID: 11)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9674741625785828
    2. ',' → logprob: -1.0924742221832275
    3. ',len' → logprob: -1.9674742221832275
    4. '0' → logprob: -2.0924742221832275
    5. '2' → logprob: -4.342473983764648
    6. ' len' → logprob: -5.217473983764648
    7. ' ' → logprob: -7.092473983764648
    8. '(len' → logprob: -7.967473983764648
    9. 'i' → logprob: -8.092473983764648
    10. '1' → logprob: -8.217473983764648

Token 1086: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009117019944824278
    2. ' len' → logprob: -7.000911712646484
    3. '2' → logprob: -16.625911712646484
    4. '(len' → logprob: -17.125911712646484
    5. '	len' → logprob: -17.125911712646484
    6. ',len' → logprob: -18.000911712646484
    7. '=len' → logprob: -19.375911712646484
    8. '[len' → logprob: -19.625911712646484
    9. '<len' → logprob: -20.625911712646484
    10. 'min' → logprob: -21.125911712646484

Token 1087: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -3.166338137816638e-05
    2. 'parts' → logprob: -10.375031471252441
    3. '(' → logprob: -15.625031471252441
    4. ' parts' → logprob: -15.875031471252441
    5. ',' → logprob: -18.500032424926758
    6. ')' → logprob: -18.875032424926758
    7. ' (' → logprob: -18.875032424926758
    8. 'Parts' → logprob: -19.250032424926758
    9. '
' → logprob: -19.250032424926758
    10. '(points' → logprob: -20.125032424926758

Token 1088: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017958412354346365
    2. ' ,' → logprob: -8.750179290771484
    3. '(),' → logprob: -11.125179290771484
    4. '   ' → logprob: -13.500179290771484
    5. '           ' → logprob: -13.500179290771484
    6. ',
' → logprob: -14.000179290771484
    7. '       ' → logprob: -14.125179290771484
    8. '),' → logprob: -14.125179290771484
    9. '):
' → logprob: -15.000179290771484
    10. '(' → logprob: -16.000179290771484

Token 1089: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -18.875030517578125
    4. '۲' → logprob: -19.000030517578125
    5. '２' → logprob: -19.125030517578125
    6. '  ' → logprob: -19.625030517578125
    7. '```' → logprob: -20.500030517578125
    8. '٢' → logprob: -21.000030517578125
    9. '           ' → logprob: -21.875030517578125
    10. '
' → logprob: -21.875030517578125

Token 1090: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '
' → logprob: -17.375019073486328
    4. '۲' → logprob: -18.125019073486328
    5. '   ' → logprob: -18.250019073486328
    6. '２' → logprob: -19.375019073486328
    7. '  ' → logprob: -19.625019073486328
    8. '```' → logprob: -20.000019073486328
    9. '٢' → logprob: -20.375019073486328
    10. '22' → logprob: -20.500019073486328

Token 1091: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12421765178442001
    2. ':
' → logprob: -2.3742177486419678
    3. ',' → logprob: -4.249217510223389
    4. '           ' → logprob: -5.499217510223389
    5. ':' → logprob: -5.999217510223389
    6. '               ' → logprob: -6.624217510223389
    7. '):' → logprob: -6.999217510223389
    8. '                   ' → logprob: -8.124217987060547
    9. '       ' → logprob: -9.249217987060547
    10. ',
' → logprob: -9.999217987060547

Token 1092: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016275763511657715
    2. 'flags' → logprob: -4.891275882720947
    3. 'x' → logprob: -5.766275882720947
    4. ' x' → logprob: -6.016275882720947
    5. ' flags' → logprob: -7.016275882720947
    6. '                       ' → logprob: -7.641275882720947
    7. 'flag' → logprob: -7.891275882720947
    8. '                           ' → logprob: -8.141275405883789
    9. '	flags' → logprob: -8.266275405883789
    10. '   ' → logprob: -8.516275405883789

Token 1093: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.007635732181370258
    2. ' x' → logprob: -5.507635593414307
    3. '                       ' → logprob: -5.757635593414307
    4. 'flags' → logprob: -8.007636070251465
    5. '	x' → logprob: -10.632636070251465
    6. '                   ' → logprob: -11.757636070251465
    7. '   ' → logprob: -11.882636070251465
    8. 'if' → logprob: -13.007636070251465
    9. ' flags' → logprob: -13.007636070251465
    10. 'coords' → logprob: -13.007636070251465

Token 1094: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7004638910293579
    2. '=' → logprob: -0.7004638910293579
    3. ' =' → logprob: -4.950463771820068
    4. '=int' → logprob: -9.450464248657227
    5. ' ,' → logprob: -9.700464248657227
    6. '=
' → logprob: -10.950464248657227
    7. '=float' → logprob: -11.325464248657227
    8. ',
' → logprob: -11.450464248657227
    9. '<|end|>' → logprob: -12.450464248657227
    10. ',y' → logprob: -12.700464248657227

Token 1095: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015686646802350879
    2. ' int' → logprob: -6.501568794250488
    3. 'float' → logprob: -9.626568794250488
    4. ' float' → logprob: -14.751568794250488
    5. '  ' → logprob: -17.751567840576172
    6. '<int' → logprob: -17.751567840576172
    7. '   ' → logprob: -17.876567840576172
    8. '	int' → logprob: -18.251567840576172
    9. '=int' → logprob: -18.251567840576172
    10. '[int' → logprob: -18.626567840576172

Token 1096: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0009120595059357584
    2. 'parts' → logprob: -7.000912189483643
    3. ' parts' → logprob: -14.875911712646484
    4. '(' → logprob: -16.625911712646484
    5. '(part' → logprob: -17.625911712646484
    6. '(
' → logprob: -18.500911712646484
    7. 'part' → logprob: -19.750911712646484
    8. '_parts' → logprob: -20.625911712646484
    9. 'Parts' → logprob: -20.750911712646484
    10. '.parts' → logprob: -21.000911712646484

Token 1097: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04211782291531563
    2. '[' → logprob: -3.4171178340911865
    3. '(i' → logprob: -5.167117595672607
    4. '(parts' → logprob: -6.292117595672607
    5. ')' → logprob: -7.917117595672607
    6. '[
' → logprob: -8.167118072509766
    7. '(' → logprob: -9.917118072509766
    8. '   ' → logprob: -10.167118072509766
    9. ',' → logprob: -10.167118072509766
    10. '),' → logprob: -10.917118072509766

Token 1098: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.30462580919265747
    2. ')' → logprob: -1.4296257495880127
    3. '])
' → logprob: -3.9296257495880127
    4. '])' → logprob: -5.804625988006592
    5. '<|end|>' → logprob: -8.929625511169434
    6. '+' → logprob: -9.554625511169434
    7. '),' → logprob: -9.929625511169434
    8. '                   ' → logprob: -10.179625511169434
    9. ')]
' → logprob: -10.679625511169434
    10. ')
' → logprob: -10.804625511169434

Token 1099: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005640789866447449
    2. ',' → logprob: -6.130640983581543
    3. '                    ' → logprob: -6.880640983581543
    4. '           ' → logprob: -7.380640983581543
    5. 'x' → logprob: -7.880640983581543
    6. 'y' → logprob: -8.005640983581543
    7. '               ' → logprob: -8.005640983581543
    8. '                       ' → logprob: -8.380640983581543
    9. '       ' → logprob: -9.130640983581543
    10. '                     ' → logprob: -9.630640983581543

Token 1100: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0019323242595419288
    2. ' y' → logprob: -6.251932144165039
    3. '                   ' → logprob: -13.251932144165039
    4. '	y' → logprob: -13.251932144165039
    5. '   ' → logprob: -16.00193214416504
    6. '
' → logprob: -18.50193214416504
    7. '                    ' → logprob: -18.62693214416504
    8. '                       ' → logprob: -18.87693214416504
    9. ' ' → logprob: -19.12693214416504
    10. ',y' → logprob: -19.37693214416504

Token 1101: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891975343227386
    2. ' =' → logprob: -2.5789196491241455
    3. '=
' → logprob: -10.703919410705566
    4. '=int' → logprob: -12.578919410705566
    5. ' =
' → logprob: -13.328919410705566
    6. '<|end|>' → logprob: -13.453919410705566
    7. ',' → logprob: -15.203919410705566
    8. ')' → logprob: -15.578919410705566
    9. '=

' → logprob: -15.703919410705566
    10. ' ' → logprob: -15.828919410705566

Token 1102: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012356207298580557
    2. ' int' → logprob: -9.000123977661133
    3. '=int' → logprob: -17.000123977661133
    4. '[int' → logprob: -17.625123977661133
    5. '(int' → logprob: -19.125123977661133
    6. '   ' → logprob: -19.750123977661133
    7. '<int' → logprob: -19.750123977661133
    8. ':int' → logprob: -20.375123977661133
    9. '
' → logprob: -20.625123977661133
    10. '                   ' → logprob: -21.000123977661133

Token 1103: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.5788927674293518
    2. 'int' → logprob: -0.8288927674293518
    3. 'parts' → logprob: -6.203892707824707
    4. '[int' → logprob: -8.078892707824707
    5. ' int' → logprob: -8.203892707824707
    6. '(int' → logprob: -8.453892707824707
    7. ' parts' → logprob: -9.578892707824707
    8. '=int' → logprob: -10.328892707824707
    9. '
' → logprob: -11.953892707824707
    10. ')' → logprob: -12.078892707824707

Token 1104: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005715019651688635
    2. '+' → logprob: -7.7505717277526855
    3. 'i' → logprob: -9.375571250915527
    4. '{i' → logprob: -10.250571250915527
    5. '+i' → logprob: -11.625571250915527
    6. '(i' → logprob: -12.250571250915527
    7. '```' → logprob: -13.250571250915527
    8. '[j' → logprob: -13.875571250915527
    9. '[++' → logprob: -14.500571250915527
    10. '{
' → logprob: -14.625571250915527

Token 1105: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.111979357432574e-05
    2. '+i' → logprob: -10.25007152557373
    3. 'i' → logprob: -10.87507152557373
    4. ' +' → logprob: -11.37507152557373
    5. '1' → logprob: -12.75007152557373
    6. '+
' → logprob: -13.37507152557373
    7. '+j' → logprob: -15.12507152557373
    8. '[i' → logprob: -15.75007152557373
    9. ']+' → logprob: -16.625070571899414
    10. '(i' → logprob: -17.125070571899414

Token 1106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '0' → logprob: -21.25
    4. '   ' → logprob: -21.375
    5. '１' → logprob: -21.625
    6. 'i' → logprob: -22.25
    7. '۱' → logprob: -22.875
    8. '```' → logprob: -23.125
    9. '
' → logprob: -23.375
    10. '১' → logprob: -23.75

Token 1107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. 'i' → logprob: -18.375
    4. '0' → logprob: -19.625
    5. '１' → logprob: -20.625
    6. '
' → logprob: -20.875
    7. '   ' → logprob: -21.25
    8. 'int' → logprob: -21.75
    9. '۱' → logprob: -22.25
    10. '```' → logprob: -22.25

Token 1108: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16029226779937744
    2. ')
' → logprob: -1.9102922677993774
    3. ')
' → logprob: -10.410292625427246
    4. '                   ' → logprob: -11.660292625427246
    5. ')`
' → logprob: -11.910292625427246
    6. '               ' → logprob: -12.160292625427246
    7. ')`' → logprob: -12.785292625427246
    8. '       ' → logprob: -13.035292625427246
    9. ' )' → logprob: -13.160292625427246
    10. ')

' → logprob: -13.285292625427246

Token 1109: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005500668194144964
    2. ',' → logprob: -6.380500793457031
    3. '               ' → logprob: -6.505500793457031
    4. '<|end|>' → logprob: -7.130500793457031
    5. '                       ' → logprob: -8.005500793457031
    6. '           ' → logprob: -8.130500793457031
    7. 'flags' → logprob: -8.380500793457031
    8. '                    
' → logprob: -9.005500793457031
    9. '(flags' → logprob: -9.755500793457031
    10. 'flag' → logprob: -10.130500793457031

Token 1110: ' flags' (ID: 17376)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flags' (adapté à ' flags') → logprob: -0.0027920419815927744
    2. ' flags' → logprob: -6.377791881561279
    3. '                   ' → logprob: -6.877791881561279
    4. '           ' → logprob: -10.377792358398438
    5. '               ' → logprob: -11.127792358398438
    6. '	flags' → logprob: -11.752792358398438
    7. 'flag' → logprob: -12.877792358398438
    8. '(flags' → logprob: -14.002792358398438
    9. '   ' → logprob: -14.377792358398438
    10. '                       ' → logprob: -15.002792358398438

Token 1111: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00024132427643053234
    2. '.' → logprob: -8.37524127960205
    3. ').' → logprob: -12.25024127960205
    4. ' .' → logprob: -13.12524127960205
    5. '.extend' → logprob: -13.37524127960205
    6. 'append' → logprob: -13.50024127960205
    7. '.Append' → logprob: -15.25024127960205
    8. ',' → logprob: -16.000242233276367
    9. '.app' → logprob: -16.000242233276367
    10. '_append' → logprob: -16.375242233276367

Token 1112: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0012222514487802982
    2. '(' → logprob: -6.751222133636475
    3. '(x' → logprob: -9.876222610473633
    4. '(
' → logprob: -15.626222610473633
    5. ' (' → logprob: -15.876222610473633
    6. '   ' → logprob: -16.251222610473633
    7. '(tuple' → logprob: -16.501222610473633
    8. '(T' → logprob: -17.001222610473633
    9. ' ((' → logprob: -17.126222610473633
    10. '(("' → logprob: -18.501222610473633

Token 1113: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8624639324116288e-06
    2. ' x' → logprob: -13.250001907348633
    3. ')x' → logprob: -18.625001907348633
    4. '(x' → logprob: -18.875001907348633
    5. '	x' → logprob: -19.875001907348633
    6. 'flags' → logprob: -20.000001907348633
    7. '"x' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.125001907348633
    9. ')' → logprob: -21.500001907348633
    10. '{x' → logprob: -21.500001907348633

Token 1114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4894986785948277e-05
    2. ',
' → logprob: -10.500044822692871
    3. ' ,' → logprob: -12.125044822692871
    4. '<|end|>' → logprob: -12.125044822692871
    5. ',y' → logprob: -12.250044822692871
    6. '‌,' → logprob: -15.375044822692871
    7. ')' → logprob: -15.375044822692871
    8. '
' → logprob: -15.625044822692871
    9. ',user' → logprob: -15.875044822692871
    10. '),' → logprob: -15.875044822692871

Token 1115: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.493430894101039e-05
    2. ' y' → logprob: -9.500075340270996
    3. '	y' → logprob: -19.62507438659668
    4. '   ' → logprob: -19.75007438659668
    5. ' ' → logprob: -20.00007438659668
    6. ')y' → logprob: -20.25007438659668
    7. '                   ' → logprob: -20.62507438659668
    8. '    ' → logprob: -20.75007438659668
    9. '
' → logprob: -20.87507438659668
    10. '  ' → logprob: -21.37507438659668

Token 1116: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38707515597343445
    2. '))' → logprob: -1.1370751857757568
    3. '))
' → logprob: -9.262075424194336
    4. ')
' → logprob: -9.262075424194336
    5. ')))' → logprob: -12.512075424194336
    6. ')}' → logprob: -12.637075424194336
    7. '),' → logprob: -13.637075424194336
    8. ')`' → logprob: -13.762075424194336
    9. ' )' → logprob: -14.012075424194336
    10. '));' → logprob: -14.262075424194336

Token 1117: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1118: ' yield' (ID: 14376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18610894680023193
    2. '       ' → logprob: -1.811108946800232
    3. '<|end|>' → logprob: -6.0611090660095215
    4. '
' → logprob: -6.6861090660095215
    5. 'yield' (adapté à ' yield') → logprob: -6.9361090660095215
    6. ' yield' → logprob: -7.4361090660095215
    7. 'return' → logprob: -7.4361090660095215
    8. ' return' → logprob: -8.311108589172363
    9. '   ' → logprob: -9.061108589172363
    10. '	yield' → logprob: -10.311108589172363

Token 1119: ' flags' (ID: 17376)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flags' → logprob: -0.0010447168024256825
    2. ' flags' → logprob: -6.876044750213623
    3. '(flags' → logprob: -11.626044273376465
    4. '[' → logprob: -13.876044273376465
    5. '[(' → logprob: -14.126044273376465
    6. 'flag' → logprob: -14.751044273376465
    7. '	flags' → logprob: -14.751044273376465
    8. '   ' → logprob: -15.876044273376465
    9. '.flags' → logprob: -16.00104522705078
    10. ' [' → logprob: -16.25104522705078

Token 1120: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029836803674697876
    2. '<|end|>' → logprob: -3.779836893081665
    3. '
' → logprob: -5.654836654663086
    4. 'def' → logprob: -6.404836654663086
    5. '```' → logprob: -7.404836654663086
    6. '    
' → logprob: -7.779836654663086
    7. '<|end|>' → logprob: -8.154836654663086
    8. '       ' → logprob: -10.904836654663086
    9. ' def' → logprob: -11.154836654663086
    10. ')' → logprob: -11.279836654663086

Token 1122: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11890389025211334
    2. '   ' → logprob: -2.368903875350952
    3. ' def' → logprob: -4.243904113769531
    4. '
' → logprob: -5.493904113769531
    5. '    
' → logprob: -10.618904113769531
    6. ' ' → logprob: -11.243904113769531
    7. '@' (adapté à ' @') → logprob: -11.618904113769531
    8. '_def' → logprob: -12.118904113769531
    9. ' 
' → logprob: -12.618904113769531
    10. '	def' → logprob: -12.743904113769531

Token 1123: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -2.339278580620885e-06
    2. 'classmethod' → logprob: -13.000001907348633
    3. 'static' → logprob: -17.750001907348633
    4. 'property' → logprob: -18.500001907348633
    5. '_static' → logprob: -21.875001907348633
    6. ' static' → logprob: -22.500001907348633
    7. '静' → logprob: -23.625001907348633
    8. '@' → logprob: -24.000001907348633
    9. 'Static' → logprob: -24.000001907348633
    10. '
' → logprob: -26.000001907348633

Token 1124: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45119503140449524
    2. '
' → logprob: -1.4511950016021729
    3. '   ' → logprob: -2.076195001602173
    4. ' def' → logprob: -5.701195240020752
    5. '	def' → logprob: -10.076194763183594
    6. '    
' → logprob: -10.576194763183594
    7. '
' → logprob: -11.576194763183594
    8. '_def' → logprob: -12.201194763183594
    9. '  ' → logprob: -12.951194763183594
    10. ' ' → logprob: -13.201194763183594

Token 1125: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004399617202579975
    2. '
' → logprob: -5.62939977645874
    3. '   ' → logprob: -7.62939977645874
    4. ' def' → logprob: -8.129399299621582
    5. '_def' → logprob: -12.129399299621582
    6. '    
' → logprob: -12.254399299621582
    7. '	def' → logprob: -12.254399299621582
    8. '```' → logprob: -13.254399299621582
    9. '
' → logprob: -14.004399299621582
    10. '  
' → logprob: -14.629399299621582

Token 1126: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.2729995988775045e-06
    2. ' def' → logprob: -12.250006675720215
    3. '
' → logprob: -13.875006675720215
    4. '   ' → logprob: -14.625006675720215
    5. '    
' → logprob: -18.6250057220459
    6. '	def' → logprob: -18.6250057220459
    7. '_def' → logprob: -21.1250057220459
    8. '```' → logprob: -21.1250057220459
    9. '\' → logprob: -22.1250057220459
    10. ' ' → logprob: -22.2500057220459

Token 1127: ' _' (ID: 1175)
  Prédit: '_read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.000229046301683411
    2. 'def' → logprob: -8.625228881835938
    3. 'read' → logprob: -10.125228881835938
    4. '_skip' → logprob: -12.000228881835938
    5. '_write' → logprob: -14.375228881835938
    6. '_reads' → logprob: -14.625228881835938
    7. '
' → logprob: -14.875228881835938
    8. '_def' → logprob: -15.125228881835938
    9. '_non' → logprob: -15.250228881835938
    10. '_try' → logprob: -15.750228881835938

Token 1128: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -4.320199877838604e-07
    2. '_read' → logprob: -15.0
    3. '(read' → logprob: -19.0
    4. 'def' → logprob: -19.0
    5. ' read' → logprob: -19.625
    6. '
' → logprob: -21.75
    7. '	read' → logprob: -21.75
    8. '.read' → logprob: -22.375
    9. 'staticmethod' → logprob: -23.0
    10. 'strip' → logprob: -23.75

Token 1129: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.1269354522228241
    2. 'non' → logprob: -2.1269354820251465
    3. 'def' → logprob: -12.251935005187988
    4. '
' → logprob: -13.626935005187988
    5. 'Non' → logprob: -14.251935005187988
    6. ' non' → logprob: -15.126935005187988
    7. 'nonnull' → logprob: -15.376935005187988
    8. 'line' → logprob: -17.126935958862305
    9. '_n' → logprob: -17.626935958862305
    10. '非' → logprob: -17.876935958862305

Token 1130: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.1270502209663391
    2. 'empty' → logprob: -2.1270501613616943
    3. 'Empty' → logprob: -9.627050399780273
    4. '_EMPTY' → logprob: -10.627050399780273
    5. 'staticmethod' → logprob: -11.377050399780273
    6. 'def' → logprob: -11.752050399780273
    7. 'EMPTY' → logprob: -12.752050399780273
    8. ' empty' → logprob: -13.127050399780273
    9. '-empty' → logprob: -13.127050399780273
    10. '_blank' → logprob: -13.127050399780273

Token 1131: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.25193077325820923
    2. 'line' → logprob: -1.5019307136535645
    3. '
' → logprob: -13.876931190490723
    4. 'def' → logprob: -14.876931190490723
    5. ' line' → logprob: -15.376931190490723
    6. 'Line' → logprob: -16.501930236816406
    7. 'lin' → logprob: -16.876930236816406
    8. '```' → logprob: -17.501930236816406
    9. '_LINE' → logprob: -18.001930236816406
    10. '_lines' → logprob: -18.126930236816406

Token 1132: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.04259682074189186
    2. '(iter' → logprob: -3.5425968170166016
    3. '(iterator' → logprob: -4.542596817016602
    4. '(' → logprob: -6.917596817016602
    5. '(line' → logprob: -7.167596817016602
    6. '(lines' → logprob: -9.042596817016602
    7. '(source' → logprob: -9.667596817016602
    8. 'def' → logprob: -9.792596817016602
    9. 'it' → logprob: -10.792596817016602
    10. '(
' → logprob: -10.917596817016602

Token 1133: ')' (ID: 8)
  Prédit: '(it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.0022632593754678965
    2. '(iter' → logprob: -6.752263069152832
    3. '(iterator' → logprob: -6.877263069152832
    4. '(' → logprob: -10.877263069152832
    5. '(line' → logprob: -10.877263069152832
    6. '   ' → logprob: -12.002263069152832
    7. ' (' → logprob: -12.127263069152832
    8. ')' → logprob: -12.752263069152832
    9. 'def' → logprob: -13.002263069152832
    10. 'it' → logprob: -13.377263069152832

Token 1134: ' ->' (ID: 2747)
  Prédit: '(it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.0021374132484197617
    2. '(iter' → logprob: -6.752137184143066
    3. '(iterator' → logprob: -7.377137184143066
    4. '(next' → logprob: -8.502137184143066
    5. '(line' → logprob: -9.752137184143066
    6. '(' → logprob: -9.877137184143066
    7. ' (' → logprob: -10.877137184143066
    8. '(lines' → logprob: -13.502137184143066
    9. '(if' → logprob: -13.627137184143066
    10. '(
' → logprob: -13.752137184143066

Token 1135: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.06264140456914902
    2. 'str' → logprob: -2.8126413822174072
    3. ' Optional' → logprob: -7.312641620635986
    4. 'optional' → logprob: -13.187641143798828
    5. ' str' → logprob: -13.312641143798828
    6. '(Optional' → logprob: -13.687641143798828
    7. 'next' → logprob: -14.062641143798828
    8. '_optional' → logprob: -14.937641143798828
    9. '[str' → logprob: -15.187641143798828
    10. '	Optional' → logprob: -15.187641143798828

Token 1136: '[str' (ID: 33439)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6931636333465576
    2. '[str' → logprob: -0.6931636333465576
    3. '(str' → logprob: -11.818163871765137
    4. ' str' → logprob: -12.318163871765137
    5. '=str' → logprob: -12.693163871765137
    6. ':str' → logprob: -13.818163871765137
    7. '	str' → logprob: -15.193163871765137
    8. 'Str' → logprob: -16.94316291809082
    9. '_str' → logprob: -16.94316291809082
    10. ',str' → logprob: -16.94316291809082

Token 1137: ']:
' (ID: 22152)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.7567527294158936
    2. '():' → logprob: -1.0067527294158936
    3. '(it' → logprob: -3.1317527294158936
    4. ':' → logprob: -3.5067527294158936
    5. '(iterator' → logprob: -3.5067527294158936
    6. '(' → logprob: -4.006752967834473
    7. '(line' → logprob: -4.131752967834473
    8. '(iter' → logprob: -4.881752967834473
    9. '):
' → logprob: -5.131752967834473
    10. ':
' → logprob: -5.256752967834473

Token 1138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04158908501267433
    2. 'for' → logprob: -3.9165890216827393
    3. '   ' → logprob: -4.291589260101318
    4. 'try' → logprob: -5.041589260101318
    5. ' for' → logprob: -7.541589260101318
    6. 'while' → logprob: -9.16658878326416
    7. ' try' → logprob: -10.54158878326416
    8. '```' → logprob: -11.79158878326416
    9. ' ' → logprob: -11.91658878326416
    10. ' while' → logprob: -12.91658878326416

Token 1139: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025173963513225317
    2. ' for' → logprob: -6.252517223358154
    3. 'while' → logprob: -7.752517223358154
    4. 'try' → logprob: -9.002517700195312
    5. '   ' → logprob: -10.377517700195312
    6. ' while' → logprob: -13.127517700195312
    7. '
' → logprob: -13.502517700195312
    8. '       ' → logprob: -14.252517700195312
    9. '```' → logprob: -15.002517700195312
    10. ' try' → logprob: -15.752517700195312

Token 1140: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.696889623621246e-06
    2. 'raw' → logprob: -13.50000286102295
    3. ' line' → logprob: -13.75000286102295
    4. 'l' → logprob: -16.000001907348633
    5. 'ln' → logprob: -17.375001907348633
    6. '_line' → logprob: -18.250001907348633
    7. 'lin' → logprob: -18.500001907348633
    8. '	line' → logprob: -18.625001907348633
    9. '(line' → logprob: -20.000001907348633
    10. 's' → logprob: -20.125001907348633

Token 1141: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021895181853324175
    2. 'in' → logprob: -6.127189636230469
    3. '	in' → logprob: -12.877189636230469
    4. 'import' → logprob: -14.752189636230469
    5. 'line' → logprob: -15.377189636230469
    6. '       ' → logprob: -15.502189636230469
    7. '   ' → logprob: -15.877189636230469
    8. 's' → logprob: -15.877189636230469
    9. '           ' → logprob: -16.00218963623047
    10. ' ' → logprob: -16.12718963623047

Token 1142: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00042030587792396545
    2. ' it' → logprob: -7.875420093536377
    3. '(it' → logprob: -11.375420570373535
    4. 'line' → logprob: -11.500420570373535
    5. '	it' → logprob: -12.125420570373535
    6. 'iter' → logprob: -12.625420570373535
    7. '_it' → logprob: -13.625420570373535
    8. '   ' → logprob: -13.750420570373535
    9. 'itt' → logprob: -13.750420570373535
    10. 'iterator' → logprob: -13.875420570373535

Token 1143: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5389725565910339
    2. '           ' → logprob: -1.2889726161956787
    3. ':' → logprob: -2.0389726161956787
    4. ' if' → logprob: -5.4139723777771
    5. ' line' → logprob: -6.2889723777771
    6. '       ' → logprob: -6.7889723777771
    7. 'if' → logprob: -6.9139723777771
    8. ',' → logprob: -7.9139723777771
    9. '):
' → logprob: -8.163972854614258
    10. '.strip' → logprob: -8.663972854614258

Token 1144: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09257640689611435
    2. ' line' → logprob: -2.592576503753662
    3. 'line' → logprob: -4.592576503753662
    4. ' if' → logprob: -6.717576503753662
    5. '	       ' → logprob: -7.342576503753662
    6. '               ' → logprob: -7.342576503753662
    7. 'if' → logprob: -7.717576503753662
    8. '#line' → logprob: -8.717576026916504
    9. '	line' → logprob: -9.342576026916504
    10. '=line' → logprob: -9.592576026916504

Token 1145: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.06497037410736084
    2. ' line' → logprob: -3.5649704933166504
    3. '           ' → logprob: -4.06497049331665
    4. ' stripped' → logprob: -4.18997049331665
    5. 'strip' → logprob: -6.93997049331665
    6. 'str' → logprob: -7.06497049331665
    7. 's' → logprob: -8.814970016479492
    8. '               ' → logprob: -8.939970016479492
    9. 'if' → logprob: -9.564970016479492
    10. '=line' → logprob: -10.314970016479492

Token 1146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01607331819832325
    2. '=line' → logprob: -4.266073226928711
    3. ' =' → logprob: -6.266073226928711
    4. '=str' → logprob: -12.766073226928711
    5. '_strip' → logprob: -13.016073226928711
    6. '=
' → logprob: -13.516073226928711
    7. 'strip' → logprob: -13.641073226928711
    8. 'line' → logprob: -15.516073226928711
    9. '.strip' → logprob: -15.891073226928711
    10. '=

' → logprob: -15.891073226928711

Token 1147: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00020354038861114532
    2. ' line' → logprob: -8.500203132629395
    3. '(line' → logprob: -19.25020408630371
    4. '=line' → logprob: -19.37520408630371
    5. '#line' → logprob: -20.37520408630371
    6. '	line' → logprob: -21.25020408630371
    7. 'lin' → logprob: -22.00020408630371
    8. '[line' → logprob: -22.37520408630371
    9. ' ' → logprob: -23.87520408630371
    10. '   ' → logprob: -24.12520408630371

Token 1148: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.001192490803077817
    2. '.' → logprob: -7.376192569732666
    3. '.rstrip' → logprob: -7.501192569732666
    4. '.str' → logprob: -12.626192092895508
    5. 'strip' → logprob: -12.626192092895508
    6. ' .' → logprob: -12.876192092895508
    7. '.trim' → logprob: -13.626192092895508
    8. '.readline' → logprob: -13.751192092895508
    9. '           ' → logprob: -14.001192092895508
    10. ' strip' → logprob: -14.501192092895508

Token 1149: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012576404958963394
    2. 'if' → logprob: -5.012576580047607
    3. 'and' → logprob: -6.012576580047607
    4. ' and' → logprob: -6.637576580047607
    5. '
' → logprob: -7.012576580047607
    6. ' if' → logprob: -7.012576580047607
    7. '               ' → logprob: -9.38757610321045
    8. ',' → logprob: -10.13757610321045
    9. ':
' → logprob: -10.13757610321045
    10. ':' → logprob: -10.38757610321045

Token 1150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2527914047241211
    2. 'if' → logprob: -1.502791404724121
    3. ' if' → logprob: -7.127791404724121
    4. '	       ' → logprob: -10.252791404724121
    5. '               ' → logprob: -12.002791404724121
    6. '		' → logprob: -12.252791404724121
    7. '       ' → logprob: -12.377791404724121
    8. '	if' → logprob: -12.752791404724121
    9. '   ' → logprob: -13.377791404724121
    10. '	   ' → logprob: -13.752791404724121

Token 1151: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002198676229454577
    2. '           ' → logprob: -9.00022029876709
    3. ' if' → logprob: -9.25022029876709
    4. '               ' → logprob: -15.75022029876709
    5. 'If' → logprob: -16.625219345092773
    6. '	if' → logprob: -17.125219345092773
    7. ';if' → logprob: -17.500219345092773
    8. '@if' → logprob: -19.625219345092773
    9. '	       ' → logprob: -20.125219345092773
    10. '                   ' → logprob: -20.500219345092773

Token 1152: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004348413785919547
    2. ' line' → logprob: -7.750434875488281
    3. 'len' → logprob: -12.375434875488281
    4. ' len' → logprob: -19.37543487548828
    5. '(line' → logprob: -19.62543487548828
    6. '	line' → logprob: -19.75043487548828
    7. '#line' → logprob: -20.12543487548828
    8. '
' → logprob: -20.37543487548828
    9. 'not' → logprob: -20.75043487548828
    10. '   ' → logprob: -20.75043487548828

Token 1153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6924164295196533
    2. '!=' → logprob: -0.8174164295196533
    3. ' !=' → logprob: -3.0674164295196533
    4. ':
' → logprob: -5.442416191101074
    5. '!="' → logprob: -5.817416191101074
    6. '!='' → logprob: -6.067416191101074
    7. '!==' → logprob: -7.567416191101074
    8. '!' → logprob: -7.692416191101074
    9. ':return' → logprob: -7.692416191101074
    10. 'and' → logprob: -9.192416191101074

Token 1154: '               ' (ID: 506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015088270418345928
    2. '               ' → logprob: -4.265088081359863
    3. ' return' → logprob: -7.015088081359863
    4. ':return' → logprob: -11.140088081359863
    5. '           ' → logprob: -12.265088081359863
    6. '	return' → logprob: -12.390088081359863
    7. '{return' → logprob: -13.140088081359863
    8. '
' → logprob: -15.765088081359863
    9. '                   ' → logprob: -16.26508903503418
    10. ')return' → logprob: -16.51508903503418

Token 1155: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00016313401283696294
    2. ' return' → logprob: -8.750163078308105
    3. '                   ' → logprob: -12.750163078308105
    4. '               ' → logprob: -13.500163078308105
    5. '	return' → logprob: -15.375163078308105
    6. '   ' → logprob: -17.375164031982422
    7. ':return' → logprob: -18.125164031982422
    8. '                       ' → logprob: -18.625164031982422
    9. '           ' → logprob: -18.750164031982422
    10. '{return' → logprob: -19.375164031982422

Token 1156: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.1472419600977446e-06
    2. ' line' → logprob: -13.750000953674316
    3. '(line' → logprob: -24.125001907348633
    4. '	line' → logprob: -24.375001907348633
    5. '#line' → logprob: -25.375001907348633
    6. '[line' → logprob: -25.750001907348633
    7. '=line' → logprob: -26.000001907348633
    8. 'Line' → logprob: -26.500001907348633
    9. '_line' → logprob: -27.125001907348633
    10. '
' → logprob: -27.750001907348633

Token 1157: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17364390194416046
    2. '<|end|>' → logprob: -1.923643946647644
    3. '
' → logprob: -4.673644065856934
    4. 'return' → logprob: -6.923644065856934
    5. '<|end|>' → logprob: -6.923644065856934
    6. ' return' → logprob: -8.048644065856934
    7. '.' → logprob: -8.173644065856934
    8. '        
' → logprob: -8.173644065856934
    9. 'None' → logprob: -8.423644065856934
    10. '#' → logprob: -8.548644065856934

Token 1158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015825895825400949
    2. 'None' → logprob: -6.626582622528076
    3. '<|end|>' → logprob: -8.876582145690918
    4. 'return' → logprob: -9.376582145690918
    5. '```' → logprob: -12.001582145690918
    6. 'none' → logprob: -12.001582145690918
    7. '
' → logprob: -13.001582145690918
    8. 'import' → logprob: -13.126582145690918
    9. '<|end|>' → logprob: -13.251582145690918
    10. '           ' → logprob: -13.501582145690918

Token 1159: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.576099693775177
    2. 'None' → logprob: -0.826099693775177
    3. ' None' → logprob: -9.076099395751953
    4. ' return' → logprob: -10.326099395751953
    5. '       ' → logprob: -11.326099395751953
    6. '           ' → logprob: -14.826099395751953
    7. '
' → logprob: -14.951099395751953
    8. '(None' → logprob: -15.451099395751953
    9. 'Return' → logprob: -16.701099395751953
    10. 'null' → logprob: -17.201099395751953

Token 1160: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.8624639324116288e-06
    2. ' None' → logprob: -13.250001907348633
    3. '(None' → logprob: -23.625001907348633
    4. '_None' → logprob: -24.250001907348633
    5. 'none' → logprob: -25.250001907348633
    6. 'No' → logprob: -25.875001907348633
    7. '
' → logprob: -26.500001907348633
    8. ',None' → logprob: -26.875001907348633
    9. '=None' → logprob: -27.000001907348633
    10. '```' → logprob: -27.875001907348633

Token 1161: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17794883251190186
    2. '<|end|>' → logprob: -2.1779489517211914
    3. 'if' → logprob: -3.1779489517211914
    4. '```' → logprob: -5.802948951721191
    5. 'import' → logprob: -5.927948951721191
    6. '#' → logprob: -6.927948951721191
    7. '
' → logprob: -7.302948951721191
    8. '<|end|>' → logprob: -8.052948951721191
    9. ' if' → logprob: -9.427948951721191
    10. 'flag' → logprob: -9.552948951721191

Token 1162: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16285359859466553
    2. 'if' → logprob: -1.9128535985946655
    3. '```' → logprob: -6.037853717803955
    4. 'import' → logprob: -8.662853240966797
    5. '<|end|>' → logprob: -10.412853240966797
    6. ' if' → logprob: -10.412853240966797
    7. '#' → logprob: -12.787853240966797
    8. '``' → logprob: -13.662853240966797
    9. 'If' → logprob: -14.537853240966797
    10. 'from' → logprob: -14.787853240966797

Token 1163: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.029836803674697876
    2. 'main' → logprob: -3.529836893081665
    3. ' run' → logprob: -9.404836654663086
    4. 'run' → logprob: -12.904836654663086
    5. ' solve' → logprob: -14.404836654663086
    6. '	main' → logprob: -15.279836654663086
    7. 'def' → logprob: -15.279836654663086
    8. '_main' → logprob: -16.154836654663086
    9. ' parse' → logprob: -16.654836654663086
    10. 'solve' → logprob: -16.654836654663086

Token 1164: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002394170151092112
    2. '():
' → logprob: -8.375239372253418
    3. '()' → logprob: -12.000239372253418
    4. ' ():' → logprob: -13.000239372253418
    5. '()>' → logprob: -16.125240325927734
    6. '():
' → logprob: -16.375240325927734
    7. '_' → logprob: -16.875240325927734
    8. '()->' → logprob: -17.375240325927734
    9. '():

' → logprob: -17.625240325927734
    10. '(argv' → logprob: -18.375240325927734

Token 1165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06612657755613327
    2. 'import' → logprob: -2.816126585006714
    3. ' import' → logprob: -5.566126346588135
    4. 'source' → logprob: -8.941126823425293
    5. ' source' → logprob: -9.441126823425293
    6. ' lines' → logprob: -9.691126823425293
    7. 'input' → logprob: -11.191126823425293
    8. ' input' → logprob: -11.566126823425293
    9. 'lines' → logprob: -11.691126823425293
    10. '	import' → logprob: -12.066126823425293

Token 1166: ' parser' (ID: 14216)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.011723272502422333
    2. 'input' → logprob: -5.261723041534424
    3. 'lines' → logprob: -5.761723041534424
    4. 'source' → logprob: -6.261723041534424
    5. '   ' → logprob: -7.261723041534424
    6. 'parser' (adapté à ' parser') → logprob: -7.511723041534424
    7. ' import' → logprob: -8.761723518371582
    8. ' lines' → logprob: -12.136723518371582
    9. 'inputs' → logprob: -14.011723518371582
    10. ' input' → logprob: -14.261723518371582

Token 1167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49519556760787964
    2. '=' → logprob: -1.1201956272125244
    3. '(' → logprob: -2.9951956272125244
    4. '   ' → logprob: -4.745195388793945
    5. '()' → logprob: -6.120195388793945
    6. '.' → logprob: -6.745195388793945
    7. ')' → logprob: -7.620195388793945
    8. '(
' → logprob: -8.370195388793945
    9. ':' → logprob: -8.495195388793945
    10. 'import' → logprob: -8.870195388793945

Token 1168: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -9.088346359931165e-07
    2. ' Input' → logprob: -14.000000953674316
    3. 'input' → logprob: -21.625
    4. '_input' → logprob: -23.125
    5. '	Input' → logprob: -24.25
    6. '_Input' → logprob: -25.125
    7. ' input' → logprob: -25.5
    8. '<Input' → logprob: -26.0
    9. 'Inp' → logprob: -27.125
    10. '\Input' → logprob: -27.5

Token 1169: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -7.896309739408025e-07
    2. 'parser' → logprob: -14.250000953674316
    3. '()' → logprob: -17.375
    4. 'Processor' → logprob: -17.75
    5. '_parser' → logprob: -18.0
    6. '(Parser' → logprob: -18.0
    7. 'Handler' → logprob: -18.75
    8. '.Parser' → logprob: -18.875
    9. '=' → logprob: -19.25
    10. 'Iterator' → logprob: -19.375

Token 1170: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00020449401927180588
    2. 'sys' → logprob: -8.500204086303711
    3. '(iter' → logprob: -14.500204086303711
    4. ' sys' → logprob: -15.250204086303711
    5. '	sys' → logprob: -15.875204086303711
    6. '=sys' → logprob: -16.12520408630371
    7. '   ' → logprob: -16.75020408630371
    8. '((' → logprob: -18.00020408630371
    9. 'import' → logprob: -18.87520408630371
    10. '(Sys' → logprob: -19.12520408630371

Token 1171: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001261845463886857
    2. '.argv' → logprob: -9.000125885009766
    3. 'stdin' → logprob: -13.125125885009766
    4. '.' → logprob: -14.500125885009766
    5. '.stdout' → logprob: -15.375125885009766
    6. '.std' → logprob: -17.000125885009766
    7. '(stdin' → logprob: -18.000125885009766
    8. ' .' → logprob: -18.625125885009766
    9. '```' → logprob: -18.750125885009766
    10. '.__' → logprob: -18.750125885009766

Token 1172: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2519480884075165
    2. ')' → logprob: -1.5019481182098389
    3. ').' → logprob: -12.251948356628418
    4. ' )
' → logprob: -12.376948356628418
    5. ')
' → logprob: -12.876948356628418
    6. ')

' → logprob: -12.876948356628418
    7. '.readlines' → logprob: -13.126948356628418
    8. '.readline' → logprob: -13.876948356628418
    9. ' )' → logprob: -14.001948356628418
    10. ')`
' → logprob: -15.001948356628418

Token 1173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25214600563049316
    2. 'for' → logprob: -1.5021460056304932
    3. ' for' → logprob: -9.002145767211914
    4. '```' → logprob: -10.002145767211914
    5. 'cases' → logprob: -10.127145767211914
    6. '    
' → logprob: -12.752145767211914
    7. '	for' → logprob: -13.377145767211914
    8. '
' → logprob: -13.877145767211914
    9. '``' → logprob: -14.127145767211914
    10. '   ' → logprob: -14.502145767211914

Token 1174: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.842555426876061e-06
    2. '   ' → logprob: -13.125004768371582
    3. ' for' → logprob: -13.375004768371582
    4. 'results' → logprob: -14.500004768371582
    5. 'cases' → logprob: -15.000004768371582
    6. 'import' → logprob: -15.250004768371582
    7. 'all' → logprob: -16.3750057220459
    8. 'total' → logprob: -16.8750057220459
    9. '```' → logprob: -18.3750057220459
    10. 'from' → logprob: -18.6250057220459

Token 1175: ' flag' (ID: 9641)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flags' → logprob: -0.0187685564160347
    2. 'flag' → logprob: -4.018768787384033
    3. ' flags' → logprob: -7.768768787384033
    4. 'case' → logprob: -8.768768310546875
    5. 'coords' → logprob: -10.768768310546875
    6. 'points' → logprob: -11.768768310546875
    7. ' flag' → logprob: -12.393768310546875
    8. 'coordinates' → logprob: -13.143768310546875
    9. 'cases' → logprob: -13.143768310546875
    10. '   ' → logprob: -13.893768310546875

Token 1176: '_positions' (ID: 93193)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015487833879888058
    2. '_list' → logprob: -6.626548767089844
    3. 'flags' → logprob: -9.501548767089844
    4. ' s' → logprob: -9.626548767089844
    5. '_flags' → logprob: -10.626548767089844
    6. '_positions' → logprob: -11.126548767089844
    7. '_coords' → logprob: -11.251548767089844
    8. '_set' → logprob: -11.376548767089844
    9. '_s' → logprob: -11.876548767089844
    10. '_coordinates' → logprob: -12.751548767089844

Token 1177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061978548765182495
    2. 'in' → logprob: -2.811978578567505
    3. '_in' → logprob: -12.561978340148926
    4. '	in' → logprob: -12.561978340148926
    5. '   ' → logprob: -13.436978340148926
    6. 's' → logprob: -14.686978340148926
    7. ' ' → logprob: -14.936978340148926
    8. '    ' → logprob: -15.061978340148926
    9. 'import' → logprob: -15.936978340148926
    10. '_' → logprob: -16.061979293823242

Token 1178: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -7.517272024415433e-05
    2. ' parser' → logprob: -9.500075340270996
    3. '(parser' → logprob: -16.00007438659668
    4. '   ' → logprob: -16.25007438659668
    5. '	parser' → logprob: -18.50007438659668
    6. '
' → logprob: -18.75007438659668
    7. 'flag' → logprob: -19.50007438659668
    8. 'parse' → logprob: -20.62507438659668
    9. 'par' → logprob: -20.87507438659668
    10. ' ' → logprob: -20.87507438659668

Token 1179: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.03450210019946098
    2. ' in' → logprob: -3.5345020294189453
    3. 'parse' → logprob: -6.284502029418945
    4. ':' → logprob: -6.784502029418945
    5. ' parse' → logprob: -7.409502029418945
    6. '_parse' → logprob: -8.284502029418945
    7. 'in' → logprob: -8.284502029418945
    8. ':
' → logprob: -8.409502029418945
    9. '   ' → logprob: -8.784502029418945
    10. '.' → logprob: -9.534502029418945

Token 1180: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -7.896309739408025e-07
    2. 'all' → logprob: -14.500000953674316
    3. '_cases' → logprob: -15.625000953674316
    4. '
' → logprob: -17.0
    5. '```' → logprob: -17.125
    6. '_al' → logprob: -18.0
    7. '__' → logprob: -18.125
    8. '\' → logprob: -18.375
    9. '_' → logprob: -18.375
    10. 'All' → logprob: -18.875

Token 1181: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -4.060365608893335e-05
    2. 'cases' → logprob: -10.250041007995605
    3. 'flag' → logprob: -13.500041007995605
    4. '(flag' → logprob: -13.500041007995605
    5. '_flags' → logprob: -14.250041007995605
    6. '
' → logprob: -14.250041007995605
    7. 'Cases' → logprob: -15.125041007995605
    8. '```' → logprob: -15.625041007995605
    9. '_calls' → logprob: -15.750041007995605
    10. '\' → logprob: -16.37504005432129

Token 1182: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.8609311580657959
    2. '():' → logprob: -0.8609311580657959
    3. ':' → logprob: -2.110931158065796
    4. ':
' → logprob: -3.610931158065796
    5. '   ' → logprob: -5.485931396484375
    6. '       ' → logprob: -6.610931396484375
    7. '(' → logprob: -7.985931396484375
    8. '()' → logprob: -8.610931396484375
    9. ' ():' → logprob: -9.235931396484375
    10. '):
' → logprob: -10.235931396484375

Token 1183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014016677159816027
    2. '   ' → logprob: -6.626401901245117
    3. 'spir' → logprob: -10.126401901245117
    4. '```' → logprob: -11.376401901245117
    5. 'sp' → logprob: -11.501401901245117
    6. 'race' → logprob: -13.001401901245117
    7. '      ' → logprob: -13.251401901245117
    8. '        
' → logprob: -13.376401901245117
    9. '     ' → logprob: -13.876401901245117
    10. '           ' → logprob: -13.876401901245117

Token 1184: ' flags' (ID: 17376)
  Prédit: 'flags'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flags' (adapté à ' flags') → logprob: -0.006644918117672205
    2. '       ' → logprob: -5.2566447257995605
    3. ' flags' → logprob: -7.0066447257995605
    4. 'spir' → logprob: -8.006645202636719
    5. '           ' → logprob: -9.756645202636719
    6. 'sp' → logprob: -9.881645202636719
    7. '   ' → logprob: -10.756645202636719
    8. '```' → logprob: -11.131645202636719
    9. '	flags' → logprob: -11.506645202636719
    10. '``' → logprob: -12.381645202636719

Token 1185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014177731238305569
    2. '=' → logprob: -4.2641777992248535
    3. '   ' → logprob: -11.889177322387695
    4. '       ' → logprob: -12.639177322387695
    5. '_list' → logprob: -14.264177322387695
    6. '_objs' → logprob: -14.514177322387695
    7. '        ' → logprob: -14.764177322387695
    8. '_flags' → logprob: -14.764177322387695
    9. '_obj' → logprob: -15.139177322387695
    10. '_objects' → logprob: -15.139177322387695

Token 1186: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.73183855926618e-05
    2. ' [' → logprob: -9.500077247619629
    3. '   ' → logprob: -14.000077247619629
    4. '[List' → logprob: -14.000077247619629
    5. '       ' → logprob: -15.375077247619629
    6. '[Index' → logprob: -15.750077247619629
    7. '[Int' → logprob: -16.000078201293945
    8. '[
' → logprob: -16.750078201293945
    9. '[self' → logprob: -17.375078201293945
    10. '[list' → logprob: -17.750078201293945

Token 1187: 'Flag' (ID: 13267)
  Prédit: 'Flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flag' → logprob: 0.0
    2. ' Flag' → logprob: -17.75
    3. '   ' → logprob: -19.25
    4. 'Vector' → logprob: -21.5
    5. '       ' → logprob: -23.0
    6. 'flag' → logprob: -23.75
    7. '.Flag' → logprob: -23.875
    8. 'Flags' → logprob: -23.875
    9. '  ' → logprob: -24.25
    10. 'FLAG' → logprob: -24.375

Token 1188: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05511380732059479
    2. '(float' → logprob: -3.0551137924194336
    3. 'float' → logprob: -5.305113792419434
    4. 'x' → logprob: -6.680113792419434
    5. '(*' → logprob: -8.930113792419434
    6. '(pos' → logprob: -9.555113792419434
    7. '(Vector' → logprob: -9.930113792419434
    8. '(int' → logprob: -11.555113792419434
    9. 'Float' → logprob: -11.930113792419434
    10. 'pos' → logprob: -12.305113792419434

Token 1189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02270781621336937
    2. 'float' → logprob: -4.272707939147949
    3. '(float' → logprob: -5.772707939147949
    4. ',float' → logprob: -6.022707939147949
    5. '=float' → logprob: -7.147707939147949
    6. '=' → logprob: -7.397707939147949
    7. ',y' → logprob: -7.397707939147949
    8. 'flag' → logprob: -8.02270793914795
    9. '(x' → logprob: -8.52270793914795
    10. '(flag' → logprob: -9.14770793914795

Token 1190: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.676292231422849e-05
    2. ' y' → logprob: -11.000017166137695
    3. 'float' → logprob: -18.125017166137695
    4. '
' → logprob: -20.125017166137695
    5. '       ' → logprob: -20.375017166137695
    6. '   ' → logprob: -20.500017166137695
    7. '	y' → logprob: -20.625017166137695
    8. '           ' → logprob: -21.125017166137695
    9. '    ' → logprob: -21.125017166137695
    10. '  ' → logprob: -21.375017166137695

Token 1191: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000774846994318068
    2. 'for' → logprob: -7.37577486038208
    3. '       ' → logprob: -9.125774383544922
    4. ' for' → logprob: -10.875774383544922
    5. '           ' → logprob: -11.125774383544922
    6. '        ' → logprob: -12.625774383544922
    7. ' )' → logprob: -14.000774383544922
    8. '   ' → logprob: -14.750774383544922
    9. '          ' → logprob: -15.125774383544922
    10. '               ' → logprob: -15.500774383544922

Token 1192: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7155749201774597
    2. 'for' → logprob: -0.7155749201774597
    3. '       ' → logprob: -3.8405749797821045
    4. '           ' → logprob: -7.590574741363525
    5. '        ' → logprob: -8.965575218200684
    6. ')' → logprob: -10.715575218200684
    7. '	for' → logprob: -11.090575218200684
    8. '               ' → logprob: -12.215575218200684
    9. '          ' → logprob: -12.340575218200684
    10. '   ' → logprob: -12.840575218200684

Token 1193: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001395592000335455
    2. '(x' → logprob: -6.7513957023620605
    3. ' x' → logprob: -9.001395225524902
    4. 'flag' → logprob: -9.251395225524902
    5. ' (' → logprob: -12.626395225524902
    6. '   ' → logprob: -13.751395225524902
    7. 'pos' → logprob: -14.501395225524902
    8. 'flags' → logprob: -14.751395225524902
    9. 'in' → logprob: -15.876395225524902
    10. '
' → logprob: -16.25139617919922

Token 1194: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.282920129597187e-05
    2. '(x' → logprob: -11.625012397766113
    3. ' x' → logprob: -12.500012397766113
    4. ')x' → logprob: -17.00001335144043
    5. '	x' → logprob: -19.00001335144043
    6. ' (' → logprob: -20.00001335144043
    7. 'flag' → logprob: -20.37501335144043
    8. '   ' → logprob: -20.87501335144043
    9. '
' → logprob: -21.00001335144043
    10. ')' → logprob: -21.50001335144043

Token 1195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006576461251825094
    2. ',x' → logprob: -5.1315765380859375
    3. 'x' → logprob: -7.3815765380859375
    4. ' ,' → logprob: -10.756576538085938
    5. '_,' → logprob: -13.881576538085938
    6. ' x' → logprob: -13.881576538085938
    7. ')' → logprob: -14.631576538085938
    8. ',
' → logprob: -14.881576538085938
    9. ',d' → logprob: -15.631576538085938
    10. ' in' → logprob: -16.006576538085938

Token 1196: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0012146407971158624
    2. ' x' → logprob: -6.751214504241943
    3. 'flag' → logprob: -10.626214981079102
    4. ')' → logprob: -11.376214981079102
    5. '(x' → logprob: -12.751214981079102
    6. ')x' → logprob: -12.876214981079102
    7. 'flags' → logprob: -13.001214981079102
    8. '   ' → logprob: -15.501214981079102
    9. '
' → logprob: -15.876214981079102
    10. ' ' → logprob: -16.6262149810791

Token 1197: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006285638664849102
    2. 'in' → logprob: -7.500628471374512
    3. ' in' → logprob: -9.750628471374512
    4. ' )' → logprob: -11.000628471374512
    5. ')
' → logprob: -15.375628471374512
    6. '
' → logprob: -15.750628471374512
    7. ')]' → logprob: -16.750629425048828
    8. '),' → logprob: -16.875629425048828
    9. '）' → logprob: -17.125629425048828
    10. '_in' → logprob: -17.375629425048828

Token 1198: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6939052939414978
    2. ' in' → logprob: -0.6939052939414978
    3. ')' → logprob: -7.193905353546143
    4. '
' → logprob: -13.318904876708984
    5. '	in' → logprob: -13.568904876708984
    6. 'import' → logprob: -14.068904876708984
    7. '_in' → logprob: -14.818904876708984
    8. ' )' → logprob: -15.068904876708984
    9. 'inthe' → logprob: -15.318904876708984
    10. ')]' → logprob: -15.443904876708984

Token 1199: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -6.2729995988775045e-06
    2. ' flag' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.2500057220459
    4. '(flag' → logprob: -19.1250057220459
    5. '	flag' → logprob: -19.3750057220459
    6. 'flags' → logprob: -19.6250057220459
    7. '  ' → logprob: -21.0000057220459
    8. ' ' → logprob: -21.0000057220459
    9. '
' → logprob: -21.2500057220459
    10. '    ' → logprob: -22.3750057220459

Token 1200: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.002634872682392597
    2. 's' → logprob: -6.5026350021362305
    3. 'positions' → logprob: -7.1276350021362305
    4. 'flags' → logprob: -9.12763500213623
    5. ')' → logprob: -9.37763500213623
    6. '_flags' → logprob: -9.75263500213623
    7. 'flag' → logprob: -10.87763500213623
    8. ')]' → logprob: -10.87763500213623
    9. 'Positions' → logprob: -10.87763500213623
    10. 'itions' → logprob: -12.25263500213623

Token 1201: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003852216759696603
    2. ']' → logprob: -5.878852367401123
    3. ']
' → logprob: -7.003852367401123
    4. '
' → logprob: -9.628851890563965
    5. ')' → logprob: -9.878851890563965
    6. ')
' → logprob: -11.253851890563965
    7. '   ' → logprob: -13.253851890563965
    8. '        
' → logprob: -13.503851890563965
    9. 'Sp' → logprob: -13.628851890563965
    10. ')]' → logprob: -13.628851890563965

Token 1202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003960262984037399
    2. 'race' → logprob: -6.128960132598877
    3. '   ' → logprob: -6.503960132598877
    4. ' race' → logprob: -9.128960609436035
    5. 'r' → logprob: -9.628960609436035
    6. ' rac' → logprob: -10.503960609436035
    7. 'spir' → logprob: -11.378960609436035
    8. 'sp' → logprob: -11.753960609436035
    9. ' solution' → logprob: -11.753960609436035
    10. 'runner' → logprob: -11.753960609436035

Token 1203: ' race' (ID: 11286)
  Prédit: 'race'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'race' (adapté à ' race') → logprob: -0.010375441052019596
    2. 'spir' → logprob: -4.635375499725342
    3. 'sp' → logprob: -8.885375022888184
    4. 'r' → logprob: -8.885375022888184
    5. 'rac' → logprob: -9.010375022888184
    6. 'foot' → logprob: -9.385375022888184
    7. 'solver' → logprob: -9.510375022888184
    8. '   ' → logprob: -10.635375022888184
    9. 'solution' → logprob: -11.635375022888184
    10. 'runner' → logprob: -11.885375022888184

Token 1204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005031120381318033
    2. '=' → logprob: -7.750503063201904
    3. '   ' → logprob: -9.875503540039062
    4. '_length' → logprob: -11.625503540039062
    5. '.solve' → logprob: -12.250503540039062
    6. '_solver' → logprob: -13.000503540039062
    7. '.s' → logprob: -13.625503540039062
    8. '.' → logprob: -14.000503540039062
    9. 'length' → logprob: -14.125503540039062
    10. 'solver' → logprob: -14.250503540039062

Token 1205: ' Spiral' (ID: 179761)
  Prédit: 'Sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sp' → logprob: -2.856408536899835e-05
    2. ' Spiral' → logprob: -10.500028610229492
    3. ' Sp' → logprob: -14.625028610229492
    4. '       ' → logprob: -14.875028610229492
    5. '   ' → logprob: -16.250028610229492
    6. ' Spir' → logprob: -18.500028610229492
    7. '           ' → logprob: -20.625028610229492
    8. 'Spider' → logprob: -20.625028610229492
    9. 'Spi' → logprob: -20.875028610229492
    10. '_sp' → logprob: -21.000028610229492

Token 1206: 'Foot' (ID: 19958)
  Prédit: 'Foot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Foot' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -16.125
    3. ' Foot' → logprob: -16.375
    4. 'F' → logprob: -16.75
    5. '_F' → logprob: -17.0
    6. 'Fo' → logprob: -17.75
    7. 'Foo' → logprob: -17.875
    8. 'Feet' → logprob: -18.125
    9. '   ' → logprob: -18.25
    10. '```' → logprob: -18.5

Token 1207: 'race' (ID: 93075)
  Prédit: 'race'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'race' → logprob: -5.512236498361744e-07
    2. 'rac' → logprob: -15.375000953674316
    3. '   ' → logprob: -15.875000953674316
    4. 'r' → logprob: -16.625
    5. 'trace' → logprob: -17.0
    6. 'Race' → logprob: -17.75
    7. ' race' → logprob: -18.125
    8. 'rec' → logprob: -18.375
    9. 'rance' → logprob: -19.125
    10. '
' → logprob: -19.125

Token 1208: '(flags' (ID: 127832)
  Prédit: '(flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flags' → logprob: -0.0006208192789927125
    2. 'flags' → logprob: -7.5006208419799805
    3. '(r' → logprob: -9.87562084197998
    4. '(' → logprob: -11.12562084197998
    5. '.flags' → logprob: -14.37562084197998
    6. '(flag' → logprob: -15.37562084197998
    7. 'r' → logprob: -15.37562084197998
    8. '	flags' → logprob: -15.62562084197998
    9. ' flags' → logprob: -15.87562084197998
    10. 'race' → logprob: -15.87562084197998

Token 1209: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46433040499687195
    2. ')
' → logprob: -1.3393304347991943
    3. ')' → logprob: -2.2143304347991943
    4. '   ' → logprob: -9.339330673217773
    5. ')
' → logprob: -9.839330673217773
    6. ').' → logprob: -10.214330673217773
    7. '()
' → logprob: -12.339330673217773
    8. '
' → logprob: -13.089330673217773
    9. '.solve' → logprob: -13.214330673217773
    10. '           ' → logprob: -13.964330673217773

Token 1210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016335244290530682
    2. 'print' → logprob: -7.001633644104004
    3. 'result' → logprob: -7.376633644104004
    4. '   ' → logprob: -9.376633644104004
    5. ' result' → logprob: -12.876633644104004
    6. 'output' → logprob: -13.001633644104004
    7. 'results' → logprob: -13.126633644104004
    8. ' print' → logprob: -13.251633644104004
    9. '```' → logprob: -13.251633644104004
    10. 'score' → logprob: -14.751633644104004

Token 1211: ' length' (ID: 5517)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.015139354392886162
    2. 'print' → logprob: -4.765139579772949
    3. 'length' (adapté à ' length') → logprob: -5.265139579772949
    4. 'distance' → logprob: -6.765139579772949
    5. 'path' → logprob: -8.76513957977295
    6. 'answer' → logprob: -11.76513957977295
    7. 'res' → logprob: -12.51513957977295
    8. '       ' → logprob: -12.76513957977295
    9. '   ' → logprob: -12.76513957977295
    10. 'total' → logprob: -13.01513957977295

Token 1212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03149199113249779
    2. '=' → logprob: -3.531491994857788
    3. '   ' → logprob: -7.531491756439209
    4. '       ' → logprob: -7.656491756439209
    5. '()' → logprob: -8.031492233276367
    6. '_' → logprob: -9.406492233276367
    7. '_length' → logprob: -9.781492233276367
    8. '.' → logprob: -9.906492233276367
    9. '    ' → logprob: -10.156492233276367
    10. ' +=' → logprob: -10.781492233276367

Token 1213: ' race' (ID: 11286)
  Prédit: 'race'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'race' → logprob: -0.00033558503491804004
    2. ' race' → logprob: -8.000335693359375
    3. 'round' → logprob: -16.125335693359375
    4. '   ' → logprob: -17.500335693359375
    5. 'r' → logprob: -20.375335693359375
    6. ' ' → logprob: -21.000335693359375
    7. '
' → logprob: -21.125335693359375
    8. '`' → logprob: -21.625335693359375
    9. 'Race' → logprob: -21.875335693359375
    10. '```' → logprob: -22.500335693359375

Token 1214: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.2233183042553719e-05
    2. '.' → logprob: -11.375012397766113
    3. ' .' → logprob: -14.875012397766113
    4. 'solve' → logprob: -15.125012397766113
    5. '   ' → logprob: -17.375011444091797
    6. '.run' → logprob: -18.250011444091797
    7. '.s' → logprob: -18.500011444091797
    8. '.sol' → logprob: -18.625011444091797
    9. '.save' → logprob: -19.375011444091797
    10. '.calculate' → logprob: -19.500011444091797

Token 1215: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4142915904521942
    2. '()' → logprob: -1.1642916202545166
    3. '       ' → logprob: -3.6642916202545166
    4. 'print' → logprob: -6.6642913818359375
    5. '()
' → logprob: -8.914291381835938
    6. '   ' → logprob: -12.289291381835938
    7. '()

' → logprob: -12.789291381835938
    8. ' print' → logprob: -13.414291381835938
    9. '()\' → logprob: -13.664291381835938
    10. '();' → logprob: -13.914291381835938

Token 1216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01134571060538292
    2. 'print' → logprob: -4.511345863342285
    3. '   ' → logprob: -8.386345863342285
    4. '
' → logprob: -10.386345863342285
    5. '```' → logprob: -10.511345863342285
    6. ' print' → logprob: -11.761345863342285
    7. '<|end|>' → logprob: -13.511345863342285
    8. '        
' → logprob: -13.761345863342285
    9. '
' → logprob: -14.886345863342285
    10. '	print' → logprob: -15.261345863342285

Token 1217: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00012570773833431304
    2. '       ' → logprob: -9.000125885009766
    3. ' print' → logprob: -13.000125885009766
    4. 'printf' → logprob: -19.375125885009766
    5. '```' → logprob: -20.000125885009766
    6. '   ' → logprob: -20.375125885009766
    7. '	print' → logprob: -20.875125885009766
    8. '#print' → logprob: -21.000125885009766
    9. '
' → logprob: -22.625125885009766
    10. 'println' → logprob: -23.000125885009766

Token 1218: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.0087516784551553e-05
    2. '(length' → logprob: -12.00001049041748
    3. 'f' → logprob: -12.87501049041748
    4. '(round' → logprob: -13.62501049041748
    5. '{' → logprob: -17.125009536743164
    6. '(' → logprob: -18.375009536743164
    7. '(int' → logprob: -19.125009536743164
    8. 'length' → logprob: -19.750009536743164
    9. '(format' → logprob: -20.000009536743164
    10. ' f' → logprob: -20.250009536743164

Token 1219: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -6.360996485454962e-05
    2. '{' → logprob: -9.8750638961792
    3. ''{' → logprob: -11.3750638961792
    4. 'length' → logprob: -14.7500638961792
    5. '("{' → logprob: -16.000062942504883
    6. 'f' → logprob: -16.500062942504883
    7. '"' → logprob: -17.125062942504883
    8. '(f' → logprob: -17.375062942504883
    9. '(length' → logprob: -19.125062942504883
    10. '("%.' → logprob: -19.625062942504883

Token 1220: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: 0.0
    2. ' length' → logprob: -18.125
    3. 'round' → logprob: -20.5
    4. 'leng' → logprob: -20.625
    5. '(length' → logprob: -21.625
    6. '	length' → logprob: -22.625
    7. '   ' → logprob: -23.0
    8. ':length' → logprob: -23.25
    9. '-length' → logprob: -23.375
    10. 'len' → logprob: -23.5

Token 1221: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -1.9504606825648807e-05
    2. ' :.' → logprob: -11.125019073486328
    3. '():' → logprob: -12.625019073486328
    4. ':' → logprob: -13.750019073486328
    5. '.' → logprob: -16.000019073486328
    6. '{' → logprob: -16.250019073486328
    7. ' .' → logprob: -17.125019073486328
    8. '}' → logprob: -17.250019073486328
    9. '   ' → logprob: -17.250019073486328
    10. '(.' → logprob: -17.625019073486328

Token 1222: '1' (ID: 16)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.1974867284297943
    2. '3' → logprob: -1.8224867582321167
    3. '2' → logprob: -4.322486877441406
    4. '7' → logprob: -6.447486877441406
    5. '4' → logprob: -6.697486877441406
    6. '8' → logprob: -7.572486877441406
    7. '5' → logprob: -8.197486877441406
    8. '1' → logprob: -8.322486877441406
    9. '9' → logprob: -8.322486877441406
    10. '10' → logprob: -8.822486877441406

Token 1223: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.024215923622250557
    2. '6' → logprob: -4.3992156982421875
    3. '3' → logprob: -4.7742156982421875
    4. '2' → logprob: -5.8992156982421875
    5. '7' → logprob: -8.149215698242188
    6. '8' → logprob: -10.149215698242188
    7. '1' → logprob: -10.274215698242188
    8. '9' → logprob: -10.649215698242188
    9. '5' → logprob: -10.899215698242188
    10. '10' → logprob: -11.524215698242188

Token 1224: '}"' (ID: 21503)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.00011307948443572968
    2. '")' → logprob: -9.125113487243652
    3. '}")
' → logprob: -12.875113487243652
    4. ')")' → logprob: -13.625113487243652
    5. ' }' → logprob: -16.375112533569336
    6. '}' → logprob: -16.375112533569336
    7. '}")
' → logprob: -17.375112533569336
    8. '}"' → logprob: -17.750112533569336
    9. '})' → logprob: -17.750112533569336
    10. '}")

' → logprob: -17.875112533569336

Token 1225: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000330220878822729
    2. '()' → logprob: -8.625329971313477
    3. '())' → logprob: -8.875329971313477
    4. ')
' → logprob: -12.750329971313477
    5. ' )' → logprob: -12.750329971313477
    6. '")' → logprob: -13.000329971313477
    7. '   ' → logprob: -14.125329971313477
    8. '<|end|>' → logprob: -14.625329971313477
    9. ')}' → logprob: -15.250329971313477
    10. '(' → logprob: -15.500329971313477

Token 1226: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.895480277715251e-06
    2. '
' → logprob: -12.250008583068848
    3. ' if' → logprob: -12.875008583068848
    4. '<|end|>' → logprob: -14.250008583068848
    5. '```' → logprob: -14.250008583068848
    6. '    
' → logprob: -17.000009536743164
    7. '__' → logprob: -17.250009536743164
    8. '#' → logprob: -17.250009536743164
    9. '  
' → logprob: -17.500009536743164
    10. '        
' → logprob: -18.750009536743164

Token 1227: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16046042740345
    2. ' __' → logprob: -1.9104604721069336
    3. 'name' → logprob: -8.660460472106934
    4. '_' → logprob: -10.535460472106934
    5. '___' → logprob: -10.660460472106934
    6. '_name' → logprob: -11.410460472106934
    7. '____' → logprob: -14.035460472106934
    8. ' "__' → logprob: -15.660460472106934
    9. 'Name' → logprob: -16.035459518432617
    10. 'if' → logprob: -16.410459518432617

Token 1228: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1983855962753296
    2. '==' → logprob: -1.9483855962753296
    3. ' ==' → logprob: -3.448385715484619
    4. '=="' → logprob: -6.073385715484619
    5. 'name' → logprob: -6.198385715484619
    6. '=='' → logprob: -7.823385715484619
    7. 'if' → logprob: -8.198385238647461
    8. '.__' → logprob: -8.948385238647461
    9. '__.__' → logprob: -9.073385238647461
    10. '[' → logprob: -9.323385238647461

Token 1229: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.5776860184123507e-06
    2. '__.__' → logprob: -13.12500286102295
    3. '==' → logprob: -15.12500286102295
    4. '__.' → logprob: -16.375001907348633
    5. '__
' → logprob: -16.500001907348633
    6. '____' → logprob: -17.500001907348633
    7. ' ==' → logprob: -18.000001907348633
    8. '___' → logprob: -18.125001907348633
    9. '__('' → logprob: -18.625001907348633
    10. '__["' → logprob: -18.750001907348633

Token 1230: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17086060345172882
    2. '==' → logprob: -1.9208606481552124
    3. ' ==' → logprob: -4.670860767364502
    4. '=="' → logprob: -6.795860767364502
    5. '=='' → logprob: -9.420860290527344
    6. '==
' → logprob: -11.920860290527344
    7. '=' → logprob: -13.045860290527344
    8. '___' → logprob: -13.170860290527344
    9. '===' → logprob: -13.420860290527344
    10. '_' → logprob: -13.920860290527344

Token 1231: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.038045622408390045
    2. ''' → logprob: -3.288045644760132
    3. '__' → logprob: -12.913045883178711
    4. ' "__' → logprob: -13.413045883178711
    5. ' '__' → logprob: -16.28804588317871
    6. ''"' → logprob: -17.78804588317871
    7. '"name' → logprob: -18.28804588317871
    8. '"'' → logprob: -18.41304588317871
    9. '   ' → logprob: -18.53804588317871
    10. 'main' → logprob: -18.78804588317871

Token 1232: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1505773961544037
    2. '"' → logprob: -2.4005773067474365
    3. 'main' → logprob: -3.4005773067474365
    4. ''' → logprob: -4.150577545166016
    5. 'name' → logprob: -12.275577545166016
    6. ''m' → logprob: -13.025577545166016
    7. '"name' → logprob: -13.275577545166016
    8. ' "__' → logprob: -13.900577545166016
    9. ''name' → logprob: -14.275577545166016
    10. '__":
' → logprob: -14.400577545166016

Token 1233: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2545185983181
    2. '__":
' → logprob: -1.5045186281204224
    3. '__
' → logprob: -6.879518508911133
    4. '__.' → logprob: -7.504518508911133
    5. '__.__' → logprob: -7.754518508911133
    6. '__':
' → logprob: -7.879518508911133
    7. '__["' → logprob: -9.004518508911133
    8. '__
' → logprob: -9.879518508911133
    9. '=="' → logprob: -11.629518508911133
    10. '__("' → logprob: -13.004518508911133

Token 1234: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.500000953674316
    3. '__' → logprob: -16.5
    4. '	main' → logprob: -16.75
    5. '_main' → logprob: -17.875
    6. '   ' → logprob: -20.625
    7. 'import' → logprob: -22.125
    8. '.main' → logprob: -22.25
    9. '(main' → logprob: -22.625
    10. 'run' → logprob: -23.25

Token 1235: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -21.25
    4. '_main' → logprob: -24.5
    5. '   ' → logprob: -24.75
    6. 'import' → logprob: -25.25
    7. '(main' → logprob: -26.375
    8. '.main' → logprob: -26.5
    9. 'sys' → logprob: -29.5
    10. 'mainwindow' → logprob: -29.625

Token 1236: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1234
Tokens correctement prédits (1ère position, stricte): 588
Tokens correctement prédits (1ère position, avec adaptation): 648
Tokens correctement prédits (top 10): 1084
Précision stricte (1ère position): 47.65%
Précision adaptée (1ère position): 52.51%
Précision (top 10): 87.84%
================================================================================
