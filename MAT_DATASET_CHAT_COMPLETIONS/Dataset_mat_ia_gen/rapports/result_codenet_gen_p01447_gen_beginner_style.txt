================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
count = 0
while n > 1:
    n = (n + 2) // 3
    count += 1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13643822073936462
    2. ')' → logprob: -2.2614381313323975
    3. '()' → logprob: -4.011438369750977
    4. '())' → logprob: -5.636438369750977
    5. '(
' → logprob: -7.636438369750977
    6. '('' → logprob: -8.636438369750977
    7. '```' → logprob: -8.636438369750977
    8. '(()' → logprob: -9.136438369750977
    9. '("("' → logprob: -9.261438369750977
    10. '(

' → logprob: -9.636438369750977

Token 5: 'count' (ID: 5420)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7043631672859192
    2. 'if' → logprob: -1.4543631076812744
    3. 'for' → logprob: -2.3293631076812744
    4. 's' → logprob: -2.4543631076812744
    5. 'f' → logprob: -4.3293633460998535
    6. ' ' → logprob: -4.4543633460998535
    7. 'x' → logprob: -4.8293633460998535
    8. ')' → logprob: -4.9543633460998535
    9. 'a' → logprob: -4.9543633460998535
    10. ''' → logprob: -5.0793633460998535

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21553806960582733
    2. '(' → logprob: -1.7155380249023438
    3. 's' → logprob: -4.465538024902344
    4. '=' → logprob: -7.215538024902344
    5. 'er' → logprob: -7.340538024902344
    6. '[' → logprob: -7.965538024902344
    7. ')' → logprob: -8.465538024902344
    8. '_space' → logprob: -9.590538024902344
    9. ' =' → logprob: -9.965538024902344
    10. '_counts' → logprob: -10.090538024902344

Token 7: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1270214468240738
    2. '0' → logprob: -2.127021551132202
    3. ' {}' → logprob: -10.002021789550781
    4. ' n' → logprob: -10.752021789550781
    5. '1' → logprob: -11.627021789550781
    6. 'n' → logprob: -12.377021789550781
    7. ' ' → logprob: -12.877021789550781
    8. '{}' → logprob: -13.002021789550781
    9. '[' → logprob: -13.752021789550781
    10. ' {' → logprob: -13.877021789550781

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.75000286102295
    3. '{}' → logprob: -14.00000286102295
    4. 'n' → logprob: -14.37500286102295
    5. '1' → logprob: -14.62500286102295
    6. ''' → logprob: -16.125003814697266
    7. '"' → logprob: -16.750003814697266
    8. '{' → logprob: -17.125003814697266
    9. '`' → logprob: -17.625003814697266
    10. '[' → logprob: -18.000003814697266

Token 9: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39176300168037415
    2. '\n' → logprob: -1.5167629718780518
    3. 'for' → logprob: -2.8917629718780518
    4. '\' → logprob: -3.3917629718780518
    5. ' 
' → logprob: -5.141763210296631
    6. '' → logprob: -6.266763210296631
    7. '```' → logprob: -6.516763210296631
    8. ' for' → logprob: -6.641763210296631
    9. '  
' → logprob: -6.766763210296631
    10. '\r' → logprob: -7.141763210296631

Token 10: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4384758174419403
    2. '\n' → logprob: -1.6884758472442627
    3. '
' → logprob: -1.9384758472442627
    4. '\' → logprob: -4.438475608825684
    5. ' for' → logprob: -5.063475608825684
    6. '```' → logprob: -6.188475608825684
    7. ' 
' → logprob: -6.688475608825684
    8. 'i' → logprob: -7.188475608825684
    9. '\r' → logprob: -7.438475608825684
    10. '' → logprob: -7.438475608825684

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.637126624584198
    2. ' ' → logprob: -0.762126624584198
    3. 'n' → logprob: -5.637126445770264
    4. ' count' → logprob: -7.512126445770264
    5. '  ' → logprob: -8.512126922607422
    6. 'count' → logprob: -9.012126922607422
    7. ' not' → logprob: -11.262126922607422
    8. ' (' → logprob: -11.262126922607422
    9. ' )' → logprob: -11.387126922607422
    10. ' ' → logprob: -11.512126922607422

Token 12: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.014384212903678417
    2. '>' → logprob: -4.2643842697143555
    3. ' ' → logprob: -9.514384269714355
    4. '[' → logprob: -10.014384269714355
    5. ' !=' → logprob: -10.014384269714355
    6. ' <' → logprob: -11.014384269714355
    7. '  ' → logprob: -12.139384269714355
    8. '```' → logprob: -12.389384269714355
    9. '   ' → logprob: -12.514384269714355
    10. ' >=' → logprob: -12.764384269714355

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11282730847597122
    2. '0' → logprob: -2.2378273010253906
    3. '=' → logprob: -13.23782730102539
    4. '>' → logprob: -14.36282730102539
    5. '1' → logprob: -14.36282730102539
    6. '```' → logprob: -14.98782730102539
    7. ' ' → logprob: -15.05032730102539
    8. 'count' → logprob: -15.36282730102539
    9. ' 
' → logprob: -15.36282730102539
    10. '_' → logprob: -15.48782730102539

Token 14: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031853171531111
    2. ' ' → logprob: -5.753185272216797
    3. '1' → logprob: -11.878185272216797
    4. '10' → logprob: -15.253185272216797
    5. '```' → logprob: -16.003185272216797
    6. '9' → logprob: -16.128185272216797
    7. 'count' → logprob: -16.378185272216797
    8. '100' → logprob: -17.003185272216797
    9. '5' → logprob: -17.503185272216797
    10. '>' → logprob: -17.753185272216797

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009101522737182677
    2. ' :' → logprob: -7.37591028213501
    3. ':
' → logprob: -8.250909805297852
    4. '):' → logprob: -11.875909805297852
    5. ':**' → logprob: -12.000909805297852
    6. ' :
' → logprob: -12.625909805297852
    7. ':n' → logprob: -14.000909805297852
    8. '>:' → logprob: -14.250909805297852
    9. '':' → logprob: -14.250909805297852
    10. '   ' → logprob: -14.250909805297852

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005826652981340885
    2. '```' → logprob: -6.130826473236084
    3. '    
' → logprob: -6.505826473236084
    4. 'n' → logprob: -7.505826473236084
    5. ' n' → logprob: -7.630826473236084
    6. '\' → logprob: -8.005826950073242
    7. '    ' → logprob: -8.255826950073242
    8. '     
' → logprob: -8.755826950073242
    9. ' 
' → logprob: -9.005826950073242
    10. '``' → logprob: -9.505826950073242

Token 17: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8587439656257629
    2. '    ' → logprob: -1.1087439060211182
    3. '   ' → logprob: -2.858743906021118
    4. ' if' → logprob: -2.858743906021118
    5. '```' → logprob: -3.108743906021118
    6. ' ' → logprob: -3.233743906021118
    7. 'n' (adapté à ' n') → logprob: -3.608743906021118
    8. ' ```' → logprob: -4.983744144439697
    9. 'count' → logprob: -5.608744144439697
    10. 'if' → logprob: -6.108744144439697

Token 18: ' =' (ID: 314)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.459582656621933
    2. '//=' → logprob: -1.4595826864242554
    3. '=' → logprob: -2.834582567214966
    4. ' =' → logprob: -3.584582567214966
    5. '```' → logprob: -4.334582805633545
    6. ' ' → logprob: -4.459582805633545
    7. ' /=' → logprob: -4.709582805633545
    8. ' >>=' → logprob: -5.459582805633545
    9. ' -=' → logprob: -5.959582805633545
    10. '//' → logprob: -6.084582805633545

Token 19: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10021529346704483
    2. 'n' → logprob: -2.350215196609497
    3. 'int' → logprob: -13.100214958190918
    4. ' ' → logprob: -13.475214958190918
    5. '```' → logprob: -13.975214958190918
    6. '	n' → logprob: -14.100214958190918
    7. '2' → logprob: -14.350214958190918
    8. '   ' → logprob: -14.600214958190918
    9. '/' → logprob: -15.100214958190918
    10. ' int' → logprob: -15.225214958190918

Token 20: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1606089472770691
    2. ' n' → logprob: -1.9106090068817139
    3. ' (' → logprob: -8.910609245300293
    4. ')' → logprob: -9.035609245300293
    5. ')n' → logprob: -9.785609245300293
    6. '(' → logprob: -11.285609245300293
    7. 'int' → logprob: -11.410609245300293
    8. '3' → logprob: -11.535609245300293
    9. '(n' → logprob: -11.660609245300293
    10. ' ' → logprob: -11.785609245300293

Token 21: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7417491674423218
    2. '-' → logprob: -1.3667491674423218
    3. ' +' → logprob: -1.8667491674423218
    4. ' //' → logprob: -2.7417492866516113
    5. '+' → logprob: -3.1167492866516113
    6. '//' → logprob: -6.116749286651611
    7. ')' → logprob: -6.741749286651611
    8. '%' → logprob: -7.116749286651611
    9. ' ' → logprob: -8.116748809814453
    10. ' %' → logprob: -8.116748809814453

Token 22: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08907382190227509
    2. ' ' → logprob: -2.464073896408081
    3. '2' → logprob: -10.21407413482666
    4. '(' → logprob: -10.96407413482666
    5. ' n' → logprob: -10.96407413482666
    6. 'n' → logprob: -10.96407413482666
    7. ' (' → logprob: -10.96407413482666
    8. 'count' → logprob: -11.46407413482666
    9. '3' → logprob: -11.96407413482666
    10. '(n' → logprob: -13.08907413482666

Token 23: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004529566504061222
    2. '2' → logprob: -8.625452995300293
    3. ' ' → logprob: -8.750452995300293
    4. 'n' → logprob: -9.250452995300293
    5. '(' → logprob: -12.000452995300293
    6. '(n' → logprob: -12.250452995300293
    7. '3' → logprob: -13.375452995300293
    8. '4' → logprob: -13.500452995300293
    9. '5' → logprob: -13.500452995300293
    10. ' n' → logprob: -14.000452995300293

Token 24: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05589285492897034
    2. ' )' → logprob: -2.9308929443359375
    3. ')//' → logprob: -7.1808929443359375
    4. ' -' → logprob: -8.930892944335938
    5. '-' → logprob: -9.305892944335938
    6. '3' → logprob: -11.680892944335938
    7. '1' → logprob: -11.930892944335938
    8. '2' → logprob: -12.805892944335938
    9. '//' → logprob: -13.180892944335938
    10. ' //' → logprob: -13.805892944335938

Token 25: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0025698295794427395
    2. '//' → logprob: -6.502569675445557
    3. ' ' → logprob: -7.002569675445557
    4. '   ' → logprob: -10.127570152282715
    5. '    ' → logprob: -10.502570152282715
    6. ')' → logprob: -10.627570152282715
    7. '2' → logprob: -11.127570152282715
    8. '3' → logprob: -11.627570152282715
    9. '  ' → logprob: -11.627570152282715
    10. ' //
' → logprob: -11.877570152282715

Token 26: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0010657975217327476
    2. '2' → logprob: -7.126065731048584
    3. ' ' → logprob: -8.251066207885742
    4. '4' → logprob: -16.251066207885742
    5. '5' → logprob: -16.626066207885742
    6. '   ' → logprob: -16.876066207885742
    7. '  ' → logprob: -17.126066207885742
    8. '```' → logprob: -18.063566207885742
    9. '6' → logprob: -18.251066207885742
    10. '1' → logprob: -18.251066207885742

Token 27: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0017775188898667693
    2. '2' → logprob: -6.376777648925781
    3. ' ' → logprob: -9.501777648925781
    4. '   ' → logprob: -15.501777648925781
    5. '4' → logprob: -15.876777648925781
    6. '5' → logprob: -16.25177764892578
    7. '  ' → logprob: -16.50177764892578
    8. '```' → logprob: -17.31427764892578
    9. '1' → logprob: -17.56427764892578
    10. '23' → logprob: -17.75177764892578

Token 28: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032581016421318054
    2. '```' → logprob: -5.032580852508545
    3. '    
' → logprob: -5.407580852508545
    4. '    ' → logprob: -5.407580852508545
    5. '<|end|>' → logprob: -5.407580852508545
    6. 'count' → logprob: -5.657580852508545
    7. '
' → logprob: -6.032580852508545
    8. ' ' → logprob: -6.157580852508545
    9. '  ' → logprob: -7.032580852508545
    10. '\' → logprob: -7.407580852508545

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02176891826093197
    2. 'count' → logprob: -4.896769046783447
    3. '\n' → logprob: -5.646769046783447
    4. ' ' → logprob: -6.146769046783447
    5. '    ' → logprob: -6.146769046783447
    6. '    
' → logprob: -6.146769046783447
    7. '\' → logprob: -6.771769046783447
    8. '<|end|>' → logprob: -7.271769046783447
    9. '```' → logprob: -7.646769046783447
    10. ' 
' → logprob: -7.771769046783447

Token 30: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.30925360321998596
    2. '   ' → logprob: -2.059253692626953
    3. '\n' → logprob: -2.559253692626953
    4. ' 
' → logprob: -3.684253692626953
    5. ' count' → logprob: -4.434253692626953
    6. '
' → logprob: -5.184253692626953
    7. '    
' → logprob: -5.434253692626953
    8. '    ' → logprob: -5.434253692626953
    9. '```' → logprob: -5.684253692626953
    10. '\' → logprob: -5.934253692626953

Token 31: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.005301469471305609
    2. '+=' → logprob: -5.255301475524902
    3. ' =' → logprob: -10.130301475524902
    4. '=' → logprob: -11.130301475524902
    5. '+' → logprob: -12.505301475524902
    6. '   ' → logprob: -12.630301475524902
    7. '<|end|>' → logprob: -13.505301475524902
    8. ' +' → logprob: -13.755301475524902
    9. ' ' → logprob: -13.880301475524902
    10. ' -=' → logprob: -14.630301475524902

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018150296062231064
    2. ' ' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.143150329589844
    4. ' ' → logprob: -16.643150329589844
    5. 'count' → logprob: -17.643150329589844
    6. '```' → logprob: -17.893150329589844
    7. '    ' → logprob: -17.893150329589844
    8. '2' → logprob: -18.330650329589844
    9. ' n' → logprob: -18.455650329589844
    10. '+' → logprob: -18.518150329589844

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.250036239624023
    3. '2' → logprob: -15.250036239624023
    4. '   ' → logprob: -16.000036239624023
    5. '3' → logprob: -16.250036239624023
    6. 'n' → logprob: -17.125036239624023
    7. 'count' → logprob: -17.500036239624023
    8. '  ' → logprob: -17.750036239624023
    9. '```' → logprob: -17.750036239624023
    10. '+' → logprob: -18.375036239624023

Token 34: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002484096447005868
    2. ')' → logprob: -7.252484321594238
    3. '<|end|>' → logprob: -7.377484321594238
    4. '
' → logprob: -7.627484321594238
    5. ' print' → logprob: -8.377484321594238
    6. '\n' → logprob: -8.502484321594238
    7. ' ' → logprob: -10.127484321594238
    8. '#' → logprob: -10.252484321594238
    9. '```' → logprob: -10.252484321594238
    10. '\' → logprob: -10.377484321594238

Token 35: 'print' (ID: 1598)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7936519384384155
    2. '
' → logprob: -1.1686519384384155
    3. '<|end|>' → logprob: -1.6686519384384155
    4. 'print' → logprob: -4.043652057647705
    5. '```' → logprob: -4.793652057647705
    6. '\' → logprob: -5.168652057647705
    7. '#' → logprob: -5.293652057647705
    8. ' 
' → logprob: -5.793652057647705
    9. ')' → logprob: -6.168652057647705
    10. '  
' → logprob: -6.668652057647705

Token 36: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07901669293642044
    2. '(count' → logprob: -2.57901668548584
    3. '('' → logprob: -9.32901668548584
    4. '()' → logprob: -10.57901668548584
    5. '("("' → logprob: -12.57901668548584
    6. '("' → logprob: -13.07901668548584
    7. '(len' → logprob: -13.32901668548584
    8. '((' → logprob: -13.45401668548584
    9. ' (' → logprob: -14.32901668548584
    10. 'count' → logprob: -14.57901668548584

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.375
    3. ' )' → logprob: -16.0
    4. ')`' → logprob: -17.125
    5. ')
' → logprob: -17.875
    6. '`)' → logprob: -18.125
    7. '#' → logprob: -18.875
    8. ')}' → logprob: -19.0
    9. ')**' → logprob: -19.625
    10. '）' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 35
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 45.71%
Précision adaptée (1ère position): 48.57%
Précision (top 10): 85.71%
================================================================================
