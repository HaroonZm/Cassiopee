================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:30:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class TrainingMachine:
    def __init__(self, index: int, tickets: int, calorie: int):
        self.index = index
        self.tickets = tickets
        self.calorie = calorie
        self.used = 0  # How many times machine is used in final solution

class Constraint:
    def __init__(self, a: int, b: int, c: int):
        self.a = a
        self.b = b
        self.c = c

class MaxCaloriesOptimizer:
    def __init__(self, machines, constraints):
        self.machines = machines
        self.constraints = constraints
        self.N = len(machines)
        self.R = len(constraints)

    def _build_graph(self):
        # Build graph for difference constraints of form x_a - x_b <= c
        graph = {i: [] for i in range(self.N)}
        for c in self.constraints:
            a = c.a - 1
            b = c.b - 1
            cost = c.c
            graph[b].append((a, cost))  # x_a - x_b <= c  => x_a <= x_b + c => x_b -(->) x_a with weight c
        self.graph = graph

    def _bellman_ford(self):
        # Use Bellman-Ford algorithm to find maximal x_i subject to constraints and 0<= x_i <= t_i
        dist = [float('inf')] * self.N
        # Dist interpreted as upper bound offset for usage of machines
        # To maximize calories, we want to assign x_i as large as possible but within tickets and constraints
        # Because constraints are x_a - x_b <= c, rearranged as x_a <= x_b + c,
        # treating x_b as base, x_a is upper bounded by x_b + c.
        dist = [-float('inf')] * self.N  # Store lower bounds for x_i (maximizing usage)
        # We need to find maximal x_i satisfying x_a - x_b <= c thus x_a <= x_b + c
        # Initialize dist with 0 as minimum lower bound is 0
        for i in range(self.N):
            dist[i] = 0

        # Relax edges R times
        for _ in range(self.R):
            updated = False
            for c in self.constraints:
                a = c.a - 1
                b = c.b - 1
                if dist[a] > dist[b] + c.c:
                    dist[a] = dist[b] + c.c
                    updated = True
            if not updated:
                break

        # dist[i] is an upper bound on x_i from constraints
        return dist

    def _adjust_usages(self, dist):
        # Determine maximum feasible usage x_i for each machine
        # x_i <= t_i (tickets)
        # x_i <= dist[i] (constraints upper bound)
        # x_i >= 0
        usage = [0] * self.N
        for i, machine in enumerate(self.machines):
            # Because dist[i] might be +inf or invalid (no feasible solution means -inf?), clamp it
            upper_bound = dist[i]
            if upper_bound == float('inf'):
                upper_bound = machine.tickets
            upper_bound = min(upper_bound, machine.tickets)
            if upper_bound < 0:
                upper_bound = 0
            usage[i] = int(upper_bound)
        return usage

    def _fix_violation(self, usage):
        # The previous step might not guarantee all constraints are met, fix by iterative relaxation
        # Repeatedly enforce x_a - x_b <= c constraints, adjust usage down if violated
        changed = True
        while changed:
            changed = False
            for c in self.constraints:
                a = c.a - 1
                b = c.b - 1
                if usage[a] > usage[b] + c.c:
                    old = usage[a]
                    usage[a] = usage[b] + c.c
                    if usage[a] < 0:
                        usage[a] = 0
                    if usage[a] != old:
                        changed = True
        return usage

    def maximize_calories(self):
        self._build_graph()
        dist = self._bellman_ford()
        usage = self._adjust_usages(dist)
        usage = self._fix_violation(usage)
        total_calories = 0
        for i, u in enumerate(usage):
            total_calories += u * self.machines[i].calorie
        return total_calories

class GymSimulator:
    def __init__(self):
        self.machines = []
        self.constraints = []

    def read_input(self):
        import sys
        input = sys.stdin.readline
        N, R = map(int, input().split())
        self.N = N
        self.R = R
        for i in range(N):
            t, e = map(int, input().split())
            self.machines.append(TrainingMachine(i, t, e))
        for _ in range(R):
            a, b, c = map(int, input().split())
            self.constraints.append(Constraint(a, b, c))

    def solve(self):
        optimizer = MaxCaloriesOptimizer(self.machines, self.constraints)
        ans = optimizer.maximize_calories()
        print(ans)

if __name__ == "__main__":
    simulator = GymSimulator()
    simulator.read_input()
    simulator.solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Training' (ID: 19988)
  → Token d'amorce (pas de prédiction)

Token 2: 'Machine' (ID: 25519)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34081441164016724
    2. '(' → logprob: -1.4658143520355225
    3. '{' → logprob: -2.9658143520355225
    4. '.' → logprob: -5.715814590454102
    5. '(:' → logprob: -6.590814590454102
    6. ' {' → logprob: -6.840814590454102
    7. '```' → logprob: -8.215814590454102
    8. ' :' → logprob: -8.965814590454102
    9. '():' → logprob: -9.715814590454102
    10. '({' → logprob: -10.340814590454102

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2124851793050766
    2. '(' → logprob: -1.7124851942062378
    3. '```' → logprob: -5.462485313415527
    4. '.' → logprob: -5.837485313415527
    5. '():' → logprob: -6.212485313415527
    6. '   ' → logprob: -7.212485313415527
    7. ':
' → logprob: -8.087485313415527
    8. '(
' → logprob: -8.337485313415527
    9. '()' → logprob: -8.962485313415527
    10. ''' → logprob: -9.337485313415527

Token 5: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1441603899002075
    2. '   ' → logprob: -1.3941603899002075
    3. '```' → logprob: -2.144160270690918
    4. '    ' → logprob: -2.394160270690918
    5. ''' → logprob: -3.144160270690918
    6. '_' → logprob: -3.519160270690918
    7. ' def' → logprob: -3.519160270690918
    8. '(' → logprob: -3.644160270690918
    9. '\' → logprob: -3.894160270690918
    10. '`' → logprob: -4.394160270690918

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03041769005358219
    2. ' training' → logprob: -4.2804179191589355
    3. '__' → logprob: -5.2804179191589355
    4. ' __' → logprob: -5.9054179191589355
    5. '_' → logprob: -6.5304179191589355
    6. ' train' → logprob: -6.6554179191589355
    7. ' Training' → logprob: -7.0304179191589355
    8. '_training' → logprob: -7.0304179191589355
    9. '  ' → logprob: -7.2804179191589355
    10. ' init' → logprob: -7.4054179191589355

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00012439649435691535
    2. ' init' → logprob: -9.000123977661133
    3. '_init' → logprob: -14.250123977661133
    4. 'ini' → logprob: -15.500123977661133
    5. '	init' → logprob: -16.250123977661133
    6. 'i' → logprob: -18.625123977661133
    7. '   ' → logprob: -18.625123977661133
    8. '  ' → logprob: -18.750123977661133
    9. ' ' → logprob: -19.125123977661133
    10. 'innit' → logprob: -19.250123977661133

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3919335603713989
    2. '__' → logprob: -1.141933560371399
    3. '(' → logprob: -5.891933441162109
    4. '_' → logprob: -6.891933441162109
    5. '__(
' → logprob: -7.016933441162109
    6. '__((' → logprob: -8.64193344116211
    7. '__('' → logprob: -9.89193344116211
    8. '(self' → logprob: -10.14193344116211
    9. '___' → logprob: -10.64193344116211
    10. '_(' → logprob: -11.01693344116211

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00598022760823369
    2. ' self' → logprob: -5.255980014801025
    3. ')' → logprob: -7.755980014801025
    4. '(self' → logprob: -8.755980491638184
    5. ' )' → logprob: -8.880980491638184
    6. ' ' → logprob: -12.130980491638184
    7. '_self' → logprob: -12.255980491638184
    8. 'space' → logprob: -13.380980491638184
    9. '<|end|>' → logprob: -13.505980491638184
    10. 's' → logprob: -13.630980491638184

Token 10: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24257463216781616
    2. ',' → logprob: -2.492574691772461
    3. 'self' → logprob: -3.117574691772461
    4. '_' → logprob: -3.742574691772461
    5. '<|end|>' → logprob: -3.742574691772461
    6. '(' → logprob: -4.117574691772461
    7. ' )' → logprob: -4.617574691772461
    8. '(self' → logprob: -5.617574691772461
    9. '.' → logprob: -6.367574691772461
    10. '):' → logprob: -6.492574691772461

Token 11: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4752555191516876
    2. ' self' → logprob: -0.9752554893493652
    3. ')' → logprob: -7.350255489349365
    4. ' )' → logprob: -7.975255489349365
    5. ' model' → logprob: -9.725255966186523
    6. ' training' → logprob: -9.850255966186523
    7. 'model' → logprob: -10.975255966186523
    8. 'params' → logprob: -11.600255966186523
    9. ' parameters' → logprob: -12.225255966186523
    10. ' data' → logprob: -12.225255966186523

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23192857205867767
    2. ')' → logprob: -1.6069285869598389
    3. '_' → logprob: -5.60692834854126
    4. ':' → logprob: -6.48192834854126
    5. '=' → logprob: -7.35692834854126
    6. ',' → logprob: -7.73192834854126
    7. ' ):' → logprob: -9.481928825378418
    8. 's' → logprob: -10.231928825378418
    9. ' )' → logprob: -10.356928825378418
    10. '):
' → logprob: -10.731928825378418

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1435326635837555
    2. ' int' → logprob: -2.0185327529907227
    3. 'self' → logprob: -8.268532752990723
    4. ' )' → logprob: -8.393532752990723
    5. ')' → logprob: -8.518532752990723
    6. ' self' → logprob: -10.018532752990723
    7. 's' → logprob: -10.643532752990723
    8. ' str' → logprob: -11.018532752990723
    9. ':int' → logprob: -11.268532752990723
    10. 'i' → logprob: -11.393532752990723

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2032279074192047
    2. ')' → logprob: -2.328227996826172
    3. ',' → logprob: -2.453227996826172
    4. '   ' → logprob: -8.828227996826172
    5. ':' → logprob: -9.078227996826172
    6. '):
' → logprob: -9.328227996826172
    7. '```' → logprob: -11.328227996826172
    8. '),' → logprob: -11.828227996826172
    9. ' ' → logprob: -12.078227996826172
    10. ' ,' → logprob: -12.203227996826172

Token 15: ' tickets' (ID: 17323)
  Prédit: ' model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' model' → logprob: -0.46385422348976135
    2. ' training' → logprob: -1.963854193687439
    3. ' data' → logprob: -2.4638543128967285
    4. ' dataset' → logprob: -2.9638543128967285
    5. ' name' → logprob: -3.3388543128967285
    6. ' optimizer' → logprob: -5.2138543128967285
    7. ' train' → logprob: -5.7138543128967285
    8. ' learning' → logprob: -5.8388543128967285
    9. ' input' → logprob: -5.8388543128967285
    10. ' batch' → logprob: -5.9638543128967285

Token 16: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16990745067596436
    2. ')' → logprob: -2.169907569885254
    3. '):' → logprob: -3.919907569885254
    4. '=' → logprob: -4.044907569885254
    5. ' )' → logprob: -6.669907569885254
    6. ',' → logprob: -6.919907569885254
    7. '[' → logprob: -7.544907569885254
    8. '=None' → logprob: -8.044907569885254
    9. ' =' → logprob: -8.294907569885254
    10. '_count' → logprob: -8.544907569885254

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.3507033586502075
    2. ' List' → logprob: -1.4757033586502075
    3. 'int' → logprob: -1.6007033586502075
    4. ' list' → logprob: -1.8507033586502075
    5. 'List' → logprob: -3.100703239440918
    6. 'list' → logprob: -3.225703239440918
    7. ' ' → logprob: -3.350703239440918
    8. '[int' → logprob: -4.600703239440918
    9. 'dict' → logprob: -5.600703239440918
    10. ' []' → logprob: -5.600703239440918

Token 18: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011691111139953136
    2. ')' → logprob: -5.011691093444824
    3. ',' → logprob: -5.386691093444824
    4. ':' → logprob: -8.261691093444824
    5. '):
' → logprob: -9.511691093444824
    6. '   ' → logprob: -10.386691093444824
    7. '=' → logprob: -12.136691093444824
    8. ' ):' → logprob: -12.511691093444824
    9. ''):' → logprob: -12.886691093444824
    10. '       ' → logprob: -13.636691093444824

Token 19: ' calorie' (ID: 66006)
  Prédit: ' capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.801805853843689
    2. ' training' → logprob: -1.676805853843689
    3. ' current' → logprob: -2.3018059730529785
    4. ' train' → logprob: -3.0518059730529785
    5. ' max' → logprob: -4.0518059730529785
    6. ' available' → logprob: -4.0518059730529785
    7. ' price' → logprob: -4.1768059730529785
    8. ' batch' → logprob: -4.1768059730529785
    9. ' queue' → logprob: -4.6768059730529785
    10. ' starting' → logprob: -4.6768059730529785

Token 20: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023152532055974007
    2. '_limit' → logprob: -4.6481523513793945
    3. '_int' → logprob: -6.0231523513793945
    4. '_goal' → logprob: -6.1481523513793945
    5. '_count' → logprob: -6.2731523513793945
    6. '_s' → logprob: -6.6481523513793945
    7. '_' → logprob: -6.7731523513793945
    8. '_b' → logprob: -6.7731523513793945
    9. '_budget' → logprob: -6.7731523513793945
    10. '_target' → logprob: -8.148152351379395

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1808643639087677
    2. 'int' → logprob: -1.8058643341064453
    3. ' float' → logprob: -7.680864334106445
    4. ' ' → logprob: -8.055864334106445
    5. ' ' → logprob: -8.805864334106445
    6. 's' → logprob: -10.430864334106445
    7. '=int' → logprob: -10.430864334106445
    8. '_int' → logprob: -10.555864334106445
    9. 'float' → logprob: -10.805864334106445
    10. ')' → logprob: -10.930864334106445

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022536260075867176
    2. ')' → logprob: -6.627253532409668
    3. ',' → logprob: -7.127253532409668
    4. ':' → logprob: -9.502253532409668
    5. '):
' → logprob: -10.502253532409668
    6. '   ' → logprob: -11.127253532409668
    7. '       ' → logprob: -13.627253532409668
    8. ''):' → logprob: -13.877253532409668
    9. '),' → logprob: -14.127253532409668
    10. '=' → logprob: -14.127253532409668

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0794776901602745
    2. '\n' → logprob: -3.4544777870178223
    3. '   ' → logprob: -4.454477787017822
    4. '        
' → logprob: -4.579477787017822
    5. '\' → logprob: -4.704477787017822
    6. '    ' → logprob: -5.454477787017822
    7. '```' → logprob: -6.204477787017822
    8. '<|end|>' → logprob: -6.204477787017822
    9. ' 
' → logprob: -7.079477787017822
    10. '    
' → logprob: -7.204477787017822

Token 24: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09969525784254074
    2. '       ' → logprob: -2.5996952056884766
    3. ' self' → logprob: -4.599695205688477
    4. '   ' → logprob: -6.474695205688477
    5. '\' → logprob: -6.599695205688477
    6. '_' → logprob: -6.849695205688477
    7. 's' → logprob: -6.849695205688477
    8. '```' → logprob: -6.849695205688477
    9. '        ' → logprob: -7.224695205688477
    10. '<|end|>' → logprob: -7.349695205688477

Token 25: '.index' (ID: 9736)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010815176647156477
    2. ' .' → logprob: -7.126081466674805
    3. '.user' → logprob: -9.376081466674805
    4. '._' → logprob: -10.001081466674805
    5. '.index' → logprob: -11.001081466674805
    6. '.token' → logprob: -12.001081466674805
    7. '.is' → logprob: -12.376081466674805
    8. ').' → logprob: -12.501081466674805
    9. '.name' → logprob: -12.501081466674805
    10. '.period' → logprob: -12.501081466674805

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5027293562889099
    2. '=' → logprob: -1.0027294158935547
    3. '<|end|>' → logprob: -4.002729415893555
    4. '.' → logprob: -5.252729415893555
    5. ')' → logprob: -6.502729415893555
    6. ' ' → logprob: -6.627729415893555
    7. ',' → logprob: -7.627729415893555
    8. '_' → logprob: -7.877729415893555
    9. '<|end|>' → logprob: -8.127729415893555
    10. ' is' → logprob: -9.377729415893555

Token 27: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.16022838652133942
    2. 'index' → logprob: -1.9102283716201782
    3. '	index' → logprob: -13.535228729248047
    4. '#index' → logprob: -14.035228729248047
    5. '=index' → logprob: -14.535228729248047
    6. ' tickets' → logprob: -14.660228729248047
    7. ' ' → logprob: -14.785228729248047
    8. '(index' → logprob: -15.785228729248047
    9. 'tickets' → logprob: -15.785228729248047
    10. '0' → logprob: -16.035228729248047

Token 28: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6005446910858154
    2. 'self' (adapté à ' self') → logprob: -1.2255446910858154
    3. ' self' → logprob: -1.8505446910858154
    4. '        ' → logprob: -7.3505449295043945
    5. ' ' → logprob: -10.725544929504395
    6. ' ' → logprob: -10.975544929504395
    7. '	self' → logprob: -11.225544929504395
    8. 's' → logprob: -11.600544929504395
    9. '      ' → logprob: -12.100544929504395
    10. '   ' → logprob: -12.475544929504395

Token 31: '.t' (ID: 1370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003606959478929639
    2. '.t' → logprob: -5.878606796264648
    3. '.cal' → logprob: -7.503606796264648
    4. '.ticket' → logprob: -9.128606796264648
    5. ' .' → logprob: -9.878606796264648
    6. 'tickets' → logprob: -11.628606796264648
    7. '.training' → logprob: -11.753606796264648
    8. '.tokens' → logprob: -11.878606796264648
    9. '.s' → logprob: -12.628606796264648
    10. '.c' → logprob: -12.628606796264648

Token 32: 'ickets' (ID: 11708)
  Prédit: 'ickets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickets' → logprob: -0.008291979320347309
    2. 'i' → logprob: -5.258292198181152
    3. 'icket' → logprob: -6.758292198181152
    4. 'icke' → logprob: -7.133292198181152
    5. 'ic' → logprob: -7.258292198181152
    6. 'ick' → logprob: -8.633292198181152
    7. '   ' → logprob: -9.508292198181152
    8. ' ' → logprob: -11.133292198181152
    9. '_i' → logprob: -11.133292198181152
    10. '```' → logprob: -11.258292198181152

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009760101325809956
    2. '=' → logprob: -4.634759902954102
    3. ' +=' → logprob: -13.009759902954102
    4. '<|end|>' → logprob: -14.384759902954102
    5. ' ' → logprob: -14.509759902954102
    6. '   ' → logprob: -15.509759902954102
    7. ' -=' → logprob: -16.0097599029541
    8. '<|end|>' → logprob: -16.3847599029541
    9. '    ' → logprob: -16.5097599029541
    10. ' =
' → logprob: -16.7597599029541

Token 34: ' tickets' (ID: 17323)
  Prédit: ' tickets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tickets' → logprob: -0.011066683568060398
    2. 'tickets' → logprob: -4.511066913604736
    3. ' ticket' → logprob: -11.761066436767578
    4. ' ' → logprob: -13.136066436767578
    5. 'ickets' → logprob: -13.261066436767578
    6. '	t' → logprob: -13.511066436767578
    7. ' ' → logprob: -13.636066436767578
    8. 't' → logprob: -14.698566436767578
    9. 'ticket' → logprob: -14.823566436767578
    10. ' calories' → logprob: -14.823566436767578

Token 35: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4328541159629822
    2. '<|end|>' → logprob: -1.057854175567627
    3. '
' → logprob: -6.057854175567627
    4. '<|end|>' → logprob: -7.932854175567627
    5. ',' → logprob: -8.307853698730469
    6. 'newline' → logprob: -8.807853698730469
    7. '        
' → logprob: -8.807853698730469
    8. '        ' → logprob: -8.932853698730469
    9. 'self' → logprob: -9.057853698730469
    10. ')' → logprob: -9.182853698730469

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000959700730163604
    2. '<|end|>' → logprob: -7.750959873199463
    3. 'self' → logprob: -8.875959396362305
    4. '        
' → logprob: -9.125959396362305
    5. '        ' → logprob: -9.750959396362305
    6. ',' → logprob: -9.750959396362305
    7. '`' → logprob: -10.875959396362305
    8. '      ' → logprob: -10.875959396362305
    9. '```' → logprob: -11.125959396362305
    10. ')' → logprob: -11.250959396362305

Token 37: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17582394182682037
    2. ' self' → logprob: -2.300823926925659
    3. '       ' → logprob: -2.800823926925659
    4. '        ' → logprob: -9.300824165344238
    5. 'cal' → logprob: -9.675824165344238
    6. ' calorie' → logprob: -10.175824165344238
    7. ' ' → logprob: -10.550824165344238
    8. ' ' → logprob: -11.175824165344238
    9. '      ' → logprob: -11.800824165344238
    10. ',' → logprob: -11.800824165344238

Token 38: '.cal' (ID: 40302)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2045879364013672
    2. '.cal' → logprob: -1.7045879364013672
    3. 'cal' → logprob: -5.954587936401367
    4. ' .' → logprob: -8.204587936401367
    5. '_cal' → logprob: -9.579587936401367
    6. '.t' → logprob: -10.579587936401367
    7. '	cal' → logprob: -10.704587936401367
    8. '=' → logprob: -10.954587936401367
    9. ' =' → logprob: -11.204587936401367
    10. '.car' → logprob: -11.329587936401367

Token 39: 'orie' (ID: 22416)
  Prédit: 'orie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orie' → logprob: -0.0015946034109219909
    2. 'o' → logprob: -7.001594543457031
    3. 'ories' → logprob: -7.626594543457031
    4. 'ory' → logprob: -8.751594543457031
    5. '```' → logprob: -11.626594543457031
    6. 'or' → logprob: -12.126594543457031
    7. '_' → logprob: -12.251594543457031
    8. ' or' → logprob: -12.876594543457031
    9. 'oire' → logprob: -13.376594543457031
    10. '``' → logprob: -13.376594543457031

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3875631093978882
    2. ' =' → logprob: -1.1375631093978882
    3. 's' → logprob: -8.26256275177002
    4. ')' → logprob: -8.88756275177002
    5. ' ' → logprob: -9.51256275177002
    6. '<|end|>' → logprob: -10.13756275177002
    7. '_' → logprob: -10.26256275177002
    8. '_per' → logprob: -10.38756275177002
    9. '.' → logprob: -10.88756275177002
    10. ' =
' → logprob: -11.26256275177002

Token 41: ' calorie' (ID: 66006)
  Prédit: ' calorie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calorie' → logprob: -0.026382381096482277
    2. 'cal' → logprob: -3.6513824462890625
    3. ' ' → logprob: -10.526382446289062
    4. ' ' → logprob: -10.901382446289062
    5. ' calor' → logprob: -11.776382446289062
    6. ' calories' → logprob: -11.901382446289062
    7. '	cal' → logprob: -11.901382446289062
    8. ' cal' → logprob: -12.151382446289062
    9. '(cal' → logprob: -13.026382446289062
    10. '-cal' → logprob: -13.151382446289062

Token 42: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6167861223220825
    2. '   ' → logprob: -1.1167861223220825
    3. '<|end|>' → logprob: -2.741786003112793
    4. '    
' → logprob: -3.366786003112793
    5. '\n' → logprob: -4.116786003112793
    6. ' 
' → logprob: -5.866786003112793
    7. ' ' → logprob: -6.116786003112793
    8. '\' → logprob: -6.241786003112793
    9. '  
' → logprob: -6.366786003112793
    10. ',' → logprob: -7.116786003112793

Token 43: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3468121886253357
    2. '   ' → logprob: -1.4718122482299805
    3. '<|end|>' → logprob: -3.2218122482299805
    4. '    
' → logprob: -4.5968122482299805
    5. '\n' → logprob: -4.9718122482299805
    6. '```' → logprob: -7.0968122482299805
    7. '  
' → logprob: -7.2218122482299805
    8. '<|end|>' → logprob: -7.3468122482299805
    9. ' 
' → logprob: -7.5968122482299805
    10. '\' → logprob: -7.5968122482299805

Token 44: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3991396129131317
    2. '<|end|>' → logprob: -1.774139642715454
    3. '   ' → logprob: -2.274139642715454
    4. 'def' → logprob: -3.899139642715454
    5. '    
' → logprob: -4.774139404296875
    6. '\n' → logprob: -5.274139404296875
    7. '       ' → logprob: -5.399139404296875
    8. ')' → logprob: -5.774139404296875
    9. '```' → logprob: -5.774139404296875
    10. '<|end|>' → logprob: -6.024139404296875

Token 45: '.used' (ID: 158890)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.046364568173885345
    2. '._' → logprob: -3.7963645458221436
    3. '_' → logprob: -5.171364784240723
    4. ' .' → logprob: -5.296364784240723
    5. '_queue' → logprob: -5.796364784240723
    6. '_list' → logprob: -7.546364784240723
    7. '_time' → logprob: -7.546364784240723
    8. '_tasks' → logprob: -7.671364784240723
    9. '.queue' → logprob: -8.046364784240723
    10. '_count' → logprob: -8.171364784240723

Token 46: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7466462254524231
    2. ' =' → logprob: -0.9966462254524231
    3. '=' → logprob: -1.8716461658477783
    4. '_space' → logprob: -6.996646404266357
    5. '_=' → logprob: -7.246646404266357
    6. '_tokens' → logprob: -7.621646404266357
    7. '_count' → logprob: -8.6216459274292
    8. 's' → logprob: -9.2466459274292
    9. 'ed' → logprob: -9.2466459274292
    10. '_spaces' → logprob: -9.3716459274292

Token 47: ' ' (ID: 220)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.08057810366153717
    2. 'False' → logprob: -2.705578088760376
    3. ' ' → logprob: -4.830578327178955
    4. '0' → logprob: -5.955578327178955
    5. ' True' → logprob: -12.205577850341797
    6. ' []' → logprob: -12.455577850341797
    7. '[]' → logprob: -13.830577850341797
    8. '(False' → logprob: -14.580577850341797
    9. '=False' → logprob: -14.705577850341797
    10. ' ' → logprob: -15.080577850341797

Token 48: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.016817929223179817
    2. ' False' → logprob: -4.641818046569824
    3. '0' → logprob: -5.016818046569824
    4. '[]' → logprob: -8.016818046569824
    5. ' ' → logprob: -9.516818046569824
    6. ' []' → logprob: -12.641818046569824
    7. 'set' → logprob: -13.891818046569824
    8. '   ' → logprob: -13.891818046569824
    9. 'F' → logprob: -14.141818046569824
    10. '[' → logprob: -14.391818046569824

Token 49: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021384501829743385
    2. '   ' → logprob: -4.2713847160339355
    3. '<|end|>' → logprob: -5.5213847160339355
    4. '    
' → logprob: -6.5213847160339355
    5. ' 
' → logprob: -7.8963847160339355
    6. '\n' → logprob: -8.146384239196777
    7. '

' → logprob: -8.271384239196777
    8. ' def' → logprob: -9.021384239196777
    9. 'def' → logprob: -9.021384239196777
    10. '  
' → logprob: -9.271384239196777

Token 50: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011528394185006618
    2. '<|end|>' → logprob: -5.011528491973877
    3. '   ' → logprob: -5.886528491973877
    4. '    
' → logprob: -7.386528491973877
    5. '

' → logprob: -7.886528491973877
    6. ' 
' → logprob: -8.011528015136719
    7. ' ' → logprob: -8.636528015136719
    8. '\n' → logprob: -8.886528015136719
    9. '```' → logprob: -9.636528015136719
    10. '<|end|>' → logprob: -9.761528015136719

Token 51: ' How' (ID: 3253)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7193488478660583
    2. ' False' → logprob: -0.9693488478660583
    3. 'False' → logprob: -2.719348907470703
    4. ' True' → logprob: -2.969348907470703
    5. '<|end|>' → logprob: -4.719348907470703
    6. 'True' → logprob: -6.469348907470703
    7. '  ' → logprob: -7.094348907470703
    8. '0' → logprob: -7.219348907470703
    9. ' used' → logprob: -7.469348907470703
    10. ' "' → logprob: -7.719348907470703

Token 52: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.022304058074951172
    2. 'many' → logprob: -4.397304058074951
    3. ' much' → logprob: -5.022304058074951
    4. ' often' → logprob: -6.522304058074951
    5. '<|end|>' → logprob: -7.272304058074951
    6. 'much' → logprob: -8.27230453491211
    7. '_many' → logprob: -8.64730453491211
    8. ' ' → logprob: -8.77230453491211
    9. '    ' → logprob: -9.39730453491211
    10. 'Many' → logprob: -9.52230453491211

Token 53: ' times' (ID: 4238)
  Prédit: ' tickets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tickets' → logprob: -0.9717974662780762
    2. ' times' → logprob: -1.2217974662780762
    3. 'tickets' → logprob: -1.4717974662780762
    4. ' training' → logprob: -3.721797466278076
    5. ' trainings' → logprob: -3.846797466278076
    6. '<|end|>' → logprob: -3.971797466278076
    7. 'times' → logprob: -4.221797466278076
    8. ' tokens' → logprob: -4.971797466278076
    9. 'tokens' → logprob: -5.846797466278076
    10. ' ' → logprob: -6.971797466278076

Token 54: ' machine' (ID: 7342)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' is' (ID: 382)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.035092614591121674
    2. ' was' → logprob: -4.410092830657959
    3. ' used' → logprob: -4.410092830657959
    4. 'has' → logprob: -5.160092830657959
    5. ' can' → logprob: -6.660092830657959
    6. 'used' → logprob: -6.785092830657959
    7. '<|end|>' → logprob: -7.035092830657959
    8. ' ' → logprob: -7.910092830657959
    9. ' is' → logprob: -8.0350923538208
    10. 'was' → logprob: -9.4100923538208

Token 56: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.03878750279545784
    2. 'used' → logprob: -3.413787603378296
    3. '_used' → logprob: -5.663787364959717
    4. ' ' → logprob: -7.788787364959717
    5. ' has' → logprob: -8.038787841796875
    6. ' already' → logprob: -8.538787841796875
    7. ' trained' → logprob: -8.913787841796875
    8. ' been' → logprob: -9.038787841796875
    9. 'already' → logprob: -9.663787841796875
    10. '   ' → logprob: -9.913787841796875

Token 57: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7236578464508057
    2. '   ' → logprob: -0.8486578464508057
    3. '    
' → logprob: -2.9736578464508057
    4. '<|end|>' → logprob: -3.7236578464508057
    5. ' 
' → logprob: -6.223657608032227
    6. '  
' → logprob: -6.473657608032227
    7. '<|end|>' → logprob: -6.598657608032227
    8. '\n' → logprob: -6.598657608032227
    9. '       ' → logprob: -6.848657608032227
    10. '```' → logprob: -7.348657608032227

Token 58: ' final' (ID: 1721)
  Prédit: ' training'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' training' → logprob: -0.27487874031066895
    2. ' current' → logprob: -2.149878740310669
    3. ' total' → logprob: -3.024878740310669
    4. ' a' → logprob: -3.649878740310669
    5. ' the' → logprob: -3.899878740310669
    6. 'training' → logprob: -4.52487850189209
    7. 'current' → logprob: -5.77487850189209
    8. ' this' → logprob: -5.89987850189209
    9. 'a' → logprob: -6.27487850189209
    10. 'total' → logprob: -6.52487850189209

Token 59: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.4436419904232025
    2. ' plan' → logprob: -2.3186419010162354
    3. ' schedule' → logprob: -2.4436419010162354
    4. 'solution' → logprob: -2.6936419010162354
    5. ' answer' → logprob: -3.6936419010162354
    6. 'schedule' → logprob: -4.3186421394348145
    7. ' sequence' → logprob: -4.6936421394348145
    8. '_solution' → logprob: -4.9436421394348145
    9. ' selection' → logprob: -5.0686421394348145
    10. '_schedule' → logprob: -5.5686421394348145

Token 60: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2691127061843872
    2. '   ' → logprob: -1.8941127061843872
    3. '<|end|>' → logprob: -2.8941125869750977
    4. '    
' → logprob: -3.7691125869750977
    5. '<|end|>' → logprob: -6.644112586975098
    6. ' 
' → logprob: -6.644112586975098
    7. '       ' → logprob: -7.019112586975098
    8. '\n' → logprob: -7.144112586975098
    9. '  
' → logprob: -7.519112586975098
    10. '```' → logprob: -7.769112586975098

Token 61: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6192898750305176
    2. '
' → logprob: -0.8692898750305176
    3. '    
' → logprob: -3.7442898750305176
    4. ' 
' → logprob: -4.994289875030518
    5. 'def' → logprob: -5.744289875030518
    6. '<|end|>' → logprob: -5.994289875030518
    7. '\n' → logprob: -6.494289875030518
    8. '```' → logprob: -6.994289875030518
    9. '\' → logprob: -7.119289875030518
    10. '  
' → logprob: -7.494289875030518

Token 62: ' Constraint' (ID: 86056)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.2876216471195221
    2. ' Training' → logprob: -1.9126216173171997
    3. ' Trainer' → logprob: -3.5376217365264893
    4. ' Ticket' → logprob: -3.6626217365264893
    5. ' Solver' → logprob: -4.03762149810791
    6. ' User' → logprob: -5.28762149810791
    7. ' Priority' → logprob: -5.78762149810791
    8. ' Scheduler' → logprob: -5.91262149810791
    9. ' Reservation' → logprob: -6.03762149810791
    10. ' Participant' → logprob: -6.53762149810791

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007717476109974086
    2. ' :' → logprob: -7.750771522521973
    3. '(' → logprob: -8.500771522521973
    4. ':
' → logprob: -9.875771522521973
    5. '<|end|>' → logprob: -10.500771522521973
    6. '):' → logprob: -11.125771522521973
    7. 's' → logprob: -11.875771522521973
    8. '(object' → logprob: -11.875771522521973
    9. '>:' → logprob: -12.125771522521973
    10. '[' → logprob: -12.500771522521973

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016627779230475426
    2. '<|end|>' → logprob: -4.516627788543701
    3. '    ' → logprob: -6.266627788543701
    4. ' ' → logprob: -6.516627788543701
    5. '(' → logprob: -7.391627788543701
    6. '  ' → logprob: -7.641627788543701
    7. ' def' → logprob: -7.766627788543701
    8. 'def' → logprob: -8.891627311706543
    9. '<|end|>' → logprob: -8.891627311706543
    10. '    
' → logprob: -9.141627311706543

Token 65: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6996102333068848
    2. '   ' → logprob: -1.0746102333068848
    3. 'def' (adapté à ' def') → logprob: -1.8246102333068848
    4. ' ' → logprob: -8.949609756469727
    5. '    ' → logprob: -9.324609756469727
    6. 'class' → logprob: -9.324609756469727
    7. '	def' → logprob: -9.324609756469727
    8. '  ' → logprob: -9.949609756469727
    9. '```' → logprob: -11.824609756469727
    10. '   ' → logprob: -11.949609756469727

Token 66: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004455754533410072
    2. '__' → logprob: -6.12945556640625
    3. ' init' → logprob: -7.12945556640625
    4. '_init' → logprob: -7.25445556640625
    5. ' ' → logprob: -8.00445556640625
    6. 'init' → logprob: -8.37945556640625
    7. ' ' → logprob: -9.12945556640625
    8. ' ```' → logprob: -10.37945556640625
    9. ' _' → logprob: -11.12945556640625
    10. ' def' → logprob: -11.50445556640625

Token 67: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.4617256056226324e-05
    2. 'nit' → logprob: -12.125014305114746
    3. 'ini' → logprob: -12.375014305114746
    4. 'i' → logprob: -13.500014305114746
    5. 'in' → logprob: -13.500014305114746
    6. ' init' → logprob: -14.375014305114746
    7. 'int' → logprob: -14.750014305114746
    8. '_init' → logprob: -15.125014305114746
    9. 'it' → logprob: -16.250015258789062
    10. '   ' → logprob: -16.375015258789062

Token 68: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04989456385374069
    2. '__' → logprob: -3.1748945713043213
    3. '__(
' → logprob: -5.674894332885742
    4. '(' → logprob: -6.424894332885742
    5. '(self' → logprob: -7.049894332885742
    6. '__((' → logprob: -7.174894332885742
    7. ' (' → logprob: -9.174894332885742
    8. '__(*' → logprob: -10.549894332885742
    9. '__('' → logprob: -10.924894332885742
    10. '__(/*!' → logprob: -11.549894332885742

Token 69: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000556012790184468
    2. ' self' → logprob: -7.500555992126465
    3. ')' → logprob: -13.750555992126465
    4. '   ' → logprob: -14.500555992126465
    5. '):
' → logprob: -15.125555992126465
    6. ',' → logprob: -15.375555992126465
    7. '	self' → logprob: -15.500555992126465
    8. '
' → logprob: -15.625555992126465
    9. '(self' → logprob: -15.875555992126465
    10. '0' → logprob: -16.00055694580078

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009010656736791134
    2. ' ,' → logprob: -5.0090107917785645
    3. 'self' → logprob: -6.3840107917785645
    4. '(self' → logprob: -8.259010314941406
    5. ' self' → logprob: -8.759010314941406
    6. '<|end|>' → logprob: -9.259010314941406
    7. ',self' → logprob: -10.509010314941406
    8. ')' → logprob: -10.759010314941406
    9. ' (' → logprob: -11.509010314941406
    10. '(' → logprob: -11.884010314941406

Token 71: ' a' (ID: 261)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.8794559836387634
    2. ' max' → logprob: -1.7544560432434082
    3. ' self' → logprob: -3.129456043243408
    4. ' type' → logprob: -3.754456043243408
    5. 'index' → logprob: -4.004456043243408
    6. ' start' → logprob: -4.004456043243408
    7. ' constraint' → logprob: -4.129456043243408
    8. ')' → logprob: -4.379456043243408
    9. ' machine' → logprob: -4.379456043243408
    10. ' limit' → logprob: -4.379456043243408

Token 72: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40924692153930664
    2. ' ,' → logprob: -1.1592469215393066
    3. '1' → logprob: -4.659246921539307
    4. ':' → logprob: -5.784246921539307
    5. ')' → logprob: -6.284246921539307
    6. 'a' → logprob: -7.159246921539307
    7. ' ' → logprob: -7.159246921539307
    8. '_index' → logprob: -7.284246921539307
    9. '):' → logprob: -7.284246921539307
    10. '_' → logprob: -7.409246921539307

Token 73: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.43034628033638
    2. ' int' → logprob: -1.0553462505340576
    3. '[int' → logprob: -7.305346488952637
    4. '   ' → logprob: -8.805346488952637
    5. ' list' → logprob: -8.930346488952637
    6. 'list' → logprob: -9.430346488952637
    7. '=int' → logprob: -9.430346488952637
    8. ' str' → logprob: -9.430346488952637
    9. ' ' → logprob: -9.680346488952637
    10. '    ' → logprob: -9.805346488952637

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043491337448358536
    2. ' ,' → logprob: -3.1684913635253906
    3. ')' → logprob: -8.41849136352539
    4. '   ' → logprob: -9.41849136352539
    5. '):' → logprob: -10.16849136352539
    6. ',b' → logprob: -10.91849136352539
    7. ',a' → logprob: -10.91849136352539
    8. 'a' → logprob: -11.16849136352539
    9. ',int' → logprob: -11.41849136352539
    10. ' ' → logprob: -11.41849136352539

Token 75: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3488021194934845
    2. ' b' → logprob: -1.223802089691162
    3. ' ' → logprob: -8.47380256652832
    4. '<|end|>' → logprob: -9.34880256652832
    5. '    ' → logprob: -11.84880256652832
    6. 'constraint' → logprob: -12.09880256652832
    7. ' constraint' → logprob: -12.34880256652832
    8. 'space' → logprob: -12.34880256652832
    9. 'n' → logprob: -12.59880256652832
    10. '	b' → logprob: -12.84880256652832

Token 76: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06926082074642181
    2. '):' → logprob: -3.444260835647583
    3. ',' → logprob: -3.569260835647583
    4. ')' → logprob: -5.069260597229004
    5. ' ,' → logprob: -8.694260597229004
    6. ' :' → logprob: -9.194260597229004
    7. ' ):' → logprob: -9.194260597229004
    8. ':int' → logprob: -9.819260597229004
    9. '):
' → logprob: -10.319260597229004
    10. '<|end|>' → logprob: -10.819260597229004

Token 77: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.42876291275024414
    2. 'int' → logprob: -1.0537629127502441
    3. ')' → logprob: -11.303762435913086
    4. ' ' → logprob: -11.303762435913086
    5. ':int' → logprob: -11.803762435913086
    6. '	int' → logprob: -12.053762435913086
    7. '=int' → logprob: -12.303762435913086
    8. ' ' → logprob: -12.428762435913086
    9. ' )' → logprob: -13.053762435913086
    10. '(int' → logprob: -13.053762435913086

Token 78: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20368991792201996
    2. ',' → logprob: -1.7036899328231812
    3. ')' → logprob: -7.078690052032471
    4. '):
' → logprob: -7.203690052032471
    5. ':' → logprob: -7.578690052032471
    6. ' ,' → logprob: -9.328689575195312
    7. ' ):' → logprob: -9.953689575195312
    8. '   ' → logprob: -12.078689575195312
    9. '<|end|>' → logprob: -12.078689575195312
    10. ' ' → logprob: -12.828689575195312

Token 79: ' c' (ID: 274)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.0852739810943604
    2. ' c' → logprob: -1.4602739810943604
    3. ' limit' → logprob: -2.4602739810943604
    4. 'c' → logprob: -3.3352739810943604
    5. ' weight' → logprob: -3.3352739810943604
    6. 'max' → logprob: -3.5852739810943604
    7. 'limit' → logprob: -3.8352739810943604
    8. ' k' → logprob: -3.8352739810943604
    9. ' min' → logprob: -4.272773742675781
    10. ' d' → logprob: -4.272773742675781

Token 80: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007953316089697182
    2. ')' → logprob: -8.125795364379883
    3. '):' → logprob: -8.250795364379883
    4. ':int' → logprob: -9.250795364379883
    5. ' :' → logprob: -9.625795364379883
    6. ',' → logprob: -9.875795364379883
    7. '<|end|>' → logprob: -11.000795364379883
    8. '):
' → logprob: -13.250795364379883
    9. '<|end|>' → logprob: -13.500795364379883
    10. ' ' → logprob: -14.375795364379883

Token 81: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12727926671504974
    2. ' int' → logprob: -2.127279281616211
    3. ')' → logprob: -8.502279281616211
    4. ' ' → logprob: -10.502279281616211
    5. ':int' → logprob: -10.752279281616211
    6. '[int' → logprob: -10.752279281616211
    7. '=int' → logprob: -10.877279281616211
    8. '(int' → logprob: -11.252279281616211
    9. '	int' → logprob: -11.752279281616211
    10. '<|end|>' → logprob: -12.002279281616211

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006364276050589979
    2. '):
' → logprob: -8.000636100769043
    3. ')' → logprob: -8.500636100769043
    4. ',' → logprob: -9.750636100769043
    5. ':' → logprob: -10.250636100769043
    6. ' ):' → logprob: -13.250636100769043
    7. '   ' → logprob: -14.250636100769043
    8. '<|end|>' → logprob: -15.250636100769043
    9. '       ' → logprob: -15.750636100769043
    10. ' ' → logprob: -15.875636100769043

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11684347689151764
    2. ':' → logprob: -2.6168434619903564
    3. '):' → logprob: -4.2418437004089355
    4. '<|end|>' → logprob: -4.2418437004089355
    5. ')' → logprob: -5.6168437004089355
    6. ',' → logprob: -5.8668437004089355
    7. '):
' → logprob: -7.4918437004089355
    8. ' :' → logprob: -8.116843223571777
    9. '   ' → logprob: -8.366843223571777
    10. ' ' → logprob: -8.741843223571777

Token 84: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.37238219380378723
    2. ' self' → logprob: -1.2473821640014648
    3. '       ' → logprob: -3.747382164001465
    4. '   ' → logprob: -10.622382164001465
    5. ' ' → logprob: -11.247382164001465
    6. '	self' → logprob: -11.247382164001465
    7. '```' → logprob: -12.247382164001465
    8. 'super' → logprob: -12.247382164001465
    9. '(self' → logprob: -12.872382164001465
    10. ' super' → logprob: -12.997382164001465

Token 85: '.a' (ID: 8772)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1833498775959015
    2. ' =' → logprob: -1.933349847793579
    3. '.a' → logprob: -4.308350086212158
    4. ' .' → logprob: -4.933350086212158
    5. '=' → logprob: -6.433350086212158
    6. '<|end|>' → logprob: -8.183349609375
    7. '.=' → logprob: -9.433349609375
    8. ' ' → logprob: -9.683349609375
    9. 'a' → logprob: -10.058349609375
    10. ' .=' → logprob: -10.183349609375

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005553305149078369
    2. '=' → logprob: -5.255553245544434
    3. '<|end|>' → logprob: -8.755553245544434
    4. ',' → logprob: -9.130553245544434
    5. ' ' → logprob: -10.005553245544434
    6. ' =
' → logprob: -12.505553245544434
    7. ' ,' → logprob: -12.880553245544434
    8. ')' → logprob: -14.130553245544434
    9. 'space' → logprob: -15.505553245544434
    10. '  ' → logprob: -15.630553245544434

Token 87: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.048977356404066086
    2. 'a' → logprob: -3.0489773750305176
    3. ' ' → logprob: -8.04897689819336
    4. '<|end|>' → logprob: -9.92397689819336
    5. ' ' → logprob: -10.92397689819336
    6. '	a' → logprob: -13.42397689819336
    7. '<|end|>' → logprob: -14.92397689819336
    8. '_a' → logprob: -15.42397689819336
    9. ' а' → logprob: -15.54897689819336
    10. ' ‌' → logprob: -15.79897689819336

Token 88: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' self' (ID: 1051)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6888238191604614
    2. '<|end|>' → logprob: -1.3138238191604614
    3. 'a' → logprob: -1.6888238191604614
    4. ' b' → logprob: -3.438823699951172
    5. ' a' → logprob: -5.188823699951172
    6. '
' → logprob: -5.813823699951172
    7. ' ' → logprob: -6.063823699951172
    8. ' 
' → logprob: -7.563823699951172
    9. '<|end|>' → logprob: -7.688823699951172
    10. 'c' → logprob: -9.563823699951172

Token 91: '.b' (ID: 1292)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07814964652061462
    2. '=' → logprob: -3.0781495571136475
    3. '<|end|>' → logprob: -3.5781495571136475
    4. ' ' → logprob: -6.828149795532227
    5. ' =
' → logprob: -9.953149795532227
    6. '<|end|>' → logprob: -10.203149795532227
    7. ')' → logprob: -11.328149795532227
    8. ',' → logprob: -12.703149795532227
    9. ' =)' → logprob: -12.828149795532227
    10. 'space' → logprob: -13.078149795532227

Token 93: ' b' (ID: 287)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.26272058486938477
    2. ' b' → logprob: -1.6377205848693848
    3. 'c' → logprob: -3.8877205848693848
    4. 'b' → logprob: -4.137720584869385
    5. ' ' → logprob: -8.762720108032227
    6. '<|end|>' → logprob: -12.012720108032227
    7. ' ' → logprob: -12.137720108032227
    8. ' 
' → logprob: -14.137720108032227
    9. ' б' → logprob: -15.950220108032227
    10. '	c' → logprob: -16.262720108032227

Token 94: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5749335885047913
    2. ' ' → logprob: -1.4499335289001465
    3. '<|end|>' → logprob: -2.5749335289001465
    4. ' 
' → logprob: -2.8249335289001465
    5. '	' → logprob: -3.9499335289001465
    6. '        ' → logprob: -4.4499335289001465
    7. 'c' → logprob: -4.5749335289001465
    8. '        
' → logprob: -5.6999335289001465
    9. ' 	' → logprob: -5.6999335289001465
    10. '=' → logprob: -6.0749335289001465

Token 95: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5287424325942993
    2. ' c' → logprob: -1.1537424325942993
    3. '       ' → logprob: -2.6537423133850098
    4. ' ' → logprob: -4.40374231338501
    5. ' 
' → logprob: -5.02874231338501
    6. '        ' → logprob: -6.77874231338501
    7. 'self' → logprob: -7.15374231338501
    8. '
' → logprob: -7.15374231338501
    9. '<|end|>' → logprob: -7.27874231338501
    10. '   ' → logprob: -7.40374231338501

Token 96: ' self' (ID: 1051)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5759703516960144
    2. 'c' → logprob: -0.8259703516960144
    3. '       ' → logprob: -11.325970649719238
    4. 'self' (adapté à ' self') → logprob: -11.950970649719238
    5. ' ' → logprob: -12.825970649719238
    6. ' self' → logprob: -13.200970649719238
    7. '
' → logprob: -13.325970649719238
    8. '	c' → logprob: -13.325970649719238
    9. '   ' → logprob: -14.075970649719238
    10. ' ' → logprob: -14.200970649719238

Token 97: '.c' (ID: 1081)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20480574667453766
    2. '=' → logprob: -1.8298057317733765
    3. 'c' → logprob: -4.329805850982666
    4. '.' → logprob: -5.079805850982666
    5. '<|end|>' → logprob: -5.579805850982666
    6. '.c' → logprob: -7.079805850982666
    7. ' ' → logprob: -7.829805850982666
    8. ' .' → logprob: -9.079805374145508
    9. ' c' → logprob: -9.579805374145508
    10. '   ' → logprob: -10.579805374145508

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4843386709690094
    2. ' =' → logprob: -0.984338641166687
    3. '<|end|>' → logprob: -4.609338760375977
    4. ' ' → logprob: -8.484338760375977
    5. '<|end|>' → logprob: -11.609338760375977
    6. ' =
' → logprob: -11.609338760375977
    7. '=
' → logprob: -12.359338760375977
    8. ')' → logprob: -12.359338760375977
    9. 'c' → logprob: -12.484338760375977
    10. ' ==' → logprob: -13.734338760375977

Token 99: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0699479952454567
    2. 'c' → logprob: -2.6949479579925537
    3. ' ' → logprob: -11.694948196411133
    4. ' ' → logprob: -12.944948196411133
    5. '	c' → logprob: -14.819948196411133
    6. '0' → logprob: -15.694948196411133
    7. '<|end|>' → logprob: -15.819948196411133
    8. ' 
' → logprob: -16.944948196411133
    9. '    ' → logprob: -17.069948196411133
    10. ')c' → logprob: -17.444948196411133

Token 100: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004481273703277111
    2. '   ' → logprob: -6.129481315612793
    3. '<|end|>' → logprob: -6.504481315612793
    4. 'class' → logprob: -8.004481315612793
    5. '    
' → logprob: -8.754481315612793
    6. '

' → logprob: -9.004481315612793
    7. '```' → logprob: -10.379481315612793
    8. ' 
' → logprob: -10.379481315612793
    9. 'def' → logprob: -10.754481315612793
    10. '<|end|>' → logprob: -10.879481315612793

Token 101: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5181358456611633
    2. '   ' → logprob: -1.2681357860565186
    3. 'def' → logprob: -2.7681357860565186
    4. 'class' → logprob: -2.8931357860565186
    5. '    
' → logprob: -6.268136024475098
    6. '```' → logprob: -7.268136024475098
    7. ' class' → logprob: -7.393136024475098
    8. ' def' → logprob: -7.518136024475098
    9. '

' → logprob: -8.268136024475098
    10. ' 
' → logprob: -8.393136024475098

Token 102: ' Max' (ID: 10093)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.5713092088699341
    2. ' Training' → logprob: -1.071309208869934
    3. ' Solver' → logprob: -3.3213090896606445
    4. ' Problem' → logprob: -3.9463090896606445
    5. ' Trainer' → logprob: -4.4463090896606445
    6. 'Solution' → logprob: -5.1963090896606445
    7. 'Training' → logprob: -6.0713090896606445
    8. ' Ticket' → logprob: -6.4463090896606445
    9. ' Scheduler' → logprob: -6.4463090896606445
    10. ' Machine' → logprob: -6.8213090896606445

Token 103: 'Calories' (ID: 151181)
  Prédit: 'Flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Flow' → logprob: -0.08621618896722794
    2. 'Training' → logprob: -2.9612162113189697
    3. 'imize' → logprob: -4.461215972900391
    4. 'Tickets' → logprob: -5.211215972900391
    5. 'imum' → logprob: -6.211215972900391
    6. 'flow' → logprob: -6.461215972900391
    7. 'Trainer' → logprob: -6.586215972900391
    8. 'Train' → logprob: -6.961215972900391
    9. 'Usage' → logprob: -7.086215972900391
    10. 'im' → logprob: -7.211215972900391

Token 104: 'Optimizer' (ID: 120293)
  Prédit: 'Optimizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optimizer' → logprob: -0.38455912470817566
    2. ':' → logprob: -1.634559154510498
    3. 'Solver' → logprob: -2.384559154510498
    4. 'Calculator' → logprob: -4.259559154510498
    5. '(' → logprob: -5.509559154510498
    6. 'Problem' → logprob: -5.634559154510498
    7. 'Finder' → logprob: -6.134559154510498
    8. 'Selector' → logprob: -6.634559154510498
    9. 'Allocator' → logprob: -6.759559154510498
    10. 'Planner' → logprob: -7.009559154510498

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006472678505815566
    2. ':
' → logprob: -7.750647068023682
    3. ' :' → logprob: -8.50064754486084
    4. '(' → logprob: -12.00064754486084
    5. '():' → logprob: -13.37564754486084
    6. '<|end|>' → logprob: -13.37564754486084
    7. ':def' → logprob: -13.62564754486084
    8. '):' → logprob: -14.37564754486084
    9. '(object' → logprob: -14.37564754486084
    10. ' :
' → logprob: -14.62564754486084

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033124617766588926
    2. ' def' → logprob: -6.003312587738037
    3. '
' → logprob: -7.878312587738037
    4. '    
' → logprob: -8.503312110900879
    5. 'def' → logprob: -8.503312110900879
    6. ' 
' → logprob: -10.878312110900879
    7. '	def' → logprob: -12.003312110900879
    8. '<|end|>' → logprob: -12.003312110900879
    9. '```' → logprob: -12.253312110900879
    10. ':
' → logprob: -13.128312110900879

Token 107: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0023603097070008516
    2. 'def' (adapté à ' def') → logprob: -6.2523603439331055
    3. '   ' → logprob: -7.7523603439331055
    4. '    ' → logprob: -13.627360343933105
    5. ' ' → logprob: -14.752360343933105
    6. '	def' → logprob: -16.25235939025879
    7. '  ' → logprob: -17.00235939025879
    8. ' ' → logprob: -17.12735939025879
    9. ' __' → logprob: -17.37735939025879
    10. ' 
' → logprob: -17.62735939025879

Token 108: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3453582227230072
    2. 'init' → logprob: -2.47035813331604
    3. 'opt' → logprob: -2.84535813331604
    4. ' init' → logprob: -2.84535813331604
    5. ' ' → logprob: -3.34535813331604
    6. ' optimize' → logprob: -4.220358371734619
    7. '__' → logprob: -4.470358371734619
    8. ' ' → logprob: -4.470358371734619
    9. '_init' → logprob: -5.470358371734619
    10. ' opt' → logprob: -5.470358371734619

Token 109: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.25
    3. ' init' → logprob: -17.375
    4. '   ' → logprob: -17.75
    5. 'ini' → logprob: -18.75
    6. 'call' → logprob: -19.0
    7. '
' → logprob: -19.125
    8. ' ' → logprob: -19.25
    9. 'int' → logprob: -19.375
    10. '  ' → logprob: -19.375

Token 110: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005359925329685211
    2. '__' → logprob: -5.255360126495361
    3. '__(
' → logprob: -9.005359649658203
    4. '__((' → logprob: -13.380359649658203
    5. '__('' → logprob: -14.130359649658203
    6. '___' → logprob: -14.880359649658203
    7. '__("' → logprob: -15.505359649658203
    8. '_' → logprob: -15.880359649658203
    9. '__[' → logprob: -15.880359649658203
    10. '__(*' → logprob: -16.005359649658203

Token 111: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00017278951418120414
    2. ' self' → logprob: -9.25017261505127
    3. '
' → logprob: -9.50017261505127
    4. '   ' → logprob: -14.25017261505127
    5. ')' → logprob: -14.75017261505127
    6. '	self' → logprob: -15.87517261505127
    7. '       ' → logprob: -16.125173568725586
    8. '0' → logprob: -16.500173568725586
    9. 's' → logprob: -16.500173568725586
    10. '(self' → logprob: -16.625173568725586

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005572033114731312
    2. ' ,' → logprob: -5.3805718421936035
    3. 'self' → logprob: -7.0055718421936035
    4. ' self' → logprob: -11.255572319030762
    5. ')' → logprob: -11.255572319030762
    6. '<|end|>' → logprob: -12.255572319030762
    7. '(self' → logprob: -12.380572319030762
    8. ',self' → logprob: -13.380572319030762
    9. ' ' → logprob: -13.505572319030762
    10. '<|end|>' → logprob: -13.880572319030762

Token 113: ' machines' (ID: 14656)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4572926163673401
    2. ' self' → logprob: -1.0822925567626953
    3. ' machines' → logprob: -4.332292556762695
    4. 'machines' → logprob: -4.332292556762695
    5. ' training' → logprob: -6.832292556762695
    6. 'training' → logprob: -8.082292556762695
    7. '       ' → logprob: -8.832292556762695
    8. ')' → logprob: -9.082292556762695
    9. '   ' → logprob: -9.207292556762695
    10. '):
' → logprob: -10.457292556762695

Token 114: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28405600786209106
    2. '):' → logprob: -1.5340559482574463
    3. ',' → logprob: -3.5340559482574463
    4. ' ):' → logprob: -6.409056186676025
    5. ' :' → logprob: -8.034055709838867
    6. ':list' → logprob: -8.659055709838867
    7. '):
' → logprob: -9.034055709838867
    8. ')' → logprob: -9.409055709838867
    9. ' ,' → logprob: -10.534055709838867
    10. '   ' → logprob: -11.409055709838867

Token 115: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.12817303836345673
    2. 'constraints' → logprob: -2.1281731128692627
    3. ' constraint' → logprob: -7.628172874450684
    4. 'constraint' → logprob: -8.128172874450684
    5. '   ' → logprob: -9.253172874450684
    6. ' ' → logprob: -10.003172874450684
    7. ' calories' → logprob: -10.253172874450684
    8. ' max' → logprob: -10.565672874450684
    9. ' tickets' → logprob: -10.628172874450684
    10. 'max' → logprob: -10.628172874450684

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003017280250787735
    2. ':' → logprob: -6.378017425537109
    3. '):
' → logprob: -7.128017425537109
    4. ',' → logprob: -7.753017425537109
    5. ')' → logprob: -9.75301742553711
    6. ' ):' → logprob: -10.87801742553711
    7. '   ' → logprob: -13.25301742553711
    8. '=None' → logprob: -14.37801742553711
    9. '}:' → logprob: -14.62801742553711
    10. ' ' → logprob: -14.75301742553711

Token 117: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016050441190600395
    2. '       ' → logprob: -4.266050338745117
    3. ':
' → logprob: -6.641050338745117
    4. '):' → logprob: -8.266050338745117
    5. ',' → logprob: -9.016050338745117
    6. '   ' → logprob: -9.141050338745117
    7. '):
' → logprob: -10.391050338745117
    8. '():' → logprob: -11.016050338745117
    9. '<|end|>' → logprob: -11.516050338745117
    10. '=' → logprob: -12.016050338745117

Token 118: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5182783007621765
    2. ' self' → logprob: -1.0182783603668213
    3. 'self' (adapté à ' self') → logprob: -3.1432783603668213
    4. '   ' → logprob: -9.893278121948242
    5. ' ' → logprob: -10.643278121948242
    6. ' ' → logprob: -11.643278121948242
    7. '	self' → logprob: -11.643278121948242
    8. '      ' → logprob: -13.768278121948242
    9. '     ' → logprob: -14.143278121948242
    10. '(self' → logprob: -14.268278121948242

Token 119: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.116109699010849
    2. '.' → logprob: -2.616109609603882
    3. ' =' → logprob: -3.491109609603882
    4. ' .' → logprob: -5.366109848022461
    5. ' ' → logprob: -7.991109848022461
    6. '=' → logprob: -8.116109848022461
    7. 'machines' → logprob: -8.366109848022461
    8. '.machine' → logprob: -8.491109848022461
    9. '.models' → logprob: -10.116109848022461
    10. '   ' → logprob: -10.116109848022461

Token 120: 'achines' (ID: 180949)
  Prédit: 'achines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achines' → logprob: -0.0002100965939462185
    2. 'ach' → logprob: -8.87520980834961
    3. 'achine' → logprob: -9.62520980834961
    4. '   ' → logprob: -12.87520980834961
    5. 'ac' → logprob: -14.37520980834961
    6. 'a' → logprob: -14.87520980834961
    7. '```' → logprob: -15.12520980834961
    8. 'achi' → logprob: -15.87520980834961
    9. 'aches' → logprob: -15.87520980834961
    10. 'machines' → logprob: -16.62520980834961

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699441060423851
    2. '=' → logprob: -2.694944143295288
    3. ' ' → logprob: -12.069944381713867
    4. '  ' → logprob: -14.694944381713867
    5. '    ' → logprob: -15.069944381713867
    6. '   ' → logprob: -15.194944381713867
    7. ' =
' → logprob: -15.444944381713867
    8. ')' → logprob: -15.569944381713867
    9. '=m' → logprob: -15.569944381713867
    10. '<|end|>' → logprob: -15.569944381713867

Token 122: ' machines' (ID: 14656)
  Prédit: 'machines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'machines' → logprob: -0.474087655544281
    2. ' machines' → logprob: -0.974087655544281
    3. 'mach' → logprob: -13.724087715148926
    4. ' ' → logprob: -13.724087715148926
    5. 'Machines' → logprob: -13.724087715148926
    6. '   ' → logprob: -13.849087715148926
    7. 'machine' → logprob: -13.849087715148926
    8. '[m' → logprob: -13.974087715148926
    9. '	m' → logprob: -13.974087715148926
    10. 'm' → logprob: -14.349087715148926

Token 123: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6942680478096008
    2. '       ' → logprob: -0.6942680478096008
    3. '<|end|>' → logprob: -7.194268226623535
    4. '        
' → logprob: -8.819268226623535
    5. 'self' → logprob: -9.194268226623535
    6. '  
' → logprob: -9.944268226623535
    7. ' self' → logprob: -10.569268226623535
    8. ' 
' → logprob: -10.944268226623535
    9. ',' → logprob: -12.194268226623535
    10. '
' → logprob: -12.444268226623535

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018483173102140427
    2. '
' → logprob: -4.0184831619262695
    3. ' self' → logprob: -8.64348316192627
    4. 'self' → logprob: -9.14348316192627
    5. '<|end|>' → logprob: -10.39348316192627
    6. '   ' → logprob: -12.26848316192627
    7. '        
' → logprob: -12.39348316192627
    8. ' 
' → logprob: -12.89348316192627
    9. ',' → logprob: -13.01848316192627
    10. '  
' → logprob: -13.76848316192627

Token 125: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4364004135131836
    2. ' self' → logprob: -1.0614004135131836
    3. '       ' → logprob: -4.936400413513184
    4. 'constraints' → logprob: -8.311400413513184
    5. ' constraints' → logprob: -8.561400413513184
    6. '   ' → logprob: -10.561400413513184
    7. '
' → logprob: -11.811400413513184
    8. '	self' → logprob: -11.936400413513184
    9. ' ' → logprob: -12.311400413513184
    10. '    ' → logprob: -13.561400413513184

Token 126: '.constraints' (ID: 62986)
  Prédit: '.constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraints' → logprob: -0.009164589457213879
    2. '.' → logprob: -5.134164810180664
    3. ' .' → logprob: -6.509164810180664
    4. '.constraint' → logprob: -7.384164810180664
    5. 'constraints' → logprob: -7.509164810180664
    6. '.con' → logprob: -7.634164810180664
    7. ' constraints' → logprob: -11.009164810180664
    8. '.const' → logprob: -11.259164810180664
    9. 'Constraints' → logprob: -11.759164810180664
    10. '.cons' → logprob: -11.884164810180664

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283039301633835
    2. '=' → logprob: -2.237830400466919
    3. '<|end|>' → logprob: -12.48783016204834
    4. ' ' → logprob: -12.73783016204834
    5. ' =
' → logprob: -14.36283016204834
    6. '   ' → logprob: -15.73783016204834
    7. '
' → logprob: -15.86283016204834
    8. '=
' → logprob: -15.86283016204834
    9. '    ' → logprob: -16.112831115722656
    10. '  ' → logprob: -16.612831115722656

Token 128: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.25213420391082764
    2. 'constraints' → logprob: -1.5021342039108276
    3. 'constraint' → logprob: -9.127134323120117
    4. ' constraint' → logprob: -9.502134323120117
    5. 'const' → logprob: -12.502134323120117
    6. ' ' → logprob: -12.877134323120117
    7. '_constraints' → logprob: -12.877134323120117
    8. ' contraintes' → logprob: -12.877134323120117
    9. ' const' → logprob: -13.002134323120117
    10. '
' → logprob: -13.377134323120117

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11533297598361969
    2. '<|end|>' → logprob: -2.240333080291748
    3. '<|end|>' → logprob: -6.865333080291748
    4. '       ' → logprob: -6.990333080291748
    5. '    
' → logprob: -8.49033260345459
    6. '   ' → logprob: -9.24033260345459
    7. 'def' → logprob: -9.61533260345459
    8. '        
' → logprob: -10.11533260345459
    9. '  
' → logprob: -10.11533260345459
    10. ' 
' → logprob: -10.36533260345459

Token 130: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06297525018453598
    2. '<|end|>' → logprob: -2.8129751682281494
    3. '

' → logprob: -7.5629754066467285
    4. '<|end|>' → logprob: -8.06297492980957
    5. '   ' → logprob: -9.43797492980957
    6. '    
' → logprob: -10.43797492980957
    7. 'def' → logprob: -10.68797492980957
    8. '
    
' → logprob: -11.18797492980957
    9. ' def' → logprob: -11.93797492980957
    10. '  
' → logprob: -12.31297492980957

Token 131: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8396593332290649
    2. 'def' → logprob: -1.589659333229065
    3. 'self' (adapté à ' self') → logprob: -1.589659333229065
    4. ' self' → logprob: -1.964659333229065
    5. '   ' → logprob: -4.839659214019775
    6. ' def' → logprob: -4.964659214019775
    7. '
' → logprob: -6.339659214019775
    8. '        ' → logprob: -7.589659214019775
    9. '    
' → logprob: -7.589659214019775
    10. 'import' → logprob: -7.839659214019775

Token 132: '.N' (ID: 4439)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.43396204710006714
    2. ' .' → logprob: -1.308962106704712
    3. ' =' → logprob: -3.433962106704712
    4. '_max' → logprob: -5.058961868286133
    5. '.best' → logprob: -5.058961868286133
    6. '.max' → logprob: -5.183961868286133
    7. '_best' → logprob: -5.433961868286133
    8. '._' → logprob: -5.433961868286133
    9. 'max' → logprob: -5.808961868286133
    10. ' ' → logprob: -6.308961868286133

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03372926265001297
    2. '=' → logprob: -3.408729314804077
    3. ' ' → logprob: -10.158729553222656
    4. '_' → logprob: -11.158729553222656
    5. 'machines' → logprob: -12.033729553222656
    6. ' =
' → logprob: -12.283729553222656
    7. '    ' → logprob: -12.283729553222656
    8. ',' → logprob: -12.908729553222656
    9. '=len' → logprob: -12.908729553222656
    10. '=int' → logprob: -13.033729553222656

Token 134: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.005234952084720135
    2. 'len' → logprob: -5.255234718322754
    3. '(len' → logprob: -14.380234718322754
    4. '	len' → logprob: -14.755234718322754
    5. '=len' → logprob: -15.880234718322754
    6. '[len' → logprob: -16.75523567199707
    7. ',len' → logprob: -18.38023567199707
    8. ' ' → logprob: -19.00523567199707
    9. ' ' → logprob: -19.13023567199707
    10. '<len' → logprob: -19.25523567199707

Token 135: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3716195225715637
    2. '(' → logprob: -1.371619462966919
    3. '(self' → logprob: -2.871619462966919
    4. '(
' → logprob: -9.99661922454834
    5. '(machine' → logprob: -10.37161922454834
    6. '(s' → logprob: -13.12161922454834
    7. '(this' → logprob: -14.74661922454834
    8. 'self' → logprob: -14.99661922454834
    9. '(

' → logprob: -15.37161922454834
    10. '(me' → logprob: -15.99661922454834

Token 136: 'achines' (ID: 180949)
  Prédit: 'achines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achines' → logprob: -0.00011248346709180623
    2. 'achine' → logprob: -9.625112533569336
    3. 'ach' → logprob: -10.125112533569336
    4. 'machines' → logprob: -12.750112533569336
    5. 'self' → logprob: -13.625112533569336
    6. '   ' → logprob: -14.250112533569336
    7. '```' → logprob: -14.625112533569336
    8. 'aches' → logprob: -15.000112533569336
    9. '(self' → logprob: -15.125112533569336
    10. 'a' → logprob: -15.875112533569336

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027254095766693354
    2. ' )' → logprob: -8.250272750854492
    3. ')
' → logprob: -11.500272750854492
    4. '       ' → logprob: -14.875272750854492
    5. '<|end|>' → logprob: -15.000272750854492
    6. '   ' → logprob: -16.500272750854492
    7. ' ' → logprob: -16.625272750854492
    8. ')#' → logprob: -16.750272750854492
    9. ' )
' → logprob: -17.125272750854492
    10. '}' → logprob: -17.375272750854492

Token 138: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11604642122983932
    2. '<|end|>' → logprob: -2.36604642868042
    3. '       ' → logprob: -4.24104642868042
    4. '<|end|>' → logprob: -7.61604642868042
    5. '   ' → logprob: -7.99104642868042
    6. 'def' → logprob: -9.241045951843262
    7. '    
' → logprob: -9.366045951843262
    8. 'self' → logprob: -9.741045951843262
    9. '        
' → logprob: -10.116045951843262
    10. ' 
' → logprob: -10.616045951843262

Token 139: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2862488627433777
    2. ' self' → logprob: -1.9112489223480225
    3. '       ' → logprob: -2.6612489223480225
    4. 'def' → logprob: -4.036248683929443
    5. '   ' → logprob: -4.661248683929443
    6. 'from' → logprob: -6.286248683929443
    7. '
' → logprob: -7.161248683929443
    8. '        
' → logprob: -8.161249160766602
    9. ' from' → logprob: -8.536249160766602
    10. ' def' → logprob: -8.911249160766602

Token 140: '.R' (ID: 3395)
  Prédit: ' .'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' .' → logprob: -1.5404187440872192
    2. '.max' → logprob: -1.5404187440872192
    3. '.' → logprob: -2.1654186248779297
    4. '.best' → logprob: -2.1654186248779297
    5. '.constraints' → logprob: -2.7904186248779297
    6. '.dp' → logprob: -2.9154186248779297
    7. '.used' → logprob: -3.1654186248779297
    8. '.m' → logprob: -3.5404186248779297
    9. '.current' → logprob: -3.9154186248779297
    10. '.total' → logprob: -3.9154186248779297

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0417475625872612
    2. '=' → logprob: -3.416747570037842
    3. 'es' → logprob: -6.291747570037842
    4. '_constraints' → logprob: -6.916747570037842
    5. '_' → logprob: -7.541747570037842
    6. ' ' → logprob: -7.666747570037842
    7. 'constraints' → logprob: -7.916747570037842
    8. '_max' → logprob: -8.041747093200684
    9. 'max' → logprob: -8.041747093200684
    10. 'unning' → logprob: -8.166747093200684

Token 142: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.210540533065796
    2. 'sum' → logprob: -1.460540533065796
    3. 'max' → logprob: -2.085540533065796
    4. '100' → logprob: -2.585540533065796
    5. '[' → logprob: -2.835540533065796
    6. '0' → logprob: -2.835540533065796
    7. '10' → logprob: -3.460540533065796
    8. ' len' → logprob: -3.710540533065796
    9. ' sum' → logprob: -3.710540533065796
    10. 'float' → logprob: -4.085540771484375

Token 143: '(const' (ID: 6098)
  Prédit: '(const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(const' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.500015258789062
    3. '(self' → logprob: -13.375015258789062
    4. ' (' → logprob: -13.875015258789062
    5. 'const' → logprob: -14.125015258789062
    6. '(
' → logprob: -14.250015258789062
    7. '<const' → logprob: -15.125015258789062
    8. '(constants' → logprob: -15.250015258789062
    9. 'constraints' → logprob: -15.375015258789062
    10. '```' → logprob: -16.875015258789062

Token 144: 'raints' (ID: 12027)
  Prédit: 'raints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raints' → logprob: -6.670925358776003e-05
    2. 'st' → logprob: -10.375066757202148
    3. 'tra' → logprob: -11.250066757202148
    4. 'aints' → logprob: -11.750066757202148
    5. 'raint' → logprob: -12.250066757202148
    6. 'r' → logprob: -12.750066757202148
    7. 'ra' → logprob: -12.875066757202148
    8. 'constraints' → logprob: -14.375066757202148
    9. 'stra' → logprob: -14.625066757202148
    10. ')' → logprob: -14.750066757202148

Token 145: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001105762057704851
    2. ' )' → logprob: -9.250110626220703
    3. ')
' → logprob: -11.750110626220703
    4. '<|end|>' → logprob: -12.375110626220703
    5. '       ' → logprob: -13.500110626220703
    6. '   ' → logprob: -15.625110626220703
    7. '}' → logprob: -16.000110626220703
    8. ' ' → logprob: -16.000110626220703
    9. '<|end|>' → logprob: -16.500110626220703
    10. ')return' → logprob: -16.500110626220703

Token 146: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4164802134037018
    2. '   ' → logprob: -1.1664801836013794
    3. 'def' → logprob: -4.04148006439209
    4. '       ' → logprob: -5.41648006439209
    5. '    
' → logprob: -5.79148006439209
    6. ' def' → logprob: -6.29148006439209
    7. '<|end|>' → logprob: -6.41648006439209
    8. '        
' → logprob: -8.79148006439209
    9. ' 
' → logprob: -9.54148006439209
    10. ',' → logprob: -9.54148006439209

Token 147: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06997011601924896
    2. ' def' → logprob: -2.69497013092041
    3. '   ' → logprob: -10.69497013092041
    4. 'import' → logprob: -12.19497013092041
    5. 'from' → logprob: -12.31997013092041
    6. '
' → logprob: -14.44497013092041
    7. 'de' → logprob: -15.31997013092041
    8. ' ' → logprob: -15.44497013092041
    9. ' from' → logprob: -15.69497013092041
    10. ')' → logprob: -15.69497013092041

Token 148: ' _' (ID: 1175)
  Prédit: ' optimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optimize' → logprob: -0.32720908522605896
    2. ' solve' → logprob: -1.9522091150283813
    3. ' maximize' → logprob: -2.077208995819092
    4. ' max' → logprob: -5.702208995819092
    5. 'solve' → logprob: -6.577208995819092
    6. 'maximize' → logprob: -6.827208995819092
    7. ' calculate' → logprob: -6.952208995819092
    8. ' find' → logprob: -7.077208995819092
    9. ' compute' → logprob: -7.202208995819092
    10. 'opt' → logprob: -7.452208995819092

Token 149: 'build' (ID: 9242)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.7964951395988464
    2. 'can' → logprob: -1.0464951992034912
    3. 'check' → logprob: -2.796495199203491
    4. 'dfs' → logprob: -3.421495199203491
    5. 'is' → logprob: -3.671495199203491
    6. 'calculate' → logprob: -3.671495199203491
    7. 's' → logprob: -4.546494960784912
    8. 'compute' → logprob: -5.046494960784912
    9. 'maximize' → logprob: -5.046494960784912
    10. 'fe' → logprob: -5.421494960784912

Token 150: '_graph' (ID: 33441)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8299902677536011
    2. '_dp' → logprob: -1.704990267753601
    3. '(self' → logprob: -2.3299903869628906
    4. '_graph' → logprob: -2.5799903869628906
    5. '_lp' → logprob: -2.8299903869628906
    6. '_constraint' → logprob: -3.5799903869628906
    7. '_model' → logprob: -3.9549903869628906
    8. 'self' → logprob: -4.329990386962891
    9. '_solver' → logprob: -4.454990386962891
    10. '_constraints' → logprob: -4.579990386962891

Token 151: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00024834630312398076
    2. '(' → logprob: -8.375247955322266
    3. ' (' → logprob: -11.000247955322266
    4. 'self' → logprob: -14.375247955322266
    5. '(s' → logprob: -15.625247955322266
    6. ' self' → logprob: -15.625247955322266
    7. '(
' → logprob: -16.125247955322266
    8. '(sel' → logprob: -17.375247955322266
    9. '	self' → logprob: -17.500247955322266
    10. '   ' → logprob: -17.750247955322266

Token 152: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37906256318092346
    2. '):' → logprob: -1.254062533378601
    3. 'self' → logprob: -4.129062652587891
    4. '):
' → logprob: -4.629062652587891
    5. ' ,' → logprob: -6.379062652587891
    6. '(self' → logprob: -7.629062652587891
    7. '   ' → logprob: -7.754062652587891
    8. ' ):' → logprob: -7.754062652587891
    9. ' self' → logprob: -7.879062652587891
    10. ')' → logprob: -8.25406265258789

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5800766348838806
    2. ':' → logprob: -0.8300766348838806
    3. '
' → logprob: -6.705076694488525
    4. '():' → logprob: -6.705076694488525
    5. ':
' → logprob: -7.580076694488525
    6. '#' → logprob: -8.330076217651367
    7. '        
' → logprob: -8.705076217651367
    8. ',' → logprob: -8.830076217651367
    9. '):' → logprob: -8.955076217651367
    10. '(' → logprob: -9.330076217651367

Token 154: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.28243449330329895
    2. ' graph' → logprob: -1.9074344635009766
    3. '       ' → logprob: -3.0324344635009766
    4. ' self' → logprob: -3.7824344635009766
    5. 'self' → logprob: -3.9074344635009766
    6. 'from' → logprob: -6.407434463500977
    7. ' pass' → logprob: -6.657434463500977
    8. '#' (adapté à ' #') → logprob: -7.282434463500977
    9. 'import' → logprob: -7.532434463500977
    10. '        ' → logprob: -7.657434463500977

Token 155: ' Build' (ID: 10885)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7327386736869812
    2. ' graph' → logprob: -1.107738733291626
    3. ' pass' → logprob: -2.607738733291626
    4. 'from' → logprob: -3.357738733291626
    5. '       ' → logprob: -4.107738494873047
    6. ' self' → logprob: -4.857738494873047
    7. ' from' → logprob: -4.857738494873047
    8. '#' → logprob: -4.982738494873047
    9. 'pass' → logprob: -4.982738494873047
    10. 'import' → logprob: -5.482738494873047

Token 156: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.15355347096920013
    2. ' self' → logprob: -2.5285534858703613
    3. '       ' → logprob: -3.2785534858703613
    4. 'graph' → logprob: -4.153553485870361
    5. ' a' → logprob: -6.153553485870361
    6. '        ' → logprob: -6.278553485870361
    7. 'self' → logprob: -6.653553485870361
    8. ' from' → logprob: -7.278553485870361
    9. ' adjacency' → logprob: -7.653553485870361
    10. 'from' → logprob: -8.153553009033203

Token 157: ' for' (ID: 395)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5523271560668945
    2. '       ' → logprob: -1.1773271560668945
    3. 'self' → logprob: -2.4273271560668945
    4. ' =' → logprob: -4.6773271560668945
    5. ' self' → logprob: -4.8023271560668945
    6. '   ' → logprob: -5.8023271560668945
    7. '()' → logprob: -6.3023271560668945
    8. '(' → logprob: -6.8023271560668945
    9. 'graph' → logprob: -6.8023271560668945
    10. '=' → logprob: -7.5523271560668945

Token 158: ' difference' (ID: 9809)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1599130928516388
    2. ' self' → logprob: -3.2849130630493164
    3. ' flow' → logprob: -3.2849130630493164
    4. ' maximum' → logprob: -3.7849130630493164
    5. ' the' → logprob: -4.784913063049316
    6. ' min' → logprob: -4.784913063049316
    7. ' ' → logprob: -5.284913063049316
    8. ' constraint' → logprob: -5.284913063049316
    9. ' optimization' → logprob: -5.409913063049316
    10. ' network' → logprob: -5.409913063049316

Token 159: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.0691046342253685
    2. '_constraints' → logprob: -2.9441046714782715
    3. 'constraints' → logprob: -4.3191046714782715
    4. 's' → logprob: -7.5691046714782715
    5. 'Constraints' → logprob: -9.194104194641113
    6. '_' → logprob: -9.694104194641113
    7. '-' → logprob: -10.569104194641113
    8. '_constraint' → logprob: -10.694104194641113
    9. '```' → logprob: -11.194104194641113
    10. ' constraint' → logprob: -11.319104194641113

Token 160: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27595680952072144
    2. '
' → logprob: -1.7759568691253662
    3. '<|end|>' → logprob: -3.025956869125366
    4. ':' → logprob: -5.275956630706787
    5. '<|end|>' → logprob: -5.400956630706787
    6. ',' → logprob: -5.650956630706787
    7. '        
' → logprob: -5.775956630706787
    8. 'self' → logprob: -6.650956630706787
    9. ' graph' → logprob: -6.775956630706787
    10. 'graph' → logprob: -6.775956630706787

Token 161: ' form' (ID: 1625)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.5847973227500916
    2. ' form' → logprob: -1.4597973823547363
    3. ' self' → logprob: -3.2097973823547363
    4. 'self' → logprob: -3.4597973823547363
    5. 'size' → logprob: -3.4597973823547363
    6. ' the' → logprob: -3.7097973823547363
    7. ' type' → logprob: -3.9597973823547363
    8. 'form' → logprob: -5.084797382354736
    9. ' inequalities' → logprob: -5.334797382354736
    10. ' length' → logprob: -5.459797382354736

Token 162: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4250063896179199
    2. ' self' → logprob: -1.55000638961792
    3. 'x' → logprob: -3.30000638961792
    4. ' a' → logprob: -3.55000638961792
    5. '   ' → logprob: -3.92500638961792
    6. 'self' → logprob: -4.30000638961792
    7. '       ' → logprob: -4.67500638961792
    8. ' "' → logprob: -5.92500638961792
    9. ' ' → logprob: -6.05000638961792
    10. '    ' → logprob: -6.17500638961792

Token 163: '_a' (ID: 10852)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2812442779541016
    2. '[i' → logprob: -1.5312442779541016
    3. '[' → logprob: -1.6562442779541016
    4. '[b' → logprob: -1.7812442779541016
    5. '[u' → logprob: -2.4062442779541016
    6. '[a' → logprob: -3.7812442779541016
    7. '_j' → logprob: -4.531244277954102
    8. '[]' → logprob: -5.406244277954102
    9. '[y' → logprob: -5.906244277954102
    10. 'j' → logprob: -6.156244277954102

Token 164: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.019748594611883163
    2. '-' → logprob: -4.019748687744141
    3. '[' → logprob: -7.144748687744141
    4. '   ' → logprob: -7.894748687744141
    5. '+' → logprob: -9.14474868774414
    6. '<=' → logprob: -9.51974868774414
    7. ' <=' → logprob: -9.76974868774414
    8. '_' → logprob: -10.26974868774414
    9. '>=' → logprob: -10.26974868774414
    10. ' >=' → logprob: -10.64474868774414

Token 165: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023256542161107063
    2. ' x' → logprob: -3.773256540298462
    3. ' ' → logprob: -12.648256301879883
    4. '<|end|>' → logprob: -13.398256301879883
    5. '_x' → logprob: -13.898256301879883
    6. '[' → logprob: -13.898256301879883
    7. '
' → logprob: -13.898256301879883
    8. '	x' → logprob: -14.023256301879883
    9. '   ' → logprob: -14.648256301879883
    10. '       ' → logprob: -14.773256301879883

Token 166: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0012257046764716506
    2. '_' → logprob: -6.876225471496582
    3. '_a' → logprob: -9.126225471496582
    4. 'b' → logprob: -10.251225471496582
    5. '_x' → logprob: -10.626225471496582
    6. ' _' → logprob: -11.876225471496582
    7. '_i' → logprob: -11.876225471496582
    8. '_j' → logprob: -12.626225471496582
    9. '[' → logprob: -13.876225471496582
    10. '_c' → logprob: -14.126225471496582

Token 167: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08196785300970078
    2. '<=' → logprob: -2.956967830657959
    3. ' >=' → logprob: -3.706967830657959
    4. '>=' → logprob: -6.456967830657959
    5. ' ≤' → logprob: -8.706968307495117
    6. '[' → logprob: -8.956968307495117
    7. ' =' → logprob: -9.331968307495117
    8. ' ' → logprob: -10.706968307495117
    9. 'le' → logprob: -10.956968307495117
    10. '```' → logprob: -10.956968307495117

Token 168: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47369614243507385
    2. 'self' → logprob: -1.3486961126327515
    3. ' c' → logprob: -2.848696231842041
    4. ' self' → logprob: -2.973696231842041
    5. '0' → logprob: -6.223696231842041
    6. ' constraints' → logprob: -6.848696231842041
    7. '<|end|>' → logprob: -6.848696231842041
    8. ' -' → logprob: -7.098696231842041
    9. 'constraints' → logprob: -7.223696231842041
    10. ' ' → logprob: -7.473696231842041

Token 169: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06850981712341309
    2. '
' → logprob: -3.443509817123413
    3. '<|end|>' → logprob: -3.818509817123413
    4. '<|end|>' → logprob: -5.818510055541992
    5. 'self' → logprob: -6.068510055541992
    6. 'graph' → logprob: -6.193510055541992
    7. ' graph' → logprob: -7.068510055541992
    8. ',' → logprob: -7.318510055541992
    9. ':' → logprob: -7.443510055541992
    10. 'def' → logprob: -7.818510055541992

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18500280380249023
    2. '
' → logprob: -1.8100028038024902
    3. '        
' → logprob: -5.81000280380249
    4. ':' → logprob: -7.68500280380249
    5. 'graph' → logprob: -8.060003280639648
    6. '        ' → logprob: -8.310003280639648
    7. ',' → logprob: -8.435003280639648
    8. ' graph' → logprob: -8.560003280639648
    9. 'self' → logprob: -8.685003280639648
    10. '<|end|>' → logprob: -8.685003280639648

Token 171: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.17585161328315735
    2. ' graph' → logprob: -2.675851583480835
    3. 'self' → logprob: -3.300851583480835
    4. '       ' → logprob: -3.425851583480835
    5. ' self' → logprob: -4.425851821899414
    6. 'edges' → logprob: -5.300851821899414
    7. ' edges' → logprob: -5.925851821899414
    8. 'from' → logprob: -6.175851821899414
    9. 'import' → logprob: -7.050851821899414
    10. ' from' → logprob: -8.550851821899414

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026306219398975372
    2. '=' → logprob: -3.65130615234375
    3. ' ' → logprob: -12.65130615234375
    4. ')' → logprob: -14.40130615234375
    5. ']' → logprob: -14.52630615234375
    6. '   ' → logprob: -14.52630615234375
    7. '=[]' → logprob: -15.27630615234375
    8. '[' → logprob: -15.27630615234375
    9. '}' → logprob: -16.15130615234375
    10. ' ' → logprob: -16.15130615234375

Token 173: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3034663498401642
    2. '{' → logprob: -1.5534663200378418
    3. ' [[]' → logprob: -3.053466320037842
    4. ' {' → logprob: -6.303466320037842
    5. '{}' → logprob: -7.053466320037842
    6. ' defaultdict' → logprob: -9.053466796875
    7. ' [' → logprob: -9.303466796875
    8. 'default' → logprob: -9.553466796875
    9. '[[' → logprob: -10.678466796875
    10. '[{' → logprob: -11.178466796875

Token 174: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00030436101951636374
    2. ' i' → logprob: -8.250304222106934
    3. '}' → logprob: -10.375304222106934
    4. 'node' → logprob: -12.375304222106934
    5. '   ' → logprob: -13.000304222106934
    6. '(i' → logprob: -13.125304222106934
    7. 'v' → logprob: -13.125304222106934
    8. '	i' → logprob: -14.500304222106934
    9. '       ' → logprob: -15.000304222106934
    10. ' node' → logprob: -16.00030517578125

Token 175: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017142124706879258
    2. ' :' → logprob: -6.37671422958374
    3. 'for' → logprob: -12.501713752746582
    4. ':i' → logprob: -12.751713752746582
    5. ' for' → logprob: -13.126713752746582
    6. ':list' → logprob: -14.376713752746582
    7. '   ' → logprob: -14.626713752746582
    8. '+' → logprob: -14.626713752746582
    9. ':[' → logprob: -15.126713752746582
    10. ' ' → logprob: -15.251713752746582

Token 176: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0021380058024078608
    2. '[]}' → logprob: -6.252138137817383
    3. ' []' → logprob: -8.502138137817383
    4. '[]
' → logprob: -12.002138137817383
    5. '[]

' → logprob: -15.627138137817383
    6. '{}' → logprob: -16.877138137817383
    7. '[' → logprob: -17.252138137817383
    8. 'list' → logprob: -18.627138137817383
    9. '[])' → logprob: -18.877138137817383
    10. '[]>' → logprob: -19.252138137817383

Token 177: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0486363060772419
    2. 'for' → logprob: -3.0486361980438232
    3. ' ' → logprob: -10.423636436462402
    4. '	for' → logprob: -11.548636436462402
    5. '}' → logprob: -12.423636436462402
    6. ')' → logprob: -13.048636436462402
    7. '   ' → logprob: -13.673636436462402
    8. '
' → logprob: -14.048636436462402
    9. '       ' → logprob: -14.673636436462402
    10. '  ' → logprob: -15.173636436462402

Token 178: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.027598906308412552
    2. 'i' → logprob: -3.6525988578796387
    3. ' range' → logprob: -6.777598857879639
    4. 'range' → logprob: -8.777599334716797
    5. '	i' → logprob: -13.527599334716797
    6. '   ' → logprob: -13.652599334716797
    7. ' ' → logprob: -14.027599334716797
    8. ' ' → logprob: -14.527599334716797
    9. '  ' → logprob: -14.652599334716797
    10. '    ' → logprob: -15.902599334716797

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006741304416209459
    2. 'in' → logprob: -5.506741523742676
    3. ' range' → logprob: -6.631741523742676
    4. 'range' → logprob: -6.631741523742676
    5. ' ' → logprob: -11.381741523742676
    6. 'ange' → logprob: -12.506741523742676
    7. ' i' → logprob: -13.506741523742676
    8. 'i' → logprob: -13.506741523742676
    9. ',' → logprob: -13.631741523742676
    10. 's' → logprob: -14.506741523742676

Token 180: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061970487236976624
    2. ' range' → logprob: -2.8119704723358154
    3. '   ' → logprob: -14.061970710754395
    4. '(range' → logprob: -14.186970710754395
    5. ' ' → logprob: -14.561970710754395
    6. '	range' → logprob: -14.686970710754395
    7. '
' → logprob: -15.936970710754395
    8. '[' → logprob: -16.311969757080078
    9. '  ' → logprob: -16.311969757080078
    10. '}' → logprob: -17.311969757080078

Token 181: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002659847668837756
    2. '(' → logprob: -8.250266075134277
    3. 'self' → logprob: -13.500266075134277
    4. ' (' → logprob: -13.625266075134277
    5. '(len' → logprob: -14.250266075134277
    6. '(s' → logprob: -14.625266075134277
    7. '(
' → logprob: -14.625266075134277
    8. '(-' → logprob: -14.750266075134277
    9. ' self' → logprob: -16.25026512145996
    10. '
' → logprob: -17.87526512145996

Token 182: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.0027265367098152637
    2. '.R' → logprob: -6.2527265548706055
    3. '.' → logprob: -8.502726554870605
    4. ' .' → logprob: -8.502726554870605
    5. 'self' → logprob: -8.752726554870605
    6. '   ' → logprob: -9.377726554870605
    7. '._' → logprob: -10.127726554870605
    8. '       ' → logprob: -10.502726554870605
    9. '.S' → logprob: -10.502726554870605
    10. ' self' → logprob: -11.502726554870605

Token 183: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.030551934614777565
    2. '+' → logprob: -4.155551910400391
    3. ' )' → logprob: -4.405551910400391
    4. ' +' → logprob: -6.405551910400391
    5. ')' → logprob: -7.780551910400391
    6. ')}
' → logprob: -9.53055191040039
    7. ')}

' → logprob: -10.65555191040039
    8. ' )}
' → logprob: -11.03055191040039
    9. '}' → logprob: -12.03055191040039
    10. ' )}

' → logprob: -12.65555191040039

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4302203059196472
    2. '
' → logprob: -1.055220365524292
    3. ' for' → logprob: -6.930220127105713
    4. '
' → logprob: -8.805220603942871
    5. '<|end|>' → logprob: -8.805220603942871
    6. '        
' → logprob: -9.055220603942871
    7. 'for' → logprob: -9.305220603942871
    8. '<|end|>' → logprob: -12.055220603942871
    9. ',' → logprob: -12.555220603942871
    10. '  
' → logprob: -12.805220603942871

Token 185: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.097968690097332
    2. ' for' → logprob: -2.597968578338623
    3. '       ' → logprob: -3.972968578338623
    4. 'return' → logprob: -10.222969055175781
    5. '
' → logprob: -10.972969055175781
    6. '   ' → logprob: -11.597969055175781
    7. '	for' → logprob: -11.722969055175781
    8. '        
' → logprob: -11.847969055175781
    9. '```' → logprob: -14.222969055175781
    10. ' ' → logprob: -14.347969055175781

Token 186: ' c' (ID: 274)
  Prédit: ' constraint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraint' → logprob: -0.2546570301055908
    2. 'constraint' → logprob: -2.254657030105591
    3. ' constr' → logprob: -3.629657030105591
    4. ' con' → logprob: -3.754657030105591
    5. ' c' → logprob: -3.879657030105591
    6. ' cons' → logprob: -3.879657030105591
    7. 'con' → logprob: -3.879657030105591
    8. ' const' → logprob: -6.004656791687012
    9. 'cons' → logprob: -6.254656791687012
    10. 'const' → logprob: -6.504656791687012

Token 187: ' in' (ID: 306)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.2846165597438812
    2. ' in' → logprob: -1.4096165895462036
    3. 'onstr' → logprob: -6.409616470336914
    4. ' on' → logprob: -7.034616470336914
    5. 'in' → logprob: -7.159616470336914
    6. 'ons' → logprob: -9.034616470336914
    7. '   ' → logprob: -12.159616470336914
    8. ' ' → logprob: -12.534616470336914
    9. 'constraint' → logprob: -12.534616470336914
    10. '_constraint' → logprob: -12.534616470336914

Token 188: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004083624575287104
    2. ' self' → logprob: -5.504083633422852
    3. 'elf' → logprob: -12.254083633422852
    4. '(self' → logprob: -15.629083633422852
    5. '	self' → logprob: -15.879083633422852
    6. '   ' → logprob: -15.879083633422852
    7. ' ' → logprob: -16.87908363342285
    8. '[self' → logprob: -17.25408363342285
    9. '       ' → logprob: -17.50408363342285
    10. '=self' → logprob: -18.25408363342285

Token 189: '.constraints' (ID: 62986)
  Prédit: '.constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraints' → logprob: -0.00014168102643452585
    2. '.constraint' → logprob: -9.125142097473145
    3. '.const' → logprob: -11.125142097473145
    4. '.con' → logprob: -12.250142097473145
    5. '.' → logprob: -12.500142097473145
    6. 'constraints' → logprob: -12.625142097473145
    7. ' .' → logprob: -12.875142097473145
    8. '.cons' → logprob: -13.375142097473145
    9. '.constants' → logprob: -13.500142097473145
    10. '.on' → logprob: -16.125141143798828

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007907546125352383
    2. ':
' → logprob: -4.882907390594482
    3. ' :' → logprob: -8.13290786743164
    4. ' :
' → logprob: -12.38290786743164
    5. '):' → logprob: -13.75790786743164
    6. ':
' → logprob: -14.00790786743164
    7. '):
' → logprob: -14.38290786743164
    8. '   ' → logprob: -15.38290786743164
    9. '       ' → logprob: -15.50790786743164
    10. ':

' → logprob: -16.25790786743164

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05059709772467613
    2. ' graph' → logprob: -3.3005971908569336
    3. 'graph' → logprob: -4.425597190856934
    4. '       ' → logprob: -8.800597190856934
    5. '	graph' → logprob: -9.300597190856934
    6. ' for' → logprob: -9.425597190856934
    7. '   ' → logprob: -10.175597190856934
    8. '
' → logprob: -10.175597190856934
    9. '            
' → logprob: -10.550597190856934
    10. '	       ' → logprob: -10.925597190856934

Token 192: ' a' (ID: 261)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.010009754449129105
    2. ' graph' → logprob: -4.635009765625
    3. '           ' → logprob: -8.885009765625
    4. '       ' → logprob: -9.635009765625
    5. '	graph' → logprob: -10.510009765625
    6. '   ' → logprob: -11.885009765625
    7. 'a' (adapté à ' a') → logprob: -12.010009765625
    8. 'if' → logprob: -12.385009765625
    9. '(graph' → logprob: -13.385009765625
    10. ' if' → logprob: -13.885009765625

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45572665333747864
    2. '.graph' → logprob: -1.8307266235351562
    3. 'graph' → logprob: -1.9557266235351562
    4. ',' → logprob: -3.8307266235351562
    5. '=' → logprob: -4.705726623535156
    6. ' graph' → logprob: -4.955726623535156
    7. '_index' → logprob: -5.205726623535156
    8. '_graph' → logprob: -5.580726623535156
    9. 'index' → logprob: -5.705726623535156
    10. ' ,' → logprob: -5.955726623535156

Token 194: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013336940901353955
    2. ' c' → logprob: -6.626333713531494
    3. '   ' → logprob: -12.501333236694336
    4. '           ' → logprob: -13.751333236694336
    5. '       ' → logprob: -14.251333236694336
    6. '	c' → logprob: -14.501333236694336
    7. 'self' → logprob: -14.626333236694336
    8. ' ' → logprob: -15.126333236694336
    9. '    ' → logprob: -15.251333236694336
    10. '_c' → logprob: -15.751333236694336

Token 195: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.009910493157804012
    2. '.b' → logprob: -4.634910583496094
    3. '.' → logprob: -9.759910583496094
    4. ' .' → logprob: -10.259910583496094
    5. '.c' → logprob: -10.259910583496094
    6. 'a' → logprob: -10.634910583496094
    7. '.index' → logprob: -14.759910583496094
    8. 'b' → logprob: -14.884910583496094
    9. '.x' → logprob: -14.884910583496094
    10. '.s' → logprob: -15.134910583496094

Token 196: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07657651603221893
    2. ',' → logprob: -3.5765764713287354
    3. '-' → logprob: -4.3265767097473145
    4. '
' → logprob: -4.5765767097473145
    5. ' -' → logprob: -4.7015767097473145
    6. '            
' → logprob: -5.4515767097473145
    7. '       ' → logprob: -5.5765767097473145
    8. '<|end|>' → logprob: -6.8265767097473145
    9. ' ,' → logprob: -7.0765767097473145
    10. '               ' → logprob: -7.7015767097473145

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019288709154352546
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.126928329467773
    4. '<|end|>' → logprob: -17.376928329467773
    5. '           ' → logprob: -17.876928329467773
    6. '  ' → logprob: -17.876928329467773
    7. '
' → logprob: -18.751928329467773
    8. 'b' → logprob: -18.876928329467773
    9. '    ' → logprob: -19.376928329467773
    10. '       ' → logprob: -19.439428329467773

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.50023078918457
    4. '<|end|>' → logprob: -16.50023078918457
    5. 'b' → logprob: -17.00023078918457
    6. 'c' → logprob: -17.00023078918457
    7. ' c' → logprob: -18.31273078918457
    8. '  ' → logprob: -18.43773078918457
    9. '2' → logprob: -19.06273078918457
    10. '0' → logprob: -19.50023078918457

Token 199: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.337178498506546
    2. '<|end|>' → logprob: -2.3371784687042236
    3. '           ' → logprob: -2.5871784687042236
    4. '       ' → logprob: -2.7121784687042236
    5. '
' → logprob: -3.5871784687042236
    6. ' ,' → logprob: -5.587178707122803
    7. ',b' → logprob: -5.712178707122803
    8. 'b' → logprob: -5.837178707122803
    9. '            
' → logprob: -6.337178707122803
    10. ',
' → logprob: -6.337178707122803

Token 200: '           ' (ID: 352)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21527869999408722
    2. ' b' → logprob: -1.7152787446975708
    3. '           ' → logprob: -4.715278625488281
    4. '       ' → logprob: -6.215278625488281
    5. ',' → logprob: -6.590278625488281
    6. ',b' → logprob: -7.340278625488281
    7. '   ' → logprob: -8.590278625488281
    8. ' =' → logprob: -8.965278625488281
    9. ' ,' → logprob: -9.090278625488281
    10. ' ' → logprob: -9.715278625488281

Token 201: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.00038479414070025086
    2. ' b' → logprob: -7.87538480758667
    3. '           ' → logprob: -12.500384330749512
    4. '       ' → logprob: -14.000384330749512
    5. '   ' → logprob: -15.875384330749512
    6. '1' → logprob: -17.500385284423828
    7. '	b' → logprob: -18.000385284423828
    8. '    ' → logprob: -18.500385284423828
    9. 'c' → logprob: -18.875385284423828
    10. ',b' → logprob: -19.125385284423828

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016042932868003845
    2. '=' → logprob: -4.141042709350586
    3. ' ' → logprob: -12.266042709350586
    4. '<|end|>' → logprob: -12.766042709350586
    5. ')' → logprob: -15.391042709350586
    6. ',' → logprob: -15.641042709350586
    7. 'c' → logprob: -15.766042709350586
    8. 'space' → logprob: -16.016042709350586
    9. '<|end|>' → logprob: -16.641042709350586
    10. '  ' → logprob: -16.641042709350586

Token 203: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04300056770443916
    2. ' c' → logprob: -3.1680004596710205
    3. '	c' → logprob: -14.793000221252441
    4. '(c' → logprob: -14.918000221252441
    5. ' ' → logprob: -16.168001174926758
    6. ')c' → logprob: -16.168001174926758
    7. 'b' → logprob: -16.418001174926758
    8. '_c' → logprob: -16.418001174926758
    9. '=c' → logprob: -17.043001174926758
    10. '   ' → logprob: -17.418001174926758

Token 204: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0038674199022352695
    2. '.' → logprob: -5.6288676261901855
    3. ' .' → logprob: -8.378867149353027
    4. '.a' → logprob: -10.878867149353027
    5. 'b' → logprob: -12.128867149353027
    6. '.c' → logprob: -12.378867149353027
    7. '-' → logprob: -12.628867149353027
    8. ' -' → logprob: -12.878867149353027
    9. ' ' → logprob: -14.128867149353027
    10. ' b' → logprob: -14.503867149353027

Token 205: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012515303678810596
    2. '-' → logprob: -4.387515068054199
    3. ' ' → logprob: -12.3875150680542
    4. ' -
' → logprob: -13.8875150680542
    5. ')' → logprob: -16.137516021728516
    6. ' -=' → logprob: -16.262516021728516
    7. '1' → logprob: -17.012516021728516
    8. '[' → logprob: -17.137516021728516
    9. '<|end|>' → logprob: -17.137516021728516
    10. '   ' → logprob: -17.262516021728516

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007607100997120142
    2. ' ' → logprob: -4.8826069831848145
    3. '   ' → logprob: -15.695107460021973
    4. '2' → logprob: -15.945107460021973
    5. '0' → logprob: -16.070106506347656
    6. '           ' → logprob: -16.882606506347656
    7. '<|end|>' → logprob: -16.882606506347656
    8. '  ' → logprob: -17.132606506347656
    9. 'b' → logprob: -17.257606506347656
    10. '-' → logprob: -17.257606506347656

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -9.500075340270996
    3. '2' → logprob: -15.375075340270996
    4. '   ' → logprob: -16.687576293945312
    5. '```' → logprob: -17.375076293945312
    6. '           ' → logprob: -17.562576293945312
    7. '-' → logprob: -17.562576293945312
    8. '0' → logprob: -17.625076293945312
    9. '<|end|>' → logprob: -18.187576293945312
    10. '       ' → logprob: -18.375076293945312

Token 208: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7673386335372925
    2. '
' → logprob: -1.5173386335372925
    3. '           ' → logprob: -1.5173386335372925
    4. ',' → logprob: -2.892338752746582
    5. 'graph' → logprob: -3.642338752746582
    6. ' graph' → logprob: -5.392338752746582
    7. ',
' → logprob: -5.892338752746582
    8. '	graph' → logprob: -6.517338752746582
    9. '<|end|>' → logprob: -6.642338752746582
    10. '        
' → logprob: -7.017338752746582

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1493433266878128
    2. '       ' → logprob: -2.399343252182007
    3. 'graph' → logprob: -3.399343252182007
    4. ' graph' → logprob: -4.524343490600586
    5. ',' → logprob: -6.149343490600586
    6. '	graph' → logprob: -7.399343490600586
    7. '
' → logprob: -8.149343490600586
    8. '   ' → logprob: -8.899343490600586
    9. '[' → logprob: -9.774343490600586
    10. ' ,' → logprob: -9.899343490600586

Token 210: ' cost' (ID: 3097)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.10611966252326965
    2. 'c' → logprob: -2.4811196327209473
    3. ' graph' → logprob: -4.356119632720947
    4. '           ' → logprob: -5.981119632720947
    5. 'cost' (adapté à ' cost') → logprob: -7.231119632720947
    6. ' c' → logprob: -7.481119632720947
    7. 'if' → logprob: -9.606120109558105
    8. '       ' → logprob: -9.731120109558105
    9. '	graph' → logprob: -9.856120109558105
    10. 'cal' → logprob: -10.106120109558105

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128329485654831
    2. '=' → logprob: -2.237833023071289
    3. ' ' → logprob: -12.237833023071289
    4. 's' → logprob: -13.112833023071289
    5. ',' → logprob: -13.612833023071289
    6. ')' → logprob: -13.862833023071289
    7. '	' → logprob: -15.362833023071289
    8. '   ' → logprob: -15.737833023071289
    9. ' =
' → logprob: -15.737833023071289
    10. '  ' → logprob: -15.737833023071289

Token 212: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018226152285933495
    2. ' c' → logprob: -4.018226146697998
    3. '-c' → logprob: -10.268226623535156
    4. '-' → logprob: -10.518226623535156
    5. ' -' → logprob: -12.018226623535156
    6. '	c' → logprob: -13.018226623535156
    7. '   ' → logprob: -13.518226623535156
    8. ' ' → logprob: -13.893226623535156
    9. ')c' → logprob: -14.143226623535156
    10. '+c' → logprob: -14.393226623535156

Token 213: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -2.534558552724775e-05
    2. '.' → logprob: -10.875025749206543
    3. ' .' → logprob: -12.125025749206543
    4. '.cost' → logprob: -14.500025749206543
    5. 'c' → logprob: -15.875025749206543
    6. '.cal' → logprob: -16.375024795532227
    7. '	c' → logprob: -17.375024795532227
    8. '​.' → logprob: -17.500024795532227
    9. '`.' → logprob: -17.750024795532227
    10. ').' → logprob: -17.750024795532227

Token 214: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28803619742393494
    2. '       ' → logprob: -1.4130362272262573
    3. '           ' → logprob: -5.538036346435547
    4. ')' → logprob: -7.413036346435547
    5. ')
' → logprob: -7.538036346435547
    6. '+' → logprob: -7.663036346435547
    7. '
' → logprob: -8.413036346435547
    8. '        
' → logprob: -8.663036346435547
    9. ' +' → logprob: -9.038036346435547
    10. ' 
' → logprob: -9.038036346435547

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033165133208967745
    2. '
' → logprob: -9.50033187866211
    3. '       ' → logprob: -9.50033187866211
    4. 'graph' → logprob: -9.62533187866211
    5. ' graph' → logprob: -10.37533187866211
    6. '   ' → logprob: -10.50033187866211
    7. '            
' → logprob: -10.87533187866211
    8. '	graph' → logprob: -11.75033187866211
    9. ',' → logprob: -12.00033187866211
    10. ')' → logprob: -12.12533187866211

Token 216: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.02337918058037758
    2. ' graph' → logprob: -3.77337908744812
    3. '       ' → logprob: -9.0233793258667
    4. '	graph' → logprob: -11.6483793258667
    5. '           ' → logprob: -12.8983793258667
    6. '   ' → logprob: -14.1483793258667
    7. '(graph' → logprob: -14.6483793258667
    8. '
' → logprob: -14.7733793258667
    9. '_graph' → logprob: -16.148378372192383
    10. 'if' → logprob: -16.273378372192383

Token 217: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.002237447304651141
    2. '[a' → logprob: -6.127237319946289
    3. '[' → logprob: -10.002237319946289
    4. ' [' → logprob: -12.752237319946289
    5. 'b' → logprob: -13.252237319946289
    6. '[c' → logprob: -14.252237319946289
    7. '   ' → logprob: -14.502237319946289
    8. '```' → logprob: -15.252237319946289
    9. '       ' → logprob: -16.00223731994629
    10. 'a' → logprob: -16.25223731994629

Token 218: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -8.470901229884475e-05
    2. ']' → logprob: -9.87508487701416
    3. '.append' → logprob: -11.25008487701416
    4. ' ].' → logprob: -11.50008487701416
    5. '.' → logprob: -11.75008487701416
    6. '   ' → logprob: -14.00008487701416
    7. ').' → logprob: -14.37508487701416
    8. ''].' → logprob: -15.25008487701416
    9. '}.' → logprob: -15.62508487701416
    10. '"].' → logprob: -16.375083923339844

Token 219: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.008129963040119e-06
    2. '.append' → logprob: -12.750003814697266
    3. ' append' → logprob: -13.750003814697266
    4. 'appen' → logprob: -18.625003814697266
    5. '	append' → logprob: -19.625003814697266
    6. 'app' → logprob: -19.875003814697266
    7. '_append' → logprob: -19.875003814697266
    8. 'Append' → logprob: -21.125003814697266
    9. 'push' → logprob: -21.750003814697266
    10. '```' → logprob: -22.250003814697266

Token 220: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3615369498729706
    2. '((' → logprob: -1.361536979675293
    3. '(a' → logprob: -3.236536979675293
    4. ' (' → logprob: -4.861536979675293
    5. '(i' → logprob: -9.986536979675293
    6. ' ((' → logprob: -10.986536979675293
    7. '(
' → logprob: -12.111536979675293
    8. '(A' → logprob: -12.236536979675293
    9. '(ai' → logprob: -12.736536979675293
    10. '(c' → logprob: -13.361536979675293

Token 221: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001422770437784493
    2. ' a' → logprob: -8.875142097473145
    3. '   ' → logprob: -14.000142097473145
    4. ')a' → logprob: -15.125142097473145
    5. ',a' → logprob: -15.375142097473145
    6. '
' → logprob: -15.625142097473145
    7. '	a' → logprob: -15.875142097473145
    8. ')' → logprob: -16.37514305114746
    9. ' ' → logprob: -16.37514305114746
    10. ''a' → logprob: -16.50014305114746

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015166497323662043
    2. ' ,' → logprob: -6.501516819000244
    3. ',c' → logprob: -11.376516342163086
    4. ',
' → logprob: -13.376516342163086
    5. 'cost' → logprob: -14.876516342163086
    6. '),' → logprob: -15.751516342163086
    7. '(cost' → logprob: -15.751516342163086
    8. ' cost' → logprob: -16.501516342163086
    9. '‌,' → logprob: -16.751516342163086
    10. '',' → logprob: -16.751516342163086

Token 223: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.04860473424196243
    2. ' cost' → logprob: -3.048604726791382
    3. '-cost' → logprob: -12.298604965209961
    4. ')' → logprob: -12.548604965209961
    5. '(cost' → logprob: -12.548604965209961
    6. 'c' → logprob: -13.423604965209961
    7. '-' → logprob: -14.173604965209961
    8. '
' → logprob: -14.673604965209961
    9. '+' → logprob: -14.798604965209961
    10. '    ' → logprob: -14.923604965209961

Token 224: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004254100378602743
    2. '))
' → logprob: -5.50425386428833
    3. ' ))' → logprob: -9.379254341125488
    4. ')' → logprob: -9.504254341125488
    5. '       ' → logprob: -11.379254341125488
    6. '))

' → logprob: -13.379254341125488
    7. ' ))
' → logprob: -13.754254341125488
    8. ')
' → logprob: -13.754254341125488
    9. '))
' → logprob: -15.004254341125488
    10. ' )' → logprob: -15.254254341125488

Token 225: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032536134123802185
    2. '
' → logprob: -3.532536029815674
    3. 'return' → logprob: -6.657536029815674
    4. ' return' → logprob: -7.282536029815674
    5. '<|end|>' → logprob: -7.282536029815674
    6. '        
' → logprob: -10.282536506652832
    7. '   ' → logprob: -11.032536506652832
    8. '  
' → logprob: -11.282536506652832
    9. '<|end|>' → logprob: -11.782536506652832
    10. '	return' → logprob: -11.782536506652832

Token 226: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06937248259782791
    2. '       ' → logprob: -2.8193724155426025
    3. 'return' → logprob: -5.194372653961182
    4. '<|end|>' → logprob: -6.819372653961182
    5. ' return' → logprob: -7.694372653961182
    6. '
' → logprob: -9.194372177124023
    7. '  
' → logprob: -9.694372177124023
    8. '        
' → logprob: -10.069372177124023
    9. ' 
' → logprob: -10.694372177124023
    10. '

' → logprob: -11.569372177124023

Token 227: ' x' (ID: 1215)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.054282452911138535
    2. '_b' → logprob: -3.1792824268341064
    3. 'a' → logprob: -5.0542826652526855
    4. '[a' → logprob: -5.5542826652526855
    5. '_' → logprob: -8.179282188415527
    6. '[b' → logprob: -8.304282188415527
    7. 'b' → logprob: -8.679282188415527
    8. '[' → logprob: -8.804282188415527
    9. ' a' → logprob: -10.804282188415527
    10. '_[' → logprob: -10.804282188415527

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2602945864200592
    2. ',' → logprob: -2.1352946758270264
    3. ')' → logprob: -3.5102946758270264
    4. '-' → logprob: -3.8852946758270264
    5. ' ,' → logprob: -4.135294437408447
    6. ',b' → logprob: -4.385294437408447
    7. ' -=' → logprob: -4.510294437408447
    8. '<|end|>' → logprob: -5.510294437408447
    9. '
' → logprob: -5.885294437408447
    10. ' <=' → logprob: -6.010294437408447

Token 230: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005050156614743173
    2. ' x' → logprob: -7.625504970550537
    3. 'graph' → logprob: -11.625505447387695
    4. '<|end|>' → logprob: -12.125505447387695
    5. '_x' → logprob: -14.125505447387695
    6. ' ' → logprob: -14.250505447387695
    7. '[' → logprob: -15.375505447387695
    8. ' graph' → logprob: -15.500505447387695
    9. '_' → logprob: -16.500505447387695
    10. '
' → logprob: -16.625505447387695

Token 231: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.02068961039185524
    2. 'b' → logprob: -3.8956897258758545
    3. '_' → logprob: -9.395689964294434
    4. 'x' → logprob: -10.520689964294434
    5. '_a' → logprob: -11.020689964294434
    6. '_x' → logprob: -11.645689964294434
    7. 'a' → logprob: -12.895689964294434
    8. ' _' → logprob: -13.270689964294434
    9. '[b' → logprob: -13.270689964294434
    10. ' b' → logprob: -13.645689964294434

Token 232: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02632073685526848
    2. '<=' → logprob: -3.651320695877075
    3. ' ≤' → logprob: -12.276320457458496
    4. ')<=' → logprob: -12.276320457458496
    5. ' <=",' → logprob: -12.651320457458496
    6. '<|end|>' → logprob: -12.901320457458496
    7. '[' → logprob: -13.151320457458496
    8. ']<=' → logprob: -14.026320457458496
    9. ' ' → logprob: -14.151320457458496
    10. ' >=' → logprob: -14.901320457458496

Token 233: ' c' (ID: 274)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.021621817722916603
    2. 'cost' → logprob: -4.3966217041015625
    3. ' c' → logprob: -4.7716217041015625
    4. 'c' → logprob: -8.021621704101562
    5. ' ' → logprob: -8.396621704101562
    6. ' ' → logprob: -11.271621704101562
    7. ' 
' → logprob: -11.771621704101562
    8. ' space' → logprob: -12.146621704101562
    9. ' code' → logprob: -12.521621704101562
    10. '(cost' → logprob: -12.646621704101562

Token 234: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7543519735336304
    2. '       ' → logprob: -0.8793519735336304
    3. '<|end|>' → logprob: -2.50435209274292
    4. ')' → logprob: -4.25435209274292
    5. 'return' → logprob: -4.37935209274292
    6. '<|end|>' → logprob: -6.37935209274292
    7. ' return' → logprob: -6.75435209274292
    8. '        
' → logprob: -6.87935209274292
    9. ')
' → logprob: -6.87935209274292
    10. '
' → logprob: -8.254351615905762

Token 235: ' =>' (ID: 871)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6967508792877197
    2. '<|end|>' → logprob: -0.8217508792877197
    3. ')' → logprob: -2.9467508792877197
    4. '<|end|>' → logprob: -5.571750640869141
    5. '       ' → logprob: -5.696750640869141
    6. ' )' → logprob: -7.696750640869141
    7. '  
' → logprob: -7.821750640869141
    8. 'return' → logprob: -8.32175064086914
    9. '        
' → logprob: -8.44675064086914
    10. ' 
' → logprob: -8.44675064086914

Token 236: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7841798067092896
    2. ' graph' → logprob: -0.9091798067092896
    3. ' edge' → logprob: -3.1591796875
    4. 'x' → logprob: -3.2841796875
    5. 'graph' → logprob: -3.7841796875
    6. ' add' → logprob: -3.7841796875
    7. 'edge' → logprob: -5.7841796875
    8. ' edges' → logprob: -5.7841796875
    9. ' from' → logprob: -5.9091796875
    10. 'add' → logprob: -6.9091796875

Token 237: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.020085148513317108
    2. '_a' → logprob: -4.020085334777832
    3. '[b' → logprob: -7.270085334777832
    4. '_' → logprob: -7.645085334777832
    5. 'b' → logprob: -7.895085334777832
    6. 'a' → logprob: -9.145085334777832
    7. '[' → logprob: -9.270085334777832
    8. '[a' → logprob: -9.770085334777832
    9. '[_' → logprob: -10.645085334777832
    10. ' _' → logprob: -11.020085334777832

Token 238: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5142123699188232
    2. ' -' → logprob: -1.2642123699188232
    3. '<=' → logprob: -2.8892123699188232
    4. ' >=' → logprob: -3.5142123699188232
    5. '-' → logprob: -4.014212608337402
    6. '>=' → logprob: -4.889212608337402
    7. ' ≤' → logprob: -6.139212608337402
    8. ' can' → logprob: -6.389212608337402
    9. ' ' → logprob: -7.014212608337402
    10. ' =' → logprob: -7.139212608337402

Token 239: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2522165775299072
    2. ' x' → logprob: -1.5022165775299072
    3. 'cost' → logprob: -8.752216339111328
    4. ' cost' → logprob: -9.502216339111328
    5. 'graph' → logprob: -11.127216339111328
    6. ' ' → logprob: -12.314716339111328
    7. ' ' → logprob: -12.314716339111328
    8. ' graph' → logprob: -12.939716339111328
    9. '_x' → logprob: -12.939716339111328
    10. '(x' → logprob: -13.064716339111328

Token 240: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.019843727350234985
    2. 'b' → logprob: -4.769843578338623
    3. 'x' → logprob: -4.894843578338623
    4. '_x' → logprob: -5.894843578338623
    5. '_cost' → logprob: -8.269844055175781
    6. '_c' → logprob: -8.519844055175781
    7. ' x' → logprob: -9.269844055175781
    8. 'cost' → logprob: -9.269844055175781
    9. '_' → logprob: -9.269844055175781
    10. '[b' → logprob: -10.644844055175781

Token 241: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2521404027938843
    2. '+' → logprob: -1.5021404027938843
    3. '+c' → logprob: -8.627140045166016
    4. ' plus' → logprob: -11.252140045166016
    5. 'cost' → logprob: -12.252140045166016
    6. 'plus' → logprob: -12.752140045166016
    7. ' ' → logprob: -13.127140045166016
    8. ' cost' → logprob: -13.877140045166016
    9. '[' → logprob: -14.002140045166016
    10. ' +
' → logprob: -14.252140045166016

Token 242: ' c' (ID: 274)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.31513434648513794
    2. 'cost' → logprob: -1.3151342868804932
    3. 'c' → logprob: -6.815134525299072
    4. ' c' → logprob: -7.190134525299072
    5. ' ' → logprob: -11.690134048461914
    6. '(cost' → logprob: -12.565134048461914
    7. '_cost' → logprob: -13.440134048461914
    8. ' 
' → logprob: -13.940134048461914
    9. ' ' → logprob: -14.565134048461914
    10. '
' → logprob: -14.752634048461914

Token 243: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43778854608535767
    2. '
' → logprob: -1.062788486480713
    3. '<|end|>' → logprob: -5.187788486480713
    4. 'return' → logprob: -6.187788486480713
    5. ' return' → logprob: -6.937788486480713
    6. '<|end|>' → logprob: -8.937788963317871
    7. '        
' → logprob: -9.687788963317871
    8. '
' → logprob: -9.687788963317871
    9. ')' → logprob: -9.687788963317871
    10. ')
' → logprob: -10.437788963317871

Token 244: ' x' (ID: 1215)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.4311964809894562
    2. 'graph' → logprob: -1.1811964511871338
    3. 'b' → logprob: -4.681196689605713
    4. ' b' → logprob: -4.931196689605713
    5. ' add' → logprob: -5.181196689605713
    6. ' x' → logprob: -5.556196689605713
    7. ' (' → logprob: -5.556196689605713
    8. 'x' → logprob: -5.931196689605713
    9. '(graph' → logprob: -6.056196689605713
    10. ' edge' → logprob: -6.556196689605713

Token 245: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.07186058908700943
    2. '_' → logprob: -2.8218605518341064
    3. 'b' → logprob: -4.9468607902526855
    4. '_a' → logprob: -6.4468607902526855
    5. ')' → logprob: -8.321860313415527
    6. ' _' → logprob: -8.321860313415527
    7. '_
' → logprob: -9.571860313415527
    8. ')_' → logprob: -9.946860313415527
    9. '_)' → logprob: -9.946860313415527
    10. '[' → logprob: -10.071860313415527

Token 246: ' -(' (ID: 66319)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.25940290093421936
    2. ')' → logprob: -2.3844029903411865
    3. '.' → logprob: -2.8844029903411865
    4. ' ->' → logprob: -4.134402751922607
    5. '<|end|>' → logprob: -4.134402751922607
    6. ' .' → logprob: -4.759402751922607
    7. ':' → logprob: -5.009402751922607
    8. ',' → logprob: -5.259402751922607
    9. '<|end|>' → logprob: -5.384402751922607
    10. ' ' → logprob: -5.384402751922607

Token 247: '->' (ID: 609)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14744096994400024
    2. ' x' → logprob: -2.0224409103393555
    3. 'a' → logprob: -5.7724409103393555
    4. '<|end|>' → logprob: -7.0224409103393555
    5. ' a' → logprob: -8.272440910339355
    6. ' ' → logprob: -9.522440910339355
    7. '>' → logprob: -9.647440910339355
    8. ')' → logprob: -9.647440910339355
    9. '<|end|>' → logprob: -9.772440910339355
    10. ')x' → logprob: -10.147440910339355

Token 248: ')' (ID: 8)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38850322365760803
    2. ' a' → logprob: -1.1385031938552856
    3. 'x' → logprob: -7.263503074645996
    4. ' x' → logprob: -8.013503074645996
    5. ')' → logprob: -8.888503074645996
    6. '>a' → logprob: -8.888503074645996
    7. '>' → logprob: -9.263503074645996
    8. ' ' → logprob: -10.013503074645996
    9. '(a' → logprob: -10.388503074645996
    10. '_a' → logprob: -10.513503074645996

Token 249: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28297165036201477
    2. ' a' → logprob: -1.4079716205596924
    3. 'x' → logprob: -7.2829718589782715
    4. ' x' → logprob: -8.157971382141113
    5. ' (' → logprob: -8.782971382141113
    6. 'b' → logprob: -8.907971382141113
    7. '(a' → logprob: -9.532971382141113
    8. '>' → logprob: -9.657971382141113
    9. ' ' → logprob: -9.907971382141113
    10. '>a' → logprob: -10.157971382141113

Token 250: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.2813584804534912
    2. 'a' → logprob: -1.4063584804534912
    3. ' a' → logprob: -9.78135871887207
    4. ')' → logprob: -10.65635871887207
    5. '_' → logprob: -10.65635871887207
    6. '_b' → logprob: -10.78135871887207
    7. '[a' → logprob: -11.15635871887207
    8. '[' → logprob: -11.65635871887207
    9. ')_' → logprob: -12.15635871887207
    10. '
' → logprob: -12.15635871887207

Token 251: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' weight' (ID: 6049)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.36063751578330994
    2. ' cost' → logprob: -1.3606375455856323
    3. 'weight' → logprob: -3.3606374263763428
    4. ' weight' → logprob: -4.610637664794922
    5. 'c' → logprob: -7.610637664794922
    6. 'edge' → logprob: -7.860637664794922
    7. ' edge' → logprob: -8.360637664794922
    8. ' c' → logprob: -9.860637664794922
    9. '
' → logprob: -9.860637664794922
    10. ' ' → logprob: -9.985637664794922

Token 253: ' c' (ID: 274)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.38691169023513794
    2. ' cost' → logprob: -1.1369116306304932
    3. 'c' → logprob: -11.136911392211914
    4. '(cost' → logprob: -11.511911392211914
    5. ' c' → logprob: -12.511911392211914
    6. '    ' → logprob: -13.011911392211914
    7. '+' → logprob: -13.136911392211914
    8. '_cost' → logprob: -13.386911392211914
    9. ' ' → logprob: -13.386911392211914
    10. '            ' → logprob: -13.636911392211914

Token 254: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011586016975343227
    2. 'return' → logprob: -4.8865861892700195
    3. ' return' → logprob: -5.8865861892700195
    4. '
' → logprob: -6.8865861892700195
    5. '<|end|>' → logprob: -9.01158618927002
    6. ')' → logprob: -11.01158618927002
    7. '<|end|>' → logprob: -12.13658618927002
    8. '           ' → logprob: -12.38658618927002
    9. '        
' → logprob: -12.51158618927002
    10. '   ' → logprob: -12.76158618927002

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018227318301796913
    2. 'return' → logprob: -4.3932271003723145
    3. ' return' → logprob: -6.1432271003723145
    4. '
' → logprob: -6.2682271003723145
    5. '<|end|>' → logprob: -6.5182271003723145
    6. '        
' → logprob: -9.518227577209473
    7. '   ' → logprob: -10.768227577209473
    8. '```' → logprob: -11.143227577209473
    9. '<|end|>' → logprob: -11.143227577209473
    10. ')' → logprob: -11.393227577209473

Token 256: ' self' (ID: 1051)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.979826807975769
    2. ' return' → logprob: -1.104826807975769
    3. '       ' → logprob: -1.229826807975769
    4. '
' → logprob: -7.479826927185059
    5. '        
' → logprob: -8.979826927185059
    6. '   ' → logprob: -9.229826927185059
    7. ' for' → logprob: -9.979826927185059
    8. '	return' → logprob: -10.104826927185059
    9. ' 
' → logprob: -10.604826927185059
    10. 'graph' → logprob: -10.604826927185059

Token 257: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.004162214230746031
    2. '.' → logprob: -5.504162311553955
    3. ' .' → logprob: -10.254161834716797
    4. '._' → logprob: -11.129161834716797
    5. '.m' → logprob: -11.754161834716797
    6. '
' → logprob: -12.379161834716797
    7. '.g' → logprob: -12.504161834716797
    8. 'graph' → logprob: -12.879161834716797
    9. '	graph' → logprob: -13.004161834716797
    10. '.s' → logprob: -13.129161834716797

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021809488534927
    2. '=' → logprob: -2.3502180576324463
    3. ' =
' → logprob: -11.725217819213867
    4. ' ' → logprob: -12.850217819213867
    5. ' =)' → logprob: -15.475217819213867
    6. '[' → logprob: -16.225217819213867
    7. '=
' → logprob: -16.850217819213867
    8. '＝' → logprob: -16.975217819213867
    9. ')' → logprob: -17.100217819213867
    10. '  ' → logprob: -17.225217819213867

Token 259: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.029753385111689568
    2. ' graph' → logprob: -3.5297534465789795
    3. '	graph' → logprob: -12.779753684997559
    4. '(graph' → logprob: -15.904753684997559
    5. 'Graph' → logprob: -18.279752731323242
    6. '_graph' → logprob: -18.404752731323242
    7. '.graph' → logprob: -19.279752731323242
    8. '
' → logprob: -19.654752731323242
    9. 'graphs' → logprob: -19.654752731323242
    10. '   ' → logprob: -19.904752731323242

Token 260: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.33500567078590393
    2. ' def' → logprob: -1.4600056409835815
    3. '   ' → logprob: -3.210005760192871
    4. '<|end|>' → logprob: -4.710005760192871
    5. '
' → logprob: -6.710005760192871
    6. '	def' → logprob: -6.835005760192871
    7. '<|end|>' → logprob: -7.710005760192871
    8. '    
' → logprob: -9.210005760192871
    9. ' ' → logprob: -9.335005760192871
    10. ')' → logprob: -10.335005760192871

Token 263: ' _' (ID: 1175)
  Prédit: ' bell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bell' → logprob: -0.15889008343219757
    2. ' solve' → logprob: -2.9088900089263916
    3. ' _' → logprob: -3.1588900089263916
    4. ' sp' → logprob: -3.9088900089263916
    5. 'bell' → logprob: -4.908890247344971
    6. ' run' → logprob: -5.533890247344971
    7. '_' → logprob: -5.658890247344971
    8. ' optimize' → logprob: -5.658890247344971
    9. ' maximize' → logprob: -6.533890247344971
    10. '_sp' → logprob: -6.658890247344971

Token 264: 'bell' (ID: 28449)
  Prédit: 'bell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bell' → logprob: -0.13602815568447113
    2. 'sp' → logprob: -2.3860280513763428
    3. 'initialize' → logprob: -4.511028289794922
    4. 'solve' → logprob: -5.386028289794922
    5. 'check' → logprob: -5.761028289794922
    6. 'build' → logprob: -6.011028289794922
    7. 'detect' → logprob: -6.261028289794922
    8. 'is' → logprob: -6.261028289794922
    9. 'has' → logprob: -6.386028289794922
    10. 'rel' → logprob: -6.511028289794922

Token 265: 'man' (ID: 2309)
  Prédit: 'man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -1.8312570318812504e-05
    2. '```' → logprob: -11.875018119812012
    3. '_f' → logprob: -13.000018119812012
    4. 'mand' → logprob: -13.125018119812012
    5. '_' → logprob: -13.875018119812012
    6. '``' → logprob: -14.125018119812012
    7. 'mann' → logprob: -14.250018119812012
    8. 'f' → logprob: -14.625018119812012
    9. '   ' → logprob: -15.000018119812012
    10. 'ford' → logprob: -15.000018119812012

Token 266: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.01802198775112629
    2. 'ford' → logprob: -4.143022060394287
    3. 'Ford' → logprob: -6.518022060394287
    4. '-f' → logprob: -8.268021583557129
    5. '```' → logprob: -9.518021583557129
    6. ' Ford' → logprob: -10.018021583557129
    7. 'man' → logprob: -10.518021583557129
    8. ' ford' → logprob: -10.893021583557129
    9. '   ' → logprob: -10.893021583557129
    10. '_F' → logprob: -11.143021583557129

Token 267: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -2.935296834039036e-06
    2. '(ord' → logprob: -14.12500286102295
    3. '```' → logprob: -14.37500286102295
    4. 'орд' → logprob: -14.50000286102295
    5. 'ords' → logprob: -14.50000286102295
    6. 'o' → logprob: -15.62500286102295
    7. 'orld' → logprob: -15.87500286102295
    8. '``' → logprob: -16.125003814697266
    9. '   ' → logprob: -17.375003814697266
    10. 'Ford' → logprob: -17.500003814697266

Token 268: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006786000449210405
    2. '(' → logprob: -7.875678539276123
    3. ' (' → logprob: -8.125679016113281
    4. '(
' → logprob: -13.750679016113281
    5. 'self' → logprob: -14.625679016113281
    6. '   ' → logprob: -14.875679016113281
    7. ' ' → logprob: -15.125679016113281
    8. '(s' → logprob: -15.250679016113281
    9. '_(' → logprob: -15.625679016113281
    10. ' self' → logprob: -16.87567901611328

Token 269: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3336307406425476
    2. '(self' → logprob: -1.5836308002471924
    3. ')(' → logprob: -3.3336308002471924
    4. 'self' → logprob: -3.9586308002471924
    5. '   ' → logprob: -5.083630561828613
    6. ')' → logprob: -5.458630561828613
    7. '):' → logprob: -5.708630561828613
    8. ' ,' → logprob: -5.958630561828613
    9. '):
' → logprob: -6.333630561828613
    10. ')(
' → logprob: -6.583630561828613

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004924308508634567
    2. 'dist' → logprob: -5.754924297332764
    3. ' distances' → logprob: -6.754924297332764
    4. 'distance' → logprob: -8.129924774169922
    5. ' dist' → logprob: -9.254924774169922
    6. '   ' → logprob: -9.504924774169922
    7. ' distance' → logprob: -9.879924774169922
    8. '	dist' → logprob: -11.379924774169922
    9. '
' → logprob: -11.629924774169922
    10. 'INF' → logprob: -11.879924774169922

Token 271: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1744976043701172
    2. '       ' → logprob: -2.174497604370117
    3. ' dist' → logprob: -3.174497604370117
    4. 'distance' → logprob: -6.049497604370117
    5. ' distances' → logprob: -6.424497604370117
    6. ' distance' → logprob: -8.299497604370117
    7. '
' → logprob: -8.799497604370117
    8. '   ' → logprob: -8.924497604370117
    9. 'import' → logprob: -10.174497604370117
    10. 'INF' → logprob: -10.424497604370117

Token 272: ' Use' (ID: 7649)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.027346067130565643
    2. ' dist' → logprob: -3.777346134185791
    3. 'distance' → logprob: -6.152346134185791
    4. '       ' → logprob: -6.527346134185791
    5. ' distances' → logprob: -8.402345657348633
    6. ' distance' → logprob: -9.277345657348633
    7. '   ' → logprob: -9.527345657348633
    8. 'd' → logprob: -10.902345657348633
    9. 'import' → logprob: -11.027345657348633
    10. 'def' → logprob: -11.027345657348633

Token 273: ' Bell' (ID: 27073)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.1808358430862427
    2. ' distances' → logprob: -1.1808358430862427
    3. 'self' → logprob: -1.9308358430862427
    4. 'dist' → logprob: -2.555835723876953
    5. ' dist' → logprob: -2.680835723876953
    6. 'distance' → logprob: -3.680835723876953
    7. ' distance' → logprob: -3.805835723876953
    8. '   ' → logprob: -3.930835723876953
    9. ' float' → logprob: -5.180835723876953
    10. 'import' → logprob: -5.430835723876953

Token 274: 'man' (ID: 2309)
  Prédit: 'man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -5.796184723294573e-06
    2. '   ' → logprob: -13.000005722045898
    3. 'mand' → logprob: -13.875005722045898
    4. '           ' → logprob: -14.875005722045898
    5. 'mann' → logprob: -14.875005722045898
    6. '       ' → logprob: -15.125005722045898
    7. '  ' → logprob: -15.500005722045898
    8. '-' → logprob: -15.500005722045898
    9. '```' → logprob: -15.500005722045898
    10. '
' → logprob: -15.625005722045898

Token 275: '-F' (ID: 8074)
  Prédit: 'Ford'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ford' → logprob: -0.21178342401981354
    2. '-F' → logprob: -1.7117834091186523
    3. '   ' → logprob: -5.461783409118652
    4. '_f' → logprob: -6.211783409118652
    5. 'ford' → logprob: -6.586783409118652
    6. '_F' → logprob: -6.961783409118652
    7. ' Ford' → logprob: -7.211783409118652
    8. '–' → logprob: -8.461783409118652
    9. 'F' → logprob: -9.086783409118652
    10. '-' → logprob: -9.211783409118652

Token 276: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.007190927397459745
    2. 'Ford' → logprob: -5.007190704345703
    3. 'man' → logprob: -8.007190704345703
    4. '```' → logprob: -9.757190704345703
    5. '   ' → logprob: -10.757190704345703
    6. 'ford' → logprob: -10.882190704345703
    7. '
' → logprob: -11.757190704345703
    8. '``' → logprob: -12.382190704345703
    9. '  ' → logprob: -12.507190704345703
    10. '

' → logprob: -13.007190704345703

Token 277: ' algorithm' (ID: 22184)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8761468529701233
    2. ' algorithm' → logprob: -1.8761467933654785
    3. ' to' → logprob: -2.3761467933654785
    4. '       ' → logprob: -2.5011467933654785
    5. '
' → logprob: -2.6261467933654785
    6. '   ' → logprob: -3.0011467933654785
    7. ' distances' → logprob: -3.0011467933654785
    8. ' for' → logprob: -3.3761467933654785
    9. 'self' → logprob: -4.3761467933654785
    10. 'dist' → logprob: -5.1261467933654785

Token 278: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06411352008581161
    2. '(self' → logprob: -3.5641136169433594
    3. ' distances' → logprob: -4.814113616943359
    4. 'self' → logprob: -5.314113616943359
    5. '()' → logprob: -5.314113616943359
    6. '   ' → logprob: -5.439113616943359
    7. '
' → logprob: -5.814113616943359
    8. 'distance' → logprob: -6.064113616943359
    9. 'dist' → logprob: -6.564113616943359
    10. 'def' → logprob: -6.939113616943359

Token 279: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.6660926938056946
    2. ' detect' → logprob: -1.5410926342010498
    3. ' initialize' → logprob: -2.29109263420105
    4. 'detect' → logprob: -2.66609263420105
    5. ' compute' → logprob: -3.16609263420105
    6. 'initialize' → logprob: -3.91609263420105
    7. '   ' → logprob: -4.166092872619629
    8. 'find' → logprob: -4.791092872619629
    9. 'compute' → logprob: -5.666092872619629
    10. ' check' → logprob: -5.916092872619629

Token 280: ' maximal' (ID: 65414)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.18043719232082367
    2. ' shortest' → logprob: -1.9304372072219849
    3. 'dist' → logprob: -5.180437088012695
    4. ' the' → logprob: -5.930437088012695
    5. ' True' → logprob: -6.055437088012695
    6. ' if' → logprob: -6.430437088012695
    7. ' any' → logprob: -6.805437088012695
    8. ' potential' → logprob: -7.180437088012695
    9. ' False' → logprob: -7.180437088012695
    10. ' longest' → logprob: -7.305437088012695

Token 281: ' x' (ID: 1215)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.028753362596035004
    2. ' distance' → logprob: -4.778753280639648
    3. ' calories' → logprob: -4.778753280639648
    4. ' usage' → logprob: -6.028753280639648
    5. 'dist' → logprob: -6.153753280639648
    6. ' calorie' → logprob: -6.528753280639648
    7. ' values' → logprob: -6.653753280639648
    8. 'distance' → logprob: -7.153753280639648
    9. '_dist' → logprob: -7.278753280639648
    10. ' costs' → logprob: -8.528753280639648

Token 282: '_i' (ID: 10853)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9542820453643799
    2. '_' → logprob: -1.5792820453643799
    3. 'dist' → logprob: -2.32928204536438
    4. 'values' → logprob: -2.45428204536438
    5. '_values' → logprob: -2.45428204536438
    6. ' values' → logprob: -3.57928204536438
    7. '[' → logprob: -3.57928204536438
    8. '_dist' → logprob: -3.70428204536438
    9. ' distances' → logprob: -3.82928204536438
    10. ' ' → logprob: -4.329281806945801

Token 283: ' subject' (ID: 5401)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3867919445037842
    2. ' values' → logprob: -1.6367919445037842
    3. ' s' → logprob: -1.7617919445037842
    4. '       ' → logprob: -2.261791944503784
    5. 's' → logprob: -2.511791944503784
    6. ' distances' → logprob: -2.761791944503784
    7. '   ' → logprob: -3.761791944503784
    8. '
' → logprob: -3.886791944503784
    9. 'dist' → logprob: -4.136792182922363
    10. ' ' → logprob: -4.261792182922363

Token 284: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.17768160998821259
    2. 'to' → logprob: -1.927681565284729
    3. '   ' → logprob: -4.1776814460754395
    4. '       ' → logprob: -6.4276814460754395
    5. '=' → logprob: -8.677681922912598
    6. '_to' → logprob: -9.552681922912598
    7. 'self' → logprob: -10.677681922912598
    8. '=self' → logprob: -10.802681922912598
    9. ' ' → logprob: -11.052681922912598
    10. '```' → logprob: -11.052681922912598

Token 285: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.7969222664833069
    2. ' difference' → logprob: -1.296922206878662
    3. ' self' → logprob: -2.546922206878662
    4. ' no' → logprob: -3.046922206878662
    5. ' the' → logprob: -3.171922206878662
    6. 'difference' → logprob: -3.296922206878662
    7. 'self' → logprob: -3.421922206878662
    8. 'constraints' → logprob: -4.046922206878662
    9. ' all' → logprob: -4.171922206878662
    10. 'the' → logprob: -5.546922206878662

Token 286: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028181103989481926
    2. ' distances' → logprob: -4.403181076049805
    3. 'dist' → logprob: -4.653181076049805
    4. '
' → logprob: -6.028181076049805
    5. 'distance' → logprob: -6.278181076049805
    6. ',' → logprob: -7.278181076049805
    7. '        
' → logprob: -7.778181076049805
    8. '   ' → logprob: -9.153181076049805
    9. ':' → logprob: -9.528181076049805
    10. ' distance' → logprob: -9.778181076049805

Token 287: ' ' (ID: 220)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.181371808052063
    2. ' self' → logprob: -3.8063716888427734
    3. ' detect' → logprob: -3.8063716888427734
    4. 'self' → logprob: -4.431371688842773
    5. ' possible' → logprob: -4.431371688842773
    6. ' initialize' → logprob: -4.681371688842773
    7. ' maximize' → logprob: -4.681371688842773
    8. '       ' → logprob: -4.681371688842773
    9. '   ' → logprob: -5.181371688842773
    10. ' initial' → logprob: -5.181371688842773

Token 288: '0' (ID: 15)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.21120095252990723
    2. 'no' → logprob: -2.3362009525299072
    3. 'self' → logprob: -4.086200714111328
    4. 'possible' → logprob: -4.836200714111328
    5. 'non' → logprob: -4.961200714111328
    6. 'absence' → logprob: -5.086200714111328
    7. 'detect' → logprob: -5.086200714111328
    8. ' absence' → logprob: -5.211200714111328
    9. 'bounds' → logprob: -5.336200714111328
    10. 'initial' → logprob: -5.461200714111328

Token 289: '<=' (ID: 16672)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6461589336395264
    2. 'distance' → logprob: -2.5211589336395264
    3. '-based' → logprob: -3.2711589336395264
    4. ' =' → logprob: -3.2711589336395264
    5. '_dist' → logprob: -3.3961589336395264
    6. ' distances' → logprob: -3.3961589336395264
    7. ' for' → logprob: -3.6461589336395264
    8. ' ' → logprob: -3.6461589336395264
    9. '   ' → logprob: -4.0211591720581055
    10. ' initial' → logprob: -4.0211591720581055

Token 290: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.48027804493904114
    2. ' x' → logprob: -1.6052780151367188
    3. ' self' → logprob: -2.4802780151367188
    4. 'self' → logprob: -2.4802780151367188
    5. ' i' → logprob: -5.605278015136719
    6. 'i' → logprob: -5.605278015136719
    7. '[i' → logprob: -6.730278015136719
    8. '[]' → logprob: -6.980278015136719
    9. ' ' → logprob: -7.480278015136719
    10. '[' → logprob: -7.605278015136719

Token 291: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.06635965406894684
    2. ' self' → logprob: -3.941359758377075
    3. 'i' → logprob: -4.441359519958496
    4. 'self' → logprob: -5.191359519958496
    5. '       ' → logprob: -5.441359519958496
    6. '_' → logprob: -5.566359519958496
    7. '   ' → logprob: -5.941359519958496
    8. ' =' → logprob: -6.066359519958496
    9. '[]' → logprob: -6.066359519958496
    10. ' _' → logprob: -6.191359519958496

Token 292: ' <=' (ID: 5017)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04881558567285538
    2. '=' → logprob: -3.4238154888153076
    3. 's' → logprob: -4.673815727233887
    4. '   ' → logprob: -6.173815727233887
    5. 'dist' → logprob: -6.173815727233887
    6. ' ' → logprob: -7.923815727233887
    7. '_values' → logprob: -8.173815727233887
    8. '_dist' → logprob: -8.298815727233887
    9. '       ' → logprob: -9.173815727233887
    10. '_' → logprob: -9.173815727233887

Token 293: ' t' (ID: 260)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15613806247711182
    2. ' self' → logprob: -2.7811379432678223
    3. '100' → logprob: -3.4061379432678223
    4. '[' → logprob: -4.031137943267822
    5. 'float' → logprob: -5.031137943267822
    6. ' ' → logprob: -5.031137943267822
    7. '0' → logprob: -5.531137943267822
    8. ' [' → logprob: -5.531137943267822
    9. '1' → logprob: -5.781137943267822
    10. '10' → logprob: -6.031137943267822

Token 294: '_i' (ID: 10853)
  Prédit: 'ickets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickets' → logprob: -0.20493704080581665
    2. 's' → logprob: -1.7049369812011719
    3. '
' → logprob: -7.329936981201172
    4. 'tickets' → logprob: -7.579936981201172
    5. 'icket' → logprob: -8.329936981201172
    6. 'self' → logprob: -8.704936981201172
    7. '   ' → logprob: -8.829936981201172
    8. '_i' → logprob: -8.829936981201172
    9. 'ck' → logprob: -8.954936981201172
    10. '_s' → logprob: -9.079936981201172

Token 295: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01081470213830471
    2. '
' → logprob: -4.635814666748047
    3. ' distances' → logprob: -8.260814666748047
    4. 'def' → logprob: -8.635814666748047
    5. 'self' → logprob: -8.885814666748047
    6. ',' → logprob: -8.885814666748047
    7. '        
' → logprob: -9.385814666748047
    8. '```' → logprob: -9.760814666748047
    9. '(self' → logprob: -10.010814666748047
    10. '   ' → logprob: -10.510814666748047

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02674155868589878
    2. 'dist' → logprob: -3.7767415046691895
    3. ' distances' → logprob: -6.2767415046691895
    4. 'distance' → logprob: -7.2767415046691895
    5. '
' → logprob: -7.9017415046691895
    6. ' dist' → logprob: -8.401741981506348
    7. 'def' → logprob: -9.776741981506348
    8. 'dp' → logprob: -9.776741981506348
    9. '        
' → logprob: -9.901741981506348
    10. '   ' → logprob: -9.901741981506348

Token 297: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.024001458659768105
    2. '       ' → logprob: -4.274001598358154
    3. ' dist' → logprob: -4.774001598358154
    4. 'distance' → logprob: -6.899001598358154
    5. '   ' → logprob: -8.774001121520996
    6. ' distances' → logprob: -9.649001121520996
    7. '
' → logprob: -10.649001121520996
    8. 'import' → logprob: -10.774001121520996
    9. ' distance' → logprob: -11.524001121520996
    10. ' ' → logprob: -11.649001121520996

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519323229789734
    2. '=' → logprob: -1.5019323825836182
    3. ' ' → logprob: -13.751932144165039
    4. 's' → logprob: -14.876932144165039
    5. '[' → logprob: -14.876932144165039
    6. ' =[' → logprob: -15.251932144165039
    7. ')' → logprob: -15.751932144165039
    8. '  ' → logprob: -15.751932144165039
    9. '```' → logprob: -15.751932144165039
    10. ',' → logprob: -16.00193214416504

Token 299: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002909369533881545
    2. '[-' → logprob: -6.002909183502197
    3. ' [' → logprob: -8.127909660339355
    4. '{' → logprob: -9.252909660339355
    5. '[self' → logprob: -10.127909660339355
    6. ' [-' → logprob: -14.252909660339355
    7. '   ' → logprob: -14.752909660339355
    8. '[max' → logprob: -15.002909660339355
    9. '[len' → logprob: -15.127909660339355
    10. '[int' → logprob: -15.752909660339355

Token 300: 'float' (ID: 7829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20302797853946686
    2. 'float' → logprob: -1.7030279636383057
    3. '-' → logprob: -6.703028202056885
    4. '-f' → logprob: -9.078027725219727
    5. '-(' → logprob: -9.203027725219727
    6. ' float' → logprob: -9.703027725219727
    7. '[' → logprob: -10.703027725219727
    8. 'self' → logprob: -10.828027725219727
    9. '(float' → logprob: -11.328027725219727
    10. '[-' → logprob: -11.828027725219727

Token 301: '('' (ID: 706)
  Prédit: '('-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.029935842379927635
    2. '('' → logprob: -3.529935836791992
    3. ''-' → logprob: -9.029935836791992
    4. '("-' → logprob: -10.904935836791992
    5. '('+' → logprob: -10.904935836791992
    6. '(' → logprob: -10.904935836791992
    7. 'inf' → logprob: -13.029935836791992
    8. '(-' → logprob: -13.592435836791992
    9. ' ('' → logprob: -13.842435836791992
    10. '-' → logprob: -14.092435836791992

Token 302: 'inf' (ID: 22226)
  Prédit: '-inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-inf' → logprob: -0.04957253858447075
    2. 'inf' → logprob: -3.174572467803955
    3. ''-' → logprob: -5.424572467803955
    4. '-in' → logprob: -6.299572467803955
    5. '-' → logprob: -8.924572944641113
    6. '0' → logprob: -10.174572944641113
    7. ''in' → logprob: -10.424572944641113
    8. ''' → logprob: -11.299572944641113
    9. '-n' → logprob: -11.299572944641113
    10. '-INF' → logprob: -11.424572944641113

Token 303: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.6100211143493652
    2. '')]' → logprob: -1.2350211143493652
    3. ')' → logprob: -1.8600211143493652
    4. '')' → logprob: -5.110021114349365
    5. ']' → logprob: -5.985021114349365
    6. ' )' → logprob: -6.985021114349365
    7. '']' → logprob: -7.985021114349365
    8. '")]' → logprob: -9.485021591186523
    9. ''' → logprob: -9.610021591186523
    10. '),' → logprob: -10.110021591186523

Token 304: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0778619647026062
    2. ']' → logprob: -2.952862024307251
    3. 'for' → logprob: -4.577861785888672
    4. ',' → logprob: -6.077861785888672
    5. 'dist' → logprob: -6.077861785888672
    6. ' ]' → logprob: -6.327861785888672
    7. ']*' → logprob: -6.827861785888672
    8. '    ' → logprob: -7.202861785888672
    9. '   ' → logprob: -7.327861785888672
    10. '	for' → logprob: -7.577861785888672

Token 305: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000206401280593127
    2. '(self' → logprob: -8.750205993652344
    3. ' self' → logprob: -10.500205993652344
    4. '       ' → logprob: -10.875205993652344
    5. '   ' → logprob: -13.875205993652344
    6. '           ' → logprob: -15.000205993652344
    7. '(' → logprob: -17.000205993652344
    8. '
' → logprob: -17.125205993652344
    9. ' (' → logprob: -17.250205993652344
    10. '	self' → logprob: -18.375205993652344

Token 306: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -2.248469718324486e-05
    2. 'N' → logprob: -10.750022888183594
    3. '	N' → logprob: -14.875022888183594
    4. '   ' → logprob: -15.875022888183594
    5. '.R' → logprob: -15.875022888183594
    6. '.' → logprob: -16.000022888183594
    7. 'self' → logprob: -16.250022888183594
    8. '<N' → logprob: -16.500022888183594
    9. 'user' → logprob: -17.125022888183594
    10. ' .' → logprob: -17.125022888183594

Token 307: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04320700094103813
    2. 'dist' → logprob: -3.2932069301605225
    3. '<|end|>' → logprob: -6.543207168579102
    4. '        
' → logprob: -6.668207168579102
    5. '       ' → logprob: -6.668207168579102
    6. ' dist' → logprob: -8.168207168579102
    7. '<|end|>' → logprob: -8.168207168579102
    8. '
' → logprob: -9.168207168579102
    9. '	dist' → logprob: -9.293207168579102
    10. ' 
' → logprob: -9.418207168579102

Token 308: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6272247433662415
    2. '       ' → logprob: -1.1272246837615967
    3. 'dist' → logprob: -3.1272246837615967
    4. '[' → logprob: -3.7522246837615967
    5. 'for' → logprob: -3.8772246837615967
    6. '<|end|>' → logprob: -4.002224922180176
    7. ' dist' → logprob: -4.252224922180176
    8. '0' → logprob: -4.752224922180176
    9. '        
' → logprob: -5.627224922180176
    10. ' ' → logprob: -5.627224922180176

Token 309: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14176227152347565
    2. ' for' → logprob: -2.6417622566223145
    3. 'dist' → logprob: -2.8917622566223145
    4. '0' → logprob: -6.0167622566223145
    5. '[' → logprob: -6.3917622566223145
    6. '       ' → logprob: -7.0167622566223145
    7. ' dist' → logprob: -8.516762733459473
    8. 'queue' → logprob: -9.141762733459473
    9. '        
' → logprob: -10.766762733459473
    10. '	for' → logprob: -10.891762733459473

Token 310: ' Dist' (ID: 35375)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2291814088821411
    2. ' for' → logprob: -1.8541814088821411
    3. 'dist' → logprob: -3.1041812896728516
    4. '       ' → logprob: -6.104181289672852
    5. ' dist' → logprob: -7.729181289672852
    6. '0' → logprob: -8.229181289672852
    7. 'queue' → logprob: -8.479181289672852
    8. '#' → logprob: -9.979181289672852
    9. '        
' → logprob: -10.854181289672852
    10. 'import' → logprob: -11.104181289672852

Token 311: ' interpreted' (ID: 66123)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38900405168533325
    2. ' =' → logprob: -1.1390039920806885
    3. ' ' → logprob: -7.389004230499268
    4. '=' → logprob: -7.514004230499268
    5. '[:]' → logprob: -8.13900375366211
    6. '=[' → logprob: -8.51400375366211
    7. '   ' → logprob: -8.76400375366211
    8. 'ance' → logprob: -9.88900375366211
    9. ' =[' → logprob: -9.88900375366211
    10. ' [' → logprob: -9.88900375366211

Token 312: ' as' (ID: 472)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01755683496594429
    2. ' =' → logprob: -4.142556667327881
    3. '=' → logprob: -7.142556667327881
    4. ' [' → logprob: -8.267557144165039
    5. ' as' → logprob: -8.767557144165039
    6. '=[' → logprob: -9.642557144165039
    7. ':' → logprob: -10.142557144165039
    8. '[:]' → logprob: -10.267557144165039
    9. '   ' → logprob: -10.767557144165039
    10. '[
' → logprob: -10.767557144165039

Token 313: ' upper' (ID: 13057)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3054947257041931
    2. 'max' → logprob: -2.305494785308838
    3. ' ' → logprob: -2.930494785308838
    4. 'maximum' → logprob: -3.180494785308838
    5. ' maximum' → logprob: -4.555494785308838
    6. 'upper' → logprob: -4.930494785308838
    7. 'the' → logprob: -5.055494785308838
    8. 'dist' → logprob: -5.180494785308838
    9. ' max' → logprob: -5.430494785308838
    10. ' upper' → logprob: -5.805494785308838

Token 314: ' bound' (ID: 11608)
  Prédit: ' bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bound' → logprob: -0.854241132736206
    2. '_bound' → logprob: -0.854241132736206
    3. ' bounds' → logprob: -2.479241132736206
    4. 'bound' → logprob: -3.604241132736206
    5. '_bounds' → logprob: -3.604241132736206
    6. '_' → logprob: -4.854241371154785
    7. ' _' → logprob: -6.354241371154785
    8. 'bounds' → logprob: -7.604241371154785
    9. ' =' → logprob: -8.604241371154785
    10. '_b' → logprob: -9.354241371154785

Token 315: ' offset' (ID: 8985)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.772834300994873
    2. ' for' → logprob: -1.272834300994873
    3. 's' → logprob: -1.897834300994873
    4. '[' → logprob: -3.272834300994873
    5. '=' → logprob: -4.022834300994873
    6. '       ' → logprob: -4.397834300994873
    7. ' on' → logprob: -4.522834300994873
    8. ' s' → logprob: -4.772834300994873
    9. ',' → logprob: -5.147834300994873
    10. '<|end|>' → logprob: -5.897834300994873

Token 316: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43700093030929565
    2. 's' → logprob: -2.1870009899139404
    3. '[' → logprob: -2.5620009899139404
    4. ' =' → logprob: -3.1870009899139404
    5. 'dist' → logprob: -3.1870009899139404
    6. '       ' → logprob: -3.6870009899139404
    7. ' for' → logprob: -3.8120009899139404
    8. '=' → logprob: -4.437000751495361
    9. '        
' → logprob: -5.437000751495361
    10. ',' → logprob: -5.437000751495361

Token 317: ' usage' (ID: 16622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39115387201309204
    2. 'dist' → logprob: -2.1411538124084473
    3. 'i' → logprob: -2.3911538124084473
    4. ' i' → logprob: -3.7661538124084473
    5. 'self' → logprob: -3.7661538124084473
    6. 'x' → logprob: -4.141153812408447
    7. ' ' → logprob: -4.516153812408447
    8. ' the' → logprob: -5.141153812408447
    9. ' each' → logprob: -5.266153812408447
    10. 'the' → logprob: -5.391153812408447

Token 318: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3852925300598145
    2. 's' → logprob: -1.5102925300598145
    3. '[' → logprob: -1.7602925300598145
    4. '       ' → logprob: -1.8852925300598145
    5. ' for' → logprob: -2.0102925300598145
    6. '=' → logprob: -3.8852925300598145
    7. 'dist' → logprob: -4.8852925300598145
    8. '
' → logprob: -5.2602925300598145
    9. '<|end|>' → logprob: -5.3852925300598145
    10. 'for' → logprob: -5.5102925300598145

Token 319: ' machines' (ID: 14656)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2967031002044678
    2. 'each' → logprob: -1.2967031002044678
    3. 'machines' → logprob: -1.7967031002044678
    4. ' each' → logprob: -2.2967031002044678
    5. 'i' → logprob: -3.0467031002044678
    6. 'machine' → logprob: -3.2967031002044678
    7. 'the' → logprob: -3.5467031002044678
    8. ' i' → logprob: -4.296703338623047
    9. '[i' → logprob: -4.421703338623047
    10. 'dist' → logprob: -4.421703338623047

Token 320: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35922685265541077
    2. '
' → logprob: -2.234226942062378
    3. 'dist' → logprob: -2.609226942062378
    4. '       ' → logprob: -2.984226942062378
    5. '[' → logprob: -3.859226942062378
    6. '<|end|>' → logprob: -4.109226703643799
    7. ' dist' → logprob: -4.734226703643799
    8. 'for' → logprob: -4.734226703643799
    9. '        
' → logprob: -5.109226703643799
    10. '<|end|>' → logprob: -6.109226703643799

Token 321: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11821281164884567
    2. '       ' → logprob: -2.6182126998901367
    3. 'for' → logprob: -3.7432126998901367
    4. 'dist' → logprob: -4.743212699890137
    5. '[' → logprob: -5.743212699890137
    6. ' dist' → logprob: -6.743212699890137
    7. ' =' → logprob: -7.993212699890137
    8. '0' → logprob: -7.993212699890137
    9. '=' → logprob: -8.118212699890137
    10. '<|end|>' → logprob: -8.618212699890137

Token 322: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3994571566581726
    2. 'for' → logprob: -1.2744572162628174
    3. 'dist' → logprob: -3.7744572162628174
    4. '       ' → logprob: -3.7744572162628174
    5. '0' → logprob: -6.274456977844238
    6. ' dist' → logprob: -6.399456977844238
    7. '[' → logprob: -9.149456977844238
    8. ' ' → logprob: -10.399456977844238
    9. '	for' → logprob: -10.524456977844238
    10. '        
' → logprob: -10.899456977844238

Token 323: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4587629437446594
    2. ' for' → logprob: -1.0837628841400146
    3. 'dist' → logprob: -3.5837628841400146
    4. ' dist' → logprob: -6.958763122558594
    5. '       ' → logprob: -7.208763122558594
    6. '   ' → logprob: -10.458763122558594
    7. '0' → logprob: -10.583763122558594
    8. 'return' → logprob: -10.833763122558594
    9. '	for' → logprob: -11.208763122558594
    10. 'queue' → logprob: -11.333763122558594

Token 324: ' maximize' (ID: 44207)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19269932806491852
    2. ' ' → logprob: -2.442699432373047
    3. 'self' → logprob: -3.817699432373047
    4. '[' → logprob: -4.192699432373047
    5. 'max' → logprob: -4.567699432373047
    6. ' self' → logprob: -5.192699432373047
    7. ' max' → logprob: -5.442699432373047
    8. 'def' → logprob: -5.567699432373047
    9. 'x' → logprob: -5.692699432373047
    10. 'dist' → logprob: -5.692699432373047

Token 325: ' calories' (ID: 30509)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15192486345767975
    2. ' dist' → logprob: -2.6519248485565186
    3. ' usage' → logprob: -3.4019248485565186
    4. ' all' → logprob: -4.776925086975098
    5. ' the' → logprob: -5.151925086975098
    6. 'x' → logprob: -5.776925086975098
    7. 'max' → logprob: -5.901925086975098
    8. 'the' → logprob: -6.026925086975098
    9. 'usage' → logprob: -6.151925086975098
    10. 'all' → logprob: -6.151925086975098

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.136131152510643
    2. '       ' → logprob: -3.5111310482025146
    3. ' for' → logprob: -3.5111310482025146
    4. ' ,' → logprob: -3.6361310482025146
    5. 'dist' → logprob: -4.011131286621094
    6. ' dist' → logprob: -4.511131286621094
    7. ',
' → logprob: -5.886131286621094
    8. '
' → logprob: -6.386131286621094
    9. ' =' → logprob: -6.511131286621094
    10. '=' → logprob: -6.761131286621094

Token 327: ' we' (ID: 581)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7006884813308716
    2. ' for' → logprob: -1.0756884813308716
    3. 'for' → logprob: -2.450688362121582
    4. ' dist' → logprob: -2.575688362121582
    5. ' we' → logprob: -9.075688362121582
    6. ' distances' → logprob: -10.200688362121582
    7. '       ' → logprob: -10.325688362121582
    8. 'we' → logprob: -10.450688362121582
    9. '
' → logprob: -10.575688362121582
    10. 's' → logprob: -11.450688362121582

Token 328: ' want' (ID: 1682)
  Prédit: ' want'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -1.3873292207717896
    2. ' should' → logprob: -2.0123291015625
    3. 'initialize' → logprob: -2.1373291015625
    4. ' initialize' → logprob: -2.2623291015625
    5. ' set' → logprob: -2.5123291015625
    6. ' can' → logprob: -2.7623291015625
    7. ' start' → logprob: -3.1373291015625
    8. 'set' → logprob: -3.3873291015625
    9. 'should' → logprob: -3.6373291015625
    10. ' will' → logprob: -3.6373291015625

Token 329: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4394051730632782
    2. 'dist' → logprob: -1.4394052028656006
    3. ' dist' → logprob: -2.5644052028656006
    4. '0' → logprob: -3.9394052028656006
    5. 'to' → logprob: -4.0644049644470215
    6. ' ' → logprob: -6.1894049644470215
    7. 'max' → logprob: -7.8144049644470215
    8. '    ' → logprob: -7.8144049644470215
    9. ' the' → logprob: -8.18940544128418
    10. ' for' → logprob: -8.18940544128418

Token 330: ' assign' (ID: 14975)
  Prédit: ' minimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimize' → logprob: -1.03224778175354
    2. 'min' → logprob: -1.15724778175354
    3. 'dist' → logprob: -2.40724778175354
    4. ' min' → logprob: -2.65724778175354
    5. 'maximize' → logprob: -2.65724778175354
    6. ' maximize' → logprob: -2.90724778175354
    7. ' dist' → logprob: -3.78224778175354
    8. 'max' → logprob: -4.657247543334961
    9. ' max' → logprob: -5.907247543334961
    10. '[min' → logprob: -6.157247543334961

Token 331: ' x' (ID: 1215)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6488184928894043
    2. '0' → logprob: -0.8988184928894043
    3. ' dist' → logprob: -2.8988184928894043
    4. '[' → logprob: -5.023818492889404
    5. ' ' → logprob: -5.398818492889404
    6. 'x' → logprob: -7.523818492889404
    7. '[i' → logprob: -7.773818492889404
    8. 'max' → logprob: -7.898818492889404
    9. '   ' → logprob: -8.023818969726562
    10. 'for' → logprob: -8.398818969726562

Token 332: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.688381552696228
    2. '_i' → logprob: -0.813381552696228
    3. '_' → logprob: -3.6883816719055176
    4. '=' → logprob: -4.438381671905518
    5. '[i' → logprob: -4.688381671905518
    6. '[' → logprob: -5.438381671905518
    7. 's' → logprob: -6.438381671905518
    8. '   ' → logprob: -7.438381671905518
    9. ' ' → logprob: -8.43838119506836
    10. 'i' → logprob: -8.56338119506836

Token 333: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03324231132864952
    2. '=' → logprob: -3.5332422256469727
    3. '[' → logprob: -6.033242225646973
    4. 's' → logprob: -6.908242225646973
    5. '[i' → logprob: -9.908242225646973
    6. '0' → logprob: -11.033242225646973
    7. ' ' → logprob: -11.408242225646973
    8. '   ' → logprob: -12.533242225646973
    9. '[:]' → logprob: -13.658242225646973
    10. '[s' → logprob: -13.908242225646973

Token 334: ' large' (ID: 4410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22270573675632477
    2. 'low' → logprob: -2.597705841064453
    3. 'large' → logprob: -3.222705841064453
    4. 'high' → logprob: -3.847705841064453
    5. 'small' → logprob: -3.972705841064453
    6. 'max' → logprob: -3.972705841064453
    7. 'self' → logprob: -4.972705841064453
    8. 'minimal' → logprob: -5.722705841064453
    9. ' ' → logprob: -5.847705841064453
    10. 'min' → logprob: -5.972705841064453

Token 335: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.010238460265100002
    2. 'as' → logprob: -4.7602386474609375
    3. ' -' → logprob: -7.3852386474609375
    4. '-' → logprob: -8.635238647460938
    5. ' a' → logprob: -8.760238647460938
    6. '    ' → logprob: -8.885238647460938
    7. '   ' → logprob: -9.010238647460938
    8. ' ' → logprob: -9.635238647460938
    9. ' =' → logprob: -9.885238647460938
    10. '[' → logprob: -10.010238647460938

Token 336: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.07531052827835083
    2. ' possible' → logprob: -2.825310468673706
    3. 'self' → logprob: -4.700310707092285
    4. '0' → logprob: -6.200310707092285
    5. '   ' → logprob: -6.950310707092285
    6. ' ' → logprob: -8.325310707092285
    7. 'tickets' → logprob: -8.325310707092285
    8. '_possible' → logprob: -8.450310707092285
    9. ' self' → logprob: -8.950310707092285
    10. 'float' → logprob: -10.200310707092285

Token 337: ' but' (ID: 889)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9310578107833862
    2. '
' → logprob: -1.3060578107833862
    3. '       ' → logprob: -1.9310578107833862
    4. ' for' → logprob: -2.431057929992676
    5. 'dist' → logprob: -3.306057929992676
    6. '=' → logprob: -3.806057929992676
    7. ',' → logprob: -4.181057929992676
    8. '[' → logprob: -4.556057929992676
    9. ' dist' → logprob: -5.931057929992676
    10. '        
' → logprob: -6.181057929992676

Token 338: ' within' (ID: 3518)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.652954638004303
    2. ' no' → logprob: -1.5279545783996582
    3. 'not' → logprob: -2.902954578399658
    4. ' <=' → logprob: -3.152954578399658
    5. 'dist' → logprob: -3.277954578399658
    6. ' within' → logprob: -3.277954578399658
    7. '<=' → logprob: -3.902954578399658
    8. ' constrained' → logprob: -4.277954578399658
    9. ' bounded' → logprob: -4.652954578399658
    10. 'bounded' → logprob: -4.902954578399658

Token 339: ' tickets' (ID: 17323)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8388732671737671
    2. '0' → logprob: -1.713873267173767
    3. '[' → logprob: -2.4638733863830566
    4. ' the' → logprob: -2.8388733863830566
    5. ' constraints' → logprob: -2.9638733863830566
    6. 'the' → logprob: -2.9638733863830566
    7. 'constraints' → logprob: -3.0888733863830566
    8. ' self' → logprob: -3.2138733863830566
    9. ' [' → logprob: -4.213873386383057
    10. '[self' → logprob: -4.463873386383057

Token 340: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.243383765220642
    2. '[' → logprob: -1.493383765220642
    3. ',' → logprob: -2.4933838844299316
    4. 's' → logprob: -2.9933838844299316
    5. '
' → logprob: -3.2433838844299316
    6. '-' → logprob: -3.2433838844299316
    7. 'for' → logprob: -3.6183838844299316
    8. ' ' → logprob: -3.6183838844299316
    9. ' limits' → logprob: -3.8683838844299316
    10. '.' → logprob: -4.118383884429932

Token 341: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.10962648689746857
    2. ' constraints' → logprob: -2.609626531600952
    3. '0' → logprob: -3.859626531600952
    4. 'dist' → logprob: -5.984626293182373
    5. 'constraint' → logprob: -6.234626293182373
    6. 'bounds' → logprob: -6.234626293182373
    7. '   ' → logprob: -7.359626293182373
    8. ' ' → logprob: -7.734626293182373
    9. 'bound' → logprob: -8.234626770019531
    10. '       ' → logprob: -8.484626770019531

Token 342: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4749028980731964
    2. ' for' → logprob: -1.599902868270874
    3. '
' → logprob: -2.224902868270874
    4. '<|end|>' → logprob: -3.724902868270874
    5. 'dist' → logprob: -4.224903106689453
    6. ',' → logprob: -4.849903106689453
    7. 'for' → logprob: -5.099903106689453
    8. '<|end|>' → logprob: -5.474903106689453
    9. '        
' → logprob: -5.724903106689453
    10. ' =' → logprob: -6.099903106689453

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5678961277008057
    2. ' for' → logprob: -1.1928961277008057
    3. '
' → logprob: -2.5678961277008057
    4. 'dist' → logprob: -3.9428961277008057
    5. 'for' → logprob: -4.442895889282227
    6. '<|end|>' → logprob: -4.817895889282227
    7. '        
' → logprob: -5.067895889282227
    8. '[' → logprob: -6.192895889282227
    9. ',' → logprob: -7.067895889282227
    10. '<|end|>' → logprob: -7.317895889282227

Token 344: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39736926555633545
    2. ' for' → logprob: -1.5223692655563354
    3. 'dist' → logprob: -2.272369384765625
    4. '       ' → logprob: -5.397369384765625
    5. ' dist' → logprob: -6.397369384765625
    6. 'queue' → logprob: -8.147369384765625
    7. '   ' → logprob: -9.772369384765625
    8. ' queue' → logprob: -10.397369384765625
    9. 'import' → logprob: -11.022369384765625
    10. '#' (adapté à ' #') → logprob: -11.022369384765625

Token 345: ' Because' (ID: 13602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09841325879096985
    2. 'dist' → logprob: -2.7234132289886475
    3. ' for' → logprob: -3.7234132289886475
    4. '       ' → logprob: -6.098413467407227
    5. 'queue' → logprob: -6.723413467407227
    6. ' dist' → logprob: -8.848413467407227
    7. '#' → logprob: -8.973413467407227
    8. 'import' → logprob: -9.598413467407227
    9. 'from' → logprob: -10.223413467407227
    10. '   ' → logprob: -10.223413467407227

Token 346: ' constraints' (ID: 31060)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.7672410607337952
    2. 'we' → logprob: -1.5172410011291504
    3. 'x' → logprob: -2.0172410011291504
    4. 'dist' → logprob: -3.1422410011291504
    5. ' all' → logprob: -3.8922410011291504
    6. ' the' → logprob: -3.8922410011291504
    7. ' of' → logprob: -4.26724100112915
    8. ' x' → logprob: -4.26724100112915
    9. ' maximizing' → logprob: -4.39224100112915
    10. 'the' → logprob: -4.64224100112915

Token 347: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.5444022417068481
    2. 'are' → logprob: -1.5444022417068481
    3. 'limit' → logprob: -2.6694021224975586
    4. '   ' → logprob: -2.7944021224975586
    5. 'dist' → logprob: -3.5444021224975586
    6. '[' → logprob: -3.7944021224975586
    7. ' represent' → logprob: -3.9194021224975586
    8. ' limit' → logprob: -4.044402122497559
    9. ' relate' → logprob: -4.044402122497559
    10. 'must' → logprob: -4.294402122497559

Token 348: ' x' (ID: 1215)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'difference' → logprob: -1.3274873495101929
    2. 'ine' → logprob: -1.5774873495101929
    3. 'of' → logprob: -1.9524873495101929
    4. ' difference' → logprob: -2.0774874687194824
    5. ' of' → logprob: -2.5774874687194824
    6. 'x' → logprob: -3.0774874687194824
    7. ' inequalities' → logprob: -3.3274874687194824
    8. 'upper' → logprob: -3.8274874687194824
    9. 'in' → logprob: -4.077487468719482
    10. '"' → logprob: -4.077487468719482

Token 349: '_a' (ID: 10852)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.006421544589102268
    2. '_b' → logprob: -6.3814215660095215
    3. '_a' → logprob: -6.6314215660095215
    4. '[i' → logprob: -7.1314215660095215
    5. '_j' → logprob: -7.2564215660095215
    6. '[' → logprob: -7.7564215660095215
    7. '<=' → logprob: -8.131421089172363
    8. '_' → logprob: -8.256421089172363
    9. '>=' → logprob: -8.381421089172363
    10. '[]' → logprob: -8.881421089172363

Token 350: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.047448329627513885
    2. '-' → logprob: -3.2974483966827393
    3. ' <=' → logprob: -5.67244815826416
    4. '_i' → logprob: -5.67244815826416
    5. '<=' → logprob: -6.42244815826416
    6. '   ' → logprob: -8.42244815826416
    7. '[' → logprob: -9.17244815826416
    8. '_b' → logprob: -9.54744815826416
    9. '>=' → logprob: -9.79744815826416
    10. '[i' → logprob: -9.92244815826416

Token 351: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04858850687742233
    2. ' x' → logprob: -3.048588514328003
    3. '_x' → logprob: -14.173588752746582
    4. ' ' → logprob: -15.923588752746582
    5. 'dist' → logprob: -16.048587799072266
    6. '   ' → logprob: -16.548587799072266
    7. '_' → logprob: -17.548587799072266
    8. '	x' → logprob: -17.798587799072266
    9. '
' → logprob: -17.798587799072266
    10. '```' → logprob: -17.923587799072266

Token 352: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.12899266183376312
    2. '_i' → logprob: -2.5039925575256348
    3. 'b' → logprob: -3.2539925575256348
    4. 'i' → logprob: -7.753992557525635
    5. '<=' → logprob: -9.253993034362793
    6. '_' → logprob: -10.378993034362793
    7. '[i' → logprob: -11.003993034362793
    8. '```' → logprob: -11.128993034362793
    9. '-b' → logprob: -11.878993034362793
    10. '_j' → logprob: -12.003993034362793

Token 353: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0790875181555748
    2. '<=' → logprob: -2.579087495803833
    3. ' >=' → logprob: -10.204087257385254
    4. '[' → logprob: -10.829087257385254
    5. '   ' → logprob: -10.829087257385254
    6. ' ≤' → logprob: -11.079087257385254
    7. ']<=' → logprob: -11.204087257385254
    8. ' ' → logprob: -11.329087257385254
    9. ')<=' → logprob: -11.329087257385254
    10. '[]' → logprob: -11.829087257385254

Token 354: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.39849013090133667
    2. ' c' → logprob: -1.1484901905059814
    3. 'cost' → logprob: -5.648489952087402
    4. 'self' → logprob: -5.898489952087402
    5. '0' → logprob: -6.148489952087402
    6. ' cost' → logprob: -6.773489952087402
    7. ' self' → logprob: -7.148489952087402
    8. 'x' → logprob: -7.648489952087402
    9. ' x' → logprob: -8.523489952087402
    10. ' ' → logprob: -8.773489952087402

Token 355: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28731682896614075
    2. '       ' → logprob: -1.5373167991638184
    3. ',' → logprob: -3.9123167991638184
    4. '<|end|>' → logprob: -5.662316799163818
    5. 'dist' → logprob: -5.912316799163818
    6. '<|end|>' → logprob: -5.912316799163818
    7. '        
' → logprob: -6.287316799163818
    8. ',
' → logprob: -6.537316799163818
    9. ' for' → logprob: -7.162316799163818
    10. 's' → logprob: -7.912316799163818

Token 356: ' rearr' (ID: 98785)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.901716947555542
    2. 'dist' → logprob: -0.901716947555542
    3. 'for' → logprob: -2.401716947555542
    4. ' dist' → logprob: -2.401716947555542
    5. '       ' → logprob: -5.151717185974121
    6. '#' → logprob: -7.651717185974121
    7. ' #' → logprob: -8.651717185974121
    8. 'def' → logprob: -9.151717185974121
    9. ' distances' → logprob: -9.151717185974121
    10. '   ' → logprob: -9.401717185974121

Token 357: 'anged' (ID: 5717)
  Prédit: 'anged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anged' → logprob: -0.021730903536081314
    2. 'anging' → logprob: -4.146730899810791
    3. 'ange' → logprob: -5.396730899810791
    4. '=' → logprob: -7.646730899810791
    5. '   ' → logprob: -8.64673137664795
    6. '```' → logprob: -9.14673137664795
    7. 'angement' → logprob: -9.27173137664795
    8. ' =' → logprob: -9.77173137664795
    9. '       ' → logprob: -10.14673137664795
    10. '           ' → logprob: -11.27173137664795

Token 358: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.6032238602638245
    2. 'dist' → logprob: -2.1032238006591797
    3. ' for' → logprob: -2.3532238006591797
    4. ' to' → logprob: -2.6032238006591797
    5. ' dist' → logprob: -3.3532238006591797
    6. '=' → logprob: -3.4782238006591797
    7. ' =' → logprob: -3.6032238006591797
    8. ',' → logprob: -3.9782238006591797
    9. '       ' → logprob: -4.10322380065918
    10. ':' → logprob: -4.85322380065918

Token 359: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.528773844242096
    2. ' x' → logprob: -0.903773844242096
    3. ' dist' → logprob: -5.778773784637451
    4. 'dist' → logprob: -6.153773784637451
    5. ' graph' → logprob: -8.90377426147461
    6. 'graph' → logprob: -9.52877426147461
    7. 'self' → logprob: -9.52877426147461
    8. ' self' → logprob: -10.40377426147461
    9. '    ' → logprob: -10.40377426147461
    10. '   ' → logprob: -11.27877426147461

Token 360: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.16685262322425842
    2. '_a' → logprob: -1.916852593421936
    3. '_i' → logprob: -5.2918524742126465
    4. 'a' → logprob: -7.7918524742126465
    5. '[i' → logprob: -8.666852951049805
    6. '[_' → logprob: -8.791852951049805
    7. '[b' → logprob: -9.041852951049805
    8. '[a' → logprob: -9.166852951049805
    9. 'b' → logprob: -9.166852951049805
    10. '_' → logprob: -9.291852951049805

Token 361: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.295758455991745
    2. ' -' → logprob: -1.6707584857940674
    3. '<=' → logprob: -2.7957584857940674
    4. '-' → logprob: -5.295758247375488
    5. ' =' → logprob: -7.670758247375488
    6. '   ' → logprob: -7.920758247375488
    7. ' >=' → logprob: -8.170758247375488
    8. '=' → logprob: -8.170758247375488
    9. ' ≤' → logprob: -8.795758247375488
    10. ' ' → logprob: -9.670758247375488

Token 362: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014843535609543324
    2. ' x' → logprob: -4.264843463897705
    3. 'dist' → logprob: -7.389843463897705
    4. ' dist' → logprob: -9.764843940734863
    5. '(x' → logprob: -14.014843940734863
    6. '(dist' → logprob: -14.514843940734863
    7. ' ' → logprob: -14.639843940734863
    8. '```' → logprob: -14.889843940734863
    9. '   ' → logprob: -15.014843940734863
    10. '[' → logprob: -15.014843940734863

Token 363: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0021929678041487932
    2. 'b' → logprob: -7.002192974090576
    3. '_i' → logprob: -7.252192974090576
    4. 'dist' → logprob: -7.627192974090576
    5. '_dist' → logprob: -10.252192497253418
    6. '[b' → logprob: -11.377192497253418
    7. 'i' → logprob: -11.627192497253418
    8. '[' → logprob: -12.252192497253418
    9. '```' → logprob: -12.502192497253418
    10. '_a' → logprob: -13.127192497253418

Token 364: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.038114238530397415
    2. '+' → logprob: -3.288114309310913
    3. ',' → logprob: -11.163114547729492
    4. '[' → logprob: -11.288114547729492
    5. '   ' → logprob: -11.788114547729492
    6. '       ' → logprob: -11.788114547729492
    7. ')' → logprob: -12.413114547729492
    8. '+c' → logprob: -12.538114547729492
    9. '    ' → logprob: -13.038114547729492
    10. '```' → logprob: -13.163114547729492

Token 365: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02522517740726471
    2. ' c' → logprob: -3.7752251625061035
    3. 'cost' → logprob: -6.2752251625061035
    4. ' cost' → logprob: -9.275225639343262
    5. ' ' → logprob: -15.150225639343262
    6. '	c' → logprob: -15.150225639343262
    7. '   ' → logprob: -15.275225639343262
    8. '```' → logprob: -15.400225639343262
    9. '
' → logprob: -15.650225639343262
    10. ' ' → logprob: -16.025224685668945

Token 366: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5350308418273926
    2. '
' → logprob: -1.0350308418273926
    3. 'dist' → logprob: -3.2850308418273926
    4. ',' → logprob: -4.660030841827393
    5. '        
' → logprob: -5.035030841827393
    6. '<|end|>' → logprob: -6.535030841827393
    7. ' for' → logprob: -7.035030841827393
    8. ',
' → logprob: -7.160030841827393
    9. ' dist' → logprob: -7.410030841827393
    10. '<|end|>' → logprob: -8.160030364990234

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26718243956565857
    2. ' for' → logprob: -1.642182469367981
    3. 'dist' → logprob: -3.8921823501586914
    4. 'for' → logprob: -4.267182350158691
    5. ' dist' → logprob: -5.517182350158691
    6. '   ' → logprob: -7.767182350158691
    7. ' and' → logprob: -8.017182350158691
    8. '        
' → logprob: -8.267182350158691
    9. '	' → logprob: -8.767182350158691
    10. '0' → logprob: -9.267182350158691

Token 368: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26695945858955383
    2. 'for' → logprob: -1.6419594287872314
    3. '       ' → logprob: -3.7669594287872314
    4. 'dist' → logprob: -4.2669596672058105
    5. ' dist' → logprob: -6.5169596672058105
    6. '#' (adapté à ' #') → logprob: -7.1419596672058105
    7. ' and' → logprob: -8.141959190368652
    8. '0' → logprob: -8.141959190368652
    9. ' #' → logprob: -9.141959190368652
    10. 'and' → logprob: -9.266959190368652

Token 369: ' treating' (ID: 39212)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5359427332878113
    2. ' for' → logprob: -1.035942792892456
    3. 'dist' → logprob: -2.910942792892456
    4. ' dist' → logprob: -5.660942554473877
    5. '       ' → logprob: -6.660942554473877
    6. '#' → logprob: -7.785942554473877
    7. '   ' → logprob: -9.285943031311035
    8. '
' → logprob: -9.410943031311035
    9. '        
' → logprob: -10.160943031311035
    10. ' #' → logprob: -10.410943031311035

Token 370: ' x' (ID: 1215)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1707310676574707
    2. ' all' → logprob: -2.4207310676574707
    3. ' dist' → logprob: -3.5457310676574707
    4. 'all' → logprob: -4.045731067657471
    5. 'x' → logprob: -5.045731067657471
    6. 'the' → logprob: -5.670731067657471
    7. ' the' → logprob: -5.920731067657471
    8. ' x' → logprob: -7.045731067657471
    9. 'self' → logprob: -7.170731067657471
    10. '0' → logprob: -7.420731067657471

Token 371: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.07591995596885681
    2. '_i' → logprob: -3.2009198665618896
    3. '_' → logprob: -3.5759198665618896
    4. '_a' → logprob: -6.450920104980469
    5. ' =' → logprob: -7.325920104980469
    6. 'b' → logprob: -7.325920104980469
    7. '_j' → logprob: -7.825920104980469
    8. '=' → logprob: -8.075920104980469
    9. 'i' → logprob: -8.950920104980469
    10. '_=' → logprob: -9.450920104980469

Token 372: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.24269425868988037
    2. ' =' → logprob: -1.6176942586898804
    3. '=' → logprob: -4.24269437789917
    4. ' ' → logprob: -6.74269437789917
    5. ')' → logprob: -7.49269437789917
    6. 'as' → logprob: -8.367693901062012
    7. '   ' → logprob: -8.617693901062012
    8. ' for' → logprob: -9.242693901062012
    9. ' dist' → logprob: -9.367693901062012
    10. '[' → logprob: -9.742693901062012

Token 373: ' base' (ID: 3611)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2909254729747772
    2. ' ' → logprob: -2.2909255027770996
    3. 'the' → logprob: -3.7909255027770996
    4. 'a' → logprob: -3.9159255027770996
    5. 'source' → logprob: -3.9159255027770996
    6. 'upper' → logprob: -4.2909255027771
    7. ' zero' → logprob: -4.2909255027771
    8. 'zero' → logprob: -4.6659255027771
    9. ' source' → logprob: -4.7909255027771
    10. ' the' → logprob: -5.4159255027771

Token 374: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07494981586933136
    2. '[' → logprob: -3.9499497413635254
    3. ',' → logprob: -4.074949741363525
    4. '       ' → logprob: -4.324949741363525
    5. '=' → logprob: -4.449949741363525
    6. ' for' → logprob: -5.949949741363525
    7. 'dist' → logprob: -5.949949741363525
    8. '
' → logprob: -6.699949741363525
    9. ' and' → logprob: -7.199949741363525
    10. 's' → logprob: -7.324949741363525

Token 375: ' x' (ID: 1215)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20968598127365112
    2. ' dist' → logprob: -2.584686040878296
    3. ' for' → logprob: -2.709686040878296
    4. 'for' → logprob: -3.334686040878296
    5. 'x' → logprob: -5.334685802459717
    6. '0' → logprob: -6.459685802459717
    7. '#' → logprob: -6.459685802459717
    8. ' x' → logprob: -6.834685802459717
    9. ' and' → logprob: -7.334685802459717
    10. '       ' → logprob: -7.834685802459717

Token 376: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.20838208496570587
    2. '_i' → logprob: -1.9583821296691895
    3. '_b' → logprob: -3.4583821296691895
    4. 'a' → logprob: -5.4583821296691895
    5. ' =' → logprob: -5.7083821296691895
    6. 'dist' → logprob: -6.2083821296691895
    7. '_' → logprob: -6.3333821296691895
    8. '=' → logprob: -6.9583821296691895
    9. 'i' → logprob: -7.3333821296691895
    10. '_dist' → logprob: -7.4583821296691895

Token 377: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13091552257537842
    2. '=' → logprob: -2.255915641784668
    3. ' <=' → logprob: -4.630915641784668
    4. ' can' → logprob: -5.755915641784668
    5. '<=' → logprob: -6.380915641784668
    6. ' ≤' → logprob: -7.255915641784668
    7. ' should' → logprob: -7.380915641784668
    8. ' is' → logprob: -7.755915641784668
    9. '[' → logprob: -8.630915641784668
    10. '   ' → logprob: -8.630915641784668

Token 378: ' upper' (ID: 13057)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.2695860862731934
    2. ' bounded' → logprob: -1.8945860862731934
    3. ' limited' → logprob: -2.2695860862731934
    4. 'max' → logprob: -2.2695860862731934
    5. 'at' → logprob: -2.6445860862731934
    6. ' constrained' → logprob: -3.0195860862731934
    7. 'bounded' → logprob: -3.1445860862731934
    8. ' dist' → logprob: -3.2695860862731934
    9. 'dist' → logprob: -3.3945860862731934
    10. ' upper' → logprob: -3.5195860862731934

Token 379: ' bounded' (ID: 136812)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.2431553155183792
    2. ' bound' → logprob: -1.6181553602218628
    3. 'bound' → logprob: -4.743155479431152
    4. '       ' → logprob: -4.993155479431152
    5. '_' → logprob: -7.118155479431152
    6. ' _' → logprob: -7.368155479431152
    7. '_bounds' → logprob: -7.993155479431152
    8. ' bounds' → logprob: -9.618155479431152
    9. ' =' → logprob: -9.868155479431152
    10. '-bound' → logprob: -10.368155479431152

Token 380: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22045405209064484
    2. '[' → logprob: -2.095453977584839
    3. '       ' → logprob: -3.095453977584839
    4. '=' → logprob: -4.345454216003418
    5. 'dist' → logprob: -5.595454216003418
    6. '
' → logprob: -5.720454216003418
    7. ',' → logprob: -5.720454216003418
    8. ' for' → logprob: -5.845454216003418
    9. '   ' → logprob: -6.970454216003418
    10. '0' → logprob: -7.970454216003418

Token 381: ' x' (ID: 1215)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.45355337858200073
    2. ' dist' → logprob: -1.0785534381866455
    3. 'x' → logprob: -3.8285534381866455
    4. ' x' → logprob: -5.953553199768066
    5. 'max' → logprob: -10.328553199768066
    6. '	dist' → logprob: -11.078553199768066
    7. 'the' → logprob: -11.203553199768066
    8. ' max' → logprob: -11.203553199768066
    9. ' ' → logprob: -11.328553199768066
    10. ' min' → logprob: -11.328553199768066

Token 382: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00025228000595234334
    2. '_a' → logprob: -8.500252723693848
    3. 'b' → logprob: -10.500252723693848
    4. '_i' → logprob: -12.375252723693848
    5. '[b' → logprob: -12.375252723693848
    6. 'a' → logprob: -12.625252723693848
    7. '[' → logprob: -13.687752723693848
    8. '_c' → logprob: -13.750252723693848
    9. '[i' → logprob: -13.812752723693848
    10. '_' → logprob: -14.125252723693848

Token 383: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43082886934280396
    2. ' =' → logprob: -1.1808288097381592
    3. '       ' → logprob: -3.555828809738159
    4. ',' → logprob: -5.305829048156738
    5. '=' → logprob: -5.430829048156738
    6. '
' → logprob: -6.430829048156738
    7. ' +' → logprob: -7.180829048156738
    8. ' and' → logprob: -7.680829048156738
    9. '   ' → logprob: -8.055829048156738
    10. ' [' → logprob: -8.180829048156738

Token 384: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.39404311776161194
    2. ' c' → logprob: -1.1440430879592896
    3. 'cost' → logprob: -5.51904296875
    4. ' cost' → logprob: -5.76904296875
    5. ' ' → logprob: -12.39404296875
    6. ' ' → logprob: -13.14404296875
    7. '
' → logprob: -13.26904296875
    8. '   ' → logprob: -13.39404296875
    9. '	c' → logprob: -13.89404296875
    10. '```' → logprob: -14.45654296875

Token 385: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11832126975059509
    2. 'dist' → logprob: -2.993321180343628
    3. '
' → logprob: -3.118321180343628
    4. ' for' → logprob: -5.118321418762207
    5. ',' → logprob: -5.368321418762207
    6. '        
' → logprob: -6.118321418762207
    7. '<|end|>' → logprob: -6.743321418762207
    8. ' dist' → logprob: -7.118321418762207
    9. 'for' → logprob: -7.868321418762207
    10. '.' → logprob: -8.118321418762207

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3677123785018921
    2. ' for' → logprob: -1.617712378501892
    3. 'dist' → logprob: -2.8677124977111816
    4. ' dist' → logprob: -3.4927124977111816
    5. 'for' → logprob: -4.617712497711182
    6. '
' → logprob: -5.617712497711182
    7. '        
' → logprob: -6.367712497711182
    8. '<|end|>' → logprob: -6.867712497711182
    9. '   ' → logprob: -7.117712497711182
    10. '	' → logprob: -7.367712497711182

Token 387: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9160569906234741
    2. 'dist' (adapté à ' dist') → logprob: -0.9160569906234741
    3. ' for' → logprob: -1.9160569906234741
    4. '       ' → logprob: -3.1660571098327637
    5. ' dist' → logprob: -4.666057109832764
    6. 'import' → logprob: -8.416056632995605
    7. '   ' → logprob: -8.791056632995605
    8. 'def' → logprob: -8.916056632995605
    9. '#' → logprob: -9.041056632995605
    10. 'return' → logprob: -9.166056632995605

Token 388: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3787720799446106
    2. ' =' → logprob: -1.6287720203399658
    3. '[' → logprob: -2.128772020339966
    4. '=[' → logprob: -9.503771781921387
    5. '[:]' → logprob: -10.003771781921387
    6. ' =[' → logprob: -12.128771781921387
    7. '[-' → logprob: -12.378771781921387
    8. '0' → logprob: -12.878771781921387
    9. '=
' → logprob: -13.003771781921387
    10. '	' → logprob: -13.253771781921387

Token 389: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004370186477899551
    2. '[self' → logprob: -5.504370212554932
    3. '[t' → logprob: -9.129369735717773
    4. '[-' → logprob: -9.379369735717773
    5. ' [' → logprob: -9.879369735717773
    6. 'self' → logprob: -10.504369735717773
    7. '[m' → logprob: -12.129369735717773
    8. '[list' → logprob: -12.629369735717773
    9. '[len' → logprob: -12.754369735717773
    10. '[max' → logprob: -13.379369735717773

Token 390: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0001831565605243668
    2. 'self' → logprob: -9.37518310546875
    3. '0' → logprob: -10.00018310546875
    4. '1' → logprob: -11.00018310546875
    5. '10' → logprob: -11.75018310546875
    6. '100' → logprob: -12.25018310546875
    7. 'max' → logprob: -12.37518310546875
    8. ' float' → logprob: -12.37518310546875
    9. 't' → logprob: -12.87518310546875
    10. '(float' → logprob: -13.12518310546875

Token 391: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.05049385502934456
    2. ''in' → logprob: -3.0504939556121826
    3. ''' → logprob: -6.6754937171936035
    4. 'inf' → logprob: -8.675494194030762
    5. ''s' → logprob: -8.800494194030762
    6. ''op' → logprob: -10.675494194030762
    7. ''user' → logprob: -10.675494194030762
    8. ''ex' → logprob: -10.800494194030762
    9. ''x' → logprob: -10.925494194030762
    10. '   ' → logprob: -10.925494194030762

Token 392: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.6240566083070007e-06
    2. ''' → logprob: -14.125001907348633
    3. ' inf' → logprob: -16.000001907348633
    4. '100' → logprob: -16.000001907348633
    5. '50' → logprob: -16.125001907348633
    6. '1' → logprob: -16.500001907348633
    7. 'Inf' → logprob: -16.875001907348633
    8. '6' → logprob: -16.875001907348633
    9. '36' → logprob: -17.000001907348633
    10. '32' → logprob: -17.000001907348633

Token 393: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5321531295776367
    2. ')' → logprob: -1.6571531295776367
    3. '')]' → logprob: -1.6571531295776367
    4. ']' → logprob: -3.5321531295776367
    5. '')' → logprob: -6.907153129577637
    6. '']' → logprob: -7.157153129577637
    7. ' )' → logprob: -9.532153129577637
    8. '")]' → logprob: -9.657153129577637
    9. '}]' → logprob: -9.782153129577637
    10. ' ]' → logprob: -11.032153129577637

Token 394: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015110508538782597
    2. ' self' → logprob: -6.501511096954346
    3. '(self' → logprob: -11.751510620117188
    4. '       ' → logprob: -14.876510620117188
    5. '   ' → logprob: -16.001510620117188
    6. '<|end|>' → logprob: -16.251510620117188
    7. '[self' → logprob: -17.001510620117188
    8. '
' → logprob: -17.126510620117188
    9. '	self' → logprob: -17.376510620117188
    10. '(' → logprob: -18.126510620117188

Token 396: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.018152514472603798
    2. 'N' → logprob: -4.018152713775635
    3. '_N' → logprob: -13.643152236938477
    4. '	N' → logprob: -14.393152236938477
    5. 'user' → logprob: -14.893152236938477
    6. ' N' → logprob: -16.143152236938477
    7. 'self' → logprob: -16.518152236938477
    8. '.M' → logprob: -16.768152236938477
    9. '   ' → logprob: -16.768152236938477
    10. '(N' → logprob: -16.893152236938477

Token 397: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7176324129104614
    2. '<|end|>' → logprob: -0.7176324129104614
    3. '       ' → logprob: -4.217632293701172
    4. ' for' → logprob: -5.467632293701172
    5. '<|end|>' → logprob: -6.342632293701172
    6. 'dist' → logprob: -7.092632293701172
    7. ' 
' → logprob: -7.467632293701172
    8. 'for' → logprob: -7.467632293701172
    9. '        
' → logprob: -8.467632293701172
    10. ')' → logprob: -8.467632293701172

Token 398: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16073371469974518
    2. '<|end|>' → logprob: -2.410733699798584
    3. 'dist' → logprob: -3.285733699798584
    4. '       ' → logprob: -4.535733699798584
    5. ' for' → logprob: -5.910733699798584
    6. '<|end|>' → logprob: -6.535733699798584
    7. 'for' → logprob: -6.660733699798584
    8. '        
' → logprob: -6.910733699798584
    9. ' 
' → logprob: -6.910733699798584
    10. '  
' → logprob: -7.535733699798584

Token 399: ' Store' (ID: 12600)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20483623445034027
    2. 'for' → logprob: -2.329836130142212
    3. 'dist' → logprob: -3.079836130142212
    4. ' for' → logprob: -3.329836130142212
    5. ' ' → logprob: -6.079836368560791
    6. '[' → logprob: -6.329836368560791
    7. '       ' → logprob: -6.954836368560791
    8. '
' → logprob: -7.954836368560791
    9. ' dist' → logprob: -8.704835891723633
    10. '        
' → logprob: -9.079835891723633

Token 400: ' lower' (ID: 6931)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09056925028562546
    2. ' ' → logprob: -2.465569257736206
    3. 'max' → logprob: -7.215569019317627
    4. 'dist' → logprob: -7.840569019317627
    5. ' max' → logprob: -8.590569496154785
    6. 'maximum' → logprob: -9.590569496154785
    7. ' maximum' → logprob: -10.090569496154785
    8. ' the' → logprob: -10.715569496154785
    9. ' dist' → logprob: -10.715569496154785
    10. 'the' → logprob: -11.090569496154785

Token 401: ' bounds' (ID: 30227)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.32111865282058716
    2. 'bound' → logprob: -1.9461185932159424
    3. '_bounds' → logprob: -2.6961185932159424
    4. ' bound' → logprob: -3.5711185932159424
    5. 'bounds' → logprob: -4.1961188316345215
    6. ' bounds' → logprob: -4.4461188316345215
    7. '_' → logprob: -4.6961188316345215
    8. 'dist' → logprob: -9.071118354797363
    9. '-bound' → logprob: -9.321118354797363
    10. '_dist' → logprob: -9.946118354797363

Token 402: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3494584262371063
    2. 'dist' → logprob: -1.4744584560394287
    3. '       ' → logprob: -3.8494584560394287
    4. '[' → logprob: -3.9744584560394287
    5. '        
' → logprob: -5.09945821762085
    6. '<|end|>' → logprob: -5.09945821762085
    7. ' 
' → logprob: -5.84945821762085
    8. '0' → logprob: -5.97445821762085
    9. ' dist' → logprob: -6.34945821762085
    10. ' for' → logprob: -6.47445821762085

Token 403: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7016981244087219
    2. 'usage' → logprob: -1.2016980648040771
    3. 'dist' → logprob: -1.9516980648040771
    4. ' usage' → logprob: -4.076698303222656
    5. 'self' → logprob: -4.201698303222656
    6. 'i' → logprob: -5.076698303222656
    7. 'machines' → logprob: -5.326698303222656
    8. 'each' → logprob: -5.451698303222656
    9. 'max' → logprob: -5.576698303222656
    10. 'the' → logprob: -6.326698303222656

Token 404: '_i' (ID: 10853)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5827163457870483
    2. '
' → logprob: -1.2077163457870483
    3. '<|end|>' → logprob: -2.707716464996338
    4. ' =' → logprob: -3.457716464996338
    5. 's' → logprob: -4.707716464996338
    6. 'dist' → logprob: -4.832716464996338
    7. '0' → logprob: -4.957716464996338
    8. ')' → logprob: -5.082716464996338
    9. ',' → logprob: -5.957716464996338
    10. '_' → logprob: -6.457716464996338

Token 405: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43155980110168457
    2. 'dist' → logprob: -1.6815598011016846
    3. '<|end|>' → logprob: -1.9315598011016846
    4. '<|end|>' → logprob: -5.0565595626831055
    5. '[' → logprob: -5.4315595626831055
    6. '       ' → logprob: -5.4315595626831055
    7. ' dist' → logprob: -7.0565595626831055
    8. '        
' → logprob: -7.5565595626831055
    9. ' for' → logprob: -7.8065595626831055
    10. ',' → logprob: -8.056559562683105

Token 406: 'max' (ID: 3228)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -1.689479947090149
    2. ' usage' → logprob: -1.814479947090149
    3. 'max' → logprob: -1.939479947090149
    4. 'used' → logprob: -2.3144798278808594
    5. ')' → logprob: -3.1894798278808594
    6. 'i' → logprob: -3.1894798278808594
    7. ' used' → logprob: -3.3144798278808594
    8. 'maximum' → logprob: -3.5644798278808594
    9. 'x' → logprob: -3.6894798278808594
    10. ' now' → logprob: -3.9394798278808594

Token 407: 'im' (ID: 321)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5855864882469177
    2. ')' → logprob: -1.0855865478515625
    3. ' usage' → logprob: -3.5855865478515625
    4. 'imum' → logprob: -3.8355865478515625
    5. 'imize' → logprob: -4.0855865478515625
    6. 'imal' → logprob: -4.7105865478515625
    7. ' values' → logprob: -4.9605865478515625
    8. '_)' → logprob: -5.2105865478515625
    9. '_usage' → logprob: -6.2105865478515625
    10. ' possible' → logprob: -6.2105865478515625

Token 408: 'izing' (ID: 6396)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0850372314453125
    2. 'izing' → logprob: -3.2100372314453125
    3. 'ize' → logprob: -3.7100372314453125
    4. 'ized' → logprob: -5.3350372314453125
    5. 'al' → logprob: -5.4600372314453125
    6. 'ze' → logprob: -6.2100372314453125
    7. '```' → logprob: -7.4600372314453125
    8. '   ' → logprob: -7.5850372314453125
    9. 'zing' → logprob: -7.9600372314453125
    10. 'z' → logprob: -7.9600372314453125

Token 409: ' usage' (ID: 16622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0461437702178955
    2. ' usage' → logprob: -1.1711437702178955
    3. ' )' → logprob: -1.2961437702178955
    4. ' values' → logprob: -3.4211437702178955
    5. ' the' → logprob: -5.046143531799316
    6. 'usage' → logprob: -5.171143531799316
    7. ' distances' → logprob: -5.296143531799316
    8. ' possible' → logprob: -5.921143531799316
    9. 'x' → logprob: -6.296143531799316
    10. ' usages' → logprob: -6.796143531799316

Token 410: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06653009355068207
    2. ' )' → logprob: -2.9415299892425537
    3. ')
' → logprob: -4.941530227661133
    4. '
' → logprob: -6.191530227661133
    5. ' )
' → logprob: -6.441530227661133
    6. '       ' → logprob: -7.941530227661133
    7. ']' → logprob: -8.941530227661133
    8. '[' → logprob: -9.191530227661133
    9. ' ]' → logprob: -10.191530227661133
    10. '<|end|>' → logprob: -10.316530227661133

Token 411: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8856627941131592
    2. '
' → logprob: -1.0106627941131592
    3. ' for' → logprob: -2.260662794113159
    4. '       ' → logprob: -2.635662794113159
    5. ' dist' → logprob: -4.135663032531738
    6. 'for' → logprob: -4.260663032531738
    7. '        
' → logprob: -5.135663032531738
    8. '<|end|>' → logprob: -5.385663032531738
    9. ' 
' → logprob: -6.260663032531738
    10. '	dist' → logprob: -7.135663032531738

Token 412: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23849965631961823
    2. ' for' → logprob: -1.863499641418457
    3. 'dist' → logprob: -2.988499641418457
    4. '       ' → logprob: -5.988499641418457
    5. '0' → logprob: -6.113499641418457
    6. 'queue' → logprob: -6.988499641418457
    7. ' dist' → logprob: -8.988499641418457
    8. 'self' → logprob: -9.238499641418457
    9. '        
' → logprob: -9.238499641418457
    10. '[' → logprob: -9.363499641418457

Token 413: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006880891975015402
    2. 'queue' → logprob: -5.506880760192871
    3. ' for' → logprob: -7.006880760192871
    4. 'import' → logprob: -7.006880760192871
    5. 'dist' → logprob: -7.256880760192871
    6. 'from' → logprob: -9.506880760192871
    7. 'changed' → logprob: -9.881880760192871
    8. '   ' → logprob: -10.006880760192871
    9. '       ' → logprob: -10.006880760192871
    10. '0' → logprob: -11.381880760192871

Token 414: ' need' (ID: 1309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45339468121528625
    2. 'for' → logprob: -1.0783946514129639
    3. 'dist' → logprob: -5.203394889831543
    4. ' =' → logprob: -5.328394889831543
    5. 'def' → logprob: -5.453394889831543
    6. ' def' → logprob: -6.453394889831543
    7. ' will' → logprob: -6.703394889831543
    8. '=' → logprob: -6.953394889831543
    9. ' ' → logprob: -6.953394889831543
    10. ' need' → logprob: -7.078394889831543

Token 415: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06125135347247124
    2. 'to' → logprob: -3.061251401901245
    3. ' a' → logprob: -4.936251163482666
    4. 'dist' → logprob: -5.811251163482666
    5. ' for' → logprob: -7.186251163482666
    6. 'a' → logprob: -7.186251163482666
    7. '0' → logprob: -8.936251640319824
    8. ' ' → logprob: -9.061251640319824
    9. 'for' → logprob: -9.061251640319824
    10. 'd' → logprob: -9.311251640319824

Token 416: ' find' (ID: 1646)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2748394310474396
    2. ' ' → logprob: -2.149839401245117
    3. 'max' → logprob: -3.524839401245117
    4. 'dist' → logprob: -3.649839401245117
    5. ' max' → logprob: -4.024839401245117
    6. ' add' → logprob: -4.149839401245117
    7. ' initialize' → logprob: -4.524839401245117
    8. '[' → logprob: -5.399839401245117
    9. 'initialize' → logprob: -5.649839401245117
    10. '   ' → logprob: -6.274839401245117

Token 417: ' maximal' (ID: 65414)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5227333903312683
    2. 'a' → logprob: -1.397733449935913
    3. 'dist' → logprob: -2.772733449935913
    4. ' an' → logprob: -3.897733449935913
    5. ' feasible' → logprob: -4.147733211517334
    6. ' ' → logprob: -5.022733211517334
    7. 'max' → logprob: -5.022733211517334
    8. ' values' → logprob: -5.147733211517334
    9. ' max' → logprob: -5.147733211517334
    10. '0' → logprob: -5.147733211517334

Token 418: ' x' (ID: 1215)
  Prédit: ' feasible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' feasible' → logprob: -1.3732961416244507
    2. 'dist' → logprob: -1.6232961416244507
    3. ' values' → logprob: -1.7482961416244507
    4. ' distances' → logprob: -1.7482961416244507
    5. 'values' → logprob: -2.8732962608337402
    6. 'usage' → logprob: -2.9982962608337402
    7. ' usage' → logprob: -3.3732962608337402
    8. 'x' → logprob: -4.12329626083374
    9. ' x' → logprob: -4.49829626083374
    10. 'fe' → logprob: -4.99829626083374

Token 419: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.1206137090921402
    2. '_' → logprob: -2.2456138134002686
    3. 'i' → logprob: -5.4956135749816895
    4. 's' → logprob: -7.3706135749816895
    5. '[' → logprob: -7.6206135749816895
    6. '<|end|>' → logprob: -8.120614051818848
    7. '[i' → logprob: -8.370614051818848
    8. ' ' → logprob: -8.370614051818848
    9. '  ' → logprob: -8.870614051818848
    10. '   ' → logprob: -9.245614051818848

Token 420: ' satisfying' (ID: 52718)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2710120677947998
    2. ' for' → logprob: -2.5210120677948
    3. 'dist' → logprob: -3.2710120677948
    4. ' =' → logprob: -3.3960120677948
    5. '<|end|>' → logprob: -4.021012306213379
    6. '0' → logprob: -4.271012306213379
    7. 's' → logprob: -4.271012306213379
    8. ',' → logprob: -4.646012306213379
    9. '[' → logprob: -4.896012306213379
    10. 'for' → logprob: -5.146012306213379

Token 421: ' x' (ID: 1215)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5557906031608582
    2. 'all' → logprob: -1.055790662765503
    3. 'constraints' → logprob: -3.430790662765503
    4. 'the' → logprob: -3.680790662765503
    5. ' the' → logprob: -4.680790424346924
    6. ' constraints' → logprob: -4.805790424346924
    7. 'self' → logprob: -6.805790424346924
    8. 'dist' → logprob: -7.430790424346924
    9. 'for' → logprob: -7.930790424346924
    10. ' ' → logprob: -8.180790901184082

Token 422: '_a' (ID: 10852)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.07953470945358276
    2. '_b' → logprob: -2.9545347690582275
    3. '<=' → logprob: -5.079534530639648
    4. '_' → logprob: -5.329534530639648
    5. '_a' → logprob: -5.454534530639648
    6. ' <=' → logprob: -6.329534530639648
    7. '_j' → logprob: -6.454534530639648
    8. '>=' → logprob: -6.704534530639648
    9. ' constraints' → logprob: -6.954534530639648
    10. '   ' → logprob: -7.454534530639648

Token 423: ' -' (ID: 533)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4450933039188385
    2. ' -' → logprob: -1.0700932741165161
    3. ' >=' → logprob: -4.570093154907227
    4. '<=' → logprob: -5.320093154907227
    5. '-' → logprob: -7.570093154907227
    6. '>=' → logprob: -8.445093154907227
    7. ' ' → logprob: -9.070093154907227
    8. '   ' → logprob: -9.070093154907227
    9. '  ' → logprob: -10.945093154907227
    10. ' ≤' → logprob: -11.070093154907227

Token 424: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020543519407510757
    2. ' x' → logprob: -3.8955435752868652
    3. '
' → logprob: -15.020543098449707
    4. '<|end|>' → logprob: -15.145543098449707
    5. '_x' → logprob: -15.520543098449707
    6. '   ' → logprob: -15.645543098449707
    7. ' ' → logprob: -15.895543098449707
    8. '       ' → logprob: -16.020544052124023
    9. '	x' → logprob: -16.270544052124023
    10. '```' → logprob: -16.395544052124023

Token 425: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.039501551538705826
    2. '_i' → logprob: -3.289501667022705
    3. 'b' → logprob: -7.039501667022705
    4. '_a' → logprob: -8.164501190185547
    5. 'i' → logprob: -8.539501190185547
    6. '_' → logprob: -10.039501190185547
    7. '[i' → logprob: -11.164501190185547
    8. ' _' → logprob: -11.914501190185547
    9. '[b' → logprob: -12.539501190185547
    10. '-b' → logprob: -12.664501190185547

Token 426: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.05490913987159729
    2. '<=' → logprob: -2.9299092292785645
    3. ' ≤' → logprob: -12.054908752441406
    4. ')<=' → logprob: -12.429908752441406
    5. ']<=' → logprob: -12.554908752441406
    6. '[' → logprob: -12.554908752441406
    7. ' ' → logprob: -13.304908752441406
    8. ' <=",' → logprob: -13.304908752441406
    9. '   ' → logprob: -13.554908752441406
    10. ' >=' → logprob: -14.054908752441406

Token 427: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11337239295244217
    2. ' c' → logprob: -2.238372325897217
    3. '0' → logprob: -7.863372325897217
    4. ' ' → logprob: -10.113372802734375
    5. 'self' → logprob: -10.238372802734375
    6. 'cost' → logprob: -10.613372802734375
    7. 'constraint' → logprob: -11.613372802734375
    8. ' self' → logprob: -11.613372802734375
    9. ' constraints' → logprob: -12.113372802734375
    10. 'constraints' → logprob: -12.238372802734375

Token 428: ' thus' (ID: 13972)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.610491931438446
    2. 'dist' → logprob: -1.3604919910430908
    3. ' and' → logprob: -2.735491991043091
    4. ',' → logprob: -3.610491991043091
    5. '
' → logprob: -3.610491991043091
    6. 'for' → logprob: -3.735491991043091
    7. 's' → logprob: -4.360491752624512
    8. '0' → logprob: -4.485491752624512
    9. ' dist' → logprob: -4.485491752624512
    10. ' ,' → logprob: -4.860491752624512

Token 429: ' x' (ID: 1215)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9848122596740723
    2. ' dist' → logprob: -1.4848122596740723
    3. ' all' → logprob: -1.9848122596740723
    4. 'x' → logprob: -2.7348122596740723
    5. ' for' → logprob: -2.8598122596740723
    6. ' x' → logprob: -3.3598122596740723
    7. 'for' → logprob: -4.234812259674072
    8. ' we' → logprob: -4.484812259674072
    9. 'all' → logprob: -4.609812259674072
    10. ' that' → logprob: -4.609812259674072

Token 430: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.7024195194244385
    2. '_i' → logprob: -1.0774195194244385
    3. '_a' → logprob: -1.8274195194244385
    4. 'i' → logprob: -7.452419281005859
    5. ' =' → logprob: -7.577419281005859
    6. 'a' → logprob: -7.702419281005859
    7. 'b' → logprob: -7.952419281005859
    8. '_' → logprob: -8.07741928100586
    9. '[i' → logprob: -8.20241928100586
    10. '[' → logprob: -8.70241928100586

Token 431: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06913510710000992
    2. '<=' → logprob: -3.4441351890563965
    3. ' =' → logprob: -3.8191351890563965
    4. ' >=' → logprob: -4.9441351890563965
    5. '=' → logprob: -5.9441351890563965
    6. ' ≤' → logprob: -6.4441351890563965
    7. '>=' → logprob: -7.6941351890563965
    8. ' ' → logprob: -8.944134712219238
    9. 's' → logprob: -9.069134712219238
    10. 'max' → logprob: -9.069134712219238

Token 432: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0028728691395372152
    2. ' x' → logprob: -6.502872943878174
    3. 'dist' → logprob: -6.627872943878174
    4. ' dist' → logprob: -10.002872467041016
    5. '(x' → logprob: -15.127872467041016
    6. 'float' → logprob: -15.127872467041016
    7. 'graph' → logprob: -15.627872467041016
    8. 'c' → logprob: -15.752872467041016
    9. '_dist' → logprob: -15.752872467041016
    10. 'b' → logprob: -15.877872467041016

Token 433: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00415378762409091
    2. 'b' → logprob: -5.504153728485107
    3. '[b' → logprob: -10.379154205322266
    4. '_a' → logprob: -11.629154205322266
    5. ' ' → logprob: -12.129154205322266
    6. '[' → logprob: -12.379154205322266
    7. 'a' → logprob: -12.504154205322266
    8. ' b' → logprob: -12.629154205322266
    9. '_' → logprob: -13.004154205322266
    10. '_i' → logprob: -13.254154205322266

Token 434: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16475613415241241
    2. '+' → logprob: -2.4147560596466064
    3. ' and' → logprob: -3.9147560596466064
    4. ' for' → logprob: -3.9147560596466064
    5. '[' → logprob: -4.9147562980651855
    6. 'for' → logprob: -5.1647562980651855
    7. ',' → logprob: -5.7897562980651855
    8. '       ' → logprob: -6.6647562980651855
    9. 'and' → logprob: -6.9147562980651855
    10. '   ' → logprob: -7.0397562980651855

Token 435: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06342913955450058
    2. ' c' → logprob: -3.313429117202759
    3. 'cost' → logprob: -3.813429117202759
    4. ' cost' → logprob: -5.813429355621338
    5. '_cost' → logprob: -13.31342887878418
    6. '0' → logprob: -13.56342887878418
    7. ' ' → logprob: -13.68842887878418
    8. '   ' → logprob: -14.06342887878418
    9. '	c' → logprob: -14.81342887878418
    10. '_c' → logprob: -14.93842887878418

Token 436: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8910563588142395
    2. '
' → logprob: -1.6410562992095947
    3. ' for' → logprob: -2.0160562992095947
    4. '       ' → logprob: -2.0160562992095947
    5. 'for' → logprob: -2.5160562992095947
    6. ',' → logprob: -4.016056537628174
    7. '        
' → logprob: -4.766056537628174
    8. 'self' → logprob: -4.891056537628174
    9. '0' → logprob: -5.766056537628174
    10. ' and' → logprob: -5.891056537628174

Token 437: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.41826701164245605
    2. '       ' → logprob: -1.918267011642456
    3. ' for' → logprob: -2.168267011642456
    4. 'for' → logprob: -2.543267011642456
    5. ' dist' → logprob: -6.668267250061035
    6. '	dist' → logprob: -8.793267250061035
    7. '        
' → logprob: -8.918267250061035
    8. '
' → logprob: -9.293267250061035
    9. '	for' → logprob: -9.668267250061035
    10. '+' → logprob: -10.293267250061035

Token 438: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.48692014813423157
    2. 'for' → logprob: -1.1119201183319092
    3. ' for' → logprob: -2.986920118331909
    4. '       ' → logprob: -5.361920356750488
    5. ' dist' → logprob: -6.986920356750488
    6. '0' → logprob: -8.486920356750488
    7. 'queue' → logprob: -9.736920356750488
    8. '        
' → logprob: -9.986920356750488
    9. 'changed' → logprob: -10.361920356750488
    10. '#' (adapté à ' #') → logprob: -10.611920356750488

Token 439: ' Initialize' (ID: 19496)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3385635018348694
    2. 'for' → logprob: -1.3385634422302246
    3. ' for' → logprob: -4.088563442230225
    4. '       ' → logprob: -4.963563442230225
    5. ' dist' → logprob: -7.463563442230225
    6. 'queue' → logprob: -8.463563919067383
    7. 'changed' → logprob: -8.713563919067383
    8. 'import' → logprob: -10.088563919067383
    9. '0' → logprob: -10.213563919067383
    10. '        
' → logprob: -10.338563919067383

Token 440: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5402397513389587
    2. ' for' → logprob: -1.4152398109436035
    3. 'for' → logprob: -1.9152398109436035
    4. ' dist' → logprob: -3.6652398109436035
    5. '   ' → logprob: -7.2902398109436035
    6. '0' → logprob: -8.165239334106445
    7. 'queue' → logprob: -8.915239334106445
    8. ' queue' → logprob: -9.165239334106445
    9. ' ' → logprob: -9.415239334106445
    10. 'self' → logprob: -9.540239334106445

Token 441: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7010989785194397
    2. '=' → logprob: -1.076098918914795
    3. '[' → logprob: -1.826098918914795
    4. '[:]' → logprob: -7.326098918914795
    5. '=[' → logprob: -7.451098918914795
    6. '[self' → logprob: -7.826098918914795
    7. '0' → logprob: -9.451099395751953
    8. ' =[' → logprob: -10.076099395751953
    9. 's' → logprob: -10.451099395751953
    10. '[-' → logprob: -10.701099395751953

Token 442: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033751048147678375
    2. '[' → logprob: -3.7837510108947754
    3. 'self' → logprob: -5.283751010894775
    4. '[self' → logprob: -5.908751010894775
    5. ' ' → logprob: -7.033751010894775
    6. ' [' → logprob: -7.158751010894775
    7. 'zeros' → logprob: -7.658751010894775
    8. ' zeros' → logprob: -9.033751487731934
    9. ' self' → logprob: -9.658751487731934
    10. 'zero' → logprob: -9.908751487731934

Token 443: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009031922556459904
    2. '[' → logprob: -5.134031772613525
    3. 'self' → logprob: -6.259031772613525
    4. '[self' → logprob: -7.509031772613525
    5. ' ' → logprob: -8.134032249450684
    6. ' [' → logprob: -8.509032249450684
    7. '[i' → logprob: -10.759032249450684
    8. 'max' → logprob: -10.759032249450684
    9. '[min' → logprob: -11.134032249450684
    10. ' self' → logprob: -11.134032249450684

Token 444: ' as' (ID: 472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1112971305847168
    2. 'for' → logprob: -2.736297130584717
    3. '[:]' → logprob: -4.111297130584717
    4. 's' → logprob: -4.861297130584717
    5. '<|end|>' → logprob: -5.611297130584717
    6. ' 
' → logprob: -6.111297130584717
    7. '       ' → logprob: -6.361297130584717
    8. '
' → logprob: -6.361297130584717
    9. ' ' → logprob: -6.486297130584717
    10. '[' → logprob: -6.861297130584717

Token 445: ' minimum' (ID: 11085)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5784544348716736
    2. ' ' → logprob: -0.8284544348716736
    3. ' for' → logprob: -7.203454494476318
    4. ' the' → logprob: -7.328454494476318
    5. ' all' → logprob: -7.453454494476318
    6. 'for' → logprob: -8.70345401763916
    7. ' baseline' → logprob: -9.20345401763916
    8. 'the' → logprob: -9.82845401763916
    9. 'all' → logprob: -10.20345401763916
    10. '   ' → logprob: -10.70345401763916

Token 446: ' lower' (ID: 6931)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10634680092334747
    2. 'for' → logprob: -2.731346845626831
    3. '
' → logprob: -3.981346845626831
    4. '       ' → logprob: -4.981346607208252
    5. 's' → logprob: -5.231346607208252
    6. 'dist' → logprob: -6.231346607208252
    7. ',' → logprob: -7.356346607208252
    8. '        
' → logprob: -7.481346607208252
    9. ' 
' → logprob: -8.35634708404541
    10. '	for' → logprob: -8.48134708404541

Token 447: ' bound' (ID: 11608)
  Prédit: ' bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bound' → logprob: -0.4146464169025421
    2. 'bound' → logprob: -2.0396463871002197
    3. ' bounds' → logprob: -2.2896463871002197
    4. '_bound' → logprob: -2.5396463871002197
    5. 'bounds' → logprob: -4.164646625518799
    6. '_bounds' → logprob: -4.539646625518799
    7. '_' → logprob: -5.914646625518799
    8. '_b' → logprob: -9.53964614868164
    9. ' _' → logprob: -10.16464614868164
    10. ' for' → logprob: -10.16464614868164

Token 448: ' is' (ID: 382)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8020198345184326
    2. '
' → logprob: -0.9270198345184326
    3. '       ' → logprob: -2.5520198345184326
    4. 'for' → logprob: -2.8020198345184326
    5. '        
' → logprob: -4.677020072937012
    6. 'dist' → logprob: -5.927020072937012
    7. ',' → logprob: -6.427020072937012
    8. ' 
' → logprob: -6.802020072937012
    9. 's' → logprob: -7.677020072937012
    10. '    
' → logprob: -8.552020072937012

Token 449: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1797870397567749
    2. ' ' → logprob: -1.804787039756775
    3. '   ' → logprob: -10.804786682128906
    4. ' zero' → logprob: -11.554786682128906
    5. ' ' → logprob: -12.554786682128906
    6. '  ' → logprob: -12.554786682128906
    7. '    ' → logprob: -13.304786682128906
    8. 'zero' → logprob: -13.929786682128906
    9. ' for' → logprob: -14.929786682128906
    10. '	' → logprob: -15.179786682128906

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02327948994934559
    2. ' ' → logprob: -3.7732794284820557
    3. ' zero' → logprob: -11.023279190063477
    4. '   ' → logprob: -12.023279190063477
    5. 'zero' → logprob: -12.023279190063477
    6. '  ' → logprob: -13.398279190063477
    7. ' ' → logprob: -13.523279190063477
    8. 'possible' → logprob: -14.523279190063477
    9. '    ' → logprob: -15.148279190063477
    10. '000' → logprob: -15.523279190063477

Token 451: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49527186155319214
    2. '       ' → logprob: -1.120271921157837
    3. '
' → logprob: -3.245271921157837
    4. 'for' → logprob: -3.870271921157837
    5. '        
' → logprob: -6.370271682739258
    6. ',' → logprob: -6.620271682739258
    7. '.' → logprob: -8.370271682739258
    8. '<|end|>' → logprob: -8.370271682739258
    9. '<|end|>' → logprob: -8.870271682739258
    10. '	for' → logprob: -8.870271682739258

Token 452: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2696269452571869
    2. '       ' → logprob: -1.6446269750595093
    3. 'for' → logprob: -3.1446268558502197
    4. ',' → logprob: -10.14462661743164
    5. '        
' → logprob: -10.26962661743164
    6. '	for' → logprob: -10.64462661743164
    7. '```' → logprob: -11.26962661743164
    8. 'dist' → logprob: -11.51962661743164
    9. '   ' → logprob: -11.89462661743164
    10. '
' → logprob: -11.89462661743164

Token 453: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31977370381355286
    2. ' for' → logprob: -1.3197736740112305
    3. '       ' → logprob: -5.0697736740112305
    4. 'dist' → logprob: -8.56977367401123
    5. '	for' → logprob: -11.44477367401123
    6. '   ' → logprob: -13.56977367401123
    7. ' dist' → logprob: -13.56977367401123
    8. ' ' → logprob: -13.69477367401123
    9. '        
' → logprob: -13.94477367401123
    10. 'self' → logprob: -14.31977367401123

Token 454: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07899388670921326
    2. 'i' → logprob: -2.578993797302246
    3. ' ' → logprob: -9.828993797302246
    4. '	i' → logprob: -9.953993797302246
    5. ' ' → logprob: -14.078993797302246
    6. '  ' → logprob: -14.078993797302246
    7. '   ' → logprob: -14.953993797302246
    8. ')' → logprob: -16.203994750976562
    9. '_i' → logprob: -16.453994750976562
    10. '
' → logprob: -16.578994750976562

Token 455: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01615237630903721
    2. 'in' → logprob: -4.141152381896973
    3. ' ' → logprob: -10.016152381896973
    4. ']' → logprob: -10.891152381896973
    5. ')' → logprob: -11.266152381896973
    6. ' i' → logprob: -11.766152381896973
    7. '=' → logprob: -12.516152381896973
    8. ',' → logprob: -12.516152381896973
    9. '   ' → logprob: -12.766152381896973
    10. '  ' → logprob: -12.766152381896973

Token 456: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132624924182892
    2. 'range' → logprob: -1.3132624626159668
    3. '	range' → logprob: -15.313262939453125
    4. '   ' → logprob: -15.688262939453125
    5. ' ' → logprob: -15.813262939453125
    6. '(range' → logprob: -16.063262939453125
    7. '  ' → logprob: -17.313262939453125
    8. 'self' → logprob: -17.563262939453125
    9. '    ' → logprob: -18.688262939453125
    10. ' xrange' → logprob: -19.063262939453125

Token 457: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017505073919892311
    2. '(' → logprob: -6.501750469207764
    3. ' (' → logprob: -8.626750946044922
    4. ' self' → logprob: -10.876750946044922
    5. 'self' → logprob: -10.876750946044922
    6. '(len' → logprob: -11.126750946044922
    7. '(
' → logprob: -11.251750946044922
    8. '(s' → logprob: -12.876750946044922
    9. 's' → logprob: -15.126750946044922
    10. ' ' → logprob: -15.876750946044922

Token 458: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.01972416788339615
    2. 'N' → logprob: -4.019724369049072
    3. ')' → logprob: -7.519724369049072
    4. '.' → logprob: -7.769724369049072
    5. '):
' → logprob: -8.769723892211914
    6. '):' → logprob: -9.019723892211914
    7. ' .' → logprob: -9.019723892211914
    8. 'self' → logprob: -10.269723892211914
    9. '
' → logprob: -10.394723892211914
    10. ':' → logprob: -10.394723892211914

Token 459: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06226208806037903
    2. '):' → logprob: -2.8122620582580566
    3. ' ):
' → logprob: -8.687262535095215
    4. ')' → logprob: -9.562262535095215
    5. ' ):' → logprob: -11.312262535095215
    6. '):
' → logprob: -11.562262535095215
    7. ':
' → logprob: -11.687262535095215
    8. ':' → logprob: -11.687262535095215
    9. ']:
' → logprob: -12.062262535095215
    10. '   ' → logprob: -12.687262535095215

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022570860164705664
    2. '       ' → logprob: -8.875226020812988
    3. '   ' → logprob: -11.000226020812988
    4. ' if' → logprob: -11.250226020812988
    5. '               ' → logprob: -11.250226020812988
    6. ',' → logprob: -11.500226020812988
    7. ' dist' → logprob: -11.750226020812988
    8. '            
' → logprob: -12.250226020812988
    9. '
' → logprob: -12.375226020812988
    10. '```' → logprob: -12.500226020812988

Token 461: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.4299876093864441
    2. ' dist' → logprob: -1.0549876689910889
    3. ' if' → logprob: -7.17998743057251
    4. 'if' → logprob: -8.054987907409668
    5. '           ' → logprob: -9.554987907409668
    6. '	dist' → logprob: -9.679987907409668
    7. '   ' → logprob: -10.179987907409668
    8. '_dist' → logprob: -11.679987907409668
    9. '    ' → logprob: -11.929987907409668
    10. '       ' → logprob: -12.554987907409668

Token 462: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05015195906162262
    2. '[' → logprob: -3.050152063369751
    3. '=' → logprob: -7.300151824951172
    4. '[
' → logprob: -7.550151824951172
    5. ' =' → logprob: -8.425151824951172
    6. ' [' → logprob: -9.175151824951172
    7. ' ' → logprob: -11.800151824951172
    8. '[ind' → logprob: -12.675151824951172
    9. ' =[' → logprob: -12.800151824951172
    10. ' i' → logprob: -12.800151824951172

Token 463: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027409198228269815
    2. ']=' → logprob: -6.377740859985352
    3. ' ]' → logprob: -6.877740859985352
    4. '=' → logprob: -12.002740859985352
    5. ' =' → logprob: -13.752740859985352
    6. ']+=' → logprob: -15.877740859985352
    7. ')' → logprob: -16.00274085998535
    8. ']=-' → logprob: -17.12774085998535
    9. ' ' → logprob: -17.25274085998535
    10. ',' → logprob: -17.37774085998535

Token 464: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750952497124672
    2. ' =' → logprob: -3.5297510623931885
    3. ']=' → logprob: -15.40475082397461
    4. ')=' → logprob: -16.40475082397461
    5. ' ' → logprob: -16.65475082397461
    6. '0' → logprob: -17.27975082397461
    7. ']' → logprob: -17.40475082397461
    8. '+=' → logprob: -17.40475082397461
    9. '=max' → logprob: -17.40475082397461
    10. ',' → logprob: -17.90475082397461

Token 465: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006268949946388602
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.500626564025879
    4. '  ' → logprob: -16.875627517700195
    5. 'max' → logprob: -17.250627517700195
    6. ' ' → logprob: -17.250627517700195
    7. 'self' → logprob: -17.750627517700195
    8. '    ' → logprob: -19.125627517700195
    9. '۰' → logprob: -19.125627517700195
    10. ' max' → logprob: -20.188127517700195

Token 466: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.125097274780273
    4. 'max' → logprob: -16.375097274780273
    5. '  ' → logprob: -17.125097274780273
    6. ' ' → logprob: -18.750097274780273
    7. '    ' → logprob: -19.437597274780273
    8. ' max' → logprob: -19.500097274780273
    9. '=' → logprob: -19.687597274780273
    10. '00' → logprob: -20.312597274780273

Token 467: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21857184171676636
    2. 'for' → logprob: -2.343571901321411
    3. ' for' → logprob: -2.343571901321411
    4. '        
' → logprob: -6.343571662902832
    5. '	for' → logprob: -6.718571662902832
    6. '	' → logprob: -7.593571662902832
    7. '   ' → logprob: -8.093571662902832
    8. '```' → logprob: -8.968571662902832
    9. '<|end|>' → logprob: -9.218571662902832
    10. '        ' → logprob: -9.593571662902832

Token 469: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00982066709548235
    2. 'updated' → logprob: -5.009820461273193
    3. ' for' → logprob: -6.509820461273193
    4. '       ' → logprob: -6.509820461273193
    5. 'changed' → logprob: -9.884820938110352
    6. '   ' → logprob: -10.384820938110352
    7. 'rel' → logprob: -10.509820938110352
    8. ' updated' → logprob: -12.259820938110352
    9. '        
' → logprob: -12.759820938110352
    10. 'updates' → logprob: -12.884820938110352

Token 470: ' Relax' (ID: 71256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03826892003417015
    2. ' for' → logprob: -3.288268804550171
    3. '       ' → logprob: -9.28826904296875
    4. 'updated' → logprob: -9.28826904296875
    5. '   ' → logprob: -10.78826904296875
    6. 'changed' → logprob: -11.03826904296875
    7. ' updated' → logprob: -13.03826904296875
    8. 'queue' → logprob: -14.28826904296875
    9. 'import' → logprob: -14.28826904296875
    10. '        
' → logprob: -14.66326904296875

Token 471: ' edges' (ID: 22569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14164920151233673
    2. 'for' → logprob: -2.1416492462158203
    3. ' edges' → logprob: -5.14164924621582
    4. ' self' → logprob: -5.51664924621582
    5. 'self' → logprob: -6.51664924621582
    6. '<|end|>' → logprob: -7.64164924621582
    7. 'edges' → logprob: -7.76664924621582
    8. 's' → logprob: -7.89164924621582
    9. ' iterations' → logprob: -8.26664924621582
    10. 'ed' → logprob: -8.26664924621582

Token 472: ' R' (ID: 460)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22078372538089752
    2. '       ' → logprob: -1.8457837104797363
    3. 'for' → logprob: -3.2207837104797363
    4. '
' → logprob: -9.345784187316895
    5. '        
' → logprob: -9.345784187316895
    6. '	for' → logprob: -9.470784187316895
    7. '   ' → logprob: -12.220784187316895
    8. ' in' → logprob: -12.720784187316895
    9. ',' → logprob: -12.845784187316895
    10. '<|end|>' → logprob: -12.845784187316895

Token 473: ' times' (ID: 4238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3957105576992035
    2. ' for' → logprob: -1.6457105875015259
    3. ' times' → logprob: -2.3957104682922363
    4. 'times' → logprob: -3.6457104682922363
    5. '   ' → logprob: -5.770710468292236
    6. '+' → logprob: -6.020710468292236
    7. ' =' → logprob: -6.145710468292236
    8. ':' → logprob: -6.270710468292236
    9. ' ' → logprob: -6.645710468292236
    10. '=' → logprob: -6.895710468292236

Token 474: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10666605085134506
    2. ' for' → logprob: -2.356666088104248
    3. 'for' → logprob: -5.106666088104248
    4. '	for' → logprob: -8.35666561126709
    5. '
' → logprob: -9.23166561126709
    6. '	' → logprob: -10.48166561126709
    7. '   ' → logprob: -12.23166561126709
    8. '        
' → logprob: -12.35666561126709
    9. '           ' → logprob: -12.85666561126709
    10. '	   ' → logprob: -12.85666561126709

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05913582816720009
    2. ' for' → logprob: -3.059135913848877
    3. 'for' → logprob: -4.559135913848877
    4. '	for' → logprob: -11.059135437011719
    5. '   ' → logprob: -12.809135437011719
    6. '	' → logprob: -13.309135437011719
    7. '        
' → logprob: -14.309135437011719
    8. '           ' → logprob: -14.809135437011719
    9. '
' → logprob: -15.309135437011719
    10. '	   ' → logprob: -15.559135437011719

Token 476: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20299410820007324
    2. ' for' → logprob: -1.7029941082000732
    3. '       ' → logprob: -6.452994346618652
    4. '	for' → logprob: -12.702994346618652
    5. '   ' → logprob: -14.327994346618652
    6. ' ' → logprob: -17.452993392944336
    7. '	' → logprob: -17.577993392944336
    8. '        
' → logprob: -17.952993392944336
    9. ' ' → logprob: -18.077993392944336
    10. '
' → logprob: -18.327993392944336

Token 477: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013818620704114437
    2. '_r' → logprob: -4.513818740844727
    3. '_i' → logprob: -6.763818740844727
    4. '_iter' → logprob: -7.513818740844727
    5. ' _' → logprob: -7.763818740844727
    6. 'r' → logprob: -8.388818740844727
    7. '_rel' → logprob: -8.888818740844727
    8. 'i' → logprob: -9.388818740844727
    9. '_k' → logprob: -9.638818740844727
    10. '_iteration' → logprob: -9.638818740844727

Token 478: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00593827897682786
    2. 'in' → logprob: -5.1309380531311035
    3. 'range' → logprob: -11.880938529968262
    4. 'i' → logprob: -13.880938529968262
    5. ' ' → logprob: -14.005938529968262
    6. 'import' → logprob: -15.255938529968262
    7. '   ' → logprob: -15.380938529968262
    8. '  ' → logprob: -15.505938529968262
    9. '    ' → logprob: -15.880938529968262
    10. ' i' → logprob: -16.630937576293945

Token 479: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047814972698689
    2. ' range' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.76104736328125
    4. ' ' → logprob: -17.88604736328125
    5. '  ' → logprob: -18.13604736328125
    6. '    ' → logprob: -18.26104736328125
    7. 'r' → logprob: -19.88604736328125
    8. '(range' → logprob: -20.01104736328125
    9. '	range' → logprob: -20.26104736328125
    10. 'self' → logprob: -20.26104736328125

Token 480: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009305736981332302
    2. ' self' → logprob: -5.259305953979492
    3. '(self' → logprob: -5.509305953979492
    4. '       ' → logprob: -11.759305953979492
    5. '	self' → logprob: -13.384305953979492
    6. '           ' → logprob: -13.634305953979492
    7. '=self' → logprob: -13.634305953979492
    8. '   ' → logprob: -13.759305953979492
    9. '[self' → logprob: -14.509305953979492
    10. '1' → logprob: -14.884305953979492

Token 481: '.R' (ID: 3395)
  Prédit: '.R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.R' → logprob: -8.2994620242971e-06
    2. 'R' → logprob: -12.500008583068848
    3. '.' → logprob: -13.125008583068848
    4. 'self' → logprob: -13.500008583068848
    5. ' .' → logprob: -13.750008583068848
    6. '.
' → logprob: -17.12500762939453
    7. '.N' → logprob: -17.62500762939453
    8. '.r' → logprob: -18.12500762939453
    9. '
' → logprob: -18.37500762939453
    10. '	R' → logprob: -19.00000762939453

Token 482: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2853330373764038
    2. '):
' → logprob: -1.4103330373764038
    3. ' ):' → logprob: -6.285333156585693
    4. '+' → logprob: -6.535333156585693
    5. ' ):
' → logprob: -7.535333156585693
    6. ' +' → logprob: -8.910332679748535
    7. ':' → logprob: -9.410332679748535
    8. '       ' → logprob: -10.035332679748535
    9. ')' → logprob: -10.660332679748535
    10. '):
' → logprob: -11.160332679748535

Token 483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04787227883934975
    2. ' for' → logprob: -4.047872066497803
    3. 'for' → logprob: -4.172872066497803
    4. '   ' → logprob: -4.297872066497803
    5. '       ' → logprob: -8.297872543334961
    6. ' ' → logprob: -11.172872543334961
    7. '  ' → logprob: -11.672872543334961
    8. '    ' → logprob: -12.797872543334961
    9. '	for' → logprob: -13.547872543334961
    10. '               ' → logprob: -13.922872543334961

Token 484: ' updated' (ID: 8489)
  Prédit: 'updated'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updated' (adapté à ' updated') → logprob: -0.0008515591034665704
    2. 'changed' → logprob: -7.500851631164551
    3. '   ' → logprob: -9.00085163116455
    4. ' updated' → logprob: -9.37585163116455
    5. 'for' → logprob: -9.50085163116455
    6. 'update' → logprob: -11.75085163116455
    7. 'any' → logprob: -12.50085163116455
    8. 'rel' → logprob: -13.50085163116455
    9. '       ' → logprob: -13.87585163116455
    10. 'updates' → logprob: -14.87585163116455

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16027113795280457
    2. '=' → logprob: -1.910271167755127
    3. '=False' → logprob: -10.035270690917969
    4. ' ' → logprob: -13.160270690917969
    5. '=True' → logprob: -15.035270690917969
    6. '  ' → logprob: -15.535270690917969
    7. ' =
' → logprob: -16.16027069091797
    8. '=false' → logprob: -16.16027069091797
    9. ' ' → logprob: -16.66027069091797
    10. '   ' → logprob: -16.78527069091797

Token 486: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. 'True' → logprob: -19.37520408630371
    4. 'false' → logprob: -20.87520408630371
    5. '(False' → logprob: -22.62520408630371
    6. '=False' → logprob: -22.62520408630371
    7. '   ' → logprob: -22.87520408630371
    8. 'F' → logprob: -24.37520408630371
    9. '0' → logprob: -25.25020408630371
    10. '
' → logprob: -26.00020408630371

Token 487: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3907914161682129
    2. '           ' → logprob: -1.140791416168213
    3. '       ' → logprob: -6.390791416168213
    4. '   ' → logprob: -7.640791416168213
    5. '    
' → logprob: -8.140790939331055
    6. '<|end|>' → logprob: -8.265790939331055
    7. '            
' → logprob: -8.390790939331055
    8. ' for' → logprob: -8.515790939331055
    9. '               ' → logprob: -8.640790939331055
    10. '
' → logprob: -8.890790939331055

Token 488: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003715662460308522
    2. '	       ' → logprob: -9.125371932983398
    3. '		' → logprob: -9.750371932983398
    4. ' for' → logprob: -9.750371932983398
    5. 'for' → logprob: -10.125371932983398
    6. '
' → logprob: -10.375371932983398
    7. '       ' → logprob: -10.500371932983398
    8. '   ' → logprob: -10.625371932983398
    9. '               ' → logprob: -12.000371932983398
    10. '	   ' → logprob: -12.125371932983398

Token 489: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007595999049954116
    2. '           ' → logprob: -7.500759601593018
    3. ' for' → logprob: -8.50075912475586
    4. '       ' → logprob: -13.12575912475586
    5. '   ' → logprob: -13.75075912475586
    6. '	for' → logprob: -16.62575912475586
    7. '               ' → logprob: -17.00075912475586
    8. ' ' → logprob: -18.12575912475586
    9. '
' → logprob: -19.00075912475586
    10. '            
' → logprob: -19.25075912475586

Token 490: ' c' (ID: 274)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.056191544979810715
    2. 'b' → logprob: -3.0561914443969727
    3. 'node' → logprob: -5.306191444396973
    4. ' u' → logprob: -6.056191444396973
    5. ' node' → logprob: -8.931191444396973
    6. 'v' → logprob: -9.556191444396973
    7. ' b' → logprob: -9.806191444396973
    8. 'i' → logprob: -11.931191444396973
    9. '   ' → logprob: -13.306191444396973
    10. 'j' → logprob: -13.681191444396973

Token 491: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00046558488975279033
    2. 'in' → logprob: -7.750465393066406
    3. ' ' → logprob: -10.500465393066406
    4. 'on' → logprob: -12.500465393066406
    5. '	in' → logprob: -13.875465393066406
    6. ' i' → logprob: -14.625465393066406
    7. '<|end|>' → logprob: -14.750465393066406
    8. 's' → logprob: -15.125465393066406
    9. '  ' → logprob: -15.250465393066406
    10. 'constraint' → logprob: -15.500465393066406

Token 492: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004913145676255226
    2. ' self' → logprob: -7.625491142272949
    3. 'elf' → logprob: -13.00049114227295
    4. '(self' → logprob: -14.50049114227295
    5. '   ' → logprob: -16.000492095947266
    6. '[self' → logprob: -16.125492095947266
    7. 'range' → logprob: -16.250492095947266
    8. '	self' → logprob: -16.750492095947266
    9. ' ' → logprob: -16.875492095947266
    10. '=self' → logprob: -17.625492095947266

Token 493: '.constraints' (ID: 62986)
  Prédit: '.constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraints' → logprob: -0.0003200922510586679
    2. 'constraints' → logprob: -8.125320434570312
    3. '.constraint' → logprob: -10.875320434570312
    4. 'const' → logprob: -13.625320434570312
    5. '.const' → logprob: -13.750320434570312
    6. 'Constraints' → logprob: -14.125320434570312
    7. ' .' → logprob: -14.500320434570312
    8. '.constants' → logprob: -14.750320434570312
    9. ' constraints' → logprob: -15.000320434570312
    10. 'class' → logprob: -15.500320434570312

Token 494: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34881314635276794
    2. ':' → logprob: -1.2238131761550903
    3. '               ' → logprob: -8.8488130569458
    4. '           ' → logprob: -9.2238130569458
    5. '):
' → logprob: -9.2238130569458
    6. ',' → logprob: -11.7238130569458
    7. ':

' → logprob: -11.8488130569458
    8. '       ' → logprob: -12.7238130569458
    9. ':
' → logprob: -12.7238130569458
    10. ' :
' → logprob: -13.0988130569458

Token 495: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009362899698317051
    2. '           ' → logprob: -5.884362697601318
    3. '                
' → logprob: -6.009362697601318
    4. ' a' → logprob: -6.759362697601318
    5. ' 
' → logprob: -7.259362697601318
    6. '
' → logprob: -7.259362697601318
    7. '            
' → logprob: -7.634362697601318
    8. ' for' → logprob: -8.634363174438477
    9. 'a' → logprob: -8.634363174438477
    10. ' b' → logprob: -9.134363174438477

Token 496: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.09463661164045334
    2. 'if' → logprob: -2.5946366786956787
    3. 'u' → logprob: -4.2196364402771
    4. 'b' → logprob: -7.3446364402771
    5. '   ' → logprob: -8.594636917114258
    6. ' if' → logprob: -9.594636917114258
    7. ' a' → logprob: -11.594636917114258
    8. '       ' → logprob: -12.719636917114258
    9. '           ' → logprob: -13.344636917114258
    10. 'x' → logprob: -14.094636917114258

Token 497: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2278260737657547
    2. '=' → logprob: -1.6028261184692383
    3. 'a' → logprob: -6.477826118469238
    4. '_idx' → logprob: -7.602826118469238
    5. '_index' → logprob: -9.352826118469238
    6. '=a' → logprob: -9.477826118469238
    7. ',' → logprob: -9.602826118469238
    8. 'idx' → logprob: -10.352826118469238
    9. 'index' → logprob: -11.352826118469238
    10. '.' → logprob: -11.352826118469238

Token 498: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007100477814674377
    2. ' c' → logprob: -7.2507100105285645
    3. '	c' → logprob: -17.250709533691406
    4. '   ' → logprob: -18.125709533691406
    5. '               ' → logprob: -18.375709533691406
    6. '           ' → logprob: -18.750709533691406
    7. ')c' → logprob: -19.375709533691406
    8. '                   ' → logprob: -20.500709533691406
    9. 'cation' → logprob: -20.500709533691406
    10. ' ' → logprob: -20.750709533691406

Token 499: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -3.404745439183898e-05
    2. 'a' → logprob: -10.75003433227539
    3. '.b' → logprob: -11.37503433227539
    4. '.' → logprob: -14.37503433227539
    5. ' .' → logprob: -15.25003433227539
    6. '.c' → logprob: -15.50003433227539
    7. ' a' → logprob: -17.00003433227539
    8. '_a' → logprob: -17.37503433227539
    9. '	a' → logprob: -18.00003433227539
    10. '#a' → logprob: -18.00003433227539

Token 500: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31330257654190063
    2. '-' → logprob: -1.3133025169372559
    3. '1' → logprob: -11.313302993774414
    4. ' ' → logprob: -11.563302993774414
    5. '               ' → logprob: -12.438302993774414
    6. '   ' → logprob: -12.938302993774414
    7. '0' → logprob: -12.938302993774414
    8. '           ' → logprob: -13.313302993774414
    9. 'a' → logprob: -13.563302993774414
    10. ')' → logprob: -14.188302993774414

Token 501: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003805064770858735
    2. ' ' → logprob: -7.875380516052246
    3. '<|end|>' → logprob: -15.125380516052246
    4. '0' → logprob: -17.37537956237793
    5. '```' → logprob: -18.37537956237793
    6. '2' → logprob: -18.68787956237793
    7. 'user' → logprob: -18.75037956237793
    8. '۱' → logprob: -18.93787956237793
    9. '   ' → logprob: -18.93787956237793
    10. '<|end|>' → logprob: -19.00037956237793

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -14.750017166137695
    4. '```' → logprob: -18.125017166137695
    5. '0' → logprob: -18.562517166137695
    6. 'user' → logprob: -18.625017166137695
    7. '   ' → logprob: -18.875017166137695
    8. '<|end|>' → logprob: -18.937517166137695
    9. '2' → logprob: -19.125017166137695
    10. '۱' → logprob: -19.500017166137695

Token 503: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015897223725914955
    2. ',' → logprob: -5.015897274017334
    3. '
' → logprob: -5.515897274017334
    4. '           ' → logprob: -6.265897274017334
    5. 'b' → logprob: -6.890897274017334
    6. '                
' → logprob: -7.140897274017334
    7. ',b' → logprob: -7.515897274017334
    8. '                ' → logprob: -8.640896797180176
    9. ')' → logprob: -9.140896797180176
    10. ' b' → logprob: -9.265896797180176

Token 504: '               ' (ID: 506)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01670469529926777
    2. '               ' → logprob: -4.766704559326172
    3. ' b' → logprob: -5.516704559326172
    4. '           ' → logprob: -5.516704559326172
    5. '       ' → logprob: -11.391704559326172
    6. 'for' → logprob: -13.266704559326172
    7. ',b' → logprob: -13.516704559326172
    8. '	b' → logprob: -13.641704559326172
    9. '   ' → logprob: -13.891704559326172
    10. ' for' → logprob: -14.391704559326172

Token 505: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -3.531315314830863e-06
    2. ' b' → logprob: -12.625003814697266
    3. '           ' → logprob: -15.875003814697266
    4. '               ' → logprob: -17.250003814697266
    5. 'for' → logprob: -18.500003814697266
    6. '	b' → logprob: -18.875003814697266
    7. '       ' → logprob: -19.250003814697266
    8. '   ' → logprob: -21.125003814697266
    9. '                   ' → logprob: -21.500003814697266
    10. 'a' → logprob: -21.875003814697266

Token 506: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269349306821823
    2. '=' → logprob: -2.1269350051879883
    3. 'b' → logprob: -13.126935005187988
    4. ' ' → logprob: -13.501935005187988
    5. ',' → logprob: -14.126935005187988
    6. '=
' → logprob: -14.251935005187988
    7. ' =
' → logprob: -14.376935005187988
    8. '=b' → logprob: -15.001935005187988
    9. '   ' → logprob: -15.501935005187988
    10. ')' → logprob: -15.501935005187988

Token 507: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011048170737922192
    2. ' c' → logprob: -4.511048316955566
    3. '	c' → logprob: -15.886048316955566
    4. 'a' → logprob: -16.51104736328125
    5. ')c' → logprob: -16.88604736328125
    6. '(c' → logprob: -18.38604736328125
    7. ' ' → logprob: -18.51104736328125
    8. '_c' → logprob: -18.51104736328125
    9. '   ' → logprob: -18.76104736328125
    10. ':c' → logprob: -18.94854736328125

Token 508: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.016753923147916794
    2. '.c' → logprob: -4.391754150390625
    3. '.' → logprob: -5.516754150390625
    4. ' .' → logprob: -9.266754150390625
    5. 'b' → logprob: -9.391754150390625
    6. ' =' → logprob: -10.891754150390625
    7. '=' → logprob: -11.516754150390625
    8. 'c' → logprob: -13.266754150390625
    9. '
' → logprob: -14.016754150390625
    10. '=b' → logprob: -14.141754150390625

Token 509: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740784466266632
    2. '-' → logprob: -0.9740784168243408
    3. ' ' → logprob: -13.849078178405762
    4. '−' → logprob: -16.349079132080078
    5. 'def' → logprob: -16.849079132080078
    6. ')' → logprob: -16.974079132080078
    7. '.' → logprob: -17.349079132080078
    8. '   ' → logprob: -17.349079132080078
    9. '=' → logprob: -17.474079132080078
    10. '1' → logprob: -17.599079132080078

Token 510: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038086410495452583
    2. ' ' → logprob: -7.875380992889404
    3. '<|end|>' → logprob: -14.937880516052246
    4. '<|end|>' → logprob: -16.375381469726562
    5. '-' → logprob: -16.625381469726562
    6. '```' → logprob: -17.062881469726562
    7. '۱' → logprob: -17.187881469726562
    8. '   ' → logprob: -17.687881469726562
    9. '2' → logprob: -18.187881469726562
    10. '...' → logprob: -18.375381469726562

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '-' → logprob: -16.500032424926758
    4. '0' → logprob: -16.625032424926758
    5. '2' → logprob: -16.625032424926758
    6. '   ' → logprob: -17.000032424926758
    7. 'a' → logprob: -17.937532424926758
    8. '۱' → logprob: -17.937532424926758
    9. '
' → logprob: -18.062532424926758
    10. 'c' → logprob: -18.125032424926758

Token 512: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01211271807551384
    2. '
' → logprob: -4.637112617492676
    3. '           ' → logprob: -6.512112617492676
    4. '                
' → logprob: -7.637112617492676
    5. ',' → logprob: -8.512112617492676
    6. 'if' → logprob: -10.387112617492676
    7. '            
' → logprob: -10.512112617492676
    8. ' if' → logprob: -10.887112617492676
    9. '                   ' → logprob: -11.512112617492676
    10. '```' → logprob: -11.637112617492676

Token 513: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012594180181622505
    2. 'if' → logprob: -4.512594223022461
    3. ' if' → logprob: -6.637594223022461
    4. '
' → logprob: -9.012594223022461
    5. '           ' → logprob: -9.887594223022461
    6. '                
' → logprob: -10.887594223022461
    7. '```' → logprob: -11.137594223022461
    8. ',' → logprob: -11.887594223022461
    9. ':' → logprob: -12.512594223022461
    10. 'for' → logprob: -12.887594223022461

Token 514: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007260635495185852
    2. 'cost' → logprob: -5.382260799407959
    3. ' if' → logprob: -6.007260799407959
    4. '   ' → logprob: -10.2572603225708
    5. 'new' → logprob: -10.5072603225708
    6. 'max' → logprob: -10.6322603225708
    7. 'c' → logprob: -10.8822603225708
    8. 'u' → logprob: -11.2572603225708
    9. 'w' → logprob: -11.5072603225708
    10. 'limit' → logprob: -11.6322603225708

Token 515: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -7.703443770878948e-06
    2. ' dist' → logprob: -12.000007629394531
    3. '	dist' → logprob: -14.375007629394531
    4. '(dist' → logprob: -14.750007629394531
    5. '   ' → logprob: -14.875007629394531
    6. '_dist' → logprob: -16.75000762939453
    7. 'Dist' → logprob: -17.62500762939453
    8. '.dist' → logprob: -17.87500762939453
    9. 'd' → logprob: -18.12500762939453
    10. '```' → logprob: -20.37500762939453

Token 516: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.023694729432463646
    2. '[b' → logprob: -3.7736947536468506
    3. 'a' → logprob: -7.7736945152282715
    4. 'b' → logprob: -10.77369499206543
    5. '   ' → logprob: -12.89869499206543
    6. ' [' → logprob: -13.52369499206543
    7. ' a' → logprob: -14.14869499206543
    8. '[' → logprob: -14.64869499206543
    9. '][' → logprob: -15.14869499206543
    10. '```' → logprob: -15.39869499206543

Token 517: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.18940548598766327
    2. ' <' → logprob: -1.8144054412841797
    3. '>' → logprob: -4.68940544128418
    4. ' >' → logprob: -8.31440544128418
    5. ']' → logprob: -9.43940544128418
    6. ' ' → logprob: -11.18940544128418
    7. '<=' → logprob: -11.18940544128418
    8. '[' → logprob: -11.31440544128418
    9. ']<' → logprob: -11.31440544128418
    10. ')' → logprob: -12.06440544128418

Token 518: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.27566295862197876
    2. '>' → logprob: -2.025662899017334
    3. ' <' → logprob: -2.400662899017334
    4. ' >' → logprob: -4.025662899017334
    5. '<=' → logprob: -7.775662899017334
    6. ' <=' → logprob: -9.900663375854492
    7. ' ' → logprob: -11.275663375854492
    8. '<class' → logprob: -12.150663375854492
    9. '<b' → logprob: -12.900663375854492
    10. ' ' → logprob: -12.900663375854492

Token 519: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.006784401368349791
    2. ' dist' → logprob: -5.006784439086914
    3. '	dist' → logprob: -10.256784439086914
    4. '(dist' → logprob: -10.631784439086914
    5. '_dist' → logprob: -12.506784439086914
    6. 'd' → logprob: -13.256784439086914
    7. 'b' → logprob: -13.506784439086914
    8. '   ' → logprob: -13.881784439086914
    9. '.dist' → logprob: -14.631784439086914
    10. 'Dist' → logprob: -14.756784439086914

Token 520: '[b' (ID: 40800)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.474115252494812
    2. '[b' → logprob: -0.974115252494812
    3. ' b' → logprob: -10.599115371704102
    4. '	b' → logprob: -11.849115371704102
    5. '[' → logprob: -12.724115371704102
    6. '[
' → logprob: -13.099115371704102
    7. '   ' → logprob: -14.724115371704102
    8. '(b' → logprob: -15.224115371704102
    9. ',b' → logprob: -16.4741153717041
    10. '_b' → logprob: -16.8491153717041

Token 521: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.020930945873260498
    2. '+' → logprob: -3.8959310054779053
    3. '+c' → logprob: -8.270931243896484
    4. ']' → logprob: -9.895931243896484
    5. ' plus' → logprob: -10.020931243896484
    6. ']+' → logprob: -10.645931243896484
    7. '[' → logprob: -12.270931243896484
    8. ' ' → logprob: -12.770931243896484
    9. ' ' → logprob: -13.770931243896484
    10. ' +
' → logprob: -14.020931243896484

Token 522: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3379955589771271
    2. '+' → logprob: -1.3379955291748047
    3. '+c' → logprob: -3.7129955291748047
    4. '+
' → logprob: -12.087995529174805
    5. '[c' → logprob: -12.462995529174805
    6. ' plus' → logprob: -12.962995529174805
    7. '+C' → logprob: -12.962995529174805
    8. 'c' → logprob: -13.462995529174805
    9. '[' → logprob: -13.587995529174805
    10. ' c' → logprob: -13.587995529174805

Token 523: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013724920572713017
    2. ' c' → logprob: -6.626372337341309
    3. 'cost' → logprob: -10.126372337341309
    4. '   ' → logprob: -13.376372337341309
    5. 'constraints' → logprob: -14.251372337341309
    6. '	c' → logprob: -14.501372337341309
    7. 'constraint' → logprob: -14.813872337341309
    8. '           ' → logprob: -15.063872337341309
    9. ')c' → logprob: -15.063872337341309
    10. ' ' → logprob: -15.251372337341309

Token 524: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.11477428674697876
    2. '.' → logprob: -2.239774227142334
    3. 'c' → logprob: -6.739774227142334
    4. ' .' → logprob: -7.864774227142334
    5. ''.' → logprob: -9.114774703979492
    6. '`.' → logprob: -9.489774703979492
    7. '".' → logprob: -10.114774703979492
    8. '.
' → logprob: -10.239774703979492
    9. '	c' → logprob: -10.614774703979492
    10. '   ' → logprob: -10.989774703979492

Token 525: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4308044910430908
    2. ':' → logprob: -1.0558044910430908
    3. ' :
' → logprob: -7.180804252624512
    4. '):
' → logprob: -8.055804252624512
    5. '           ' → logprob: -8.055804252624512
    6. '               ' → logprob: -8.180804252624512
    7. '       ' → logprob: -9.055804252624512
    8. ' :' → logprob: -9.555804252624512
    9. '+' → logprob: -10.180804252624512
    10. '   ' → logprob: -10.180804252624512

Token 526: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014806539751589298
    2. '                   ' → logprob: -4.514806747436523
    3. '           ' → logprob: -6.389806747436523
    4. '=' → logprob: -7.389806747436523
    5. 'continue' → logprob: -7.889806747436523
    6. ' continue' → logprob: -8.764806747436523
    7. '=False' → logprob: -8.889806747436523
    8. '   ' → logprob: -9.139806747436523
    9. ':' → logprob: -9.139806747436523
    10. '```' → logprob: -9.264806747436523

Token 527: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.01168957632035017
    2. '                   ' → logprob: -4.51168966293335
    3. ' dist' → logprob: -8.136689186096191
    4. '                       ' → logprob: -8.261689186096191
    5. 'continue' → logprob: -10.261689186096191
    6. '               ' → logprob: -10.386689186096191
    7. '	dist' → logprob: -11.761689186096191
    8. 'break' → logprob: -12.261689186096191
    9. '
' → logprob: -12.761689186096191
    10. 'return' → logprob: -13.261689186096191

Token 528: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00022165567497722805
    2. '[b' → logprob: -9.375221252441406
    3. '=' → logprob: -9.875221252441406
    4. 'a' → logprob: -10.250221252441406
    5. ' =' → logprob: -10.875221252441406
    6. '=a' → logprob: -11.250221252441406
    7. '[' → logprob: -11.500221252441406
    8. '[
' → logprob: -13.000221252441406
    9. ' [' → logprob: -13.625221252441406
    10. ' a' → logprob: -13.750221252441406

Token 529: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25801578164100647
    2. '=' → logprob: -1.508015751838684
    3. ']' → logprob: -5.1330156326293945
    4. ')' → logprob: -10.008015632629395
    5. ']=' → logprob: -10.258015632629395
    6. ' ]' → logprob: -10.633015632629395
    7. '>' → logprob: -11.133015632629395
    8. ' ' → logprob: -11.383015632629395
    9. '   ' → logprob: -11.758015632629395
    10. '    ' → logprob: -12.258015632629395

Token 530: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692926824092865
    2. ' =' → logprob: -2.12692928314209
    3. '<=' → logprob: -14.87692928314209
    4. '>' → logprob: -15.12692928314209
    5. ' ' → logprob: -15.87692928314209
    6. ')' → logprob: -16.626928329467773
    7. ',' → logprob: -16.876928329467773
    8. ' <=' → logprob: -17.251928329467773
    9. '.=' → logprob: -17.251928329467773
    10. '=

' → logprob: -17.501928329467773

Token 531: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2519342601299286
    2. ' dist' → logprob: -1.501934289932251
    3. '	dist' → logprob: -12.751934051513672
    4. '(dist' → logprob: -13.501934051513672
    5. '   ' → logprob: -14.626934051513672
    6. '    ' → logprob: -15.876934051513672
    7. ' ' → logprob: -16.501934051513672
    8. 'int' → logprob: -16.501934051513672
    9. 'max' → logprob: -17.126934051513672
    10. '_dist' → logprob: -17.376934051513672

Token 532: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00011009939044015482
    2. 'b' → logprob: -9.125109672546387
    3. '[
' → logprob: -14.625109672546387
    4. '[' → logprob: -15.125109672546387
    5. ' b' → logprob: -15.625109672546387
    6. '	b' → logprob: -16.500110626220703
    7. '(b' → logprob: -17.125110626220703
    8. '[a' → logprob: -18.125110626220703
    9. ' [' → logprob: -18.125110626220703
    10. '][' → logprob: -18.375110626220703

Token 533: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06606956571340561
    2. '+c' → logprob: -3.5660696029663086
    3. ']+' → logprob: -4.441069602966309
    4. '+' → logprob: -4.441069602966309
    5. ' +' → logprob: -5.066069602966309
    6. '.c' → logprob: -5.816069602966309
    7. '].' → logprob: -6.066069602966309
    8. ')' → logprob: -8.441069602966309
    9. '.' → logprob: -8.691069602966309
    10. '<|end|>' → logprob: -10.941069602966309

Token 534: ' +' (ID: 659)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.1394263356924057
    2. '+' → logprob: -2.1394262313842773
    3. ' +' → logprob: -4.389426231384277
    4. '+C' → logprob: -11.889426231384277
    5. '+self' → logprob: -13.264426231384277
    6. 'c' → logprob: -13.639426231384277
    7. '+t' → logprob: -14.889426231384277
    8. '.c' → logprob: -15.139426231384277
    9. '+k' → logprob: -15.264426231384277
    10. '+.' → logprob: -15.389426231384277

Token 535: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01105170976370573
    2. ' c' → logprob: -4.511051654815674
    3. '   ' → logprob: -13.011052131652832
    4. '    ' → logprob: -14.886052131652832
    5. '	c' → logprob: -15.386052131652832
    6. ' ' → logprob: -15.511052131652832
    7. '  ' → logprob: -15.886052131652832
    8. '
' → logprob: -16.136051177978516
    9. 'cost' → logprob: -16.136051177978516
    10. '```' → logprob: -16.261051177978516

Token 536: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0009142052149400115
    2. '.' → logprob: -7.000914096832275
    3. ' .' → logprob: -13.500914573669434
    4. '	c' → logprob: -15.000914573669434
    5. 'c' → logprob: -15.125914573669434
    6. '<|end|>' → logprob: -15.250914573669434
    7. '```' → logprob: -16.000913619995117
    8. '`.' → logprob: -16.250913619995117
    9. '‌.' → logprob: -16.375913619995117
    10. ''.' → logprob: -16.875913619995117

Token 537: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000855001388117671
    2. '<|end|>' → logprob: -8.000855445861816
    3. '               ' → logprob: -8.125855445861816
    4. '                  ' → logprob: -10.250855445861816
    5. '           ' → logprob: -10.500855445861816
    6. '				' → logprob: -10.625855445861816
    7. '                       ' → logprob: -10.750855445861816
    8. '		           ' → logprob: -11.125855445861816
    9. '                    ' → logprob: -11.250855445861816
    10. '
' → logprob: -11.250855445861816

Token 538: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011993973748758435
    2. '               ' → logprob: -7.376199245452881
    3. '<|end|>' → logprob: -8.376199722290039
    4. '           ' → logprob: -8.876199722290039
    5. '                       ' → logprob: -10.501199722290039
    6. '                    ' → logprob: -10.751199722290039
    7. '
' → logprob: -10.751199722290039
    8. '                    
' → logprob: -10.876199722290039
    9. '                  ' → logprob: -11.001199722290039
    10. '```' → logprob: -11.126199722290039

Token 539: ' updated' (ID: 8489)
  Prédit: 'updated'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updated' (adapté à ' updated') → logprob: -1.1279553291387856e-05
    2. ' updated' → logprob: -12.000011444091797
    3. '                   ' → logprob: -12.250011444091797
    4. '               ' → logprob: -15.750011444091797
    5. '           ' → logprob: -16.000011444091797
    6. '
' → logprob: -17.750011444091797
    7. '_updated' → logprob: -18.875011444091797
    8. '.updated' → logprob: -19.125011444091797
    9. '                       ' → logprob: -19.375011444091797
    10. '   ' → logprob: -19.750011444091797

Token 540: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. '=True' → logprob: -14.600207328796387
    4. ' ' → logprob: -15.725207328796387
    5. ' |=' → logprob: -17.85020637512207
    6. ' =
' → logprob: -18.60020637512207
    7. '	' → logprob: -19.60020637512207
    8. '=False' → logprob: -19.85020637512207
    9. '    ' → logprob: -20.10020637512207
    10. '[' → logprob: -20.22520637512207

Token 541: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.941850526549388e-06
    2. ' True' → logprob: -11.750007629394531
    3. '=True' → logprob: -22.12500762939453
    4. 'true' → logprob: -22.50000762939453
    5. '(True' → logprob: -23.25000762939453
    6. 'False' → logprob: -24.00000762939453
    7. '   ' → logprob: -25.25000762939453
    8. '_true' → logprob: -25.37500762939453
    9. '[' → logprob: -28.00000762939453
    10. '1' → logprob: -28.12500762939453

Token 542: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009364430792629719
    2. '
' → logprob: -4.759364604949951
    3. '		' → logprob: -8.009364128112793
    4. '               ' → logprob: -8.384364128112793
    5. '            
' → logprob: -9.634364128112793
    6. '<|end|>' → logprob: -10.509364128112793
    7. '       ' → logprob: -11.384364128112793
    8. '    
' → logprob: -11.384364128112793
    9. '                   ' → logprob: -11.384364128112793
    10. '  
' → logprob: -11.509364128112793

Token 543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033034008811227977
    2. '               ' → logprob: -8.375329971313477
    3. '       ' → logprob: -10.250329971313477
    4. 'return' → logprob: -10.625329971313477
    5. '		' → logprob: -10.875329971313477
    6. '                   ' → logprob: -11.625329971313477
    7. '            ' → logprob: -13.000329971313477
    8. '```' → logprob: -13.000329971313477
    9. '	       ' → logprob: -13.375329971313477
    10. '<|end|>' → logprob: -13.750329971313477

Token 544: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004757392220199108
    2. 'if' (adapté à ' if') → logprob: -5.379757404327393
    3. '       ' → logprob: -9.379756927490234
    4. ' if' → logprob: -10.254756927490234
    5. '   ' → logprob: -12.129756927490234
    6. 'If' → logprob: -12.754756927490234
    7. '		' → logprob: -12.879756927490234
    8. '```' → logprob: -13.004756927490234
    9. '               ' → logprob: -13.629756927490234
    10. '          ' → logprob: -14.129756927490234

Token 545: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.14277467131614685
    2. ' not' → logprob: -2.0177745819091797
    3. '   ' → logprob: -9.51777458190918
    4. '!' → logprob: -11.51777458190918
    5. '	not' → logprob: -11.64277458190918
    6. '(not' → logprob: -13.14277458190918
    7. '
' → logprob: -13.26777458190918
    8. 'updated' → logprob: -14.51777458190918
    9. 'n' → logprob: -15.01777458190918
    10. '           ' → logprob: -15.26777458190918

Token 546: ' updated' (ID: 8489)
  Prédit: 'updated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updated' → logprob: -0.01416350994259119
    2. ' updated' → logprob: -4.264163494110107
    3. '(updated' → logprob: -17.139163970947266
    4. '.updated' → logprob: -18.139163970947266
    5. ' ' → logprob: -18.639163970947266
    6. 'update' → logprob: -18.764163970947266
    7. '_updated' → logprob: -19.639163970947266
    8. '
' → logprob: -20.389163970947266
    9. 'Updated' → logprob: -20.639163970947266
    10. ' ' → logprob: -20.639163970947266

Token 547: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31421440839767456
    2. ':
' → logprob: -1.4392144680023193
    3. '               ' → logprob: -3.4392144680023193
    4. '           ' → logprob: -7.93921422958374
    5. '       ' → logprob: -10.939214706420898
    6. '                   ' → logprob: -11.439214706420898
    7. ' :
' → logprob: -11.564214706420898
    8. ':
' → logprob: -11.939214706420898
    9. ' :' → logprob: -12.064214706420898
    10. '):
' → logprob: -12.189214706420898

Token 548: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014013137842994183
    2. 'break' → logprob: -9.250140190124512
    3. ' break' → logprob: -10.875140190124512
    4. '	           ' → logprob: -11.500140190124512
    5. '           ' → logprob: -12.000140190124512
    6. '	break' → logprob: -13.125140190124512
    7. '                   ' → logprob: -13.250140190124512
    8. '       ' → logprob: -13.750140190124512
    9. '		       ' → logprob: -14.000140190124512
    10. '			' → logprob: -14.000140190124512

Token 549: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.15330663323402405
    2. ' break' → logprob: -2.153306722640991
    3. '               ' → logprob: -3.653306722640991
    4. '	break' → logprob: -9.77830696105957
    5. 'return' → logprob: -10.15330696105957
    6. '           ' → logprob: -10.90330696105957
    7. '   ' → logprob: -12.15330696105957
    8. '                   ' → logprob: -12.15330696105957
    9. '       ' → logprob: -13.15330696105957
    10. '
' → logprob: -14.77830696105957

Token 550: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026145268231630325
    2. '
' → logprob: -3.9011452198028564
    3. '<|end|>' → logprob: -5.5261454582214355
    4. '        
' → logprob: -7.0261454582214355
    5. '	' → logprob: -8.526144981384277
    6. 'return' → logprob: -8.776144981384277
    7. '<|end|>' → logprob: -9.651144981384277
    8. '		
' → logprob: -9.651144981384277
    9. '[' → logprob: -10.276144981384277
    10. '        ' → logprob: -10.776144981384277

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003576304006855935
    2. '<|end|>' → logprob: -8.625357627868652
    3. 'return' → logprob: -9.375357627868652
    4. '
' → logprob: -10.250357627868652
    5. '        
' → logprob: -10.500357627868652
    6. '   ' → logprob: -12.125357627868652
    7. '#' → logprob: -12.250357627868652
    8. '	' → logprob: -12.375357627868652
    9. '+' → logprob: -12.500357627868652
    10. 'for' → logprob: -13.125357627868652

Token 552: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2871764600276947
    2. '       ' → logprob: -2.0371763706207275
    3. '#' (adapté à ' #') → logprob: -2.4121763706207275
    4. 'return' → logprob: -4.037176609039307
    5. 'if' → logprob: -4.662176609039307
    6. 'max' → logprob: -6.662176609039307
    7. ' for' → logprob: -7.412176609039307
    8. 'self' → logprob: -8.037176132202148
    9. 'dist' → logprob: -9.037176132202148
    10. 'else' → logprob: -10.162176132202148

Token 553: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.051432665437459946
    2. '#' → logprob: -3.0514326095581055
    3. '       ' → logprob: -6.3014326095581055
    4. 'return' → logprob: -7.5514326095581055
    5. ' for' → logprob: -7.8014326095581055
    6. 'max' → logprob: -9.926432609558105
    7. ' #' → logprob: -11.801432609558105
    8. '   ' → logprob: -12.301432609558105
    9. 'For' → logprob: -12.676432609558105
    10. 'self' → logprob: -13.426432609558105

Token 554: '[i' (ID: 1768)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 555: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.377274751663208
    2. '<|end|>' → logprob: -2.002274751663208
    3. '[i' → logprob: -2.502274751663208
    4. ']' → logprob: -3.377274751663208
    5. '=' → logprob: -4.002274513244629
    6. ')' → logprob: -4.127274513244629
    7. ' represents' → logprob: -5.252274513244629
    8. ' is' → logprob: -5.502274513244629
    9. '[' → logprob: -5.877274513244629
    10. '<|end|>' → logprob: -6.377274513244629

Token 556: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41978397965431213
    2. '<|end|>' → logprob: -1.1697839498519897
    3. '=' → logprob: -3.6697840690612793
    4. '[' → logprob: -6.169784069061279
    5. ' ' → logprob: -6.919784069061279
    6. '=[' → logprob: -7.419784069061279
    7. '<|end|>' → logprob: -7.669784069061279
    8. '[:]' → logprob: -7.919784069061279
    9. ' is' → logprob: -8.044783592224121
    10. ' =[' → logprob: -8.044783592224121

Token 557: ' an' (ID: 448)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.28959137201309204
    2. ' the' → logprob: -1.5395913124084473
    3. 'max' → logprob: -4.664591312408447
    4. 'an' → logprob: -4.914591312408447
    5. 'upper' → logprob: -5.164591312408447
    6. 'maximum' → logprob: -5.289591312408447
    7. ' an' → logprob: -5.789591312408447
    8. ' upper' → logprob: -5.914591312408447
    9. ' maximum' → logprob: -6.789591312408447
    10. 'a' → logprob: -7.539591312408447

Token 558: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.2520690858364105
    2. 'upper' → logprob: -1.502069115638733
    3. ' ' → logprob: -9.627069473266602
    4. '.upper' → logprob: -10.627069473266602
    5. '   ' → logprob: -10.752069473266602
    6. '_upper' → logprob: -11.627069473266602
    7. '  ' → logprob: -12.627069473266602
    8. 'array' → logprob: -12.877069473266602
    9. ' array' → logprob: -13.127069473266602
    10. 'lower' → logprob: -13.252069473266602

Token 559: ' bound' (ID: 11608)
  Prédit: ' bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bound' → logprob: -0.09001726657152176
    2. '_bound' → logprob: -2.840017318725586
    3. 'bound' → logprob: -3.590017318725586
    4. '_' → logprob: -10.340017318725586
    5. '-bound' → logprob: -11.090017318725586
    6. '_bounds' → logprob: -11.965017318725586
    7. ' bounds' → logprob: -12.465017318725586
    8. 'bounds' → logprob: -13.715017318725586
    9. ' limit' → logprob: -13.840017318725586
    10. ' _' → logprob: -14.715017318725586

Token 560: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5230062007904053
    2. '       ' → logprob: -1.0230062007904053
    3. '<|end|>' → logprob: -3.6480062007904053
    4. 'for' → logprob: -4.273006439208984
    5. ' on' → logprob: -5.273006439208984
    6. ',' → logprob: -7.273006439208984
    7. ' of' → logprob: -7.398006439208984
    8. '<|end|>' → logprob: -7.773006439208984
    9. '[i' → logprob: -8.523006439208984
    10. '[' → logprob: -9.023006439208984

Token 561: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32512640953063965
    2. ' the' → logprob: -2.4501264095306396
    3. ' self' → logprob: -2.5751264095306396
    4. 'the' → logprob: -2.8251264095306396
    5. ' usage' → logprob: -3.0751264095306396
    6. 'usage' → logprob: -5.075126647949219
    7. 'x' → logprob: -7.575126647949219
    8. 'used' → logprob: -7.700126647949219
    9. ' how' → logprob: -8.075126647949219
    10. '0' → logprob: -8.450126647949219

Token 562: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14510111510753632
    2. '_i' → logprob: -2.0201010704040527
    3. '[' → logprob: -6.895101070404053
    4. 'i' → logprob: -7.020101070404053
    5. '[]' → logprob: -8.895101547241211
    6. '[a' → logprob: -9.020101547241211
    7. '[_' → logprob: -9.645101547241211
    8. '```' → logprob: -9.770101547241211
    9. '[:]' → logprob: -11.020101547241211
    10. '   ' → logprob: -11.145101547241211

Token 563: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45130017399787903
    2. '<|end|>' → logprob: -1.2013001441955566
    3. '
' → logprob: -2.8263001441955566
    4. '<|end|>' → logprob: -6.951300144195557
    5. ',' → logprob: -7.576300144195557
    6. '        
' → logprob: -7.701300144195557
    7. '.' → logprob: -8.201300621032715
    8. '[' → logprob: -9.076300621032715
    9. '        ' → logprob: -9.201300621032715
    10. '  
' → logprob: -9.326300621032715

Token 564: ' constraints' (ID: 31060)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.3828505277633667
    2. 'above' → logprob: -1.2578505277633667
    3. 'constraints' → logprob: -4.882850646972656
    4. 'the' → logprob: -5.007850646972656
    5. ' below' → logprob: -5.257850646972656
    6. 'tickets' → logprob: -5.257850646972656
    7. ' above' → logprob: -5.507850646972656
    8. 'self' → logprob: -5.757850646972656
    9. ' constraints' → logprob: -7.882850646972656
    10. ' the' → logprob: -8.132850646972656

Token 565: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05405886098742485
    2. '
' → logprob: -3.304058790206909
    3. '<|end|>' → logprob: -4.304059028625488
    4. 'return' → logprob: -7.304059028625488
    5. ' for' → logprob: -7.554059028625488
    6. '        
' → logprob: -7.679059028625488
    7. '  
' → logprob: -8.804059028625488
    8. ' return' → logprob: -8.804059028625488
    9. ',' → logprob: -9.304059028625488
    10. '<|end|>' → logprob: -9.679059028625488

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004134087823331356
    2. '
' → logprob: -6.379134178161621
    3. 'return' → logprob: -6.879134178161621
    4. ' for' → logprob: -7.379134178161621
    5. '<|end|>' → logprob: -8.129134178161621
    6. ' return' → logprob: -8.629134178161621
    7. 'for' → logprob: -8.754134178161621
    8. '   ' → logprob: -9.754134178161621
    9. '        
' → logprob: -10.254134178161621
    10. ' ' → logprob: -11.129134178161621

Token 567: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8782944679260254
    2. 'return' (adapté à ' return') → logprob: -1.2532944679260254
    3. ' for' → logprob: -1.7532944679260254
    4. 'for' → logprob: -2.5032944679260254
    5. ' return' → logprob: -3.1282944679260254
    6. 'max' → logprob: -10.128293991088867
    7. '   ' → logprob: -10.628293991088867
    8. ' max' → logprob: -11.378293991088867
    9. '	return' → logprob: -11.378293991088867
    10. '#' → logprob: -11.503293991088867

Token 568: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -7.517272024415433e-05
    2. ' dist' → logprob: -9.500075340270996
    3. '[' → logprob: -15.375075340270996
    4. '   ' → logprob: -18.12507438659668
    5. '	dist' → logprob: -18.25007438659668
    6. '(dist' → logprob: -20.50007438659668
    7. ' [' → logprob: -20.62507438659668
    8. '_dist' → logprob: -21.37507438659668
    9. '[-' → logprob: -21.37507438659668
    10. 'Dist' → logprob: -21.62507438659668

Token 569: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 570: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 571: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0008488174062222242
    2. '<|end|>' → logprob: -7.875848770141602
    3. ' def' → logprob: -8.125848770141602
    4. '   ' → logprob: -8.750848770141602
    5. '<|end|>' → logprob: -12.000848770141602
    6. '	def' → logprob: -12.625848770141602
    7. '```' → logprob: -13.750848770141602
    8. '#' → logprob: -14.000848770141602
    9. ')' → logprob: -14.000848770141602
    10. 'The' → logprob: -14.625848770141602

Token 572: ' _' (ID: 1175)
  Prédit: ' maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximize' → logprob: -0.3162754774093628
    2. ' optimize' → logprob: -1.4412754774093628
    3. ' def' → logprob: -4.191275596618652
    4. 'maximize' → logprob: -5.066275596618652
    5. ' max' → logprob: -5.316275596618652
    6. ' solve' → logprob: -5.441275596618652
    7. ' get' → logprob: -6.566275596618652
    8. 'def' → logprob: -7.316275596618652
    9. ' compute' → logprob: -7.816275596618652
    10. ' calculate' → logprob: -8.066275596618652

Token 573: 'adjust' (ID: 78460)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -1.149852991104126
    2. 'compute' → logprob: -1.649852991104126
    3. 'calculate' → logprob: -1.899852991104126
    4. 'solve' → logprob: -2.524852991104126
    5. 'maximize' → logprob: -2.649852991104126
    6. 'fe' → logprob: -3.274852991104126
    7. 'get' → logprob: -3.524852991104126
    8. 'find' → logprob: -3.774852991104126
    9. 'apply' → logprob: -3.899852991104126
    10. 'opt' → logprob: -4.149852752685547

Token 574: '_us' (ID: 43779)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.6301073431968689
    2. '_us' → logprob: -2.2551074028015137
    3. '_bounds' → logprob: -2.3801074028015137
    4. '(self' → logprob: -2.5051074028015137
    5. '_t' → logprob: -2.8801074028015137
    6. '_max' → logprob: -3.3801074028015137
    7. '_limits' → logprob: -3.6301074028015137
    8. '_' → logprob: -3.8801074028015137
    9. '_upper' → logprob: -4.755107402801514
    10. '_cal' → logprob: -5.005107402801514

Token 575: 'ages' (ID: 1461)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.31411758065223694
    2. 'e' → logprob: -1.3141175508499146
    3. 'ed' → logprob: -7.189117431640625
    4. 'ages' → logprob: -9.439117431640625
    5. '
' → logprob: -12.564117431640625
    6. 'sage' → logprob: -12.814117431640625
    7. 'ef' → logprob: -13.064117431640625
    8. 'a' → logprob: -13.189117431640625
    9. 'eg' → logprob: -13.439117431640625
    10. 'ge' → logprob: -13.564117431640625

Token 576: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.500001907348633
    3. ' (' → logprob: -14.250001907348633
    4. '   ' → logprob: -16.500001907348633
    5. 'self' → logprob: -16.625001907348633
    6. '       ' → logprob: -17.625001907348633
    7. '(
' → logprob: -17.750001907348633
    8. ' ' → logprob: -20.000001907348633
    9. ' self' → logprob: -20.250001907348633
    10. '(sel' → logprob: -20.500001907348633

Token 577: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1732301712036133
    2. ',' → logprob: -1.2982301712036133
    3. '):
' → logprob: -1.5482301712036133
    4. '(self' → logprob: -2.0482301712036133
    5. 'self' → logprob: -2.7982301712036133
    6. '   ' → logprob: -4.548230171203613
    7. '       ' → logprob: -6.673230171203613
    8. ')' → logprob: -7.048230171203613
    9. ')(' → logprob: -8.048230171203613
    10. ',self' → logprob: -8.173230171203613

Token 578: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.42179083824157715
    2. ')' → logprob: -2.171790838241577
    3. ' dist' → logprob: -2.171790838241577
    4. '):' → logprob: -3.296790838241577
    5. 'us' → logprob: -3.421790838241577
    6. 'max' → logprob: -4.421791076660156
    7. ' )' → logprob: -4.546791076660156
    8. '):
' → logprob: -4.796791076660156
    9. ' max' → logprob: -5.921791076660156
    10. '   ' → logprob: -6.046791076660156

Token 579: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1275428980588913
    2. '):
' → logprob: -2.1275429725646973
    3. '):
' → logprob: -7.752542972564697
    4. '   ' → logprob: -10.002542495727539
    5. ')' → logprob: -10.127542495727539
    6. ' ):' → logprob: -10.252542495727539
    7. ',' → logprob: -10.377542495727539
    8. '       ' → logprob: -11.002542495727539
    9. '):

' → logprob: -12.502542495727539
    10. ' ):
' → logprob: -12.502542495727539

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002112670335918665
    2. ' for' → logprob: -6.877112865447998
    3. 'for' → logprob: -7.877112865447998
    4. '<|end|>' → logprob: -8.62711238861084
    5. ',' → logprob: -9.37711238861084
    6. '```' → logprob: -9.37711238861084
    7. '
' → logprob: -9.50211238861084
    8. '	   ' → logprob: -10.12711238861084
    9. 'tokens' → logprob: -10.37711238861084
    10. '        
' → logprob: -10.37711238861084

Token 581: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3196486830711365
    2. ' for' → logprob: -1.4446487426757812
    3. '       ' → logprob: -3.6946487426757812
    4. 'us' → logprob: -4.819648742675781
    5. 'max' → logprob: -6.444648742675781
    6. ' usages' → logprob: -6.819648742675781
    7. 'usage' → logprob: -6.819648742675781
    8. ' max' → logprob: -7.944648742675781
    9. 'result' → logprob: -8.444648742675781
    10. ' usage' → logprob: -9.194648742675781

Token 582: ' Determine' (ID: 57076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03734327480196953
    2. 'us' → logprob: -3.7873432636260986
    3. 'adjust' → logprob: -5.287343502044678
    4. ' for' → logprob: -5.412343502044678
    5. 'max' → logprob: -6.162343502044678
    6. '   ' → logprob: -7.287343502044678
    7. 'usage' → logprob: -7.537343502044678
    8. 'result' → logprob: -7.662343502044678
    9. ' adjusted' → logprob: -8.03734302520752
    10. 'used' → logprob: -9.28734302520752

Token 583: ' maximum' (ID: 10562)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.4890083074569702
    2. 'for' → logprob: -1.6140083074569702
    3. 'usage' → logprob: -2.3640084266662598
    4. 'max' → logprob: -2.6140084266662598
    5. 'final' → logprob: -5.23900842666626
    6. '   ' → logprob: -5.61400842666626
    7. ' for' → logprob: -5.86400842666626
    8. 'result' → logprob: -6.11400842666626
    9. 'self' → logprob: -6.98900842666626
    10. 'x' → logprob: -6.98900842666626

Token 584: ' feasible' (ID: 58866)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.5670292973518372
    2. 'usage' → logprob: -1.0670292377471924
    3. 'for' → logprob: -2.6920292377471924
    4. ' for' → logprob: -4.8170294761657715
    5. '   ' → logprob: -4.9420294761657715
    6. ' usages' → logprob: -5.8170294761657715
    7. ' usage' → logprob: -6.4420294761657715
    8. 'x' → logprob: -8.442028999328613
    9. 'possible' → logprob: -8.442028999328613
    10. 'uses' → logprob: -9.192028999328613

Token 585: ' usage' (ID: 16622)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.22303253412246704
    2. 'usage' → logprob: -1.7230324745178223
    3. ' usages' → logprob: -4.473032474517822
    4. 'for' → logprob: -5.598032474517822
    5. ' usage' → logprob: -5.848032474517822
    6. '   ' → logprob: -6.598032474517822
    7. ' for' → logprob: -7.223032474517822
    8. 'values' → logprob: -7.848032474517822
    9. 'x' → logprob: -8.22303295135498
    10. ' us' → logprob: -8.97303295135498

Token 586: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5178356766700745
    2. 'for' → logprob: -1.2678356170654297
    3. '       ' → logprob: -2.1428356170654297
    4. '   ' → logprob: -5.39283561706543
    5. ' =' → logprob: -9.26783561706543
    6. 's' → logprob: -9.51783561706543
    7. 'max' → logprob: -9.64283561706543
    8. '[' → logprob: -9.64283561706543
    9. 'us' → logprob: -9.64283561706543
    10. '[]' → logprob: -9.76783561706543

Token 587: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7861824035644531
    2. '_i' → logprob: -1.1611824035644531
    3. '   ' → logprob: -2.036182403564453
    4. '       ' → logprob: -2.536182403564453
    5. '=' → logprob: -4.911182403564453
    6. 'i' → logprob: -5.411182403564453
    7. '_' → logprob: -5.786182403564453
    8. '_values' → logprob: -6.661182403564453
    9. '=[]
' → logprob: -6.911182403564453
    10. 'is' → logprob: -7.036182403564453

Token 588: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6625399589538574
    2. '=' → logprob: -0.7875399589538574
    3. 'for' → logprob: -4.412539958953857
    4. '       ' → logprob: -4.662539958953857
    5. ' for' → logprob: -5.287539958953857
    6. '=[]' → logprob: -6.912539958953857
    7. '=[]
' → logprob: -7.412539958953857
    8. 's' → logprob: -7.537539958953857
    9. '   ' → logprob: -7.787539958953857
    10. '=[' → logprob: -9.662540435791016

Token 589: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.055172812193632126
    2. ' i' → logprob: -2.930172920227051
    3. 'self' → logprob: -8.55517292022705
    4. ' self' → logprob: -10.05517292022705
    5. 'machine' → logprob: -10.55517292022705
    6. ' ' → logprob: -11.68017292022705
    7. '   ' → logprob: -11.80517292022705
    8. ' machine' → logprob: -11.80517292022705
    9. '	i' → logprob: -13.68017292022705
    10. ' in' → logprob: -13.93017292022705

Token 590: ' machine' (ID: 7342)
  Prédit: ' machine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' machine' → logprob: -0.6715115904808044
    2. 'machine' → logprob: -1.1715116500854492
    3. ' i' → logprob: -1.9215116500854492
    4. 'i' → logprob: -3.421511650085449
    5. '_machine' → logprob: -10.04651165008545
    6. '   ' → logprob: -10.67151165008545
    7. ' in' → logprob: -11.54651165008545
    8. ' range' → logprob: -11.54651165008545
    9. ' index' → logprob: -12.04651165008545
    10. 'Machine' → logprob: -12.42151165008545

Token 591: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08989938348531723
    2. ' for' → logprob: -2.8398993015289307
    3. 'for' → logprob: -3.8398993015289307
    4. 'result' → logprob: -5.58989953994751
    5. 'usage' → logprob: -7.08989953994751
    6. 'max' → logprob: -7.33989953994751
    7. ' usage' → logprob: -8.589899063110352
    8. ' result' → logprob: -8.589899063110352
    9. ' max' → logprob: -8.839899063110352
    10. ' usages' → logprob: -9.339899063110352

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030707433819770813
    2. ' for' → logprob: -3.655707359313965
    3. 'for' → logprob: -5.905707359313965
    4. '
' → logprob: -6.530707359313965
    5. ',' → logprob: -9.655707359313965
    6. '        
' → logprob: -10.030707359313965
    7. '   ' → logprob: -10.280707359313965
    8. '	for' → logprob: -10.655707359313965
    9. '	' → logprob: -10.780707359313965
    10. 'result' → logprob: -12.905707359313965

Token 593: ' #' (ID: 1069)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.32827430963516235
    2. 'usage' → logprob: -1.9532742500305176
    3. '       ' → logprob: -2.7032742500305176
    4. 'for' → logprob: -3.3282742500305176
    5. 'result' → logprob: -3.8282742500305176
    6. 'max' → logprob: -4.828274250030518
    7. 'x' → logprob: -5.578274250030518
    8. 'res' → logprob: -7.078274250030518
    9. '   ' → logprob: -8.703274726867676
    10. 'used' → logprob: -9.328274726867676

Token 594: ' x' (ID: 1215)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.11797510832548141
    2. 'for' → logprob: -2.9929749965667725
    3. 'usage' → logprob: -3.7429749965667725
    4. '       ' → logprob: -3.8679749965667725
    5. 'result' → logprob: -4.867975234985352
    6. 'x' → logprob: -5.742975234985352
    7. 'max' → logprob: -5.742975234985352
    8. '   ' → logprob: -6.992975234985352
    9. ' for' → logprob: -7.867975234985352
    10. 'res' → logprob: -8.117975234985352

Token 595: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.23814083635807037
    2. ' =' → logprob: -1.6131408214569092
    3. '=' → logprob: -5.488141059875488
    4. '   ' → logprob: -6.113141059875488
    5. '_max' → logprob: -6.488141059875488
    6. '_' → logprob: -6.863141059875488
    7. 'i' → logprob: -6.863141059875488
    8. 's' → logprob: -7.488141059875488
    9. 'max' → logprob: -7.738141059875488
    10. '_values' → logprob: -7.988141059875488

Token 596: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4743349850177765
    2. ' =' → logprob: -0.9743349552154541
    3. 's' → logprob: -8.724334716796875
    4. '=[]' → logprob: -10.474334716796875
    5. '[i' → logprob: -10.974334716796875
    6. '=[' → logprob: -11.474334716796875
    7. '=max' → logprob: -11.849334716796875
    8. 'max' → logprob: -12.349334716796875
    9. ' ' → logprob: -12.599334716796875
    10. '=[]
' → logprob: -12.724334716796875

Token 597: ' t' (ID: 260)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6935833692550659
    2. 'self' → logprob: -0.6935833692550659
    3. '       ' → logprob: -9.068583488464355
    4. '[self' → logprob: -9.068583488464355
    5. ' min' → logprob: -9.943583488464355
    6. 'min' → logprob: -10.693583488464355
    7. '	self' → logprob: -10.693583488464355
    8. ' [' → logprob: -10.943583488464355
    9. '   ' → logprob: -11.318583488464355
    10. '=self' → logprob: -11.318583488464355

Token 598: '_i' (ID: 10853)
  Prédit: 'ickets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickets' → logprob: -0.11599919945001602
    2. '[i' → logprob: -2.865999221801758
    3. 's' → logprob: -4.240999221801758
    4. '[self' → logprob: -4.490999221801758
    5. 'self' → logprob: -5.115999221801758
    6. '_i' → logprob: -5.365999221801758
    7. 'icket' → logprob: -5.490999221801758
    8. 'okens' → logprob: -5.740999221801758
    9. '       ' → logprob: -6.115999221801758
    10. 'i' → logprob: -6.115999221801758

Token 599: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.423022598028183
    2. '       ' → logprob: -1.7980226278305054
    3. ' =' → logprob: -2.173022508621216
    4. ' for' → logprob: -3.173022508621216
    5. 'for' → logprob: -4.173022747039795
    6. '        
' → logprob: -6.048022747039795
    7. '=' → logprob: -6.173022747039795
    8. '[i' → logprob: -6.298022747039795
    9. ',' → logprob: -7.798022747039795
    10. '
' → logprob: -8.298022270202637

Token 600: 'tickets' (ID: 149321)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6675889492034912
    2. ')' → logprob: -1.2925889492034912
    3. ' self' → logprob: -1.7925889492034912
    4. ')
' → logprob: -4.16758918762207
    5. ' for' → logprob: -4.66758918762207
    6. '       ' → logprob: -5.41758918762207
    7. '),' → logprob: -5.66758918762207
    8. 'for' → logprob: -5.66758918762207
    9. '
' → logprob: -6.16758918762207
    10. '   ' → logprob: -6.41758918762207

Token 601: ')
' (ID: 446)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3204483985900879
    2. ')' → logprob: -1.320448398590088
    3. ' )' → logprob: -5.820448398590088
    4. ')
' → logprob: -5.945448398590088
    5. '   ' → logprob: -7.945448398590088
    6. ' and' → logprob: -8.19544792175293
    7. '       ' → logprob: -8.32044792175293
    8. '[' → logprob: -8.57044792175293
    9. '),' → logprob: -8.57044792175293
    10. ' )
' → logprob: -9.44544792175293

Token 602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06371205300092697
    2. ' for' → logprob: -3.4387121200561523
    3. 'for' → logprob: -4.188712120056152
    4. '
' → logprob: -4.313712120056152
    5. '        
' → logprob: -7.688712120056152
    6. '   ' → logprob: -8.063712120056152
    7. ',' → logprob: -9.313712120056152
    8. '<|end|>' → logprob: -9.438712120056152
    9. '	for' → logprob: -10.063712120056152
    10. ' and' → logprob: -11.438712120056152

Token 603: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4935973882675171
    2. 'usage' → logprob: -1.743597388267517
    3. 'result' → logprob: -3.2435975074768066
    4. 'us' → logprob: -3.2435975074768066
    5. ' usage' → logprob: -3.4935975074768066
    6. ' for' → logprob: -3.6185975074768066
    7. 'max' → logprob: -3.8685975074768066
    8. 'for' → logprob: -4.118597507476807
    9. ' usages' → logprob: -4.243597507476807
    10. ' result' → logprob: -4.868597507476807

Token 604: ' x' (ID: 1215)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.7265691757202148
    2. 'for' → logprob: -1.6015691757202148
    3. 'usage' → logprob: -2.351569175720215
    4. 'max' → logprob: -2.476569175720215
    5. 'result' → logprob: -3.226569175720215
    6. 'x' → logprob: -3.601569175720215
    7. '       ' → logprob: -3.976569175720215
    8. ' for' → logprob: -4.101569175720215
    9. ' usages' → logprob: -5.226569175720215
    10. 'res' → logprob: -5.351569175720215

Token 605: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.03701615333557129
    2. ' =' → logprob: -3.5370161533355713
    3. '=' → logprob: -5.537015914916992
    4. '_' → logprob: -6.162015914916992
    5. 'i' → logprob: -8.037015914916992
    6. 's' → logprob: -8.787015914916992
    7. '_max' → logprob: -8.787015914916992
    8. '=[]' → logprob: -9.162015914916992
    9. '_=' → logprob: -9.412015914916992
    10. '[i' → logprob: -9.662015914916992

Token 606: ' <=' (ID: 5017)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4104440212249756
    2. '=' → logprob: -1.1604440212249756
    3. ' <=' → logprob: -4.035444259643555
    4. '<=' → logprob: -6.160444259643555
    5. '[i' → logprob: -7.410444259643555
    6. ' ≤' → logprob: -7.535444259643555
    7. 'max' → logprob: -7.910444259643555
    8. '=[]' → logprob: -8.035444259643555
    9. 'for' → logprob: -8.160444259643555
    10. '_max' → logprob: -8.410444259643555

Token 607: ' dist' (ID: 3601)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6824731826782227
    2. 'self' → logprob: -1.4324731826782227
    3. ' dist' → logprob: -2.0574731826782227
    4. ' [' → logprob: -3.1824731826782227
    5. 'dist' → logprob: -3.5574731826782227
    6. ' min' → logprob: -3.8074731826782227
    7. '[self' → logprob: -4.307473182678223
    8. 'min' → logprob: -5.057473182678223
    9. '[' → logprob: -5.307473182678223
    10. ' max' → logprob: -5.682473182678223

Token 608: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007679146248847246
    2. ' =' → logprob: -5.882678985595703
    3. '[' → logprob: -6.257678985595703
    4. '       ' → logprob: -6.382678985595703
    5. '   ' → logprob: -8.257678985595703
    6. '<|end|>' → logprob: -8.382678985595703
    7. '<|end|>' → logprob: -9.132678985595703
    8. '=' → logprob: -9.257678985595703
    9. '[:]' → logprob: -9.257678985595703
    10. 'i' → logprob: -9.757678985595703

Token 609: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3272762894630432
    2. ']' → logprob: -1.4522762298583984
    3. '])' → logprob: -3.2022762298583984
    4. ')' → logprob: -6.327276229858398
    5. '],' → logprob: -6.452276229858398
    6. '[' → logprob: -7.702276229858398
    7. 'i' → logprob: -8.827276229858398
    8. ']+' → logprob: -9.077276229858398
    9. '][' → logprob: -9.202276229858398
    10. ']
' → logprob: -9.827276229858398

Token 610: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32364901900291443
    2. '
' → logprob: -1.3236490488052368
    3. ' =' → logprob: -5.948648929595947
    4. '[i' → logprob: -6.198648929595947
    5. 'for' → logprob: -6.448648929595947
    6. ' for' → logprob: -6.823648929595947
    7. ',' → logprob: -7.073648929595947
    8. '=' → logprob: -8.448649406433105
    9. '        
' → logprob: -8.448649406433105
    10. '<|end|>' → logprob: -8.448649406433105

Token 611: 'constraints' (ID: 151897)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13315807282924652
    2. ' self' → logprob: -2.758157968521118
    3. ')' → logprob: -3.508157968521118
    4. 'tickets' → logprob: -4.133158206939697
    5. 'float' → logprob: -5.758158206939697
    6. '0' → logprob: -5.758158206939697
    7. ' tickets' → logprob: -6.633158206939697
    8. 't' → logprob: -6.883158206939697
    9. '[self' → logprob: -7.008158206939697
    10. 'min' → logprob: -7.258158206939697

Token 612: ' upper' (ID: 13057)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.692352294921875
    2. ')
' → logprob: -1.067352294921875
    3. '       ' → logprob: -1.942352294921875
    4. '[i' → logprob: -4.817352294921875
    5. ' if' → logprob: -6.692352294921875
    6. ' and' → logprob: -7.067352294921875
    7. ' )
' → logprob: -7.442352294921875
    8. ' )' → logprob: -7.567352294921875
    9. ',' → logprob: -8.192352294921875
    10. ')

' → logprob: -8.692352294921875

Token 613: ' bound' (ID: 11608)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.3966202735900879
    2. ' bound' → logprob: -1.396620273590088
    3. 'bound' → logprob: -3.146620273590088
    4. ')' → logprob: -3.396620273590088
    5. ' bounds' → logprob: -6.896620273590088
    6. '       ' → logprob: -6.896620273590088
    7. '_bounds' → logprob: -7.521620273590088
    8. ')
' → logprob: -8.27161979675293
    9. '   ' → logprob: -8.77161979675293
    10. '
' → logprob: -9.64661979675293

Token 614: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7451348304748535
    2. ')
' → logprob: -0.7451348304748535
    3. '       ' → logprob: -2.9951348304748535
    4. ')
' → logprob: -8.120134353637695
    5. ' )
' → logprob: -8.870134353637695
    6. ' )' → logprob: -9.620134353637695
    7. ')

' → logprob: -9.620134353637695
    8. '),' → logprob: -10.620134353637695
    9. '   ' → logprob: -11.620134353637695
    10. ',' → logprob: -11.745134353637695

Token 615: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5771005153656006
    2. '       ' → logprob: -0.8271005153656006
    3. 'for' → logprob: -7.95210075378418
    4. '        
' → logprob: -8.07710075378418
    5. '   ' → logprob: -8.70210075378418
    6. ' for' → logprob: -8.82710075378418
    7. '
' → logprob: -9.20210075378418
    8. '```' → logprob: -10.32710075378418
    9. '  
' → logprob: -11.32710075378418
    10. ',' → logprob: -11.82710075378418

Token 616: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4976663589477539
    2. 'usage' → logprob: -1.497666358947754
    3. ' usage' → logprob: -3.122666358947754
    4. ' usages' → logprob: -3.122666358947754
    5. 'result' → logprob: -3.372666358947754
    6. 'us' → logprob: -4.122666358947754
    7. 'max' → logprob: -4.997666358947754
    8. 'x' → logprob: -5.247666358947754
    9. ' result' → logprob: -5.372666358947754
    10. 'for' → logprob: -5.497666358947754

Token 617: ' x' (ID: 1215)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.7215310335159302
    2. 'usage' → logprob: -1.7215310335159302
    3. 'result' → logprob: -2.3465309143066406
    4. '       ' → logprob: -2.4715309143066406
    5. 'for' → logprob: -3.0965309143066406
    6. 'max' → logprob: -3.5965309143066406
    7. ' usages' → logprob: -3.7215309143066406
    8. ' result' → logprob: -4.471530914306641
    9. 'x' → logprob: -4.471530914306641
    10. ' usage' → logprob: -4.596530914306641

Token 618: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.037015918642282486
    2. '_' → logprob: -4.037015914916992
    3. ' =' → logprob: -4.412015914916992
    4. '=' → logprob: -5.412015914916992
    5. '   ' → logprob: -7.287015914916992
    6. 'i' → logprob: -7.537015914916992
    7. '=[]' → logprob: -8.287015914916992
    8. 'for' → logprob: -9.287015914916992
    9. '_=' → logprob: -9.287015914916992
    10. '=[]
' → logprob: -9.787015914916992

Token 619: ' >=' (ID: 5064)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4295702576637268
    2. '=' → logprob: -1.054570198059082
    3. ' <=' → logprob: -7.554570198059082
    4. 's' → logprob: -9.554570198059082
    5. '<=' → logprob: -9.554570198059082
    6. '=[]' → logprob: -10.054570198059082
    7. 'max' → logprob: -10.429570198059082
    8. ' ≤' → logprob: -10.679570198059082
    9. 'for' → logprob: -11.304570198059082
    10. 'def' → logprob: -11.554570198059082

Token 620: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020551230758428574
    2. ' ' → logprob: -3.8955512046813965
    3. '   ' → logprob: -11.770551681518555
    4. ' ' → logprob: -14.020551681518555
    5. '       ' → logprob: -14.395551681518555
    6. '  ' → logprob: -15.770551681518555
    7. '           ' → logprob: -16.520551681518555
    8. '     ' → logprob: -17.395551681518555
    9. '    ' → logprob: -17.458051681518555
    10. '
' → logprob: -17.895551681518555

Token 621: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.500085830688477
    4. ' ' → logprob: -18.625085830688477
    5. '```' → logprob: -18.750085830688477
    6. '۰' → logprob: -19.500085830688477
    7. '  ' → logprob: -19.875085830688477
    8. '[' → logprob: -19.937585830688477
    9. 'zero' → logprob: -20.062585830688477
    10. '
' → logprob: -20.125085830688477

Token 622: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003010030835866928
    2. '
' → logprob: -6.253009796142578
    3. 'result' → logprob: -8.003009796142578
    4. ' for' → logprob: -8.628009796142578
    5. '        
' → logprob: -9.003009796142578
    6. 'for' → logprob: -9.003009796142578
    7. '   ' → logprob: -9.128009796142578
    8. 'usage' → logprob: -9.503009796142578
    9. 'max' → logprob: -10.503009796142578
    10. '<|end|>' → logprob: -11.253009796142578

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023002512753009796
    2. '
' → logprob: -6.252300262451172
    3. 'for' → logprob: -8.877300262451172
    4. ' for' → logprob: -9.252300262451172
    5. '   ' → logprob: -9.377300262451172
    6. '        
' → logprob: -10.877300262451172
    7. '	' → logprob: -11.377300262451172
    8. 'def' → logprob: -12.627300262451172
    9. 'result' → logprob: -12.752300262451172
    10. '	   ' → logprob: -13.002300262451172

Token 624: ' usage' (ID: 16622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21967948973178864
    2. 'usage' (adapté à ' usage') → logprob: -2.219679594039917
    3. 'result' → logprob: -3.594679594039917
    4. ' usages' → logprob: -4.094679355621338
    5. ' usage' → logprob: -4.219679355621338
    6. 'us' → logprob: -4.469679355621338
    7. 'for' → logprob: -5.094679355621338
    8. ' for' → logprob: -5.469679355621338
    9. ' result' → logprob: -5.969679355621338
    10. 'max' → logprob: -6.344679355621338

Token 625: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029827317222952843
    2. '=' → logprob: -3.529827356338501
    3. 's' → logprob: -9.529827117919922
    4. '[' → logprob: -13.529827117919922
    5. ' ' → logprob: -13.529827117919922
    6. '   ' → logprob: -15.029827117919922
    7. ' =
' → logprob: -15.029827117919922
    8. ' =[' → logprob: -15.029827117919922
    9. '_' → logprob: -15.654827117919922
    10. '	' → logprob: -16.529827117919922

Token 626: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07992944121360779
    2. '[]' → logprob: -2.5799293518066406
    3. ' [' → logprob: -7.079929351806641
    4. '[i' → logprob: -9.82992935180664
    5. '[]
' → logprob: -9.95492935180664
    6. ' []' → logprob: -10.20492935180664
    7. '[min' → logprob: -10.20492935180664
    8. '[int' → logprob: -12.07992935180664
    9. '[max' → logprob: -12.45492935180664
    10. '[
' → logprob: -12.45492935180664

Token 627: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.43166759610176086
    2. '0' → logprob: -1.0566675662994385
    3. 'max' → logprob: -6.306667804718018
    4. ' min' → logprob: -6.806667804718018
    5. ' ' → logprob: -11.18166732788086
    6. '	min' → logprob: -11.93166732788086
    7. '   ' → logprob: -12.80666732788086
    8. ' max' → logprob: -13.30666732788086
    9. '[min' → logprob: -13.55666732788086
    10. 'int' → logprob: -13.80666732788086

Token 628: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1463593691587448
    2. ']*' → logprob: -2.396359443664551
    3. ' for' → logprob: -3.271359443664551
    4. 'for' → logprob: -5.021359443664551
    5. ' ]' → logprob: -7.646359443664551
    6. '	for' → logprob: -10.64635944366455
    7. '   ' → logprob: -11.02135944366455
    8. '       ' → logprob: -11.52135944366455
    9. ',' → logprob: -11.89635944366455
    10. ']*(' → logprob: -12.27135944366455

Token 629: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1498752236366272
    2. 'for' → logprob: -2.0248751640319824
    3. '
' → logprob: -5.524875164031982
    4. ']' → logprob: -6.649875164031982
    5. ']*' → logprob: -7.774875164031982
    6. '	for' → logprob: -7.774875164031982
    7. '       ' → logprob: -7.774875164031982
    8. '[i' → logprob: -8.39987564086914
    9. '<|end|>' → logprob: -9.02487564086914
    10. '   ' → logprob: -9.77487564086914

Token 630: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.0033853515051305e-05
    2. ' self' → logprob: -9.750060081481934
    3. '       ' → logprob: -13.625060081481934
    4. '   ' → logprob: -15.000060081481934
    5. '(self' → logprob: -16.375059127807617
    6. 'len' → logprob: -16.875059127807617
    7. '
' → logprob: -17.875059127807617
    8. '           ' → logprob: -18.000059127807617
    9. '     ' → logprob: -20.000059127807617
    10. '  ' → logprob: -20.375059127807617

Token 631: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.00011427151912357658
    2. '.' → logprob: -10.000114440917969
    3. 'N' → logprob: -10.250114440917969
    4. '.M' → logprob: -10.500114440917969
    5. ' .' → logprob: -12.500114440917969
    6. '._' → logprob: -13.500114440917969
    7. 'self' → logprob: -16.37511444091797
    8. '.
' → logprob: -16.50011444091797
    9. '.I' → logprob: -16.50011444091797
    10. '<N' → logprob: -16.50011444091797

Token 632: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0008673948468640447
    2. '       ' → logprob: -7.6258673667907715
    3. ' for' → logprob: -8.87586784362793
    4. '<|end|>' → logprob: -9.50086784362793
    5. '
' → logprob: -9.62586784362793
    6. 'for' → logprob: -10.12586784362793
    7. '        
' → logprob: -10.87586784362793
    8. ' 
' → logprob: -11.50086784362793
    9. '    
' → logprob: -11.87586784362793
    10. '	for' → logprob: -12.00086784362793

Token 633: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000241801084484905
    2. ' for' → logprob: -9.000242233276367
    3. '
' → logprob: -9.875242233276367
    4. '	' → logprob: -10.625242233276367
    5. 'for' → logprob: -11.125242233276367
    6. '   ' → logprob: -12.000242233276367
    7. '        
' → logprob: -12.125242233276367
    8. '	for' → logprob: -12.125242233276367
    9. '<|end|>' → logprob: -12.625242233276367
    10. '	   ' → logprob: -13.000242233276367

Token 634: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015063497237861156
    2. '       ' → logprob: -4.265063285827637
    3. ' for' → logprob: -7.015063285827637
    4. '	for' → logprob: -14.015063285827637
    5. '   ' → logprob: -14.515063285827637
    6. '```' → logprob: -17.515064239501953
    7. '
' → logprob: -17.890064239501953
    8. '           ' → logprob: -19.765064239501953
    9. '	' → logprob: -20.015064239501953
    10. '        
' → logprob: -20.140064239501953

Token 635: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10020763427019119
    2. ' i' → logprob: -2.350207567214966
    3. '	i' → logprob: -13.975207328796387
    4. '   ' → logprob: -16.475208282470703
    5. ' ' → logprob: -17.475208282470703
    6. ' in' → logprob: -18.225208282470703
    7. '
' → logprob: -18.975208282470703
    8. ' ' → logprob: -19.725208282470703
    9. '  ' → logprob: -19.850208282470703
    10. '[i' → logprob: -19.975208282470703

Token 636: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02978474460542202
    2. 'in' → logprob: -3.529784679412842
    3. ' ' → logprob: -11.77978515625
    4. '	in' → logprob: -12.02978515625
    5. '<|end|>' → logprob: -12.27978515625
    6. '   ' → logprob: -12.77978515625
    7. ',' → logprob: -13.15478515625
    8. '[' → logprob: -13.40478515625
    9. '    ' → logprob: -13.90478515625
    10. '  ' → logprob: -14.09228515625

Token 637: ' machine' (ID: 7342)
  Prédit: 'machine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'machine' → logprob: -0.04905828461050987
    2. 'm' → logprob: -3.299058198928833
    3. ' machine' → logprob: -4.549058437347412
    4. ' m' → logprob: -7.924058437347412
    5. 'mach' → logprob: -11.299057960510254
    6. '_machine' → logprob: -13.674057960510254
    7. '	m' → logprob: -13.924057960510254
    8. ' mach' → logprob: -14.174057960510254
    9. '   ' → logprob: -14.549057960510254
    10. 'Machine' → logprob: -14.924057960510254

Token 638: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005582740413956344
    2. 'in' → logprob: -7.500558376312256
    3. ' ' → logprob: -13.125557899475098
    4. '	in' → logprob: -13.125557899475098
    5. '   ' → logprob: -15.000557899475098
    6. '<|end|>' → logprob: -15.500557899475098
    7. ',' → logprob: -15.875557899475098
    8. '  ' → logprob: -16.000558853149414
    9. 'import' → logprob: -16.375558853149414
    10. ' ' → logprob: -16.625558853149414

Token 639: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.7809667587280273
    2. 'enumer' → logprob: -0.7809667587280273
    3. 'self' → logprob: -2.5309667587280273
    4. ' self' → logprob: -5.405966758728027
    5. '(self' → logprob: -13.780966758728027
    6. '   ' → logprob: -15.030966758728027
    7. ' ' → logprob: -15.280966758728027
    8. '.enumer' → logprob: -16.030967712402344
    9. '	self' → logprob: -16.655967712402344
    10. ' enumer' → logprob: -16.780967712402344

Token 640: '(self' (ID: 2402)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2134731560945511
    2. 'self' → logprob: -1.9634732007980347
    3. '(self' → logprob: -2.963473081588745
    4. ' (' → logprob: -8.463473320007324
    5. '	self' → logprob: -13.213473320007324
    6. '(' → logprob: -13.588473320007324
    7. 's' → logprob: -13.838473320007324
    8. ',self' → logprob: -15.463473320007324
    9. '=self' → logprob: -15.588473320007324
    10. '[self' → logprob: -15.588473320007324

Token 641: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -2.1008713702030946e-06
    2. 'machines' → logprob: -13.250001907348633
    3. '.machine' → logprob: -16.000001907348633
    4. '.' → logprob: -16.250001907348633
    5. 'Machines' → logprob: -17.000001907348633
    6. ' machines' → logprob: -18.500001907348633
    7. ' .' → logprob: -18.750001907348633
    8. ').' → logprob: -19.000001907348633
    9. '	m' → logprob: -19.250001907348633
    10. '.м' → logprob: -21.000001907348633

Token 642: 'achines' (ID: 180949)
  Prédit: 'achines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achines' → logprob: -1.9623810658231378e-05
    2. 'ach' → logprob: -11.375020027160645
    3. 'achine' → logprob: -11.750020027160645
    4. 'a' → logprob: -15.875020027160645
    5. '   ' → logprob: -16.750019073486328
    6. 'ac' → logprob: -17.250019073486328
    7. 'machines' → logprob: -18.000019073486328
    8. 'aches' → logprob: -18.500019073486328
    9. 'achs' → logprob: -18.750019073486328
    10. 'achi' → logprob: -19.000019073486328

Token 643: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005336097441613674
    2. '):' → logprob: -5.255336284637451
    3. '):
' → logprob: -9.630335807800293
    4. '       ' → logprob: -10.880335807800293
    5. ' ):
' → logprob: -11.380335807800293
    6. ':' → logprob: -13.130335807800293
    7. '   ' → logprob: -13.255335807800293
    8. ':
' → logprob: -13.880335807800293
    9. '):

' → logprob: -14.255335807800293
    10. '():
' → logprob: -14.630335807800293

Token 644: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3493700325489044
    2. '       ' → logprob: -1.224370002746582
    3. '```' → logprob: -8.474370002746582
    4. '
' → logprob: -8.849370002746582
    5. '            
' → logprob: -8.974370002746582
    6. '        
' → logprob: -9.224370002746582
    7. ',' → logprob: -9.724370002746582
    8. 'usage' → logprob: -9.849370002746582
    9. ' usage' → logprob: -9.974370002746582
    10. '   ' → logprob: -10.474370002746582

Token 645: ' #' (ID: 1069)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.09741590172052383
    2. ' usage' → logprob: -2.4724159240722656
    3. 'max' → logprob: -5.347415924072266
    4. '           ' → logprob: -6.222415924072266
    5. ' max' → logprob: -6.722415924072266
    6. 'upper' → logprob: -8.222415924072266
    7. 'limit' → logprob: -10.097415924072266
    8. '   ' → logprob: -10.347415924072266
    9. 'use' → logprob: -10.472415924072266
    10. '       ' → logprob: -10.597415924072266

Token 646: ' Because' (ID: 13602)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.044869571924209595
    2. 'max' → logprob: -3.2948696613311768
    3. 'upper' → logprob: -5.794869422912598
    4. ' usage' → logprob: -5.919869422912598
    5. ' max' → logprob: -7.794869422912598
    6. '   ' → logprob: -8.919869422912598
    7. 'allowed' → logprob: -9.044869422912598
    8. 'possible' → logprob: -9.544869422912598
    9. 'limit' → logprob: -9.794869422912598
    10. 'lower' → logprob: -9.794869422912598

Token 647: ' dist' (ID: 3601)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.11298022419214249
    2. ' usage' → logprob: -2.2379801273345947
    3. 'dist' → logprob: -9.237979888916016
    4. ' dist' → logprob: -10.612979888916016
    5. '           ' → logprob: -10.987979888916016
    6. 'max' → logprob: -11.362979888916016
    7. ' max' → logprob: -13.362979888916016
    8. '   ' → logprob: -13.862979888916016
    9. 'x' → logprob: -14.237979888916016
    10. '       ' → logprob: -14.487979888916016

Token 648: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0031108111143112183
    2. '_i' → logprob: -6.628110885620117
    3. 'i' → logprob: -7.128110885620117
    4. 'usage' → logprob: -8.628110885620117
    5. '_usage' → logprob: -8.753110885620117
    6. '_upper' → logprob: -9.003110885620117
    7. '_value' → logprob: -9.253110885620117
    8. '_val' → logprob: -9.378110885620117
    9. '[' → logprob: -10.128110885620117
    10. 'bound' → logprob: -10.253110885620117

Token 649: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05134548246860504
    2. '[i' → logprob: -4.051345348358154
    3. ' ]' → logprob: -4.176345348358154
    4. ' is' → logprob: -5.176345348358154
    5. ' <=' → logprob: -5.551345348358154
    6. ']<=' → logprob: -6.301345348358154
    7. '[' → logprob: -6.676345348358154
    8. ')' → logprob: -6.926345348358154
    9. '<=' → logprob: -7.051345348358154
    10. ']>=' → logprob: -7.426345348358154

Token 650: ' might' (ID: 3572)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35684576630592346
    2. ' =' → logprob: -1.356845736503601
    3. ' is' → logprob: -3.7318458557128906
    4. '<=' → logprob: -4.856845855712891
    5. ' may' → logprob: -5.981845855712891
    6. 'is' → logprob: -5.981845855712891
    7. '>=' → logprob: -6.231845855712891
    8. ' can' → logprob: -6.981845855712891
    9. ' might' → logprob: -7.231845855712891
    10. ' could' → logprob: -8.10684585571289

Token 651: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0019693158101290464
    2. 'be' → logprob: -7.001969337463379
    3. '<' → logprob: -7.251969337463379
    4. ' <' → logprob: -9.376969337463379
    5. ' not' → logprob: -9.376969337463379
    6. '>' → logprob: -9.501969337463379
    7. ' have' → logprob: -10.251969337463379
    8. ' is' → logprob: -10.376969337463379
    9. 'not' → logprob: -12.126969337463379
    10. 'is' → logprob: -12.376969337463379

Token 652: ' +' (ID: 659)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00921030342578888
    2. ' float' → logprob: -5.384210109710693
    3. 'inf' → logprob: -6.259210109710693
    4. 'negative' → logprob: -6.634210109710693
    5. '<float' → logprob: -7.009210109710693
    6. '=float' → logprob: -9.134210586547852
    7. ',float' → logprob: -9.759210586547852
    8. 'positive' → logprob: -9.884210586547852
    9. ' negative' → logprob: -10.009210586547852
    10. 'in' → logprob: -10.134210586547852

Token 653: 'inf' (ID: 22226)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.11768831312656403
    2. 'machine' → logprob: -2.2426884174346924
    3. 'inf' → logprob: -5.617688179016113
    4. 'int' → logprob: -7.492688179016113
    5. 'math' → logprob: -8.242688179016113
    6. 'self' → logprob: -9.117688179016113
    7. '=float' → logprob: -9.867688179016113
    8. '0' → logprob: -9.992688179016113
    9. ' float' → logprob: -10.242688179016113
    10. '1' → logprob: -10.742688179016113

Token 654: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6722345948219299
    2. '           ' → logprob: -1.2972345352172852
    3. ' or' → logprob: -1.9222345352172852
    4. ' and' → logprob: -3.047234535217285
    5. ' if' → logprob: -3.922234535217285
    6. 'and' → logprob: -7.422234535217285
    7. ',
' → logprob: -7.672234535217285
    8. '               ' → logprob: -7.797234535217285
    9. ' ,' → logprob: -8.047234535217285
    10. ':' → logprob: -8.422234535217285

Token 655: ' invalid' (ID: 15796)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.11729615181684494
    2. 'negative' → logprob: -2.9922962188720703
    3. 'None' → logprob: -3.8672962188720703
    4. '0' → logprob: -4.11729621887207
    5. '<float' → logprob: -4.86729621887207
    6. 'less' → logprob: -4.99229621887207
    7. ' float' → logprob: -6.24229621887207
    8. '-' → logprob: -6.36729621887207
    9. '<' → logprob: -7.11729621887207
    10. ' None' → logprob: -7.36729621887207

Token 656: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4241955280303955
    2. '           ' → logprob: -1.4241955280303955
    3. ' or' → logprob: -3.2991955280303955
    4. ' if' → logprob: -3.2991955280303955
    5. ':' → logprob: -3.6741955280303955
    6. ':
' → logprob: -5.799195289611816
    7. ' and' → logprob: -7.049195289611816
    8. ' ,' → logprob: -7.799195289611816
    9. 'if' → logprob: -7.924195289611816
    10. ',
' → logprob: -8.174195289611816

Token 657: 'no' (ID: 1750)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.21647949516773224
    2. '),' → logprob: -3.466479539871216
    3. 'dist' → logprob: -3.466479539871216
    4. 'min' → logprob: -3.591479539871216
    5. 'machine' → logprob: -3.591479539871216
    6. '=float' → logprob: -4.216479301452637
    7. ')' → logprob: -4.466479301452637
    8. '<float' → logprob: -4.841479301452637
    9. 'import' → logprob: -4.966479301452637
    10. ' float' → logprob: -5.091479301452637

Token 658: ' feasible' (ID: 58866)
  Prédit: ' constraint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' constraint' → logprob: -0.8763272166252136
    2. ' constraints' → logprob: -1.1263272762298584
    3. 'constraint' → logprob: -2.2513272762298584
    4. ' upper' → logprob: -2.6263272762298584
    5. 'constraints' → logprob: -3.7513272762298584
    6. ' limit' → logprob: -4.376327037811279
    7. 'limit' → logprob: -4.376327037811279
    8. 'upper' → logprob: -4.501327037811279
    9. ')' → logprob: -4.626327037811279
    10. '),' → logprob: -6.376327037811279

Token 659: ' solution' (ID: 7578)
  Prédit: ' upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' upper' → logprob: -1.5261942148208618
    2. 'upper' → logprob: -1.5261942148208618
    3. '),' → logprob: -1.7761942148208618
    4. ' bound' → logprob: -2.4011940956115723
    5. ' constraint' → logprob: -2.9011940956115723
    6. 'bound' → logprob: -3.0261940956115723
    7. 'constraint' → logprob: -3.0261940956115723
    8. ' constraints' → logprob: -3.2761940956115723
    9. ' path' → logprob: -4.026194095611572
    10. 'constraints' → logprob: -4.026194095611572

Token 660: ' means' (ID: 4748)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2953951358795166
    2. ' or' → logprob: -1.7953951358795166
    3. '           ' → logprob: -2.9203951358795166
    4. '):
' → logprob: -4.0453948974609375
    5. ')' → logprob: -5.0453948974609375
    6. ' if' → logprob: -5.1703948974609375
    7. '):' → logprob: -5.9203948974609375
    8. ',' → logprob: -6.1703948974609375
    9. '),
' → logprob: -8.170394897460938
    10. '):

' → logprob: -8.295394897460938

Token 661: ' -' (ID: 533)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2706671357154846
    2. ' dist' → logprob: -1.5206670761108398
    3. 'False' → logprob: -4.27066707611084
    4. ' False' → logprob: -5.77066707611084
    5. ' usage' → logprob: -7.64566707611084
    6. 'True' → logprob: -8.52066707611084
    7. 'usage' → logprob: -8.64566707611084
    8. '   ' → logprob: -8.77066707611084
    9. ')' → logprob: -9.39566707611084
    10. ' True' → logprob: -9.52066707611084

Token 662: 'inf' (ID: 22226)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.48649948835372925
    2. 'dist' → logprob: -1.236499547958374
    3. ' dist' → logprob: -2.986499547958374
    4. 'inf' → logprob: -3.361499547958374
    5. ' float' → logprob: -5.361499309539795
    6. '1' → logprob: -6.611499309539795
    7. '=float' → logprob: -7.361499309539795
    8. 'math' → logprob: -7.611499309539795
    9. ')' → logprob: -7.611499309539795
    10. '(float' → logprob: -8.361499786376953

Token 663: '?),' (ID: 95807)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4855600595474243
    2. ' or' → logprob: -0.9855600595474243
    3. ')' → logprob: -5.610559940338135
    4. ' ),' → logprob: -6.235559940338135
    5. '           ' → logprob: -6.360559940338135
    6. 'or' → logprob: -6.735559940338135
    7. ' if' → logprob: -6.735559940338135
    8. ',' → logprob: -7.485559940338135
    9. ' in' → logprob: -8.485560417175293
    10. '):
' → logprob: -8.860560417175293

Token 664: ' clamp' (ID: 76503)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.8482303619384766
    2. 'usage' → logprob: -0.8482303619384766
    3. ' max' → logprob: -2.5982303619384766
    4. 'max' → logprob: -3.0982303619384766
    5. '           ' → logprob: -3.9732303619384766
    6. ' upper' → logprob: -6.473230361938477
    7. 'upper' → logprob: -6.473230361938477
    8. 'limit' → logprob: -7.098230361938477
    9. ' limit' → logprob: -8.348230361938477
    10. ' if' → logprob: -8.598230361938477

Token 665: ' it' (ID: 480)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.3909825384616852
    2. 'usage' → logprob: -1.2659825086593628
    3. ' to' → logprob: -4.265982627868652
    4. '           ' → logprob: -4.515982627868652
    5. 'max' → logprob: -5.640982627868652
    6. '(' → logprob: -6.515982627868652
    7. '0' → logprob: -6.515982627868652
    8. ' =' → logprob: -6.640982627868652
    9. ' max' → logprob: -6.640982627868652
    10. '=' → logprob: -6.765982627868652

Token 666: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2783059775829315
    2. 'usage' → logprob: -2.403306007385254
    3. '[i' → logprob: -2.903306007385254
    4. ' to' → logprob: -3.028306007385254
    5. ' usage' → logprob: -4.153306007385254
    6. 'to' → logprob: -5.028306007385254
    7. 'max' → logprob: -5.278306007385254
    8. ',' → logprob: -5.653306007385254
    9. ' if' → logprob: -5.903306007385254
    10. '[' → logprob: -5.903306007385254

Token 667: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002063780091702938
    2. 'usage' → logprob: -6.377063751220703
    3. ' usage' → logprob: -8.252063751220703
    4. '            
' → logprob: -10.627063751220703
    5. '
' → logprob: -11.002063751220703
    6. ',' → logprob: -11.127063751220703
    7. '```' → logprob: -11.377063751220703
    8. 'max' → logprob: -11.627063751220703
    9. '       ' → logprob: -12.002063751220703
    10. ' if' → logprob: -13.002063751220703

Token 668: ' upper' (ID: 13057)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7920932769775391
    2. 'usage' → logprob: -1.292093276977539
    3. ' max' → logprob: -1.792093276977539
    4. '           ' → logprob: -3.167093276977539
    5. ' usage' → logprob: -3.292093276977539
    6. 'upper' (adapté à ' upper') → logprob: -3.917093276977539
    7. ' upper' → logprob: -5.792093276977539
    8. 'limit' → logprob: -6.417093276977539
    9. 'use' → logprob: -8.167093276977539
    10. 'if' → logprob: -8.167093276977539

Token 669: '_bound' (ID: 47558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27533775568008423
    2. '=' → logprob: -1.9003376960754395
    3. '_bound' → logprob: -2.4003376960754395
    4. '_' → logprob: -8.275338172912598
    5. '_limit' → logprob: -8.900338172912598
    6. 'bound' → logprob: -10.775338172912598
    7. '_usage' → logprob: -11.025338172912598
    8. ' bound' → logprob: -11.150338172912598
    9. 'Bound' → logprob: -11.525338172912598
    10. '_bounds' → logprob: -11.775338172912598

Token 670: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. '=int' → logprob: -16.451414108276367
    4. '=max' → logprob: -16.576414108276367
    5. 's' → logprob: -17.326414108276367
    6. '   ' → logprob: -17.451414108276367
    7. '＝' → logprob: -17.951414108276367
    8. ' ' → logprob: -18.201414108276367
    9. ',' → logprob: -18.826414108276367
    10. ' =
' → logprob: -18.826414108276367

Token 671: ' dist' (ID: 3601)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3878493309020996
    2. ' min' → logprob: -1.1378493309020996
    3. 'max' → logprob: -7.5128493309021
    4. 'machine' → logprob: -8.387849807739258
    5. ' max' → logprob: -9.012849807739258
    6. ' machine' → logprob: -9.762849807739258
    7. '	min' → logprob: -11.887849807739258
    8. 'self' → logprob: -12.262849807739258
    9. '[min' → logprob: -13.137849807739258
    10. ' self' → logprob: -13.137849807739258

Token 672: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -11.875008583068848
    3. ' [' → logprob: -14.375008583068848
    4. '[min' → logprob: -15.125008583068848
    5. '[
' → logprob: -15.500008583068848
    6. '```' → logprob: -16.00000762939453
    7. 'i' → logprob: -16.50000762939453
    8. ')[' → logprob: -16.87500762939453
    9. '[I' → logprob: -17.12500762939453
    10. '
' → logprob: -17.62500762939453

Token 673: ']
' (ID: 1592)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02128998003900051
    2. 'if' → logprob: -3.8962900638580322
    3. ')' → logprob: -7.271289825439453
    4. ',' → logprob: -10.646289825439453
    5. ' )' → logprob: -11.646289825439453
    6. ']' → logprob: -12.021289825439453
    7. '	if' → logprob: -12.146289825439453
    8. ' ' → logprob: -12.896289825439453
    9. '           ' → logprob: -13.146289825439453
    10. '
' → logprob: -14.146289825439453

Token 674: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18766741454601288
    2. ' if' → logprob: -1.9376673698425293
    3. ' =' → logprob: -3.8126673698425293
    4. 'if' → logprob: -5.812667369842529
    5. '
' → logprob: -7.062667369842529
    6. '=' → logprob: -7.187667369842529
    7. '            
' → logprob: -8.937667846679688
    8. ',' → logprob: -9.437667846679688
    9. '       ' → logprob: -10.312667846679688
    10. '               ' → logprob: -10.437667846679688

Token 675: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6923243403434753
    2. 'if' (adapté à ' if') → logprob: -1.3173243999481201
    3. '           ' → logprob: -2.44232439994812
    4. 'usage' → logprob: -2.69232439994812
    5. ' usage' → logprob: -2.81732439994812
    6. 'upper' → logprob: -4.317324161529541
    7. ' upper' → logprob: -5.692324161529541
    8. '            
' → logprob: -8.5673246383667
    9. '
' → logprob: -9.3173246383667
    10. 'max' → logprob: -9.4423246383667

Token 676: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.3868757486343384
    2. ' upper' → logprob: -1.1368757486343384
    3. ' isinstance' → logprob: -13.261876106262207
    4. 'dist' → logprob: -14.511876106262207
    5. 'is' → logprob: -14.636876106262207
    6. '   ' → logprob: -14.886876106262207
    7. ' ' → logprob: -14.886876106262207
    8. ' math' → logprob: -15.261876106262207
    9. 'math' → logprob: -15.761876106262207
    10. ' dist' → logprob: -15.886876106262207

Token 677: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -7.64839569455944e-05
    2. 'bound' → logprob: -9.500076293945312
    3. 'Bound' → logprob: -14.000076293945312
    4. '_bounds' → logprob: -15.125076293945312
    5. 'bounded' → logprob: -15.625076293945312
    6. ' bound' → logprob: -16.250076293945312
    7. 'b' → logprob: -16.375076293945312
    8. '[i' → logprob: -16.750076293945312
    9. '-bound' → logprob: -17.000076293945312
    10. '_b' → logprob: -17.375076293945312

Token 678: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5157513618469238
    2. ' >' → logprob: -1.3907513618469238
    3. '<' → logprob: -2.140751361846924
    4. ' <' → logprob: -3.515751361846924
    5. ' ==' → logprob: -5.640751361846924
    6. ' is' → logprob: -6.390751361846924
    7. '==' → logprob: -6.515751361846924
    8. 'is' → logprob: -10.015750885009766
    9. ' ' → logprob: -11.765750885009766
    10. ' >
' → logprob: -14.015750885009766

Token 679: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.002058903919532895
    2. ' float' → logprob: -6.252058982849121
    3. '-inf' → logprob: -10.002058982849121
    4. '	float' → logprob: -10.627058982849121
    5. '-' → logprob: -10.877058982849121
    6. '-f' → logprob: -11.002058982849121
    7. '=float' → logprob: -11.752058982849121
    8. ' -' → logprob: -11.752058982849121
    9. 'inf' → logprob: -12.252058982849121
    10. ' ' → logprob: -13.252058982849121

Token 680: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -12.625009536743164
    3. '('-' → logprob: -12.875009536743164
    4. ''in' → logprob: -13.000009536743164
    5. ''s' → logprob: -14.750009536743164
    6. ''' → logprob: -15.125009536743164
    7. '("' → logprob: -15.625009536743164
    8. ' ('' → logprob: -16.000009536743164
    9. '(in' → logprob: -17.000009536743164
    10. 'inf' → logprob: -17.125009536743164

Token 681: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0011264061322435737
    2. ''in' → logprob: -6.876126289367676
    3. ''' → logprob: -9.501126289367676
    4. '-inf' → logprob: -11.126126289367676
    5. '('' → logprob: -14.251126289367676
    6. '')' → logprob: -14.376126289367676
    7. ' inf' → logprob: -14.376126289367676
    8. ''s' → logprob: -15.251126289367676
    9. '.inf' → logprob: -15.251126289367676
    10. ''inc' → logprob: -15.251126289367676

Token 682: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.9082993865013123
    2. ''):' → logprob: -1.033299446105957
    3. '')' → logprob: -2.158299446105957
    4. ')' → logprob: -2.658299446105957
    5. '):' → logprob: -3.283299446105957
    6. '):
' → logprob: -4.283299446105957
    7. ''' → logprob: -6.533299446105957
    8. ''):
' → logprob: -6.908299446105957
    9. '       ' → logprob: -7.658299446105957
    10. '           ' → logprob: -8.283299446105957

Token 683: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06887553632259369
    2. ':' → logprob: -3.443875551223755
    3. ':
' → logprob: -3.568875551223755
    4. ' or' → logprob: -5.318875312805176
    5. '           ' → logprob: -7.193875312805176
    6. '):
' → logprob: -7.568875312805176
    7. '<|end|>' → logprob: -10.068875312805176
    8. ' and' → logprob: -10.443875312805176
    9. ',' → logprob: -10.568875312805176
    10. 'upper' → logprob: -10.943875312805176

Token 684: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.13813044130802155
    2. ' upper' → logprob: -2.5131304264068604
    3. '               ' → logprob: -3.1381304264068604
    4. 'usage' → logprob: -5.7631306648254395
    5. ' usage' → logprob: -7.5131306648254395
    6. '           ' → logprob: -7.7631306648254395
    7. '_upper' → logprob: -7.7631306648254395
    8. '.upper' → logprob: -10.388130187988281
    9. '                   ' → logprob: -10.638130187988281
    10. '   ' → logprob: -10.888130187988281

Token 685: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.00016587569552939385
    2. 'bound' → logprob: -8.750165939331055
    3. '_bounds' → logprob: -13.500165939331055
    4. '           ' → logprob: -13.625165939331055
    5. 'Bound' → logprob: -14.125165939331055
    6. '_upper' → logprob: -14.375165939331055
    7. '       ' → logprob: -14.500165939331055
    8. '=' → logprob: -14.750165939331055
    9. '   ' → logprob: -15.000165939331055
    10. ' bound' → logprob: -15.250165939331055

Token 686: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. '=int' → logprob: -16.453889846801758
    4. ' ' → logprob: -17.828889846801758
    5. '＝' → logprob: -17.828889846801758
    6. ' =
' → logprob: -18.203889846801758
    7. '=

' → logprob: -18.453889846801758
    8. '=
' → logprob: -18.578889846801758
    9. '=cut' → logprob: -18.578889846801758
    10. '=i' → logprob: -19.078889846801758

Token 687: ' machine' (ID: 7342)
  Prédit: 'machine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'machine' → logprob: -0.000916935910936445
    2. ' machine' → logprob: -7.000916957855225
    3. '   ' → logprob: -13.500916481018066
    4. 'self' → logprob: -13.875916481018066
    5. '(machine' → logprob: -14.000916481018066
    6. 'machines' → logprob: -14.500916481018066
    7. 'mach' → logprob: -14.625916481018066
    8. 'm' → logprob: -14.875916481018066
    9. '0' → logprob: -15.375916481018066
    10. ' ' → logprob: -16.125917434692383

Token 688: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0031188949942588806
    2. '.' → logprob: -5.878118991851807
    3. '.ticket' → logprob: -8.628118515014648
    4. ' .' → logprob: -10.128118515014648
    5. '.cal' → logprob: -10.378118515014648
    6. '   ' → logprob: -11.628118515014648
    7. 'tickets' → logprob: -11.628118515014648
    8. '	t' → logprob: -11.878118515014648
    9. '.s' → logprob: -12.378118515014648
    10. '.used' → logprob: -12.753118515014648

Token 689: 'ickets' (ID: 11708)
  Prédit: 'ickets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickets' → logprob: -1.7432603272027336e-06
    2. 'i' → logprob: -14.625001907348633
    3. 'icket' → logprob: -15.375001907348633
    4. 'tickets' → logprob: -15.375001907348633
    5. 'icks' → logprob: -15.875001907348633
    6. 'ic' → logprob: -16.125001907348633
    7. '
' → logprob: -16.250001907348633
    8. ' ' → logprob: -16.500001907348633
    9. 'ickers' → logprob: -16.625001907348633
    10. '   ' → logprob: -16.875001907348633

Token 690: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005762407090514898
    2. '
' → logprob: -5.380762577056885
    3. '<|end|>' → logprob: -7.505762577056885
    4. '            
' → logprob: -8.880762100219727
    5. 'elif' → logprob: -9.130762100219727
    6. '<|end|>' → logprob: -9.255762100219727
    7. 'else' → logprob: -9.505762100219727
    8. ' else' → logprob: -10.005762100219727
    9. ' elif' → logprob: -10.505762100219727
    10. ' if' → logprob: -10.880762100219727

Token 691: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006607305258512497
    2. 'elif' → logprob: -8.25066089630127
    3. 'else' → logprob: -8.50066089630127
    4. '
' → logprob: -9.62566089630127
    5. ' else' → logprob: -9.87566089630127
    6. ' elif' → logprob: -10.00066089630127
    7. '            
' → logprob: -11.12566089630127
    8. '<|end|>' → logprob: -11.75066089630127
    9. '```' → logprob: -13.37566089630127
    10. ',' → logprob: -13.87566089630127

Token 692: ' upper' (ID: 13057)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09913381934165955
    2. 'else' → logprob: -3.4741337299346924
    3. 'elif' → logprob: -3.5991337299346924
    4. 'upper' (adapté à ' upper') → logprob: -4.0991339683532715
    5. ' else' → logprob: -5.3491339683532715
    6. 'if' → logprob: -5.5991339683532715
    7. 'usage' → logprob: -5.8491339683532715
    8. ' if' → logprob: -5.9741339683532715
    9. ' elif' → logprob: -5.9741339683532715
    10. ' upper' → logprob: -6.7241339683532715

Token 693: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -3.464347173576243e-05
    2. 'bound' → logprob: -10.37503433227539
    3. 'Bound' → logprob: -13.12503433227539
    4. '_bounds' → logprob: -15.25003433227539
    5. '_upper' → logprob: -15.37503433227539
    6. 'bounded' → logprob: -15.62503433227539
    7. ' bound' → logprob: -15.87503433227539
    8. '_BOUND' → logprob: -16.25003433227539
    9. 'elif' → logprob: -16.50003433227539
    10. '_' → logprob: -17.12503433227539

Token 694: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693022191524506
    2. ' =' → logprob: -2.1269302368164062
    3. '=min' → logprob: -13.251930236816406
    4. 'if' → logprob: -15.376930236816406
    5. '.=' → logprob: -17.001930236816406
    6. '   ' → logprob: -17.126930236816406
    7. '=

' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.376930236816406
    9. '	' → logprob: -17.626930236816406
    10. '%=' → logprob: -17.751930236816406

Token 695: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3133980929851532
    2. ' min' → logprob: -1.3133981227874756
    3. 'max' → logprob: -9.063398361206055
    4. ' max' → logprob: -10.813398361206055
    5. 'int' → logprob: -15.063398361206055
    6. '	min' → logprob: -16.438398361206055
    7. ' int' → logprob: -17.188398361206055
    8. '[min' → logprob: -19.813398361206055
    9. 'minimum' → logprob: -20.063398361206055
    10. '(min' → logprob: -20.438398361206055

Token 696: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00524075236171484
    2. '(machine' → logprob: -5.2552409172058105
    3. '(m' → logprob: -13.255240440368652
    4. '(
' → logprob: -13.255240440368652
    5. 'upper' → logprob: -13.505240440368652
    6. '(up' → logprob: -14.380240440368652
    7. '(int' → logprob: -14.505240440368652
    8. ' (' → logprob: -14.880240440368652
    9. 'machine' → logprob: -15.005240440368652
    10. '(max' → logprob: -15.505240440368652

Token 697: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.022800229489803314
    2. 'machine' → logprob: -4.772800445556641
    3. '(machine' → logprob: -4.772800445556641
    4. '(' → logprob: -5.272800445556641
    5. ' upper' → logprob: -7.647800445556641
    6. 'uppercase' → logprob: -11.77280044555664
    7. 'm' → logprob: -12.52280044555664
    8. '(m' → logprob: -12.64780044555664
    9. ' machine' → logprob: -13.27280044555664
    10. 'machines' → logprob: -14.02280044555664

Token 698: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -8.804671233519912e-05
    2. 'bound' → logprob: -9.50008773803711
    3. 'Bound' → logprob: -12.12508773803711
    4. '_upper' → logprob: -12.62508773803711
    5. '_bounds' → logprob: -14.75008773803711
    6. '_limit' → logprob: -14.75008773803711
    7. 'usage' → logprob: -15.00008773803711
    8. 'o' → logprob: -15.25008773803711
    9. '_usage' → logprob: -15.25008773803711
    10. 'own' → logprob: -15.62508773803711

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038086410495452583
    2. ' ,' → logprob: -7.875380992889404
    3. ',m' → logprob: -15.250380516052246
    4. ',
' → logprob: -15.375380516052246
    5. '   ' → logprob: -16.500381469726562
    6. '(machine' → logprob: -16.500381469726562
    7. '(),' → logprob: -16.625381469726562
    8. 'm' → logprob: -17.250381469726562
    9. '‌,' → logprob: -17.375381469726562
    10. '           ' → logprob: -18.000381469726562

Token 700: ' machine' (ID: 7342)
  Prédit: ' machine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' machine' → logprob: -0.4287429749965668
    2. 'machine' → logprob: -1.0537430047988892
    3. '(machine' → logprob: -10.803743362426758
    4. '           ' → logprob: -11.553743362426758
    5. '   ' → logprob: -12.303743362426758
    6. '.machine' → logprob: -13.678743362426758
    7. '            ' → logprob: -14.053743362426758
    8. '               ' → logprob: -14.303743362426758
    9. ' ' → logprob: -14.303743362426758
    10. '_machine' → logprob: -14.428743362426758

Token 701: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0019651511684060097
    2. '.' → logprob: -6.376965045928955
    3. ' .' → logprob: -8.251965522766113
    4. '.ticket' → logprob: -15.001965522766113
    5. '‌.' → logprob: -15.251965522766113
    6. '	t' → logprob: -15.376965522766113
    7. '   ' → logprob: -15.501965522766113
    8. ').' → logprob: -15.501965522766113
    9. '.tokens' → logprob: -15.876965522766113
    10. '.s' → logprob: -16.001964569091797

Token 702: 'ickets' (ID: 11708)
  Prédit: 'ickets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickets' → logprob: -0.05100976303219795
    2. '.t' → logprob: -3.8010096549987793
    3. 'tickets' → logprob: -3.9260096549987793
    4. 't' → logprob: -5.676009654998779
    5. '_t' → logprob: -7.051009654998779
    6. 'ck' → logprob: -7.301009654998779
    7. 'k' → logprob: -7.301009654998779
    8. 'ick' → logprob: -7.801009654998779
    9. '_' → logprob: -8.176010131835938
    10. 'icket' → logprob: -9.051010131835938

Token 703: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01800946146249771
    2. ')
' → logprob: -4.268009662628174
    3. '           ' → logprob: -5.643009662628174
    4. ' )' → logprob: -8.518009185791016
    5. '       ' → logprob: -9.518009185791016
    6. ' )
' → logprob: -11.643009185791016
    7. ',' → logprob: -12.393009185791016
    8. ')

' → logprob: -12.768009185791016
    9. ')
' → logprob: -13.393009185791016
    10. '          ' → logprob: -13.518009185791016

Token 704: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0714302659034729
    2. '
' → logprob: -2.696430206298828
    3. '            
' → logprob: -7.446430206298828
    4. '<|end|>' → logprob: -7.946430206298828
    5. '       ' → logprob: -8.321430206298828
    6. '```' → logprob: -9.571430206298828
    7. '  
' → logprob: -10.071430206298828
    8. ',' → logprob: -10.071430206298828
    9. '<|end|>' → logprob: -10.446430206298828
    10. '   ' → logprob: -11.071430206298828

Token 705: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3939138650894165
    2. 'usage' → logprob: -1.2689138650894165
    3. ' usage' → logprob: -3.518913745880127
    4. ' if' → logprob: -5.143913745880127
    5. 'if' (adapté à ' if') → logprob: -5.393913745880127
    6. 'upper' → logprob: -6.143913745880127
    7. '
' → logprob: -6.643913745880127
    8. ' upper' → logprob: -8.018914222717285
    9. '       ' → logprob: -8.268914222717285
    10. '            
' → logprob: -8.643914222717285

Token 706: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.2014293223619461
    2. ' upper' → logprob: -1.7014293670654297
    3. 'uppercase' → logprob: -11.57642936706543
    4. '0' → logprob: -13.07642936706543
    5. '   ' → logprob: -13.45142936706543
    6. ' ' → logprob: -13.45142936706543
    7. ' ' → logprob: -14.82642936706543
    8. '.upper' → logprob: -15.20142936706543
    9. '_upper' → logprob: -15.45142936706543
    10. 'Upper' → logprob: -15.70142936706543

Token 707: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.00010902655776590109
    2. 'bound' → logprob: -9.87510871887207
    3. '_upper' → logprob: -9.87510871887207
    4. '_lower' → logprob: -12.87510871887207
    5. '_bounds' → logprob: -13.87510871887207
    6. 'Bound' → logprob: -14.50010871887207
    7. '[i' → logprob: -15.00010871887207
    8. '   ' → logprob: -15.12510871887207
    9. '_boundary' → logprob: -15.25010871887207
    10. 'upper' → logprob: -16.00010871887207

Token 708: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06660281121730804
    2. '<' → logprob: -2.9416027069091797
    3. ' >=' → logprob: -4.81660270690918
    4. ' >' → logprob: -6.31660270690918
    5. '>=' → logprob: -6.94160270690918
    6. '>' → logprob: -7.19160270690918
    7. ' ' → logprob: -10.69160270690918
    8. '<int' → logprob: -13.19160270690918
    9. '<|end|>' → logprob: -13.31660270690918
    10. '[' → logprob: -14.06660270690918

Token 709: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '=' → logprob: -15.75000286102295
    4. '۰' → logprob: -18.500001907348633
    5. '1' → logprob: -19.750001907348633
    6. '
' → logprob: -20.625001907348633
    7. '   ' → logprob: -20.750001907348633
    8. '０' → logprob: -20.750001907348633
    9. '```' → logprob: -21.125001907348633
    10. ' ' → logprob: -21.250001907348633

Token 710: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '=' → logprob: -18.250001907348633
    4. '۰' → logprob: -19.875001907348633
    5. '０' → logprob: -21.250001907348633
    6. '   ' → logprob: -22.500001907348633
    7. ' ' → logprob: -22.625001907348633
    8. '٠' → logprob: -22.625001907348633
    9. '1' → logprob: -22.875001907348633
    10. '```' → logprob: -23.125001907348633

Token 711: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09960753470659256
    2. ':' → logprob: -2.724607467651367
    3. '               ' → logprob: -3.724607467651367
    4. '           ' → logprob: -5.974607467651367
    5. '):
' → logprob: -6.099607467651367
    6. ' :
' → logprob: -8.599607467651367
    7. ',' → logprob: -10.224607467651367
    8. ')' → logprob: -10.349607467651367
    9. '       ' → logprob: -11.099607467651367
    10. '):' → logprob: -11.599607467651367

Token 712: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024187766015529633
    2. '           ' → logprob: -4.0241875648498535
    3. 'upper' → logprob: -6.2741875648498535
    4. 'usage' → logprob: -6.3991875648498535
    5. ' upper' → logprob: -7.2741875648498535
    6. ' usage' → logprob: -7.5241875648498535
    7. '0' → logprob: -7.5241875648498535
    8. ',' → logprob: -8.399188041687012
    9. '       ' → logprob: -8.399188041687012
    10. '
' → logprob: -9.899188041687012

Token 713: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.18886402249336243
    2. 'usage' → logprob: -1.93886399269104
    3. 'return' → logprob: -4.688864231109619
    4. '           ' → logprob: -4.813864231109619
    5. ' upper' → logprob: -5.188864231109619
    6. '0' → logprob: -6.313864231109619
    7. '   ' → logprob: -6.688864231109619
    8. ' usage' → logprob: -6.688864231109619
    9. ' return' → logprob: -8.188863754272461
    10. '       ' → logprob: -8.313863754272461

Token 714: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.00018220659694634378
    2. 'bound' → logprob: -8.625182151794434
    3. '_upper' → logprob: -13.500182151794434
    4. 'Bound' → logprob: -15.000182151794434
    5. 'bounded' → logprob: -15.250182151794434
    6. 'upper' → logprob: -15.625182151794434
    7. '_bounds' → logprob: -16.00018310546875
    8. '       ' → logprob: -16.37518310546875
    9. '_BOUND' → logprob: -16.50018310546875
    10. 'usage' → logprob: -16.50018310546875

Token 715: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692958116531372
    2. ' =' → logprob: -2.126929521560669
    3. '           ' → logprob: -14.25192928314209
    4. '=
' → logprob: -15.37692928314209
    5. '0' → logprob: -15.75192928314209
    6. ')' → logprob: -15.87692928314209
    7. ' ' → logprob: -16.501930236816406
    8. ' =
' → logprob: -17.126930236816406
    9. '<|end|>' → logprob: -17.251930236816406
    10. ')=' → logprob: -17.251930236816406

Token 716: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.125009536743164
    4. '۰' → logprob: -21.000009536743164
    5. '           ' → logprob: -21.500009536743164
    6. '               ' → logprob: -21.875009536743164
    7. '=' → logprob: -22.000009536743164
    8. '00' → logprob: -22.250009536743164
    9. ' ' → logprob: -22.625009536743164
    10. '  ' → logprob: -22.750009536743164

Token 717: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.5
    4. '۰' → logprob: -19.375
    5. '00' → logprob: -20.125
    6. '000' → logprob: -20.25
    7. 'zero' → logprob: -20.75
    8. ' ' → logprob: -21.25
    9. '```' → logprob: -21.25
    10. '０' → logprob: -21.4375

Token 718: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4748997390270233
    2. '           ' → logprob: -0.9748997688293457
    3. '            
' → logprob: -7.974899768829346
    4. '
' → logprob: -8.099899291992188
    5. '<|end|>' → logprob: -9.849899291992188
    6. ' 
' → logprob: -9.974899291992188
    7. '    
' → logprob: -11.349899291992188
    8. '		' → logprob: -11.724899291992188
    9. '<|end|>' → logprob: -11.849899291992188
    10. '	       ' → logprob: -11.849899291992188

Token 719: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002333547454327345
    2. '
' → logprob: -6.377333641052246
    3. '	       ' → logprob: -8.127333641052246
    4. '<|end|>' → logprob: -9.127333641052246
    5. '       ' → logprob: -9.752333641052246
    6. '            
' → logprob: -10.002333641052246
    7. '	   ' → logprob: -10.252333641052246
    8. '<|end|>' → logprob: -10.627333641052246
    9. '		' → logprob: -11.377333641052246
    10. ',' → logprob: -11.502333641052246

Token 720: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.9715672135353088
    2. '           ' → logprob: -1.096567153930664
    3. 'usage' (adapté à ' usage') → logprob: -1.346567153930664
    4. '       ' → logprob: -3.721567153930664
    5. '   ' → logprob: -6.346567153930664
    6. '
' → logprob: -6.721567153930664
    7. '            
' → logprob: -9.221567153930664
    8. '	       ' → logprob: -10.846567153930664
    9. '	   ' → logprob: -10.846567153930664
    10. '_usage' → logprob: -11.346567153930664

Token 721: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016265720478259027
    2. '[' → logprob: -8.750163078308105
    3. '[
' → logprob: -13.125163078308105
    4. ' [' → logprob: -13.375163078308105
    5. '[I' → logprob: -15.625163078308105
    6. '```' → logprob: -15.750163078308105
    7. '
' → logprob: -16.37516212463379
    8. 'i' → logprob: -17.00016212463379
    9. '\[' → logprob: -17.50016212463379
    10. ')[' → logprob: -17.50016212463379

Token 722: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5922765135765076
    2. '=' → logprob: -1.5922765731811523
    3. ' =' → logprob: -1.5922765731811523
    4. ']=' → logprob: -3.4672765731811523
    5. ' ]' → logprob: -4.842276573181152
    6. ']+=' → logprob: -7.592276573181152
    7. ')' → logprob: -8.467276573181152
    8. '=int' → logprob: -9.592276573181152
    9. ' +=' → logprob: -9.842276573181152
    10. ')=' → logprob: -9.967276573181152

Token 723: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689103722572327
    2. ' =' → logprob: -1.1368910074234009
    3. '=int' → logprob: -11.01189136505127
    4. ' +=' → logprob: -13.13689136505127
    5. '+=' → logprob: -13.76189136505127
    6. '.=' → logprob: -14.88689136505127
    7. ' ' → logprob: -16.386890411376953
    8. ')' → logprob: -17.261890411376953
    9. '＝' → logprob: -17.761890411376953
    10. '=}' → logprob: -17.886890411376953

Token 724: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23071429133415222
    2. ' int' → logprob: -1.8557143211364746
    3. 'upper' → logprob: -3.2307143211364746
    4. ' upper' → logprob: -4.605714321136475
    5. ' min' → logprob: -9.605713844299316
    6. 'min' → logprob: -9.730713844299316
    7. 'max' → logprob: -10.480713844299316
    8. ' max' → logprob: -12.355713844299316
    9. '(int' → logprob: -12.730713844299316
    10. '0' → logprob: -13.730713844299316

Token 725: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00036918214755132794
    2. '(round' → logprob: -8.00036907196045
    3. '(min' → logprob: -11.12536907196045
    4. ' (' → logprob: -11.50036907196045
    5. '(max' → logprob: -12.00036907196045
    6. '(
' → logprob: -13.87536907196045
    7. 'upper' → logprob: -14.37536907196045
    8. 'round' → logprob: -14.75036907196045
    9. '(math' → logprob: -14.75036907196045
    10. '(up' → logprob: -16.000370025634766

Token 726: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0002690840628929436
    2. 'max' → logprob: -9.000268936157227
    3. 'round' → logprob: -9.625268936157227
    4. ' upper' → logprob: -9.625268936157227
    5. 'min' → logprob: -11.250268936157227
    6. 'uppercase' → logprob: -15.750268936157227
    7. '.upper' → logprob: -16.500268936157227
    8. 'up' → logprob: -16.625268936157227
    9. 'abs' → logprob: -17.750268936157227
    10. 'upr' → logprob: -17.750268936157227

Token 727: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -6.988221684878226e-06
    2. 'bound' → logprob: -12.125006675720215
    3. '_upper' → logprob: -14.250006675720215
    4. 'Bound' → logprob: -15.250006675720215
    5. ' bound' → logprob: -17.00000762939453
    6. '_bounds' → logprob: -17.25000762939453
    7. 'ound' → logprob: -17.50000762939453
    8. '_' → logprob: -17.50000762939453
    9. '```' → logprob: -17.50000762939453
    10. '_limit' → logprob: -17.87500762939453

Token 728: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002811290556564927
    2. ' )' → logprob: -5.877811431884766
    3. ')
' → logprob: -12.752811431884766
    4. '<|end|>' → logprob: -12.877811431884766
    5. ')return' → logprob: -15.127811431884766
    6. '       ' → logprob: -15.752811431884766
    7. '	' → logprob: -15.877811431884766
    8. ' )
' → logprob: -16.252811431884766
    9. ' ' → logprob: -16.377811431884766
    10. ' ' → logprob: -16.502811431884766

Token 729: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21492113173007965
    2. '<|end|>' → logprob: -2.339921236038208
    3. '       ' → logprob: -2.464921236038208
    4. ' 
' → logprob: -5.589920997619629
    5. 'return' → logprob: -5.839920997619629
    6. ' return' → logprob: -6.214920997619629
    7. '	return' → logprob: -6.964920997619629
    8. '        
' → logprob: -7.339920997619629
    9. '  
' → logprob: -7.714920997619629
    10. '<|end|>' → logprob: -7.964920997619629

Token 730: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11458168923854828
    2. 'return' (adapté à ' return') → logprob: -2.48958158493042
    3. ' return' → logprob: -4.11458158493042
    4. '
' → logprob: -5.36458158493042
    5. '	return' → logprob: -6.23958158493042
    6. '   ' → logprob: -6.36458158493042
    7. 'self' → logprob: -8.489582061767578
    8. '<|end|>' → logprob: -8.739582061767578
    9. '        
' → logprob: -9.864582061767578
    10. ' self' → logprob: -9.989582061767578

Token 731: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.001170225441455841
    2. ' usage' → logprob: -6.7511701583862305
    3. 'Usage' → logprob: -18.626171112060547
    4. '   ' → logprob: -20.376171112060547
    5. '[' → logprob: -20.626171112060547
    6. 'use' → logprob: -21.001171112060547
    7. '_usage' → logprob: -21.251171112060547
    8. ' ' → logprob: -22.376171112060547
    9. 'us' → logprob: -22.626171112060547
    10. '  ' → logprob: -23.876171112060547

Token 732: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7182559370994568
    2. 'def' → logprob: -0.8432559370994568
    3. '<|end|>' → logprob: -2.8432559967041016
    4. '
' → logprob: -3.9682559967041016
    5. ' def' → logprob: -6.343255996704102
    6. '<|end|>' → logprob: -6.593255996704102
    7. '    
' → logprob: -6.843255996704102
    8. '```' → logprob: -7.593255996704102
    9. '	def' → logprob: -9.343255996704102
    10. '  
' → logprob: -10.343255996704102

Token 734: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.1875571544806007e-05
    2. ' def' → logprob: -11.625011444091797
    3. '   ' → logprob: -12.750011444091797
    4. '	def' → logprob: -19.250011444091797
    5. '    
' → logprob: -21.000011444091797
    6. '```' → logprob: -21.375011444091797
    7. '#' → logprob: -21.625011444091797
    8. ' ' → logprob: -22.000011444091797
    9. '       ' → logprob: -22.125011444091797
    10. '        
' → logprob: -22.625011444091797

Token 735: ' _' (ID: 1175)
  Prédit: ' maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximize' → logprob: -0.3158028721809387
    2. 'maximize' → logprob: -1.815802812576294
    3. ' optimize' → logprob: -2.940802812576294
    4. 'opt' → logprob: -3.190802812576294
    5. ' max' → logprob: -5.065803050994873
    6. ' calculate' → logprob: -6.315803050994873
    7. ' solve' → logprob: -6.440803050994873
    8. ' get' → logprob: -6.940803050994873
    9. 'max' → logprob: -7.065803050994873
    10. ' compute' → logprob: -7.440803050994873

Token 736: 'fix' (ID: 11853)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -0.8255488872528076
    2. 'calculate' → logprob: -1.3255488872528076
    3. 'compute' → logprob: -1.9505488872528076
    4. 'solve' → logprob: -2.2005488872528076
    5. 'opt' → logprob: -4.075549125671387
    6. 'get' → logprob: -5.700549125671387
    7. 'max' → logprob: -5.700549125671387
    8. 'calc' → logprob: -5.700549125671387
    9. 'cal' → logprob: -5.700549125671387
    10. 'find' → logprob: -5.825549125671387

Token 737: '_vi' (ID: 187265)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.7517224550247192
    2. '_us' → logprob: -1.1267224550247192
    3. '_constraints' → logprob: -2.1267223358154297
    4. '_' → logprob: -3.0017223358154297
    5. '_cycles' → logprob: -5.37672233581543
    6. '_negative' → logprob: -5.87672233581543
    7. '_bounds' → logprob: -5.87672233581543
    8. '_used' → logprob: -6.37672233581543
    9. '_solution' → logprob: -6.50172233581543
    10. '_constraint' → logprob: -6.50172233581543

Token 738: 'olation' (ID: 33369)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.08350032567977905
    2. 'olation' → logprob: -2.708500385284424
    3. 'olated' → logprob: -5.458500385284424
    4. 's' → logprob: -5.708500385284424
    5. 'olate' → logprob: -5.833500385284424
    6. 'olat' → logprob: -6.833500385284424
    7. 'rt' → logprob: -7.708500385284424
    8. 'olutions' → logprob: -8.083499908447266
    9. 'sit' → logprob: -8.833499908447266
    10. 'r' → logprob: -9.208499908447266

Token 739: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01943858154118061
    2. '(' → logprob: -4.144438743591309
    3. 's' → logprob: -6.769438743591309
    4. '   ' → logprob: -6.894438743591309
    5. '_' → logprob: -7.769438743591309
    6. '_s' → logprob: -8.019438743591309
    7. 'self' → logprob: -9.144438743591309
    8. '_constraints' → logprob: -9.394438743591309
    9. '_self' → logprob: -9.394438743591309
    10. '_usage' → logprob: -9.769438743591309

Token 740: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09444192796945572
    2. 'self' → logprob: -2.7194418907165527
    3. ')(' → logprob: -4.844441890716553
    4. ',' → logprob: -5.094441890716553
    5. ')' → logprob: -5.969441890716553
    6. ' (' → logprob: -6.094441890716553
    7. '   ' → logprob: -6.094441890716553
    8. '(' → logprob: -6.719441890716553
    9. '_self' → logprob: -7.594441890716553
    10. '       ' → logprob: -8.094442367553711

Token 741: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.45658186078071594
    2. 'usage' → logprob: -1.2065818309783936
    3. ' dist' → logprob: -4.331582069396973
    4. ')' → logprob: -4.456582069396973
    5. ' usages' → logprob: -4.581582069396973
    6. ' index' → logprob: -4.706582069396973
    7. ' idx' → logprob: -5.456582069396973
    8. 'dist' → logprob: -5.706582069396973
    9. 'index' → logprob: -5.956582069396973
    10. ' i' → logprob: -6.331582069396973

Token 742: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09390779584646225
    2. '):' → logprob: -2.4689078330993652
    3. '):
' → logprob: -5.468907833099365
    4. ' ,' → logprob: -8.343907356262207
    5. 'self' → logprob: -8.343907356262207
    6. '   ' → logprob: -9.468907356262207
    7. ',i' → logprob: -9.843907356262207
    8. '       ' → logprob: -10.093907356262207
    9. ',self' → logprob: -10.468907356262207
    10. ')' → logprob: -11.218907356262207

Token 743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001214237418025732
    2. ' for' → logprob: -10.250121116638184
    3. ',' → logprob: -10.625121116638184
    4. '        
' → logprob: -11.125121116638184
    5. ':' → logprob: -11.375121116638184
    6. '   ' → logprob: -11.750121116638184
    7. '<|end|>' → logprob: -11.875121116638184
    8. 'for' → logprob: -12.375121116638184
    9. 'self' → logprob: -13.000121116638184
    10. '	' → logprob: -13.125121116638184

Token 744: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4296925961971283
    2. '       ' → logprob: -1.1796926259994507
    3. 'for' → logprob: -3.304692506790161
    4. ' max' → logprob: -6.55469274520874
    5. ' #' → logprob: -6.67969274520874
    6. '#' (adapté à ' #') → logprob: -7.05469274520874
    7. 'max' → logprob: -7.80469274520874
    8. ' while' → logprob: -7.92969274520874
    9. '
' → logprob: -8.304692268371582
    10. '   ' → logprob: -9.054692268371582

Token 745: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2894456386566162
    2. '#' → logprob: -1.6644456386566162
    3. ' for' → logprob: -3.414445638656616
    4. '       ' → logprob: -4.789445877075195
    5. 'pass' → logprob: -4.914445877075195
    6. ' #' → logprob: -5.414445877075195
    7. 'def' → logprob: -6.164445877075195
    8. '   ' → logprob: -6.539445877075195
    9. 'visited' → logprob: -6.914445877075195
    10. 'return' → logprob: -7.164445877075195

Token 746: ' previous' (ID: 5880)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6793238520622253
    2. ' for' → logprob: -0.9293238520622253
    3. '#' → logprob: -3.17932391166687
    4. ' #' → logprob: -3.80432391166687
    5. 'def' → logprob: -4.429323673248291
    6. 'max' → logprob: -5.429323673248291
    7. 'visited' → logprob: -6.304323673248291
    8. 'queue' → logprob: -6.929323673248291
    9. ' max' → logprob: -6.929323673248291
    10. 'while' → logprob: -6.929323673248291

Token 747: ' step' (ID: 5983)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43369269371032715
    2. ' for' → logprob: -2.308692693710327
    3. 'for' → logprob: -2.433692693710327
    4. '   ' → logprob: -2.433692693710327
    5. '       ' → logprob: -3.058692693710327
    6. ' def' → logprob: -4.058692932128906
    7. '#' → logprob: -5.058692932128906
    8. 'class' → logprob: -6.683692932128906
    9. ' #' → logprob: -6.808692932128906
    10. ' constraints' → logprob: -7.058692932128906

Token 748: ' might' (ID: 3572)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1324108839035034
    2. 'def' → logprob: -1.6324108839035034
    3. 'for' → logprob: -1.7574108839035034
    4. '       ' → logprob: -2.132411003112793
    5. ' is' → logprob: -2.382411003112793
    6. '   ' → logprob: -3.632411003112793
    7. ' def' → logprob: -3.757411003112793
    8. ' may' → logprob: -4.882411003112793
    9. '#' → logprob: -5.132411003112793
    10. ' might' → logprob: -5.132411003112793

Token 749: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2888988256454468
    2. 'allow' → logprob: -1.7888988256454468
    3. ' allow' → logprob: -2.0388989448547363
    4. ' violate' → logprob: -2.2888989448547363
    5. ' have' → logprob: -2.4138989448547363
    6. 'not' → logprob: -3.2888989448547363
    7. '       ' → logprob: -3.4138989448547363
    8. ' cause' → logprob: -3.5388989448547363
    9. ' lead' → logprob: -4.038898944854736
    10. 'detect' → logprob: -4.163898944854736

Token 750: ' guarantee' (ID: 16218)
  Prédit: ' respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' respect' → logprob: -0.4121229648590088
    2. 's' → logprob: -1.9121229648590088
    3. 'respect' → logprob: -2.037122964859009
    4. ' satisfy' → logprob: -3.287122964859009
    5. ' guarantee' → logprob: -5.41212272644043
    6. ' be' → logprob: -6.03712272644043
    7. 'detect' → logprob: -6.03712272644043
    8. 'be' → logprob: -6.16212272644043
    9. ' fully' → logprob: -6.53712272644043
    10. ' handle' → logprob: -6.78712272644043

Token 751: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5099557638168335
    2. ' that' → logprob: -1.7599557638168335
    3. ' constraints' → logprob: -2.259955883026123
    4. 'fe' → logprob: -3.884955883026123
    5. ' feasibility' → logprob: -3.884955883026123
    6. 'all' → logprob: -4.009955883026123
    7. ' constraint' → logprob: -4.134955883026123
    8. 'that' → logprob: -4.259955883026123
    9. 'constraints' → logprob: -4.634955883026123
    10. 'constraint' → logprob: -4.759955883026123

Token 752: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.1010533943772316
    2. 'constraints' → logprob: -2.351053476333618
    3. 'constraint' → logprob: -7.851053237915039
    4. ' constraint' → logprob: -8.101053237915039
    5. '_constraints' → logprob: -9.351053237915039
    6. '
' → logprob: -10.851053237915039
    7. ' edges' → logprob: -12.101053237915039
    8. '   ' → logprob: -12.101053237915039
    9. ' violations' → logprob: -12.226053237915039
    10. ' contraintes' → logprob: -12.601053237915039

Token 753: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23584432899951935
    2. ' for' → logprob: -1.860844373703003
    3. '
' → logprob: -3.110844373703003
    4. 'for' → logprob: -5.235844135284424
    5. '        
' → logprob: -5.610844135284424
    6. ',' → logprob: -8.610844612121582
    7. '   ' → logprob: -9.110844612121582
    8. '    
' → logprob: -9.235844612121582
    9. '           ' → logprob: -9.485844612121582
    10. 'def' → logprob: -9.610844612121582

Token 754: ' met' (ID: 1421)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17863179743289948
    2. 'met' → logprob: -2.4286317825317383
    3. ' satisfied' → logprob: -3.1786317825317383
    4. 'strict' → logprob: -3.9286317825317383
    5. ' met' → logprob: -5.178631782531738
    6. ' strictly' → logprob: -5.178631782531738
    7. 'fully' → logprob: -6.303631782531738
    8. 'fulfilled' → logprob: -7.678631782531738
    9. 'exact' → logprob: -9.428631782531738
    10. 'maint' → logprob: -9.428631782531738

Token 755: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003938529174774885
    2. '
' → logprob: -6.378938674926758
    3. ' for' → logprob: -6.753938674926758
    4. '        
' → logprob: -7.128938674926758
    5. ',' → logprob: -8.878938674926758
    6. '    
' → logprob: -10.503938674926758
    7. 'for' → logprob: -10.628938674926758
    8. '   ' → logprob: -10.878938674926758
    9. '<|end|>' → logprob: -10.878938674926758
    10. '           ' → logprob: -11.878938674926758

Token 756: ' fix' (ID: 9295)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19764414429664612
    2. ' for' → logprob: -2.1976442337036133
    3. 'for' → logprob: -2.6976442337036133
    4. '#' → logprob: -8.197644233703613
    5. '           ' → logprob: -8.572644233703613
    6. '   ' → logprob: -8.947644233703613
    7. 'return' → logprob: -9.322644233703613
    8. '
' → logprob: -9.572644233703613
    9. ' return' → logprob: -10.322644233703613
    10. '        
' → logprob: -10.447644233703613

Token 757: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3192344307899475
    2. 'for' → logprob: -2.0692343711853027
    3. ' for' → logprob: -2.4442343711853027
    4. '   ' → logprob: -3.0692343711853027
    5. 'usage' → logprob: -4.944234371185303
    6. ' violations' → logprob: -5.694234371185303
    7. 'viol' → logprob: -7.194234371185303
    8. '	for' → logprob: -7.569234371185303
    9. ' usage' → logprob: -7.944234371185303
    10. 'def' → logprob: -7.944234371185303

Token 758: ' iterative' (ID: 167755)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4173068404197693
    2. ' for' → logprob: -1.417306900024414
    3. ' iter' → logprob: -2.917306900024414
    4. 'while' → logprob: -4.417306900024414
    5. '       ' → logprob: -4.542306900024414
    6. ' while' → logprob: -5.292306900024414
    7. 'iter' → logprob: -5.417306900024414
    8. 'def' → logprob: -5.792306900024414
    9. 'pass' → logprob: -5.917306900024414
    10. '   ' → logprob: -6.292306900024414

Token 759: ' relaxation' (ID: 45831)
  Prédit: ' refinement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' refinement' → logprob: -0.9517915844917297
    2. ' improvement' → logprob: -1.201791524887085
    3. ' adjustment' → logprob: -1.701791524887085
    4. 'im' → logprob: -2.951791524887085
    5. ' relaxation' → logprob: -4.201791763305664
    6. ' for' → logprob: -4.326791763305664
    7. ' adjustments' → logprob: -4.451791763305664
    8. 'for' → logprob: -4.826791763305664
    9. '   ' → logprob: -4.951791763305664
    10. ' improvements' → logprob: -5.076791763305664

Token 760: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009484992478974164
    2. ' for' → logprob: -7.625948429107666
    3. '
' → logprob: -8.250948905944824
    4. '        
' → logprob: -9.625948905944824
    5. 'for' → logprob: -10.125948905944824
    6. ',' → logprob: -10.375948905944824
    7. '   ' → logprob: -10.625948905944824
    8. '<|end|>' → logprob: -11.375948905944824
    9. '           ' → logprob: -11.875948905944824
    10. 'def' → logprob: -12.625948905944824

Token 761: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022959671914577484
    2. '
' → logprob: -6.502295970916748
    3. '<|end|>' → logprob: -8.00229549407959
    4. '        
' → logprob: -8.12729549407959
    5. ' for' → logprob: -9.25229549407959
    6. ',' → logprob: -11.00229549407959
    7. '<|end|>' → logprob: -11.25229549407959
    8. '   ' → logprob: -11.75229549407959
    9. '    
' → logprob: -12.12729549407959
    10. '	' → logprob: -12.50229549407959

Token 762: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8346918225288391
    2. ' for' → logprob: -0.8346918225288391
    3. 'for' → logprob: -2.0846917629241943
    4. ' changed' → logprob: -5.834692001342773
    5. 'changed' → logprob: -5.959692001342773
    6. 'while' → logprob: -7.084692001342773
    7. ' while' → logprob: -7.584692001342773
    8. '   ' → logprob: -8.084692001342773
    9. 'updated' → logprob: -8.834692001342773
    10. ' updated' → logprob: -9.209692001342773

Token 763: ' Re' (ID: 907)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07217051088809967
    2. ' for' → logprob: -2.8221704959869385
    3. 'changed' → logprob: -4.947170734405518
    4. '       ' → logprob: -6.322170734405518
    5. ' changed' → logprob: -7.197170734405518
    6. '   ' → logprob: -8.57217025756836
    7. 'while' → logprob: -9.19717025756836
    8. 'max' → logprob: -9.57217025756836
    9. 'def' → logprob: -10.32217025756836
    10. 'changes' → logprob: -10.69717025756836

Token 764: 'peated' (ID: 73561)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.40345868468284607
    2. 'peat' → logprob: -1.5284587144851685
    3. 'turned' → logprob: -2.778458595275879
    4. '       ' → logprob: -4.153458595275879
    5. 'for' → logprob: -4.403458595275879
    6. 'peated' → logprob: -4.903458595275879
    7. 'quired' → logprob: -5.028458595275879
    8. 'while' → logprob: -6.153458595275879
    9. 'm' → logprob: -6.528458595275879
    10. 'visited' → logprob: -6.653458595275879

Token 765: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.704520046710968
    2. 'for' → logprob: -0.829520046710968
    3. '       ' → logprob: -3.2045199871063232
    4. ' for' → logprob: -4.204520225524902
    5. '   ' → logprob: -4.329520225524902
    6. '           ' → logprob: -8.704520225524902
    7. 'while' → logprob: -9.079520225524902
    8. '	for' → logprob: -9.579520225524902
    9. 'def' → logprob: -9.704520225524902
    10. '    ' → logprob: -9.954520225524902

Token 766: ' enforce' (ID: 57352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6142517328262329
    2. ' for' → logprob: -0.8642517328262329
    3. 'changed' → logprob: -3.9892516136169434
    4. ' changed' → logprob: -4.739251613616943
    5. '       ' → logprob: -5.239251613616943
    6. 'def' → logprob: -5.864251613616943
    7. 'updated' → logprob: -6.364251613616943
    8. ' updated' → logprob: -8.614252090454102
    9. 'found' → logprob: -10.114252090454102
    10. '   ' → logprob: -10.239252090454102

Token 767: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3929930031299591
    2. 'for' → logprob: -1.1429929733276367
    3. ' any' → logprob: -6.642992973327637
    4. ' all' → logprob: -6.642992973327637
    5. '       ' → logprob: -7.142992973327637
    6. ' changed' → logprob: -7.142992973327637
    7. ' constraints' → logprob: -7.517992973327637
    8. 'changed' → logprob: -8.017992973327637
    9. ' True' → logprob: -8.392992973327637
    10. 'all' → logprob: -8.517992973327637

Token 768: '_a' (ID: 10852)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0943065881729126
    2. ' =' → logprob: -1.4693065881729126
    3. ' for' → logprob: -1.8443065881729126
    4. '_i' → logprob: -2.344306468963623
    5. '       ' → logprob: -2.719306468963623
    6. '=' → logprob: -3.594306468963623
    7. '	for' → logprob: -4.094306468963623
    8. ')' → logprob: -4.469306468963623
    9. '           ' → logprob: -4.969306468963623
    10. '   ' → logprob: -4.969306468963623

Token 769: ' -' (ID: 533)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5087668895721436
    2. ' -' → logprob: -1.0087668895721436
    3. '<=' → logprob: -3.8837668895721436
    4. ' -=' → logprob: -5.258767127990723
    5. '-' → logprob: -5.883767127990723
    6. ' =' → logprob: -6.633767127990723
    7. ' >=' → logprob: -6.633767127990723
    8. '   ' → logprob: -7.258767127990723
    9. '=' → logprob: -7.383767127990723
    10. ' ≤' → logprob: -8.258767127990723

Token 770: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012938793748617172
    2. ' x' → logprob: -4.387938976287842
    3. 'usage' → logprob: -8.137938499450684
    4. ' usage' → logprob: -9.012938499450684
    5. '_usage' → logprob: -12.262938499450684
    6. '1' → logprob: -13.137938499450684
    7. '=' → logprob: -13.262938499450684
    8. 'max' → logprob: -13.637938499450684
    9. '_x' → logprob: -13.762938499450684
    10. '   ' → logprob: -14.012938499450684

Token 771: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.8908587662735954e-05
    2. 'b' → logprob: -11.250019073486328
    3. '_a' → logprob: -12.375019073486328
    4. '_i' → logprob: -13.625019073486328
    5. '_' → logprob: -14.875019073486328
    6. '	b' → logprob: -17.375019073486328
    7. '```' → logprob: -17.625019073486328
    8. 'a' → logprob: -17.750019073486328
    9. '[b' → logprob: -17.875019073486328
    10. '
' → logprob: -18.250019073486328

Token 772: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.25198376178741455
    2. '<=' → logprob: -1.5019837617874146
    3. ')<=' → logprob: -10.626983642578125
    4. '       ' → logprob: -11.876983642578125
    5. '```' → logprob: -12.501983642578125
    6. ' ' → logprob: -12.626983642578125
    7. ' ≤' → logprob: -12.751983642578125
    8. ']<=' → logprob: -12.751983642578125
    9. '>=' → logprob: -13.376983642578125
    10. '=' → logprob: -13.626983642578125

Token 773: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018787158653140068
    2. ' c' → logprob: -4.268787384033203
    3. '<|end|>' → logprob: -6.518787384033203
    4. '0' → logprob: -6.893787384033203
    5. 'constraint' → logprob: -7.143787384033203
    6. 'constraints' → logprob: -7.518787384033203
    7. 'self' → logprob: -8.768787384033203
    8. ' constraints' → logprob: -8.893787384033203
    9. 'x' → logprob: -9.518787384033203
    10. '
' → logprob: -9.643787384033203

Token 774: ' constraints' (ID: 31060)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1433979868888855
    2. ' for' → logprob: -2.1433980464935303
    3. 'for' → logprob: -4.893397808074951
    4. '
' → logprob: -5.268397808074951
    5. ' while' → logprob: -6.518397808074951
    6. 'while' → logprob: -7.393397808074951
    7. '   ' → logprob: -7.768397808074951
    8. '	' → logprob: -7.893397808074951
    9. '           ' → logprob: -8.39339828491211
    10. ',' → logprob: -8.89339828491211

Token 775: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019279571250081062
    2. ' for' → logprob: -4.144279479980469
    3. ' while' → logprob: -6.144279479980469
    4. 'for' → logprob: -7.644279479980469
    5. 'while' → logprob: -7.894279479980469
    6. '   ' → logprob: -9.269279479980469
    7. '           ' → logprob: -10.144279479980469
    8. ' changed' → logprob: -10.394279479980469
    9. '
' → logprob: -11.019279479980469
    10. '	' → logprob: -11.269279479980469

Token 776: ' adjust' (ID: 10266)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6541356444358826
    2. '       ' → logprob: -1.4041357040405273
    3. ' for' → logprob: -1.5291357040405273
    4. 'changed' → logprob: -4.529135704040527
    5. '           ' → logprob: -5.779135704040527
    6. ' changed' → logprob: -6.279135704040527
    7. 'while' → logprob: -6.654135704040527
    8. '   ' → logprob: -8.404135704040527
    9. ' while' → logprob: -8.529135704040527
    10. 'updated' → logprob: -9.279135704040527

Token 777: ' usage' (ID: 16622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1405145674943924
    2. ' for' → logprob: -2.890514612197876
    3. 'changed' → logprob: -2.890514612197876
    4. 'usage' → logprob: -4.265514373779297
    5. ' changed' → logprob: -6.515514373779297
    6. '       ' → logprob: -6.640514373779297
    7. ' usage' → logprob: -6.640514373779297
    8. '   ' → logprob: -7.140514373779297
    9. 'updated' → logprob: -8.140514373779297
    10. 'changes' → logprob: -8.140514373779297

Token 778: ' down' (ID: 1917)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10542944818735123
    2. ' for' → logprob: -2.4804294109344482
    3. ' changed' → logprob: -4.855429649353027
    4. ' while' → logprob: -5.605429649353027
    5. 'for' → logprob: -6.105429649353027
    6. 'while' → logprob: -6.855429649353027
    7. '   ' → logprob: -7.730429649353027
    8. '           ' → logprob: -7.980429649353027
    9. 'changed' → logprob: -8.105429649353027
    10. ' changes' → logprob: -8.855429649353027

Token 779: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012092802207916975
    2. ' for' → logprob: -7.376209259033203
    3. '
' → logprob: -8.126209259033203
    4. '   ' → logprob: -10.001209259033203
    5. '           ' → logprob: -10.251209259033203
    6. 'for' → logprob: -10.251209259033203
    7. '<|end|>' → logprob: -10.501209259033203
    8. ' while' → logprob: -10.751209259033203
    9. '	' → logprob: -10.876209259033203
    10. '        
' → logprob: -11.001209259033203

Token 780: ' violated' (ID: 84402)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -1.093036413192749
    2. 'viol' → logprob: -1.593036413192749
    3. 'needed' → logprob: -1.968036413192749
    4. ' usage' → logprob: -2.468036413192749
    5. 'necessary' → logprob: -2.593036413192749
    6. 'vi' → logprob: -2.718036413192749
    7. ' necessary' → logprob: -3.218036413192749
    8. ' needed' → logprob: -3.718036413192749
    9. ' violation' → logprob: -4.093036651611328
    10. ' violated' → logprob: -5.343036651611328

Token 781: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003936152206733823
    2. ' for' → logprob: -8.375393867492676
    3. ' while' → logprob: -9.625393867492676
    4. '   ' → logprob: -10.375393867492676
    5. 'while' → logprob: -10.875393867492676
    6. '        
' → logprob: -11.125393867492676
    7. 'for' → logprob: -11.500393867492676
    8. '           ' → logprob: -11.875393867492676
    9. ',' → logprob: -12.000393867492676
    10. '
' → logprob: -12.875393867492676

Token 782: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008274479769170284
    2. '
' → logprob: -5.008274555206299
    3. ' for' → logprob: -6.883274555206299
    4. '        
' → logprob: -8.38327407836914
    5. 'for' → logprob: -9.25827407836914
    6. '	' → logprob: -9.75827407836914
    7. '   ' → logprob: -10.38327407836914
    8. '	for' → logprob: -10.88327407836914
    9. '    
' → logprob: -11.13327407836914
    10. '           ' → logprob: -11.25827407836914

Token 783: ' changed' (ID: 9180)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6712824702262878
    2. '       ' → logprob: -0.9212824702262878
    3. ' for' → logprob: -2.5462825298309326
    4. 'while' → logprob: -5.1712822914123535
    5. 'changed' (adapté à ' changed') → logprob: -5.2962822914123535
    6. '   ' → logprob: -7.4212822914123535
    7. ' changed' → logprob: -7.6712822914123535
    8. '           ' → logprob: -7.9212822914123535
    9. ' while' → logprob: -8.296282768249512
    10. 'updated' → logprob: -9.296282768249512

Token 784: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860905185341835
    2. '=' → logprob: -3.0486090183258057
    3. ' ' → logprob: -11.548608779907227
    4. '=True' → logprob: -11.923608779907227
    5. '   ' → logprob: -13.173608779907227
    6. ':' → logprob: -13.548608779907227
    7. '	' → logprob: -14.298608779907227
    8. '  ' → logprob: -14.548608779907227
    9. ' =
' → logprob: -15.173608779907227
    10. ',' → logprob: -15.298608779907227

Token 785: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004336493439041078
    2. ' True' → logprob: -7.750433444976807
    3. 'False' → logprob: -12.750433921813965
    4. '   ' → logprob: -20.37543296813965
    5. '=True' → logprob: -21.12543296813965
    6. '(True' → logprob: -21.37543296813965
    7. 'true' → logprob: -21.87543296813965
    8. ' False' → logprob: -22.62543296813965
    9. 'Tr' → logprob: -23.37543296813965
    10. '	' → logprob: -25.12543296813965

Token 786: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5430921912193298
    2. '       ' → logprob: -0.9180921912193298
    3. 'while' → logprob: -4.293092250823975
    4. ' while' → logprob: -5.918092250823975
    5. '	while' → logprob: -5.918092250823975
    6. '        
' → logprob: -8.418091773986816
    7. '   ' → logprob: -8.793091773986816
    8. '
' → logprob: -9.418091773986816
    9. '<|end|>' → logprob: -9.543091773986816
    10. '    
' → logprob: -10.418091773986816

Token 787: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2960864305496216
    2. '	while' → logprob: -2.171086311340332
    3. '
' → logprob: -2.546086311340332
    4. 'while' → logprob: -2.921086311340332
    5. ' while' → logprob: -5.046086311340332
    6. '   ' → logprob: -6.671086311340332
    7. '```' → logprob: -7.171086311340332
    8. '\' → logprob: -8.046086311340332
    9. '	' → logprob: -8.046086311340332
    10. '	       ' → logprob: -8.671086311340332

Token 788: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3706012964248657
    2. '       ' → logprob: -1.8706012964248657
    3. ' while' → logprob: -1.8706012964248657
    4. '	while' → logprob: -6.495601177215576
    5. '   ' → logprob: -9.370601654052734
    6. '	' → logprob: -11.120601654052734
    7. '    ' → logprob: -13.120601654052734
    8. '        ' → logprob: -13.370601654052734
    9. '      ' → logprob: -13.745601654052734
    10. '	   ' → logprob: -13.995601654052734

Token 789: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' → logprob: -0.47407761216163635
    2. ' changed' → logprob: -0.974077582359314
    3. '_changed' → logprob: -15.724077224731445
    4. ' ' → logprob: -16.224077224731445
    5. '.changed' → logprob: -16.224077224731445
    6. 'not' → logprob: -16.724077224731445
    7. '   ' → logprob: -16.849077224731445
    8. ' not' → logprob: -16.974077224731445
    9. ' ' → logprob: -17.599077224731445
    10. '	' → logprob: -17.849077224731445

Token 790: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31330782175064087
    2. ':' → logprob: -1.313307762145996
    3. ' and' → logprob: -11.063307762145996
    4. '):
' → logprob: -11.188307762145996
    5. 'and' → logprob: -11.938307762145996
    6. ':
' → logprob: -12.313307762145996
    7. ':

' → logprob: -13.438307762145996
    8. '():
' → logprob: -13.688307762145996
    9. '       ' → logprob: -14.563307762145996
    10. ',' → logprob: -14.563307762145996

Token 791: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00356028089299798
    2. '	       ' → logprob: -5.8785600662231445
    3. 'changed' → logprob: -8.878560066223145
    4. '	   ' → logprob: -8.878560066223145
    5. '
' → logprob: -9.378560066223145
    6. ' changed' → logprob: -9.628560066223145
    7. '   ' → logprob: -10.003560066223145
    8. '    	   ' → logprob: -10.003560066223145
    9. '		   ' → logprob: -10.253560066223145
    10. '       ' → logprob: -10.253560066223145

Token 792: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' (adapté à ' changed') → logprob: -0.3145933151245117
    2. ' changed' → logprob: -1.3145933151245117
    3. '   ' → logprob: -7.064593315124512
    4. '           ' → logprob: -8.064593315124512
    5. '       ' → logprob: -8.939593315124512
    6. '.changed' → logprob: -11.189593315124512
    7. '_changed' → logprob: -11.814593315124512
    8. '	' → logprob: -12.814593315124512
    9. '	   ' → logprob: -13.439593315124512
    10. '
' → logprob: -13.564593315124512

Token 793: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132915198802948
    2. ' =' → logprob: -1.3132915496826172
    3. '=False' → logprob: -10.563291549682617
    4. '   ' → logprob: -13.938291549682617
    5. '=True' → logprob: -14.063291549682617
    6. ':' → logprob: -14.188291549682617
    7. '=
' → logprob: -14.438291549682617
    8. ' =
' → logprob: -14.688291549682617
    9. ' ' → logprob: -16.063291549682617
    10. '       ' → logprob: -16.063291549682617

Token 794: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001234428636962548
    2. ' False' → logprob: -9.000123023986816
    3. 'True' → logprob: -20.500123977661133
    4. 'false' → logprob: -21.125123977661133
    5. '=False' → logprob: -21.250123977661133
    6. '(False' → logprob: -22.250123977661133
    7. '_false' → logprob: -23.250123977661133
    8. '   ' → logprob: -23.500123977661133
    9. '.False' → logprob: -24.875123977661133
    10. 'F' → logprob: -25.375123977661133

Token 795: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000700045726262033
    2. ' for' → logprob: -7.625699996948242
    3. '
' → logprob: -9.125699996948242
    4. 'for' → logprob: -9.625699996948242
    5. '	       ' → logprob: -11.500699996948242
    6. '   ' → logprob: -11.750699996948242
    7. '       ' → logprob: -12.000699996948242
    8. '            
' → logprob: -12.750699996948242
    9. ',' → logprob: -13.125699996948242
    10. '		' → logprob: -13.375699996948242

Token 796: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002518703928217292
    2. 'for' → logprob: -6.127518653869629
    3. ' for' → logprob: -8.127518653869629
    4. '       ' → logprob: -10.627518653869629
    5. '   ' → logprob: -11.502518653869629
    6. '	       ' → logprob: -12.877518653869629
    7. '		' → logprob: -14.877518653869629
    8. '	   ' → logprob: -15.002518653869629
    9. '		   ' → logprob: -15.377518653869629
    10. '               ' → logprob: -16.002519607543945

Token 797: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009182658977806568
    2. ' for' → logprob: -4.759182453155518
    3. '           ' → logprob: -7.509182453155518
    4. '       ' → logprob: -11.009182929992676
    5. '   ' → logprob: -12.759182929992676
    6. '	for' → logprob: -14.634182929992676
    7. ' ' → logprob: -17.38418197631836
    8. '               ' → logprob: -17.38418197631836
    9. 'For' → logprob: -19.25918197631836
    10. '```' → logprob: -19.25918197631836

Token 798: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03406933322548866
    2. ' c' → logprob: -3.409069299697876
    3. 'constraint' → logprob: -7.909069538116455
    4. ' constraint' → logprob: -10.284069061279297
    5. '   ' → logprob: -11.659069061279297
    6. 'self' → logprob: -12.659069061279297
    7. '	c' → logprob: -12.909069061279297
    8. 'i' → logprob: -13.409069061279297
    9. ' ' → logprob: -13.409069061279297
    10. 'con' → logprob: -14.159069061279297

Token 799: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006074831471778452
    2. 'in' → logprob: -7.500607490539551
    3. ' ' → logprob: -10.00060749053955
    4. 'a' → logprob: -13.12560749053955
    5. 'c' → logprob: -13.62560749053955
    6. ' i' → logprob: -13.75060749053955
    7. '	in' → logprob: -13.75060749053955
    8. '  ' → logprob: -14.12560749053955
    9. '
' → logprob: -14.50060749053955
    10. '<|end|>' → logprob: -15.00060749053955

Token 800: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024926606565713882
    2. ' self' → logprob: -6.002492427825928
    3. 'elf' → logprob: -11.252492904663086
    4. '(self' → logprob: -13.002492904663086
    5. '[self' → logprob: -14.377492904663086
    6. ' ' → logprob: -15.627492904663086
    7. '	self' → logprob: -15.752492904663086
    8. '   ' → logprob: -15.752492904663086
    9. '=self' → logprob: -15.752492904663086
    10. '
' → logprob: -16.502492904663086

Token 801: '.constraints' (ID: 62986)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.02058369852602482
    2. '.constraints' → logprob: -3.8955836296081543
    3. 'const' → logprob: -11.020584106445312
    4. ' constraints' → logprob: -11.145584106445312
    5. 'constraint' → logprob: -12.645584106445312
    6. 'class' → logprob: -13.020584106445312
    7. 'Constraints' → logprob: -13.145584106445312
    8. '.constraint' → logprob: -13.645584106445312
    9. 'contra' → logprob: -14.145584106445312
    10. '_constraints' → logprob: -14.645584106445312

Token 802: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4296746551990509
    2. ':' → logprob: -1.0546746253967285
    3. '               ' → logprob: -7.4296746253967285
    4. ',' → logprob: -9.054675102233887
    5. '):
' → logprob: -9.054675102233887
    6. '           ' → logprob: -9.929675102233887
    7. '       ' → logprob: -10.179675102233887
    8. ':

' → logprob: -10.804675102233887
    9. '():
' → logprob: -11.679675102233887
    10. ':
' → logprob: -11.679675102233887

Token 803: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3833651840686798
    2. '               ' → logprob: -1.6333651542663574
    3. 'a' → logprob: -2.7583651542663574
    4. ' a' → logprob: -3.3833651542663574
    5. '	       ' → logprob: -4.883365154266357
    6. ' if' → logprob: -5.133365154266357
    7. '       ' → logprob: -5.883365154266357
    8. '   ' → logprob: -6.258365154266357
    9. 'b' → logprob: -6.633365154266357
    10. '```' → logprob: -6.633365154266357

Token 804: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.002911384915933013
    2. 'if' → logprob: -5.877911567687988
    3. ' a' → logprob: -9.377911567687988
    4. ' if' → logprob: -11.377911567687988
    5. '   ' → logprob: -12.127911567687988
    6. '           ' → logprob: -13.002911567687988
    7. '       ' → logprob: -13.377911567687988
    8. 'b' → logprob: -14.502911567687988
    9. '               ' → logprob: -14.877911567687988
    10. '	a' → logprob: -15.627911567687988

Token 805: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2580779492855072
    2. '=' → logprob: -1.5080779790878296
    3. ',' → logprob: -6.133078098297119
    4. '.' → logprob: -6.508078098297119
    5. ' ' → logprob: -7.133078098297119
    6. 'a' → logprob: -7.383078098297119
    7. '_idx' → logprob: -8.258077621459961
    8. ' .' → logprob: -8.758077621459961
    9. '_index' → logprob: -9.008077621459961
    10. ' ,' → logprob: -9.758077621459961

Token 806: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03804149478673935
    2. ' c' → logprob: -3.288041591644287
    3. '	c' → logprob: -17.288042068481445
    4. '               ' → logprob: -18.788042068481445
    5. ')c' → logprob: -18.788042068481445
    6. '(c' → logprob: -19.288042068481445
    7. '[c' → logprob: -19.788042068481445
    8. '           ' → logprob: -19.913042068481445
    9. ' ' → logprob: -20.163042068481445
    10. '   ' → logprob: -20.288042068481445

Token 807: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0003382038848940283
    2. 'a' → logprob: -8.500338554382324
    3. '.' → logprob: -9.000338554382324
    4. ' .' → logprob: -12.125338554382324
    5. '.c' → logprob: -12.375338554382324
    6. '<|end|>' → logprob: -14.250338554382324
    7. '#a' → logprob: -15.250338554382324
    8. ' a' → logprob: -16.375337600708008
    9. '<|end|>' → logprob: -16.375337600708008
    10. '	a' → logprob: -16.750337600708008

Token 808: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014168680645525455
    2. '-' → logprob: -4.264168739318848
    3. ' ' → logprob: -12.639168739318848
    4. 'a' → logprob: -14.889168739318848
    5. '1' → logprob: -15.014168739318848
    6. '   ' → logprob: -15.389168739318848
    7. ' -
' → logprob: -15.389168739318848
    8. '[' → logprob: -15.514168739318848
    9. ' ' → logprob: -15.889168739318848
    10. '               ' → logprob: -16.51416778564453

Token 809: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017029138980433345
    2. ' ' → logprob: -6.376702785491943
    3. '   ' → logprob: -15.001703262329102
    4. '<|end|>' → logprob: -15.501703262329102
    5. '```' → logprob: -16.5017032623291
    6. '2' → logprob: -16.7517032623291
    7. '       ' → logprob: -17.1892032623291
    8. '           ' → logprob: -17.8767032623291
    9. '[' → logprob: -18.2517032623291
    10. '-' → logprob: -18.2517032623291

Token 810: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001238004770129919
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.125123977661133
    4. '10' → logprob: -16.375123977661133
    5. '۱' → logprob: -17.125123977661133
    6. '11' → logprob: -17.250123977661133
    7. '```' → logprob: -17.750123977661133
    8. '<|end|>' → logprob: -17.937623977661133
    9. '
' → logprob: -18.187623977661133
    10. '2' → logprob: -18.625123977661133

Token 811: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003036457928828895
    2. 'b' → logprob: -8.750303268432617
    3. ',' → logprob: -9.125303268432617
    4. '           ' → logprob: -11.625303268432617
    5. '
' → logprob: -11.750303268432617
    6. '              ' → logprob: -12.375303268432617
    7. '       ' → logprob: -12.625303268432617
    8. ',b' → logprob: -12.875303268432617
    9. '                
' → logprob: -13.500303268432617
    10. '			' → logprob: -13.500303268432617

Token 812: '               ' (ID: 506)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01825026236474514
    2. '               ' → logprob: -4.018250465393066
    3. ' b' → logprob: -9.768250465393066
    4. '           ' → logprob: -10.643250465393066
    5. 'if' → logprob: -11.393250465393066
    6. '       ' → logprob: -12.268250465393066
    7. ',b' → logprob: -13.393250465393066
    8. ' if' → logprob: -14.893250465393066
    9. '	b' → logprob: -15.018250465393066
    10. ',' → logprob: -15.143250465393066

Token 813: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -4.5014188799541444e-05
    2. ' b' → logprob: -10.125044822692871
    3. '               ' → logprob: -12.250044822692871
    4. '           ' → logprob: -17.000045776367188
    5. '	b' → logprob: -17.125045776367188
    6. '                   ' → logprob: -18.375045776367188
    7. ',b' → logprob: -20.375045776367188
    8. '       ' → logprob: -20.875045776367188
    9. '                ' → logprob: -21.125045776367188
    10. '              ' → logprob: -21.250045776367188

Token 814: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740819036960602
    2. '=' → logprob: -0.9740818738937378
    3. '=
' → logprob: -12.974081993103027
    4. ' =
' → logprob: -14.224081993103027
    5. 'b' → logprob: -14.474081993103027
    6. ')' → logprob: -14.724081993103027
    7. '<|end|>' → logprob: -15.099081993103027
    8. ' ' → logprob: -15.724081993103027
    9. '=b' → logprob: -15.849081993103027
    10. 'c' → logprob: -16.47408103942871

Token 815: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006715370807796717
    2. ' c' → logprob: -5.006715297698975
    3. '	c' → logprob: -17.131715774536133
    4. ')c' → logprob: -18.631715774536133
    5. '_c' → logprob: -19.631715774536133
    6. '(c' → logprob: -19.756715774536133
    7. '[c' → logprob: -19.756715774536133
    8. 'с' → logprob: -19.881715774536133
    9. ' ' → logprob: -20.131715774536133
    10. '.c' → logprob: -20.506715774536133

Token 816: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -4.990154047845863e-05
    2. '.' → logprob: -10.250049591064453
    3. ' .' → logprob: -11.375049591064453
    4. '.a' → logprob: -13.000049591064453
    5. 'b' → logprob: -14.375049591064453
    6. ' =' → logprob: -16.750049591064453
    7. '=' → logprob: -17.250049591064453
    8. ' b' → logprob: -17.375049591064453
    9. '	b' → logprob: -18.250049591064453
    10. '.
' → logprob: -18.250049591064453

Token 817: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12692978978157043
    2. '-' → logprob: -2.126929759979248
    3. ' ' → logprob: -13.876930236816406
    4. 'def' → logprob: -15.376930236816406
    5. '[' → logprob: -15.501930236816406
    6. '1' → logprob: -16.751930236816406
    7. '0' → logprob: -16.876930236816406
    8. '−' → logprob: -17.126930236816406
    9. '–' → logprob: -17.376930236816406
    10. '=' → logprob: -17.376930236816406

Token 818: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '۱' → logprob: -18.62510871887207
    4. '-' → logprob: -18.75010871887207
    5. '```' → logprob: -19.25010871887207
    6. '１' → logprob: -19.56260871887207
    7. '   ' → logprob: -19.81260871887207
    8. '
' → logprob: -20.06260871887207
    9. '१' → logprob: -20.43760871887207
    10. '১' → logprob: -20.56260871887207

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۱' → logprob: -16.3750057220459
    4. '2' → logprob: -16.8125057220459
    5. '-' → logprob: -16.8125057220459
    6. '```' → logprob: -17.8750057220459
    7. '<|end|>' → logprob: -18.0000057220459
    8. '१' → logprob: -18.2500057220459
    9. '   ' → logprob: -18.2500057220459
    10. '１' → logprob: -18.3750057220459

Token 820: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015502817404922098
    2. 'if' → logprob: -9.750155448913574
    3. ' if' → logprob: -9.750155448913574
    4. ',' → logprob: -11.250155448913574
    5. '
' → logprob: -11.875155448913574
    6. '           ' → logprob: -12.000155448913574
    7. '<|end|>' → logprob: -12.625155448913574
    8. '		       ' → logprob: -13.500155448913574
    9. '                
' → logprob: -13.750155448913574
    10. '	           ' → logprob: -14.000155448913574

Token 821: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00732300104573369
    2. 'if' → logprob: -5.382322788238525
    3. '           ' → logprob: -6.507322788238525
    4. ' if' → logprob: -6.757322788238525
    5. '       ' → logprob: -10.757323265075684
    6. '```' → logprob: -11.882323265075684
    7. '   ' → logprob: -13.257323265075684
    8. ',' → logprob: -13.257323265075684
    9. '		       ' → logprob: -13.382323265075684
    10. '	       ' → logprob: -13.382323265075684

Token 822: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00208947341889143
    2. '               ' → logprob: -6.752089500427246
    3. ' if' → logprob: -7.002089500427246
    4. 'diff' → logprob: -11.877089500427246
    5. '                   ' → logprob: -14.377089500427246
    6. '           ' → logprob: -14.877089500427246
    7. 'while' → logprob: -15.002089500427246
    8. '	if' → logprob: -15.627089500427246
    9. '   ' → logprob: -15.627089500427246
    10. '```' → logprob: -15.877089500427246

Token 823: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.20141440629959106
    2. ' usage' → logprob: -1.7014143466949463
    3. '   ' → logprob: -13.951414108276367
    4. '_usage' → logprob: -16.326414108276367
    5. 'Usage' → logprob: -16.451414108276367
    6. ' ' → logprob: -17.201414108276367
    7. '           ' → logprob: -17.451414108276367
    8. '       ' → logprob: -17.451414108276367
    9. '
' → logprob: -18.826414108276367
    10. ' ' → logprob: -18.951414108276367

Token 824: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0007105246186256409
    2. '[c' → logprob: -7.375710487365723
    3. 'a' → logprob: -9.625710487365723
    4. '[
' → logprob: -12.125710487365723
    5. '[' → logprob: -12.250710487365723
    6. ' a' → logprob: -13.500710487365723
    7. '[b' → logprob: -13.625710487365723
    8. ' [' → logprob: -13.625710487365723
    9. '][' → logprob: -14.000710487365723
    10. '```' → logprob: -14.250710487365723

Token 825: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2126675248146057
    2. '>' → logprob: -1.837667465209961
    3. ']' → logprob: -3.587667465209961
    4. ' -' → logprob: -5.712667465209961
    5. ']>' → logprob: -7.212667465209961
    6. ' ]' → logprob: -7.837667465209961
    7. '-' → logprob: -8.337667465209961
    8. ' ' → logprob: -10.712667465209961
    9. '[' → logprob: -11.587667465209961
    10. ' >
' → logprob: -11.962667465209961

Token 826: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4740993082523346
    2. ' >' → logprob: -0.9740992784500122
    3. '-' → logprob: -11.724099159240723
    4. ' >
' → logprob: -12.349099159240723
    5. ' >
' → logprob: -12.974099159240723
    6. ' ' → logprob: -13.099099159240723
    7. ' -' → logprob: -13.974099159240723
    8. '>
' → logprob: -14.099099159240723
    9. '()>' → logprob: -14.099099159240723
    10. '">' → logprob: -14.224099159240723

Token 827: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -4.596781946020201e-05
    2. ' usage' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.125045776367188
    4. '_usage' → logprob: -15.875045776367188
    5. 'us' → logprob: -16.375045776367188
    6. '
' → logprob: -16.625045776367188
    7. 'use' → logprob: -17.500045776367188
    8. 'Usage' → logprob: -17.750045776367188
    9. '```' → logprob: -19.625045776367188
    10. 'utility' → logprob: -19.750045776367188

Token 828: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.2246291337069124e-05
    2. 'b' → logprob: -10.750021934509277
    3. '[' → logprob: -14.625021934509277
    4. '[
' → logprob: -17.000022888183594
    5. '[a' → logprob: -17.250022888183594
    6. '	b' → logprob: -17.500022888183594
    7. '[c' → logprob: -17.625022888183594
    8. '[u' → logprob: -17.625022888183594
    9. ' [' → logprob: -17.750022888183594
    10. '(b' → logprob: -18.250022888183594

Token 829: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018213625997304916
    2. '+' → logprob: -4.018213748931885
    3. '+c' → logprob: -9.768213272094727
    4. ']' → logprob: -12.643213272094727
    5. ']+' → logprob: -13.393213272094727
    6. ' plus' → logprob: -14.643213272094727
    7. '[' → logprob: -14.768213272094727
    8. ' ' → logprob: -15.018213272094727
    9. ' +
' → logprob: -15.893213272094727
    10. ' ' → logprob: -16.393213272094727

Token 830: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08924850076436996
    2. '+' → logprob: -2.4642484188079834
    3. '+c' → logprob: -8.089248657226562
    4. ' ' → logprob: -14.214248657226562
    5. ' plus' → logprob: -14.464248657226562
    6. '[' → logprob: -15.464248657226562
    7. '[c' → logprob: -15.714248657226562
    8. ' +
' → logprob: -16.339248657226562
    9. ' ' → logprob: -16.464248657226562
    10. '+C' → logprob: -16.839248657226562

Token 831: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023245712742209435
    2. ' c' → logprob: -3.7732458114624023
    3. '	c' → logprob: -16.148244857788086
    4. '   ' → logprob: -18.148244857788086
    5. '(c' → logprob: -18.148244857788086
    6. ')c' → logprob: -18.273244857788086
    7. ' ' → logprob: -18.523244857788086
    8. '  ' → logprob: -19.273244857788086
    9. '_c' → logprob: -19.523244857788086
    10. '[c' → logprob: -19.773244857788086

Token 832: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.008676853962242603
    2. '.' → logprob: -4.758677005767822
    3. ' .' → logprob: -10.008676528930664
    4. '`.' → logprob: -12.383676528930664
    5. ''.' → logprob: -12.758676528930664
    6. 'c' → logprob: -13.383676528930664
    7. '".' → logprob: -14.008676528930664
    8. '```' → logprob: -14.008676528930664
    9. '​.' → logprob: -14.008676528930664
    10. '.
' → logprob: -14.133676528930664

Token 833: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29184556007385254
    2. ':' → logprob: -1.6668455600738525
    3. '                   ' → logprob: -3.0418455600738525
    4. '               ' → logprob: -4.416845321655273
    5. '):
' → logprob: -6.541845321655273
    6. '                       ' → logprob: -6.666845321655273
    7. '           ' → logprob: -7.041845321655273
    8. '<|end|>' → logprob: -8.916845321655273
    9. '                           ' → logprob: -9.166845321655273
    10. ':
' → logprob: -9.291845321655273

Token 834: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014793148264288902
    2. '               ' → logprob: -4.3897929191589355
    3. '                       ' → logprob: -6.8897929191589355
    4. '           ' → logprob: -7.5147929191589355
    5. '                    
' → logprob: -9.014793395996094
    6. 'usage' → logprob: -9.264793395996094
    7. ' usage' → logprob: -9.389793395996094
    8. '```' → logprob: -9.389793395996094
    9. ',' → logprob: -9.764793395996094
    10. '
' → logprob: -9.889793395996094

Token 835: ' old' (ID: 2890)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.02529074065387249
    2. ' usage' → logprob: -3.7752907276153564
    3. '                   ' → logprob: -6.2752909660339355
    4. '                       ' → logprob: -9.275290489196777
    5. '               ' → logprob: -10.400290489196777
    6. '           ' → logprob: -11.150290489196777
    7. '   ' → logprob: -11.275290489196777
    8. '       ' → logprob: -12.275290489196777
    9. '_usage' → logprob: -13.650290489196777
    10. 'Usage' → logprob: -13.775290489196777

Token 836: ' =' (ID: 314)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.21832376718521118
    2. '_value' → logprob: -1.7183237075805664
    3. 'usage' → logprob: -4.968323707580566
    4. '_val' → logprob: -5.468323707580566
    5. ' =' → logprob: -6.093323707580566
    6. '_' → logprob: -6.468323707580566
    7. '=' → logprob: -7.093323707580566
    8. 'value' → logprob: -8.093323707580566
    9. ' usage' → logprob: -8.718323707580566
    10. '   ' → logprob: -9.218323707580566

Token 837: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.004078758880496025
    2. ' usage' → logprob: -5.5040788650512695
    3. '                   ' → logprob: -15.50407886505127
    4. '
' → logprob: -17.004077911376953
    5. '               ' → logprob: -17.129077911376953
    6. '_usage' → logprob: -17.254077911376953
    7. '   ' → logprob: -17.379077911376953
    8. 'Usage' → logprob: -18.129077911376953
    9. '           ' → logprob: -18.254077911376953
    10. '                       ' → logprob: -19.004077911376953

Token 838: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00031615851912647486
    2. 'a' → logprob: -8.250316619873047
    3. '                   ' → logprob: -10.000316619873047
    4. '[' → logprob: -12.500316619873047
    5. '               ' → logprob: -13.375316619873047
    6. '[c' → logprob: -13.500316619873047
    7. '```' → logprob: -13.875316619873047
    8. '[
' → logprob: -15.250316619873047
    9. '[b' → logprob: -15.375316619873047
    10. '                       ' → logprob: -15.625316619873047

Token 839: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.054392654448747635
    2. ' -' → logprob: -4.1793928146362305
    3. '<|end|>' → logprob: -4.5543928146362305
    4. ']
' → logprob: -4.8043928146362305
    5. '-' → logprob: -4.9293928146362305
    6. '                   ' → logprob: -5.1793928146362305
    7. ' ]' → logprob: -5.8043928146362305
    8. ']-' → logprob: -7.1793928146362305
    9. '<|end|>' → logprob: -7.5543928146362305
    10. ')' → logprob: -7.5543928146362305

Token 840: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.44312788406387e-05
    2. '           ' → logprob: -11.000054359436035
    3. '		           ' → logprob: -11.500054359436035
    4. '               ' → logprob: -11.750054359436035
    5. '
' → logprob: -12.375054359436035
    6. ' =' → logprob: -12.625054359436035
    7. '				' → logprob: -12.875054359436035
    8. '                    
' → logprob: -13.125054359436035
    9. '                       ' → logprob: -13.750054359436035
    10. '                    ' → logprob: -13.750054359436035

Token 841: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' (adapté à ' usage') → logprob: -0.0817275196313858
    2. '                   ' → logprob: -2.7067275047302246
    3. ' usage' → logprob: -4.456727504730225
    4. '           ' → logprob: -9.581727981567383
    5. '               ' → logprob: -10.456727981567383
    6. '                       ' → logprob: -11.581727981567383
    7. '   ' → logprob: -11.831727981567383
    8. '       ' → logprob: -13.331727981567383
    9. '_usage' → logprob: -13.456727981567383
    10. '                    ' → logprob: -13.456727981567383

Token 842: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.6789137084269896e-05
    2. 'a' → logprob: -10.25003719329834
    3. '[' → logprob: -13.75003719329834
    4. '[
' → logprob: -15.87503719329834
    5. '```' → logprob: -17.125036239624023
    6. '(a' → logprob: -17.625036239624023
    7. '[c' → logprob: -17.875036239624023
    8. '[A' → logprob: -18.000036239624023
    9. ' a' → logprob: -18.125036239624023
    10. '	a' → logprob: -18.250036239624023

Token 843: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007337672170251608
    2. ' =' → logprob: -5.25733757019043
    3. ']' → logprob: -6.63233757019043
    4. '-=' → logprob: -7.75733757019043
    5. ']=' → logprob: -8.38233757019043
    6. ' -=' → logprob: -9.00733757019043
    7. '-' → logprob: -13.38233757019043
    8. '>' → logprob: -13.88233757019043
    9. '=
' → logprob: -14.50733757019043
    10. ' ]' → logprob: -14.63233757019043

Token 844: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00016790216614026576
    2. ' =' → logprob: -8.875167846679688
    3. '-=' → logprob: -10.500167846679688
    4. ' -=' → logprob: -14.875167846679688
    5. '.=' → logprob: -16.250167846679688
    6. '=
' → logprob: -17.125167846679688
    7. '=

' → logprob: -17.250167846679688
    8. '=}' → logprob: -18.000167846679688
    9. '＝' → logprob: -18.750167846679688
    10. '*=' → logprob: -19.250167846679688

Token 845: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.0011703446507453918
    2. ' usage' → logprob: -6.7511701583862305
    3. 'max' → logprob: -16.501171112060547
    4. 'use' → logprob: -16.751171112060547
    5. 'Usage' → logprob: -19.001171112060547
    6. '   ' → logprob: -19.626171112060547
    7. '_usage' → logprob: -20.126171112060547
    8. ' max' → logprob: -20.501171112060547
    9. 'us' → logprob: -20.626171112060547
    10. ' ' → logprob: -21.751171112060547

Token 846: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -7.107425062713446e-06
    2. 'b' → logprob: -11.875006675720215
    3. '[a' → logprob: -17.12500762939453
    4. '	b' → logprob: -18.87500762939453
    5. '[u' → logprob: -19.37500762939453
    6. '[' → logprob: -19.75000762939453
    7. '_b' → logprob: -20.12500762939453
    8. '[
' → logprob: -20.25000762939453
    9. '[c' → logprob: -20.25000762939453
    10. ',b' → logprob: -20.87500762939453

Token 847: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31336793303489685
    2. '+' → logprob: -1.3133679628372192
    3. '+c' → logprob: -9.18836784362793
    4. ']+' → logprob: -13.31336784362793
    5. ']' → logprob: -14.31336784362793
    6. '```' → logprob: -14.68836784362793
    7. ' plus' → logprob: -15.18836784362793
    8. '+
' → logprob: -15.81336784362793
    9. '   ' → logprob: -16.06336784362793
    10. ' ' → logprob: -16.06336784362793

Token 848: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47413894534111023
    2. '+' → logprob: -0.9741389751434326
    3. '+c' → logprob: -9.724139213562012
    4. '                   ' → logprob: -13.599139213562012
    5. ' plus' → logprob: -15.474139213562012
    6. '```' → logprob: -15.724139213562012
    7. '+k' → logprob: -16.099138259887695
    8. '+
' → logprob: -16.349138259887695
    9. '+C' → logprob: -16.974138259887695
    10. '＋' → logprob: -17.099138259887695

Token 849: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.000627610192168504
    2. ' c' → logprob: -7.375627517700195
    3. '   ' → logprob: -14.625627517700195
    4. '	c' → logprob: -16.000627517700195
    5. ' ' → logprob: -16.125627517700195
    6. 'int' → logprob: -16.250627517700195
    7. '    ' → logprob: -16.875627517700195
    8. 'max' → logprob: -17.000627517700195
    9. '```' → logprob: -17.000627517700195
    10. '(c' → logprob: -17.125627517700195

Token 850: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.00044258590787649155
    2. '.' → logprob: -7.7504425048828125
    3. ' .' → logprob: -11.625442504882812
    4. 'c' → logprob: -13.500442504882812
    5. '`.' → logprob: -14.750442504882812
    6. ''.' → logprob: -15.250442504882812
    7. '```' → logprob: -15.375442504882812
    8. '	c' → logprob: -15.500442504882812
    9. '".' → logprob: -15.750442504882812
    10. '‌.' → logprob: -16.000442504882812

Token 851: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0029729455709457397
    2. '
' → logprob: -6.3779730796813965
    3. ' if' → logprob: -7.3779730796813965
    4. '<|end|>' → logprob: -8.627972602844238
    5. '           ' → logprob: -9.127972602844238
    6. '				' → logprob: -9.252972602844238
    7. '               ' → logprob: -9.502972602844238
    8. 'if' → logprob: -9.627972602844238
    9. '                    
' → logprob: -10.377972602844238
    10. '                       ' → logprob: -10.877972602844238

Token 852: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -4.310693111619912e-05
    2. 'if' → logprob: -11.250042915344238
    3. '           ' → logprob: -11.375042915344238
    4. '               ' → logprob: -11.875042915344238
    5. '				' → logprob: -12.125042915344238
    6. ' if' → logprob: -13.000042915344238
    7. '		           ' → logprob: -13.375042915344238
    8. '			       ' → logprob: -14.750042915344238
    9. '<|end|>' → logprob: -14.875042915344238
    10. '                       ' → logprob: -15.000042915344238

Token 853: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4077698886394501
    2. 'changed' → logprob: -1.1577699184417725
    3. '                   ' → logprob: -3.9077699184417725
    4. ' if' → logprob: -8.157770156860352
    5. ' changed' → logprob: -8.532770156860352
    6. '               ' → logprob: -10.532770156860352
    7. 'usage' → logprob: -10.657770156860352
    8. '           ' → logprob: -10.907770156860352
    9. '                       ' → logprob: -11.282770156860352
    10. 'change' → logprob: -12.407770156860352

Token 854: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -4.5491004129871726e-05
    2. ' usage' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.125045776367188
    4. 'old' → logprob: -19.250045776367188
    5. '_usage' → logprob: -19.750045776367188
    6. 'Usage' → logprob: -21.000045776367188
    7. 'us' → logprob: -21.125045776367188
    8. '                   ' → logprob: -21.875045776367188
    9. 'use' → logprob: -22.000045776367188
    10. '0' → logprob: -22.250045776367188

Token 855: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -8.53050296427682e-05
    2. 'a' → logprob: -9.37508487701416
    3. '<a' → logprob: -15.00008487701416
    4. '[
' → logprob: -17.000085830688477
    5. ' a' → logprob: -18.500085830688477
    6. '[' → logprob: -19.125085830688477
    7. '[c' → logprob: -19.500085830688477
    8. '   ' → logprob: -19.750085830688477
    9. '[A' → logprob: -19.750085830688477
    10. '	a' → logprob: -20.125085830688477

Token 856: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5767607688903809
    2. ' <' → logprob: -0.8267607688903809
    3. '<|end|>' → logprob: -7.326760768890381
    4. ' !=' → logprob: -9.701761245727539
    5. '<int' → logprob: -9.826761245727539
    6. '!=' → logprob: -11.576761245727539
    7. ' ' → logprob: -12.076761245727539
    8. '<size' → logprob: -12.326761245727539
    9. '<>' → logprob: -12.951761245727539
    10. '<span' → logprob: -13.201761245727539

Token 857: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0067405966110527515
    2. ' <' → logprob: -5.006740570068359
    3. '<int' → logprob: -11.63174057006836
    4. '<|end|>' → logprob: -11.75674057006836
    5. '!=' → logprob: -12.88174057006836
    6. '>=' → logprob: -14.50674057006836
    7. '<size' → logprob: -14.50674057006836
    8. ' ' → logprob: -14.75674057006836
    9. ' !=' → logprob: -14.88174057006836
    10. '<class' → logprob: -15.00674057006836

Token 858: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.204720582696609e-05
    2. 'old' → logprob: -9.875052452087402
    3. ' ' → logprob: -14.500052452087402
    4. ' old' → logprob: -18.625051498413086
    5. '1' → logprob: -22.375051498413086
    6. 'zero' → logprob: -22.375051498413086
    7. '```' → logprob: -22.500051498413086
    8. '	old' → logprob: -22.750051498413086
    9. '   ' → logprob: -23.125051498413086
    10. '=' → logprob: -23.125051498413086

Token 859: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007659515831619501
    2. 'old' → logprob: -4.882659435272217
    3. ' ' → logprob: -9.882659912109375
    4. ' old' → logprob: -13.007659912109375
    5. '	old' → logprob: -17.632659912109375
    6. '(old' → logprob: -18.507659912109375
    7. '
' → logprob: -19.007659912109375
    8. 'o' → logprob: -19.507659912109375
    9. '   ' → logprob: -19.882659912109375
    10. '_old' → logprob: -19.882659912109375

Token 860: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18923050165176392
    2. '                       ' → logprob: -1.9392304420471191
    3. ':' → logprob: -3.939230442047119
    4. '                   ' → logprob: -4.939230442047119
    5. '<|end|>' → logprob: -7.189230442047119
    6. '):
' → logprob: -7.689230442047119
    7. '():
' → logprob: -8.939230918884277
    8. '                        
' → logprob: -9.064230918884277
    9. '               ' → logprob: -9.314230918884277
    10. '                           ' → logprob: -9.314230918884277

Token 861: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003583456273190677
    2. '                   ' → logprob: -8.250358581542969
    3. '                           ' → logprob: -10.375358581542969
    4. '                        
' → logprob: -10.500358581542969
    5. '               ' → logprob: -11.125358581542969
    6. '                               ' → logprob: -12.125358581542969
    7. '<|end|>' → logprob: -12.500358581542969
    8. '                        ' → logprob: -12.500358581542969
    9. '                      ' → logprob: -13.125358581542969
    10. ',' → logprob: -13.375358581542969

Token 862: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' (adapté à ' usage') → logprob: -0.0028140286449342966
    2. ' usage' → logprob: -6.252813816070557
    3. '                       ' → logprob: -7.127813816070557
    4. '                   ' → logprob: -9.627814292907715
    5. 'return' → logprob: -11.252814292907715
    6. '               ' → logprob: -13.627814292907715
    7. '   ' → logprob: -13.877814292907715
    8. '                           ' → logprob: -14.752814292907715
    9. '           ' → logprob: -14.877814292907715
    10. ' return' → logprob: -15.377814292907715

Token 863: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.787507714354433e-05
    2. 'a' → logprob: -10.12504768371582
    3. '[' → logprob: -12.50004768371582
    4. '=' → logprob: -12.87504768371582
    5. '[
' → logprob: -13.62504768371582
    6. '=a' → logprob: -15.87504768371582
    7. '[i' → logprob: -16.37504768371582
    8. ' =' → logprob: -17.50004768371582
    9. '                   ' → logprob: -18.37504768371582
    10. '[:]' → logprob: -18.50004768371582

Token 864: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0074369581416249275
    2. ' =' → logprob: -5.382436752319336
    3. ']' → logprob: -6.507436752319336
    4. ']=' → logprob: -6.632436752319336
    5. ')=' → logprob: -14.132436752319336
    6. ')' → logprob: -14.382436752319336
    7. '[' → logprob: -14.382436752319336
    8. '<|end|>' → logprob: -14.757436752319336
    9. '=
' → logprob: -15.007436752319336
    10. '>' → logprob: -15.507436752319336

Token 865: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861456897109747
    2. ' =' → logprob: -4.758614540100098
    3. '=
' → logprob: -16.508615493774414
    4. '=

' → logprob: -18.633615493774414
    5. '<|end|>' → logprob: -19.008615493774414
    6. ')=' → logprob: -19.258615493774414
    7. ']=' → logprob: -19.383615493774414
    8. '＝' → logprob: -20.008615493774414
    9. ')' → logprob: -20.133615493774414
    10. '.=' → logprob: -20.383615493774414

Token 866: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.625028610229492
    4. '                   ' → logprob: -18.625028610229492
    5. '00' → logprob: -18.875028610229492
    6. '۰' → logprob: -19.000028610229492
    7. '                       ' → logprob: -19.312528610229492
    8. '```' → logprob: -19.375028610229492
    9. '           ' → logprob: -19.750028610229492
    10. '=' → logprob: -20.125028610229492

Token 867: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.750001907348633
    4. '۰' → logprob: -18.875001907348633
    5. '00' → logprob: -19.250001907348633
    6. '000' → logprob: -21.125001907348633
    7. '```' → logprob: -21.375001907348633
    8. '০' → logprob: -21.437501907348633
    9. '０' → logprob: -21.937501907348633
    10. '`' → logprob: -22.000001907348633

Token 868: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.822646693966817e-06
    2. '                       ' → logprob: -12.250007629394531
    3. '               ' → logprob: -13.750007629394531
    4. '                    
' → logprob: -14.500007629394531
    5. '           ' → logprob: -14.750007629394531
    6. '                  ' → logprob: -15.625007629394531
    7. '
' → logprob: -15.750007629394531
    8. ',' → logprob: -15.750007629394531
    9. '                        
' → logprob: -16.00000762939453
    10. '<|end|>' → logprob: -16.00000762939453

Token 869: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -9.729906196298543e-06
    2. '                       ' → logprob: -11.750009536743164
    3. '               ' → logprob: -13.625009536743164
    4. '           ' → logprob: -15.500009536743164
    5. '                  ' → logprob: -15.875009536743164
    6. '```' → logprob: -16.625009536743164
    7. '                    
' → logprob: -16.750009536743164
    8. '                    ' → logprob: -17.375009536743164
    9. '<|end|>' → logprob: -17.375009536743164
    10. '				' → logprob: -17.375009536743164

Token 870: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09586042910814285
    2. 'changed' → logprob: -2.595860481262207
    3. 'if' (adapté à ' if') → logprob: -4.220860481262207
    4. ' changed' → logprob: -6.345860481262207
    5. ' if' → logprob: -7.970860481262207
    6. '               ' → logprob: -10.720860481262207
    7. '           ' → logprob: -11.845860481262207
    8. '                       ' → logprob: -12.345860481262207
    9. '   ' → logprob: -13.095860481262207
    10. 'updated' → logprob: -13.720860481262207

Token 871: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -5.836499985889532e-05
    2. ' usage' → logprob: -9.7500581741333
    3. 'old' → logprob: -16.750059127807617
    4. '   ' → logprob: -17.000059127807617
    5. '  ' → logprob: -20.375059127807617
    6. ' ' → logprob: -21.375059127807617
    7. 'use' → logprob: -21.625059127807617
    8. ' old' → logprob: -22.000059127807617
    9. '       ' → logprob: -22.125059127807617
    10. 'Usage' → logprob: -22.250059127807617

Token 872: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.836499985889532e-05
    2. 'a' → logprob: -9.7500581741333
    3. '<a' → logprob: -17.125059127807617
    4. '[c' → logprob: -18.250059127807617
    5. '[
' → logprob: -18.500059127807617
    6. '[' → logprob: -18.625059127807617
    7. '   ' → logprob: -18.875059127807617
    8. ' a' → logprob: -19.375059127807617
    9. '	a' → logprob: -20.125059127807617
    10. '(a' → logprob: -20.625059127807617

Token 873: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.04964877665042877
    2. '!=' → logprob: -3.0496487617492676
    3. ' <' → logprob: -7.299648761749268
    4. '<' → logprob: -8.049649238586426
    5. ')!=' → logprob: -11.174649238586426
    6. ']!=' → logprob: -11.299649238586426
    7. ')' → logprob: -11.549649238586426
    8. '<>' → logprob: -11.924649238586426
    9. '<|end|>' → logprob: -12.174649238586426
    10. ']' → logprob: -12.424649238586426

Token 874: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8195962905883789
    2. '!=' → logprob: -1.069596290588379
    3. '<' → logprob: -1.569596290588379
    4. ' <' → logprob: -4.819596290588379
    5. ' ' → logprob: -11.069596290588379
    6. '<>' → logprob: -11.569596290588379
    7. '<int' → logprob: -12.444596290588379
    8. ' ' → logprob: -12.694596290588379
    9. ')!=' → logprob: -13.194596290588379
    10. 'old' → logprob: -13.319596290588379

Token 875: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -7.896309739408025e-07
    2. ' old' → logprob: -14.125000953674316
    3. '	old' → logprob: -19.0
    4. 'older' → logprob: -20.625
    5. '_old' → logprob: -21.375
    6. '(old' → logprob: -21.375
    7. '-old' → logprob: -21.5
    8. '
' → logprob: -21.5
    9. 'olds' → logprob: -22.0
    10. '.old' → logprob: -22.5

Token 876: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6344590783119202
    2. ':' → logprob: -0.7594590783119202
    3. '                   ' → logprob: -6.759459018707275
    4. '                       ' → logprob: -7.509459018707275
    5. '):
' → logprob: -10.134459495544434
    6. '<|end|>' → logprob: -10.134459495544434
    7. ':
' → logprob: -10.509459495544434
    8. '                           ' → logprob: -11.634459495544434
    9. ':

' → logprob: -11.634459495544434
    10. '               ' → logprob: -12.259459495544434

Token 877: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001121999230235815
    2. '                   ' → logprob: -6.876121997833252
    3. ' changed' → logprob: -10.00112247467041
    4. 'changed' → logprob: -10.37612247467041
    5. '               ' → logprob: -12.12612247467041
    6. '       ' → logprob: -13.00112247467041
    7. '           ' → logprob: -13.50112247467041
    8. '                           ' → logprob: -13.75112247467041
    9. '                     ' → logprob: -13.87612247467041
    10. '                      ' → logprob: -14.12612247467041

Token 878: ' changed' (ID: 9180)
  Prédit: ' changed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changed' → logprob: -0.6974834203720093
    2. 'changed' (adapté à ' changed') → logprob: -0.6974834203720093
    3. '                       ' → logprob: -5.447483539581299
    4. '                           ' → logprob: -11.44748306274414
    5. '                   ' → logprob: -12.19748306274414
    6. '               ' → logprob: -13.57248306274414
    7. '   ' → logprob: -13.94748306274414
    8. '.changed' → logprob: -14.19748306274414
    9. '                               ' → logprob: -14.69748306274414
    10. '           ' → logprob: -15.19748306274414

Token 879: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408074140548706
    2. '=' → logprob: -0.9740807414054871
    3. '=True' → logprob: -12.849081039428711
    4. '                       ' → logprob: -14.224081039428711
    5. ' =
' → logprob: -15.474081039428711
    6. '                           ' → logprob: -16.22408103942871
    7. '=
' → logprob: -16.34908103942871
    8. '                   ' → logprob: -16.72408103942871
    9. '           ' → logprob: -17.84908103942871
    10. '               ' → logprob: -17.97408103942871

Token 880: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0005530327325686812
    2. ' True' → logprob: -7.500553131103516
    3. '(True' → logprob: -19.000553131103516
    4. '=True' → logprob: -20.250553131103516
    5. 'true' → logprob: -22.750553131103516
    6. '                       ' → logprob: -22.750553131103516
    7. '                   ' → logprob: -23.625553131103516
    8. '_true' → logprob: -24.000553131103516
    9. '.True' → logprob: -24.250553131103516
    10. 'False' → logprob: -24.750553131103516

Token 881: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6727544069290161
    2. '<|end|>' → logprob: -0.7977544069290161
    3. '
' → logprob: -3.4227542877197266
    4. '<|end|>' → logprob: -5.797754287719727
    5. '           ' → logprob: -6.297754287719727
    6. 'return' → logprob: -8.047754287719727
    7. ' return' → logprob: -8.297754287719727
    8. '	return' → logprob: -8.672754287719727
    9. '        ' → logprob: -8.922754287719727
    10. '```' → logprob: -8.922754287719727

Token 882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003952663391828537
    2. '<|end|>' → logprob: -6.253952503204346
    3. '           ' → logprob: -6.378952503204346
    4. 'return' → logprob: -9.753952980041504
    5. '                   ' → logprob: -10.003952980041504
    6. '                       ' → logprob: -10.003952980041504
    7. '               ' → logprob: -10.003952980041504
    8. '        ' → logprob: -10.378952980041504
    9. '```' → logprob: -10.378952980041504
    10. ' return' → logprob: -11.003952980041504

Token 883: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006481233984231949
    2. '   ' → logprob: -5.756481170654297
    3. 'return' (adapté à ' return') → logprob: -6.256481170654297
    4. ' return' → logprob: -7.256481170654297
    5. '	return' → logprob: -8.131481170654297
    6. '<|end|>' → logprob: -8.381481170654297
    7. '
' → logprob: -9.506481170654297
    8. '	' → logprob: -10.256481170654297
    9. 'def' → logprob: -11.631481170654297
    10. '           ' → logprob: -12.006481170654297

Token 884: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.10020678490400314
    2. ' usage' → logprob: -2.3502068519592285
    3. 'Usage' → logprob: -15.85020637512207
    4. ' ' → logprob: -17.85020637512207
    5. ' ' → logprob: -18.10020637512207
    6. '_usage' → logprob: -18.35020637512207
    7. 'us' → logprob: -18.60020637512207
    8. 'use' → logprob: -18.72520637512207
    9. '   ' → logprob: -18.72520637512207
    10. '[' → logprob: -19.22520637512207

Token 885: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 886: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3491678237915039
    2. 'def' → logprob: -1.224167823791504
    3. '```' → logprob: -8.224167823791504
    4. '    
' → logprob: -8.849167823791504
    5. ' def' → logprob: -8.974167823791504
    6. '
' → logprob: -8.974167823791504
    7. '<|end|>' → logprob: -10.224167823791504
    8. '	def' → logprob: -12.224167823791504
    9. '        
' → logprob: -12.474167823791504
    10. ' ' → logprob: -12.974167823791504

Token 887: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014867031015455723
    2. '   ' → logprob: -4.264866828918457
    3. ' def' → logprob: -7.264866828918457
    4. '
' → logprob: -13.139866828918457
    5. '    
' → logprob: -13.889866828918457
    6. '	def' → logprob: -14.639866828918457
    7. ' ' → logprob: -15.764866828918457
    8. '  ' → logprob: -16.139867782592773
    9. '```' → logprob: -17.014867782592773
    10. '  
' → logprob: -17.389867782592773

Token 888: ' maximize' (ID: 44207)
  Prédit: ' maximize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximize' → logprob: -0.6062182188034058
    2. ' optimize' → logprob: -1.1062182188034058
    3. ' def' → logprob: -2.3562183380126953
    4. ' max' → logprob: -4.856218338012695
    5. ' calculate' → logprob: -5.231218338012695
    6. ' solve' → logprob: -5.231218338012695
    7. 'maximize' → logprob: -5.481218338012695
    8. ' compute' → logprob: -5.981218338012695
    9. ' get' → logprob: -6.481218338012695
    10. 'opt' → logprob: -7.731218338012695

Token 889: '_cal' (ID: 50948)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.767914891242981
    2. '_usage' → logprob: -1.267914891242981
    3. '_cal' → logprob: -1.392914891242981
    4. '_' → logprob: -6.142914772033691
    5. '(' → logprob: -6.142914772033691
    6. '_us' → logprob: -7.142914772033691
    7. '_use' → logprob: -7.767914772033691
    8. '(
' → logprob: -8.892914772033691
    9. '_self' → logprob: -9.392914772033691
    10. '_max' → logprob: -9.392914772033691

Token 890: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.03399604186415672
    2. 'orie' → logprob: -3.408996105194092
    3. 'or' → logprob: -8.658995628356934
    4. 'ory' → logprob: -9.033995628356934
    5. 'o' → logprob: -11.283995628356934
    6. '```' → logprob: -11.408995628356934
    7. '_' → logprob: -12.033995628356934
    8. 'ORIES' → logprob: -12.408995628356934
    9. 'oric' → logprob: -12.908995628356934
    10. '``' → logprob: -13.283995628356934

Token 891: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008195152622647583
    2. '(' → logprob: -7.125819683074951
    3. 'self' → logprob: -12.125819206237793
    4. '   ' → logprob: -12.250819206237793
    5. '       ' → logprob: -13.000819206237793
    6. ' (' → logprob: -13.625819206237793
    7. '(
' → logprob: -13.750819206237793
    8. 'def' → logprob: -15.500819206237793
    9. '	self' → logprob: -16.75082015991211
    10. '(s' → logprob: -18.25082015991211

Token 892: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5291872620582581
    2. '):
' → logprob: -1.2791872024536133
    3. '):' → logprob: -2.9041872024536133
    4. 'self' → logprob: -2.9041872024536133
    5. '       ' → logprob: -4.654187202453613
    6. '(self' → logprob: -5.029187202453613
    7. '   ' → logprob: -5.404187202453613
    8. ',self' → logprob: -6.529187202453613
    9. ')' → logprob: -7.654187202453613
    10. ' ,' → logprob: -8.654187202453613

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018780550453811884
    2. '
' → logprob: -9.250187873840332
    3. '        
' → logprob: -10.125187873840332
    4. '   ' → logprob: -10.750187873840332
    5. '```' → logprob: -11.625187873840332
    6. 'usage' → logprob: -12.250187873840332
    7. 'self' → logprob: -12.500187873840332
    8. '    
' → logprob: -12.625187873840332
    9. '()' → logprob: -13.875187873840332
    10. ' usage' → logprob: -14.375187873840332

Token 894: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004346448928117752
    2. '       ' → logprob: -5.7543463706970215
    3. ' self' → logprob: -6.7543463706970215
    4. '   ' → logprob: -13.62934684753418
    5. '	self' → logprob: -14.62934684753418
    6. '#' → logprob: -15.12934684753418
    7. '(self' → logprob: -15.50434684753418
    8. ' ' → logprob: -17.25434684753418
    9. '```' → logprob: -17.87934684753418
    10. '
' → logprob: -18.50434684753418

Token 895: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.762356209335849e-05
    2. '_build' → logprob: -10.25003719329834
    3. '.build' → logprob: -14.00003719329834
    4. '.' → logprob: -14.37503719329834
    5. ']._' → logprob: -15.25003719329834
    6. ')._' → logprob: -15.75003719329834
    7. '.\' → logprob: -16.625038146972656
    8. '_' → logprob: -16.750038146972656
    9. '_graph' → logprob: -16.875038146972656
    10. '._
' → logprob: -17.875038146972656

Token 896: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: 0.0
    2. 'bell' → logprob: -16.875
    3. '_build' → logprob: -18.125
    4. '
' → logprob: -19.875
    5. '.build' → logprob: -19.875
    6. '	build' → logprob: -20.25
    7. '```' → logprob: -20.75
    8. 'fix' → logprob: -20.75
    9. '_' → logprob: -21.375
    10. 'built' → logprob: -21.5

Token 897: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -6.704273118884885e-07
    2. ' _' → logprob: -15.125000953674316
    3. 'graph' → logprob: -15.625000953674316
    4. '
' → logprob: -16.75
    5. '_' → logprob: -17.0
    6. '_g' → logprob: -17.375
    7. '\' → logprob: -18.0
    8. '```' → logprob: -18.375
    9. '_gr' → logprob: -19.25
    10. '"_' → logprob: -19.375

Token 898: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.19083930552005768
    2. '()' → logprob: -2.1908392906188965
    3. '       ' → logprob: -2.8158392906188965
    4. '
' → logprob: -6.9408392906188965
    5. 'dist' → logprob: -6.9408392906188965
    6. '()
' → logprob: -9.690839767456055
    7. '        
' → logprob: -10.565839767456055
    8. '()

' → logprob: -11.565839767456055
    9. '   ' → logprob: -12.190839767456055
    10. 'self' → logprob: -12.690839767456055

Token 899: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3270162343978882
    2. 'dist' → logprob: -1.3270162343978882
    3. ' dist' → logprob: -4.327016353607178
    4. '	dist' → logprob: -7.952016353607178
    5. '```' → logprob: -10.57701587677002
    6. 'usage' → logprob: -10.70201587677002
    7. '        
' → logprob: -11.57701587677002
    8. '_dist' → logprob: -11.70201587677002
    9. '
' → logprob: -12.07701587677002
    10. '   ' → logprob: -12.07701587677002

Token 900: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0005760280764661729
    2. 'upper' → logprob: -7.875576019287109
    3. 'bounds' → logprob: -9.25057601928711
    4. 'd' → logprob: -9.87557601928711
    5. 'ub' → logprob: -10.87557601928711
    6. 'constraints' → logprob: -11.50057601928711
    7. 'bound' → logprob: -11.75057601928711
    8. ' dist' → logprob: -12.62557601928711
    9. 'limits' → logprob: -13.12557601928711
    10. 'max' → logprob: -13.50057601928711

Token 901: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858759790658951
    2. '=' → logprob: -3.0485875606536865
    3. ' =
' → logprob: -15.673587799072266
    4. '＝' → logprob: -17.173587799072266
    5. '=self' → logprob: -17.423587799072266
    6. '	' → logprob: -17.798587799072266
    7. '=
' → logprob: -17.923587799072266
    8. ' =[' → logprob: -18.173587799072266
    9. ' =)' → logprob: -18.798587799072266
    10. '    ' → logprob: -18.798587799072266

Token 902: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00317783304490149
    2. ' self' → logprob: -5.753177642822266
    3. '       ' → logprob: -15.753177642822266
    4. '(self' → logprob: -18.503177642822266
    5. '	self' → logprob: -20.128177642822266
    6. '[self' → logprob: -20.878177642822266
    7. '   ' → logprob: -21.128177642822266
    8. '
' → logprob: -21.503177642822266
    9. '        ' → logprob: -21.628177642822266
    10. ' ' → logprob: -22.003177642822266

Token 903: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00026419671485200524
    2. '_b' → logprob: -8.250264167785645
    3. '.b' → logprob: -13.000264167785645
    4. '.' → logprob: -14.875264167785645
    5. '_.' → logprob: -16.25026512145996
    6. ' _' → logprob: -16.87526512145996
    7. '_' → logprob: -17.75026512145996
    8. '.__' → logprob: -18.50026512145996
    9. ' .' → logprob: -19.00026512145996
    10. ''_' → logprob: -19.25026512145996

Token 904: 'bell' (ID: 28449)
  Prédit: 'bell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bell' → logprob: -1.9361264946837764e-07
    2. 'bel' → logprob: -16.625
    3. 'build' → logprob: -16.875
    4. 'ball' → logprob: -18.375
    5. 'bill' → logprob: -19.875
    6. ' bell' → logprob: -20.375
    7. 'bond' → logprob: -20.375
    8. '```' → logprob: -21.0
    9. 'bob' → logprob: -21.125
    10. '
' → logprob: -21.25

Token 905: 'man' (ID: 2309)
  Prédit: 'man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.625
    3. '```' → logprob: -16.75
    4. '   ' → logprob: -17.125
    5. 'max' → logprob: -18.125
    6. 'mann' → logprob: -18.25
    7. '_' → logprob: -18.375
    8. 'man's' → logprob: -18.5
    9. '     ' → logprob: -18.625
    10. 'ман' → logprob: -19.0

Token 906: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -6.511406809295295e-06
    2. 'ford' → logprob: -12.625006675720215
    3. '_' → logprob: -13.500006675720215
    4. '_for' → logprob: -13.875006675720215
    5. '_b' → logprob: -14.750006675720215
    6. 'Ford' → logprob: -16.3750057220459
    7. '-f' → logprob: -16.3750057220459
    8. 'f' → logprob: -16.6250057220459
    9. '\' → logprob: -17.2500057220459
    10. '```' → logprob: -17.3750057220459

Token 907: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -2.3795937522663735e-05
    2. 'ford' → logprob: -11.37502384185791
    3. '_ord' → logprob: -12.50002384185791
    4. '(ord' → logprob: -12.87502384185791
    5. '```' → logprob: -13.50002384185791
    6. 'or' → logprob: -13.87502384185791
    7. 'Ford' → logprob: -14.62502384185791
    8. 'орд' → logprob: -14.87502384185791
    9. '   ' → logprob: -15.12502384185791
    10. '_' → logprob: -15.25002384185791

Token 908: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.339278580620885e-06
    2. '()
' → logprob: -13.250001907348633
    3. ' ()' → logprob: -15.750001907348633
    4. '()[' → logprob: -16.500001907348633
    5. '()

' → logprob: -16.625001907348633
    6. '()]' → logprob: -17.000001907348633
    7. '()`' → logprob: -17.125001907348633
    8. '(' → logprob: -17.625001907348633
    9. '();' → logprob: -18.000001907348633
    10. '().' → logprob: -18.125001907348633

Token 909: '       ' (ID: 309)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.5182201266288757
    2. ' usage' → logprob: -1.0182201862335205
    3. '       ' → logprob: -3.1432201862335205
    4. '   ' → logprob: -10.268219947814941
    5. '_usage' → logprob: -13.393219947814941
    6. '```' → logprob: -14.143219947814941
    7. 'Usage' → logprob: -14.268219947814941
    8. ' ' → logprob: -15.018219947814941
    9. '        
' → logprob: -15.268219947814941
    10. '
' → logprob: -15.393219947814941

Token 910: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' (adapté à ' usage') → logprob: -0.001171056181192398
    2. ' usage' → logprob: -6.751171112060547
    3. 'adjust' → logprob: -15.126171112060547
    4. 'us' → logprob: -15.251171112060547
    5. '       ' → logprob: -16.251171112060547
    6. '   ' → logprob: -16.501171112060547
    7. 'Usage' → logprob: -16.751171112060547
    8. '_usage' → logprob: -17.751171112060547
    9. '        
' → logprob: -18.126171112060547
    10. 'final' → logprob: -18.251171112060547

Token 911: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967913061380386
    2. '=' → logprob: -2.8119678497314453
    3. ' =[' → logprob: -16.311967849731445
    4. '＝' → logprob: -16.686967849731445
    5. ' =
' → logprob: -18.186967849731445
    6. '[' → logprob: -18.186967849731445
    7. '[:]' → logprob: -18.311967849731445
    8. '=[' → logprob: -18.561967849731445
    9. '   ' → logprob: -19.061967849731445
    10. '=

' → logprob: -19.186967849731445

Token 912: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0788901224732399
    2. ' self' → logprob: -2.578890085220337
    3. '       ' → logprob: -16.078889846801758
    4. '(self' → logprob: -16.328889846801758
    5. '	self' → logprob: -16.703889846801758
    6. '   ' → logprob: -17.328889846801758
    7. '[self' → logprob: -17.828889846801758
    8. ' ' → logprob: -19.953889846801758
    9. '=self' → logprob: -20.453889846801758
    10. ' ' → logprob: -20.828889846801758

Token 913: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.061054359131958e-06
    2. '_adjust' → logprob: -12.375007629394531
    3. '.' → logprob: -12.750007629394531
    4. '_max' → logprob: -14.375007629394531
    5. '_' → logprob: -16.50000762939453
    6. ' .' → logprob: -17.12500762939453
    7. '.\' → logprob: -17.25000762939453
    8. '.adjust' → logprob: -17.62500762939453
    9. '._
' → logprob: -17.87500762939453
    10. ' _' → logprob: -18.37500762939453

Token 914: 'adjust' (ID: 78460)
  Prédit: 'adjust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: 0.0
    2. ' adjust' → logprob: -18.75
    3. '_adjust' → logprob: -19.0
    4. '.adjust' → logprob: -19.25
    5. 'adj' → logprob: -19.5
    6. 'assign' → logprob: -20.5
    7. 'fix' → logprob: -20.625
    8. 'build' → logprob: -21.125
    9. 'Adjust' → logprob: -21.25
    10. '-adjust' → logprob: -21.25

Token 915: '_us' (ID: 43779)
  Prédit: '_us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -5.319370302458992e-06
    2. 'us' → logprob: -12.750005722045898
    3. '_usage' → logprob: -13.000005722045898
    4. 'usage' → logprob: -16.0000057220459
    5. '_use' → logprob: -18.6250057220459
    6. 's' → logprob: -19.3750057220459
    7. 'Us' → logprob: -19.5000057220459
    8. ' usages' → logprob: -19.6250057220459
    9. '```' → logprob: -19.8750057220459
    10. '(us' → logprob: -20.0000057220459

Token 916: 'ages' (ID: 1461)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.023253517225384712
    2. 'ages' → logprob: -3.7732534408569336
    3. 'usage' → logprob: -11.898253440856934
    4. '   ' → logprob: -14.023253440856934
    5. '[' → logprob: -16.14825439453125
    6. 'ag' → logprob: -16.39825439453125
    7. 'sage' → logprob: -16.89825439453125
    8. '_usage' → logprob: -17.02325439453125
    9. 'e' → logprob: -17.14825439453125
    10. '       ' → logprob: -17.14825439453125

Token 917: '(dist' (ID: 78981)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.895480277715251e-06
    2. 'usage' → logprob: -12.375008583068848
    3. '(
' → logprob: -13.125008583068848
    4. '(dist' → logprob: -13.500008583068848
    5. ' (' → logprob: -14.625008583068848
    6. '(use' → logprob: -15.125008583068848
    7. '()' → logprob: -16.000009536743164
    8. ' usage' → logprob: -16.125009536743164
    9. '(us' → logprob: -16.750009536743164
    10. '(self' → logprob: -17.000009536743164

Token 918: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0842251405119896
    2. ')
' → logprob: -2.5842251777648926
    3. '       ' → logprob: -5.584225177764893
    4. '()' → logprob: -6.709225177764893
    5. '()
' → logprob: -8.084224700927734
    6. '())' → logprob: -11.084224700927734
    7. '())
' → logprob: -11.209224700927734
    8. '   ' → logprob: -12.584224700927734
    9. ')
' → logprob: -13.209224700927734
    10. ' )' → logprob: -13.959224700927734

Token 919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17543920874595642
    2. 'usage' → logprob: -2.1754391193389893
    3. ' usage' → logprob: -3.0504391193389893
    4. '   ' → logprob: -11.80043888092041
    5. '_usage' → logprob: -12.42543888092041
    6. '
' → logprob: -13.92543888092041
    7. '        
' → logprob: -14.05043888092041
    8. 'Usage' → logprob: -14.55043888092041
    9. 'return' → logprob: -15.05043888092041
    10. '	' → logprob: -15.42543888092041

Token 920: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' (adapté à ' usage') → logprob: -4.596781946020201e-05
    2. ' usage' → logprob: -10.000045776367188
    3. '       ' → logprob: -14.625045776367188
    4. 'fixed' → logprob: -17.125045776367188
    5. 'correct' → logprob: -19.125045776367188
    6. 'Usage' → logprob: -19.250045776367188
    7. 'fix' → logprob: -19.250045776367188
    8. '        
' → logprob: -19.875045776367188
    9. '   ' → logprob: -20.000045776367188
    10. 'final' → logprob: -20.375045776367188

Token 921: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. '=self' → logprob: -15.00192928314209
    4. '＝' → logprob: -17.876930236816406
    5. '_=' → logprob: -18.376930236816406
    6. '=
' → logprob: -18.876930236816406
    7. '=_' → logprob: -19.001930236816406
    8. '.=' → logprob: -19.501930236816406
    9. '=

' → logprob: -19.501930236816406
    10. '=}' → logprob: -20.251930236816406

Token 922: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06196802109479904
    2. ' self' → logprob: -2.8119680881500244
    3. '       ' → logprob: -15.436967849731445
    4. '(self' → logprob: -16.311967849731445
    5. '	self' → logprob: -17.561967849731445
    6. '   ' → logprob: -18.561967849731445
    7. '[self' → logprob: -19.061967849731445
    8. ' ' → logprob: -19.686967849731445
    9. '=self' → logprob: -19.936967849731445
    10. ' ' → logprob: -20.811967849731445

Token 923: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.4987974029500037e-05
    2. '_fix' → logprob: -10.625024795532227
    3. '.' → logprob: -14.375024795532227
    4. '_fixed' → logprob: -17.375024795532227
    5. '_f' → logprob: -18.625024795532227
    6. ' .' → logprob: -18.625024795532227
    7. '   ' → logprob: -18.875024795532227
    8. '.\' → logprob: -19.250024795532227
    9. ']._' → logprob: -19.375024795532227
    10. '_' → logprob: -19.625024795532227

Token 924: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: 0.0
    2. 'fixed' → logprob: -19.875
    3. '_fix' → logprob: -21.375
    4. ' fix' → logprob: -21.875
    5. '```' → logprob: -22.5
    6. 'fit' → logprob: -23.0
    7. '.fix' → logprob: -23.375
    8. 'Fix' → logprob: -23.5
    9. 'flex' → logprob: -23.875
    10. 'fill' → logprob: -23.875

Token 925: '_vi' (ID: 187265)
  Prédit: '_vi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vi' → logprob: -3.166338137816638e-05
    2. '_usage' → logprob: -10.875031471252441
    3. '_' → logprob: -11.625031471252441
    4. '_us' → logprob: -13.250031471252441
    5. 'vi' → logprob: -13.375031471252441
    6. 'usage' → logprob: -15.750031471252441
    7. 'viol' → logprob: -16.875032424926758
    8. '_vo' → logprob: -17.125032424926758
    9. '_v' → logprob: -18.125032424926758
    10. 'Vi' → logprob: -18.375032424926758

Token 926: 'olation' (ID: 33369)
  Prédit: 'olation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olation' → logprob: -0.00560356117784977
    2. 'ol' → logprob: -5.755603790283203
    3. 'usage' → logprob: -6.380603790283203
    4. 'o' → logprob: -7.880603790283203
    5. 'olate' → logprob: -8.880603790283203
    6. 'olution' → logprob: -10.005603790283203
    7. 'olat' → logprob: -10.255603790283203
    8. 'ols' → logprob: -10.505603790283203
    9. 's' → logprob: -10.755603790283203
    10. '_usage' → logprob: -11.255603790283203

Token 927: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.816093228830141e-06
    2. 'usage' → logprob: -13.37500286102295
    3. '(
' → logprob: -13.75000286102295
    4. ' (' → logprob: -15.87500286102295
    5. ' usage' → logprob: -18.625001907348633
    6. '(use' → logprob: -19.125001907348633
    7. '((' → logprob: -20.625001907348633
    8. 'Usage' → logprob: -21.000001907348633
    9. '(us' → logprob: -21.250001907348633
    10. '(using' → logprob: -21.500001907348633

Token 928: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -1.0206720617134124e-05
    2. ' usage' → logprob: -11.50001049041748
    3. ')' → logprob: -19.375009536743164
    4. 'Usage' → logprob: -22.000009536743164
    5. '_usage' → logprob: -22.625009536743164
    6. '   ' → logprob: -22.750009536743164
    7. ' ' → logprob: -23.125009536743164
    8. ')
' → logprob: -23.250009536743164
    9. '
' → logprob: -23.750009536743164
    10. ',' → logprob: -24.000009536743164

Token 929: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03813019394874573
    2. ')' → logprob: -3.288130283355713
    3. '       ' → logprob: -9.538129806518555
    4. ')

' → logprob: -11.413129806518555
    5. ' )
' → logprob: -12.788129806518555
    6. ')
' → logprob: -13.288129806518555
    7. '
' → logprob: -14.038129806518555
    8. ' )' → logprob: -16.288129806518555
    9. '()
' → logprob: -16.413129806518555
    10. '   ' → logprob: -16.663129806518555

Token 930: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06147366762161255
    2. 'total' → logprob: -3.8114736080169678
    3. ' total' → logprob: -4.186473846435547
    4. '
' → logprob: -4.811473846435547
    5. ' for' → logprob: -4.811473846435547
    6. 'for' → logprob: -5.936473846435547
    7. ' calories' → logprob: -6.811473846435547
    8. 'max' → logprob: -6.936473846435547
    9. ' max' → logprob: -8.061473846435547
    10. '   ' → logprob: -8.311473846435547

Token 931: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.2419348508119583
    2. 'for' → logprob: -1.741934895515442
    3. 'cal' → logprob: -3.7419347763061523
    4. 'return' → logprob: -5.116934776306152
    5. 'max' → logprob: -5.366934776306152
    6. ' total' → logprob: -5.866934776306152
    7. 'result' → logprob: -7.116934776306152
    8. ' for' → logprob: -7.241934776306152
    9. '       ' → logprob: -7.491934776306152
    10. 'self' → logprob: -9.116934776306152

Token 932: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -0.07468567043542862
    2. ' =' → logprob: -2.824685573577881
    3. '=' → logprob: -4.699685573577881
    4. '_usage' → logprob: -6.199685573577881
    5. '_t' → logprob: -6.699685573577881
    6. '_' → logprob: -9.449686050415039
    7. 'cal' → logprob: -9.574686050415039
    8. '   ' → logprob: -9.824686050415039
    9. ' +=' → logprob: -11.574686050415039
    10. '_c' → logprob: -11.574686050415039

Token 933: 'ories' (ID: 3279)
  Prédit: 'orie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orie' → logprob: -0.2016887366771698
    2. 'ories' → logprob: -1.7016887664794922
    3. ' =' → logprob: -8.951688766479492
    4. 'ory' → logprob: -9.576688766479492
    5. '=' → logprob: -9.826688766479492
    6. 'or' → logprob: -11.201688766479492
    7. 'oric' → logprob: -12.576688766479492
    8. 'o' → logprob: -13.076688766479492
    9. '_total' → logprob: -14.451688766479492
    10. 'erie' → logprob: -14.951688766479492

Token 934: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602250337600708
    2. '=' → logprob: -1.9102250337600708
    3. '=sum' → logprob: -14.535224914550781
    4. ' +=' → logprob: -16.16022491455078
    5. ' ' → logprob: -16.53522491455078
    6. ' ' → logprob: -16.66022491455078
    7. '	' → logprob: -16.78522491455078
    8. ' =
' → logprob: -17.66022491455078
    9. '=self' → logprob: -17.91022491455078
    10. ',' → logprob: -17.91022491455078

Token 935: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009718664921820164
    2. 'sum' → logprob: -5.259718894958496
    3. ' sum' → logprob: -5.634718894958496
    4. ' ' → logprob: -7.009718894958496
    5. '   ' → logprob: -16.75971794128418
    6. '	sum' → logprob: -17.63471794128418
    7. ' ' → logprob: -18.63471794128418
    8. '(sum' → logprob: -18.63471794128418
    9. '=sum' → logprob: -19.00971794128418
    10. '.sum' → logprob: -19.13471794128418

Token 936: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889385521411896
    2. 'sum' → logprob: -2.5788938999176025
    3. ' sum' → logprob: -12.453893661499023
    4. ' ' → logprob: -15.578893661499023
    5. '	sum' → logprob: -18.828893661499023
    6. '(sum' → logprob: -19.203893661499023
    7. '   ' → logprob: -19.203893661499023
    8. 'max' → logprob: -19.203893661499023
    9. '=sum' → logprob: -19.453893661499023
    10. 'Sum' → logprob: -19.578893661499023

Token 937: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03600562363862991
    2. '       ' → logprob: -3.536005735397339
    3. ' for' → logprob: -5.41100549697876
    4. 'for' → logprob: -6.53600549697876
    5. '	for' → logprob: -9.411005973815918
    6. '<|end|>' → logprob: -9.536005973815918
    7. '        
' → logprob: -9.786005973815918
    8. '
' → logprob: -9.911005973815918
    9. ' 
' → logprob: -11.661005973815918
    10. '' → logprob: -12.036005973815918

Token 938: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048060785979032516
    2. 'for' → logprob: -3.548060894012451
    3. ' for' → logprob: -4.298060894012451
    4. '
' → logprob: -5.423060894012451
    5. '	for' → logprob: -9.673060417175293
    6. '   ' → logprob: -10.548060417175293
    7. '<|end|>' → logprob: -10.673060417175293
    8. '	' → logprob: -12.048060417175293
    9. ',' → logprob: -12.298060417175293
    10. ')' → logprob: -12.673060417175293

Token 939: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.107425062713446e-06
    2. ' for' → logprob: -12.250006675720215
    3. '       ' → logprob: -13.000006675720215
    4. '	for' → logprob: -19.50000762939453
    5. '
' → logprob: -21.00000762939453
    6. '   ' → logprob: -22.50000762939453
    7. '```' → logprob: -23.62500762939453
    8. '#' → logprob: -24.12500762939453
    9. '        
' → logprob: -25.37500762939453
    10. ' ' → logprob: -25.37500762939453

Token 940: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01608363911509514
    2. ' i' → logprob: -4.141083717346191
    3. 'machine' → logprob: -10.141083717346191
    4. '   ' → logprob: -12.391083717346191
    5. ' machine' → logprob: -13.141083717346191
    6. 'idx' → logprob: -13.516083717346191
    7. '	i' → logprob: -14.391083717346191
    8. ' ' → logprob: -14.641083717346191
    9. 'usage' → logprob: -14.891083717346191
    10. '  ' → logprob: -14.891083717346191

Token 941: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024579018354415894
    2. ',' → logprob: -4.149579048156738
    3. 'in' → logprob: -4.774579048156738
    4. ' ' → logprob: -10.524579048156738
    5. ' ,' → logprob: -10.774579048156738
    6. '   ' → logprob: -12.024579048156738
    7. '	in' → logprob: -12.524579048156738
    8. '    ' → logprob: -12.649579048156738
    9. ',in' → logprob: -13.899579048156738
    10. '  ' → logprob: -14.024579048156738

Token 942: ' u' (ID: 337)
  Prédit: 'machine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'machine' → logprob: -0.00014931005716789514
    2. ' machine' → logprob: -9.000149726867676
    3. 'usage' → logprob: -11.375149726867676
    4. 'm' → logprob: -11.375149726867676
    5. 'mach' → logprob: -14.000149726867676
    6. '(machine' → logprob: -14.125149726867676
    7. 'u' → logprob: -14.750149726867676
    8. '```' → logprob: -15.250149726867676
    9. '_machine' → logprob: -15.625149726867676
    10. '   ' → logprob: -15.750149726867676

Token 943: ' in' (ID: 306)
  Prédit: 'sage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sage' → logprob: -0.03880607336759567
    2. 'se' → logprob: -3.6638059616088867
    3. ' in' → logprob: -4.413805961608887
    4. 's' → logprob: -8.288805961608887
    5. 'age' → logprob: -10.413805961608887
    6. 'sed' → logprob: -11.788805961608887
    7. 'usage' → logprob: -11.788805961608887
    8. 'in' → logprob: -12.163805961608887
    9. ',' → logprob: -12.163805961608887
    10. '   ' → logprob: -13.038805961608887

Token 944: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.20141363143920898
    2. ' enumerate' → logprob: -1.701413631439209
    3. 'range' → logprob: -15.701414108276367
    4. ' ' → logprob: -17.201414108276367
    5. 'self' → logprob: -17.326414108276367
    6. '   ' → logprob: -17.701414108276367
    7. 'enum' → logprob: -17.701414108276367
    8. 'zip' → logprob: -19.326414108276367
    9. '.enumer' → logprob: -19.326414108276367
    10. '```' → logprob: -19.326414108276367

Token 945: '(' (ID: 7)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.056663282215595245
    2. '(self' → logprob: -3.4316632747650146
    3. ' self' → logprob: -3.8066632747650146
    4. 'enumer' → logprob: -8.431663513183594
    5. 'range' → logprob: -9.306663513183594
    6. '(' → logprob: -9.431663513183594
    7. 'usage' → logprob: -10.181663513183594
    8. ' (' → logprob: -10.181663513183594
    9. '   ' → logprob: -10.431663513183594
    10. ')' → logprob: -11.556663513183594

Token 946: 'usage' (ID: 25871)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001029471677611582
    2. ' self' → logprob: -9.375102996826172
    3. 'usage' → logprob: -11.125102996826172
    4. '   ' → logprob: -13.250102996826172
    5. '       ' → logprob: -14.500102996826172
    6. '[self' → logprob: -15.000102996826172
    7. ' ' → logprob: -15.625102996826172
    8. '(self' → logprob: -15.750102996826172
    9. '	self' → logprob: -16.125102996826172
    10. ')' → logprob: -16.125102996826172

Token 947: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16148947179317474
    2. '):
' → logprob: -1.911489486694336
    3. ':' → logprob: -6.786489486694336
    4. '       ' → logprob: -10.411489486694336
    5. '):
' → logprob: -10.411489486694336
    6. ')' → logprob: -10.536489486694336
    7. ':
' → logprob: -10.911489486694336
    8. ' ):' → logprob: -11.036489486694336
    9. '   ' → logprob: -12.036489486694336
    10. ' ):
' → logprob: -12.661489486694336

Token 948: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05638107284903526
    2. 'total' → logprob: -3.0563809871673584
    3. ' total' → logprob: -5.4313812255859375
    4. '
' → logprob: -5.8063812255859375
    5. '       ' → logprob: -9.056381225585938
    6. ',total' → logprob: -9.431381225585938
    7. '(total' → logprob: -9.931381225585938
    8. '   ' → logprob: -10.431381225585938
    9. ',' → logprob: -10.681381225585938
    10. '	total' → logprob: -11.181381225585938

Token 949: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.009224005974829197
    2. ' total' → logprob: -4.759223937988281
    3. '           ' → logprob: -7.509223937988281
    4. 'machine' → logprob: -9.884223937988281
    5. '       ' → logprob: -12.259223937988281
    6. '	total' → logprob: -13.134223937988281
    7. '
' → logprob: -13.884223937988281
    8. 'self' → logprob: -14.009223937988281
    9. '   ' → logprob: -14.009223937988281
    10. ' machine' → logprob: -15.384223937988281

Token 950: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -9.102680633077398e-05
    2. 'cal' → logprob: -9.500090599060059
    3. '+=' → logprob: -11.625090599060059
    4. ' +=' → logprob: -12.875090599060059
    5. '+' → logprob: -13.625090599060059
    6. '_' → logprob: -13.750090599060059
    7. 'Calories' → logprob: -15.000090599060059
    8. 'Cal' → logprob: -15.250090599060059
    9. '	cal' → logprob: -15.250090599060059
    10. '=' → logprob: -15.250090599060059

Token 951: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.026372993364930153
    2. 'orie' → logprob: -3.6513729095458984
    3. 'or' → logprob: -10.526372909545898
    4. 'o' → logprob: -10.901372909545898
    5. 'ory' → logprob: -11.151372909545898
    6. 'ores' → logprob: -12.776372909545898
    7. 'aries' → logprob: -13.151372909545898
    8. '       ' → logprob: -13.401372909545898
    9. 'oires' → logprob: -13.901372909545898
    10. 'eries' → logprob: -14.151372909545898

Token 952: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12694627046585083
    2. ' +=' → logprob: -2.126946210861206
    3. '+' → logprob: -11.376946449279785
    4. '+=(' → logprob: -12.751946449279785
    5. ']+=' → logprob: -13.251946449279785
    6. '=' → logprob: -14.001946449279785
    7. '       ' → logprob: -14.876946449279785
    8. '   ' → logprob: -15.376946449279785
    9. '    ' → logprob: -15.501946449279785
    10. '           ' → logprob: -16.00194549560547

Token 953: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.11648492515087128
    2. 'self' → logprob: -2.8664848804473877
    3. ' u' → logprob: -3.1164848804473877
    4. ' self' → logprob: -4.741485118865967
    5. '   ' → logprob: -11.116484642028809
    6. '       ' → logprob: -13.616484642028809
    7. '	u' → logprob: -13.741484642028809
    8. '           ' → logprob: -13.991484642028809
    9. '(self' → logprob: -15.116484642028809
    10. ' ' → logprob: -15.616484642028809

Token 954: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.006930504459887743
    2. '*' → logprob: -5.256930351257324
    3. '*self' → logprob: -6.381930351257324
    4. '*object' → logprob: -13.631930351257324
    5. '   ' → logprob: -13.756930351257324
    6. 'self' → logprob: -14.506930351257324
    7. ' ' → logprob: -14.756930351257324
    8. ' ' → logprob: -16.25693130493164
    9. ' self' → logprob: -16.38193130493164
    10. '       ' → logprob: -16.88193130493164

Token 955: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234002135694027
    2. ' self' → logprob: -5.2552337646484375
    3. '(self' → logprob: -16.130233764648438
    4. '   ' → logprob: -17.505233764648438
    5. '	self' → logprob: -17.505233764648438
    6. '[self' → logprob: -18.005233764648438
    7. '*self' → logprob: -18.505233764648438
    8. '`' → logprob: -18.755233764648438
    9. '```' → logprob: -18.755233764648438
    10. '       ' → logprob: -18.880233764648438

Token 956: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0005930667975917459
    2. 'machines' → logprob: -7.500593185424805
    3. '.' → logprob: -10.500593185424805
    4. ' machines' → logprob: -12.250593185424805
    5. ' .' → logprob: -12.750593185424805
    6. 'Machines' → logprob: -13.000593185424805
    7. '.machine' → logprob: -14.125593185424805
    8. '```' → logprob: -15.000593185424805
    9. '_.' → logprob: -15.250593185424805
    10. '().' → logprob: -15.625593185424805

Token 957: 'achines' (ID: 180949)
  Prédit: 'achines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achines' → logprob: -0.00022117885237094015
    2. 'ach' → logprob: -9.125221252441406
    3. 'achine' → logprob: -9.125221252441406
    4. 'machines' → logprob: -13.500221252441406
    5. '.m' → logprob: -14.000221252441406
    6. 'aches' → logprob: -14.250221252441406
    7. 'ac' → logprob: -16.625221252441406
    8. 'ines' → logprob: -17.000221252441406
    9. 'a' → logprob: -17.000221252441406
    10. 'ch' → logprob: -17.250221252441406

Token 958: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. '[
' → logprob: -16.625
    4. '```' → logprob: -16.875
    5. '[I' → logprob: -17.875
    6. ' [' → logprob: -18.125
    7. '[s' → logprob: -18.25
    8. '\[' → logprob: -18.75
    9. '[u' → logprob: -18.875
    10. '[self' → logprob: -19.75

Token 959: '].' (ID: 1651)
  Prédit: '.cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -0.0007482792134396732
    2. '].' → logprob: -8.125748634338379
    3. '.' → logprob: -9.125748634338379
    4. ').' → logprob: -9.375748634338379
    5. ' .' → logprob: -9.750748634338379
    6. '.Cal' → logprob: -10.375748634338379
    7. '}.' → logprob: -10.875748634338379
    8. '.cod' → logprob: -11.000748634338379
    9. '.wpi' → logprob: -11.750748634338379
    10. '.timedelta' → logprob: -11.875748634338379

Token 960: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: 0.0
    2. '	cal' → logprob: -17.875
    3. '.cal' → logprob: -18.25
    4. '-cal' → logprob: -18.5
    5. '(cal' → logprob: -18.625
    6. '_cal' → logprob: -19.625
    7. ' calorie' → logprob: -19.625
    8. 'Cal' → logprob: -19.875
    9. 'callee' → logprob: -21.125
    10. 'kal' → logprob: -21.5

Token 961: 'orie' (ID: 22416)
  Prédit: 'orie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orie' → logprob: -6.153795766294934e-06
    2. 'ory' → logprob: -12.750005722045898
    3. 'or' → logprob: -13.500005722045898
    4. 'o' → logprob: -14.000005722045898
    5. 'ories' → logprob: -14.875005722045898
    6. ' or' → logprob: -15.750005722045898
    7. 'oire' → logprob: -16.0000057220459
    8. '_or' → logprob: -17.0000057220459
    9. 'erie' → logprob: -17.1250057220459
    10. '
' → logprob: -17.2500057220459

Token 962: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003725257236510515
    2. '       ' → logprob: -5.628725051879883
    3. 'return' → logprob: -9.753725051879883
    4. '
' → logprob: -10.378725051879883
    5. '        
' → logprob: -10.628725051879883
    6. ' return' → logprob: -12.003725051879883
    7. '

' → logprob: -13.128725051879883
    8. ' 
' → logprob: -13.128725051879883
    9. '    
' → logprob: -14.378725051879883
    10. '  
' → logprob: -15.503725051879883

Token 963: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03312191739678383
    2. 'return' → logprob: -3.7831218242645264
    3. '
' → logprob: -4.6581220626831055
    4. ' return' → logprob: -8.408122062683105
    5. 'self' → logprob: -9.408122062683105
    6. '```' → logprob: -11.283122062683105
    7. '   ' → logprob: -11.658122062683105
    8. '	return' → logprob: -12.408122062683105
    9. '
' → logprob: -12.408122062683105
    10. '        
' → logprob: -12.908122062683105

Token 964: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004469964769668877
    2. '
' → logprob: -8.500447273254395
    3. '       ' → logprob: -8.750447273254395
    4. ' return' → logprob: -9.500447273254395
    5. 'self' → logprob: -11.500447273254395
    6. '	return' → logprob: -16.750446319580078
    7. '        
' → logprob: -16.875446319580078
    8. '```' → logprob: -18.875446319580078
    9. '{return' → logprob: -19.500446319580078
    10. '\
' → logprob: -19.750446319580078

Token 965: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2014133334159851
    2. 'total' → logprob: -1.7014133930206299
    3. '(total' → logprob: -17.826414108276367
    4. '	total' → logprob: -17.951414108276367
    5. ' ' → logprob: -19.951414108276367
    6. '_total' → logprob: -20.326414108276367
    7. '$total' → logprob: -20.576414108276367
    8. ',total' → logprob: -21.701414108276367
    9. 'Total' → logprob: -22.201414108276367
    10. ' totale' → logprob: -22.576414108276367

Token 966: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -9.138441237155348e-05
    2. '_' → logprob: -9.375091552734375
    3. '_total' → logprob: -12.500091552734375
    4. '_ca' → logprob: -13.500091552734375
    5. '__' → logprob: -15.125091552734375
    6. '_c' → logprob: -15.250091552734375
    7. 'cal' → logprob: -16.000091552734375
    8. ' _' → logprob: -16.000091552734375
    9. '_C' → logprob: -16.750091552734375
    10. '_co' → logprob: -16.875091552734375

Token 967: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -5.5577775128767826e-06
    2. 'orie' → logprob: -12.625005722045898
    3. 'or' → logprob: -14.000005722045898
    4. 'o' → logprob: -14.125005722045898
    5. 'ory' → logprob: -15.875005722045898
    6. 'ORIES' → logprob: -16.1250057220459
    7. 'aries' → logprob: -16.2500057220459
    8. 'eries' → logprob: -17.0000057220459
    9. '_' → logprob: -17.1250057220459
    10. 'ries' → logprob: -17.6250057220459

Token 968: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 969: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 970: ' Gym' (ID: 42516)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.36770522594451904
    2. ' Training' → logprob: -1.617705225944519
    3. ' Solver' → logprob: -2.9927053451538086
    4. ' Trainer' → logprob: -3.6177053451538086
    5. 'Solution' → logprob: -4.742705345153809
    6. ' Fitness' → logprob: -5.367705345153809
    7. ' Max' → logprob: -5.742705345153809
    8. 'Training' → logprob: -6.242705345153809
    9. ' Constraint' → logprob: -6.867705345153809
    10. 'Trainer' → logprob: -7.117705345153809

Token 971: 'Simulator' (ID: 120745)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22603394091129303
    2. 'Trainer' → logprob: -2.351033926010132
    3. 'Membership' → logprob: -3.601033926010132
    4. 'Member' → logprob: -3.601033926010132
    5. 'User' → logprob: -4.226034164428711
    6. ':
' → logprob: -4.976034164428711
    7. 'Visitor' → logprob: -5.101034164428711
    8. 'Workout' → logprob: -5.351034164428711
    9. 'Training' → logprob: -5.726034164428711
    10. 'Manager' → logprob: -6.101034164428711

Token 972: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013301216531544924
    2. ':
' → logprob: -6.6263298988342285
    3. ':def' → logprob: -13.751330375671387
    4. '(object' → logprob: -14.126330375671387
    5. '<|end|>' → logprob: -14.251330375671387
    6. ' :' → logprob: -14.626330375671387
    7. ':

' → logprob: -14.751330375671387
    8. '(' → logprob: -15.126330375671387
    9. '():' → logprob: -15.251330375671387
    10. ':
' → logprob: -16.75132942199707

Token 973: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011173540260642767
    2. ' def' → logprob: -6.87611722946167
    3. 'class' → logprob: -10.126117706298828
    4. ' class' → logprob: -10.626117706298828
    5. 'def' → logprob: -11.501117706298828
    6. '```' → logprob: -12.876117706298828
    7. '
' → logprob: -13.251117706298828
    8. ':' → logprob: -13.251117706298828
    9. '	def' → logprob: -14.251117706298828
    10. ':
' → logprob: -14.376117706298828

Token 974: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.136856347322464
    2. 'def' (adapté à ' def') → logprob: -2.6368563175201416
    3. '   ' → logprob: -2.8868563175201416
    4. 'class' → logprob: -7.511856555938721
    5. ' class' → logprob: -11.761856079101562
    6. '```' → logprob: -12.261856079101562
    7. '	def' → logprob: -12.761856079101562
    8. '    ' → logprob: -12.886856079101562
    9. ':' → logprob: -14.136856079101562
    10. ' ' → logprob: -14.261856079101562

Token 975: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07960429787635803
    2. '__' → logprob: -2.579604387283325
    3. 'init' → logprob: -7.829604148864746
    4. ' def' → logprob: -8.829604148864746
    5. ' init' → logprob: -9.454604148864746
    6. 'def' → logprob: -9.454604148864746
    7. '_init' → logprob: -12.579604148864746
    8. '```' → logprob: -12.954604148864746
    9. '___' → logprob: -13.329604148864746
    10. ' ' → logprob: -13.329604148864746

Token 976: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00015169414109550416
    2. 'class' → logprob: -9.875151634216309
    3. '```' → logprob: -10.000151634216309
    4. '__' → logprob: -10.500151634216309
    5. 'def' → logprob: -11.625151634216309
    6. '_init' → logprob: -12.125151634216309
    7. 'iter' → logprob: -12.500151634216309
    8. '(init' → logprob: -13.000151634216309
    9. ' init' → logprob: -13.375151634216309
    10. 'it' → logprob: -13.625151634216309

Token 977: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07937803864479065
    2. '(self' → logprob: -2.579378128051758
    3. '__(
' → logprob: -8.329378128051758
    4. ' (' → logprob: -9.454378128051758
    5. '__' → logprob: -9.579378128051758
    6. 'self' → logprob: -10.329378128051758
    7. '(' → logprob: -10.954378128051758
    8. 'class' → logprob: -11.204378128051758
    9. '_(' → logprob: -11.454378128051758
    10. '__((' → logprob: -12.204378128051758

Token 978: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.408677290892228e-05
    2. ' self' → logprob: -9.7500638961792
    3. ')' → logprob: -12.5000638961792
    4. '   ' → logprob: -13.8750638961792
    5. '       ' → logprob: -14.7500638961792
    6. '(self' → logprob: -15.3750638961792
    7. '
' → logprob: -16.250064849853516
    8. ',' → logprob: -16.625064849853516
    9. '):
' → logprob: -17.000064849853516
    10. '```' → logprob: -17.000064849853516

Token 979: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009832700015977025
    2. 'self' → logprob: -7.000983238220215
    3. ',self' → logprob: -9.625983238220215
    4. '(self' → logprob: -13.000983238220215
    5. ',
' → logprob: -13.625983238220215
    6. ' self' → logprob: -14.500983238220215
    7. ' ,' → logprob: -14.750983238220215
    8. '   ' → logprob: -15.125983238220215
    9. '):' → logprob: -15.375983238220215
    10. 'class' → logprob: -15.625983238220215

Token 980: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1014329269528389
    2. ' self' → logprob: -2.351433038711548
    3. '       ' → logprob: -6.976432800292969
    4. '   ' → logprob: -8.226432800292969
    5. 'machines' → logprob: -12.101432800292969
    6. ',' → logprob: -12.726432800292969
    7. ' machines' → logprob: -12.726432800292969
    8. '	self' → logprob: -12.726432800292969
    9. '
' → logprob: -12.851432800292969
    10. 'def' → logprob: -13.476432800292969

Token 981: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01730239950120449
    2. ' self' → logprob: -4.267302513122559
    3. '       ' → logprob: -5.767302513122559
    4. '   ' → logprob: -13.142302513122559
    5. 'def' → logprob: -13.392302513122559
    6. 'class' → logprob: -13.892302513122559
    7. '	self' → logprob: -14.142302513122559
    8. '(self' → logprob: -15.767302513122559
    9. '
' → logprob: -15.892302513122559
    10. 'pass' → logprob: -16.142301559448242

Token 982: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0026381993666291237
    2. '.training' → logprob: -6.627638339996338
    3. '.tr' → logprob: -7.502638339996338
    4. '.train' → logprob: -8.25263786315918
    5. '.machine' → logprob: -8.37763786315918
    6. 'machines' → logprob: -9.62763786315918
    7. ' .' → logprob: -9.62763786315918
    8. '.' → logprob: -10.50263786315918
    9. '.classes' → logprob: -10.50263786315918
    10. '.t' → logprob: -11.50263786315918

Token 983: 'achines' (ID: 180949)
  Prédit: 'achines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achines' → logprob: -4.246537173457909e-06
    2. 'ach' → logprob: -13.500003814697266
    3. 'achine' → logprob: -13.750003814697266
    4. 'machines' → logprob: -13.750003814697266
    5. '_m' → logprob: -14.625003814697266
    6. '_' → logprob: -16.125003814697266
    7. 'a' → logprob: -17.750003814697266
    8. 'aches' → logprob: -17.750003814697266
    9. '   ' → logprob: -17.875003814697266
    10. '__' → logprob: -17.875003814697266

Token 984: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2258175015449524
    2. '=' → logprob: -1.6008174419403076
    3. '=[]' → logprob: -7.850817680358887
    4. ' ' → logprob: -12.350817680358887
    5. '<|end|>' → logprob: -12.475817680358887
    6. '[]' → logprob: -13.100817680358887
    7. ':' → logprob: -13.225817680358887
    8. '   ' → logprob: -14.100817680358887
    9. 's' → logprob: -14.475817680358887
    10. '=[]
' → logprob: -14.975817680358887

Token 985: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.2603901015827432e-05
    2. ' []' → logprob: -11.125022888183594
    3. '[]
' → logprob: -12.625022888183594
    4. '[]}' → logprob: -12.750022888183594
    5. '[' → logprob: -13.875022888183594
    6. '=[]' → logprob: -15.500022888183594
    7. '[]

' → logprob: -15.500022888183594
    8. '[]>' → logprob: -15.875022888183594
    9. '[])' → logprob: -16.250022888183594
    10. '[],' → logprob: -17.000022888183594

Token 986: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3112325370311737
    2. '   ' → logprob: -1.936232566833496
    3. '<|end|>' → logprob: -2.811232566833496
    4. 'def' → logprob: -3.561232566833496
    5. '
' → logprob: -3.686232566833496
    6. 'self' → logprob: -5.311232566833496
    7. '	self' → logprob: -6.811232566833496
    8. ' self' → logprob: -7.061232566833496
    9. '	def' → logprob: -7.061232566833496
    10. ' def' → logprob: -7.436232566833496

Token 987: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.084206375409849e-05
    2. '       ' → logprob: -10.625041007995605
    3. ' self' → logprob: -11.625041007995605
    4. '
' → logprob: -12.625041007995605
    5. 'def' → logprob: -12.750041007995605
    6. 'constraints' → logprob: -14.250041007995605
    7. '   ' → logprob: -14.625041007995605
    8. 's' → logprob: -16.75004005432129
    9. '        
' → logprob: -16.75004005432129
    10. '	self' → logprob: -17.37504005432129

Token 988: '.constraints' (ID: 62986)
  Prédit: '.constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraints' → logprob: -0.0009646998951211572
    2. 'constraints' → logprob: -7.000964641571045
    3. '.constraint' → logprob: -10.500965118408203
    4. '.con' → logprob: -11.125965118408203
    5. '.const' → logprob: -13.000965118408203
    6. ' .' → logprob: -13.000965118408203
    7. '_constraints' → logprob: -13.250965118408203
    8. 'Constraints' → logprob: -14.000965118408203
    9. '.cons' → logprob: -14.375965118408203
    10. '.conditions' → logprob: -14.375965118408203

Token 989: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1604224443435669
    2. ' =' → logprob: -1.910422444343567
    3. '=[]' → logprob: -8.660422325134277
    4. '<|end|>' → logprob: -10.785422325134277
    5. ' ' → logprob: -14.535422325134277
    6. '   ' → logprob: -14.660422325134277
    7. ')' → logprob: -14.785422325134277
    8. '[]' → logprob: -14.910422325134277
    9. '=[]
' → logprob: -15.160422325134277
    10. '  ' → logprob: -15.410422325134277

Token 990: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -6.24179228907451e-05
    2. ' []' → logprob: -9.750061988830566
    3. '[]
' → logprob: -12.875061988830566
    4. '[]}' → logprob: -13.750061988830566
    5. '[]

' → logprob: -15.875061988830566
    6. '[])' → logprob: -16.000062942504883
    7. '=[]' → logprob: -16.375062942504883
    8. '[' → logprob: -16.625062942504883
    9. '[]"' → logprob: -17.125062942504883
    10. '[]>' → logprob: -17.250062942504883

Token 991: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07748903334140778
    2. ' def' → logprob: -2.702489137649536
    3. 'def' → logprob: -5.577488899230957
    4. '
' → logprob: -5.702488899230957
    5. '    
' → logprob: -7.952488899230957
    6. '	def' → logprob: -10.452488899230957
    7. '        
' → logprob: -11.952488899230957
    8. '<|end|>' → logprob: -12.077488899230957
    9. ' 
' → logprob: -12.202488899230957
    10. '```' → logprob: -13.327488899230957

Token 992: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009194392478093505
    2. ' def' → logprob: -7.000919342041016
    3. '   ' → logprob: -11.750919342041016
    4. '	def' → logprob: -17.625919342041016
    5. 'de' → logprob: -18.625919342041016
    6. '
' → logprob: -19.125919342041016
    7. '    
' → logprob: -20.875919342041016
    8. 'd' → logprob: -21.875919342041016
    9. '```' → logprob: -22.125919342041016
    10. 'Def' → logprob: -22.500919342041016

Token 993: ' read' (ID: 1729)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1607203185558319
    2. 'add' → logprob: -1.9107203483581543
    3. ' def' → logprob: -8.035719871520996
    4. 'def' → logprob: -9.160719871520996
    5. '_add' → logprob: -9.785719871520996
    6. ' load' → logprob: -12.285719871520996
    7. ' run' → logprob: -13.035719871520996
    8. 'load' → logprob: -13.535719871520996
    9. '	add' → logprob: -14.410719871520996
    10. '.add' → logprob: -15.035719871520996

Token 994: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.3840637803077698
    2. '(self' → logprob: -1.884063720703125
    3. '_line' → logprob: -1.884063720703125
    4. '_data' → logprob: -4.634063720703125
    5. 'self' → logprob: -6.134063720703125
    6. '_self' → logprob: -7.009063720703125
    7. '_inputs' → logprob: -7.384063720703125
    8. '_' → logprob: -7.509063720703125
    9. '_lines' → logprob: -7.634063720703125
    10. '(' → logprob: -8.634063720703125

Token 995: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013613052433356643
    2. '(' → logprob: -6.62636137008667
    3. 'self' → logprob: -10.376360893249512
    4. ' (' → logprob: -13.251360893249512
    5. '(
' → logprob: -13.501360893249512
    6. '_line' → logprob: -15.251360893249512
    7. '()' → logprob: -15.501360893249512
    8. '   ' → logprob: -15.751360893249512
    9. ' self' → logprob: -16.001361846923828
    10. '	self' → logprob: -16.251361846923828

Token 996: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7254512310028076
    2. '):' → logprob: -0.9754512310028076
    3. '):
' → logprob: -2.4754512310028076
    4. 'self' → logprob: -2.9754512310028076
    5. '(self' → logprob: -5.850451469421387
    6. ')' → logprob: -8.475451469421387
    7. '   ' → logprob: -8.600451469421387
    8. '       ' → logprob: -9.100451469421387
    9. ' self' → logprob: -9.350451469421387
    10. ',self' → logprob: -9.350451469421387

Token 997: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004061242798343301
    2. 'import' → logprob: -9.000406265258789
    3. '	' → logprob: -9.375406265258789
    4. '   ' → logprob: -9.875406265258789
    5. '```' → logprob: -10.375406265258789
    6. '()' → logprob: -10.875406265258789
    7. '	   ' → logprob: -11.125406265258789
    8. 'input' → logprob: -11.125406265258789
    9. 'n' → logprob: -11.875406265258789
    10. '        
' → logprob: -12.125406265258789

Token 998: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3320385217666626
    2. 'n' → logprob: -1.3320385217666626
    3. 'import' (adapté à ' import') → logprob: -4.582038402557373
    4. ' import' → logprob: -4.832038402557373
    5. '       ' → logprob: -8.082038879394531
    6. '   ' → logprob: -10.082038879394531
    7. 'num' → logprob: -11.332038879394531
    8. 'N' → logprob: -11.707038879394531
    9. ' N' → logprob: -11.832038879394531
    10. ' lines' → logprob: -12.207038879394531

Token 999: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.25198209285736084
    2. ' sys' → logprob: -1.5019820928573608
    3. '=sys' → logprob: -9.876981735229492
    4. '	sys' → logprob: -13.626981735229492
    5. '_sys' → logprob: -14.876981735229492
    6. '(sys' → logprob: -16.751981735229492
    7. 'math' → logprob: -19.126981735229492
    8. '.sys' → logprob: -19.626981735229492
    9. 's' → logprob: -20.001981735229492
    10. 'built' → logprob: -20.126981735229492

Token 1000: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03418742120265961
    2. 'line' → logprob: -5.034187316894531
    3. '
' → logprob: -5.409187316894531
    4. ' line' → logprob: -5.409187316894531
    5. ' lines' → logprob: -5.784187316894531
    6. '        
' → logprob: -5.784187316894531
    7. 'input' → logprob: -5.909187316894531
    8. '	' → logprob: -5.909187316894531
    9. 'n' → logprob: -6.034187316894531
    10. '		
' → logprob: -7.284187316894531

Token 1001: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011139007983729243
    2. ' lines' → logprob: -7.3761138916015625
    3. 'input' → logprob: -9.001113891601562
    4. 'n' → logprob: -9.126113891601562
    5. '
' → logprob: -9.626113891601562
    6. 'data' → logprob: -9.876113891601562
    7. ' input' → logprob: -10.251113891601562
    8. 'lines' → logprob: -10.376113891601562
    9. ' line' → logprob: -11.001113891601562
    10. 'line' → logprob: -11.751113891601562

Token 1002: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.179856300354004
    2. 'data' → logprob: -1.179856300354004
    3. ' n' → logprob: -2.054856300354004
    4. 'input' (adapté à ' input') → logprob: -2.179856300354004
    5. ' lines' → logprob: -3.054856300354004
    6. ' input' → logprob: -3.304856300354004
    7. 'lines' → logprob: -3.679856300354004
    8. ' data' → logprob: -3.929856300354004
    9. '       ' → logprob: -5.054856300354004
    10. 'line' → logprob: -5.054856300354004

Token 1003: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07937263697385788
    2. '_line' → logprob: -2.8293726444244385
    3. '_data' → logprob: -4.829372406005859
    4. '=' → logprob: -5.579372406005859
    5. ' =' → logprob: -5.829372406005859
    6. '().' → logprob: -7.454372406005859
    7. '_' → logprob: -7.454372406005859
    8. '_lines' → logprob: -7.704372406005859
    9. '(' → logprob: -8.07937240600586
    10. '()
' → logprob: -8.20437240600586

Token 1004: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011058438569307327
    2. ' sys' → logprob: -4.511058330535889
    3. '=sys' → logprob: -12.011058807373047
    4. '	sys' → logprob: -12.511058807373047
    5. 'input' → logprob: -14.511058807373047
    6. '(sys' → logprob: -14.886058807373047
    7. 'lambda' → logprob: -17.886058807373047
    8. '
' → logprob: -18.136058807373047
    9. '_sys' → logprob: -18.636058807373047
    10. 'stdin' → logprob: -19.261058807373047

Token 1005: '.stdin' (ID: 93480)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.23039309680461884
    2. 'ut' → logprob: -1.9803930521011353
    3. '.stdin' → logprob: -3.730393171310425
    4. '.readline' → logprob: -4.605392932891846
    5. 'it' → logprob: -4.730392932891846
    6. 'puts' → logprob: -5.355392932891846
    7. '       ' → logprob: -5.480392932891846
    8. '   ' → logprob: -5.730392932891846
    9. 'stdin' → logprob: -5.730392932891846
    10. 'import' → logprob: -6.480392932891846

Token 1006: '.readline' (ID: 74673)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.062083080410957336
    2. '.readline' → logprob: -2.8120830059051514
    3. 'reader' → logprob: -10.06208324432373
    4. 'buffer' → logprob: -10.18708324432373
    5. ' readline' → logprob: -10.93708324432373
    6. '.read' → logprob: -11.93708324432373
    7. '_read' → logprob: -12.56208324432373
    8. 'readonly' → logprob: -12.56208324432373
    9. 'stdin' → logprob: -12.93708324432373
    10. 'input' → logprob: -14.56208324432373

Token 1007: '
' (ID: 198)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.09164392203092575
    2. '       ' → logprob: -3.091643810272217
    3. '()' → logprob: -3.716643810272217
    4. '().' → logprob: -4.216643810272217
    5. '
' → logprob: -5.841643810272217
    6. 'def' → logprob: -9.466644287109375
    7. '        
' → logprob: -10.216644287109375
    8. '()

' → logprob: -11.091644287109375
    9. '()\' → logprob: -11.091644287109375
    10. '()
' → logprob: -11.716644287109375

Token 1008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015264851041138172
    2. '()' → logprob: -4.515264987945557
    3. '()
' → logprob: -5.640264987945557
    4. '().' → logprob: -7.890264987945557
    5. '        
' → logprob: -8.640264511108398
    6. '
' → logprob: -10.890264511108398
    7. 'n' → logprob: -11.390264511108398
    8. '(' → logprob: -11.640264511108398
    9. 'return' → logprob: -11.765264511108398
    10. 'def' → logprob: -11.890264511108398

Token 1009: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34353506565093994
    2. '       ' → logprob: -1.84353506565094
    3. ' n' → logprob: -2.9685349464416504
    4. 'N' (adapté à ' N') → logprob: -3.0935349464416504
    5. 'T' → logprob: -3.7185349464416504
    6. ' T' → logprob: -5.34353494644165
    7. 'M' → logprob: -5.96853494644165
    8. ' N' → logprob: -6.59353494644165
    9. 't' → logprob: -7.09353494644165
    10. 'Q' → logprob: -7.34353494644165

Token 1010: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2662513256072998
    2. ' =' → logprob: -1.7662513256072998
    3. ',' → logprob: -2.8912513256073
    4. '()' → logprob: -5.016251564025879
    5. '=int' → logprob: -7.891251564025879
    6. '(),' → logprob: -9.516251564025879
    7. ' ,' → logprob: -9.766251564025879
    8. '()
' → logprob: -10.391251564025879
    9. '       ' → logprob: -10.516251564025879
    10. '=
' → logprob: -11.266251564025879

Token 1011: ' R' (ID: 460)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3890399932861328
    2. ' M' → logprob: -1.1390399932861328
    3. 'K' → logprob: -7.264039993286133
    4. 'T' → logprob: -7.639039993286133
    5. ' ' → logprob: -7.639039993286133
    6. ' K' → logprob: -8.639039993286133
    7. 'm' → logprob: -9.389039993286133
    8. ' T' → logprob: -9.514039993286133
    9. 'self' → logprob: -10.639039993286133
    10. '    ' → logprob: -10.639039993286133

Token 1012: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06198146939277649
    2. ' =' → logprob: -2.811981439590454
    3. ',' → logprob: -11.311981201171875
    4. '=input' → logprob: -14.436981201171875
    5. '=int' → logprob: -14.686981201171875
    6. ' ' → logprob: -16.186981201171875
    7. '=
' → logprob: -16.311981201171875
    8. '	' → logprob: -16.561981201171875
    9. '=line' → logprob: -16.686981201171875
    10. ')=' → logprob: -16.936981201171875

Token 1013: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20144394040107727
    2. 'map' → logprob: -1.7014439105987549
    3. 'input' → logprob: -11.451443672180176
    4. ' list' → logprob: -11.951443672180176
    5. ' input' → logprob: -11.951443672180176
    6. 'list' → logprob: -12.201443672180176
    7. '[' → logprob: -14.326443672180176
    8. ' tuple' → logprob: -14.326443672180176
    9. 'tuple' → logprob: -15.201443672180176
    10. '	map' → logprob: -15.451443672180176

Token 1014: '(int' (ID: 2742)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12848486006259918
    2. '(int' → logprob: -2.1284849643707275
    3. '(str' → logprob: -7.128484725952148
    4. '(' → logprob: -7.503484725952148
    5. 'input' → logprob: -8.628484725952148
    6. '(lambda' → logprob: -11.253484725952148
    7. ' (' → logprob: -12.878484725952148
    8. '(
' → logprob: -13.003484725952148
    9. 'int' → logprob: -13.378484725952148
    10. '(list' → logprob: -13.378484725952148

Token 1015: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03549790754914284
    2. ',input' → logprob: -4.160498142242432
    3. 'input' → logprob: -4.285498142242432
    4. ',' → logprob: -5.410498142242432
    5. '(' → logprob: -7.035498142242432
    6. '(sys' → logprob: -9.410497665405273
    7. ')' → logprob: -10.910497665405273
    8. '=input' → logprob: -11.035497665405273
    9. ' input' → logprob: -11.035497665405273
    10. '(),' → logprob: -12.160497665405273

Token 1016: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019286326132714748
    2. ' input' → logprob: -6.251928806304932
    3. '(input' → logprob: -17.751928329467773
    4. ')' → logprob: -19.501928329467773
    5. '
' → logprob: -19.876928329467773
    6. '=input' → logprob: -20.126928329467773
    7. ',input' → logprob: -20.376928329467773
    8. '           ' → logprob: -21.126928329467773
    9. '<input' → logprob: -21.251928329467773
    10. '[input' → logprob: -21.501928329467773

Token 1017: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9266199160483666e-05
    2. '()' → logprob: -10.875019073486328
    3. '())' → logprob: -16.125019073486328
    4. '()
' → logprob: -17.125019073486328
    5. ' ().' → logprob: -17.125019073486328
    6. '(' → logprob: -17.250019073486328
    7. '()[' → logprob: -19.750019073486328
    8. '().
' → logprob: -20.125019073486328
    9. ')' → logprob: -21.000019073486328
    10. '()?.' → logprob: -21.875019073486328

Token 1018: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023303592577576637
    2. 'strip' → logprob: -3.773303508758545
    3. 'rstrip' → logprob: -9.773303985595703
    4. 'read' → logprob: -13.898303985595703
    5. ' split' → logprob: -15.773303985595703
    6. '(split' → logprob: -16.523303985595703
    7. '().' → logprob: -16.773303985595703
    8. 'decode' → logprob: -17.273303985595703
    9. ' strip' → logprob: -17.523303985595703
    10. ')' → logprob: -18.023303985595703

Token 1019: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05313336104154587
    2. ')' → logprob: -3.553133249282837
    3. '()' → logprob: -3.803133249282837
    4. '(' → logprob: -7.303133487701416
    5. '())
' → logprob: -9.178133010864258
    6. '('' → logprob: -10.803133010864258
    7. ' ())' → logprob: -12.678133010864258
    8. '().' → logprob: -12.803133010864258
    9. '()))' → logprob: -13.428133010864258
    10. '()
' → logprob: -13.803133010864258

Token 1020: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030769442673772573
    2. ' for' → logprob: -6.503077030181885
    3. '
' → logprob: -7.128077030181885
    4. 'for' → logprob: -7.503077030181885
    5. '<|end|>' → logprob: -9.253076553344727
    6. 'self' → logprob: -9.503076553344727
    7. '        
' → logprob: -10.628076553344727
    8. '   ' → logprob: -11.753076553344727
    9. '	' → logprob: -12.128076553344727
    10. ',' → logprob: -12.753076553344727

Token 1021: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06217203289270401
    2. 'self' (adapté à ' self') → logprob: -2.8121719360351562
    3. '       ' → logprob: -8.687171936035156
    4. ' for' → logprob: -10.312171936035156
    5. ' self' → logprob: -13.437171936035156
    6. '```' → logprob: -14.812171936035156
    7. '        
' → logprob: -15.062171936035156
    8. '
' → logprob: -15.187171936035156
    9. '	for' → logprob: -16.937171936035156
    10. '   ' → logprob: -17.937171936035156

Token 1022: '.N' (ID: 4439)
  Prédit: '.m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.000580792548134923
    2. 'machines' → logprob: -7.625580787658691
    3. 'for' → logprob: -10.125580787658691
    4. '.' → logprob: -10.875580787658691
    5. '.machine' → logprob: -11.875580787658691
    6. '```' → logprob: -12.375580787658691
    7. 'Machines' → logprob: -12.625580787658691
    8. 'm' → logprob: -12.625580787658691
    9. ' machines' → logprob: -13.125580787658691
    10. ').' → logprob: -13.500580787658691

Token 1023: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20223237574100494
    2. '=' → logprob: -1.7022323608398438
    3. ',' → logprob: -7.202232360839844
    4. ' =
' → logprob: -10.202232360839844
    5. ' ,' → logprob: -11.327232360839844
    6. '.' → logprob: -11.577232360839844
    7. ' ' → logprob: -12.577232360839844
    8. '   ' → logprob: -13.327232360839844
    9. '=
' → logprob: -13.327232360839844
    10. '    ' → logprob: -13.452232360839844

Token 1024: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0206720617134124e-05
    2. ' N' → logprob: -11.50001049041748
    3. '	N' → logprob: -19.250009536743164
    4. '   ' → logprob: -22.125009536743164
    5. 'Ｎ' → logprob: -23.375009536743164
    6. '
' → logprob: -23.875009536743164
    7. '_N' → logprob: -24.375009536743164
    8. 'int' → logprob: -24.375009536743164
    9. ' ' → logprob: -24.625009536743164
    10. '[N' → logprob: -24.750009536743164

Token 1025: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011578826233744621
    2. '<|end|>' → logprob: -4.8865790367126465
    3. '
' → logprob: -6.5115790367126465
    4. 'self' → logprob: -7.2615790367126465
    5. 'for' → logprob: -7.3865790367126465
    6. ' for' → logprob: -7.7615790367126465
    7. '<|end|>' → logprob: -8.761578559875488
    8. '	' → logprob: -8.761578559875488
    9. '        
' → logprob: -9.011578559875488
    10. ',' → logprob: -9.761578559875488

Token 1026: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035392516292631626
    2. ' for' → logprob: -6.503539085388184
    3. 'self' → logprob: -6.503539085388184
    4. 'for' → logprob: -8.003539085388184
    5. ' self' → logprob: -8.878539085388184
    6. '	' → logprob: -10.253539085388184
    7. '   ' → logprob: -11.878539085388184
    8. '
' → logprob: -12.253539085388184
    9. '	for' → logprob: -12.628539085388184
    10. '	self' → logprob: -12.628539085388184

Token 1027: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18033267557621002
    2. 'for' → logprob: -1.8053326606750488
    3. '       ' → logprob: -7.680332660675049
    4. ' self' → logprob: -9.680333137512207
    5. ' for' → logprob: -10.180333137512207
    6. 'machines' → logprob: -11.805333137512207
    7. '        
' → logprob: -12.430333137512207
    8. 'M' → logprob: -13.180333137512207
    9. '   ' → logprob: -13.180333137512207
    10. 'R' → logprob: -13.305333137512207

Token 1028: '.R' (ID: 3395)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7968416810035706
    2. 'machines' → logprob: -1.0468416213989258
    3. '.m' → logprob: -2.046841621398926
    4. '.R' → logprob: -3.046841621398926
    5. 'constraints' → logprob: -4.171841621398926
    6. 'm' → logprob: -5.546841621398926
    7. '.constraints' → logprob: -7.296841621398926
    8. ' machines' → logprob: -8.421841621398926
    9. 'mach' → logprob: -8.671841621398926
    10. '   ' → logprob: -9.171841621398926

Token 1029: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759561061859131
    2. ' =' → logprob: -0.8259561061859131
    3. '<|end|>' → logprob: -12.200956344604492
    4. '=
' → logprob: -12.450956344604492
    5. ' =
' → logprob: -12.450956344604492
    6. ',' → logprob: -13.075956344604492
    7. ' ' → logprob: -14.325956344604492
    8. '=int' → logprob: -15.450956344604492
    9. '   ' → logprob: -15.825956344604492
    10. '<|end|>' → logprob: -16.200956344604492

Token 1030: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0005530327325686812
    2. ' R' → logprob: -7.500553131103516
    3. 'int' → logprob: -18.250553131103516
    4. '	R' → logprob: -18.750553131103516
    5. 'r' → logprob: -20.375553131103516
    6. ' ' → logprob: -21.375553131103516
    7. '   ' → logprob: -21.375553131103516
    8. ' ' → logprob: -21.750553131103516
    9. '_R' → logprob: -21.875553131103516
    10. 'Ｒ' → logprob: -21.875553131103516

Token 1031: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018650951096788049
    2. ' for' → logprob: -7.001864910125732
    3. 'for' → logprob: -7.501864910125732
    4. '
' → logprob: -8.25186538696289
    5. '        
' → logprob: -10.25186538696289
    6. '	' → logprob: -10.25186538696289
    7. '<|end|>' → logprob: -10.75186538696289
    8. '	for' → logprob: -11.00186538696289
    9. 'self' → logprob: -11.37686538696289
    10. '   ' → logprob: -12.00186538696289

Token 1032: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25463688373565674
    2. 'for' → logprob: -1.5046368837356567
    3. ' for' → logprob: -6.129636764526367
    4. 'self' → logprob: -7.629636764526367
    5. '
' → logprob: -10.879636764526367
    6. '   ' → logprob: -11.629636764526367
    7. '	for' → logprob: -12.004636764526367
    8. '        
' → logprob: -12.379636764526367
    9. '	' → logprob: -14.129636764526367
    10. '```' → logprob: -14.129636764526367

Token 1033: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03815728425979614
    2. 'self' → logprob: -3.2881572246551514
    3. '       ' → logprob: -9.16315746307373
    4. ' for' → logprob: -11.53815746307373
    5. ' self' → logprob: -14.53815746307373
    6. '
' → logprob: -15.03815746307373
    7. '        
' → logprob: -16.038156509399414
    8. '```' → logprob: -16.163156509399414
    9. '	for' → logprob: -16.538156509399414
    10. '   ' → logprob: -18.038156509399414

Token 1034: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -5.848420551046729e-05
    2. ' _' → logprob: -9.7500581741333
    3. ' range' → logprob: -17.500059127807617
    4. ' in' → logprob: -17.750059127807617
    5. '_range' → logprob: -18.125059127807617
    6. '_
' → logprob: -18.500059127807617
    7. '_

' → logprob: -18.750059127807617
    8. '_=' → logprob: -19.250059127807617
    9. 'range' → logprob: -19.375059127807617
    10. ' ' → logprob: -19.500059127807617

Token 1035: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07018206268548965
    2. 'in' → logprob: -2.6951820850372314
    3. '_' → logprob: -8.445181846618652
    4. ' ' → logprob: -11.570181846618652
    5. '   ' → logprob: -12.070181846618652
    6. '  ' → logprob: -12.570181846618652
    7. 'n' → logprob: -12.820181846618652
    8. '_in' → logprob: -13.445181846618652
    9. 'range' → logprob: -13.820181846618652
    10. '	in' → logprob: -13.820181846618652

Token 1036: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003178901970386505
    2. ' range' → logprob: -5.75317907333374
    3. 'in' → logprob: -13.878178596496582
    4. ' in' → logprob: -16.2531795501709
    5. '   ' → logprob: -16.6281795501709
    6. '_' → logprob: -17.5031795501709
    7. ' ' → logprob: -18.1281795501709
    8. '0' → logprob: -18.2531795501709
    9. '	range' → logprob: -18.6281795501709
    10. '(range' → logprob: -18.7531795501709

Token 1037: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001513312105089426
    2. '(' → logprob: -6.501513481140137
    3. '(self' → logprob: -12.001513481140137
    4. ' (' → logprob: -13.251513481140137
    5. '(
' → logprob: -13.376513481140137
    6. '(range' → logprob: -14.251513481140137
    7. 'N' → logprob: -15.251513481140137
    8. ' range' → logprob: -15.626513481140137
    9. '(n' → logprob: -15.751513481140137
    10. ' N' → logprob: -16.87651252746582

Token 1038: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018268287181854248
    2. '):' → logprob: -4.01826810836792
    3. '       ' → logprob: -9.893268585205078
    4. ' ):
' → logprob: -10.268268585205078
    5. '):
' → logprob: -11.268268585205078
    6. ':
' → logprob: -12.268268585205078
    7. '   ' → logprob: -12.393268585205078
    8. ':' → logprob: -12.643268585205078
    9. ',' → logprob: -12.768268585205078
    10. ' ):' → logprob: -13.268268585205078

Token 1039: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007299474673345685
    2. ' line' → logprob: -7.500730037689209
    3. '```' → logprob: -10.25072956085205
    4. ',' → logprob: -10.62572956085205
    5. '	       ' → logprob: -11.37572956085205
    6. '            
' → logprob: -11.50072956085205
    7. '   ' → logprob: -11.75072956085205
    8. ' tokens' → logprob: -12.00072956085205
    9. ' readline' → logprob: -12.12572956085205
    10. '<|end|>' → logprob: -12.25072956085205

Token 1040: ' t' (ID: 260)
  Prédit: 'tickets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tickets' → logprob: -0.9339175820350647
    2. ' tickets' → logprob: -1.30891752243042
    3. ' t' → logprob: -1.80891752243042
    4. 't' (adapté à ' t') → logprob: -1.80891752243042
    5. ' line' → logprob: -5.55891752243042
    6. 'line' → logprob: -6.80891752243042
    7. '           ' → logprob: -7.05891752243042
    8. 'a' → logprob: -7.30891752243042
    9. 'tokens' → logprob: -7.43391752243042
    10. ' tokens' → logprob: -8.058917999267578

Token 1041: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052780281752347946
    2. 'ickets' → logprob: -3.6777803897857666
    3. 'okens' → logprob: -3.9277803897857666
    4. ' ,' → logprob: -5.3027801513671875
    5. 'icket' → logprob: -7.5527801513671875
    6. ' =' → logprob: -7.6777801513671875
    7. 'abs' → logprob: -9.552780151367188
    8. '_,' → logprob: -9.677780151367188
    9. '=' → logprob: -10.052780151367188
    10. 's' → logprob: -10.427780151367188

Token 1042: ' e' (ID: 319)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6331353783607483
    2. ' c' → logprob: -0.7581353783607483
    3. 'cal' → logprob: -7.6331353187561035
    4. ' 
' → logprob: -11.133135795593262
    5. ' cal' → logprob: -11.258135795593262
    6. '
' → logprob: -12.508135795593262
    7. ' ' → logprob: -12.508135795593262
    8. '	c' → logprob: -13.008135795593262
    9. ' calorie' → logprob: -13.258135795593262
    10. 'int' → logprob: -13.383135795593262

Token 1043: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07042763382196426
    2. ' =' → logprob: -2.695427656173706
    3. 'okens' → logprob: -8.320427894592285
    4. 'ickets' → logprob: -8.570427894592285
    5. ',' → logprob: -10.820427894592285
    6. '=int' → logprob: -11.445427894592285
    7. 'xt' → logprob: -12.195427894592285
    8. '_tokens' → logprob: -12.320427894592285
    9. '       ' → logprob: -13.195427894592285
    10. '   ' → logprob: -13.320427894592285

Token 1044: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12692873179912567
    2. ' map' → logprob: -2.1269288063049316
    3. '	map' → logprob: -14.501928329467773
    4. '           ' → logprob: -16.376928329467773
    5. '    ' → logprob: -16.626928329467773
    6. '
' → logprob: -17.001928329467773
    7. '   ' → logprob: -18.251928329467773
    8. 'm' → logprob: -19.251928329467773
    9. '(map' → logprob: -19.251928329467773
    10. ' ' → logprob: -19.626928329467773

Token 1045: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014166918583214283
    2. 'int' → logprob: -4.264166831970215
    3. '[int' → logprob: -13.514166831970215
    4. '=int' → logprob: -13.764166831970215
    5. '(' → logprob: -15.264166831970215
    6. '(
' → logprob: -15.639166831970215
    7. '<int' → logprob: -15.639166831970215
    8. ' int' → logprob: -15.764166831970215
    9. ',int' → logprob: -16.38916778564453
    10. '```' → logprob: -16.51416778564453

Token 1046: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5936846733093262
    2. '(int' → logprob: -1.3436846733093262
    3. '(' → logprob: -1.7186846733093262
    4. '(input' → logprob: -5.718684673309326
    5. '(
' → logprob: -6.343684673309326
    6. ',int' → logprob: -6.718684673309326
    7. ',input' → logprob: -7.968684673309326
    8. ' ,' → logprob: -8.218685150146484
    9. ' (' → logprob: -8.468685150146484
    10. '(),' → logprob: -9.093685150146484

Token 1047: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.043013688176870346
    2. ' input' → logprob: -3.168013572692871
    3. ')' → logprob: -12.293013572692871
    4. '_input' → logprob: -13.168013572692871
    5. '(input' → logprob: -13.168013572692871
    6. 'self' → logprob: -13.668013572692871
    7. '=input' → logprob: -13.918013572692871
    8. '
' → logprob: -14.043013572692871
    9. '<input' → logprob: -14.418013572692871
    10. ',input' → logprob: -14.668013572692871

Token 1048: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5094070477061905e-05
    2. '()' → logprob: -11.125015258789062
    3. ' ().' → logprob: -16.125015258789062
    4. ')' → logprob: -16.375015258789062
    5. '()
' → logprob: -17.125015258789062
    6. '(' → logprob: -17.500015258789062
    7. '())' → logprob: -18.875015258789062
    8. '().
' → logprob: -19.750015258789062
    9. '()[' → logprob: -20.500015258789062
    10. '().__' → logprob: -21.000015258789062

Token 1049: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.845798710244708e-05
    2. 'strip' → logprob: -10.250038146972656
    3. ' split' → logprob: -13.250038146972656
    4. 'rstrip' → logprob: -14.000038146972656
    5. '(split' → logprob: -15.375038146972656
    6. ')' → logprob: -15.750038146972656
    7. '.split' → logprob: -18.125038146972656
    8. 'spl' → logprob: -18.625038146972656
    9. 'plit' → logprob: -19.875038146972656
    10. '().' → logprob: -19.875038146972656

Token 1050: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6848132014274597
    2. '())
' → logprob: -1.4348132610321045
    3. ')
' → logprob: -1.9348132610321045
    4. '())' → logprob: -2.3098132610321045
    5. '()' → logprob: -4.309813022613525
    6. '()
' → logprob: -8.184813499450684
    7. '())
' → logprob: -9.559813499450684
    8. ')
' → logprob: -9.934813499450684
    9. '(' → logprob: -10.434813499450684
    10. '       ' → logprob: -10.434813499450684

Token 1051: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3915141355246305e-05
    2. 'self' → logprob: -12.00002384185791
    3. ',' → logprob: -12.25002384185791
    4. '       ' → logprob: -12.50002384185791
    5. '<|end|>' → logprob: -12.87502384185791
    6. '
' → logprob: -13.25002384185791
    7. ' self' → logprob: -13.50002384185791
    8. '            
' → logprob: -13.75002384185791
    9. '               ' → logprob: -14.12502384185791
    10. '   ' → logprob: -15.00002384185791

Token 1052: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07892162352800369
    2. ' self' → logprob: -3.0789215564727783
    3. 'machine' → logprob: -3.9539215564727783
    4. '           ' → logprob: -4.703921794891357
    5. 'm' → logprob: -6.703921794891357
    6. ' machine' → logprob: -7.953921794891357
    7. '
' → logprob: -10.9539213180542
    8. '       ' → logprob: -10.9539213180542
    9. '	self' → logprob: -11.9539213180542
    10. ' m' → logprob: -12.2039213180542

Token 1053: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.001953018014319241
    2. 'machines' → logprob: -6.251953125
    3. ' machines' → logprob: -11.751953125
    4. '.machine' → logprob: -12.251953125
    5. ').' → logprob: -12.751953125
    6. ' .' → logprob: -12.876953125
    7. 'Machines' → logprob: -13.626953125
    8. 'm' → logprob: -13.751953125
    9. '].' → logprob: -13.751953125
    10. '`.' → logprob: -14.751953125

Token 1054: 'achines' (ID: 180949)
  Prédit: 'achines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achines' → logprob: -3.4121114822482923e-06
    2. 'achine' → logprob: -12.875003814697266
    3. 'ach' → logprob: -14.250003814697266
    4. 'machines' → logprob: -16.375003814697266
    5. 'achi' → logprob: -19.500003814697266
    6. '   ' → logprob: -19.625003814697266
    7. '```' → logprob: -20.125003814697266
    8. 'aches' → logprob: -20.500003814697266
    9. 'a' → logprob: -20.750003814697266
    10. '
' → logprob: -21.375003814697266

Token 1055: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03804619982838631
    2. '.' → logprob: -3.28804612159729
    3. '.app' → logprob: -13.288045883178711
    4. ' .' → logprob: -13.288045883178711
    5. '.ap' → logprob: -13.788045883178711
    6. '
' → logprob: -15.913045883178711
    7. 'append' → logprob: -16.78804588317871
    8. '‌.' → logprob: -17.16304588317871
    9. '].' → logprob: -17.53804588317871
    10. '.emplace' → logprob: -17.66304588317871

Token 1056: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014164566993713379
    2. 'Training' → logprob: -4.264164447784424
    3. '(
' → logprob: -14.389164924621582
    4. ' Training' → logprob: -14.764164924621582
    5. '(training' → logprob: -16.639163970947266
    6. 'Train' → logprob: -18.639163970947266
    7. 'training' → logprob: -18.889163970947266
    8. '_training' → logprob: -18.889163970947266
    9. 'Trainer' → logprob: -20.014163970947266
    10. '(

' → logprob: -20.264163970947266

Token 1057: 'Training' (ID: 43301)
  Prédit: 'Training'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Training' → logprob: -3.128163257315464e-07
    2. ' Training' → logprob: -15.5
    3. 'Train' → logprob: -19.75
    4. 'Trading' → logprob: -23.125
    5. 'training' → logprob: -23.625
    6. ' training' → logprob: -23.875
    7. 'Trainer' → logprob: -24.125
    8. '_training' → logprob: -24.5
    9. '   ' → logprob: -25.0
    10. 'TRAIN' → logprob: -25.25

Token 1058: 'Machine' (ID: 25519)
  Prédit: 'Machine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Machine' → logprob: -1.0280383548888494e-06
    2. 'Machines' → logprob: -14.875000953674316
    3. '_machine' → logprob: -15.625000953674316
    4. ' Machine' → logprob: -15.625000953674316
    5. 'machine' → logprob: -16.000001907348633
    6. '(' → logprob: -17.375001907348633
    7. 'Mach' → logprob: -17.500001907348633
    8. 'achine' → logprob: -17.750001907348633
    9. '
' → logprob: -18.125001907348633
    10. ')' → logprob: -18.375001907348633

Token 1059: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0007510208524763584
    2. 'i' → logprob: -7.25075101852417
    3. '(' → logprob: -10.250751495361328
    4. '(
' → logprob: -12.375751495361328
    5. ')i' → logprob: -14.125751495361328
    6. ' i' → logprob: -14.750751495361328
    7. ')' → logprob: -15.750751495361328
    8. ')(' → logprob: -15.875751495361328
    9. ' (' → logprob: -16.875751495361328
    10. '	i' → logprob: -17.125751495361328

Token 1060: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003961185284424573
    2. ',i' → logprob: -8.500395774841309
    3. ' ,' → logprob: -8.625395774841309
    4. ',
' → logprob: -12.500395774841309
    5. '	' → logprob: -13.125395774841309
    6. '‌,' → logprob: -13.250395774841309
    7. '   ' → logprob: -13.500395774841309
    8. '		' → logprob: -14.625395774841309
    9. ',t' → logprob: -14.625395774841309
    10. '	       ' → logprob: -14.875395774841309

Token 1061: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0015053401002660394
    2. ' t' → logprob: -6.501505374908447
    3. '	t' → logprob: -13.251504898071289
    4. '           ' → logprob: -14.251504898071289
    5. '   ' → logprob: -14.876504898071289
    6. '
' → logprob: -15.876504898071289
    7. '       ' → logprob: -17.50150489807129
    8. '    ' → logprob: -17.62650489807129
    9. ')t' → logprob: -17.62650489807129
    10. '`t' → logprob: -17.75150489807129

Token 1062: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013827552087605
    2. ',e' → logprob: -4.513827323913574
    3. ' ,' → logprob: -5.888827323913574
    4. ',t' → logprob: -13.138827323913574
    5. ',
' → logprob: -13.763827323913574
    6. 'e' → logprob: -13.888827323913574
    7. ' e' → logprob: -15.138827323913574
    8. '   ' → logprob: -15.388827323913574
    9. ',int' → logprob: -15.763827323913574
    10. ',p' → logprob: -16.01382827758789

Token 1063: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1269282102584839
    2. ' e' → logprob: -2.1269283294677734
    3. '           ' → logprob: -16.626928329467773
    4. '	e' → logprob: -16.751928329467773
    5. ' ' → logprob: -18.251928329467773
    6. ')e' → logprob: -18.251928329467773
    7. '
' → logprob: -19.001928329467773
    8. '            ' → logprob: -19.126928329467773
    9. '   ' → logprob: -19.251928329467773
    10. ' ' → logprob: -19.501928329467773

Token 1064: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005622077151201665
    2. '))
' → logprob: -7.5005621910095215
    3. ' ))' → logprob: -12.37556266784668
    4. ')' → logprob: -12.75056266784668
    5. '           ' → logprob: -14.12556266784668
    6. '       ' → logprob: -14.37556266784668
    7. '));' → logprob: -15.25056266784668
    8. '   ' → logprob: -15.87556266784668
    9. ')))' → logprob: -15.87556266784668
    10. '))

' → logprob: -16.00056266784668

Token 1065: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00269145960919559
    2. '<|end|>' → logprob: -6.627691268920898
    3. ' for' → logprob: -7.627691268920898
    4. 'for' → logprob: -7.752691268920898
    5. '```' → logprob: -8.252691268920898
    6. '
' → logprob: -9.127691268920898
    7. '   ' → logprob: -10.377691268920898
    8. '<|end|>' → logprob: -11.502691268920898
    9. '        
' → logprob: -11.627691268920898
    10. 'def' → logprob: -12.127691268920898

Token 1066: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00030161935137584805
    2. '       ' → logprob: -8.250301361083984
    3. ' for' → logprob: -10.125301361083984
    4. '	for' → logprob: -16.125301361083984
    5. '
' → logprob: -16.375301361083984
    6. 'self' → logprob: -16.875301361083984
    7. '   ' → logprob: -17.375301361083984
    8. 'For' → logprob: -18.500301361083984
    9. '        
' → logprob: -18.875301361083984
    10. '```' → logprob: -19.250301361083984

Token 1067: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001502636878285557
    2. ' _' → logprob: -9.000150680541992
    3. '_i' → logprob: -11.250150680541992
    4. '_j' → logprob: -11.375150680541992
    5. 'i' → logprob: -13.875150680541992
    6. '_
' → logprob: -14.500150680541992
    7. '
' → logprob: -15.625150680541992
    8. '_range' → logprob: -15.750150680541992
    9. 'j' → logprob: -16.000150680541992
    10. '_=' → logprob: -16.000150680541992

Token 1068: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42516666650772095
    2. 'in' → logprob: -1.1751666069030762
    3. 'range' → logprob: -3.300166606903076
    4. ' range' → logprob: -7.300166606903076
    5. ' ' → logprob: -11.675167083740234
    6. 'i' → logprob: -12.675167083740234
    7. '  ' → logprob: -13.175167083740234
    8. '(' → logprob: -13.425167083740234
    9. '(range' → logprob: -14.050167083740234
    10. '   ' → logprob: -14.300167083740234

Token 1069: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -18.625553131103516
    4. '	range' → logprob: -18.875553131103516
    5. 'in' → logprob: -19.000553131103516
    6. '
' → logprob: -19.000553131103516
    7. '   ' → logprob: -20.125553131103516
    8. ' ' → logprob: -20.750553131103516
    9. '  ' → logprob: -20.875553131103516
    10. ' in' → logprob: -21.125553131103516

Token 1070: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.16377709805965424
    2. '(self' → logprob: -1.9137771129608154
    3. 'self' → logprob: -5.663776874542236
    4. '(' → logprob: -10.538777351379395
    5. 'R' → logprob: -10.538777351379395
    6. '(r' → logprob: -11.663777351379395
    7. ' self' → logprob: -11.788777351379395
    8. ' (' → logprob: -12.663777351379395
    9. '(int' → logprob: -13.288777351379395
    10. '(
' → logprob: -13.413777351379395

Token 1071: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09147575497627258
    2. '):' → logprob: -2.46647572517395
    3. '       ' → logprob: -6.466475963592529
    4. ',' → logprob: -7.716475963592529
    5. '():
' → logprob: -8.466475486755371
    6. ')' → logprob: -9.841475486755371
    7. '):
' → logprob: -9.966475486755371
    8. ' ):
' → logprob: -10.091475486755371
    9. '()):
' → logprob: -10.216475486755371
    10. '           ' → logprob: -10.216475486755371

Token 1072: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01458323746919632
    2. 'a' → logprob: -4.389583110809326
    3. '   ' → logprob: -7.514583110809326
    4. 'c' → logprob: -7.764583110809326
    5. ' c' → logprob: -7.764583110809326
    6. ' a' → logprob: -8.514583587646484
    7. '            
' → logprob: -8.639583587646484
    8. '       ' → logprob: -9.764583587646484
    9. '<|end|>' → logprob: -10.139583587646484
    10. 't' → logprob: -10.389583587646484

Token 1073: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0010463856160640717
    2. ' a' → logprob: -6.876046180725098
    3. '           ' → logprob: -11.251046180725098
    4. 'A' → logprob: -15.501046180725098
    5. '	a' → logprob: -16.626047134399414
    6. '            
' → logprob: -17.001047134399414
    7. '_a' → logprob: -17.126047134399414
    8. 'x' → logprob: -17.126047134399414
    9. 'c' → logprob: -17.501047134399414
    10. '(a' → logprob: -17.876047134399414

Token 1074: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036450917832553387
    2. ',b' → logprob: -5.753644943237305
    3. ' ,' → logprob: -7.753644943237305
    4. 'b' → logprob: -10.253644943237305
    5. ' b' → logprob: -13.378644943237305
    6. '_,' → logprob: -14.753644943237305
    7. ',
' → logprob: -15.128644943237305
    8. '<|end|>' → logprob: -15.503644943237305
    9. '=' → logprob: -16.378644943237305
    10. ',a' → logprob: -16.503644943237305

Token 1075: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023245826363563538
    2. ' b' → logprob: -3.7732458114624023
    3. ',' → logprob: -16.52324676513672
    4. ',b' → logprob: -16.64824676513672
    5. '    ' → logprob: -17.64824676513672
    6. '   ' → logprob: -18.14824676513672
    7. '
' → logprob: -18.52324676513672
    8. ' ' → logprob: -18.89824676513672
    9. '  ' → logprob: -19.02324676513672
    10. '           ' → logprob: -19.64824676513672

Token 1076: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003357006062287837
    2. ' ,' → logprob: -8.250335693359375
    3. '=' → logprob: -9.625335693359375
    4. 'c' → logprob: -12.625335693359375
    5. ',c' → logprob: -12.625335693359375
    6. ' =' → logprob: -14.000335693359375
    7. '_,' → logprob: -15.500335693359375
    8. '<|end|>' → logprob: -15.750335693359375
    9. '‌,' → logprob: -16.250335693359375
    10. ',b' → logprob: -16.375335693359375

Token 1077: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04300136864185333
    2. ' c' → logprob: -3.168001413345337
    3. 'int' → logprob: -14.168001174926758
    4. ' ' → logprob: -15.168001174926758
    5. ',c' → logprob: -15.168001174926758
    6. ',' → logprob: -15.293001174926758
    7. '<|end|>' → logprob: -15.918001174926758
    8. '	c' → logprob: -16.293001174926758
    9. '  ' → logprob: -16.293001174926758
    10. '           ' → logprob: -16.418001174926758

Token 1078: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740770161151886
    2. ' =' → logprob: -0.9740769863128662
    3. ' ' → logprob: -17.599077224731445
    4. '＝' → logprob: -18.099077224731445
    5. ',' → logprob: -18.599077224731445
    6. '   ' → logprob: -19.349077224731445
    7. '=line' → logprob: -19.724077224731445
    8. '  ' → logprob: -19.724077224731445
    9. ')' → logprob: -20.474077224731445
    10. '    ' → logprob: -20.474077224731445

Token 1079: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12692810595035553
    2. 'map' → logprob: -2.1269280910491943
    3. '	map' → logprob: -16.751928329467773
    4. ' tuple' → logprob: -18.751928329467773
    5. '            ' → logprob: -18.876928329467773
    6. '    ' → logprob: -19.126928329467773
    7. '_map' → logprob: -19.626928329467773
    8. 'tuple' → logprob: -19.751928329467773
    9. ' mapa' → logprob: -20.001928329467773
    10. '           ' → logprob: -20.251928329467773

Token 1080: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004317420825827867
    2. 'int' → logprob: -7.750431537628174
    3. '=int' → logprob: -14.500432014465332
    4. '[int' → logprob: -15.500432014465332
    5. ',int' → logprob: -16.250431060791016
    6. '<int' → logprob: -16.625431060791016
    7. ' int' → logprob: -16.750431060791016
    8. '(' → logprob: -17.125431060791016
    9. '(lambda' → logprob: -17.875431060791016
    10. '```' → logprob: -18.500431060791016

Token 1081: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0549178272485733
    2. ',int' → logprob: -3.429917812347412
    3. ',' → logprob: -3.929917812347412
    4. 'int' → logprob: -7.179917812347412
    5. '(' → logprob: -8.17991828918457
    6. ',input' → logprob: -8.92991828918457
    7. '(input' → logprob: -9.05491828918457
    8. '=int' → logprob: -10.17991828918457
    9. ' (' → logprob: -11.05491828918457
    10. ' ,' → logprob: -11.30491828918457

Token 1082: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. 'int' → logprob: -17.50020408630371
    4. '(input' → logprob: -18.75020408630371
    5. '[input' → logprob: -21.75020408630371
    6. '<input' → logprob: -22.12520408630371
    7. '=input' → logprob: -22.25020408630371
    8. 'lambda' → logprob: -22.25020408630371
    9. '_input' → logprob: -22.50020408630371
    10. ',input' → logprob: -22.87520408630371

Token 1083: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.511406809295295e-06
    2. '()' → logprob: -12.250006675720215
    3. ' ().' → logprob: -13.750006675720215
    4. '().__' → logprob: -16.1250057220459
    5. '.' → logprob: -16.2500057220459
    6. '.readline' → logprob: -16.3750057220459
    7. '()
' → logprob: -16.5000057220459
    8. '().'' → logprob: -16.8750057220459
    9. ' .' → logprob: -17.5000057220459
    10. '>().' → logprob: -17.7500057220459

Token 1084: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. 'strip' → logprob: -14.375000953674316
    3. ' split' → logprob: -16.75
    4. '(split' → logprob: -17.375
    5. 'spl' → logprob: -18.5
    6. '.split' → logprob: -18.625
    7. 'read' → logprob: -19.25
    8. 'rstrip' → logprob: -19.5
    9. 'skip' → logprob: -19.875
    10. 'plit' → logprob: -20.25

Token 1085: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.4595756232738495
    2. '())' → logprob: -1.4595756530761719
    3. ')
' → logprob: -2.709575653076172
    4. ')' → logprob: -2.834575653076172
    5. '()' → logprob: -4.584575653076172
    6. '()
' → logprob: -7.834575653076172
    7. '())
' → logprob: -9.209575653076172
    8. '       ' → logprob: -9.834575653076172
    9. ')
' → logprob: -11.459575653076172
    10. ' ())
' → logprob: -11.459575653076172

Token 1086: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.6312321753939614e-05
    2. 'self' → logprob: -10.875036239624023
    3. '       ' → logprob: -11.250036239624023
    4. ' self' → logprob: -13.625036239624023
    5. '               ' → logprob: -13.750036239624023
    6. '<|end|>' → logprob: -13.875036239624023
    7. '   ' → logprob: -14.750036239624023
    8. '          ' → logprob: -16.000036239624023
    9. '	       ' → logprob: -16.000036239624023
    10. '            
' → logprob: -16.375036239624023

Token 1087: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.707997428951785e-05
    2. '           ' → logprob: -10.000077247619629
    3. ' self' → logprob: -10.375077247619629
    4. '       ' → logprob: -14.875077247619629
    5. '	self' → logprob: -17.500076293945312
    6. '(self' → logprob: -18.625076293945312
    7. '   ' → logprob: -19.000076293945312
    8. '
' → logprob: -19.500076293945312
    9. 's' → logprob: -20.000076293945312
    10. '=self' → logprob: -20.000076293945312

Token 1088: '.constraints' (ID: 62986)
  Prédit: '.constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraints' → logprob: -0.0059831892140209675
    2. 'constraints' → logprob: -5.130983352661133
    3. 'Constraints' → logprob: -10.505983352661133
    4. '_constraints' → logprob: -11.880983352661133
    5. '.constraint' → logprob: -12.005983352661133
    6. '.const' → logprob: -12.380983352661133
    7. ' constraints' → logprob: -12.505983352661133
    8. 'const' → logprob: -12.755983352661133
    9. ' .' → logprob: -13.505983352661133
    10. '.' → logprob: -14.130983352661133

Token 1089: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002407282590866089
    2. '.' → logprob: -8.375240325927734
    3. 'append' → logprob: -12.375240325927734
    4. '.app' → logprob: -12.750240325927734
    5. ' .' → logprob: -13.125240325927734
    6. '.ap' → logprob: -14.125240325927734
    7. '.Append' → logprob: -16.125240325927734
    8. ').' → logprob: -16.500240325927734
    9. '.push' → logprob: -17.500240325927734
    10. '.extend' → logprob: -17.625240325927734

Token 1090: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. 'Constraint' → logprob: -13.00000286102295
    3. '(
' → logprob: -15.50000286102295
    4. '(const' → logprob: -15.87500286102295
    5. '((' → logprob: -18.625001907348633
    6. ' Constraint' → logprob: -18.625001907348633
    7. ' (' → logprob: -19.500001907348633
    8. '(Constant' → logprob: -20.000001907348633
    9. '(Constructor' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.875001907348633

Token 1091: 'Constraint' (ID: 23133)
  Prédit: 'Constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Constraint' → logprob: -9.088346359931165e-07
    2. ' Constraint' → logprob: -14.000000953674316
    3. 'Constraints' → logprob: -22.875
    4. '   ' → logprob: -23.0
    5. '.Constraint' → logprob: -23.375
    6. '_constraint' → logprob: -23.5
    7. '(' → logprob: -23.75
    8. 'constraint' → logprob: -23.875
    9. '	' → logprob: -25.375
    10. 'Contra' → logprob: -26.0

Token 1092: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.87500286102295
    3. 'a' → logprob: -15.00000286102295
    4. '(
' → logprob: -15.50000286102295
    5. ')a' → logprob: -18.750003814697266
    6. ')(' → logprob: -19.625003814697266
    7. ' (' → logprob: -20.000003814697266
    8. ')' → logprob: -20.375003814697266
    9. '(i' → logprob: -20.875003814697266
    10. '((' → logprob: -21.125003814697266

Token 1093: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006269324570894241
    2. ',b' → logprob: -5.256269454956055
    3. ' ,' → logprob: -6.881269454956055
    4. 'b' → logprob: -12.881269454956055
    5. ',
' → logprob: -13.006269454956055
    6. ',a' → logprob: -14.506269454956055
    7. '<|end|>' → logprob: -14.631269454956055
    8. '   ' → logprob: -15.131269454956055
    9. '‌,' → logprob: -15.256269454956055
    10. '           ' → logprob: -15.631269454956055

Token 1094: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0067156096920371056
    2. ' b' → logprob: -5.006715774536133
    3. '           ' → logprob: -15.881715774536133
    4. ')b' → logprob: -17.381715774536133
    5. '       ' → logprob: -17.756715774536133
    6. '   ' → logprob: -17.756715774536133
    7. '<|end|>' → logprob: -17.881715774536133
    8. ' ' → logprob: -18.256715774536133
    9. '	b' → logprob: -18.381715774536133
    10. ',b' → logprob: -18.506715774536133

Token 1095: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003184233792126179
    2. ' ,' → logprob: -8.25031852722168
    3. ',c' → logprob: -10.00031852722168
    4. '<|end|>' → logprob: -12.75031852722168
    5. ',
' → logprob: -13.37531852722168
    6. '           ' → logprob: -13.62531852722168
    7. '`,' → logprob: -13.87531852722168
    8. '),' → logprob: -14.12531852722168
    9. '‌,' → logprob: -14.25031852722168
    10. '```' → logprob: -14.37531852722168

Token 1096: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008615161292254925
    2. ' c' → logprob: -4.758615016937256
    3. '           ' → logprob: -15.383615493774414
    4. '	c' → logprob: -15.633615493774414
    5. ')c' → logprob: -16.508615493774414
    6. '            ' → logprob: -16.633615493774414
    7. '   ' → logprob: -17.133615493774414
    8. ' ' → logprob: -17.133615493774414
    9. '
' → logprob: -17.383615493774414
    10. '       ' → logprob: -17.633615493774414

Token 1097: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2015126496553421
    2. ')' → logprob: -1.7015126943588257
    3. '))
' → logprob: -9.451512336730957
    4. ')
' → logprob: -10.951512336730957
    5. '       ' → logprob: -13.326512336730957
    6. ')))' → logprob: -14.326512336730957
    7. ' ))' → logprob: -15.076512336730957
    8. ')}' → logprob: -15.576512336730957
    9. ' )' → logprob: -15.951512336730957
    10. '   ' → logprob: -16.451513290405273

Token 1098: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22750109434127808
    2. ' def' → logprob: -2.727501153945923
    3. '<|end|>' → logprob: -2.852501153945923
    4. 'def' → logprob: -3.102501153945923
    5. '
' → logprob: -3.477501153945923
    6. '	def' → logprob: -6.352500915527344
    7. '<|end|>' → logprob: -6.352500915527344
    8. '    
' → logprob: -7.602500915527344
    9. '```' → logprob: -7.977500915527344
    10. '        
' → logprob: -10.477500915527344

Token 1099: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004927985370159149
    2. '   ' → logprob: -5.629928112030029
    3. ' def' → logprob: -6.754928112030029
    4. '
' → logprob: -8.754927635192871
    5. '	def' → logprob: -12.879927635192871
    6. '```' → logprob: -14.254927635192871
    7. '    
' → logprob: -14.504927635192871
    8. '       ' → logprob: -16.254928588867188
    9. ' ' → logprob: -16.379928588867188
    10. '        
' → logprob: -16.504928588867188

Token 1100: ' solve' (ID: 17722)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.688470721244812
    2. 'opt' → logprob: -1.188470721244812
    3. 'solve' → logprob: -1.938470721244812
    4. ' run' → logprob: -3.5634708404541016
    5. 'simulate' → logprob: -4.188470840454102
    6. 'maximize' → logprob: -5.563470840454102
    7. ' optimize' → logprob: -7.438470840454102
    8. ' solve' → logprob: -7.563470840454102
    9. 'process' → logprob: -8.438470840454102
    10. 'calculate' → logprob: -8.938470840454102

Token 1101: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.314625690924004e-05
    2. '(' → logprob: -9.625073432922363
    3. '   ' → logprob: -12.625073432922363
    4. '       ' → logprob: -13.625073432922363
    5. 'self' → logprob: -13.750073432922363
    6. '(
' → logprob: -13.875073432922363
    7. ' (' → logprob: -15.750073432922363
    8. '	self' → logprob: -16.125072479248047
    9. '(s' → logprob: -16.750072479248047
    10. '(Self' → logprob: -17.625072479248047

Token 1102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3746005594730377
    2. '):
' → logprob: -1.4996005296707153
    3. 'self' → logprob: -2.999600648880005
    4. '(self' → logprob: -3.374600648880005
    5. '   ' → logprob: -5.874600410461426
    6. '       ' → logprob: -6.374600410461426
    7. ')(' → logprob: -7.999600410461426
    8. ')' → logprob: -8.874600410461426
    9. ',' → logprob: -9.749600410461426
    10. ' self' → logprob: -10.624600410461426

Token 1103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002334855031222105
    2. '   ' → logprob: -6.502335071563721
    3. '
' → logprob: -8.002334594726562
    4. 'self' → logprob: -8.002334594726562
    5. 'optimizer' → logprob: -9.377334594726562
    6. ' self' → logprob: -10.502334594726562
    7. '```' → logprob: -10.502334594726562
    8. ' optimizer' → logprob: -11.877334594726562
    9. '        
' → logprob: -12.002334594726562
    10. 'max' → logprob: -12.752334594726562

Token 1104: ' optimizer' (ID: 56610)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45610377192497253
    2. 'optimizer' (adapté à ' optimizer') → logprob: -1.206103801727295
    3. ' optimizer' → logprob: -2.706103801727295
    4. 'opt' → logprob: -9.831103324890137
    5. '
' → logprob: -11.456103324890137
    6. '   ' → logprob: -11.956103324890137
    7. 'max' → logprob: -12.081103324890137
    8. 'optim' → logprob: -12.331103324890137
    9. ' opt' → logprob: -12.831103324890137
    10. 'solver' → logprob: -12.831103324890137

Token 1105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004621303640305996
    2. '=' → logprob: -5.379621505737305
    3. ' =
' → logprob: -14.379621505737305
    4. '.' → logprob: -15.379621505737305
    5. '   ' → logprob: -15.879621505737305
    6. ' ' → logprob: -16.879621505737305
    7. '    ' → logprob: -17.004621505737305
    8. '=
' → logprob: -17.379621505737305
    9. '.=' → logprob: -17.504621505737305
    10. '	' → logprob: -17.879621505737305

Token 1106: ' Max' (ID: 10093)
  Prédit: ' Max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Max' → logprob: -0.12692831456661224
    2. 'Max' → logprob: -2.1269283294677734
    3. ' Maxim' → logprob: -16.501928329467773
    4. '	Max' → logprob: -16.751928329467773
    5. '_Max' → logprob: -17.001928329467773
    6. ' Maximum' → logprob: -17.876928329467773
    7. '(Max' → logprob: -18.001928329467773
    8. ' max' → logprob: -20.376928329467773
    9. 'Maximum' → logprob: -21.376928329467773
    10. '_max' → logprob: -21.501928329467773

Token 1107: 'Calories' (ID: 151181)
  Prédit: 'Calories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calories' → logprob: -9.088346359931165e-07
    2. ' Calories' → logprob: -14.750000953674316
    3. 'C' → logprob: -14.875000953674316
    4. 'Cal' → logprob: -15.625000953674316
    5. '(' → logprob: -17.75
    6. '(C' → logprob: -18.0
    7. ' calories' → logprob: -18.625
    8. '```' → logprob: -18.625
    9. 'Constraints' → logprob: -19.0
    10. '
' → logprob: -19.0

Token 1108: 'Optimizer' (ID: 120293)
  Prédit: 'Optimizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optimizer' → logprob: -3.297462171758525e-05
    2. 'optimizer' → logprob: -10.375033378601074
    3. '_optimizer' → logprob: -13.750033378601074
    4. '(' → logprob: -15.250033378601074
    5. ' optimizer' → logprob: -15.250033378601074
    6. '(Max' → logprob: -16.250032424926758
    7. 'Allocator' → logprob: -17.750032424926758
    8. '(M' → logprob: -17.875032424926758
    9. '(opt' → logprob: -18.000032424926758
    10. '(max' → logprob: -18.250032424926758

Token 1109: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009137284359894693
    2. '(' → logprob: -7.250913619995117
    3. '(
' → logprob: -8.500913619995117
    4. ' (' → logprob: -15.375913619995117
    5. '       ' → logprob: -16.250913619995117
    6. 'self' → logprob: -16.500913619995117
    7. '(

' → logprob: -18.500913619995117
    8. '(s' → logprob: -19.000913619995117
    9. '((' → logprob: -19.125913619995117
    10. '(
' → logprob: -19.375913619995117

Token 1110: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -13.37500286102295
    3. 'machines' → logprob: -14.50000286102295
    4. ' .' → logprob: -14.50000286102295
    5. ').' → logprob: -14.87500286102295
    6. '.machine' → logprob: -15.50000286102295
    7. ',m' → logprob: -18.000003814697266
    8. '.м' → logprob: -18.000003814697266
    9. 'Machines' → logprob: -18.750003814697266
    10. '   ' → logprob: -18.875003814697266

Token 1111: 'achines' (ID: 180949)
  Prédit: 'achines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achines' → logprob: -9.436450636712834e-05
    2. 'ach' → logprob: -9.500094413757324
    3. '.m' → logprob: -11.625094413757324
    4. 'machines' → logprob: -12.000094413757324
    5. 'achine' → logprob: -12.500094413757324
    6. 'aches' → logprob: -15.125094413757324
    7. '   ' → logprob: -15.750094413757324
    8. '.' → logprob: -16.875093460083008
    9. 'achs' → logprob: -17.250093460083008
    10. 'self' → logprob: -17.250093460083008

Token 1112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.29340603761375e-05
    2. ',self' → logprob: -9.375092506408691
    3. ',
' → logprob: -11.875092506408691
    4. ' ,' → logprob: -14.500092506408691
    5. 'self' → logprob: -15.000092506408691
    6. '       ' → logprob: -16.000093460083008
    7. ')' → logprob: -17.875093460083008
    8. '‌,' → logprob: -18.000093460083008
    9. ',\
' → logprob: -18.125093460083008
    10. ',

' → logprob: -18.500093460083008

Token 1113: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018577903392724693
    2. ' self' → logprob: -8.6251859664917
    3. '       ' → logprob: -12.5001859664917
    4. '           ' → logprob: -13.0001859664917
    5. '[self' → logprob: -17.000185012817383
    6. '(self' → logprob: -17.125185012817383
    7. '               ' → logprob: -17.375185012817383
    8. '   ' → logprob: -17.750185012817383
    9. '	self' → logprob: -17.875185012817383
    10. '                   ' → logprob: -18.375185012817383

Token 1114: '.constraints' (ID: 62986)
  Prédit: '.constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraints' → logprob: -2.081584716506768e-05
    2. 'constraints' → logprob: -11.000020980834961
    3. '.constraint' → logprob: -12.500020980834961
    4. ' .' → logprob: -15.375020980834961
    5. '.const' → logprob: -16.25002098083496
    6. '.constants' → logprob: -17.37502098083496
    7. '.' → logprob: -17.87502098083496
    8. 'Constraints' → logprob: -18.00002098083496
    9. '   ' → logprob: -18.25002098083496
    10. '.cons' → logprob: -18.50002098083496

Token 1115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2522476017475128
    2. ')
' → logprob: -1.5022475719451904
    3. '       ' → logprob: -8.12724781036377
    4. ')
' → logprob: -11.37724781036377
    5. ').' → logprob: -12.12724781036377
    6. '   ' → logprob: -13.00224781036377
    7. ')

' → logprob: -13.75224781036377
    8. '<|end|>' → logprob: -13.87724781036377
    9. '())
' → logprob: -14.62724781036377
    10. '()
' → logprob: -15.62724781036377

Token 1116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5661701560020447
    2. 'result' → logprob: -1.3161702156066895
    3. 'return' → logprob: -1.8161702156066895
    4. 'total' → logprob: -7.0661702156066895
    5. ' return' → logprob: -8.566169738769531
    6. '   ' → logprob: -8.566169738769531
    7. ' result' → logprob: -8.691169738769531
    8. 'print' → logprob: -10.941169738769531
    9. 'cal' → logprob: -11.191169738769531
    10. 'max' → logprob: -11.316169738769531

Token 1117: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.36636894941329956
    2. 'print' → logprob: -1.6163690090179443
    3. 'return' → logprob: -2.3663690090179443
    4. 'max' → logprob: -4.866368770599365
    5. 'total' → logprob: -5.116368770599365
    6. 'cal' → logprob: -7.866368770599365
    7. '       ' → logprob: -9.366369247436523
    8. 'answer' → logprob: -9.366369247436523
    9. 'res' → logprob: -10.116369247436523
    10. ' result' → logprob: -11.991369247436523

Token 1118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07904819399118423
    2. '=' → logprob: -2.5790481567382812
    3. '       ' → logprob: -8.829048156738281
    4. '   ' → logprob: -12.579048156738281
    5. '        ' → logprob: -13.079048156738281
    6. 'ow' → logprob: -13.579048156738281
    7. 'u' → logprob: -14.079048156738281
    8. 'wer' → logprob: -14.454048156738281
    9. '    ' → logprob: -14.579048156738281
    10. 'w' → logprob: -14.704048156738281

Token 1119: ' optimizer' (ID: 56610)
  Prédit: 'optimizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimizer' → logprob: -0.011047935113310814
    2. ' optimizer' → logprob: -4.511047840118408
    3. '_optimizer' → logprob: -16.01104736328125
    4. '.optimizer' → logprob: -17.13604736328125
    5. 'opt' → logprob: -17.51104736328125
    6. 'optim' → logprob: -18.01104736328125
    7. 'Optimizer' → logprob: -18.76104736328125
    8. '   ' → logprob: -18.88604736328125
    9. '       ' → logprob: -19.01104736328125
    10. 'allocator' → logprob: -19.76104736328125

Token 1120: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.0003612065047491342
    2. '.' → logprob: -8.125361442565918
    3. 'maximize' → logprob: -9.875361442565918
    4. ' .' → logprob: -12.500361442565918
    5. 'max' → logprob: -13.125361442565918
    6. '.
' → logprob: -13.375361442565918
    7. '.mass' → logprob: -13.750361442565918
    8. '=max' → logprob: -13.750361442565918
    9. ' maximize' → logprob: -14.125361442565918
    10. '.argmax' → logprob: -14.250361442565918

Token 1121: 'imize' (ID: 16368)
  Prédit: 'imize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imize' → logprob: -0.0009408812038600445
    2. 'ize' → logprob: -7.000940799713135
    3. 'a' → logprob: -11.875941276550293
    4. 'al' → logprob: -12.125941276550293
    5. 'maximize' → logprob: -12.500941276550293
    6. 'alyze' → logprob: -12.750941276550293
    7. '_cal' → logprob: -13.125941276550293
    8. 'm' → logprob: -13.250941276550293
    9. 'aze' → logprob: -13.625941276550293
    10. 'ax' → logprob: -14.125941276550293

Token 1122: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -0.0005538671393878758
    2. 'cal' → logprob: -7.500554084777832
    3. 'ans' → logprob: -14.750554084777832
    4. 's' → logprob: -16.250553131103516
    5. '	cal' → logprob: -16.375553131103516
    6. 'Calories' → logprob: -16.500553131103516
    7. ' calories' → logprob: -16.750553131103516
    8. 'total' → logprob: -16.750553131103516
    9. '
' → logprob: -17.125553131103516
    10. '_c' → logprob: -17.375553131103516

Token 1123: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.008478998206555843
    2. 'al' → logprob: -5.133479118347168
    3. 'ory' → logprob: -7.008479118347168
    4. 'or' → logprob: -7.008479118347168
    5. 'ores' → logprob: -8.258479118347168
    6. 'orie' → logprob: -9.008479118347168
    7. 'o' → logprob: -9.258479118347168
    8. 'als' → logprob: -9.883479118347168
    9. 'ales' → logprob: -10.383479118347168
    10. 'es' → logprob: -10.633479118347168

Token 1124: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07831896096467972
    2. '
' → logprob: -3.2033190727233887
    3. 'print' → logprob: -3.4533190727233887
    4. 'return' → logprob: -6.203319072723389
    5. ' return' → logprob: -7.828319072723389
    6. ' print' → logprob: -7.828319072723389
    7. '        
' → logprob: -9.82831859588623
    8. '()
' → logprob: -9.95331859588623
    9. '
' → logprob: -10.45331859588623
    10. '<|end|>' → logprob: -10.95331859588623

Token 1125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000365855434210971
    2. 'return' → logprob: -8.1253662109375
    3. 'print' → logprob: -10.1253662109375
    4. '
' → logprob: -10.6253662109375
    5. '   ' → logprob: -12.6253662109375
    6. ' return' → logprob: -13.8753662109375
    7. '        
' → logprob: -14.6253662109375
    8. '```' → logprob: -15.2503662109375
    9. '	' → logprob: -15.6253662109375
    10. '           ' → logprob: -16.5003662109375

Token 1126: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00025311444187536836
    2. '       ' → logprob: -9.000252723693848
    3. 'return' → logprob: -9.000252723693848
    4. ' print' → logprob: -12.000252723693848
    5. '
' → logprob: -16.375253677368164
    6. '```' → logprob: -16.375253677368164
    7. ' return' → logprob: -18.875253677368164
    8. '	print' → logprob: -19.625253677368164
    9. '   ' → logprob: -20.125253677368164
    10. '#print' → logprob: -20.250253677368164

Token 1127: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.375005722045898
    3. 'ans' → logprob: -13.625005722045898
    4. '(f' → logprob: -15.750005722045898
    5. '()' → logprob: -17.2500057220459
    6. '	ans' → logprob: -17.8750057220459
    7. '(
' → logprob: -18.0000057220459
    8. '(answer' → logprob: -18.1250057220459
    9. '('' → logprob: -18.1250057220459
    10. ' (' → logprob: -18.5000057220459

Token 1128: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. '()' → logprob: -12.625007629394531
    3. '())' → logprob: -13.125007629394531
    4. ')
' → logprob: -13.250007629394531
    5. '`)' → logprob: -14.875007629394531
    6. ' )' → logprob: -15.375007629394531
    7. ')`' → logprob: -15.750007629394531
    8. '   ' → logprob: -16.87500762939453
    9. '       ' → logprob: -17.25000762939453
    10. '))' → logprob: -17.25000762939453

Token 1129: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008752549765631557
    2. '```' → logprob: -7.500875473022461
    3. ' if' → logprob: -9.375875473022461
    4. 'def' → logprob: -9.500875473022461
    5. '<|end|>' → logprob: -9.500875473022461
    6. '#' → logprob: -9.750875473022461
    7. 'import' → logprob: -11.125875473022461
    8. 'gym' → logprob: -11.625875473022461
    9. 'Gym' → logprob: -13.125875473022461
    10. 'If' → logprob: -13.875875473022461

Token 1130: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10021346807479858
    2. '__' → logprob: -2.3502135276794434
    3. 'name' → logprob: -12.975213050842285
    4. '___' → logprob: -13.225213050842285
    5. '_name' → logprob: -13.725213050842285
    6. '_' → logprob: -13.850213050842285
    7. '____' → logprob: -15.100213050842285
    8. ' ' → logprob: -16.4752140045166
    9. '/__' → logprob: -16.6002140045166
    10. 'Name' → logprob: -16.8502140045166

Token 1131: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03392045199871063
    2. ' __' → logprob: -3.5339205265045166
    3. ' ==' → logprob: -5.6589202880859375
    4. '==' → logprob: -7.7839202880859375
    5. '_main' → logprob: -10.658920288085938
    6. 'main' → logprob: -10.783920288085938
    7. ' main' → logprob: -10.783920288085938
    8. '.py' → logprob: -10.908920288085938
    9. '```' → logprob: -10.908920288085938
    10. '__":
' → logprob: -11.158920288085938

Token 1132: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00011808603449026123
    2. '__.__' → logprob: -9.125118255615234
    3. '__.' → logprob: -13.250118255615234
    4. '__
' → logprob: -13.250118255615234
    5. '==' → logprob: -13.375118255615234
    6. '=="' → logprob: -13.750118255615234
    7. '__["' → logprob: -13.875118255615234
    8. '__('' → logprob: -15.000118255615234
    9. '__":
' → logprob: -15.000118255615234
    10. '____' → logprob: -15.125118255615234

Token 1133: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0643748864531517
    2. '==' → logprob: -3.0643749237060547
    3. ' ==' → logprob: -4.314374923706055
    4. '=="' → logprob: -6.189374923706055
    5. '=='' → logprob: -8.814374923706055
    6. '__.__' → logprob: -9.814374923706055
    7. '==
' → logprob: -11.939374923706055
    8. '__":
' → logprob: -12.189374923706055
    9. '___' → logprob: -12.814374923706055
    10. '=' → logprob: -12.814374923706055

Token 1134: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006725906860083342
    2. ''' → logprob: -5.006725788116455
    3. '__' → logprob: -11.881726264953613
    4. ' "__' → logprob: -12.631726264953613
    5. '"user' → logprob: -15.631726264953613
    6. '"name' → logprob: -16.631725311279297
    7. '"class' → logprob: -17.006725311279297
    8. ' '__' → logprob: -17.506725311279297
    9. '("__' → logprob: -17.756725311279297
    10. '"value' → logprob: -18.256725311279297

Token 1135: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1160349458805285e-05
    2. '__' → logprob: -11.750011444091797
    3. 'name' → logprob: -12.750011444091797
    4. '_main' → logprob: -15.625011444091797
    5. ' main' → logprob: -16.875011444091797
    6. 'ma' → logprob: -19.625011444091797
    7. 'built' → logprob: -19.875011444091797
    8. '-main' → logprob: -20.250011444091797
    9. 'python' → logprob: -20.375011444091797
    10. '(main' → logprob: -21.125011444091797

Token 1136: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10454615205526352
    2. '__' → logprob: -2.354546070098877
    3. '__':
' → logprob: -5.479546070098877
    4. '__:' → logprob: -9.854546546936035
    5. '__
' → logprob: -10.854546546936035
    6. '__.' → logprob: -10.854546546936035
    7. '__["' → logprob: -10.854546546936035
    8. '__.__' → logprob: -10.979546546936035
    9. '__
' → logprob: -12.229546546936035
    10. '():
' → logprob: -12.854546546936035

Token 1137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039915379136800766
    2. 'Gym' → logprob: -3.5399153232574463
    3. 'gs' → logprob: -5.414915561676025
    4. ' Gym' → logprob: -6.914915561676025
    5. ' gym' → logprob: -6.914915561676025
    6. 'g' → logprob: -6.914915561676025
    7. 'gym' → logprob: -7.039915561676025
    8. 'import' → logprob: -7.914915561676025
    9. '	G' → logprob: -8.289915084838867
    10. '   ' → logprob: -8.289915084838867

Token 1138: ' simulator' (ID: 71288)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.14448383450508118
    2. 'Gym' → logprob: -2.144483804702759
    3. 'gym' → logprob: -5.144484043121338
    4. 'import' → logprob: -5.269484043121338
    5. 'gs' → logprob: -5.769484043121338
    6. ' simulator' → logprob: -6.644484043121338
    7. '   ' → logprob: -7.019484043121338
    8. 'Simulator' → logprob: -7.894484043121338
    9. 'simulate' → logprob: -8.76948356628418
    10. 'g' → logprob: -9.01948356628418

Token 1139: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5404702425003052
    2. ' =' → logprob: -1.6654702425003052
    3. '().' → logprob: -2.1654701232910156
    4. '=' → logprob: -2.9154701232910156
    5. '()' → logprob: -3.9154701232910156
    6. '.mainloop' → logprob: -3.9154701232910156
    7. '.run' → logprob: -4.790470123291016
    8. '   ' → logprob: -6.165470123291016
    9. '.sim' → logprob: -6.290470123291016
    10. '.py' → logprob: -6.540470123291016

Token 1140: ' Gym' (ID: 42516)
  Prédit: 'Gym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gym' → logprob: -0.10020720958709717
    2. ' Gym' → logprob: -2.3502073287963867
    3. 'Gy' → logprob: -14.600207328796387
    4. ' gym' → logprob: -16.60020637512207
    5. ' Gim' → logprob: -18.72520637512207
    6. 'GY' → logprob: -18.72520637512207
    7. 'Gpu' → logprob: -18.97520637512207
    8. ' ' → logprob: -19.22520637512207
    9. ' Gy' → logprob: -19.35020637512207
    10. 'Golf' → logprob: -19.47520637512207

Token 1141: 'Simulator' (ID: 120745)
  Prédit: 'Simulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Simulator' → logprob: -1.0280383548888494e-06
    2. 'sim' → logprob: -14.250000953674316
    3. ' Simulator' → logprob: -15.125000953674316
    4. 'imulator' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.500001907348633
    6. ' simulator' → logprob: -18.125001907348633
    7. '(sim' → logprob: -19.125001907348633
    8. 'Sim' → logprob: -19.875001907348633
    9. 'Scheduler' → logprob: -20.000001907348633
    10. 's' → logprob: -20.125001907348633

Token 1142: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.669908881187439
    2. 'sim' → logprob: -1.294908881187439
    3. '
' → logprob: -1.544908881187439
    4. '    
' → logprob: -7.7949090003967285
    5. '.sim' → logprob: -8.04490852355957
    6. '(sim' → logprob: -9.41990852355957
    7. 'simulate' → logprob: -9.91990852355957
    8. '<|end|>' → logprob: -10.91990852355957
    9. '
' → logprob: -11.16990852355957
    10. '  
' → logprob: -11.29490852355957

Token 1143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5776116251945496
    2. 'sim' → logprob: -0.8276116251945496
    3. '
' → logprob: -6.577611446380615
    4. '    
' → logprob: -9.327611923217773
    5. '(sim' → logprob: -9.327611923217773
    6. '```' → logprob: -9.577611923217773
    7. ' simulator' → logprob: -11.577611923217773
    8. '.sim' → logprob: -12.452611923217773
    9. 'simulate' → logprob: -12.452611923217773
    10. '	s' → logprob: -12.452611923217773

Token 1144: ' simulator' (ID: 71288)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: 0.0
    2. '(sim' → logprob: -17.625
    3. ' simulator' → logprob: -17.875
    4. '
' → logprob: -17.875
    5. '```' → logprob: -18.0
    6. 'simulate' → logprob: -18.375
    7. '   ' → logprob: -19.125
    8. 'simulation' → logprob: -19.875
    9. '    
' → logprob: -21.75
    10. '.sim' → logprob: -22.25

Token 1145: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.00033784625702537596
    2. '.readline' → logprob: -8.500337600708008
    3. '.solve' → logprob: -9.375337600708008
    4. '.' → logprob: -10.125337600708008
    5. '.readlines' → logprob: -11.875337600708008
    6. 'read' → logprob: -13.875337600708008
    7. '.run' → logprob: -14.000337600708008
    8. '.load' → logprob: -15.375337600708008
    9. ' .' → logprob: -16.000337600708008
    10. '.mainloop' → logprob: -16.500337600708008

Token 1146: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -13.125004768371582
    3. '_' → logprob: -13.750004768371582
    4. 'input' → logprob: -14.125004768371582
    5. '_line' → logprob: -14.500004768371582
    6. '()
' → logprob: -15.000004768371582
    7. '_inputs' → logprob: -16.2500057220459
    8. 'Input' → logprob: -16.3750057220459
    9. '```' → logprob: -17.2500057220459
    10. '   ' → logprob: -17.2500057220459

Token 1147: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010660359403118491
    2. 'sim' → logprob: -6.876066207885742
    3. '
' → logprob: -10.626066207885742
    4. '    
' → logprob: -12.376066207885742
    5. ' simulator' → logprob: -13.126066207885742
    6. '(sim' → logprob: -13.626066207885742
    7. '```' → logprob: -14.626066207885742
    8. '  ' → logprob: -15.501066207885742
    9. '.sim' → logprob: -15.626066207885742
    10. 'simulate' → logprob: -15.751066207885742

Token 1148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3868841528892517
    2. 'sim' → logprob: -1.1368842124938965
    3. '(sim' → logprob: -12.011883735656738
    4. ' simulator' → logprob: -12.761883735656738
    5. '```' → logprob: -13.511883735656738
    6. '    
' → logprob: -14.261883735656738
    7. ' sim' → logprob: -14.386883735656738
    8. 'simulate' → logprob: -14.761883735656738
    9. '
' → logprob: -15.136883735656738
    10. 'simulation' → logprob: -15.386883735656738

Token 1149: ' simulator' (ID: 71288)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: 0.0
    2. 'simulate' → logprob: -18.125
    3. ' simulator' → logprob: -18.5
    4. '   ' → logprob: -19.375
    5. 'simulation' → logprob: -19.875
    6. 'solver' → logprob: -20.0
    7. '(sim' → logprob: -20.5
    8. 'sam' → logprob: -20.625
    9. '```' → logprob: -20.875
    10. '
' → logprob: -22.0

Token 1150: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.0067182136699557304
    2. '.' → logprob: -5.006718158721924
    3. '.run' → logprob: -13.756718635559082
    4. '.
' → logprob: -14.506718635559082
    5. '.s' → logprob: -15.131718635559082
    6. ' .' → logprob: -15.381718635559082
    7. '.sol' → logprob: -15.381718635559082
    8. '.mainloop' → logprob: -15.756718635559082
    9. '.save' → logprob: -15.881718635559082
    10. '.execute' → logprob: -15.881718635559082

Token 1151: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1149
Tokens correctement prédits (1ère position, stricte): 472
Tokens correctement prédits (1ère position, avec adaptation): 529
Tokens correctement prédits (top 10): 938
Précision stricte (1ère position): 41.08%
Précision adaptée (1ère position): 46.04%
Précision (top 10): 81.64%
================================================================================
