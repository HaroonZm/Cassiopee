================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
M,N = map(int, input().split())
P = [int(input()) for _ in range(M)]
C = []
E = []
for _ in range(N):
    c, e = map(int, input().split())
    C.append(c)
    E.append(e)

# trier les prix des manjuu decroissants
P.sort(reverse=True)

max_profit = 0
# essayer toutes les combinaisons possibles de boîtes
# comme N peut aller jusqu'à 500, on ne va pas faire de vrai combinatoire complète (2^N)
# juste une approche simple : essayer chaque boîte individuellement et prendre la meilleure

for j in range(N):
    c = C[j]
    e = E[j]
    # prendre les c manjuus les plus chers
    if c > M:
        c = M
    total_price = sum(P[:c])
    profit = total_price - e
    if profit > max_profit:
        max_profit = profit

# aussi essayer de combiner deux boites, de manière simple et non optimale
# essayer toutes paires de boites
# c'est un simple O(N^2) qui est acceptable pour N=500

for j1 in range(N):
    for j2 in range(j1+1, N):
        c1, e1 = C[j1], E[j1]
        c2, e2 = C[j2], E[j2]

        # prendre c1+c2 manjuus les plus chers
        if c1 + c2 > M:
            continue

        # pour simplicité on répartit c1 + c2 manjuus en 2 groupes:
        # on prend les c1 plus chers dans les c1+c2 manjuus pour la boite 1
        # et les c2 suivants pour la boite 2
        
        total_price_1 = sum(P[:c1])
        total_price_2 = sum(P[c1:c1+c2])
        total_price = total_price_1 + total_price_2
        profit = total_price - (e1 + e2)
        if profit > max_profit:
            max_profit = profit

print(max_profit)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'M' (ID: 44)
  → Token d'amorce (pas de prédiction)

Token 1: ',N' (ID: 49539)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.224081352353096
    2. '10' → logprob: -2.34908127784729
    3. ' map' → logprob: -2.97408127784729
    4. 'map' → logprob: -3.72408127784729
    5. '0' → logprob: -4.349081516265869
    6. '1' → logprob: -5.724081516265869
    7. '100' → logprob: -6.224081516265869
    8. ' (' → logprob: -6.349081516265869
    9. '50' → logprob: -6.474081516265869
    10. '20' → logprob: -6.474081516265869

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10256784409284592
    2. '(int' → logprob: -2.7275679111480713
    3. '(str' → logprob: -3.9775679111480713
    4. '(lambda' → logprob: -4.602567672729492
    5. '(input' → logprob: -6.977567672729492
    6. '```' → logprob: -7.477567672729492
    7. '(M' → logprob: -8.102567672729492
    8. '(len' → logprob: -8.102567672729492
    9. '(user' → logprob: -8.852567672729492
    10. '<|end|>' → logprob: -8.977567672729492

Token 5: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05408347398042679
    2. ')' → logprob: -3.8040835857391357
    3. 'input' → logprob: -3.9290835857391357
    4. '(' → logprob: -5.554083347320557
    5. ',input' → logprob: -5.554083347320557
    6. ',' → logprob: -7.429083347320557
    7. '```' → logprob: -7.554083347320557
    8. '`' → logprob: -8.054083824157715
    9. '`)' → logprob: -8.179083824157715
    10. '(int' → logprob: -8.554083824157715

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008663617074489594
    2. ' input' → logprob: -4.758663654327393
    3. '(input' → logprob: -10.008663177490234
    4. ')' → logprob: -13.133663177490234
    5. ',input' → logprob: -13.383663177490234
    6. '=input' → logprob: -15.633663177490234
    7. '[input' → logprob: -16.008663177490234
    8. '<input' → logprob: -16.633663177490234
    9. '```' → logprob: -16.633663177490234
    10. 'range' → logprob: -17.383663177490234

Token 7: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.23331990838050842
    2. '()' → logprob: -2.1083199977874756
    3. '(' → logprob: -3.6083199977874756
    4. '('' → logprob: -4.1083197593688965
    5. ')' → logprob: -4.2333197593688965
    6. '().' → logprob: -5.6083197593688965
    7. '(""))' → logprob: -5.7333197593688965
    8. '`()' → logprob: -5.7333197593688965
    9. '```' → logprob: -5.8583197593688965
    10. '());' → logprob: -6.1083197593688965

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009550517424941063
    2. 'strip' → logprob: -7.000955104827881
    3. ')' → logprob: -10.625954627990723
    4. ' split' → logprob: -11.125954627990723
    5. 'rstrip' → logprob: -12.750954627990723
    6. '(split' → logprob: -14.500954627990723
    7. 'read' → logprob: -15.000954627990723
    8. 'spl' → logprob: -15.500954627990723
    9. 'replace' → logprob: -16.37595558166504
    10. 'startswith' → logprob: -16.37595558166504

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033157882280647755
    2. '())' → logprob: -6.3783159255981445
    3. '`)' → logprob: -7.3783159255981445
    4. '))' → logprob: -7.3783159255981445
    5. '(' → logprob: -8.378315925598145
    6. '()' → logprob: -9.753315925598145
    7. '')' → logprob: -10.628315925598145
    8. ')`' → logprob: -11.253315925598145
    9. '```' → logprob: -12.378315925598145
    10. '")' → logprob: -12.628315925598145

Token 10: 'P' (ID: 47)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.991813063621521
    2. '#' → logprob: -1.741813063621521
    3. ',' → logprob: -2.3668131828308105
    4. '\n' → logprob: -2.4918131828308105
    5. 'a' → logprob: -2.6168131828308105
    6. '
' → logprob: -3.3668131828308105
    7. '```' → logprob: -3.6168131828308105
    8. '[' → logprob: -3.7418131828308105
    9. 'x' → logprob: -4.1168131828308105
    10. '*' → logprob: -4.1168131828308105

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9395723938941956
    2. '[' → logprob: -1.0645723342895508
    3. ' =' → logprob: -1.6895723342895508
    4. ',' → logprob: -3.939572334289551
    5. 'r' → logprob: -3.939572334289551
    6. '_' → logprob: -4.814572334289551
    7. '.' → logprob: -4.814572334289551
    8. '(' → logprob: -5.189572334289551
    9. '[:]' → logprob: -5.189572334289551
    10. '[i' → logprob: -5.439572334289551

Token 12: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8081753253936768
    2. 'list' → logprob: -1.1831753253936768
    3. '[int' → logprob: -2.5581753253936768
    4. '[M' → logprob: -2.6831753253936768
    5. 'map' → logprob: -3.8081753253936768
    6. '[' → logprob: -3.8081753253936768
    7. 'int' → logprob: -4.308175086975098
    8. '[N' → logprob: -4.933175086975098
    9. ' []' → logprob: -4.933175086975098
    10. ' [' → logprob: -5.058175086975098

Token 13: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.012863710522651672
    2. '0' → logprob: -4.512863636016846
    3. 'list' → logprob: -6.762863636016846
    4. 'map' → logprob: -8.012864112854004
    5. ']' → logprob: -8.762864112854004
    6. 'tuple' → logprob: -9.512864112854004
    7. '(int' → logprob: -10.387864112854004
    8. ']int' → logprob: -10.512864112854004
    9. ' int' → logprob: -11.012864112854004
    10. '[]' → logprob: -11.887864112854004

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11440691351890564
    2. '(x' → logprob: -2.8644068241119385
    3. '(input' → logprob: -2.9894068241119385
    4. '(i' → logprob: -7.739407062530518
    5. '(a' → logprob: -9.61440658569336
    6. ']' → logprob: -9.73940658569336
    7. '()' → logprob: -10.11440658569336
    8. '(
' → logprob: -10.36440658569336
    9. '(

' → logprob: -10.48940658569336
    10. '(s' → logprob: -10.86440658569336

Token 15: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00014728360110893846
    2. '()' → logprob: -9.250146865844727
    3. '()]' → logprob: -10.125146865844727
    4. '()))' → logprob: -12.250146865844727
    5. ')' → logprob: -13.000146865844727
    6. '())
' → logprob: -13.750146865844727
    7. '().' → logprob: -14.375146865844727
    8. '()),' → logprob: -14.625146865844727
    9. ' ())' → logprob: -14.625146865844727
    10. '();)' → logprob: -14.875146865844727

Token 16: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00443522073328495
    2. '()' → logprob: -6.254435062408447
    3. ')]' → logprob: -6.254435062408447
    4. '())' → logprob: -8.504435539245605
    5. ']' → logprob: -8.879435539245605
    6. ' )' → logprob: -9.879435539245605
    7. '()]' → logprob: -9.879435539245605
    8. 'for' → logprob: -10.004435539245605
    9. '(' → logprob: -10.379435539245605
    10. ' ' → logprob: -11.629435539245605

Token 17: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.21478930115699768
    2. ' ' → logprob: -2.464789390563965
    3. '_' → logprob: -2.714789390563965
    4. ' _' → logprob: -3.339789390563965
    5. '(' → logprob: -5.714789390563965
    6. ' i' → logprob: -6.589789390563965
    7. ' in' → logprob: -6.964789390563965
    8. 'range' → logprob: -7.589789390563965
    9. '_range' → logprob: -8.839789390563965
    10. ' (' → logprob: -9.464789390563965

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23418191075325012
    2. ' range' → logprob: -1.7341818809509277
    3. 'range' → logprob: -3.4841818809509277
    4. 'in' → logprob: -6.484181880950928
    5. ' ' → logprob: -10.859182357788086
    6. '(range' → logprob: -11.859182357788086
    7. '	range' → logprob: -13.609182357788086
    8. ')' → logprob: -14.109182357788086
    9. '  ' → logprob: -14.109182357788086
    10. '_' → logprob: -14.234182357788086

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -17.125553131103516
    4. '	range' → logprob: -18.125553131103516
    5. 'rang' → logprob: -19.500553131103516
    6. ' ' → logprob: -19.750553131103516
    7. 'ran' → logprob: -20.250553131103516
    8. ')' → logprob: -20.750553131103516
    9. '.range' → logprob: -20.750553131103516
    10. '```' → logprob: -20.750553131103516

Token 20: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.068220354616642
    2. '(N' → logprob: -3.193220376968384
    3. '(' → logprob: -3.693220376968384
    4. 'M' → logprob: -12.943220138549805
    5. ' (' → logprob: -13.068220138549805
    6. '(n' → logprob: -13.068220138549805
    7. '(
' → logprob: -13.193220138549805
    8. '(

' → logprob: -14.318220138549805
    9. '(K' → logprob: -14.443220138549805
    10. ')' → logprob: -14.693220138549805

Token 21: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00039492646465077996
    2. ')' → logprob: -8.000394821166992
    3. ']' → logprob: -9.750394821166992
    4. '')]' → logprob: -15.375394821166992
    5. ')])' → logprob: -15.500394821166992
    6. '))' → logprob: -15.625394821166992
    7. ')]
' → logprob: -15.750394821166992
    8. ')],' → logprob: -16.000394821166992
    9. ')}' → logprob: -16.250394821166992
    10. ' )' → logprob: -16.250394821166992

Token 22: 'C' (ID: 34)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.8278837203979492
    2. 'result' → logprob: -2.327883720397949
    3. 'for' → logprob: -2.452883720397949
    4. 'count' → logprob: -2.577883720397949
    5. 'P' → logprob: -3.077883720397949
    6. 'dp' → logprob: -3.202883720397949
    7. 'c' → logprob: -3.327883720397949
    8. 'C' → logprob: -3.577883720397949
    9. 's' → logprob: -4.077883720397949
    10. 'R' → logprob: -4.202883720397949

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2928372025489807
    2. '=' → logprob: -1.417837142944336
    3. '[' → logprob: -5.667837142944336
    4. 'ount' → logprob: -5.792837142944336
    5. '=[]' → logprob: -6.417837142944336
    6. 'o' → logprob: -6.792837142944336
    7. '[:]' → logprob: -7.792837142944336
    8. ',' → logprob: -7.917837142944336
    9. '_' → logprob: -7.917837142944336
    10. '.' → logprob: -8.167837142944336

Token 24: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.08395542204380035
    2. '[' → logprob: -3.0839555263519287
    3. ' []' → logprob: -3.9589555263519287
    4. '[int' → logprob: -5.20895528793335
    5. ' ' → logprob: -5.45895528793335
    6. '0' → logprob: -5.45895528793335
    7. '[]' → logprob: -7.20895528793335
    8. 'int' → logprob: -8.583955764770508
    9. ' int' → logprob: -8.833955764770508
    10. '[N' → logprob: -9.583955764770508

Token 25: 'E' (ID: 36)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008229722734540701
    2. '[' → logprob: -7.625823020935059
    3. ' for' → logprob: -8.750823020935059
    4. '(' → logprob: -9.000823020935059
    5. '```' → logprob: -10.875823020935059
    6. '0' → logprob: -12.125823020935059
    7. '[
' → logprob: -12.250823020935059
    8. '_' → logprob: -12.875823020935059
    9. '	for' → logprob: -13.000823020935059
    10. ')' → logprob: -13.000823020935059

Token 26: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6843768954277039
    2. ' =' → logprob: -1.4343769550323486
    3. '=' → logprob: -1.5593769550323486
    4. 'n' → logprob: -3.8093769550323486
    5. '.append' → logprob: -4.3093767166137695
    6. 'N' → logprob: -5.5593767166137695
    7. '_' → logprob: -6.9343767166137695
    8. ',' → logprob: -7.3093767166137695
    9. '(' → logprob: -7.5593767166137695
    10. 'x' → logprob: -7.5593767166137695

Token 27: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.1189322471618652
    2. ' []' → logprob: -1.2439322471618652
    3. '[]' → logprob: -1.8689322471618652
    4. '[' → logprob: -2.1189322471618652
    5. '0' → logprob: -2.7439322471618652
    6. ' ' → logprob: -3.3689322471618652
    7. '[N' → logprob: -5.743932247161865
    8. '[int' → logprob: -5.993932247161865
    9. 'N' → logprob: -6.993932247161865
    10. ' N' → logprob: -7.118932247161865

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002326224057469517
    2. 'f' → logprob: -8.750232696533203
    3. ' for' → logprob: -10.000232696533203
    4. 'd' → logprob: -11.875232696533203
    5. '```' → logprob: -12.125232696533203
    6. 'F' → logprob: -12.250232696533203
    7. 'i' → logprob: -12.875232696533203
    8. '[' → logprob: -13.625232696533203
    9. ')' → logprob: -14.000232696533203
    10. 'n' → logprob: -14.500232696533203

Token 29: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09850583225488663
    2. ' _' → logprob: -2.598505735397339
    3. '_' → logprob: -4.223505973815918
    4. ' ' → logprob: -5.473505973815918
    5. 'i' → logprob: -7.598505973815918
    6. ' p' → logprob: -11.223505973815918
    7. ' I' → logprob: -11.473505973815918
    8. ' ' → logprob: -11.723505973815918
    9. ' range' → logprob: -11.723505973815918
    10. ' x' → logprob: -12.098505973815918

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4749416708946228
    2. 'in' → logprob: -0.9749416708946228
    3. ' ' → logprob: -7.224941730499268
    4. 'range' → logprob: -10.09994125366211
    5. ' _' → logprob: -10.97494125366211
    6. 'i' → logprob: -11.09994125366211
    7. 'n' → logprob: -11.09994125366211
    8. ' i' → logprob: -11.59994125366211
    9. 'C' → logprob: -12.34994125366211
    10. '```' → logprob: -12.34994125366211

Token 31: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740840494632721
    2. ' range' → logprob: -0.9740840196609497
    3. 'P' → logprob: -13.72408390045166
    4. 'C' → logprob: -14.09908390045166
    5. '(range' → logprob: -14.34908390045166
    6. '	range' → logprob: -14.34908390045166
    7. ' xrange' → logprob: -14.47408390045166
    8. '_range' → logprob: -14.47408390045166
    9. 'Range' → logprob: -14.59908390045166
    10. 'rang' → logprob: -14.72408390045166

Token 32: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.4255620539188385
    2. '(' → logprob: -1.4255620241165161
    3. '(N' → logprob: -2.3005621433258057
    4. ' (' → logprob: -5.175561904907227
    5. ' range' → logprob: -8.675561904907227
    6. '(range' → logprob: -8.800561904907227
    7. ' M' → logprob: -11.675561904907227
    8. '(K' → logprob: -12.175561904907227
    9. '(int' → logprob: -12.425561904907227
    10. '(
' → logprob: -12.425561904907227

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14794065058231354
    2. ')' → logprob: -2.0229406356811523
    3. ' ):' → logprob: -5.897940635681152
    4. ':' → logprob: -6.397940635681152
    5. ' )' → logprob: -7.147940635681152
    6. '):
' → logprob: -10.772940635681152
    7. ':)' → logprob: -11.647940635681152
    8. '():' → logprob: -11.772940635681152
    9. ' :' → logprob: -12.397940635681152
    10. ']:' → logprob: -13.147940635681152

Token 34: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2790992259979248
    2. ' C' → logprob: -1.2790992259979248
    3. 'a' → logprob: -2.154099225997925
    4. ' c' → logprob: -2.404099225997925
    5. 'C' → logprob: -2.404099225997925
    6. 'c' → logprob: -3.279099225997925
    7. ' x' → logprob: -3.529099225997925
    8. '   ' → logprob: -4.404099464416504
    9. 'x' → logprob: -4.404099464416504
    10. ' t' → logprob: -4.404099464416504

Token 35: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.11033816635608673
    2. 'a' → logprob: -2.6103382110595703
    3. 'x' → logprob: -4.23533821105957
    4. 'C' → logprob: -5.11033821105957
    5. 'l' → logprob: -5.73533821105957
    6. 's' → logprob: -6.23533821105957
    7. 'u' → logprob: -6.36033821105957
    8. 'e' → logprob: -7.11033821105957
    9. ' c' → logprob: -7.11033821105957
    10. 'b' → logprob: -7.98533821105957

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04891037568449974
    2. ',e' → logprob: -4.423910140991211
    3. ',i' → logprob: -5.173910140991211
    4. ',v' → logprob: -5.173910140991211
    5. ',p' → logprob: -5.548910140991211
    6. ',a' → logprob: -5.798910140991211
    7. '=' → logprob: -5.923910140991211
    8. ' =' → logprob: -6.048910140991211
    9. ',l' → logprob: -6.173910140991211
    10. ',d' → logprob: -6.423910140991211

Token 37: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0564647912979126
    2. ' e' → logprob: -2.931464672088623
    3. 'd' → logprob: -7.931464672088623
    4. 'p' → logprob: -8.681465148925781
    5. '_' → logprob: -8.931465148925781
    6. 'k' → logprob: -8.931465148925781
    7. 'w' → logprob: -9.056465148925781
    8. 'l' → logprob: -9.431465148925781
    9. 's' → logprob: -9.431465148925781
    10. 't' → logprob: -9.806465148925781

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740796685218811
    2. ' =' → logprob: -0.9740796685218811
    3. '=input' → logprob: -13.724080085754395
    4. ',' → logprob: -14.099080085754395
    5. '=int' → logprob: -15.099080085754395
    6. ')' → logprob: -15.849080085754395
    7. ' ' → logprob: -15.849080085754395
    8. '＝' → logprob: -16.224079132080078
    9. '=line' → logprob: -16.724079132080078
    10. 's' → logprob: -17.224079132080078

Token 39: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12695488333702087
    2. 'map' → logprob: -2.1269547939300537
    3. ' input' → logprob: -11.626955032348633
    4. 'input' → logprob: -11.876955032348633
    5. '	map' → logprob: -12.251955032348633
    6. ' ' → logprob: -12.626955032348633
    7. '   ' → logprob: -13.876955032348633
    8. ' ' → logprob: -14.251955032348633
    9. '  ' → logprob: -15.126955032348633
    10. ' list' → logprob: -15.501955032348633

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.214019307051785e-05
    2. '<int' → logprob: -11.250032424926758
    3. 'int' → logprob: -11.750032424926758
    4. '(' → logprob: -12.000032424926758
    5. '[int' → logprob: -13.000032424926758
    6. '=int' → logprob: -13.875032424926758
    7. ',int' → logprob: -14.250032424926758
    8. '(str' → logprob: -15.125032424926758
    9. '(in' → logprob: -15.125032424926758
    10. '(lambda' → logprob: -15.500032424926758

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03375254198908806
    2. ',input' → logprob: -3.40875244140625
    3. '(input' → logprob: -10.03375244140625
    4. 'input' → logprob: -10.28375244140625
    5. ' ,' → logprob: -11.28375244140625
    6. '(' → logprob: -11.78375244140625
    7. '(),' → logprob: -12.15875244140625
    8. ',int' → logprob: -13.15875244140625
    9. '```' → logprob: -14.90875244140625
    10. ' input' → logprob: -15.03375244140625

Token 42: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3868715465068817
    2. 'input' → logprob: -1.136871576309204
    3. ' ' → logprob: -15.886871337890625
    4. ',input' → logprob: -16.261871337890625
    5. '	input' → logprob: -16.261871337890625
    6. ')' → logprob: -16.636871337890625
    7. '=input' → logprob: -16.761871337890625
    8. '(input' → logprob: -17.011871337890625
    9. 'in' → logprob: -18.511871337890625
    10. ' )' → logprob: -18.761871337890625

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.106736039626412e-05
    2. '()' → logprob: -11.125031471252441
    3. '.' → logprob: -11.875031471252441
    4. ' ().' → logprob: -12.500031471252441
    5. ')' → logprob: -12.750031471252441
    6. '.split' → logprob: -14.125031471252441
    7. '(' → logprob: -14.625031471252441
    8. ').' → logprob: -14.625031471252441
    9. '   ' → logprob: -15.250031471252441
    10. ' .' → logprob: -15.375031471252441

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.988221684878226e-06
    2. 'spl' → logprob: -12.375006675720215
    3. ')' → logprob: -13.750006675720215
    4. 'strip' → logprob: -14.375006675720215
    5. ' split' → logprob: -14.750006675720215
    6. 's' → logprob: -14.875006675720215
    7. 'plit' → logprob: -16.25000762939453
    8. '(split' → logprob: -16.25000762939453
    9. 'sp' → logprob: -17.00000762939453
    10. 'rstrip' → logprob: -17.37500762939453

Token 45: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17402411997318268
    2. ')' → logprob: -1.9240241050720215
    3. '()' → logprob: -4.2990241050720215
    4. '())
' → logprob: -9.42402458190918
    5. '))' → logprob: -11.04902458190918
    6. ')
' → logprob: -12.29902458190918
    7. '`)' → logprob: -12.42402458190918
    8. '()))' → logprob: -12.92402458190918
    9. ')`' → logprob: -12.92402458190918
    10. '()
' → logprob: -13.54902458190918

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8177855610847473
    2. '<|end|>' → logprob: -1.5677855014801025
    3. ')' → logprob: -2.0677855014801025
    4. '\n' → logprob: -2.3177855014801025
    5. '
' → logprob: -3.1927855014801025
    6. '    
' → logprob: -3.8177855014801025
    7. '' → logprob: -4.442785739898682
    8. 'C' → logprob: -4.567785739898682
    9. '\' → logprob: -4.817785739898682
    10. '```' → logprob: -5.317785739898682

Token 47: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.04373098909854889
    2. ' C' → logprob: -4.418731212615967
    3. ' ' → logprob: -4.918731212615967
    4. '   ' → logprob: -5.168731212615967
    5. 'c' → logprob: -5.293731212615967
    6. ')' → logprob: -5.668731212615967
    7. ' 
' → logprob: -5.793731212615967
    8. '    
' → logprob: -5.793731212615967
    9. '<|end|>' → logprob: -6.543731212615967
    10. '    ' → logprob: -7.543731212615967

Token 48: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07997830212116241
    2. '.' → logprob: -2.5799782276153564
    3. '.app' → logprob: -7.2049784660339355
    4. '.ap' → logprob: -8.204977989196777
    5. '.a' → logprob: -11.329977989196777
    6. '.Append' → logprob: -11.704977989196777
    7. 'append' → logprob: -11.704977989196777
    8. '.push' → logprob: -11.829977989196777
    9. '.extend' → logprob: -11.829977989196777
    10. '.c' → logprob: -11.954977989196777

Token 49: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.003180563682690263
    2. '(' → logprob: -5.753180503845215
    3. '((' → logprob: -13.253180503845215
    4. '(C' → logprob: -14.878180503845215
    5. ')c' → logprob: -15.503180503845215
    6. '(i' → logprob: -15.878180503845215
    7. '(
' → logprob: -16.25318145751953
    8. '(e' → logprob: -16.37818145751953
    9. ' (' → logprob: -17.00318145751953
    10. 'c' → logprob: -17.12818145751953

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.362307223957032e-05
    2. ',' → logprob: -10.500073432922363
    3. ' )' → logprob: -11.000073432922363
    4. ')
' → logprob: -11.500073432922363
    5. '),' → logprob: -11.750073432922363
    6. ')e' → logprob: -12.250073432922363
    7. ',)' → logprob: -12.375073432922363
    8. ')c' → logprob: -13.375073432922363
    9. '   ' → logprob: -15.875073432922363
    10. '')' → logprob: -16.50007438659668

Token 51: '   ' (ID: 271)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6022050976753235
    2. '   ' → logprob: -1.3522050380706787
    3. ' E' → logprob: -1.9772050380706787
    4. 'e' → logprob: -4.227205276489258
    5. '<|end|>' → logprob: -4.477205276489258
    6. ' 
' → logprob: -4.727205276489258
    7. '    
' → logprob: -4.852205276489258
    8. '	E' → logprob: -5.977205276489258
    9. ' ' → logprob: -6.352205276489258
    10. '    ' → logprob: -6.602205276489258

Token 52: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.050504282116889954
    2. ' E' → logprob: -3.175504207611084
    3. 'e' → logprob: -4.925504207611084
    4. ' 
' → logprob: -9.300504684448242
    5. ' e' → logprob: -10.050504684448242
    6. '<|end|>' → logprob: -10.550504684448242
    7. ' ' → logprob: -10.925504684448242
    8. ' ' → logprob: -11.425504684448242
    9. '   ' → logprob: -12.675504684448242
    10. ')' → logprob: -12.800504684448242

Token 53: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16032952070236206
    2. '.append' → logprob: -1.9103295803070068
    3. ' .' → logprob: -9.535329818725586
    4. '.app' → logprob: -11.035329818725586
    5. 'append' → logprob: -12.035329818725586
    6. '.Append' → logprob: -12.535329818725586
    7. '.extend' → logprob: -12.660329818725586
    8. '.ap' → logprob: -13.660329818725586
    9. '​.' → logprob: -14.035329818725586
    10. 'appen' → logprob: -14.535329818725586

Token 54: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0015053401002660394
    2. '(' → logprob: -6.501505374908447
    3. 'e' → logprob: -13.001504898071289
    4. '(
' → logprob: -14.501504898071289
    5. ' (' → logprob: -15.751504898071289
    6. '(E' → logprob: -17.25150489807129
    7. '(s' → logprob: -18.00150489807129
    8. ' e' → logprob: -18.50150489807129
    9. '((' → logprob: -18.50150489807129
    10. '(

' → logprob: -18.50150489807129

Token 55: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -12.125005722045898
    3. ' )' → logprob: -15.875005722045898
    4. '))' → logprob: -17.2500057220459
    5. ')

' → logprob: -17.5000057220459
    6. '')' → logprob: -18.7500057220459
    7. '`)' → logprob: -19.0000057220459
    8. ')`' → logprob: -19.0000057220459
    9. '),' → logprob: -19.1250057220459
    10. '）' → logprob: -19.8750057220459

Token 56: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6912951469421387
    2. 'd' → logprob: -1.9412951469421387
    3. 'D' → logprob: -2.4412951469421387
    4. 'max' → logprob: -3.0662951469421387
    5. 'result' → logprob: -3.5662951469421387
    6. 'C' → logprob: -3.9412951469421387
    7. 'answer' → logprob: -4.066295146942139
    8. 'for' → logprob: -4.191295146942139
    9. 'DP' → logprob: -4.191295146942139
    10. '#' → logprob: -4.316295146942139

Token 57: ' tr' (ID: 498)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5168377757072449
    2. 'dp' → logprob: -1.5168378353118896
    3. 'for' → logprob: -3.0168378353118896
    4. ' for' → logprob: -3.2668378353118896
    5. ' #' → logprob: -3.6418378353118896
    6. '#' → logprob: -4.2668375968933105
    7. ' ' → logprob: -4.5168375968933105
    8. ' ans' → logprob: -5.2668375968933105
    9. ' result' → logprob: -5.2668375968933105
    10. 'result' → logprob: -5.6418375968933105

Token 58: 'ier' (ID: 905)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004108084831386805
    2. 'e' → logprob: -6.87910795211792
    3. 'a' → logprob: -7.00410795211792
    4. 'ans' → logprob: -7.00410795211792
    5. 'i' → logprob: -8.379108428955078
    6. 'ee' → logprob: -8.629108428955078
    7. 'u' → logprob: -8.754108428955078
    8. '```' → logprob: -8.879108428955078
    9. 'ue' → logprob: -9.254108428955078
    10. 'ip' → logprob: -9.754108428955078

Token 59: ' les' (ID: 1341)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.8297778367996216
    2. 'indices' → logprob: -1.0797778367996216
    3. 'idx' → logprob: -2.704777717590332
    4. 'P' → logprob: -3.079777717590332
    5. 'sorted' → logprob: -3.329777717590332
    6. 'pairs' → logprob: -4.079777717590332
    7. 'combined' → logprob: -4.704777717590332
    8. ' indices' → logprob: -4.954777717590332
    9. ' pairs' → logprob: -4.954777717590332
    10. 'index' → logprob: -5.079777717590332

Token 60: ' prix' (ID: 18771)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.0566725730895996
    2. ' items' → logprob: -2.0566725730895996
    3. ' produits' → logprob: -3.1816725730895996
    4. ' objets' → logprob: -3.3066725730895996
    5. ' joueurs' → logprob: -3.5566725730895996
    6. 'indices' → logprob: -3.6816725730895996
    7. ' candidats' → logprob: -3.6816725730895996
    8. ' éléments' → logprob: -3.8066725730895996
    9. ' articles' → logprob: -3.8066725730895996
    10. ' clients' → logprob: -3.9316725730895996

Token 61: ' des' (ID: 731)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2104962170124054
    2. 'P' → logprob: -1.710496187210083
    3. 'sorted' → logprob: -5.085496425628662
    4. 'prices' → logprob: -6.960496425628662
    5. 'for' → logprob: -7.335496425628662
    6. 'price' → logprob: -7.710496425628662
    7. 'idx' → logprob: -9.085495948791504
    8. 'indices' → logprob: -9.085495948791504
    9. ',' → logprob: -9.710495948791504
    10. 'zip' → logprob: -9.835495948791504

Token 62: ' man' (ID: 873)
  Prédit: 'articles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'articles' → logprob: -0.9715703129768372
    2. 'C' → logprob: -1.8465702533721924
    3. ' produits' → logprob: -2.0965702533721924
    4. ' articles' → logprob: -2.5965702533721924
    5. 'produ' → logprob: -2.7215702533721924
    6. ' C' → logprob: -3.3465702533721924
    7. 'P' → logprob: -3.9715702533721924
    8. 'c' → logprob: -4.5965704917907715
    9. ' P' → logprob: -4.8465704917907715
    10. 'obj' → logprob: -5.0965704917907715

Token 63: 'ju' (ID: 4734)
  Prédit: 'ières'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.09763844311237335
    2. 'ettes' → logprob: -3.3476383686065674
    3. 'an' → logprob: -3.9726383686065674
    4. 'g' → logprob: -4.4726386070251465
    5. 'us' → logprob: -5.4726386070251465
    6. 'ufact' → logprob: -5.7226386070251465
    7. 'ques' → logprob: -5.8476386070251465
    8. 'a' → logprob: -6.5976386070251465
    9. 'gas' → logprob: -6.5976386070251465
    10. '```' → logprob: -6.8476386070251465

Token 64: 'u' (ID: 84)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42282629013061523
    2. 'u' → logprob: -1.7978262901306152
    3. 'us' → logprob: -2.1728262901306152
    4. '```' → logprob: -3.0478262901306152
    5. 'os' → logprob: -5.297826290130615
    6. 'o' → logprob: -6.922826290130615
    7. 'uts' → logprob: -7.297826290130615
    8. 'urs' → logprob: -7.422826290130615
    9. '[' → logprob: -7.422826290130615
    10. 'eurs' → logprob: -7.485326290130615

Token 65: ' dec' (ID: 1885)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.3774593770503998
    2. ',' → logprob: -2.1274592876434326
    3. ' P' → logprob: -2.6274592876434326
    4. 'C' → logprob: -2.7524592876434326
    5. ' ,' → logprob: -4.377459526062012
    6. 'sorted' → logprob: -4.377459526062012
    7. 'for' → logprob: -4.502459526062012
    8. 's' → logprob: -5.252459526062012
    9. ' for' → logprob: -5.752459526062012
    10. ' ' → logprob: -5.877459526062012

Token 66: 'ro' (ID: 298)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9605587124824524
    2. ',' → logprob: -2.3355586528778076
    3. '```' → logprob: -2.4605586528778076
    4. 'res' → logprob: -2.5855586528778076
    5. 's' → logprob: -2.5855586528778076
    6. 're' → logprob: -2.7105586528778076
    7. 'ro' → logprob: -2.8355586528778076
    8. ')' → logprob: -3.3355586528778076
    9. 'rest' → logprob: -3.5855586528778076
    10. 'd' → logprob: -4.335558891296387

Token 67: 'issants' (ID: 133997)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06026666238903999
    2. 's' → logprob: -3.9352667331695557
    3. 'd' → logprob: -4.435266494750977
    4. 'nt' → logprob: -4.685266494750977
    5. 'nd' → logprob: -4.685266494750977
    6. '```' → logprob: -6.310266494750977
    7. 'm' → logprob: -6.685266494750977
    8. '#' → logprob: -7.060266494750977
    9. 'p' → logprob: -7.310266494750977
    10. 'r' → logprob: -7.935266494750977

Token 68: '
' (ID: 198)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.013225755654275417
    2. 'C' → logprob: -4.388225555419922
    3. 'sorted' → logprob: -8.513225555419922
    4. 'for' → logprob: -8.888225555419922
    5. ',' → logprob: -9.138225555419922
    6. 'E' → logprob: -9.513225555419922
    7. ')' → logprob: -10.013225555419922
    8. 's' → logprob: -10.388225555419922
    9. 'prices' → logprob: -10.888225555419922
    10. 'p' → logprob: -11.138225555419922

Token 69: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0036943741142749786
    2. 'C' → logprob: -5.878694534301758
    3. 'for' → logprob: -7.753694534301758
    4. ',' → logprob: -9.253694534301758
    5. 'sorted' → logprob: -9.628694534301758
    6. 'price' → logprob: -10.253694534301758
    7. 'indices' → logprob: -10.253694534301758
    8. ' P' → logprob: -10.253694534301758
    9. 'prices' → logprob: -10.253694534301758
    10. 'idx' → logprob: -10.378694534301758

Token 70: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.06998801231384277
    2. '.' → logprob: -2.6949880123138428
    3. '=' → logprob: -10.819988250732422
    4. 'sort' → logprob: -11.069988250732422
    5. '.sorted' → logprob: -12.819988250732422
    6. '_sorted' → logprob: -12.944988250732422
    7. ' =' → logprob: -13.069988250732422
    8. '.=' → logprob: -13.444988250732422
    9. '.s' → logprob: -13.444988250732422
    10. ').' → logprob: -13.569988250732422

Token 71: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0022733660880476236
    2. '(' → logprob: -6.1272735595703125
    3. 'reverse' → logprob: -9.377273559570312
    4. '()' → logprob: -13.627273559570312
    5. '(re' → logprob: -13.752273559570312
    6. '.reverse' → logprob: -14.627273559570312
    7. '_reverse' → logprob: -15.377273559570312
    8. ' reverse' → logprob: -16.377273559570312
    9. '(r' → logprob: -16.377273559570312
    10. '(red' → logprob: -16.502273559570312

Token 72: '=True' (ID: 7827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.303901731967926
    2. '=True' → logprob: -1.4289016723632812
    3. '())' → logprob: -4.178901672363281
    4. '()' → logprob: -5.178901672363281
    5. '(True' → logprob: -6.803901672363281
    6. '(' → logprob: -8.553901672363281
    7. '=' → logprob: -8.803901672363281
    8. '=False' → logprob: -10.428901672363281
    9. '))' → logprob: -11.428901672363281
    10. ')=' → logprob: -11.928901672363281

Token 73: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -14.62500286102295
    4. '))' → logprob: -16.625001907348633
    5. ')

' → logprob: -16.625001907348633
    6. '),' → logprob: -17.375001907348633
    7. '#' → logprob: -17.750001907348633
    8. ')#' → logprob: -17.875001907348633
    9. '```' → logprob: -18.250001907348633
    10. '<|end|>' → logprob: -18.375001907348633

Token 74: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13826552033424377
    2. '
' → logprob: -2.638265609741211
    3. ' for' → logprob: -3.513265609741211
    4. '#' → logprob: -4.138265609741211
    5. '```' → logprob: -5.888265609741211
    6. 'E' → logprob: -6.263265609741211
    7. 'C' → logprob: -6.763265609741211
    8. '\n' → logprob: -7.263265609741211
    9. '' → logprob: -7.513265609741211
    10. 'd' → logprob: -7.513265609741211

Token 75: '_profit' (ID: 186239)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15514759719371796
    2. '_profit' → logprob: -2.6551475524902344
    3. '_val' → logprob: -3.4051475524902344
    4. '_price' → logprob: -4.405147552490234
    5. '_value' → logprob: -4.405147552490234
    6. '_re' → logprob: -5.780147552490234
    7. '_sum' → logprob: -6.030147552490234
    8. '_score' → logprob: -6.280147552490234
    9. '_gain' → logprob: -6.280147552490234
    10. '_r' → logprob: -7.030147552490234

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4188958704471588
    2. '=' → logprob: -1.7938958406448364
    3. '_' → logprob: -1.7938958406448364
    4. 's' → logprob: -5.043895721435547
    5. '(' → logprob: -5.918895721435547
    6. ' ' → logprob: -8.918895721435547
    7. '_=' → logprob: -9.168895721435547
    8. 'es' → logprob: -10.168895721435547
    9. '_space' → logprob: -10.418895721435547
    10. ')' → logprob: -10.418895721435547

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12784641981124878
    2. ' ' → logprob: -2.1278464794158936
    3. '-' → logprob: -8.002846717834473
    4. ' -' → logprob: -8.002846717834473
    5. 'float' → logprob: -9.127846717834473
    6. ' float' → logprob: -9.252846717834473
    7. ' ' → logprob: -11.440346717834473
    8. '[]' → logprob: -11.565346717834473
    9. 'None' → logprob: -12.815346717834473
    10. '[' → logprob: -12.815346717834473

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016457878518849611
    2. '-' → logprob: -6.751645565032959
    3. 'float' → logprob: -7.876645565032959
    4. '-s' → logprob: -10.876646041870117
    5. '-M' → logprob: -11.001646041870117
    6. ' ' → logprob: -11.376646041870117
    7. '[' → logprob: -11.751646041870117
    8. '-p' → logprob: -12.251646041870117
    9. '-P' → logprob: -12.501646041870117
    10. '-f' → logprob: -12.626646041870117

Token 79: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006375463679432869
    2. ' for' → logprob: -5.131375312805176
    3. '
' → logprob: -7.881375312805176
    4. 'i' → logprob: -11.631375312805176
    5. ':' → logprob: -11.756375312805176
    6. '' → logprob: -12.006375312805176
    7. 'd' → logprob: -12.131375312805176
    8. ',' → logprob: -12.256375312805176
    9. '```' → logprob: -12.506375312805176
    10. '<|end|>' → logprob: -12.631375312805176

Token 80: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004876858089119196
    2. ' for' → logprob: -5.504877090454102
    3. ')' → logprob: -8.754877090454102
    4. 'f' → logprob: -8.754877090454102
    5. 'i' → logprob: -9.129877090454102
    6. '#' → logprob: -9.754877090454102
    7. 'from' → logprob: -9.754877090454102
    8. 'F' → logprob: -10.254877090454102
    9. 'dp' → logprob: -10.504877090454102
    10. ',' → logprob: -10.629877090454102

Token 81: ' essayer' (ID: 92713)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.286558598279953
    2. 'for' → logprob: -1.4115586280822754
    3. ' ' → logprob: -5.661558628082275
    4. ' f' → logprob: -7.286558628082275
    5. ' range' → logprob: -7.911558628082275
    6. 'f' → logprob: -8.786558151245117
    7. 'range' → logprob: -8.786558151245117
    8. 'from' → logprob: -9.286558151245117
    9. ' from' → logprob: -9.536558151245117
    10. ' i' → logprob: -9.786558151245117

Token 82: ' toutes' (ID: 17502)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6769764423370361
    2. ' for' → logprob: -1.4269764423370361
    3. ' de' → logprob: -3.051976442337036
    4. ' d' → logprob: -3.551976442337036
    5. 'd' → logprob: -3.801976442337036
    6. ':' → logprob: -3.801976442337036
    7. ' toutes' → logprob: -4.051976203918457
    8. '_' → logprob: -4.176976203918457
    9. ' i' → logprob: -4.301976203918457
    10. 's' → logprob: -4.301976203918457

Token 83: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3674136698246002
    2. 'les' → logprob: -1.4924136400222778
    3. ' combinations' → logprob: -3.9924137592315674
    4. 'possible' → logprob: -3.9924137592315674
    5. 'com' → logprob: -4.617413520812988
    6. ' possible' → logprob: -4.742413520812988
    7. '()' → logprob: -4.992413520812988
    8. 'poss' → logprob: -5.867413520812988
    9. '_possible' → logprob: -5.867413520812988
    10. 'comb' → logprob: -5.992413520812988

Token 84: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3164142072200775
    2. 'comb' → logprob: -2.1914141178131104
    3. 'poss' → logprob: -2.5664141178131104
    4. 'man' → logprob: -3.3164141178131104
    5. 'per' → logprob: -4.5664143562316895
    6. 'aff' → logprob: -4.8164143562316895
    7. ' comb' → logprob: -5.0664143562316895
    8. 'possible' → logprob: -5.5664143562316895
    9. 'assign' → logprob: -6.3164143562316895
    10. 'sub' → logprob: -6.4414143562316895

Token 85: 'inais' (ID: 42744)
  Prédit: 'ina'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ina' → logprob: -0.6012678742408752
    2. 'inais' → logprob: -1.6012678146362305
    3. 'i' → logprob: -2.2262678146362305
    4. 'in' → logprob: -2.8512678146362305
    5. '```' → logprob: -3.1012678146362305
    6. 'inations' → logprob: -4.2262678146362305
    7. 'ination' → logprob: -4.7262678146362305
    8. 'inas' → logprob: -5.4762678146362305
    9. ' in' → logprob: -5.9762678146362305
    10. 'o' → logprob: -6.8512678146362305

Token 86: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0037744315341115
    2. 's' → logprob: -5.753774642944336
    3. 'sons' → logprob: -7.878774642944336
    4. 'on' → logprob: -8.753774642944336
    5. 'son' → logprob: -10.378774642944336
    6. ' ons' → logprob: -11.753774642944336
    7. 'o' → logprob: -11.878774642944336
    8. '```' → logprob: -12.253774642944336
    9. 'os' → logprob: -12.878774642944336
    10. '0' → logprob: -13.753774642944336

Token 87: ' possibles' (ID: 97753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7404206991195679
    2. ' for' → logprob: -0.9904206991195679
    3. 'from' → logprob: -2.1154208183288574
    4. ' from' → logprob: -4.115420818328857
    5. 'import' → logprob: -4.740420818328857
    6. 'possible' → logprob: -6.990420818328857
    7. ' possible' → logprob: -7.115420818328857
    8. '_' → logprob: -7.365420818328857
    9. ' of' → logprob: -7.365420818328857
    10. '<|end|>' → logprob: -7.865420818328857

Token 88: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.652397096157074
    2. 'for' → logprob: -0.777397096157074
    3. 'from' → logprob: -4.777397155761719
    4. '
' → logprob: -5.527397155761719
    5. '<|end|>' → logprob: -5.652397155761719
    6. ' from' → logprob: -6.527397155761719
    7. 'import' → logprob: -6.902397155761719
    8. ':' → logprob: -8.152397155761719
    9. ',' → logprob: -8.652397155761719
    10. ' ' → logprob: -8.777397155761719

Token 89: ' bo' (ID: 1581)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.8527010083198547
    2. ' range' → logprob: -1.72770094871521
    3. ' i' → logprob: -2.22770094871521
    4. ' E' → logprob: -2.72770094871521
    5. 'C' → logprob: -2.85270094871521
    6. 'range' → logprob: -3.47770094871521
    7. ' c' → logprob: -3.72770094871521
    8. 'i' → logprob: -4.102701187133789
    9. 'c' → logprob: -4.602701187133789
    10. ' ' → logprob: -4.852701187133789

Token 90: 'îtes' (ID: 158681)
  Prédit: 'îtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îtes' → logprob: -0.372226357460022
    2. 'ites' → logprob: -1.747226357460022
    3. 'ite' → logprob: -3.2472262382507324
    4. 'îte' → logprob: -3.9972262382507324
    5. 'x' → logprob: -4.247226238250732
    6. 'î' → logprob: -4.622226238250732
    7. 'ux' → logprob: -4.747226238250732
    8. 'n' → logprob: -4.872226238250732
    9. 'ut' → logprob: -4.997226238250732
    10. 'u' → logprob: -5.247226238250732

Token 91: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19730716943740845
    2. 'for' → logprob: -1.9473071098327637
    3. ',' → logprob: -4.072307109832764
    4. ' ' → logprob: -5.572307109832764
    5. ' ,' → logprob: -6.072307109832764
    6. 'import' → logprob: -6.322307109832764
    7. 'from' → logprob: -6.447307109832764
    8. ' from' → logprob: -6.447307109832764
    9. ' i' → logprob: -6.572307109832764
    10. '<|end|>' → logprob: -6.947307109832764

Token 92: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013014217838644981
    2. 'from' → logprob: -4.638014316558838
    3. ' for' → logprob: -5.763014316558838
    4. 'import' → logprob: -9.76301383972168
    5. ' from' → logprob: -10.76301383972168
    6. 'range' → logprob: -11.26301383972168
    7. 'f' → logprob: -11.88801383972168
    8. '```' → logprob: -12.88801383972168
    9. 'i' → logprob: -13.26301383972168
    10. '
' → logprob: -13.26301383972168

Token 93: ' comme' (ID: 7971)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08302175998687744
    2. 'from' → logprob: -2.833021640777588
    3. ' for' → logprob: -3.958021640777588
    4. ' from' → logprob: -7.083021640777588
    5. 'import' → logprob: -7.083021640777588
    6. 'def' → logprob: -10.333022117614746
    7. 'indices' → logprob: -11.958022117614746
    8. 'comb' → logprob: -13.208022117614746
    9. ' import' → logprob: -13.458022117614746
    10. '#' → logprob: -13.458022117614746

Token 94: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.3285778760910034
    2. ' il' → logprob: -1.3285778760910034
    3. ' les' → logprob: -1.7035778760910034
    4. ' for' → logprob: -2.828577995300293
    5. ' P' → logprob: -2.953577995300293
    6. ' M' → logprob: -3.078577995300293
    7. ' range' → logprob: -3.703577995300293
    8. ' le' → logprob: -3.953577995300293
    9. ' la' → logprob: -4.078577995300293
    10. 'for' → logprob: -4.328577995300293

Token 95: ' peut' (ID: 9216)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.2483313083648682
    2. ' <=' → logprob: -1.3733313083648682
    3. '**' → logprob: -1.6233313083648682
    4. ' is' → logprob: -2.123331308364868
    5. ' **' → logprob: -3.248331308364868
    6. '=' → logprob: -3.748331308364868
    7. ' ' → logprob: -4.373331069946289
    8. ' ==' → logprob: -4.498331069946289
    9. '!' → logprob: -4.623331069946289
    10. ' =' → logprob: -4.748331069946289

Token 96: ' aller' (ID: 18383)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.11962694674730301
    2. ' être' → logprob: -2.619626998901367
    3. 'etre' → logprob: -4.119626998901367
    4. ' up' → logprob: -5.869626998901367
    5. ''être' → logprob: -5.994626998901367
    6. 'up' → logprob: -6.119626998901367
    7. 'êtres' → logprob: -6.119626998901367
    8. ' ' → logprob: -6.494626998901367
    9. ' etre' → logprob: -6.619626998901367
    10. 'pas' → logprob: -6.744626998901367

Token 97: ' jusqu' (ID: 21961)
  Prédit: 'jus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jus' → logprob: -0.0021171891130506992
    2. ' jusqu' → logprob: -6.252117156982422
    3. ' jusque' → logprob: -8.627117156982422
    4. 'à' → logprob: -12.627117156982422
    5. 'up' → logprob: -13.252117156982422
    6. 'au' → logprob: -13.877117156982422
    7. 'j' → logprob: -14.502117156982422
    8. ' jus' → logprob: -14.752117156982422
    9. ' ' → logprob: -15.002117156982422
    10. 'ju' → logprob: -15.252117156982422

Token 98: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.0632648840546608
    2. 'à' → logprob: -2.813264846801758
    3. '’à' → logprob: -7.188264846801758
    4. 'a' → logprob: -8.188264846801758
    5. ' à' → logprob: -9.313264846801758
    6. ''au' → logprob: -10.688264846801758
    7. '```' → logprob: -10.688264846801758
    8. ''a' → logprob: -10.813264846801758
    9. '100' → logprob: -10.813264846801758
    10. '500' → logprob: -11.188264846801758

Token 99: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.8764561414718628
    2. '10' → logprob: -1.2514561414718628
    3. 'M' → logprob: -2.1264562606811523
    4. '15' → logprob: -2.7514562606811523
    5. '12' → logprob: -3.2514562606811523
    6. '50' → logprob: -4.126456260681152
    7. '100' → logprob: -4.251456260681152
    8. '30' → logprob: -4.751456260681152
    9. '16' → logprob: -5.126456260681152
    10. '5' → logprob: -5.251456260681152

Token 100: '500' (ID: 3234)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0331941843032837
    2. '20' → logprob: -1.2831941843032837
    3. 'M' → logprob: -1.6581941843032837
    4. '15' → logprob: -2.658194065093994
    5. '12' → logprob: -2.908194065093994
    6. '50' → logprob: -4.283194065093994
    7. '100' → logprob: -4.283194065093994
    8. '16' → logprob: -5.408194065093994
    9. '8' → logprob: -5.658194065093994
    10. '30' → logprob: -6.033194065093994

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025827476754784584
    2. ' ,' → logprob: -3.900827407836914
    3. ',
' → logprob: -6.525827407836914
    4. ' ' → logprob: -6.650827407836914
    5. '<|end|>' → logprob: -7.025827407836914
    6. '
' → logprob: -7.150827407836914
    7. ':' → logprob: -7.900827407836914
    8. '0' → logprob: -8.650827407836914
    9. ' for' → logprob: -9.275827407836914
    10. '<|end|>' → logprob: -10.525827407836914

Token 102: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6031795740127563
    2. ' on' → logprob: -1.9781795740127563
    3. 'for' → logprob: -1.9781795740127563
    4. ' from' → logprob: -3.103179454803467
    5. ' il' → logprob: -3.353179454803467
    6. ' ' → logprob: -3.603179454803467
    7. 'from' → logprob: -4.103179454803467
    8. '1' → logprob: -4.478179454803467
    9. ' le' → logprob: -4.853179454803467
    10. ' je' → logprob: -5.103179454803467

Token 103: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -1.3375097513198853
    2. ' peut' → logprob: -1.3375097513198853
    3. ' peux' → logprob: -2.4625096321105957
    4. ' doit' → logprob: -2.7125096321105957
    5. ' devra' → logprob: -2.9625096321105957
    6. 'a' → logprob: -3.0875096321105957
    7. 'ne' → logprob: -3.2125096321105957
    8. ' pourra' → logprob: -3.5875096321105957
    9. 'do' → logprob: -3.7125096321105957
    10. ' n' → logprob: -4.087509632110596

Token 104: ' va' (ID: 3423)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.8903293013572693
    2. ' peux' → logprob: -1.140329360961914
    3. 'pe' → logprob: -1.515329360961914
    4. ' pourra' → logprob: -3.890329360961914
    5. 'p' → logprob: -4.890329360961914
    6. 'f' → logprob: -5.265329360961914
    7. 's' → logprob: -5.640329360961914
    8. 'vais' → logprob: -6.390329360961914
    9. 'pour' → logprob: -6.765329360961914
    10. 'pas' → logprob: -6.890329360961914

Token 105: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.016140058636665344
    2. ' ' → logprob: -4.766139984130859
    3. 'pas' → logprob: -5.141139984130859
    4. ' pouvoir' → logprob: -7.641139984130859
    5. 't' → logprob: -8.01613998413086
    6. 'p' → logprob: -8.14113998413086
    7. ' probablement' → logprob: -8.64113998413086
    8. ' ' → logprob: -9.51613998413086
    9. ' probably' → logprob: -9.76613998413086
    10. ' jamais' → logprob: -10.26613998413086

Token 106: ' faire' (ID: 8119)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.2782425284385681
    2. 'faire' → logprob: -2.278242588043213
    3. 'p' → logprob: -2.778242588043213
    4. ' utiliser' → logprob: -4.278242588043213
    5. 'expl' → logprob: -4.278242588043213
    6. 'for' → logprob: -5.278242588043213
    7. 'chercher' → logprob: -5.403242588043213
    8. ' essayer' → logprob: -5.778242588043213
    9. ' pouvoir' → logprob: -5.778242588043213
    10. 'ess' → logprob: -6.028242588043213

Token 107: ' de' (ID: 334)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.9889547824859619
    2. ' une' → logprob: -1.363954782485962
    3. 'de' → logprob: -2.113954782485962
    4. ' de' → logprob: -2.238954782485962
    5. 'un' → logprob: -3.488954782485962
    6. ' ' → logprob: -3.988954782485962
    7. ' du' → logprob: -4.363954544067383
    8. ' toutes' → logprob: -4.613954544067383
    9. 'tout' → logprob: -4.738954544067383
    10. '100' → logprob: -4.738954544067383

Token 108: ' vrai' (ID: 42682)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.2406185865402222
    2. '100' → logprob: -1.8656185865402222
    3. 'for' → logprob: -2.1156187057495117
    4. ' for' → logprob: -2.7406187057495117
    5. 'range' → logprob: -2.9906187057495117
    6. 'tout' → logprob: -3.3656187057495117
    7. 'l' → logprob: -3.6156187057495117
    8. 'it' → logprob: -3.6156187057495117
    9. ' brute' → logprob: -3.7406187057495117
    10. ' itertools' → logprob: -3.7406187057495117

Token 109: ' combin' (ID: 25307)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.632238507270813
    2. 'back' → logprob: -2.3822383880615234
    3. ' back' → logprob: -2.7572383880615234
    4. ' for' → logprob: -2.8822383880615234
    5. ' brute' → logprob: -3.0072383880615234
    6. 'br' → logprob: -3.3822383880615234
    7. 'import' → logprob: -3.5072383880615234
    8. ' code' → logprob: -3.6322383880615234
    9. '```' → logprob: -3.6322383880615234
    10. 'enumer' → logprob: -4.382238388061523

Token 110: 'atoire' (ID: 41651)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.7939856648445129
    2. 'atoire' → logprob: -0.7939856648445129
    3. 'atoires' → logprob: -3.293985605239868
    4. 'aison' → logprob: -3.668985605239868
    5. 'a' → logprob: -4.293985843658447
    6. 'ai' → logprob: -4.918985843658447
    7. 'ations' → logprob: -5.668985843658447
    8. '```' → logprob: -6.418985843658447
    9. 'e' → logprob: -6.793985843658447
    10. '#' → logprob: -7.043985843658447

Token 111: ' complète' (ID: 75660)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10487604886293411
    2. ' for' → logprob: -2.4798760414123535
    3. '
' → logprob: -4.8548760414123535
    4. 'i' → logprob: -6.2298760414123535
    5. '#' → logprob: -6.6048760414123535
    6. ',' → logprob: -6.7298760414123535
    7. ':' → logprob: -7.2298760414123535
    8. 'range' → logprob: -7.6048760414123535
    9. 'from' → logprob: -7.8548760414123535
    10. 'dp' → logprob: -8.479876518249512

Token 112: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8333604335784912
    2. 'for' → logprob: -1.0833604335784912
    3. ' for' → logprob: -1.8333604335784912
    4. ',' → logprob: -4.08336067199707
    5. ' 
' → logprob: -4.20836067199707
    6. ' ' → logprob: -4.58336067199707
    7. 'i' → logprob: -4.95836067199707
    8. 'import' → logprob: -5.70836067199707
    9. ' i' → logprob: -5.83336067199707
    10. '#' → logprob: -5.83336067199707

Token 113: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1737678498029709
    2. ' )' → logprob: -2.0487678050994873
    3. ' ' → logprob: -4.673768043518066
    4. '
' → logprob: -5.298768043518066
    5. 'for' → logprob: -5.298768043518066
    6. ' for' → logprob: -5.423768043518066
    7. ',' → logprob: -5.923768043518066
    8. '#' → logprob: -6.673768043518066
    9. ')
' → logprob: -8.048768043518066
    10. ' but' → logprob: -8.298768043518066

Token 114: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.015014654956758022
    2. '^' → logprob: -4.7650146484375
    3. ' **' → logprob: -5.2650146484375
    4. '0' → logprob: -7.3900146484375
    5. '*' → logprob: -8.1400146484375
    6. '5' → logprob: -9.2650146484375
    7. '*N' → logprob: -9.3900146484375
    8. '**
' → logprob: -10.0150146484375
    9. '00' → logprob: -10.5150146484375
    10. ' ' → logprob: -11.5150146484375

Token 115: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.837811088189483e-05
    2. '500' → logprob: -10.125068664550781
    3. 'M' → logprob: -10.875068664550781
    4. '(N' → logprob: -12.500068664550781
    5. ' N' → logprob: -12.750068664550781
    6. '```' → logprob: -13.875068664550781
    7. '
' → logprob: -14.875068664550781
    8. '	N' → logprob: -15.000068664550781
    9. '50' → logprob: -15.500068664550781
    10. 'Ｎ' → logprob: -16.00006866455078

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004534200299531221
    2. ' )' → logprob: -5.6295342445373535
    3. '**' → logprob: -7.7545342445373535
    4. '),' → logprob: -9.004533767700195
    5. ')
' → logprob: -10.129533767700195
    6. ',' → logprob: -10.129533767700195
    7. '`)' → logprob: -10.254533767700195
    8. '+' → logprob: -10.379533767700195
    9. ' ' → logprob: -10.629533767700195
    10. ')**' → logprob: -10.629533767700195

Token 117: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05030796304345131
    2. 'from' → logprob: -4.300307750701904
    3. 'dp' → logprob: -4.550307750701904
    4. '#' → logprob: -4.675307750701904
    5. ' for' → logprob: -5.050307750701904
    6. 'f' → logprob: -6.425307750701904
    7. 'i' → logprob: -6.550307750701904
    8. ')' → logprob: -6.800307750701904
    9. 'import' → logprob: -6.925307750701904
    10. ',' → logprob: -7.050307750701904

Token 118: ' juste' (ID: 31553)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07178203761577606
    2. 'dp' → logprob: -3.571782112121582
    3. 'from' → logprob: -3.696782112121582
    4. '#' → logprob: -4.571782112121582
    5. ' for' → logprob: -5.446782112121582
    6. 'import' → logprob: -6.946782112121582
    7. '
' → logprob: -8.446782112121582
    8. 'profit' → logprob: -8.446782112121582
    9. 'total' → logprob: -10.196782112121582
    10. ' from' → logprob: -10.321782112121582

Token 119: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2781859338283539
    2. ' for' → logprob: -1.9031859636306763
    3. 'une' → logprob: -3.4031858444213867
    4. ' une' → logprob: -3.5281858444213867
    5. 'pour' → logprob: -4.653185844421387
    6. ' un' → logprob: -5.903185844421387
    7. ' essayer' → logprob: -6.028185844421387
    8. 'un' → logprob: -6.528185844421387
    9. ' pour' → logprob: -6.653185844421387
    10. '#' → logprob: -6.653185844421387

Token 120: ' approche' (ID: 102373)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.084069848060608
    2. ' boucle' → logprob: -1.084069848060608
    3. 'bou' → logprob: -2.3340697288513184
    4. 'simple' → logprob: -3.3340697288513184
    5. ' approche' → logprob: -3.5840697288513184
    6. ' simple' → logprob: -3.7090697288513184
    7. ' combinaison' → logprob: -3.7090697288513184
    8. ' for' → logprob: -3.8340697288513184
    9. 'range' → logprob: -4.084069728851318
    10. 'from' → logprob: -4.584069728851318

Token 121: ' simple' (ID: 4705)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.0987303256988525
    2. 'br' → logprob: -2.4737303256988525
    3. ' basée' → logprob: -2.4737303256988525
    4. 'gre' → logprob: -2.4737303256988525
    5. '#' → logprob: -2.7237303256988525
    6. ' de' → logprob: -2.7237303256988525
    7. 'de' → logprob: -2.8487303256988525
    8. 'd' → logprob: -2.9737303256988525
    9. ' par' → logprob: -3.2237303256988525
    10. ' d' → logprob: -3.2237303256988525

Token 122: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06988851726055145
    2. ' for' → logprob: -3.1948885917663574
    3. '
' → logprob: -3.6948885917663574
    4. '#' → logprob: -7.944888591766357
    5. ':' → logprob: -8.0698881149292
    6. '<|end|>' → logprob: -8.0698881149292
    7. ',' → logprob: -8.8198881149292
    8. '```' → logprob: -9.0698881149292
    9. 'i' → logprob: -9.5698881149292
    10. 'import' → logprob: -9.8198881149292

Token 123: ' essayer' (ID: 92713)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03972705826163292
    2. ' for' → logprob: -3.289726972579956
    3. 'profit' → logprob: -7.664727210998535
    4. 'continue' → logprob: -8.039727210998535
    5. 'from' → logprob: -8.414727210998535
    6. 'dp' → logprob: -8.539727210998535
    7. 'total' → logprob: -9.414727210998535
    8. 'import' → logprob: -9.539727210998535
    9. ' continue' → logprob: -10.414727210998535
    10. 'sum' → logprob: -10.414727210998535

Token 124: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2775520980358124
    2. 'd' → logprob: -2.2775521278381348
    3. 'i' → logprob: -2.6525521278381348
    4. 'all' → logprob: -4.152552127838135
    5. '_' → logprob: -4.902552127838135
    6. 'une' → logprob: -5.152552127838135
    7. 'de' → logprob: -5.277552127838135
    8. 'tout' → logprob: -5.277552127838135
    9. 's' → logprob: -5.527552127838135
    10. 'range' → logprob: -5.777552127838135

Token 125: ' boîte' (ID: 104481)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.008730173110962
    2. ' i' → logprob: -1.258730173110962
    3. 'bo' → logprob: -2.383730173110962
    4. ' boîte' → logprob: -3.133730173110962
    5. ' bo' → logprob: -3.383730173110962
    6. 'man' → logprob: -3.633730173110962
    7. 'c' → logprob: -3.883730173110962
    8. 'élé' → logprob: -4.258729934692383
    9. ' boite' → logprob: -4.758729934692383
    10. ' subset' → logprob: -4.883729934692383

Token 126: ' individ' (ID: 3928)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10970158874988556
    2. ' for' → logprob: -2.484701633453369
    3. 's' → logprob: -5.109701633453369
    4. 'i' → logprob: -5.109701633453369
    5. ',' → logprob: -6.109701633453369
    6. ' i' → logprob: -6.234701633453369
    7. ' ' → logprob: -6.234701633453369
    8. ':' → logprob: -6.859701633453369
    9. '<|end|>' → logprob: -7.859701633453369
    10. '.' → logprob: -8.234701156616211

Token 127: 'uellement' (ID: 36026)
  Prédit: 'uellement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uellement' → logprob: -0.06388439983129501
    2. 'uelle' → logprob: -3.0638844966888428
    3. 'el' → logprob: -4.563884258270264
    4. 'uel' → logprob: -6.313884258270264
    5. 'u' → logprob: -6.938884258270264
    6. 'elle' → logprob: -7.188884258270264
    7. 'ue' → logprob: -7.688884258270264
    8. 'uell' → logprob: -8.688884735107422
    9. 'element' → logprob: -8.938884735107422
    10. '```' → logprob: -9.563884735107422

Token 128: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06407405436038971
    2. '
' → logprob: -2.8140740394592285
    3. ' for' → logprob: -6.1890740394592285
    4. ',' → logprob: -11.064074516296387
    5. '```' → logprob: -11.939074516296387
    6. 'i' → logprob: -12.439074516296387
    7. '\n' → logprob: -12.564074516296387
    8. ',
' → logprob: -12.689074516296387
    9. '
' → logprob: -12.814074516296387
    10. ' 
' → logprob: -12.939074516296387

Token 129: ' prendre' (ID: 24257)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.5266926288604736
    2. 'prendre' → logprob: -2.2766926288604736
    3. 'com' → logprob: -2.6516926288604736
    4. 'aj' → logprob: -2.6516926288604736
    5. 'contin' → logprob: -3.5266926288604736
    6. 'calcul' → logprob: -3.7766926288604736
    7. 'voir' → logprob: -4.2766923904418945
    8. 'cho' → logprob: -4.5266923904418945
    9. 'addition' → logprob: -4.5266923904418945
    10. 'comb' → logprob: -4.6516923904418945

Token 130: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04200603812932968
    2. ' max' → logprob: -3.542006015777588
    3. 'le' → logprob: -4.917006015777588
    4. '[max' → logprob: -7.292006015777588
    5. '(max' → logprob: -7.542006015777588
    6. '_' → logprob: -7.667006015777588
    7. 'the' → logprob: -7.792006015777588
    8. 'l' → logprob: -8.042006492614746
    9. 'la' → logprob: -8.042006492614746
    10. ' la' → logprob: -8.292006492614746

Token 131: ' meilleure' (ID: 52387)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01512901484966278
    2. ' max' → logprob: -4.265129089355469
    3. 'best' → logprob: -7.390129089355469
    4. 'maximum' → logprob: -8.640129089355469
    5. 'me' → logprob: -10.390129089355469
    6. 'for' → logprob: -10.765129089355469
    7. 'better' → logprob: -11.140129089355469
    8. '(max' → logprob: -11.390129089355469
    9. ' maximum' → logprob: -11.515129089355469
    10. 'b' → logprob: -11.640129089355469

Token 132: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.700602114200592
    2. 'for' → logprob: -0.700602114200592
    3. ' for' → logprob: -4.950602054595947
    4. '```' → logprob: -9.200602531433105
    5. '
' → logprob: -9.700602531433105
    6. '\n' → logprob: -9.825602531433105
    7. ' 
' → logprob: -9.950602531433105
    8. '

' → logprob: -10.825602531433105
    9. '' → logprob: -11.075602531433105
    10. '.
' → logprob: -11.450602531433105

Token 133: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.896309739408025e-07
    2. ' for' → logprob: -14.750000953674316
    3. '
' → logprob: -15.625000953674316
    4. 'f' → logprob: -16.0
    5. 'fo' → logprob: -16.375
    6. 'i' → logprob: -18.0
    7. '```' → logprob: -18.5
    8. 'fora' → logprob: -20.75
    9. 'n' → logprob: -21.0
    10. '0' → logprob: -21.25

Token 134: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01617032289505005
    2. 'i' → logprob: -4.141170501708984
    3. ' c' → logprob: -9.641170501708984
    4. ' ' → logprob: -10.766170501708984
    5. ' _' → logprob: -10.891170501708984
    6. '_i' → logprob: -12.141170501708984
    7. 'c' → logprob: -12.391170501708984
    8. '	i' → logprob: -12.516170501708984
    9. '_' → logprob: -12.703670501708984
    10. ' box' → logprob: -13.141170501708984

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3166407644748688
    2. 'in' → logprob: -1.3166407346725464
    3. ' ' → logprob: -6.441640853881836
    4. ',' → logprob: -7.066640853881836
    5. 'n' → logprob: -7.316640853881836
    6. ' i' → logprob: -9.566640853881836
    7. 'i' → logprob: -9.691640853881836
    8. '_' → logprob: -10.691640853881836
    9. ' ,' → logprob: -10.691640853881836
    10. ' ' → logprob: -11.441640853881836

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31329184770584106
    2. ' range' → logprob: -1.3132917881011963
    3. 'C' → logprob: -11.313291549682617
    4. ' C' → logprob: -12.188291549682617
    5. '(range' → logprob: -12.938291549682617
    6. 'ange' → logprob: -13.063291549682617
    7. 'rang' → logprob: -13.063291549682617
    8. ' ' → logprob: -13.313291549682617
    9. '	range' → logprob: -13.563291549682617
    10. 'r' → logprob: -14.313291549682617

Token 137: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0025357098784297705
    2. '(' → logprob: -6.002535820007324
    3. ' (' → logprob: -10.002535820007324
    4. '(len' → logprob: -11.877535820007324
    5. '(M' → logprob: -13.002535820007324
    6. '(n' → logprob: -13.252535820007324
    7. '(
' → logprob: -13.627535820007324
    8. ' N' → logprob: -13.627535820007324
    9. 'N' → logprob: -14.002535820007324
    10. ')' → logprob: -16.377534866333008

Token 138: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0047433990985155106
    2. '):
' → logprob: -5.379743576049805
    3. '+' → logprob: -9.254743576049805
    4. ' ):' → logprob: -11.379743576049805
    5. ')' → logprob: -11.629743576049805
    6. ':' → logprob: -12.379743576049805
    7. '):
' → logprob: -13.129743576049805
    8. '   ' → logprob: -15.379743576049805
    9. ' +' → logprob: -15.754743576049805
    10. ' ' → logprob: -16.254743576049805

Token 139: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5911734700202942
    2. '   ' → logprob: -0.8411734700202942
    3. ':
' → logprob: -5.0911736488342285
    4. ' if' → logprob: -5.3411736488342285
    5. 'if' → logprob: -6.8411736488342285
    6. 'max' → logprob: -7.3411736488342285
    7. ' max' → logprob: -7.5911736488342285
    8. ' :' → logprob: -7.5911736488342285
    9. ' ' → logprob: -8.71617317199707
    10. ' for' → logprob: -9.09117317199707

Token 140: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1609262228012085
    2. 'cost' → logprob: -1.5359262228012085
    3. 'profit' → logprob: -1.7859262228012085
    4. 'for' → logprob: -2.285926342010498
    5. 'price' → logprob: -2.785926342010498
    6. 'max' → logprob: -3.285926342010498
    7. 'total' → logprob: -4.035926342010498
    8. 'box' → logprob: -4.285926342010498
    9. 'capacity' → logprob: -4.285926342010498
    10. 'current' → logprob: -4.410926342010498

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20986749231815338
    2. '=' → logprob: -2.209867477416992
    3. 'urrent' → logprob: -3.459867477416992
    4. ',' → logprob: -4.084867477416992
    5. '_' → logprob: -5.084867477416992
    6. 'ost' → logprob: -5.584867477416992
    7. 'ount' → logprob: -5.959867477416992
    8. 'for' → logprob: -6.459867477416992
    9. '_amount' → logprob: -6.459867477416992
    10. 'c' → logprob: -6.584867477416992

Token 142: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03365134820342064
    2. ' C' → logprob: -3.408651351928711
    3. ' ' → logprob: -12.408651351928711
    4. '   ' → logprob: -14.283651351928711
    5. '	C' → logprob: -14.658651351928711
    6. ' ' → logprob: -16.40865135192871
    7. 'c' → logprob: -16.53365135192871
    8. '  ' → logprob: -17.40865135192871
    9. '    ' → logprob: -17.53365135192871
    10. '
' → logprob: -17.53365135192871

Token 143: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00031937702442519367
    2. '[' → logprob: -8.125319480895996
    3. '[c' → logprob: -11.375319480895996
    4. ' [' → logprob: -12.750319480895996
    5. '[J' → logprob: -13.375319480895996
    6. '[
' → logprob: -13.500319480895996
    7. 'j' → logprob: -13.625319480895996
    8. '[C' → logprob: -13.750319480895996
    9. '[i' → logprob: -14.625319480895996
    10. ']' → logprob: -14.875319480895996

Token 144: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.388703852891922
    2. ']
' → logprob: -1.1387038230895996
    3. ')' → logprob: -7.2637038230896
    4. ')
' → logprob: -7.3887038230896
    5. '])' → logprob: -8.388704299926758
    6. ']
' → logprob: -9.263704299926758
    7. '   ' → logprob: -9.388704299926758
    8. ']

' → logprob: -10.638704299926758
    9. ' ]
' → logprob: -10.638704299926758
    10. ' ]' → logprob: -10.763704299926758

Token 145: '   ' (ID: 271)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.015383997932076454
    2. ' e' → logprob: -5.265384197235107
    3. 'for' → logprob: -5.265384197235107
    4. '   ' → logprob: -6.390384197235107
    5. ' for' → logprob: -6.890384197235107
    6. 'if' → logprob: -7.015384197235107
    7. 'max' → logprob: -8.01538372039795
    8. 'profit' → logprob: -8.26538372039795
    9. ' if' → logprob: -8.39038372039795
    10. 'price' → logprob: -9.51538372039795

Token 146: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.0030919164419174194
    2. 'total' → logprob: -6.753091812133789
    3. 'max' → logprob: -7.503091812133789
    4. 'for' → logprob: -7.628091812133789
    5. 'profit' → logprob: -8.378091812133789
    6. 'if' → logprob: -8.628091812133789
    7. 'sum' → logprob: -9.378091812133789
    8. 'best' → logprob: -9.503091812133789
    9. 'price' → logprob: -9.753091812133789
    10. 'p' → logprob: -10.003091812133789

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868938982486725
    2. ' =' → logprob: -1.13689386844635
    3. '   ' → logprob: -11.761894226074219
    4. ' ' → logprob: -12.136894226074219
    5. '*' → logprob: -13.136894226074219
    6. 'if' → logprob: -13.761894226074219
    7. ' ' → logprob: -13.761894226074219
    8. ')' → logprob: -14.261894226074219
    9. '#' → logprob: -14.261894226074219
    10. '-' → logprob: -14.386894226074219

Token 148: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.02975187823176384
    2. ' E' → logprob: -3.529751777648926
    3. '   ' → logprob: -14.404751777648926
    4. ' ' → logprob: -14.404751777648926
    5. '	E' → logprob: -15.529751777648926
    6. '  ' → logprob: -17.404752731323242
    7. '       ' → logprob: -17.529752731323242
    8. 'C' → logprob: -17.779752731323242
    9. '>E' → logprob: -18.029752731323242
    10. ' ' → logprob: -18.279752731323242

Token 149: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.8550976164988242e-05
    2. 'j' → logprob: -11.125018119812012
    3. '[' → logprob: -13.000018119812012
    4. '][' → logprob: -15.000018119812012
    5. '```' → logprob: -15.125018119812012
    6. '
' → logprob: -15.250018119812012
    7. '[
' → logprob: -15.250018119812012
    8. ']' → logprob: -16.625019073486328
    9. '\[' → logprob: -16.750019073486328
    10. '[user' → logprob: -17.000019073486328

Token 150: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029630844946950674
    2. ']
' → logprob: -5.877963066101074
    3. ')' → logprob: -9.002963066101074
    4. ']

' → logprob: -10.877963066101074
    5. '])' → logprob: -11.502963066101074
    6. ']
' → logprob: -13.252963066101074
    7. ' ]' → logprob: -13.502963066101074
    8. ')
' → logprob: -14.377963066101074
    9. ')]' → logprob: -14.377963066101074
    10. '];' → logprob: -14.877963066101074

Token 151: '   ' (ID: 271)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.9118334650993347
    2. 'for' → logprob: -1.4118335247039795
    3. ' for' → logprob: -1.6618335247039795
    4. ' if' → logprob: -3.1618335247039795
    5. ' profit' → logprob: -3.5368335247039795
    6. 'if' → logprob: -3.6618335247039795
    7. 'max' → logprob: -4.2868332862854
    8. 'i' → logprob: -4.6618332862854
    9. ' max' → logprob: -5.1618332862854
    10. 'price' → logprob: -5.1618332862854

Token 152: ' #' (ID: 1069)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.14562179148197174
    2. 'for' → logprob: -3.3956217765808105
    3. 'cost' → logprob: -3.8956217765808105
    4. 'total' → logprob: -3.8956217765808105
    5. 'current' → logprob: -4.1456217765808105
    6. 'count' → logprob: -4.5206217765808105
    7. 'price' → logprob: -5.2706217765808105
    8. 'num' → logprob: -5.5206217765808105
    9. 'max' → logprob: -5.6456217765808105
    10. 'if' → logprob: -5.8956217765808105

Token 153: ' prendre' (ID: 24257)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.517471432685852
    2. 'profit' → logprob: -1.517471432685852
    3. 'count' → logprob: -1.642471432685852
    4. 'cost' → logprob: -2.1424713134765625
    5. 'total' → logprob: -2.8924713134765625
    6. 'current' → logprob: -3.7674713134765625
    7. 'num' → logprob: -3.8924713134765625
    8. 'cnt' → logprob: -3.8924713134765625
    9. 'price' → logprob: -4.1424713134765625
    10. 'possible' → logprob: -4.3924713134765625

Token 154: ' les' (ID: 1341)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6198065876960754
    2. 'min' → logprob: -0.8698065876960754
    3. 'k' → logprob: -5.24480676651001
    4. 'for' → logprob: -5.61980676651001
    5. 'max' → logprob: -5.61980676651001
    6. ' k' → logprob: -5.86980676651001
    7. 'p' → logprob: -5.99480676651001
    8. ' p' → logprob: -5.99480676651001
    9. 'c' → logprob: -6.49480676651001
    10. 'i' → logprob: -6.61980676651001

Token 155: ' c' (ID: 274)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.3795810639858246
    2. 'min' → logprob: -2.2545809745788574
    3. 'P' → logprob: -2.5045809745788574
    4. 'prem' → logprob: -3.3795809745788574
    5. 'p' → logprob: -3.8795809745788574
    6. 'c' → logprob: -4.004580974578857
    7. ' P' → logprob: -4.504580974578857
    8. ' min' → logprob: -4.879580974578857
    9. 'e' → logprob: -5.004580974578857
    10. 'k' → logprob: -5.629580974578857

Token 156: ' man' (ID: 873)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -1.0154261589050293
    2. ' premiers' → logprob: -1.5154261589050293
    3. '+' → logprob: -2.1404261589050293
    4. 'first' → logprob: -2.6404261589050293
    5. ' man' → logprob: -3.1404261589050293
    6. 'man' → logprob: -3.2654261589050293
    7. 'prem' → logprob: -4.015426158905029
    8. ' =' → logprob: -4.265426158905029
    9. ' premières' → logprob: -4.640426158905029
    10. '=' → logprob: -4.640426158905029

Token 157: 'ju' (ID: 4734)
  Prédit: 'ju'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ju' → logprob: -0.0029765141662210226
    2. 'j' → logprob: -6.377976417541504
    3. 'jus' → logprob: -7.877976417541504
    4. ' ju' → logprob: -8.002976417541504
    5. '   ' → logprob: -9.127976417541504
    6. '  ' → logprob: -9.377976417541504
    7. ' ' → logprob: -9.627976417541504
    8. ' juu' → logprob: -9.627976417541504
    9. 'juje' → logprob: -9.752976417541504
    10. ' j' → logprob: -10.127976417541504

Token 158: 'us' (ID: 385)
  Prédit: 'ju'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ju' → logprob: -0.2376810610294342
    2. '```' → logprob: -2.8626811504364014
    3. 'j' → logprob: -3.6126811504364014
    4. 'jus' → logprob: -3.7376811504364014
    5. 'zu' → logprob: -4.362680912017822
    6. 's' → logprob: -4.487680912017822
    7. '   ' → logprob: -4.487680912017822
    8. 'su' → logprob: -4.612680912017822
    9. ' ' → logprob: -5.612680912017822
    10. '  ' → logprob: -5.737680912017822

Token 159: ' les' (ID: 1341)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9096011519432068
    2. 'if' → logprob: -1.0346012115478516
    3. '   ' → logprob: -1.5346012115478516
    4. 'for' → logprob: -4.034601211547852
    5. ' for' → logprob: -5.409601211547852
    6. 'profit' → logprob: -6.284601211547852
    7. ',' → logprob: -7.534601211547852
    8. ' profit' → logprob: -8.534601211547852
    9. 'price' → logprob: -8.534601211547852
    10. ':' → logprob: -8.784601211547852

Token 160: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.0015984143828973174
    2. ' plus' → logprob: -6.751598358154297
    3. 'moins' → logprob: -8.251598358154297
    4. '+' → logprob: -9.501598358154297
    5. '-plus' → logprob: -10.751598358154297
    6. 'Plus' → logprob: -11.126598358154297
    7. '_plus' → logprob: -11.126598358154297
    8. 'lus' → logprob: -11.626598358154297
    9. 'm' → logprob: -11.751598358154297
    10. '```' → logprob: -12.001598358154297

Token 161: ' chers' (ID: 152766)
  Prédit: ' chers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chers' → logprob: -0.15621648728847504
    2. 'chers' → logprob: -2.4062163829803467
    3. 'cher' → logprob: -3.1562163829803467
    4. 'profit' → logprob: -5.406216621398926
    5. 'ch' → logprob: -6.031216621398926
    6. 'prix' → logprob: -7.156216621398926
    7. 'prof' → logprob: -7.531216621398926
    8. ' précieux' → logprob: -7.531216621398926
    9. 'pr' → logprob: -7.781216621398926
    10. ' cher' → logprob: -8.156216621398926

Token 162: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3498464822769165
    2. 'if' → logprob: -1.7248464822769165
    3. 'profit' → logprob: -1.7248464822769165
    4. ' if' → logprob: -1.8498464822769165
    5. 'for' → logprob: -2.099846363067627
    6. ' for' → logprob: -2.849846363067627
    7. 'max' → logprob: -4.349846363067627
    8. ' profit' → logprob: -4.349846363067627
    9. 'profits' → logprob: -5.724846363067627
    10. 'price' → logprob: -6.099846363067627

Token 163: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.934399425983429
    2. 'profit' → logprob: -1.1843993663787842
    3. '   ' → logprob: -1.5593993663787842
    4. ' if' → logprob: -3.309399366378784
    5. 'price' → logprob: -3.809399366378784
    6. 'for' → logprob: -4.559399604797363
    7. ' profit' → logprob: -4.934399604797363
    8. 'total' → logprob: -5.559399604797363
    9. 'cost' → logprob: -6.184399604797363
    10. 'selected' → logprob: -6.434399604797363

Token 164: ' if' (ID: 538)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.3414836525917053
    2. 'if' (adapté à ' if') → logprob: -1.5914835929870605
    3. ' if' → logprob: -3.7164835929870605
    4. ' profit' → logprob: -3.8414835929870605
    5. 'cost' → logprob: -4.5914835929870605
    6. 'current' → logprob: -4.5914835929870605
    7. 'price' → logprob: -4.8414835929870605
    8. '   ' → logprob: -5.0914835929870605
    9. 'total' → logprob: -6.3414835929870605
    10. 'selected' → logprob: -6.7164835929870605

Token 165: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.38173991441726685
    2. 'c' → logprob: -1.256739854812622
    3. ' len' → logprob: -3.631739854812622
    4. ' M' → logprob: -5.631740093231201
    5. 'len' → logprob: -6.256740093231201
    6. 'M' → logprob: -7.256740093231201
    7. ' ' → logprob: -10.381739616394043
    8. '   ' → logprob: -11.381739616394043
    9. '	c' → logprob: -11.881739616394043
    10. 'm' → logprob: -12.194239616394043

Token 166: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3868747651576996
    2. '<=' → logprob: -1.136874794960022
    3. '>' → logprob: -12.88687515258789
    4. ' >' → logprob: -14.13687515258789
    5. ')<=' → logprob: -16.13687515258789
    6. 'le' → logprob: -16.51187515258789
    7. ']<=' → logprob: -16.88687515258789
    8. '<len' → logprob: -17.01187515258789
    9. '0' → logprob: -17.13687515258789
    10. ' ' → logprob: -17.63687515258789

Token 167: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.026345467194914818
    2. ' M' → logprob: -4.151345252990723
    3. 'len' → logprob: -4.651345252990723
    4. ' len' → logprob: -7.276345252990723
    5. '0' → logprob: -11.526345252990723
    6. ' ' → logprob: -12.776345252990723
    7. '=len' → logprob: -12.776345252990723
    8. '=M' → logprob: -14.526345252990723
    9. '   ' → logprob: -14.776345252990723
    10. '=' → logprob: -14.776345252990723

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005985465249978006
    2. ':
' → logprob: -7.500598430633545
    3. '):' → logprob: -10.625598907470703
    4. ' :' → logprob: -11.250598907470703
    5. ' or' → logprob: -12.625598907470703
    6. ')' → logprob: -12.875598907470703
    7. 'continue' → logprob: -14.125598907470703
    8. ' continue' → logprob: -14.125598907470703
    9. ':return' → logprob: -14.750598907470703
    10. ':
' → logprob: -15.875598907470703

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.517128050327301
    2. '   ' → logprob: -1.1421279907226562
    3. 'continue' → logprob: -2.5171279907226562
    4. ' continue' → logprob: -5.642127990722656
    5. '	continue' → logprob: -8.017127990722656
    6. ':' → logprob: -10.517127990722656
    7. '_continue' → logprob: -11.267127990722656
    8. 'contin' → logprob: -11.642127990722656
    9. '   ' → logprob: -12.267127990722656
    10. '           ' → logprob: -13.267127990722656

Token 170: ' c' (ID: 274)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1479053944349289
    2. '   ' → logprob: -2.1479053497314453
    3. ' continue' → logprob: -3.8979053497314453
    4. '       ' → logprob: -7.772905349731445
    5. '	continue' → logprob: -10.397905349731445
    6. ' ' → logprob: -11.647905349731445
    7. 'contin' → logprob: -12.022905349731445
    8. 'continu' → logprob: -12.772905349731445
    9. '  ' → logprob: -13.772905349731445
    10. '_continue' → logprob: -13.897905349731445

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3934231996536255
    2. 'ont' → logprob: -1.7684231996536255
    3. ' =' → logprob: -2.143423080444336
    4. 'continue' → logprob: -3.768423080444336
    5. ':' → logprob: -4.893423080444336
    6. '   ' → logprob: -6.143423080444336
    7. '>' → logprob: -6.643423080444336
    8. ' continue' → logprob: -6.768423080444336
    9. 'inue' → logprob: -7.518423080444336
    10. '       ' → logprob: -7.768423080444336

Token 172: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0019286326132714748
    2. ' M' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.251928329467773
    4. ' ' → logprob: -17.626928329467773
    5. '	M' → logprob: -18.876928329467773
    6. '>M' → logprob: -19.876928329467773
    7. 'm' → logprob: -20.251928329467773
    8. 'len' → logprob: -20.501928329467773
    9. '0' → logprob: -20.501928329467773
    10. '    ' → logprob: -21.626928329467773

Token 173: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0631411224603653
    2. '
' → logprob: -2.813141107559204
    3. '    
' → logprob: -6.813141345977783
    4. '
' → logprob: -10.563140869140625
    5. '  
' → logprob: -11.063140869140625
    6. 'for' → logprob: -12.438140869140625
    7. '        
' → logprob: -12.688140869140625
    8. '#' → logprob: -12.688140869140625
    9. '   
' → logprob: -12.813140869140625
    10. ')' → logprob: -13.063140869140625

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2814800441265106
    2. '
' → logprob: -1.531480073928833
    3. '    
' → logprob: -4.656479835510254
    4. 'profit' → logprob: -5.031479835510254
    5. ' profit' → logprob: -5.156479835510254
    6. 'max' → logprob: -6.406479835510254
    7. ' max' → logprob: -6.781479835510254
    8. ' 
' → logprob: -7.031479835510254
    9. '  
' → logprob: -7.281479835510254
    10. '   
' → logprob: -7.656479835510254

Token 175: ' total' (ID: 3609)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.017395883798599243
    2. 'current' → logprob: -4.892395973205566
    3. 'cost' → logprob: -5.767395973205566
    4. 'total' (adapté à ' total') → logprob: -6.142395973205566
    5. 'sum' → logprob: -6.767395973205566
    6. 'price' → logprob: -7.017395973205566
    7. '   ' → logprob: -7.267395973205566
    8. 'selected' → logprob: -7.517395973205566
    9. 'temp' → logprob: -8.142395973205566
    10. 're' → logprob: -8.642395973205566

Token 176: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.02482115663588047
    2. '_profit' → logprob: -3.7748210430145264
    3. ' =' → logprob: -7.6498212814331055
    4. '_' → logprob: -7.7748212814331055
    5. '_value' → logprob: -8.274821281433105
    6. '=' → logprob: -8.524821281433105
    7. '_cost' → logprob: -9.274821281433105
    8. '_pr' → logprob: -9.899821281433105
    9. '_sum' → logprob: -11.024821281433105
    10. '_p' → logprob: -11.024821281433105

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061987970024347305
    2. '=' → logprob: -2.81198787689209
    3. ' +=' → logprob: -11.43698787689209
    4. 's' → logprob: -12.43698787689209
    5. '=sum' → logprob: -12.68698787689209
    6. ' ' → logprob: -13.93698787689209
    7. ' ' → logprob: -14.56198787689209
    8. '_' → logprob: -14.93698787689209
    9. 'sum' → logprob: -15.06198787689209
    10. '+=' → logprob: -15.43698787689209

Token 178: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6931594014167786
    2. 'sum' → logprob: -0.6931594014167786
    3. '0' → logprob: -11.443159103393555
    4. '	sum' → logprob: -14.818159103393555
    5. ' ' → logprob: -14.943159103393555
    6. '   ' → logprob: -14.943159103393555
    7. ' ' → logprob: -16.193159103393555
    8. '(sum' → logprob: -16.193159103393555
    9. '=sum' → logprob: -16.443159103393555
    10. '
' → logprob: -17.193159103393555

Token 179: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.005239087622612715
    2. '(' → logprob: -5.255239009857178
    3. '(
' → logprob: -12.630239486694336
    4. 'P' → logprob: -13.505239486694336
    5. ' (' → logprob: -14.755239486694336
    6. '(p' → logprob: -16.755239486694336
    7. '(

' → logprob: -16.755239486694336
    8. ' P' → logprob: -16.880239486694336
    9. '([' → logprob: -17.505239486694336
    10. '(
' → logprob: -18.630239486694336

Token 180: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -6.706686690449715e-05
    2. '[' → logprob: -9.750066757202148
    3. '[i' → logprob: -11.750066757202148
    4. '[c' → logprob: -14.500066757202148
    5. ' [:' → logprob: -15.125066757202148
    6. '[j' → logprob: -16.75006675720215
    7. '[:]' → logprob: -17.12506675720215
    8. '   ' → logprob: -17.75006675720215
    9. '[
' → logprob: -17.87506675720215
    10. ')' → logprob: -18.25006675720215

Token 181: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.339278580620885e-06
    2. ' c' → logprob: -13.000001907348633
    3. ')c' → logprob: -17.375001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '	c' → logprob: -19.000001907348633
    6. '_c' → logprob: -20.875001907348633
    7. '+c' → logprob: -21.125001907348633
    8. '```' → logprob: -21.625001907348633
    9. '*c' → logprob: -21.875001907348633
    10. 'с' → logprob: -22.000001907348633

Token 182: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.47495681833243e-05
    2. '])
' → logprob: -11.250024795532227
    3. ')' → logprob: -12.125024795532227
    4. ' ])' → logprob: -12.125024795532227
    5. ']' → logprob: -15.500024795532227
    6. '))' → logprob: -16.250024795532227
    7. '])*' → logprob: -16.500024795532227
    8. ')])' → logprob: -16.625024795532227
    9. ''])' → logprob: -16.625024795532227
    10. ']))' → logprob: -17.000024795532227

Token 183: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31481173634529114
    2. ' 
' → logprob: -2.0648117065429688
    3. '+' → logprob: -3.3148117065429688
    4. '
' → logprob: -3.4398117065429688
    5. '    
' → logprob: -3.9398117065429688
    6. 'if' → logprob: -4.064811706542969
    7. '   ' → logprob: -4.814811706542969
    8. '  
' → logprob: -4.939811706542969
    9. '<|end|>' → logprob: -5.314811706542969
    10. '*' → logprob: -5.689811706542969

Token 184: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' (adapté à ' profit') → logprob: -0.4153290390968323
    2. 'if' → logprob: -1.2903289794921875
    3. ' profit' → logprob: -3.5403289794921875
    4. ' if' → logprob: -3.6653289794921875
    5. 'total' → logprob: -5.5403289794921875
    6. 'max' → logprob: -6.5403289794921875
    7. 'net' → logprob: -6.9153289794921875
    8. '   ' → logprob: -7.1653289794921875
    9. '
' → logprob: -7.5403289794921875
    10. 'cost' → logprob: -7.6653289794921875

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022003948688507
    2. ' =' → logprob: -2.350219964981079
    3. '_' → logprob: -11.7252197265625
    4. ' +=' → logprob: -13.2252197265625
    5. '+=' → logprob: -13.4752197265625
    6. 's' → logprob: -14.3502197265625
    7. '_=' → logprob: -14.7252197265625
    8. '=max' → logprob: -14.8502197265625
    9. '＝' → logprob: -15.1002197265625
    10. ' ' → logprob: -15.2252197265625

Token 186: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3036237955093384
    2. ' total' → logprob: -1.4286237955093384
    3. 'e' → logprob: -4.178623676300049
    4. ' e' → logprob: -5.053623676300049
    5. '   ' → logprob: -7.928623676300049
    6. 'max' → logprob: -9.928624153137207
    7. '(total' → logprob: -10.303624153137207
    8. ' max' → logprob: -10.678624153137207
    9. '	total' → logprob: -11.678624153137207
    10. ' ' → logprob: -12.178624153137207

Token 187: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -5.68153518543113e-05
    2. 'price' → logprob: -10.125057220458984
    3. '_profit' → logprob: -11.375057220458984
    4. '_' → logprob: -13.875057220458984
    5. 'ar' → logprob: -14.625057220458984
    6. 's' → logprob: -14.875057220458984
    7. 'profit' → logprob: -15.000057220458984
    8. ' _' → logprob: -15.125057220458984
    9. '-_' → logprob: -15.125057220458984
    10. '   ' → logprob: -15.250057220458984

Token 188: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16102175414562225
    2. '-' → logprob: -1.9110217094421387
    3. '*' → logprob: -7.786021709442139
    4. ' *' → logprob: -8.786022186279297
    5. '+' → logprob: -9.286022186279297
    6. ' +' → logprob: -9.661022186279297
    7. ' ' → logprob: -10.286022186279297
    8. ' ' → logprob: -10.536022186279297
    9. '   ' → logprob: -13.411022186279297
    10. ' -
' → logprob: -13.661022186279297

Token 189: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004155449103564024
    2. ' e' → logprob: -5.50415563583374
    3. '   ' → logprob: -9.879155158996582
    4. '	e' → logprob: -10.879155158996582
    5. 'E' → logprob: -12.754155158996582
    6. ' ' → logprob: -13.379155158996582
    7. '_e' → logprob: -14.254155158996582
    8. '```' → logprob: -14.754155158996582
    9. '  ' → logprob: -15.129155158996582
    10. '    ' → logprob: -15.629155158996582

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0023887332063168287
    2. ' if' → logprob: -7.002388954162598
    3. 'if' → logprob: -7.252388954162598
    4. '
' → logprob: -8.252388954162598
    5. 'max' → logprob: -9.127388954162598
    6. ' 
' → logprob: -9.127388954162598
    7. '\n' → logprob: -9.377388954162598
    8. '' → logprob: -9.877388954162598
    9. '  
' → logprob: -10.127388954162598
    10. '    
' → logprob: -10.502388954162598

Token 191: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010342766530811787
    2. 'if' → logprob: -5.260342597961426
    3. ' if' → logprob: -5.760342597961426
    4. '   ' → logprob: -6.760342597961426
    5. 'max' → logprob: -8.260342597961426
    6. '\n' → logprob: -8.510342597961426
    7. '
' → logprob: -8.760342597961426
    8. '    
' → logprob: -9.885342597961426
    9. ' 
' → logprob: -9.885342597961426
    10. ')
' → logprob: -10.510342597961426

Token 192: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0026586547028273344
    2. 'max' → logprob: -6.002658843994141
    3. ' if' → logprob: -8.87765884399414
    4. '   ' → logprob: -10.25265884399414
    5. '
' → logprob: -11.75265884399414
    6. '    
' → logprob: -16.12765884399414
    7. ' max' → logprob: -16.37765884399414
    8. ' ' → logprob: -16.62765884399414
    9. '	if' → logprob: -17.50265884399414
    10. '\
' → logprob: -18.12765884399414

Token 193: ' profit' (ID: 15971)
  Prédit: ' profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' profit' → logprob: -0.001502598519437015
    2. 'profit' → logprob: -6.501502513885498
    3. 'Profit' → logprob: -16.626502990722656
    4. ' prof' → logprob: -17.001502990722656
    5. ' ' → logprob: -17.126502990722656
    6. 'prof' → logprob: -17.751502990722656
    7. '_profit' → logprob: -18.001502990722656
    8. ' profi' → logprob: -18.376502990722656
    9. '	pro' → logprob: -18.501502990722656
    10. ' ' → logprob: -18.501502990722656

Token 194: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2014184147119522
    2. '>' → logprob: -1.701418399810791
    3. ' ' → logprob: -12.45141887664795
    4. ' ' → logprob: -14.07641887664795
    5. ' >

' → logprob: -16.326417922973633
    6. 'max' → logprob: -16.326417922973633
    7. '.' → logprob: -16.951417922973633
    8. '＞' → logprob: -17.201417922973633
    9. ' >
' → logprob: -17.451417922973633
    10. '   ' → logprob: -17.576417922973633

Token 195: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005530327325686812
    2. ' max' → logprob: -7.500553131103516
    3. '	max' → logprob: -19.750553131103516
    4. '   ' → logprob: -19.875553131103516
    5. '_max' → logprob: -19.875553131103516
    6. '0' → logprob: -20.500553131103516
    7. '
' → logprob: -20.875553131103516
    8. '=max' → logprob: -21.125553131103516
    9. '(max' → logprob: -21.625553131103516
    10. ' ' → logprob: -22.625553131103516

Token 196: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -1.6240566083070007e-06
    2. '_prof' → logprob: -14.000001907348633
    3. 'profit' → logprob: -15.000001907348633
    4. '_' → logprob: -15.250001907348633
    5. '_pro' → logprob: -16.500001907348633
    6. '_max' → logprob: -17.625001907348633
    7. '_prob' → logprob: -17.750001907348633
    8. 'Profit' → logprob: -18.500001907348633
    9. '_price' → logprob: -18.750001907348633
    10. ' profit' → logprob: -19.000001907348633

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006159027572721243
    2. 'max' → logprob: -5.756158828735352
    3. ':
' → logprob: -6.506158828735352
    4. ':max' → logprob: -6.881158828735352
    5. '   ' → logprob: -8.756158828735352
    6. ' max' → logprob: -8.881158828735352
    7. '=max' → logprob: -9.631158828735352
    8. '_max' → logprob: -10.756158828735352
    9. ' :' → logprob: -10.881158828735352
    10. '[max' → logprob: -11.256158828735352

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009910020045936108
    2. 'max' → logprob: -5.1349101066589355
    3. ' max' → logprob: -6.5099101066589355
    4. '   ' → logprob: -6.6349101066589355
    5. '
' → logprob: -6.8849101066589355
    6. '	max' → logprob: -9.634909629821777
    7. ' 
' → logprob: -11.009909629821777
    8. '        
' → logprob: -11.134909629821777
    9. '    
' → logprob: -11.259909629821777
    10. '	   ' → logprob: -11.634909629821777

Token 199: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.1002393513917923
    2. ' max' → logprob: -2.3502392768859863
    3. '       ' → logprob: -10.725239753723145
    4. '   ' → logprob: -11.975239753723145
    5. '           ' → logprob: -13.225239753723145
    6. '
' → logprob: -13.350239753723145
    7. '	max' → logprob: -14.475239753723145
    8. '_max' → logprob: -15.225239753723145
    9. '```' → logprob: -16.850238800048828
    10. '[max' → logprob: -17.475238800048828

Token 200: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -1.700132997939363e-05
    2. '_prof' → logprob: -11.250017166137695
    3. '_' → logprob: -13.625017166137695
    4. '_pro' → logprob: -13.625017166137695
    5. 'profit' → logprob: -14.250017166137695
    6. '_prob' → logprob: -15.000017166137695
    7. 'Profit' → logprob: -16.000017166137695
    8. '_p' → logprob: -16.250017166137695
    9. ' _' → logprob: -16.375017166137695
    10. '_reward' → logprob: -17.750017166137695

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. '＝' → logprob: -16.876928329467773
    4. '=max' → logprob: -17.751928329467773
    5. ' ' → logprob: -17.876928329467773
    6. '=

' → logprob: -18.001928329467773
    7. ' =
' → logprob: -18.626928329467773
    8. ' =)' → logprob: -19.501928329467773
    9. ' +=' → logprob: -19.876928329467773
    10. ' =
' → logprob: -19.876928329467773

Token 202: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.05489988625049591
    2. ' profit' → logprob: -2.9298999309539795
    3. 'prof' → logprob: -11.554900169372559
    4. 'pro' → logprob: -12.179900169372559
    5. '_profit' → logprob: -14.304900169372559
    6. 'profits' → logprob: -14.679900169372559
    7. 'Profit' → logprob: -14.804900169372559
    8. '	pro' → logprob: -14.804900169372559
    9. 'prob' → logprob: -14.929900169372559
    10. 'prot' → logprob: -15.929900169372559

Token 203: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00044127836008556187
    2. '
' → logprob: -7.750441074371338
    3. ' print' → logprob: -11.500441551208496
    4. '
' → logprob: -16.50044059753418
    5. ')' → logprob: -16.62544059753418
    6. ' 
' → logprob: -16.62544059753418
    7. '  
' → logprob: -16.75044059753418
    8. '```' → logprob: -16.75044059753418
    9. '(print' → logprob: -17.50044059753418
    10. '

' → logprob: -17.87544059753418

Token 204: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00043281487887725234
    2. '
' → logprob: -7.750432968139648
    3. ' print' → logprob: -13.250432968139648
    4. '\n' → logprob: -15.625432968139648
    5. '
' → logprob: -16.25043296813965
    6. ' 
' → logprob: -17.12543296813965
    7. '```' → logprob: -17.50043296813965
    8. '(print' → logprob: -17.87543296813965
    9. '\' → logprob: -18.62543296813965
    10. ')
' → logprob: -18.75043296813965

Token 205: ' aussi' (ID: 9894)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.749814019713085e-06
    2. 'if' → logprob: -12.625006675720215
    3. ' print' → logprob: -12.625006675720215
    4. '
' → logprob: -17.50000762939453
    5. '```' → logprob: -18.75000762939453
    6. 'pr' → logprob: -19.12500762939453
    7. 'prin' → logprob: -19.75000762939453
    8. '#print' → logprob: -20.50000762939453
    9. ' if' → logprob: -21.00000762939453
    10. '#' → logprob: -21.00000762939453

Token 206: ' essayer' (ID: 92713)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2586919367313385
    2. 'if' → logprob: -2.2586920261383057
    3. 'max' → logprob: -2.3836920261383057
    4. 'for' → logprob: -4.258691787719727
    5. ' if' → logprob: -4.758691787719727
    6. ' print' → logprob: -5.883691787719727
    7. '#' → logprob: -5.883691787719727
    8. ' max' → logprob: -7.008691787719727
    9. '
' → logprob: -7.133691787719727
    10. ' for' → logprob: -8.383691787719727

Token 207: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27998077869415283
    2. 'max' → logprob: -2.5299806594848633
    3. 'la' → logprob: -3.5299806594848633
    4. 'le' → logprob: -3.6549806594848633
    5. 'for' → logprob: -3.7799806594848633
    6. 'sans' → logprob: -3.9049806594848633
    7. 'de' → logprob: -4.279980659484863
    8. 'print' → logprob: -4.404980659484863
    9. 'sum' → logprob: -4.529980659484863
    10. 'd' → logprob: -4.654980659484863

Token 208: ' comb' (ID: 4134)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9130727052688599
    2. 'max' → logprob: -1.0380727052688599
    3. '0' → logprob: -1.6630727052688599
    4. ' max' → logprob: -3.2880725860595703
    5. ' print' → logprob: -4.41307258605957
    6. 'sum' → logprob: -6.16307258605957
    7. 'for' → logprob: -6.28807258605957
    8. ' ' → logprob: -7.41307258605957
    9. 'pass' → logprob: -7.66307258605957
    10. ' for' → logprob: -9.03807258605957

Token 209: 'iner' (ID: 6010)
  Prédit: 'iner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.002793826162815094
    2. 'ine' → logprob: -6.002793788909912
    3. 'ining' → logprob: -9.37779426574707
    4. 'ina' → logprob: -9.50279426574707
    5. '#' → logprob: -10.12779426574707
    6. 'in' → logprob: -10.50279426574707
    7. 'i' → logprob: -10.75279426574707
    8. '

' → logprob: -11.62779426574707
    9. '_' → logprob: -12.12779426574707
    10. '"' → logprob: -12.25279426574707

Token 210: ' deux' (ID: 10301)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34303006529808044
    2. ' deux' → logprob: -2.3430299758911133
    3. ' for' → logprob: -2.8430299758911133
    4. '2' → logprob: -3.0930299758911133
    5. ' ' → logprob: -3.4680299758911133
    6. ' two' → logprob: -3.8430299758911133
    7. 'two' → logprob: -4.093029975891113
    8. '1' → logprob: -4.718029975891113
    9. ' i' → logprob: -6.218029975891113
    10. 'i' → logprob: -6.468029975891113

Token 211: ' bo' (ID: 1581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34958234429359436
    2. ' for' → logprob: -1.224582314491272
    3. ' bo' → logprob: -7.474582195281982
    4. 'bo' → logprob: -8.72458267211914
    5. 'bou' → logprob: -8.72458267211914
    6. ' bou' → logprob: -8.84958267211914
    7. '#' → logprob: -10.84958267211914
    8. ' loops' → logprob: -11.34958267211914
    9. 'range' → logprob: -11.47458267211914
    10. 'ranges' → logprob: -11.84958267211914

Token 212: 'ites' (ID: 3915)
  Prédit: 'îtes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îtes' → logprob: -0.04841940104961395
    2. 'ites' → logprob: -3.67341947555542
    3. 'î' → logprob: -4.04841947555542
    4. 'Î' → logprob: -7.29841947555542
    5. 'ï' → logprob: -7.42341947555542
    6. 'îte' → logprob: -7.67341947555542
    7. '#' → logprob: -7.92341947555542
    8. 'x' → logprob: -8.048418998718262
    9. 'xes' → logprob: -8.048418998718262
    10. 'tes' → logprob: -8.173418998718262

Token 213: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017756648361682892
    2. '
' → logprob: -4.267756462097168
    3. ' for' → logprob: -5.642756462097168
    4. ',' → logprob: -11.517756462097168
    5. '```' → logprob: -12.142756462097168
    6. '

' → logprob: -12.267756462097168
    7. ':' → logprob: -12.642756462097168
    8. ':
' → logprob: -12.767756462097168
    9. ',
' → logprob: -12.892756462097168
    10. ' 
' → logprob: -13.017756462097168

Token 214: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0040887282229959965
    2. ' for' → logprob: -5.504088878631592
    3. 'import' → logprob: -12.254088401794434
    4. '
' → logprob: -13.004088401794434
    5. '#' → logprob: -13.379088401794434
    6. 'from' → logprob: -13.504088401794434
    7. 'if' → logprob: -15.504088401794434
    8. ' 
' → logprob: -17.12908935546875
    9. '   ' → logprob: -18.12908935546875
    10. '```' → logprob: -18.25408935546875

Token 215: ' manière' (ID: 35013)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2421274483203888
    2. 'range' → logprob: -2.1171274185180664
    3. 'fa' → logprob: -3.9921274185180664
    4. 'man' → logprob: -4.117127418518066
    5. '0' → logprob: -4.492127418518066
    6. 'de' → logprob: -4.992127418518066
    7. 'ux' → logprob: -4.992127418518066
    8. 'la' → logprob: -5.117127418518066
    9. 'import' → logprob: -5.492127418518066
    10. '#' → logprob: -5.867127418518066

Token 216: ' simple' (ID: 4705)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.3416503667831421
    2. 'simple' → logprob: -1.841650366783142
    3. 'na' → logprob: -2.8416504859924316
    4. 'import' → logprob: -3.2166504859924316
    5. ' naï' → logprob: -5.216650485992432
    6. 'optim' → logprob: -5.341650485992432
    7. 'sim' → logprob: -5.716650485992432
    8. 'simpl' → logprob: -5.716650485992432
    9. ' simple' → logprob: -5.966650485992432
    10. ' naive' → logprob: -6.341650485992432

Token 217: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00042662365012802184
    2. '
' → logprob: -7.875426769256592
    3. ' for' → logprob: -10.000426292419434
    4. '```' → logprob: -14.375426292419434
    5. 'from' → logprob: -15.625426292419434
    6. 'import' → logprob: -16.00042724609375
    7. '

' → logprob: -16.62542724609375
    8. '``' → logprob: -17.00042724609375
    9. ',' → logprob: -17.12542724609375
    10. ',
' → logprob: -17.50042724609375

Token 218: ' non' (ID: 2893)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.4105012118816376
    2. 'for' → logprob: -1.78550124168396
    3. 'appro' → logprob: -3.53550124168396
    4. 'limit' → logprob: -3.66050124168396
    5. 'part' → logprob: -4.160501003265381
    6. 'na' → logprob: -4.535501003265381
    7. 'b' → logprob: -4.535501003265381
    8. 'optim' → logprob: -4.660501003265381
    9. 'direct' → logprob: -5.285501003265381
    10. ' limitée' → logprob: -5.285501003265381

Token 219: ' optimale' (ID: 72604)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.36673980951309204
    2. 'com' → logprob: -1.3667397499084473
    3. 'optim' → logprob: -3.3667397499084473
    4. 'complex' → logprob: -4.866739749908447
    5. 'br' → logprob: -5.366739749908447
    6. 'compl' → logprob: -6.616739749908447
    7. ' exhaustive' → logprob: -6.866739749908447
    8. 'd' → logprob: -7.991739749908447
    9. 'n' → logprob: -8.116740226745605
    10. 'c' → logprob: -8.241740226745605

Token 220: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016313401283696294
    2. ' for' → logprob: -9.250163078308105
    3. '
' → logprob: -9.625163078308105
    4. '```' → logprob: -14.375163078308105
    5. 'from' → logprob: -15.875163078308105
    6. 'or' → logprob: -16.750164031982422
    7. 'import' → logprob: -17.000164031982422
    8. '``' → logprob: -17.250164031982422
    9. ',' → logprob: -18.000164031982422
    10. '\
' → logprob: -18.125164031982422

Token 221: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.180258191714529e-06
    2. '
' → logprob: -12.000008583068848
    3. ' for' → logprob: -13.500008583068848
    4. '```' → logprob: -15.125008583068848
    5. 'from' → logprob: -15.375008583068848
    6. 'import' → logprob: -17.37500762939453
    7. '``' → logprob: -18.25000762939453
    8. '  
' → logprob: -18.37500762939453
    9. 'fo' → logprob: -18.62500762939453
    10. '\
' → logprob: -18.62500762939453

Token 222: ' essayer' (ID: 92713)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.796184723294573e-06
    2. 'from' → logprob: -12.125005722045898
    3. 'import' → logprob: -15.500005722045898
    4. ' for' → logprob: -15.875005722045898
    5. '
' → logprob: -18.5000057220459
    6. '```' → logprob: -19.1250057220459
    7. '#' → logprob: -20.1250057220459
    8. 'max' → logprob: -20.7500057220459
    9. 'if' → logprob: -21.1250057220459
    10. 'comb' → logprob: -22.1250057220459

Token 223: ' toutes' (ID: 17502)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02987545169889927
    2. ' for' → logprob: -3.5298755168914795
    3. '
' → logprob: -9.404875755310059
    4. ' i' → logprob: -11.654875755310059
    5. ' ' → logprob: -11.779875755310059
    6. 'range' → logprob: -11.779875755310059
    7. '   ' → logprob: -12.279875755310059
    8. 'i' → logprob: -12.779875755310059
    9. ' range' → logprob: -13.029875755310059
    10. 'from' → logprob: -13.029875755310059

Token 224: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8759741187095642
    2. 'les' → logprob: -1.125974178314209
    3. 'import' → logprob: -2.250974178314209
    4. 'i' → logprob: -3.625974178314209
    5. 'pairs' → logprob: -4.000974178314209
    6. '(' → logprob: -4.375974178314209
    7. ' ' → logprob: -4.500974178314209
    8. '   ' → logprob: -4.625974178314209
    9. '(i' → logprob: -4.625974178314209
    10. 'range' → logprob: -4.625974178314209

Token 225: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.9852399230003357
    2. 'airs' → logprob: -1.1102399826049805
    3. 'ar' → logprob: -2.6102399826049805
    4. 'ranges' → logprob: -2.8602399826049805
    5. 'range' → logprob: -2.9852399826049805
    6. 'air' → logprob: -3.1102399826049805
    7. 'r' → logprob: -4.1102399826049805
    8. 'for' → logprob: -4.2352399826049805
    9. 'our' → logprob: -4.9852399826049805
    10. 'a' → logprob: -5.3602399826049805

Token 226: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07889573276042938
    2. ' for' → logprob: -2.5788958072662354
    3. '
' → logprob: -12.328895568847656
    4. 'import' → logprob: -14.453895568847656
    5. 'from' → logprob: -15.078895568847656
    6. 'range' → logprob: -15.578895568847656
    7. ' range' → logprob: -16.203895568847656
    8. ' pour' → logprob: -16.203895568847656
    9. ' 
' → logprob: -16.828895568847656
    10. 's' → logprob: -16.953895568847656

Token 227: ' bo' (ID: 1581)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08197983354330063
    2. ' range' → logprob: -3.081979751586914
    3. 'for' → logprob: -4.456979751586914
    4. 'bo' → logprob: -4.956979751586914
    5. '(range' → logprob: -5.331979751586914
    6. 'ranges' → logprob: -5.581979751586914
    7. ' bo' → logprob: -6.706979751586914
    8. 'boxes' → logprob: -6.706979751586914
    9. 'indices' → logprob: -6.956979751586914
    10. 'i' → logprob: -7.331979751586914

Token 228: 'ites' (ID: 3915)
  Prédit: 'ites'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ites' → logprob: -0.5525067448616028
    2. 'îtes' → logprob: -0.9275067448616028
    3. 'î' → logprob: -3.802506685256958
    4. 'xes' → logprob: -6.052506923675537
    5. 'îte' → logprob: -7.177506923675537
    6. 'ite' → logprob: -7.552506923675537
    7. 'Î' → logprob: -7.677506923675537
    8. 'it' → logprob: -7.927506923675537
    9. 'tes' → logprob: -7.927506923675537
    10. 'ï' → logprob: -8.052506446838379

Token 229: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00043281487887725234
    2. ' for' → logprob: -7.875432968139648
    3. '
' → logprob: -9.875432968139648
    4. '```' → logprob: -14.625432968139648
    5. 'or' → logprob: -15.000432968139648
    6. '``' → logprob: -16.12543296813965
    7. 'from' → logprob: -16.50043296813965
    8. ',' → logprob: -16.62543296813965
    9. 's' → logprob: -17.37543296813965
    10. 'f' → logprob: -17.62543296813965

Token 230: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -15.375000953674316
    3. 'from' → logprob: -15.625000953674316
    4. '
' → logprob: -15.750000953674316
    5. '```' → logprob: -16.75
    6. 'fo' → logprob: -17.75
    7. 'import' → logprob: -18.75
    8. '``' → logprob: -19.75
    9. 'f' → logprob: -20.125
    10. 'i' → logprob: -21.375

Token 231: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.246537173457909e-06
    2. ' for' → logprob: -13.125003814697266
    3. 'max' → logprob: -13.500003814697266
    4. '
' → logprob: -14.125003814697266
    5. 'fo' → logprob: -16.500003814697266
    6. 'from' → logprob: -17.125003814697266
    7. '```' → logprob: -17.375003814697266
    8. 'profit' → logprob: -17.875003814697266
    9. 'best' → logprob: -18.375003814697266
    10. 'f' → logprob: -18.875003814697266

Token 232: ''est' (ID: 6616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001850581611506641
    2. '=' → logprob: -7.126850605010986
    3. 'omb' → logprob: -8.251850128173828
    4. ' for' → logprob: -8.626850128173828
    5. 'or' → logprob: -8.626850128173828
    6. 'range' → logprob: -9.001850128173828
    7. '#' → logprob: -10.126850128173828
    8. ' =' → logprob: -10.251850128173828
    9. 'from' → logprob: -10.251850128173828
    10. 'c' → logprob: -10.626850128173828

Token 233: ' un' (ID: 537)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7545750141143799
    2. 'for' → logprob: -0.7545750141143799
    3. ' for' → logprob: -3.37957501411438
    4. 'O' → logprob: -4.879574775695801
    5. ' N' → logprob: -4.879574775695801
    6. 'range' → logprob: -5.879574775695801
    7. 'possible' → logprob: -6.129574775695801
    8. '0' → logprob: -7.004574775695801
    9. '```' → logprob: -7.004574775695801
    10. ' possible' → logprob: -7.379574775695801

Token 234: ' simple' (ID: 4705)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.16679814457893372
    2. ' O' → logprob: -2.5417981147766113
    3. 'for' → logprob: -3.6667981147766113
    4. 'N' → logprob: -3.9167981147766113
    5. ' for' → logprob: -4.791798114776611
    6. 'e' → logprob: -5.041798114776611
    7. 'range' → logprob: -6.041798114776611
    8. 'o' → logprob: -6.291798114776611
    9. ' range' → logprob: -6.416798114776611
    10. ' N' → logprob: -6.791798114776611

Token 235: ' O' (ID: 532)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.384321928024292
    2. 'for' → logprob: -1.384321928024292
    3. ' nested' → logprob: -2.884321928024292
    4. ' double' → logprob: -4.884322166442871
    5. 'e' → logprob: -6.259322166442871
    6. 'nested' → logprob: -7.009322166442871
    7. '```' → logprob: -7.134322166442871
    8. ' two' → logprob: -8.384322166442871
    9. 'import' → logprob: -8.509322166442871
    10. ' deux' → logprob: -8.884322166442871

Token 236: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003559615579433739
    2. '(' → logprob: -8.37535572052002
    3. 'N' → logprob: -9.25035572052002
    4. '(n' → logprob: -11.12535572052002
    5. '\(' → logprob: -12.87535572052002
    6. '(
' → logprob: -13.00035572052002
    7. ' (' → logprob: -13.50035572052002
    8. '\' → logprob: -13.50035572052002
    9. '（' → logprob: -14.00035572052002
    10. '((' → logprob: -14.25035572052002

Token 237: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2193775177001953
    2. '^' → logprob: -1.7193775177001953
    3. '²' → logprob: -4.594377517700195
    4. '2' → logprob: -4.969377517700195
    5. '*' → logprob: -7.469377517700195
    6. ' **' → logprob: -9.094377517700195
    7. ' ' → logprob: -10.844377517700195
    8. ')' → logprob: -11.219377517700195
    9. ' squared' → logprob: -11.594377517700195
    10. ' *' → logprob: -12.469377517700195

Token 238: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1875571544806007e-05
    2. '²' → logprob: -11.875011444091797
    3. ' ' → logprob: -12.625011444091797
    4. '^' → logprob: -14.375011444091797
    5. '```' → logprob: -15.750011444091797
    6. '3' → logprob: -16.250011444091797
    7. '۲' → logprob: -16.437511444091797
    8. ')' → logprob: -16.500011444091797
    9. '
' → logprob: -16.562511444091797
    10. '**' → logprob: -16.625011444091797

Token 239: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018877586349844933
    2. ' )' → logprob: -4.0188775062561035
    3. ')
' → logprob: -7.6438775062561035
    4. 'for' → logprob: -9.393877983093262
    5. ' )
' → logprob: -9.893877983093262
    6. ' for' → logprob: -10.643877983093262
    7. '*' → logprob: -11.518877983093262
    8. ')

' → logprob: -11.643877983093262
    9. '),' → logprob: -11.643877983093262
    10. '):' → logprob: -11.893877983093262

Token 240: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00462688785046339
    2. '
' → logprob: -5.379626750946045
    3. ' for' → logprob: -12.754627227783203
    4. '```' → logprob: -13.129627227783203
    5. '

' → logprob: -13.879627227783203
    6. '
' → logprob: -14.879627227783203
    7. '``' → logprob: -15.754627227783203
    8. '  
' → logprob: -16.504627227783203
    9. 'from' → logprob: -17.254627227783203
    10. ',
' → logprob: -17.504627227783203

Token 241: ' est' (ID: 893)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.0537424087524414
    2. 'est' → logprob: -2.0537424087524414
    3. ' peut' → logprob: -2.3037424087524414
    4. ' est' → logprob: -2.3037424087524414
    5. ' devrait' → logprob: -2.6787424087524414
    6. 'pe' → logprob: -2.8037424087524414
    7. ' pass' → logprob: -3.3037424087524414
    8. ' reste' → logprob: -3.4287424087524414
    9. ' passe' → logprob: -3.8037424087524414
    10. ' va' → logprob: -4.303742408752441

Token 242: ' acceptable' (ID: 34028)
  Prédit: 'acceptable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acceptable' → logprob: -0.4505156874656677
    2. 'possible' → logprob: -1.4505157470703125
    3. 'accept' → logprob: -3.0755157470703125
    4. 'tol' → logprob: -4.0755157470703125
    5. 'tou' → logprob: -4.0755157470703125
    6. 'enc' → logprob: -4.2005157470703125
    7. 'f' → logprob: -4.5755157470703125
    8. 'tout' → logprob: -5.4505157470703125
    9. 'raison' → logprob: -5.7005157470703125
    10. 'poss' → logprob: -6.0755157470703125

Token 243: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01776367612183094
    2. '
' → logprob: -4.142763614654541
    3. ' for' → logprob: -6.517763614654541
    4. '

' → logprob: -8.3927640914917
    5. '
' → logprob: -11.7677640914917
    6. '```' → logprob: -11.7677640914917
    7. '  
' → logprob: -13.3927640914917
    8. ',' → logprob: -13.3927640914917
    9. '``' → logprob: -13.7677640914917
    10. ' 
' → logprob: -14.5177640914917

Token 244: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008509018458425999
    2. '500' → logprob: -5.258509159088135
    3. ' N' → logprob: -5.758509159088135
    4. ' ' → logprob: -9.633508682250977
    5. 'M' → logprob: -10.383508682250977
    6. 'range' → logprob: -12.258508682250977
    7. '
' → logprob: -13.508508682250977
    8. ' range' → logprob: -13.633508682250977
    9. 'j' → logprob: -13.883508682250977
    10. 'n' → logprob: -14.008508682250977

Token 245: '=' (ID: 28)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.057153381407260895
    2. ' for' → logprob: -3.9321534633636475
    3. '=' → logprob: -4.682153224945068
    4. ':' → logprob: -5.057153224945068
    5. '<=' → logprob: -5.182153224945068
    6. 'range' → logprob: -5.307153224945068
    7. ')' → logprob: -6.432153224945068
    8. '```' → logprob: -6.557153224945068
    9. ' range' → logprob: -6.682153224945068
    10. '   ' → logprob: -6.807153224945068

Token 246: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.00015169414109550416
    2. ' ' → logprob: -8.875151634216309
    3. '501' → logprob: -11.750151634216309
    4. 'N' → logprob: -14.125151634216309
    5. '5' → logprob: -14.125151634216309
    6. '510' → logprob: -14.875151634216309
    7. '499' → logprob: -14.875151634216309
    8. '   ' → logprob: -15.000151634216309
    9. '
' → logprob: -15.250151634216309
    10. '  ' → logprob: -15.812651634216309

Token 247: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017228922806680202
    2. '
' → logprob: -6.376722812652588
    3. ' for' → logprob: -10.876723289489746
    4. '```' → logprob: -13.626723289489746
    5. '

' → logprob: -14.751723289489746
    6. '``' → logprob: -16.00172233581543
    7. '
' → logprob: -16.12672233581543
    8. '  
' → logprob: -17.37672233581543
    9. 'from' → logprob: -17.75172233581543
    10. '\
' → logprob: -17.75172233581543

Token 248: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. '
' → logprob: -14.625000953674316
    3. '```' → logprob: -17.0
    4. 'from' → logprob: -17.375
    5. ' for' → logprob: -17.375
    6. 'import' → logprob: -19.625
    7. '  
' → logprob: -20.25
    8. ' 
' → logprob: -20.875
    9. 'fo' → logprob: -20.875
    10. '``' → logprob: -21.25

Token 249: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07220012694597244
    2. ' i' → logprob: -2.697200059890747
    3. 'j' → logprob: -6.197200298309326
    4. ' j' → logprob: -8.447199821472168
    5. 'a' → logprob: -11.822199821472168
    6. 'x' → logprob: -13.822199821472168
    7. '	i' → logprob: -14.072199821472168
    8. ' ' → logprob: -14.697199821472168
    9. ' ' → logprob: -14.697199821472168
    10. 'k' → logprob: -14.822199821472168

Token 250: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0792505219578743
    2. 'in' → logprob: -2.5792505741119385
    3. '1' → logprob: -7.954250335693359
    4. ' ' → logprob: -12.82925033569336
    5. '2' → logprob: -13.20425033569336
    6. 'range' → logprob: -13.57925033569336
    7. 'i' → logprob: -13.82925033569336
    8. '0' → logprob: -13.82925033569336
    9. '```' → logprob: -15.20425033569336
    10. '   ' → logprob: -15.20425033569336

Token 251: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519338130950928
    2. 'in' → logprob: -1.5019338130950928
    3. ' ' → logprob: -12.626934051513672
    4. 'range' → logprob: -14.501934051513672
    5. 'import' → logprob: -15.001934051513672
    6. '   ' → logprob: -16.126934051513672
    7. '  ' → logprob: -16.126934051513672
    8. '	in' → logprob: -16.376934051513672
    9. 'n' → logprob: -16.626934051513672
    10. '1' → logprob: -16.751934051513672

Token 252: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889033854007721
    2. ' range' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.078890800476074
    4. '(range' → logprob: -16.328889846801758
    5. ' in' → logprob: -16.828889846801758
    6. 'in' → logprob: -17.078889846801758
    7. '  ' → logprob: -17.953889846801758
    8. '   ' → logprob: -19.078889846801758
    9. '0' → logprob: -19.453889846801758
    10. 'ran' → logprob: -19.578889846801758

Token 253: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001183204003609717
    2. '(' → logprob: -6.751183032989502
    3. 'N' → logprob: -11.37618350982666
    4. '(n' → logprob: -13.75118350982666
    5. '(len' → logprob: -15.62618350982666
    6. ' (' → logprob: -16.001182556152344
    7. '(
' → logprob: -16.501182556152344
    8. '1' → logprob: -16.876182556152344
    9. '(

' → logprob: -18.376182556152344
    10. '((' → logprob: -18.501182556152344

Token 254: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008928547613322735
    2. '):
' → logprob: -4.7589287757873535
    3. '-' → logprob: -8.133928298950195
    4. ' -' → logprob: -11.508928298950195
    5. ' ):' → logprob: -12.133928298950195
    6. ')' → logprob: -13.008928298950195
    7. '):
' → logprob: -13.508928298950195
    8. '):

' → logprob: -14.633928298950195
    9. '+' → logprob: -14.758928298950195
    10. ':' → logprob: -14.883928298950195

Token 255: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03376740962266922
    2. 'for' → logprob: -3.4087674617767334
    3. '   ' → logprob: -9.533767700195312
    4. '	for' → logprob: -10.908767700195312
    5. ' ' → logprob: -11.158767700195312
    6. ' range' → logprob: -11.533767700195312
    7. 'range' → logprob: -12.783767700195312
    8. ' in' → logprob: -13.033767700195312
    9. ':' → logprob: -14.783767700195312
    10. ' ' → logprob: -15.158767700195312

Token 256: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.796184723294573e-06
    2. ' for' → logprob: -12.625005722045898
    3. '   ' → logprob: -13.000005722045898
    4. 'range' → logprob: -16.6250057220459
    5. 'c' → logprob: -16.7500057220459
    6. '
' → logprob: -17.2500057220459
    7. 'from' → logprob: -18.8750057220459
    8. 'j' → logprob: -19.2500057220459
    9. 'C' → logprob: -20.7500057220459
    10. '    
' → logprob: -20.8750057220459

Token 257: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0015023599844425917
    2. ' j' → logprob: -6.501502513885498
    3. 'range' → logprob: -18.501502990722656
    4. '   ' → logprob: -18.626502990722656
    5. ' range' → logprob: -19.376502990722656
    6. 'N' → logprob: -19.751502990722656
    7. '	j' → logprob: -19.876502990722656
    8. '_j' → logprob: -20.126502990722656
    9. '$j' → logprob: -20.251502990722656
    10. '(j' → logprob: -20.626502990722656

Token 258: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42438286542892456
    2. 'j' → logprob: -1.1743829250335693
    3. ' j' → logprob: -3.6743829250335693
    4. '+' → logprob: -5.04938268661499
    5. '2' → logprob: -6.54938268661499
    6. '(j' → logprob: -7.17438268661499
    7. 'for' → logprob: -7.54938268661499
    8. '+j' → logprob: -7.54938268661499
    9. 'range' → logprob: -7.67438268661499
    10. '   ' → logprob: -8.049383163452148

Token 259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519426941871643
    2. 'in' → logprob: -1.5019426345825195
    3. ' ' → logprob: -11.37694263458252
    4. 'range' → logprob: -13.50194263458252
    5. '	in' → logprob: -15.62694263458252
    6. 'import' → logprob: -15.75194263458252
    7. '  ' → logprob: -16.251943588256836
    8. '1' → logprob: -16.376943588256836
    9. '   ' → logprob: -16.501943588256836
    10. '[' → logprob: -17.501943588256836

Token 260: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815006136894226
    2. ' range' → logprob: -4.0181498527526855
    3. '(range' → logprob: -15.643150329589844
    4. ' ' → logprob: -18.143150329589844
    5. '   ' → logprob: -19.518150329589844
    6. '  ' → logprob: -21.268150329589844
    7. '	range' → logprob: -21.643150329589844
    8. 'Range' → logprob: -21.893150329589844
    9. 'r' → logprob: -22.018150329589844
    10. 'rang' → logprob: -22.143150329589844

Token 261: '(j' (ID: 4997)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.02284659445285797
    2. 'range' → logprob: -4.147846698760986
    3. '(j' → logprob: -5.522846698760986
    4. ' range' → logprob: -6.397846698760986
    5. '(range' → logprob: -7.022846698760986
    6. 'N' → logprob: -8.772846221923828
    7. 'Range' → logprob: -10.522846221923828
    8. '(' → logprob: -10.897846221923828
    9. '   ' → logprob: -11.647846221923828
    10. '(n' → logprob: -11.772846221923828

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0789436548948288
    2. '2' → logprob: -2.5789437294006348
    3. '+' → logprob: -10.078943252563477
    4. ' ' → logprob: -12.578943252563477
    5. '   ' → logprob: -12.953943252563477
    6. '```' → logprob: -13.578943252563477
    7. ')' → logprob: -13.703943252563477
    8. '
' → logprob: -13.703943252563477
    9. ' +' → logprob: -13.953943252563477
    10. 'N' → logprob: -14.953943252563477

Token 263: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007693813648074865
    2. ' +' → logprob: -4.882693767547607
    3. '1' → logprob: -9.382694244384766
    4. '+
' → logprob: -13.757694244384766
    5. '+j' → logprob: -13.757694244384766
    6. '+,' → logprob: -14.632694244384766
    7. '()+' → logprob: -15.632694244384766
    8. '   ' → logprob: -15.757694244384766
    9. 'N' → logprob: -16.007694244384766
    10. ',' → logprob: -16.007694244384766

Token 264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006905130576342344
    2. 'N' → logprob: -7.375690460205078
    3. ' ' → logprob: -9.875690460205078
    4. ' N' → logprob: -11.375690460205078
    5. '   ' → logprob: -14.125690460205078
    6. '2' → logprob: -15.750690460205078
    7. '
' → logprob: -17.250690460205078
    8. 'range' → logprob: -17.625690460205078
    9. '(N' → logprob: -18.000690460205078
    10. ',' → logprob: -18.250690460205078

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036585067864507437
    2. ',N' → logprob: -5.878658294677734
    3. 'N' → logprob: -7.253658294677734
    4. ' ,' → logprob: -9.003658294677734
    5. '(N' → logprob: -10.878658294677734
    6. ' N' → logprob: -14.378658294677734
    7. ',
' → logprob: -14.378658294677734
    8. '<N' → logprob: -14.628658294677734
    9. '_,' → logprob: -14.753658294677734
    10. '(),' → logprob: -14.878658294677734

Token 266: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0052354102954268456
    2. ' N' → logprob: -5.255235195159912
    3. '   ' → logprob: -13.38023567199707
    4. ' ' → logprob: -16.75523567199707
    5. '	N' → logprob: -17.38023567199707
    6. '
' → logprob: -17.75523567199707
    7. '  ' → logprob: -18.88023567199707
    8. '    ' → logprob: -19.50523567199707
    9. '```' → logprob: -20.50523567199707
    10. ')' → logprob: -20.63023567199707

Token 267: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1602407842874527
    2. '):
' → logprob: -1.9102407693862915
    3. '):
' → logprob: -11.66024112701416
    4. ':' → logprob: -12.66024112701416
    5. ' ):' → logprob: -13.41024112701416
    6. '):

' → logprob: -13.41024112701416
    7. ')' → logprob: -13.91024112701416
    8. '   ' → logprob: -14.78524112701416
    9. '+' → logprob: -15.91024112701416
    10. '():' → logprob: -16.035240173339844

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0558459535241127
    2. '   ' → logprob: -3.5558459758758545
    3. 'c' → logprob: -4.055845737457275
    4. ' c' → logprob: -4.930845737457275
    5. '        
' → logprob: -7.680845737457275
    6. '
' → logprob: -8.680846214294434
    7. '    ' → logprob: -8.805846214294434
    8. '    
' → logprob: -9.555846214294434
    9. '	c' → logprob: -9.555846214294434
    10. ' if' → logprob: -9.805846214294434

Token 269: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.002643437124788761
    2. '   ' → logprob: -6.252643585205078
    3. ' c' → logprob: -8.252643585205078
    4. 'total' → logprob: -8.502643585205078
    5. 'combined' → logprob: -9.127643585205078
    6. 'cj' → logprob: -9.627643585205078
    7. '       ' → logprob: -10.252643585205078
    8. 'cc' → logprob: -11.252643585205078
    9. 'if' → logprob: -11.627643585205078
    10. 'sum' → logprob: -12.252643585205078

Token 270: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.571762204170227
    2. ' =' → logprob: -0.946762204170227
    3. '1' → logprob: -3.0717620849609375
    4. '=C' → logprob: -7.3217620849609375
    5. '_' → logprob: -8.446762084960938
    6. '=c' → logprob: -8.696762084960938
    7. 'c' → logprob: -10.571762084960938
    8. '_=' → logprob: -11.821762084960938
    9. 'sum' → logprob: -12.071762084960938
    10. ' ' → logprob: -12.196762084960938

Token 271: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869137763977051
    2. ' =' → logprob: -1.136913776397705
    3. '=C' → logprob: -10.761913299560547
    4. ',' → logprob: -10.886913299560547
    5. '=c' → logprob: -13.636913299560547
    6. 'c' → logprob: -14.761913299560547
    7. ' ' → logprob: -14.761913299560547
    8. '>' → logprob: -15.886913299560547
    9. '   ' → logprob: -16.511913299560547
    10. ' +=' → logprob: -16.511913299560547

Token 272: ' e' (ID: 319)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.35195645689964294
    2. 'e' → logprob: -1.7269564867019653
    3. 'c' → logprob: -2.601956367492676
    4. '=' → logprob: -4.101956367492676
    5. 'E' → logprob: -4.226956367492676
    6. ' =' → logprob: -5.226956367492676
    7. '=C' → logprob: -5.226956367492676
    8. ' C' → logprob: -6.101956367492676
    9. ' e' → logprob: -8.226956367492676
    10. ' c' → logprob: -8.601956367492676

Token 273: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07894696295261383
    2. ' =' → logprob: -2.578947067260742
    3. '=C' → logprob: -10.078947067260742
    4. '1' → logprob: -11.578947067260742
    5. ',' → logprob: -12.328947067260742
    6. ' ' → logprob: -14.203947067260742
    7. '=c' → logprob: -16.078947067260742
    8. '=P' → logprob: -16.578947067260742
    9. 'C' → logprob: -16.703947067260742
    10. '2' → logprob: -17.078947067260742

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12698081135749817
    2. ' =' → logprob: -2.126980781555176
    3. '=C' → logprob: -10.501980781555176
    4. ',' → logprob: -10.626980781555176
    5. '=P' → logprob: -14.751980781555176
    6. '=c' → logprob: -15.001980781555176
    7. '   ' → logprob: -16.001981735229492
    8. ' ' → logprob: -16.126981735229492
    9. '=

' → logprob: -18.376981735229492
    10. 'c' → logprob: -18.626981735229492

Token 275: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01815848983824253
    2. ' C' → logprob: -4.018158435821533
    3. '   ' → logprob: -11.893158912658691
    4. ' ' → logprob: -13.893158912658691
    5. '	C' → logprob: -14.893158912658691
    6. '    ' → logprob: -15.643158912658691
    7. '  ' → logprob: -16.143157958984375
    8. '(C' → logprob: -16.518157958984375
    9. '       ' → logprob: -16.893157958984375
    10. '=C' → logprob: -17.643157958984375

Token 276: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.6060808522743173e-05
    2. '[' → logprob: -10.625025749206543
    3. 'j' → logprob: -13.875025749206543
    4. '[
' → logprob: -14.625025749206543
    5. '[js' → logprob: -15.750025749206543
    6. ' [' → logprob: -17.25002670288086
    7. '[s' → logprob: -17.37502670288086
    8. '[i' → logprob: -17.50002670288086
    9. '[q' → logprob: -17.50002670288086
    10. '[user' → logprob: -17.50002670288086

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. '2' → logprob: -12.625007629394531
    3. 's' → logprob: -14.125007629394531
    4. ' ' → logprob: -14.250007629394531
    5. '[' → logprob: -14.375007629394531
    6. '[j' → logprob: -14.500007629394531
    7. ')' → logprob: -15.375007629394531
    8. '   ' → logprob: -15.750007629394531
    9. ']' → logprob: -15.812507629394531
    10. '```' → logprob: -16.06250762939453

Token 278: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6931921243667603
    2. '],' → logprob: -0.6931921243667603
    3. '   ' → logprob: -11.443192481994629
    4. '),' → logprob: -11.818192481994629
    5. ' ,' → logprob: -12.068192481994629
    6. ']' → logprob: -12.068192481994629
    7. ',E' → logprob: -12.443192481994629
    8. '>,' → logprob: -12.568192481994629
    9. '},' → logprob: -12.943192481994629
    10. '       ' → logprob: -12.943192481994629

Token 279: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.1426779329776764
    2. ' E' → logprob: -2.0176780223846436
    3. '   ' → logprob: -13.767678260803223
    4. ' ' → logprob: -13.767678260803223
    5. '	E' → logprob: -15.267678260803223
    6. '       ' → logprob: -15.892678260803223
    7. '    ' → logprob: -16.392677307128906
    8. '  ' → logprob: -16.517677307128906
    9. '"E' → logprob: -17.017677307128906
    10. ' ' → logprob: -17.142677307128906

Token 280: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007157695363275707
    2. 'j' → logprob: -7.250715732574463
    3. '[' → logprob: -12.250716209411621
    4. '[
' → logprob: -14.625716209411621
    5. '```' → logprob: -16.500715255737305
    6. '(j' → logprob: -16.750715255737305
    7. ' [' → logprob: -16.750715255737305
    8. '][' → logprob: -16.875715255737305
    9. ']' → logprob: -16.875715255737305
    10. '	j' → logprob: -17.375715255737305

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08895112574100494
    2. '2' → logprob: -2.4639511108398438
    3. 'j' → logprob: -11.588951110839844
    4. ']' → logprob: -13.838951110839844
    5. '```' → logprob: -14.213951110839844
    6. ' ' → logprob: -15.338951110839844
    7. '[j' → logprob: -15.338951110839844
    8. '   ' → logprob: -15.838951110839844
    9. '7' → logprob: -17.838951110839844
    10. 'z' → logprob: -17.963951110839844

Token 282: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3869529664516449
    2. ']' → logprob: -1.1369529962539673
    3. ']
' → logprob: -9.636953353881836
    4. ']

' → logprob: -11.511953353881836
    5. '];' → logprob: -13.136953353881836
    6. ' ]
' → logprob: -13.261953353881836
    7. ' ]' → logprob: -14.136953353881836
    8. '],' → logprob: -14.136953353881836
    9. '1' → logprob: -15.511953353881836
    10. '']
' → logprob: -15.636953353881836

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3360646367073059
    2. 'c' → logprob: -2.711064577102661
    3. '        
' → logprob: -2.711064577102661
    4. ' c' → logprob: -2.711064577102661
    5. ' 
' → logprob: -3.211064577102661
    6. ' ' → logprob: -4.21106481552124
    7. '<|end|>' → logprob: -4.21106481552124
    8. '
' → logprob: -5.33606481552124
    9. '  
' → logprob: -5.58606481552124
    10. '        ' → logprob: -6.21106481552124

Token 284: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.07093767821788788
    2. ' c' → logprob: -2.6959376335144043
    3. 'e' → logprob: -7.695937633514404
    4. '       ' → logprob: -7.945937633514404
    5. ' e' → logprob: -10.070938110351562
    6. '        
' → logprob: -10.195938110351562
    7. ',' → logprob: -10.445938110351562
    8. ' 
' → logprob: -10.445938110351562
    9. '	c' → logprob: -11.445938110351562
    10. ' ,' → logprob: -12.070938110351562

Token 285: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.363617962459102e-05
    2. ',' → logprob: -9.875083923339844
    3. '1' → logprob: -10.750083923339844
    4. '=' → logprob: -12.250083923339844
    5. ' ' → logprob: -13.125083923339844
    6. '
' → logprob: -13.375083923339844
    7. ' =' → logprob: -13.625083923339844
    8. '```' → logprob: -14.750083923339844
    9. ' ,' → logprob: -15.375083923339844
    10. '

' → logprob: -16.000083923339844

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.618001053633634e-05
    2. ' ,' → logprob: -10.750025749206543
    3. ',c' → logprob: -13.375025749206543
    4. ',E' → logprob: -13.625025749206543
    5. '=' → logprob: -13.750025749206543
    6. ',e' → logprob: -14.250025749206543
    7. 'c' → logprob: -15.875025749206543
    8. ' =' → logprob: -16.37502670288086
    9. ',C' → logprob: -17.37502670288086
    10. '_,' → logprob: -17.75002670288086

Token 287: ' e' (ID: 319)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.42878127098083496
    2. ' E' → logprob: -1.053781270980835
    3. ' ' → logprob: -10.053781509399414
    4. 'C' → logprob: -10.803781509399414
    5. '   ' → logprob: -12.803781509399414
    6. ' C' → logprob: -12.928781509399414
    7. '  ' → logprob: -13.053781509399414
    8. '       ' → logprob: -13.553781509399414
    9. '<|end|>' → logprob: -13.553781509399414
    10. ' =' → logprob: -14.053781509399414

Token 288: '2' (ID: 17)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.774276774493046e-05
    2. 'j' → logprob: -10.875038146972656
    3. '[' → logprob: -11.125038146972656
    4. '2' → logprob: -12.875038146972656
    5. ' [' → logprob: -15.000038146972656
    6. '[
' → logprob: -15.500038146972656
    7. ',j' → logprob: -15.625038146972656
    8. '=j' → logprob: -15.875038146972656
    9. ' ' → logprob: -16.250038146972656
    10. 'C' → logprob: -16.750038146972656

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761602520942688
    2. ' =' → logprob: -0.8261602520942688
    3. ',' → logprob: -8.451160430908203
    4. ' ' → logprob: -12.451160430908203
    5. '   ' → logprob: -13.076160430908203
    6. '    ' → logprob: -15.201160430908203
    7. ' ,' → logprob: -15.701160430908203
    8. '  ' → logprob: -15.701160430908203
    9. '=C' → logprob: -15.826160430908203
    10. ')' → logprob: -16.076160430908203

Token 290: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6931570172309875
    2. ' C' → logprob: -0.6931570172309875
    3. ' ' → logprob: -12.318157196044922
    4. '   ' → logprob: -12.693157196044922
    5. '	C' → logprob: -14.693157196044922
    6. '    ' → logprob: -15.068157196044922
    7. '       ' → logprob: -15.568157196044922
    8. '  ' → logprob: -15.693157196044922
    9. 'c' → logprob: -15.693157196044922
    10. 'E' → logprob: -15.818157196044922

Token 291: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2664456789934775e-06
    2. 'j' → logprob: -13.875000953674316
    3. ' [' → logprob: -16.375001907348633
    4. '[' → logprob: -16.375001907348633
    5. '[
' → logprob: -17.500001907348633
    6. '
' → logprob: -18.750001907348633
    7. '[i' → logprob: -19.375001907348633
    8. ',j' → logprob: -19.625001907348633
    9. ' j' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.250001907348633

Token 292: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -13.25000286102295
    3. '[' → logprob: -15.62500286102295
    4. '```' → logprob: -15.62500286102295
    5. ' ' → logprob: -16.250001907348633
    6. '

' → logprob: -16.375001907348633
    7. '[j' → logprob: -16.500001907348633
    8. '   ' → logprob: -16.687501907348633
    9. 'j' → logprob: -16.750001907348633
    10. ']' → logprob: -17.250001907348633

Token 293: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0032275060657411814
    2. ']' → logprob: -5.753227710723877
    3. ',' → logprob: -10.503227233886719
    4. ']
' → logprob: -11.378227233886719
    5. ' ],' → logprob: -12.003227233886719
    6. '   ' → logprob: -13.378227233886719
    7. ']

' → logprob: -14.503227233886719
    8. '];' → logprob: -14.503227233886719
    9. ']
' → logprob: -14.628227233886719
    10. ''],' → logprob: -14.753227233886719

Token 294: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.4747352600097656
    2. ' E' → logprob: -0.9747352600097656
    3. 'C' → logprob: -7.974735260009766
    4. ' C' → logprob: -8.724735260009766
    5. '   ' → logprob: -9.474735260009766
    6. ' ' → logprob: -10.349735260009766
    7. '       ' → logprob: -11.099735260009766
    8. '  ' → logprob: -12.099735260009766
    9. '    ' → logprob: -12.474735260009766
    10. 'c' → logprob: -12.724735260009766

Token 295: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0028423182666301727
    2. 'j' → logprob: -5.877842426300049
    3. '2' → logprob: -10.37784194946289
    4. '[' → logprob: -12.12784194946289
    5. ' j' → logprob: -15.12784194946289
    6. ' [' → logprob: -15.50284194946289
    7. '	j' → logprob: -16.50284194946289
    8. '[
' → logprob: -16.75284194946289
    9. '(j' → logprob: -17.00284194946289
    10. '1' → logprob: -17.12784194946289

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.253713218029588e-05
    2. 'j' → logprob: -10.000062942504883
    3. '1' → logprob: -11.250062942504883
    4. '[j' → logprob: -13.750062942504883
    5. ' ' → logprob: -14.125062942504883
    6. '   ' → logprob: -14.375062942504883
    7. '```' → logprob: -14.375062942504883
    8. ']' → logprob: -14.500062942504883
    9. '
' → logprob: -15.750062942504883
    10. '])' → logprob: -16.250062942504883

Token 297: ']

' (ID: 3144)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.47470080852508545
    2. ']' → logprob: -0.9747008085250854
    3. ']
' → logprob: -7.849700927734375
    4. ']

' → logprob: -8.599700927734375
    5. '   ' → logprob: -10.349700927734375
    6. '       ' → logprob: -12.349700927734375
    7. '],' → logprob: -12.724700927734375
    8. ' ]
' → logprob: -13.474700927734375
    9. '1' → logprob: -13.599700927734375
    10. ']

' → logprob: -13.974700927734375

Token 298: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.055749788880348206
    2. 'for' → logprob: -3.5557498931884766
    3. 'total' → logprob: -4.430749893188477
    4. '       ' → logprob: -5.305749893188477
    5. 'max' → logprob: -5.680749893188477
    6. '   ' → logprob: -6.180749893188477
    7. ' if' → logprob: -7.055749893188477
    8. 'c' → logprob: -7.305749893188477
    9. 'k' → logprob: -7.930749893188477
    10. 'count' → logprob: -8.055749893188477

Token 299: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009538847953081131
    2. 'total' → logprob: -5.009538650512695
    3. 'for' → logprob: -6.009538650512695
    4. 'max' → logprob: -8.634538650512695
    5. 'combined' → logprob: -9.759538650512695
    6. '#' (adapté à ' #') → logprob: -9.884538650512695
    7. 'c' → logprob: -10.259538650512695
    8. '   ' → logprob: -11.634538650512695
    9. 'count' → logprob: -11.884538650512695
    10. ' if' → logprob: -11.884538650512695

Token 300: ' prendre' (ID: 24257)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0025288143660873175
    2. 'total' → logprob: -6.002528667449951
    3. 'for' → logprob: -10.37752914428711
    4. ' if' → logprob: -12.00252914428711
    5. 'combined' → logprob: -12.12752914428711
    6. 'max' → logprob: -12.50252914428711
    7. '   ' → logprob: -13.00252914428711
    8. '#' → logprob: -13.87752914428711
    9. 's' → logprob: -14.00252914428711
    10. 'c' → logprob: -14.75252914428711

Token 301: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08369604498147964
    2. ' c' → logprob: -3.083696126937866
    3. 'min' → logprob: -3.583696126937866
    4. ' min' → logprob: -5.333695888519287
    5. 'P' → logprob: -7.208695888519287
    6. 'if' → logprob: -7.583695888519287
    7. 'max' → logprob: -8.333696365356445
    8. ' P' → logprob: -8.833696365356445
    9. '   ' → logprob: -9.333696365356445
    10. ' if' → logprob: -10.208696365356445

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008619115105830133
    2. ' =' → logprob: -7.250862121582031
    3. '=' → logprob: -9.125862121582031
    4. '_' → logprob: -11.375862121582031
    5. '=c' → logprob: -11.750862121582031
    6. '_total' → logprob: -12.625862121582031
    7. 's' → logprob: -13.250862121582031
    8. ' ' → logprob: -13.375862121582031
    9. '12' → logprob: -13.375862121582031
    10. '

' → logprob: -13.625862121582031

Token 303: '+c' (ID: 114860)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.36571481823921204
    2. '+c' → logprob: -1.6157147884368896
    3. '+' → logprob: -2.2407147884368896
    4. 'c' → logprob: -8.615715026855469
    5. 'man' → logprob: -8.740715026855469
    6. '+C' → logprob: -9.240715026855469
    7. '+p' → logprob: -9.365715026855469
    8. '   ' → logprob: -9.615715026855469
    9. ' =' → logprob: -9.865715026855469
    10. '=' → logprob: -9.990715026855469

Token 304: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6337736248970032
    2. '2' → logprob: -0.7587736248970032
    3. 'c' → logprob: -7.0087738037109375
    4. '```' → logprob: -9.508773803710938
    5. '_' → logprob: -10.008773803710938
    6. '#' → logprob: -10.008773803710938
    7. '_c' → logprob: -10.883773803710938
    8. ' c' → logprob: -10.883773803710938
    9. ' ' → logprob: -10.883773803710938
    10. '   ' → logprob: -12.383773803710938

Token 305: ' man' (ID: 873)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.4596898555755615
    2. ' man' → logprob: -1.3346898555755615
    3. ' <=' → logprob: -2.9596898555755615
    4. '   ' → logprob: -3.8346898555755615
    5. ' if' → logprob: -4.334690093994141
    6. ' =' → logprob: -5.584690093994141
    7. '<=' → logprob: -5.834690093994141
    8. '_man' → logprob: -6.209690093994141
    9. 'if' → logprob: -6.584690093994141
    10. '       ' → logprob: -6.709690093994141

Token 306: 'ju' (ID: 4734)
  Prédit: 'ju'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ju' → logprob: -0.07948672026395798
    2. 'jus' → logprob: -2.579486608505249
    3. 'j' → logprob: -7.954486846923828
    4. '1' → logprob: -9.954486846923828
    5. '   ' → logprob: -9.954486846923828
    6. 'aju' → logprob: -10.954486846923828
    7. '```' → logprob: -11.079486846923828
    8. '       ' → logprob: -11.454486846923828
    9. 'juju' → logprob: -11.579486846923828
    10. 'jos' → logprob: -11.579486846923828

Token 307: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.01765909604728222
    2. 's' → logprob: -4.6426591873168945
    3. 'u' → logprob: -5.5176591873168945
    4. 'uus' → logprob: -7.0176591873168945
    5. 'P' → logprob: -7.6426591873168945
    6. 'su' → logprob: -7.6426591873168945
    7. '```' → logprob: -8.017659187316895
    8. '=' → logprob: -8.267659187316895
    9. '   ' → logprob: -8.517659187316895
    10. '#' → logprob: -8.517659187316895

Token 308: ' les' (ID: 1341)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6751284003257751
    2. '       ' → logprob: -1.30012845993042
    3. '<|end|>' → logprob: -1.80012845993042
    4. 'if' → logprob: -4.30012845993042
    5. '<|end|>' → logprob: -4.67512845993042
    6. '        
' → logprob: -4.67512845993042
    7. ' =' → logprob: -5.05012845993042
    8. ',' → logprob: -5.80012845993042
    9. '
' → logprob: -5.92512845993042
    10. '=' → logprob: -6.05012845993042

Token 309: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.005684291943907738
    2. 'chers' → logprob: -5.3806843757629395
    3. 'cher' → logprob: -7.8806843757629395
    4. ' plus' → logprob: -8.005683898925781
    5. 'moins' → logprob: -8.380683898925781
    6. '+' → logprob: -10.505683898925781
    7. ' chers' → logprob: -10.630683898925781
    8. '   ' → logprob: -10.880683898925781
    9. '_plus' → logprob: -11.880683898925781
    10. 'chars' → logprob: -12.130683898925781

Token 310: ' chers' (ID: 152766)
  Prédit: 'chers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chers' → logprob: -0.04229576140642166
    2. ' chers' → logprob: -3.2922956943511963
    3. 'cher' → logprob: -5.542295932769775
    4. 'ch' → logprob: -8.042295455932617
    5. ' cher' → logprob: -14.167295455932617
    6. 'd' → logprob: -14.167295455932617
    7. '   ' → logprob: -14.292295455932617
    8. 'ches' → logprob: -14.417295455932617
    9. 'chants' → logprob: -14.417295455932617
    10. 'chars' → logprob: -14.542295455932617

Token 311: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004207563120871782
    2. ' if' → logprob: -6.129207611083984
    3. 'if' → logprob: -6.379207611083984
    4. 'total' → logprob: -8.504207611083984
    5. ',' → logprob: -9.879207611083984
    6. '        
' → logprob: -10.629207611083984
    7. ' total' → logprob: -11.004207611083984
    8. '   ' → logprob: -11.629207611083984
    9. '
' → logprob: -11.879207611083984
    10. '```' → logprob: -12.879207611083984

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015547533519566059
    2. 'if' → logprob: -4.390547752380371
    3. ' if' → logprob: -6.140547752380371
    4. 'total' → logprob: -7.140547752380371
    5. 'count' → logprob: -10.640547752380371
    6. ' total' → logprob: -10.890547752380371
    7. 'num' → logprob: -11.640547752380371
    8. '        
' → logprob: -11.765547752380371
    9. ',' → logprob: -12.265547752380371
    10. 'c' → logprob: -12.390547752380371

Token 313: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.29340168833732605
    2. ' if' → logprob: -2.4184017181396484
    3. 'total' → logprob: -2.4184017181396484
    4. 'c' → logprob: -2.9184017181396484
    5. 'count' → logprob: -5.043401718139648
    6. ' total' → logprob: -5.168401718139648
    7. '       ' → logprob: -5.293401718139648
    8. 'max' → logprob: -5.918401718139648
    9. ' c' → logprob: -7.043401718139648
    10. 'num' → logprob: -8.043401718139648

Token 314: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023264113813638687
    2. ' c' → logprob: -3.773264169692993
    3. '   ' → logprob: -11.523263931274414
    4. '(c' → logprob: -12.148263931274414
    5. ' (' → logprob: -13.023263931274414
    6. '	c' → logprob: -14.273263931274414
    7. ' ' → logprob: -14.523263931274414
    8. '  ' → logprob: -17.148263931274414
    9. '
' → logprob: -17.898263931274414
    10. '(' → logprob: -18.023263931274414

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0868278524139896e-05
    2. 'c' → logprob: -10.00006103515625
    3. '_' → logprob: -12.62506103515625
    4. ' c' → logprob: -12.75006103515625
    5. ' ' → logprob: -13.12506103515625
    6. '   ' → logprob: -13.75006103515625
    7. '>' → logprob: -13.75006103515625
    8. '#' → logprob: -14.25006103515625
    9. '
' → logprob: -14.37506103515625
    10. ' >' → logprob: -14.50006103515625

Token 316: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02571873925626278
    2. '+c' → logprob: -3.9007186889648438
    3. ' +' → logprob: -5.275718688964844
    4. '>' → logprob: -10.275718688964844
    5. '+C' → logprob: -11.650718688964844
    6. '+=' → logprob: -13.275718688964844
    7. '+
' → logprob: -13.650718688964844
    8. 'c' → logprob: -14.275718688964844
    9. '＋' → logprob: -15.025718688964844
    10. ' ' → logprob: -15.150718688964844

Token 317: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.038042984902858734
    2. ' c' → logprob: -3.2880430221557617
    3. ' ' → logprob: -13.663043022155762
    4. '   ' → logprob: -15.288043022155762
    5. '	c' → logprob: -15.788043022155762
    6. '  ' → logprob: -17.413042068481445
    7. '_c' → logprob: -17.913042068481445
    8. '
' → logprob: -18.538042068481445
    9. '1' → logprob: -19.038042068481445
    10. '```' → logprob: -19.038042068481445

Token 318: '2' (ID: 17)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8990757465362549
    2. '2' → logprob: -1.0240757465362549
    3. '>' → logprob: -1.6490757465362549
    4. ' ' → logprob: -4.024075508117676
    5. '<|end|>' → logprob: -4.399075508117676
    6. '1' → logprob: -5.899075508117676
    7. ' <=' → logprob: -6.149075508117676
    8. '<=' → logprob: -6.399075508117676
    9. '>M' → logprob: -6.649075508117676
    10. '```' → logprob: -7.399075508117676

Token 319: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4740830957889557
    2. ' >' → logprob: -0.9740830659866333
    3. '<=' → logprob: -12.599082946777344
    4. ' <=' → logprob: -12.974082946777344
    5. ' ' → logprob: -15.349082946777344
    6. '>=' → logprob: -16.724082946777344
    7. '>
' → logprob: -17.349082946777344
    8. '   ' → logprob: -17.599082946777344
    9. ' >
' → logprob: -17.724082946777344
    10. '>C' → logprob: -17.724082946777344

Token 320: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.25192928314208984
    2. 'M' → logprob: -1.5019292831420898
    3. ' ' → logprob: -15.75192928314209
    4. '   ' → logprob: -17.126930236816406
    5. '	M' → logprob: -19.001930236816406
    6. ' ' → logprob: -19.376930236816406
    7. '>M' → logprob: -19.626930236816406
    8. '  ' → logprob: -20.501930236816406
    9. '<M' → logprob: -20.501930236816406
    10. 'm' → logprob: -20.501930236816406

Token 321: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35123783349990845
    2. ':
' → logprob: -1.2262377738952637
    3. '       ' → logprob: -6.226237773895264
    4. '           ' → logprob: -7.351237773895264
    5. '   ' → logprob: -9.976238250732422
    6. '):
' → logprob: -10.226238250732422
    7. ',' → logprob: -11.101238250732422
    8. ':
' → logprob: -11.101238250732422
    9. ':c' → logprob: -11.476238250732422
    10. ' c' → logprob: -11.601238250732422

Token 322: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7860049605369568
    2. ' c' → logprob: -1.2860050201416016
    3. 'c' → logprob: -1.5360050201416016
    4. ' continue' → logprob: -3.7860050201416016
    5. '       ' → logprob: -4.161005020141602
    6. 'continue' → logprob: -4.411005020141602
    7. '               ' → logprob: -6.286005020141602
    8. '                   ' → logprob: -9.911005020141602
    9. '                       ' → logprob: -10.161005020141602
    10. '          ' → logprob: -10.286005020141602

Token 323: ' continue' (ID: 4901)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15252459049224854
    2. 'continue' (adapté à ' continue') → logprob: -2.027524471282959
    3. ' continue' → logprob: -5.277524471282959
    4. '           ' → logprob: -6.152524471282959
    5. ' c' → logprob: -6.402524471282959
    6. '   ' → logprob: -7.902524471282959
    7. 'M' → logprob: -8.402524948120117
    8. '       ' → logprob: -8.652524948120117
    9. '               ' → logprob: -10.652524948120117
    10. 'continu' → logprob: -11.152524948120117

Token 324: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022856220602989197
    2. '        
' → logprob: -6.127285480499268
    3. '
' → logprob: -9.502285957336426
    4. '  
' → logprob: -12.002285957336426
    5. '            
' → logprob: -12.127285957336426
    6. '       
' → logprob: -12.752285957336426
    7. '           ' → logprob: -13.377285957336426
    8. '    
' → logprob: -13.752285957336426
    9. ' ' → logprob: -13.877285957336426
    10. ' 
' → logprob: -13.877285957336426

Token 325: '       ' (ID: 309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6336444020271301
    2. '       ' → logprob: -0.7586444020271301
    3. ' total' → logprob: -7.1336445808410645
    4. '   ' → logprob: -9.133644104003906
    5. 'price' → logprob: -10.133644104003906
    6. '        
' → logprob: -10.508644104003906
    7. '
' → logprob: -10.633644104003906
    8. 'profit' → logprob: -11.008644104003906
    9. '           ' → logprob: -11.633644104003906
    10. 'subtotal' → logprob: -11.883644104003906

Token 326: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0087516784551553e-05
    2. 'combined' → logprob: -12.25001049041748
    3. 'profit' → logprob: -12.87501049041748
    4. 'price' → logprob: -13.75001049041748
    5. '       ' → logprob: -14.50001049041748
    6. ' total' → logprob: -15.00001049041748
    7. 'if' → logprob: -15.37501049041748
    8. 'sum' → logprob: -15.50001049041748
    9. '           ' → logprob: -16.000009536743164
    10. '   ' → logprob: -16.250009536743164

Token 327: ' pour' (ID: 1930)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0011848729336634278
    2. 'profit' → logprob: -7.626184940338135
    3. 'combined' → logprob: -8.501184463500977
    4. 'sum' → logprob: -8.751184463500977
    5. 'price' → logprob: -8.751184463500977
    6. 'cost' → logprob: -9.251184463500977
    7. 'if' → logprob: -10.501184463500977
    8. ' total' → logprob: -11.751184463500977
    9. 'selected' → logprob: -11.876184463500977
    10. 'subtotal' → logprob: -12.251184463500977

Token 328: ' simplicité' (ID: 189166)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8995187878608704
    2. 'j' → logprob: -1.6495187282562256
    3. 'i' → logprob: -1.7745187282562256
    4. 'k' → logprob: -2.6495187282562256
    5. ' c' → logprob: -3.8995187282562256
    6. ' j' → logprob: -3.8995187282562256
    7. 'profit' → logprob: -3.8995187282562256
    8. 'total' → logprob: -4.024518966674805
    9. ' i' → logprob: -4.399518966674805
    10. 'p' → logprob: -4.774518966674805

Token 329: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011055837385356426
    2. 'total' → logprob: -5.136055946350098
    3. ' total' → logprob: -5.511055946350098
    4. ',' → logprob: -7.011055946350098
    5. '        
' → logprob: -10.136055946350098
    6. '
' → logprob: -10.261055946350098
    7. '           ' → logprob: -10.511055946350098
    8. '   ' → logprob: -10.886055946350098
    9. ' ,' → logprob: -11.511055946350098
    10. ',total' → logprob: -11.886055946350098

Token 330: ' répart' (ID: 147636)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3183789849281311
    2. '       ' → logprob: -2.3183789253234863
    3. ' continue' → logprob: -3.0683789253234863
    4. ' prend' → logprob: -3.8183789253234863
    5. 'ass' → logprob: -4.193378925323486
    6. 'tr' → logprob: -4.443378925323486
    7. '#' → logprob: -4.693378925323486
    8. ' suppose' → logprob: -4.818378925323486
    9. 'calc' → logprob: -5.068378925323486
    10. ' calc' → logprob: -5.193378925323486

Token 331: 'it' (ID: 278)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00015788905147928745
    2. 'it' → logprob: -9.625158309936523
    3. 'tir' → logprob: -10.500158309936523
    4. 'ition' → logprob: -11.625158309936523
    5. 'er' → logprob: -11.875158309936523
    6. 'irt' → logprob: -12.000158309936523
    7. '   ' → logprob: -12.125158309936523
    8. 'irer' → logprob: -12.250158309936523
    9. 'ager' → logprob: -12.500158309936523
    10. 'ire' → logprob: -12.500158309936523

Token 332: ' c' (ID: 274)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.21753153204917908
    2. 'les' → logprob: -1.8425315618515015
    3. 'c' → logprob: -4.592531681060791
    4. 'man' → logprob: -5.217531681060791
    5. ' the' → logprob: -5.467531681060791
    6. ' c' → logprob: -5.842531681060791
    7. 'the' → logprob: -6.217531681060791
    8. 'P' → logprob: -6.467531681060791
    9. ' P' → logprob: -6.592531681060791
    10. ' la' → logprob: -6.592531681060791

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005735247395932674
    2. '_' → logprob: -7.750573635101318
    3. 'c' → logprob: -9.87557315826416
    4. '   ' → logprob: -11.00057315826416
    5. ' ' → logprob: -11.12557315826416
    6. ' =' → logprob: -12.00057315826416
    7. '_c' → logprob: -12.00057315826416
    8. ',' → logprob: -12.12557315826416
    9. '=' → logprob: -12.25057315826416
    10. ' _' → logprob: -12.62557315826416

Token 334: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9874483942985535
    2. ' =' → logprob: -2.2374484539031982
    3. ' +' → logprob: -2.3624484539031982
    4. '=' → logprob: -2.4874484539031982
    5. 'man' → logprob: -2.6124484539031982
    6. ',' → logprob: -2.7374484539031982
    7. 'c' → logprob: -3.1124484539031982
    8. '+c' → logprob: -3.2374484539031982
    9. ' and' → logprob: -3.8624484539031982
    10. 'and' → logprob: -4.237448215484619

Token 335: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014192530885338783
    2. ' c' → logprob: -4.264192581176758
    3. ' ' → logprob: -11.389192581176758
    4. '1' → logprob: -12.264192581176758
    5. '0' → logprob: -12.389192581176758
    6. '...' → logprob: -13.264192581176758
    7. '
' → logprob: -13.764192581176758
    8. 'P' → logprob: -13.951692581176758
    9. '   ' → logprob: -14.201692581176758
    10. '(c' → logprob: -14.514192581176758

Token 336: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005251899361610413
    2. '1' → logprob: -5.255251884460449
    3. 'c' → logprob: -11.00525188446045
    4. ' ' → logprob: -14.13025188446045
    5. '```' → logprob: -15.00525188446045
    6. ' c' → logprob: -16.130252838134766
    7. '   ' → logprob: -17.255252838134766
    8. 's' → logprob: -17.505252838134766
    9. '_' → logprob: -17.567752838134766
    10. '２' → logprob: -17.630252838134766

Token 337: ' man' (ID: 873)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.35917142033576965
    2. ' man' → logprob: -1.2341713905334473
    3. 'c' → logprob: -6.234171390533447
    4. ' entre' → logprob: -6.734171390533447
    5. '_man' → logprob: -6.859171390533447
    6. '#' → logprob: -7.109171390533447
    7. '=' → logprob: -7.234171390533447
    8. ' c' → logprob: -7.484171390533447
    9. 's' → logprob: -7.734171390533447
    10. ' =' → logprob: -7.859171390533447

Token 338: 'ju' (ID: 4734)
  Prédit: 'ju'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ju' → logprob: -0.008690322749316692
    2. 'jus' → logprob: -4.758690357208252
    3. 'j' → logprob: -10.008689880371094
    4. 'juju' → logprob: -11.383689880371094
    5. 'juje' → logprob: -12.383689880371094
    6. '```' → logprob: -13.258689880371094
    7. 'jug' → logprob: -13.633689880371094
    8. 'uju' → logprob: -13.758689880371094
    9. '   ' → logprob: -13.883689880371094
    10. 'su' → logprob: -14.133689880371094

Token 339: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0010777069255709648
    2. 'jus' → logprob: -8.001077651977539
    3. 's' → logprob: -8.626077651977539
    4. 'su' → logprob: -8.626077651977539
    5. 'u' → logprob: -9.251077651977539
    6. 'sus' → logprob: -10.376077651977539
    7. 'cus' → logprob: -10.751077651977539
    8. '#' → logprob: -11.001077651977539
    9. '   ' → logprob: -11.251077651977539
    10. 'uus' → logprob: -11.376077651977539

Token 340: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2782511711120605
    2. 'between' → logprob: -1.4032511711120605
    3. 'man' → logprob: -1.9032511711120605
    4. ' between' → logprob: -2.6532511711120605
    5. ' entre' → logprob: -3.0282511711120605
    6. '#' → logprob: -3.0282511711120605
    7. 'sur' → logprob: -3.7782511711120605
    8. 'total' → logprob: -4.2782511711120605
    9. 's' → logprob: -4.2782511711120605
    10. ',' → logprob: -4.5282511711120605

Token 341: ' ' (ID: 220)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.1693025827407837
    2. ' deux' → logprob: -1.4193025827407837
    3. 'c' → logprob: -1.6693025827407837
    4. 'de' → logprob: -1.9193025827407837
    5. ' P' → logprob: -3.044302463531494
    6. ' c' → logprob: -3.669302463531494
    7. 'two' → logprob: -4.294302463531494
    8. '2' → logprob: -4.544302463531494
    9. ' ' → logprob: -5.544302463531494
    10. ' two' → logprob: -5.794302463531494

Token 342: '2' (ID: 17)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9507842659950256
    2. 'P' → logprob: -1.0757842063903809
    3. 'c' → logprob: -1.4507842063903809
    4. 'two' → logprob: -4.200784206390381
    5. '[c' → logprob: -4.700784206390381
    6. '2' → logprob: -5.325784206390381
    7. '[P' → logprob: -5.950784206390381
    8. ' deux' → logprob: -6.450784206390381
    9. 'une' → logprob: -7.450784206390381
    10. '[' → logprob: -7.450784206390381

Token 343: ' groupes' (ID: 72206)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.3652796447277069
    2. 'parts' → logprob: -1.6152796745300293
    3. 'part' → logprob: -3.1152796745300293
    4. 'tr' → logprob: -3.8652796745300293
    5. ' parties' → logprob: -4.740279674530029
    6. 's' → logprob: -5.115279674530029
    7. ' groupes' → logprob: -5.240279674530029
    8. 'groups' → logprob: -5.490279674530029
    9. 'pa' → logprob: -6.365279674530029
    10. 'segments' → logprob: -6.490279674530029

Token 344: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03573431447148323
    2. ',' → logprob: -3.5357344150543213
    3. '        
' → logprob: -6.535734176635742
    4. '<|end|>' → logprob: -7.035734176635742
    5. ':' → logprob: -7.285734176635742
    6. ' for' → logprob: -7.410734176635742
    7. ' ,' → logprob: -8.285734176635742
    8. '.' → logprob: -8.535734176635742
    9. '        ' → logprob: -8.785734176635742
    10. ' =' → logprob: -9.035734176635742

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008854701183736324
    2. '        
' → logprob: -5.758854866027832
    3. '           ' → logprob: -6.633854866027832
    4. '
' → logprob: -7.008854866027832
    5. ' if' → logprob: -7.133854866027832
    6. 'for' → logprob: -7.633854866027832
    7. ' for' → logprob: -7.758854866027832
    8. 'if' → logprob: -7.883854866027832
    9. ' c' → logprob: -8.133854866027832
    10. ' P' → logprob: -9.008854866027832

Token 346: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25366488099098206
    2. ' for' → logprob: -2.378664970397949
    3. '       ' → logprob: -2.628664970397949
    4. '#' (adapté à ' #') → logprob: -4.128664970397949
    5. 'if' → logprob: -4.378664970397949
    6. 'c' → logprob: -5.003664970397949
    7. ' if' → logprob: -5.628664970397949
    8. 'group' → logprob: -5.753664970397949
    9. 'continue' → logprob: -5.753664970397949
    10. 'max' → logprob: -6.253664970397949

Token 347: ' on' (ID: 402)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.4044873118400574
    2. '#' → logprob: -1.6544873714447021
    3. 'for' → logprob: -2.904487371444702
    4. 'g' → logprob: -3.779487371444702
    5. 'P' → logprob: -4.029487133026123
    6. 'if' → logprob: -4.654487133026123
    7. 'price' → logprob: -5.154487133026123
    8. 'prices' → logprob: -5.279487133026123
    9. 'c' → logprob: -5.904487133026123
    10. 'max' → logprob: -6.029487133026123

Token 348: ' prend' (ID: 37463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3780288696289062
    2. 'continue' → logprob: -1.3780288696289062
    3. ' continue' → logprob: -1.8780288696289062
    4. 'if' → logprob: -2.8780288696289062
    5. '       ' → logprob: -3.0030288696289062
    6. '#' → logprob: -3.2530288696289062
    7. ' prends' → logprob: -3.8780288696289062
    8. 'tr' → logprob: -4.003028869628906
    9. ' prend' → logprob: -4.003028869628906
    10. 's' → logprob: -4.003028869628906

Token 349: ' les' (ID: 1341)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.12467185407876968
    2. ' P' → logprob: -2.4996719360351562
    3. 'c' → logprob: -3.4996719360351562
    4. ' c' → logprob: -5.624671936035156
    5. 'max' → logprob: -8.249671936035156
    6. 'C' → logprob: -8.749671936035156
    7. 'sum' → logprob: -8.874671936035156
    8. 'min' → logprob: -9.374671936035156
    9. '[' → logprob: -9.749671936035156
    10. 'the' → logprob: -9.999671936035156

Token 350: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2571963369846344
    2. 'P' → logprob: -1.757196307182312
    3. ' c' → logprob: -3.3821964263916016
    4. ' P' → logprob: -4.007196426391602
    5. 'first' → logprob: -7.882196426391602
    6. 'most' → logprob: -8.382196426391602
    7. ' first' → logprob: -8.382196426391602
    8. '[c' → logprob: -8.757196426391602
    9. 'plus' → logprob: -9.132196426391602
    10. 'max' → logprob: -9.132196426391602

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -12.812515258789062
    3. 'man' → logprob: -13.000015258789062
    4. '2' → logprob: -13.062515258789062
    5. 'c' → logprob: -13.812515258789062
    6. '
' → logprob: -14.375015258789062
    7. '[' → logprob: -14.500015258789062
    8. '+' → logprob: -14.937515258789062
    9. 'first' → logprob: -15.375015258789062
    10. '   ' → logprob: -15.375015258789062

Token 352: ' plus' (ID: 2932)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.771047055721283
    2. ' plus' → logprob: -1.2710471153259277
    3. ' +' → logprob: -2.5210471153259277
    4. '+' → logprob: -2.6460471153259277
    5. 'plus' → logprob: -3.2710471153259277
    6. ' man' → logprob: -3.7710471153259277
    7. ' premiers' → logprob: -4.396047115325928
    8. 'most' → logprob: -4.771047115325928
    9. '+c' → logprob: -5.271047115325928
    10. ' most' → logprob: -5.396047115325928

Token 353: ' chers' (ID: 152766)
  Prédit: ' chers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chers' → logprob: -0.22535113990306854
    2. 'chers' → logprob: -1.850351095199585
    3. 'cher' → logprob: -4.225351333618164
    4. ' grands' → logprob: -4.725351333618164
    5. 'ieurs' → logprob: -5.725351333618164
    6. '_' → logprob: -5.975351333618164
    7. 'haut' → logprob: -6.350351333618164
    8. 'd' → logprob: -6.725351333618164
    9. '   ' → logprob: -6.725351333618164
    10. 'gr' → logprob: -6.725351333618164

Token 354: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5787489414215088
    2. '       ' → logprob: -1.4537489414215088
    3. ' and' → logprob: -2.953748941421509
    4. ' ,' → logprob: -2.953748941421509
    5. '<|end|>' → logprob: -3.078748941421509
    6. 'and' → logprob: -4.07874870300293
    7. '   ' → logprob: -4.20374870300293
    8. 'man' → logprob: -5.57874870300293
    9. '<|end|>' → logprob: -5.95374870300293
    10. ' +' → logprob: -5.95374870300293

Token 355: ' les' (ID: 1341)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0008301171474158764
    2. ' P' → logprob: -7.125830173492432
    3. 'the' → logprob: -11.500829696655273
    4. 'la' → logprob: -13.000829696655273
    5. '[P' → logprob: -13.125829696655273
    6. '=P' → logprob: -13.500829696655273
    7. '   ' → logprob: -13.875829696655273
    8. ':P' → logprob: -13.875829696655273
    9. '[:' → logprob: -14.000829696655273
    10. 'le' → logprob: -14.250829696655273

Token 356: ' c' (ID: 274)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.03128092736005783
    2. ' P' → logprob: -3.531280994415283
    3. '[:' → logprob: -6.781280994415283
    4. 'c' → logprob: -8.781280517578125
    5. ' ' → logprob: -9.531280517578125
    6. ':' → logprob: -10.156280517578125
    7. ':P' → logprob: -10.406280517578125
    8. '[' → logprob: -11.531280517578125
    9. 'first' → logprob: -11.968780517578125
    10. ' first' → logprob: -12.031280517578125

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005313486326485872
    2. 'c' → logprob: -9.625531196594238
    3. 'P' → logprob: -9.938031196594238
    4. '[' → logprob: -9.938031196594238
    5. ':' → logprob: -10.188031196594238
    6. '[:' → logprob: -10.188031196594238
    7. '+' → logprob: -10.313031196594238
    8. '```' → logprob: -10.750531196594238
    9. '#' → logprob: -10.875531196594238
    10. ':P' → logprob: -11.188031196594238

Token 358: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.03920884057879448
    2. '+' → logprob: -3.9142088890075684
    3. ' +' → logprob: -4.164208889007568
    4. 'c' → logprob: -6.914208889007568
    5. '+j' → logprob: -8.16420841217041
    6. '+k' → logprob: -8.28920841217041
    7. '+s' → logprob: -8.28920841217041
    8. 'plus' → logprob: -8.41420841217041
    9. 'tokens' → logprob: -8.53920841217041
    10. '_plus' → logprob: -9.16420841217041

Token 359: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '1' → logprob: -15.625000953674316
    4. '２' → logprob: -16.875
    5. '_' → logprob: -17.0
    6. '₂' → logprob: -17.25
    7. '۲' → logprob: -17.5
    8. '   ' → logprob: -19.0625
    9. '२' → logprob: -19.25
    10. '```' → logprob: -19.25

Token 360: ' man' (ID: 873)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.14875976741313934
    2. 'tokens' → logprob: -2.5237598419189453
    3. ' man' → logprob: -4.398759841918945
    4. ' premiers' → logprob: -4.523759841918945
    5. '+' → logprob: -4.648759841918945
    6. '<|end|>' → logprob: -5.023759841918945
    7. ' plus' → logprob: -5.523759841918945
    8. ' tokens' → logprob: -5.898759841918945
    9. 'plus' → logprob: -6.148759841918945
    10. ' +' → logprob: -6.648759841918945

Token 361: 'ju' (ID: 4734)
  Prédit: 'ju'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ju' → logprob: -0.4304139316082001
    2. 'jus' → logprob: -1.0554139614105225
    3. 'j' → logprob: -6.430413722991943
    4. '[' → logprob: -11.180414199829102
    5. 'just' → logprob: -11.180414199829102
    6. '```' → logprob: -11.430414199829102
    7. 'juju' → logprob: -11.930414199829102
    8. 'J' → logprob: -12.055414199829102
    9. '(' → logprob: -12.055414199829102
    10. 'js' → logprob: -12.680414199829102

Token 362: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.007981588132679462
    2. 'u' → logprob: -5.757981777191162
    3. 'su' → logprob: -6.382981777191162
    4. 's' → logprob: -7.257981777191162
    5. 'uus' → logprob: -7.632981777191162
    6. 'jus' → logprob: -7.757981777191162
    7. 'P' → logprob: -7.757981777191162
    8. '```' → logprob: -8.382981300354004
    9. 'sus' → logprob: -8.757981300354004
    10. '   ' → logprob: -9.257981300354004

Token 363: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009591279551386833
    2. 's' → logprob: -5.384591102600098
    3. ',' → logprob: -5.634591102600098
    4. '   ' → logprob: -7.759591102600098
    5. '           ' → logprob: -9.134591102600098
    6. 'es' → logprob: -10.009591102600098
    7. 'man' → logprob: -10.009591102600098
    8. 'group' → logprob: -10.009591102600098
    9. 'ues' → logprob: -10.134591102600098
    10. ' and' → logprob: -10.259591102600098

Token 364: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4190344512462616
    2. ' j' → logprob: -2.544034481048584
    3. 'le' → logprob: -2.669034481048584
    4. 'la' → logprob: -3.169034481048584
    5. 'les' → logprob: -3.169034481048584
    6. 'max' → logprob: -3.419034481048584
    7. 'c' → logprob: -3.419034481048584
    8. 'l' → logprob: -5.294034481048584
    9. ' la' → logprob: -5.294034481048584
    10. ' le' → logprob: -5.419034481048584

Token 365: ' boite' (ID: 141233)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.20678307116031647
    2. 'j' → logprob: -2.3317830562591553
    3. 'plus' → logprob: -3.5817830562591553
    4. 'c' → logprob: -3.9567830562591553
    5. 'bo' → logprob: -4.206783294677734
    6. 'first' → logprob: -5.206783294677734
    7. '1' → logprob: -5.956783294677734
    8. ' première' → logprob: -6.331783294677734
    9. 'box' → logprob: -6.706783294677734
    10. 'calcul' → logprob: -6.831783294677734

Token 366: ' ' (ID: 220)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0878206416964531
    2. 's' → logprob: -3.837820529937744
    3. ',' → logprob: -4.337820529937744
    4. 'c' → logprob: -4.462820529937744
    5. ':' → logprob: -4.587820529937744
    6. '[' → logprob: -5.337820529937744
    7. '   ' → logprob: -6.087820529937744
    8. '.' → logprob: -6.337820529937744
    9. ' plus' → logprob: -6.337820529937744
    10. '       ' → logprob: -6.462820529937744

Token 367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3010469079017639
    2. 'c' → logprob: -2.051046848297119
    3. '[:' → logprob: -2.801046848297119
    4. 'j' → logprob: -3.176046848297119
    5. '[j' → logprob: -5.301046848297119
    6. '   ' → logprob: -5.551046848297119
    7. ':' → logprob: -5.801046848297119
    8. ',' → logprob: -6.301046848297119
    9. ' ' → logprob: -6.301046848297119
    10. 'man' → logprob: -6.551046848297119

Token 368: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07094978541135788
    2. ',' → logprob: -2.9459497928619385
    3. '
' → logprob: -5.320949554443359
    4. '#' → logprob: -5.445949554443359
    5. '        
' → logprob: -6.570949554443359
    6. ' and' → logprob: -6.695949554443359
    7. ',
' → logprob: -6.945949554443359
    8. 'and' → logprob: -7.195949554443359
    9. '<|end|>' → logprob: -7.570949554443359
    10. '           ' → logprob: -8.44594955444336

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009467111667618155
    2. '<|end|>' → logprob: -8.125946998596191
    3. ',' → logprob: -8.625946998596191
    4. ' and' → logprob: -8.750946998596191
    5. '   ' → logprob: -9.000946998596191
    6. ' ' → logprob: -9.625946998596191
    7. '      ' → logprob: -10.125946998596191
    8. '        ' → logprob: -11.250946998596191
    9. 'and' → logprob: -11.375946998596191
    10. '           ' → logprob: -11.375946998596191

Token 370: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004370898008346558
    2. '#' (adapté à ' #') → logprob: -5.75437068939209
    3. '           ' → logprob: -8.37937068939209
    4. '        
' → logprob: -8.37937068939209
    5. 'if' → logprob: -9.25437068939209
    6. 'P' → logprob: -9.37937068939209
    7. 'total' → logprob: -9.62937068939209
    8. '   ' → logprob: -9.75437068939209
    9. 'group' → logprob: -9.87937068939209
    10. ' #' → logprob: -10.12937068939209

Token 371: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11528761684894562
    2. '       ' → logprob: -2.4902875423431396
    3. 'on' → logprob: -3.9902875423431396
    4. 'c' → logprob: -6.115287780761719
    5. 'et' → logprob: -6.365287780761719
    6. 'and' → logprob: -7.240287780761719
    7. 'for' → logprob: -7.490287780761719
    8. 'reste' → logprob: -7.990287780761719
    9. 'les' → logprob: -8.115287780761719
    10. 'rest' → logprob: -8.490287780761719

Token 372: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.054651036858558655
    2. 'P' → logprob: -4.179651260375977
    3. ' les' → logprob: -4.554651260375977
    4. ' ensuite' → logprob: -5.054651260375977
    5. 'on' → logprob: -5.429651260375977
    6. 'c' → logprob: -5.679651260375977
    7. ' P' → logprob: -5.929651260375977
    8. 'ens' → logprob: -6.179651260375977
    9. 'then' → logprob: -6.179651260375977
    10. 'for' → logprob: -6.929651260375977

Token 373: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20244629681110382
    2. ' c' → logprob: -1.7024463415145874
    3. 'P' → logprob: -7.327446460723877
    4. ' P' → logprob: -8.577445983886719
    5. '[c' → logprob: -8.702445983886719
    6. ' ' → logprob: -12.077445983886719
    7. 'C' → logprob: -12.702445983886719
    8. '[' → logprob: -12.952445983886719
    9. 'p' → logprob: -13.327445983886719
    10. '(c' → logprob: -13.452445983886719

Token 374: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.057743949990254e-05
    2. '1' → logprob: -11.625020980834961
    3. ' ' → logprob: -11.750020980834961
    4. 'c' → logprob: -13.750020980834961
    5. '[' → logprob: -14.437520980834961
    6. '   ' → logprob: -15.000020980834961
    7. '[c' → logprob: -15.000020980834961
    8. '```' → logprob: -15.375020980834961
    9. '_' → logprob: -15.625020980834961
    10. '₂' → logprob: -15.937520980834961

Token 375: ' suivants' (ID: 112219)
  Prédit: ' less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' less' → logprob: -0.5195731520652771
    2. ' moins' → logprob: -1.1445732116699219
    3. 'moins' → logprob: -2.769573211669922
    4. 'less' → logprob: -4.519573211669922
    5. ' next' → logprob: -5.769573211669922
    6. ' ones' → logprob: -6.144573211669922
    7. ' menos' → logprob: -6.269573211669922
    8. '#' → logprob: -7.394573211669922
    9. ' least' → logprob: -7.394573211669922
    10. 'next' → logprob: -7.894573211669922

Token 376: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7391092777252197
    2. ' dans' → logprob: -2.1141092777252197
    3. ' in' → logprob: -2.1141092777252197
    4. 'P' → logprob: -2.2391092777252197
    5. 'man' → logprob: -2.4891092777252197
    6. 'dans' → logprob: -2.6141092777252197
    7. ' P' → logprob: -2.8641092777252197
    8. ' ones' → logprob: -2.9891092777252197
    9. 'c' → logprob: -3.6141092777252197
    10. ' plus' → logprob: -3.8641092777252197

Token 377: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.08381247520446777
    2. ' la' → logprob: -2.7088124752044678
    3. 'bo' → logprob: -4.583812713623047
    4. 'le' → logprob: -5.833812713623047
    5. '#' → logprob: -9.208812713623047
    6. 'l' → logprob: -9.458812713623047
    7. 'box' → logprob: -9.583812713623047
    8. 'the' → logprob: -9.583812713623047
    9. ' boite' → logprob: -9.833812713623047
    10. ' ' → logprob: -9.958812713623047

Token 378: ' boite' (ID: 141233)
  Prédit: 'bo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bo' → logprob: -0.0014346358366310596
    2. '2' → logprob: -7.501434803009033
    3. 'box' → logprob: -7.876434803009033
    4. ' boîte' → logprob: -8.251434326171875
    5. ' boite' → logprob: -9.126434326171875
    6. ' bo' → logprob: -10.376434326171875
    7. 'c' → logprob: -10.626434326171875
    8. '```' → logprob: -10.626434326171875
    9. 'b' → logprob: -11.001434326171875
    10. '...' → logprob: -12.251434326171875

Token 379: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018156616017222404
    2. ' ' → logprob: -4.0181565284729
    3. '1' → logprob: -12.143157005310059
    4. '   ' → logprob: -14.768157005310059
    5. '  ' → logprob: -15.518157005310059
    6. '#' → logprob: -15.768157005310059
    7. 'de' → logprob: -15.893157005310059
    8. '```' → logprob: -16.268156051635742
    9. ' ' → logprob: -16.768156051635742
    10. '<|end|>' → logprob: -16.893156051635742

Token 380: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '1' → logprob: -18.000003814697266
    4. '۲' → logprob: -18.000003814697266
    5. 'de' → logprob: -18.812503814697266
    6. '   ' → logprob: -19.062503814697266
    7. '0' → logprob: -19.187503814697266
    8. '...' → logprob: -19.500003814697266
    9. '
' → logprob: -19.500003814697266
    10. '#' → logprob: -19.562503814697266

Token 381: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004342291038483381
    2. '        
' → logprob: -5.879342079162598
    3. '
' → logprob: -6.879342079162598
    4. ',' → logprob: -8.879342079162598
    5. '  
' → logprob: -9.379342079162598
    6. '           ' → logprob: -10.129342079162598
    7. '<|end|>' → logprob: -10.254342079162598
    8. 'tokens' → logprob: -10.629342079162598
    9. '   ' → logprob: -10.754342079162598
    10. ')' → logprob: -10.879342079162598

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04223324730992317
    2. 'total' → logprob: -3.7922332286834717
    3. 'man' → logprob: -4.292233467102051
    4. 'group' → logprob: -5.917233467102051
    5. 'selected' → logprob: -7.667233467102051
    6. ' total' → logprob: -7.667233467102051
    7. 'men' → logprob: -8.54223346710205
    8. 'subset' → logprob: -8.79223346710205
    9. 'price' → logprob: -8.91723346710205
    10. 'count' → logprob: -9.41723346710205

Token 383: ' total' (ID: 3609)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.059495098888874054
    2. 'total' (adapté à ' total') → logprob: -3.934495210647583
    3. 'first' → logprob: -4.809494972229004
    4. 'if' → logprob: -4.809494972229004
    5. 'box' → logprob: -5.059494972229004
    6. 'selected' → logprob: -5.434494972229004
    7. 'top' → logprob: -5.809494972229004
    8. 'man' → logprob: -6.184494972229004
    9. 'price' → logprob: -6.809494972229004
    10. 'combined' → logprob: -6.809494972229004

Token 384: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0003022153687197715
    2. '_prices' → logprob: -8.5003023147583
    3. '_pr' → logprob: -10.8753023147583
    4. '_' → logprob: -10.8753023147583
    5. '_p' → logprob: -11.0003023147583
    6. '_value' → logprob: -11.3753023147583
    7. '_cost' → logprob: -11.5003023147583
    8. '_sum' → logprob: -12.2503023147583
    9. '_man' → logprob: -13.0003023147583
    10. ' =' → logprob: -13.0003023147583

Token 385: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11284562945365906
    2. '=' → logprob: -2.2378456592559814
    3. '=sum' → logprob: -11.362845420837402
    4. 's' → logprob: -12.487845420837402
    5. ' ' → logprob: -12.987845420837402
    6. 'sum' → logprob: -13.112845420837402
    7. '_sum' → logprob: -13.612845420837402
    8. '_' → logprob: -14.237845420837402
    9. 'total' → logprob: -14.862845420837402
    10. '_total' → logprob: -15.112845420837402

Token 386: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6958765983581543
    2. ' =' → logprob: -0.6958765983581543
    3. 's' → logprob: -7.195876598358154
    4. '_' → logprob: -7.570876598358154
    5. 'sum' → logprob: -7.820876598358154
    6. '=sum' → logprob: -7.820876598358154
    7. '_sum' → logprob: -8.820877075195312
    8. '_c' → logprob: -8.820877075195312
    9. 'c' → logprob: -9.320877075195312
    10. ' ' → logprob: -9.445877075195312

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740924537181854
    2. '=' → logprob: -0.9740924835205078
    3. '=sum' → logprob: -11.099092483520508
    4. ',' → logprob: -15.849092483520508
    5. 's' → logprob: -17.224092483520508
    6. ' ' → logprob: -17.474092483520508
    7. '=s' → logprob: -17.724092483520508
    8. '=P' → logprob: -17.974092483520508
    9. ' +=' → logprob: -18.099092483520508
    10. ')' → logprob: -18.224092483520508

Token 388: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -6.2729995988775045e-06
    2. ' sum' → logprob: -12.000006675720215
    3. '	sum' → logprob: -21.1250057220459
    4. '   ' → logprob: -21.1250057220459
    5. 's' → logprob: -22.5000057220459
    6. '(sum' → logprob: -22.6250057220459
    7. '0' → logprob: -23.0000057220459
    8. ' ' → logprob: -23.2500057220459
    9. '=sum' → logprob: -23.3750057220459
    10. 'total' → logprob: -24.0000057220459

Token 389: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.000000953674316
    3. 'P' → logprob: -14.750000953674316
    4. '(C' → logprob: -19.750001907348633
    5. ' (' → logprob: -20.375001907348633
    6. '[P' → logprob: -20.750001907348633
    7. '(
' → logprob: -20.875001907348633
    8. '(p' → logprob: -21.500001907348633
    9. '(M' → logprob: -21.625001907348633
    10. '(A' → logprob: -22.125001907348633

Token 390: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.8074162653647363e-05
    2. '[c' → logprob: -11.250018119812012
    3. '[' → logprob: -12.250018119812012
    4. ' [:' → logprob: -15.625018119812012
    5. '][:' → logprob: -18.000017166137695
    6. '[:]' → logprob: -18.125017166137695
    7. '   ' → logprob: -18.875017166137695
    8. '[:-' → logprob: -18.875017166137695
    9. '[len' → logprob: -19.125017166137695
    10. ':c' → logprob: -19.125017166137695

Token 391: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0280383548888494e-06
    2. ' c' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.500001907348633
    4. '       ' → logprob: -17.625001907348633
    5. ')c' → logprob: -18.875001907348633
    6. '           ' → logprob: -20.625001907348633
    7. '<c' → logprob: -21.000001907348633
    8. 'cation' → logprob: -21.250001907348633
    9. '[c' → logprob: -21.250001907348633
    10. '$c' → logprob: -21.250001907348633

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. 'c' → logprob: -13.000001907348633
    3. '+' → logprob: -17.875001907348633
    4. ' ' → logprob: -18.000001907348633
    5. '```' → logprob: -18.562501907348633
    6. '_' → logprob: -18.812501907348633
    7. '   ' → logprob: -19.000001907348633
    8. 'C' → logprob: -19.250001907348633
    9. '[' → logprob: -19.375001907348633
    10. ' c' → logprob: -19.562501907348633

Token 393: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0015191456768661737
    2. '])
' → logprob: -6.626519203186035
    3. '])+' → logprob: -9.376519203186035
    4. ' ])' → logprob: -9.501519203186035
    5. '])
' → logprob: -11.376519203186035
    6. ']' → logprob: -12.501519203186035
    7. '])

' → logprob: -12.501519203186035
    8. ')' → logprob: -12.751519203186035
    9. '+' → logprob: -12.876519203186035
    10. '1' → logprob: -13.126519203186035

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5589114427566528
    2. 'total' → logprob: -2.0589113235473633
    3. '+' → logprob: -2.1839113235473633
    4. ' 
' → logprob: -2.8089113235473633
    5. '        
' → logprob: -2.8089113235473633
    6. ' +' → logprob: -3.8089113235473633
    7. '
' → logprob: -3.8089113235473633
    8. ' total' → logprob: -4.558911323547363
    9. ')' → logprob: -5.683911323547363
    10. '<|end|>' → logprob: -5.933911323547363

Token 395: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.010588377714157104
    2. ' total' → logprob: -4.6355881690979
    3. '       ' → logprob: -7.1355881690979
    4. '+' → logprob: -10.885588645935059
    5. '        
' → logprob: -11.760588645935059
    6. '	total' → logprob: -13.135588645935059
    7. ' +' → logprob: -13.260588645935059
    8. '_total' → logprob: -13.885588645935059
    9. ' ' → logprob: -14.135588645935059
    10. '(total' → logprob: -14.385588645935059

Token 396: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -1.580929347255733e-05
    2. 'price' → logprob: -11.125016212463379
    3. '_' → logprob: -14.500016212463379
    4. 'Price' → logprob: -15.375016212463379
    5. '+' → logprob: -16.875015258789062
    6. '_prices' → logprob: -17.000015258789062
    7. '_PRICE' → logprob: -17.250015258789062
    8. '```' → logprob: -17.625015258789062
    9. '   ' → logprob: -18.500015258789062
    10. ' price' → logprob: -18.625015258789062

Token 397: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012134487042203546
    2. '2' → logprob: -7.376213550567627
    3. ' =' → logprob: -8.251213073730469
    4. '=' → logprob: -8.876213073730469
    5. '_c' → logprob: -9.751213073730469
    6. '+=' → logprob: -10.251213073730469
    7. ' +=' → logprob: -10.376213073730469
    8. '_=' → logprob: -10.626213073730469
    9. '+' → logprob: -11.251213073730469
    10. '```' → logprob: -12.251213073730469

Token 398: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009861272992566228
    2. 'sum' → logprob: -7.500986099243164
    3. '(c' → logprob: -8.750986099243164
    4. ' c' → logprob: -9.000986099243164
    5. '1' → logprob: -9.750986099243164
    6. '
' → logprob: -11.250986099243164
    7. '   ' → logprob: -11.250986099243164
    8. '```' → logprob: -11.625986099243164
    9. '[c' → logprob: -11.750986099243164
    10. '`' → logprob: -12.000986099243164

Token 399: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395956993103
    2. ' =' → logprob: -0.8259395956993103
    3. ' ' → logprob: -16.575939178466797
    4. ' +=' → logprob: -16.825939178466797
    5. '+=' → logprob: -17.200939178466797
    6. ' ' → logprob: -17.450939178466797
    7. '=sum' → logprob: -17.450939178466797
    8. '＝' → logprob: -19.075939178466797
    9. '  ' → logprob: -19.700939178466797
    10. '   ' → logprob: -20.200939178466797

Token 400: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00033546582562848926
    2. ' sum' → logprob: -8.000335693359375
    3. '(sum' → logprob: -18.500335693359375
    4. ' ' → logprob: -18.750335693359375
    5. '0' → logprob: -19.250335693359375
    6. '	sum' → logprob: -19.625335693359375
    7. '   ' → logprob: -19.750335693359375
    8. 's' → logprob: -19.875335693359375
    9. '=sum' → logprob: -19.875335693359375
    10. '  ' → logprob: -20.250335693359375

Token 401: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -11.375011444091797
    3. 'P' → logprob: -17.375011444091797
    4. ' (' → logprob: -18.375011444091797
    5. '(
' → logprob: -18.750011444091797
    6. '((' → logprob: -19.500011444091797
    7. '(p' → logprob: -19.750011444091797
    8. '(PR' → logprob: -20.250011444091797
    9. '(S' → logprob: -20.875011444091797
    10. '(F' → logprob: -21.125011444091797

Token 402: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -13.500003814697266
    3. 'c' → logprob: -14.250003814697266
    4. '[:' → logprob: -14.375003814697266
    5. '   ' → logprob: -14.500003814697266
    6. ' [' → logprob: -15.750003814697266
    7. 'sum' → logprob: -15.875003814697266
    8. '
' → logprob: -16.375003814697266
    9. 'P' → logprob: -16.750003814697266
    10. ')[' → logprob: -16.750003814697266

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[c' → logprob: -15.875
    3. 'c' → logprob: -16.75
    4. '[' → logprob: -18.375
    5. '
' → logprob: -20.0
    6. '```' → logprob: -20.125
    7. ' ' → logprob: -20.625
    8. '   ' → logprob: -20.75
    9. '１' → logprob: -21.125
    10. '۱' → logprob: -22.25

Token 404: ':c' (ID: 88289)
  Prédit: ':c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':c' → logprob: -1.3782830137643032e-05
    2. 'c' → logprob: -11.50001335144043
    3. ':' → logprob: -12.75001335144043
    4. '[c' → logprob: -15.00001335144043
    5. ' :' → logprob: -15.25001335144043
    6. '[:' → logprob: -17.25001335144043
    7. '   ' → logprob: -17.62501335144043
    8. ';c' → logprob: -17.87501335144043
    9. '	c' → logprob: -18.12501335144043
    10. ':(' → logprob: -18.25001335144043

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. 'c' → logprob: -12.750003814697266
    3. '2' → logprob: -15.375003814697266
    4. '[c' → logprob: -15.875003814697266
    5. '[' → logprob: -16.875003814697266
    6. ':c' → logprob: -17.750003814697266
    7. '```' → logprob: -18.187503814697266
    8. '۱' → logprob: -18.437503814697266
    9. ']' → logprob: -18.562503814697266
    10. '   ' → logprob: -18.750003814697266

Token 406: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.0003013809327967465
    2. 'c' → logprob: -8.625301361083984
    3. ' +' → logprob: -9.375301361083984
    4. '+' → logprob: -10.250301361083984
    5. '   ' → logprob: -14.125301361083984
    6. '+
' → logprob: -15.250301361083984
    7. '2' → logprob: -15.625301361083984
    8. 'plus' → logprob: -16.250301361083984
    9. '1' → logprob: -16.250301361083984
    10. '+C' → logprob: -16.500301361083984

Token 407: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '۲' → logprob: -16.375
    3. '२' → logprob: -17.5625
    4. '২' → logprob: -17.75
    5. '```' → logprob: -18.0
    6. '₂' → logprob: -18.0625
    7. ' ' → logprob: -18.3125
    8. 'c' → logprob: -18.5625
    9. '1' → logprob: -18.625
    10. '２' → logprob: -19.0

Token 408: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.057743949990254e-05
    2. '])
' → logprob: -11.000020980834961
    3. ' ])' → logprob: -12.875020980834961
    4. ')' → logprob: -14.125020980834961
    5. ']' → logprob: -15.500020980834961
    6. '])

' → logprob: -15.750020980834961
    7. ']);' → logprob: -17.00002098083496
    8. ']])' → logprob: -17.00002098083496
    9. ')])' → logprob: -18.00002098083496
    10. ''])' → logprob: -18.12502098083496

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.644046425819397
    2. 'profit' → logprob: -1.269046425819397
    3. '
' → logprob: -2.1440463066101074
    4. '        
' → logprob: -2.7690463066101074
    5. ' profit' → logprob: -4.394046306610107
    6. '```' → logprob: -8.394046783447266
    7. '<|end|>' → logprob: -8.519046783447266
    8. '            
' → logprob: -8.644046783447266
    9. '_profit' → logprob: -9.019046783447266
    10. 'total' → logprob: -9.019046783447266

Token 410: ' total' (ID: 3609)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.005956768058240414
    2. ' profit' → logprob: -5.380956649780273
    3. '       ' → logprob: -7.005956649780273
    4. 'total' (adapté à ' total') → logprob: -8.130956649780273
    5. '        
' → logprob: -9.505956649780273
    6. 'if' → logprob: -10.630956649780273
    7. 'cost' → logprob: -11.755956649780273
    8. ' if' → logprob: -11.880956649780273
    9. '
' → logprob: -12.380956649780273
    10. ' total' → logprob: -12.630956649780273

Token 411: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.00016778295685071498
    2. '_profit' → logprob: -8.750167846679688
    3. '_' → logprob: -12.000167846679688
    4. 'price' → logprob: -13.125167846679688
    5. 'profit' → logprob: -14.625167846679688
    6. '_pro' → logprob: -15.625167846679688
    7. 'Price' → logprob: -16.125167846679688
    8. '_code' → logprob: -16.500167846679688
    9. '_prices' → logprob: -16.500167846679688
    10. '_score' → logprob: -16.500167846679688

Token 412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7334961891174316
    2. ' =' → logprob: -0.7334961891174316
    3. '_' → logprob: -3.2334961891174316
    4. '_=' → logprob: -9.358495712280273
    5. '=_' → logprob: -11.483495712280273
    6. '1' → logprob: -11.608495712280273
    7. '_total' → logprob: -11.858495712280273
    8. ' ' → logprob: -11.858495712280273
    9. ' _' → logprob: -13.483495712280273
    10. 's' → logprob: -13.733495712280273

Token 413: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.16022910177707672
    2. ' total' → logprob: -1.9102290868759155
    3. ' ' → logprob: -13.285228729248047
    4. '   ' → logprob: -13.410228729248047
    5. '(total' → logprob: -13.910228729248047
    6. '	total' → logprob: -14.535228729248047
    7. '  ' → logprob: -16.535228729248047
    8. ' ' → logprob: -16.660228729248047
    9. '_total' → logprob: -16.910228729248047
    10. '$total' → logprob: -17.035228729248047

Token 414: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -1.3425219549390022e-05
    2. 'price' → logprob: -11.25001335144043
    3. '_' → logprob: -15.50001335144043
    4. 'Price' → logprob: -16.12501335144043
    5. '_total' → logprob: -18.75001335144043
    6. 'total' → logprob: -18.75001335144043
    7. '_PRICE' → logprob: -18.87501335144043
    8. '_pr' → logprob: -19.75001335144043
    9. '_value' → logprob: -19.75001335144043
    10. '\' → logprob: -20.00001335144043

Token 415: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.292907877039397e-06
    2. '1' → logprob: -13.00000286102295
    3. '-' → logprob: -14.12500286102295
    4. ' _' → logprob: -16.125003814697266
    5. ' -' → logprob: -16.875003814697266
    6. '[' → logprob: -17.500003814697266
    7. 's' → logprob: -17.625003814697266
    8. '-_' → logprob: -17.875003814697266
    9. '__' → logprob: -18.500003814697266
    10. '
' → logprob: -18.625003814697266

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -12.500004768371582
    3. 'sum' → logprob: -13.750004768371582
    4. '
' → logprob: -17.1250057220459
    5. '１' → logprob: -17.1250057220459
    6. 'total' → logprob: -18.1250057220459
    7. '[' → logprob: -18.2500057220459
    8. '{' → logprob: -18.5000057220459
    9. '```' → logprob: -18.5000057220459
    10. '-' → logprob: -18.5000057220459

Token 417: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20246918499469757
    2. '+' → logprob: -1.7024692296981812
    3. ' -' → logprob: -6.952469348907471
    4. '-' → logprob: -9.327468872070312
    5. ' ' → logprob: -12.702468872070312
    6. 'total' → logprob: -12.952468872070312
    7. ' ' → logprob: -13.577468872070312
    8. ' +
' → logprob: -14.077468872070312
    9. '+
' → logprob: -14.327468872070312
    10. '<|end|>' → logprob: -14.452468872070312

Token 418: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5760877728462219
    2. ' total' → logprob: -0.8260877728462219
    3. 'sum' → logprob: -9.451087951660156
    4. ' sum' → logprob: -9.576087951660156
    5. ' ' → logprob: -16.701087951660156
    6. '(total' → logprob: -17.076087951660156
    7. ' ' → logprob: -17.201087951660156
    8. '
' → logprob: -17.326087951660156
    9. '   ' → logprob: -17.576087951660156
    10. 'tot' → logprob: -17.951087951660156

Token 419: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -3.440506407059729e-05
    2. 'price' → logprob: -10.37503433227539
    3. '_' → logprob: -12.87503433227539
    4. 'Price' → logprob: -14.62503433227539
    5. '_total' → logprob: -17.62503433227539
    6. '_prices' → logprob: -17.62503433227539
    7. '```' → logprob: -17.62503433227539
    8. '\' → logprob: -18.00003433227539
    9. ' _' → logprob: -18.25003433227539
    10. '_cost' → logprob: -18.25003433227539

Token 420: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.856408536899835e-05
    2. '2' → logprob: -10.500028610229492
    3. '-' → logprob: -13.875028610229492
    4. ' _' → logprob: -17.750028610229492
    5. '```' → logprob: -17.875028610229492
    6. '[' → logprob: -18.125028610229492
    7. '₂' → logprob: -18.750028610229492
    8. '_
' → logprob: -18.750028610229492
    9. ' ' → logprob: -18.875028610229492
    10. '-_' → logprob: -18.875028610229492

Token 421: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2007883671903983e-05
    2. 'c' → logprob: -10.750021934509277
    3. '(c' → logprob: -15.625021934509277
    4. '_' → logprob: -16.125022888183594
    5. '[c' → logprob: -16.125022888183594
    6. 'sum' → logprob: -16.750022888183594
    7. '1' → logprob: -16.875022888183594
    8. '
' → logprob: -17.500022888183594
    9. ' ' → logprob: -17.500022888183594
    10. '```' → logprob: -18.625022888183594

Token 422: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01484870258718729
    2. 'profit' → logprob: -5.014848709106445
    3. '
' → logprob: -5.514848709106445
    4. ' profit' → logprob: -6.014848709106445
    5. '        
' → logprob: -6.514848709106445
    6. '_profit' → logprob: -9.889848709106445
    7. '```' → logprob: -10.889848709106445
    8. '
' → logprob: -11.139848709106445
    9. ',' → logprob: -11.389848709106445
    10. '           ' → logprob: -11.514848709106445

Token 423: '       ' (ID: 309)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.5074616074562073
    2. ' profit' → logprob: -1.1324615478515625
    3. '       ' → logprob: -2.8824615478515625
    4. '
' → logprob: -4.5074615478515625
    5. '        
' → logprob: -5.2574615478515625
    6. ' cost' → logprob: -6.7574615478515625
    7. 'cost' → logprob: -7.3824615478515625
    8. '```' → logprob: -7.7574615478515625
    9. '_profit' → logprob: -8.632461547851562
    10. '   ' → logprob: -8.882461547851562

Token 424: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' (adapté à ' profit') → logprob: -0.0008619115105830133
    2. ' profit' → logprob: -7.375862121582031
    3. '       ' → logprob: -9.000862121582031
    4. 'total' → logprob: -10.000862121582031
    5. 'cost' → logprob: -10.125862121582031
    6. 'if' → logprob: -10.875862121582031
    7. '        
' → logprob: -12.500862121582031
    8. ' if' → logprob: -13.875862121582031
    9. '           ' → logprob: -14.250862121582031
    10. 'price' → logprob: -14.625862121582031

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410210967063904
    2. '=' → logprob: -0.9741021394729614
    3. ' -=' → logprob: -11.474102020263672
    4. '_' → logprob: -11.849102020263672
    5. ' +=' → logprob: -12.474102020263672
    6. '>' → logprob: -13.849102020263672
    7. ' ' → logprob: -13.974102020263672
    8. '	' → logprob: -15.099102020263672
    9. ' ' → logprob: -15.224102020263672
    10. '+=' → logprob: -15.724102020263672

Token 426: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.20141372084617615
    2. ' total' → logprob: -1.7014137506484985
    3. '(total' → logprob: -15.576414108276367
    4. '   ' → logprob: -16.826414108276367
    5. '	total' → logprob: -16.951414108276367
    6. ' ' → logprob: -17.326414108276367
    7. 'profit' → logprob: -17.951414108276367
    8. 'Total' → logprob: -18.451414108276367
    9. '$total' → logprob: -18.701414108276367
    10. ' profit' → logprob: -18.826414108276367

Token 427: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -2.2200749754119897e-06
    2. 'price' → logprob: -13.625001907348633
    3. '_profit' → logprob: -14.625001907348633
    4. '_total' → logprob: -15.375001907348633
    5. 'total' → logprob: -16.250001907348633
    6. '_' → logprob: -17.000001907348633
    7. 'Price' → logprob: -17.625001907348633
    8. 'profit' → logprob: -18.875001907348633
    9. '_PRICE' → logprob: -18.875001907348633
    10. '-' → logprob: -20.000001907348633

Token 428: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00672448705881834
    2. '-' → logprob: -5.0067243576049805
    3. ' ' → logprob: -12.13172435760498
    4. ' ' → logprob: -12.88172435760498
    5. '   ' → logprob: -14.38172435760498
    6. '  ' → logprob: -15.75672435760498
    7. ' -=' → logprob: -16.631725311279297
    8. '    ' → logprob: -16.881725311279297
    9. ' -
' → logprob: -17.006725311279297
    10. '>' → logprob: -17.131725311279297

Token 429: ' (' (ID: 350)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.023404806852340698
    2. ' (' → logprob: -3.773404836654663
    3. '(' → logprob: -9.273405075073242
    4. 'e' → logprob: -9.773405075073242
    5. ' e' → logprob: -12.273405075073242
    6. '(E' → logprob: -12.773405075073242
    7. '   ' → logprob: -14.898405075073242
    8. '(
' → logprob: -15.648405075073242
    9. '       ' → logprob: -15.773405075073242
    10. ' ' → logprob: -16.398405075073242

Token 430: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008427338674664497
    2. ' e' → logprob: -4.883427143096924
    3. '(e' → logprob: -7.133427143096924
    4. ' (' → logprob: -10.883427619934082
    5. '   ' → logprob: -12.883427619934082
    6. '       ' → logprob: -14.258427619934082
    7. '	e' → logprob: -14.758427619934082
    8. '           ' → logprob: -15.633427619934082
    9. ')e' → logprob: -15.883427619934082
    10. '(' → logprob: -16.008426666259766

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008388681337237358
    2. 'e' → logprob: -4.883388519287109
    3. '[e' → logprob: -7.633388519287109
    4. '(e' → logprob: -8.50838851928711
    5. ' e' → logprob: -10.38338851928711
    6. '
' → logprob: -11.25838851928711
    7. '```' → logprob: -11.63338851928711
    8. '[' → logprob: -11.75838851928711
    9. ')' → logprob: -12.00838851928711
    10. '_' → logprob: -12.13338851928711

Token 432: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.584201991558075
    2. '+' → logprob: -1.2092020511627197
    3. ' -' → logprob: -1.9592020511627197
    4. '-' → logprob: -5.834201812744141
    5. ' ' → logprob: -9.45920181274414
    6. '   ' → logprob: -11.45920181274414
    7. ')' → logprob: -11.58420181274414
    8. '-e' → logprob: -11.83420181274414
    9. 'e' → logprob: -12.58420181274414
    10. ' e' → logprob: -13.08420181274414

Token 433: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11290472000837326
    2. ' e' → logprob: -2.2379047870635986
    3. '(e' → logprob: -9.61290454864502
    4. ' (' → logprob: -11.48790454864502
    5. '   ' → logprob: -13.23790454864502
    6. ' ' → logprob: -13.61290454864502
    7. '       ' → logprob: -14.23790454864502
    8. '	e' → logprob: -14.73790454864502
    9. '(' → logprob: -15.11290454864502
    10. '           ' → logprob: -15.73790454864502

Token 434: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -17.25
    4. '
' → logprob: -17.5
    5. '₂' → logprob: -17.5
    6. 'e' → logprob: -17.625
    7. ')' → logprob: -17.75
    8. '۲' → logprob: -18.375
    9. '_' → logprob: -18.75
    10. '２' → logprob: -19.125

Token 435: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12697061896324158
    2. ')
' → logprob: -2.1269705295562744
    3. ')
' → logprob: -10.251970291137695
    4. '       ' → logprob: -13.001970291137695
    5. ')

' → logprob: -13.001970291137695
    6. '   ' → logprob: -13.751970291137695
    7. ' )' → logprob: -15.001970291137695
    8. ' )
' → logprob: -15.626970291137695
    9. ')\' → logprob: -16.001970291137695
    10. '))' → logprob: -16.001970291137695

Token 436: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13240870833396912
    2. ' if' → logprob: -2.757408618927002
    3. 'if' → logprob: -3.132408618927002
    4. '   ' → logprob: -4.882408618927002
    5. '       ' → logprob: -5.007408618927002
    6. '        
' → logprob: -7.257408618927002
    7. '\n' → logprob: -7.882408618927002
    8. '    
' → logprob: -7.882408618927002
    9. '  
' → logprob: -8.00740909576416
    10. '
' → logprob: -8.13240909576416

Token 437: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6211237907409668
    2. 'if' (adapté à ' if') → logprob: -0.8711237907409668
    3. '       ' → logprob: -3.121123790740967
    4. '   ' → logprob: -9.621124267578125
    5. '
' → logprob: -12.746124267578125
    6. '           ' → logprob: -14.246124267578125
    7. '```' → logprob: -14.371124267578125
    8. '	if' → logprob: -14.746124267578125
    9. '        
' → logprob: -15.621124267578125
    10. 'max' → logprob: -16.496124267578125

Token 438: ' profit' (ID: 15971)
  Prédit: ' profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' profit' → logprob: -0.16022644937038422
    2. 'profit' → logprob: -1.9102264642715454
    3. 'prof' → logprob: -13.410226821899414
    4. 'Profit' → logprob: -15.410226821899414
    5. '   ' → logprob: -15.660226821899414
    6. '_profit' → logprob: -16.160226821899414
    7. ' ' → logprob: -16.285226821899414
    8. ' prof' → logprob: -16.535226821899414
    9. 'pro' → logprob: -16.660226821899414
    10. ' profi' → logprob: -17.035226821899414

Token 439: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07889242470264435
    2. '>' → logprob: -2.578892469406128
    3. ' ' → logprob: -14.078892707824707
    4. ' ' → logprob: -14.078892707824707
    5. '   ' → logprob: -15.328892707824707
    6. '<|end|>' → logprob: -15.453892707824707
    7. '[' → logprob: -15.828892707824707
    8. '">' → logprob: -16.70389175415039
    9. ')' → logprob: -16.82889175415039
    10. ' >
' → logprob: -16.95389175415039

Token 440: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5759394764900208
    2. 'max' → logprob: -0.8259394764900208
    3. '	max' → logprob: -17.450939178466797
    4. '(max' → logprob: -17.575939178466797
    5. '_max' → logprob: -18.075939178466797
    6. '=max' → logprob: -18.825939178466797
    7. '[max' → logprob: -19.075939178466797
    8. ' ' → logprob: -19.450939178466797
    9. ',max' → logprob: -19.450939178466797
    10. '   ' → logprob: -19.950939178466797

Token 441: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -8.180258191714529e-06
    2. '_prof' → logprob: -12.000008583068848
    3. '_pro' → logprob: -14.250008583068848
    4. '_' → logprob: -14.500008583068848
    5. 'profit' → logprob: -15.000008583068848
    6. '_max' → logprob: -16.00000762939453
    7. '\' → logprob: -16.00000762939453
    8. '_prob' → logprob: -16.12500762939453
    9. ' _' → logprob: -17.62500762939453
    10. '_p' → logprob: -18.00000762939453

Token 442: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02003408782184124
    2. ':
' → logprob: -4.145034313201904
    3. '       ' → logprob: -5.645034313201904
    4. '           ' → logprob: -8.895033836364746
    5. '   ' → logprob: -9.145033836364746
    6. '=' → logprob: -10.020033836364746
    7. '):' → logprob: -10.395033836364746
    8. ':max' → logprob: -10.395033836364746
    9. 'max' → logprob: -10.645033836364746
    10. '=max' → logprob: -11.395033836364746

Token 443: '           ' (ID: 352)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6291589736938477
    2. ' max' → logprob: -1.3791589736938477
    3. '           ' → logprob: -1.6291589736938477
    4. 'profit' → logprob: -4.629158973693848
    5. ' profit' → logprob: -4.754158973693848
    6. '       ' → logprob: -7.379158973693848
    7. '   ' → logprob: -10.754158973693848
    8. '```' → logprob: -11.004158973693848
    9. '               ' → logprob: -11.379158973693848
    10. '[max' → logprob: -12.754158973693848

Token 444: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0002613358374219388
    2. ' max' → logprob: -8.250261306762695
    3. '_max' → logprob: -20.625261306762695
    4. '	max' → logprob: -22.375261306762695
    5. '
' → logprob: -23.000261306762695
    6. '[max' → logprob: -23.500261306762695
    7. '           ' → logprob: -23.625261306762695
    8. '```' → logprob: -24.125261306762695
    9. '   ' → logprob: -24.250261306762695
    10. '(max' → logprob: -24.375261306762695

Token 445: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -6.630610641877865e-06
    2. '_prof' → logprob: -12.500006675720215
    3. '_pro' → logprob: -13.625006675720215
    4. 'profit' → logprob: -14.250006675720215
    5. '_' → logprob: -14.500006675720215
    6. '_prob' → logprob: -14.875006675720215
    7. '_p' → logprob: -17.2500057220459
    8. 'Profit' → logprob: -17.3750057220459
    9. '\' → logprob: -17.3750057220459
    10. ' profit' → logprob: -17.7500057220459

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. '=max' → logprob: -14.87692928314209
    4. ' =
' → logprob: -15.50192928314209
    5. '_' → logprob: -15.75192928314209
    6. '<|end|>' → logprob: -15.87692928314209
    7. ' ' → logprob: -16.126930236816406
    8. '＝' → logprob: -16.626930236816406
    9. '_=' → logprob: -16.626930236816406
    10. ' =)' → logprob: -17.126930236816406

Token 447: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.02324652671813965
    2. ' profit' → logprob: -3.7732465267181396
    3. 'prof' → logprob: -14.148246765136719
    4. 'Profit' → logprob: -16.02324676513672
    5. '_profit' → logprob: -16.39824676513672
    6. 'pro' → logprob: -16.77324676513672
    7. 'profits' → logprob: -16.89824676513672
    8. 'prob' → logprob: -18.14824676513672
    9. '	pro' → logprob: -18.64824676513672
    10. 'price' → logprob: -19.77324676513672

Token 448: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.584239938296378e-06
    2. '
' → logprob: -12.250007629394531
    3. ' print' → logprob: -12.875007629394531
    4. '```' → logprob: -16.50000762939453
    5. '(print' → logprob: -17.87500762939453
    6. '<|end|>' → logprob: -18.37500762939453
    7. '-print' → logprob: -19.00000762939453
    8. '
' → logprob: -19.12500762939453
    9. 'pr' → logprob: -19.25000762939453
    10. ' 
' → logprob: -19.25000762939453

Token 449: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.4121114822482923e-06
    2. '```' → logprob: -13.250003814697266
    3. ' print' → logprob: -13.500003814697266
    4. '
' → logprob: -15.375003814697266
    5. '``' → logprob: -18.125003814697266
    6. '-print' → logprob: -19.875003814697266
    7. '#print' → logprob: -20.875003814697266
    8. '.print' → logprob: -21.375003814697266
    9. '(print' → logprob: -21.500003814697266
    10. '
' → logprob: -21.625003814697266

Token 450: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.01815485768020153
    2. '(' → logprob: -4.018154621124268
    3. 'max' → logprob: -12.268155097961426
    4. '("' → logprob: -16.51815414428711
    5. '()' → logprob: -16.64315414428711
    6. '('' → logprob: -16.76815414428711
    7. '(Max' → logprob: -17.01815414428711
    8. ' max' → logprob: -17.64315414428711
    9. ' (' → logprob: -17.76815414428711
    10. '(MAX' → logprob: -18.14315414428711

Token 451: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -5.9153885558771435e-06
    2. '_prof' → logprob: -12.375005722045898
    3. 'profit' → logprob: -13.625005722045898
    4. '_prob' → logprob: -16.0000057220459
    5. '_pro' → logprob: -16.1250057220459
    6. 'max' → logprob: -17.1250057220459
    7. '_max' → logprob: -17.3750057220459
    8. '_' → logprob: -17.5000057220459
    9. '\' → logprob: -17.6250057220459
    10. 'Profit' → logprob: -18.0000057220459

Token 452: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6895233531831764e-05
    2. '<|end|>' → logprob: -11.62502670288086
    3. '```' → logprob: -12.00002670288086
    4. ' )' → logprob: -12.00002670288086
    5. '())' → logprob: -13.12502670288086
    6. '()' → logprob: -13.25002670288086
    7. '')' → logprob: -14.75002670288086
    8. '}' → logprob: -14.87502670288086
    9. '#' → logprob: -15.12502670288086
    10. ')
' → logprob: -15.62502670288086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 450
Tokens correctement prédits (1ère position, stricte): 156
Tokens correctement prédits (1ère position, avec adaptation): 170
Tokens correctement prédits (top 10): 345
Précision stricte (1ère position): 34.67%
Précision adaptée (1ère position): 37.78%
Précision (top 10): 76.67%
================================================================================
