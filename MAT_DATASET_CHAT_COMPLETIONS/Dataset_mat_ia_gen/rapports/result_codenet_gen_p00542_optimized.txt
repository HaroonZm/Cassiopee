================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:24:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A=int(input())
B=int(input())
C=int(input())
D=int(input())
E=int(input())
F=int(input())
print(sum(sorted([A,B,C,D],reverse=True)[:3])+max(E,F))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06666158884763718
    2. ')' → logprob: -2.9416615962982178
    3. '()' → logprob: -4.691661357879639
    4. '())' → logprob: -6.566661357879639
    5. '(
' → logprob: -8.191661834716797
    6. '[' → logprob: -8.941661834716797
    7. '```' → logprob: -9.441661834716797
    8. '(()' → logprob: -9.566661834716797
    9. '("("' → logprob: -9.816661834716797
    10. '**' → logprob: -9.816661834716797

Token 4: 'B' (ID: 33)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06718070060014725
    2. '*' → logprob: -2.942180633544922
    3. '%' → logprob: -5.067180633544922
    4. '+
' → logprob: -5.817180633544922
    5. '**' → logprob: -6.692180633544922
    6. '#' → logprob: -6.817180633544922
    7. '\n' → logprob: -8.317180633544922
    8. '\' → logprob: -9.067180633544922
    9. 'if' → logprob: -10.192180633544922
    10. ')' → logprob: -10.192180633544922

Token 5: '=int' (ID: 37431)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09165892750024796
    2. '=' → logprob: -3.0916588306427
    3. '*' → logprob: -4.091659069061279
    4. ')' → logprob: -4.841659069061279
    5. ' ' → logprob: -4.841659069061279
    6. ' =' → logprob: -5.091659069061279
    7. ' +' → logprob: -6.216659069061279
    8. '-' → logprob: -8.216658592224121
    9. '+=' → logprob: -8.341658592224121
    10. ''' → logprob: -8.716658592224121

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3498517572879791
    2. '(input' → logprob: -1.2248517274856567
    3. '()' → logprob: -6.724851608276367
    4. ' (' → logprob: -9.224851608276367
    5. 'input' → logprob: -10.599851608276367
    6. ')' → logprob: -10.724851608276367
    7. '(
' → logprob: -11.099851608276367
    8. '('' → logprob: -11.974851608276367
    9. '(space' → logprob: -12.474851608276367
    10. '(

' → logprob: -12.724851608276367

Token 7: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.258925199508667
    2. '()' → logprob: -1.508925199508667
    3. ')' → logprob: -5.008925437927246
    4. '(' → logprob: -9.133925437927246
    5. ' ())' → logprob: -9.258925437927246
    6. '();)' → logprob: -10.383925437927246
    7. '()))' → logprob: -11.133925437927246
    8. '()>' → logprob: -11.258925437927246
    9. '()
' → logprob: -12.383925437927246
    10. '());' → logprob: -12.883925437927246

Token 8: 'C' (ID: 34)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4037192463874817
    2. 'print' → logprob: -1.153719186782837
    3. 'C' → logprob: -4.403719425201416
    4. 'c' → logprob: -6.653719425201416
    5. 'sum' → logprob: -6.653719425201416
    6. 's' → logprob: -7.528719425201416
    7. 'result' → logprob: -8.153718948364258
    8. 'for' → logprob: -8.278718948364258
    9. '+' → logprob: -9.028718948364258
    10. '```' → logprob: -9.028718948364258

Token 9: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021018262952566147
    2. '+' → logprob: -4.271018028259277
    3. ' =' → logprob: -5.521018028259277
    4. '=int' → logprob: -6.646018028259277
    5. '+=' → logprob: -7.396018028259277
    6. '*' → logprob: -7.646018028259277
    7. '=input' → logprob: -8.521018028259277
    8. ')' → logprob: -9.396018028259277
    9. '*=' → logprob: -10.271018028259277
    10. ',' → logprob: -10.646018028259277

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09537756443023682
    2. '(input' → logprob: -2.4703774452209473
    3. '()' → logprob: -5.220377445220947
    4. ' (' → logprob: -7.595377445220947
    5. 'input' → logprob: -9.095377922058105
    6. '(
' → logprob: -9.470377922058105
    7. '('' → logprob: -9.720377922058105
    8. ')' → logprob: -9.970377922058105
    9. '("("' → logprob: -10.220377922058105
    10. ' ' → logprob: -10.970377922058105

Token 11: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05373207479715347
    2. '()' → logprob: -3.42873215675354
    3. ')' → logprob: -3.92873215675354
    4. '()))' → logprob: -9.178731918334961
    5. ' ())' → logprob: -9.928731918334961
    6. '(' → logprob: -10.553731918334961
    7. '))' → logprob: -11.928731918334961
    8. '`)' → logprob: -12.053731918334961
    9. '();)' → logprob: -12.053731918334961
    10. '()>' → logprob: -12.178731918334961

Token 12: 'D' (ID: 35)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19180749356746674
    2. 'sum' → logprob: -2.191807508468628
    3. 'D' → logprob: -3.941807508468628
    4. 'total' → logprob: -4.316807270050049
    5. 's' → logprob: -4.441807270050049
    6. 'max' → logprob: -4.941807270050049
    7. 'S' → logprob: -6.066807270050049
    8. 'print' → logprob: -6.441807270050049
    9. 'avg' → logprob: -6.691807270050049
    10. 'result' → logprob: -7.316807270050049

Token 13: '=int' (ID: 37431)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23249731957912445
    2. '=' → logprob: -2.482497215270996
    3. '*' → logprob: -2.982497215270996
    4. '-' → logprob: -3.607497215270996
    5. ' =' → logprob: -4.482497215270996
    6. ' +' → logprob: -4.482497215270996
    7. ' ' → logprob: -4.732497215270996
    8. ')' → logprob: -5.107497215270996
    9. ' *' → logprob: -6.482497215270996
    10. '_' → logprob: -6.732497215270996

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006551004946231842
    2. '(input' → logprob: -5.1315507888793945
    3. ' (' → logprob: -8.756550788879395
    4. '()' → logprob: -9.131550788879395
    5. '(
' → logprob: -9.256550788879395
    6. '('' → logprob: -9.756550788879395
    7. '(

' → logprob: -10.381550788879395
    8. ')' → logprob: -10.506550788879395
    9. 'input' → logprob: -10.631550788879395
    10. '((' → logprob: -10.756550788879395

Token 15: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.22713403403759003
    2. ')' → logprob: -2.2271339893341064
    3. '()' → logprob: -2.3521339893341064
    4. '()
' → logprob: -9.977133750915527
    5. '())
' → logprob: -10.477133750915527
    6. ' ())' → logprob: -10.477133750915527
    7. '`)' → logprob: -10.727133750915527
    8. ' )' → logprob: -11.352133750915527
    9. '(' → logprob: -11.727133750915527
    10. '()))' → logprob: -12.102133750915527

Token 16: 'E' (ID: 36)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7373802065849304
    2. 'if' → logprob: -0.8623802065849304
    3. 'result' → logprob: -3.862380266189575
    4. 'E' → logprob: -3.862380266189575
    5. 'total' → logprob: -3.987380266189575
    6. 'sum' → logprob: -4.112380027770996
    7. 'diff' → logprob: -5.487380027770996
    8. 's' → logprob: -5.612380027770996
    9. 'x' → logprob: -5.862380027770996
    10. 'difference' → logprob: -6.237380027770996

Token 17: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18493889272212982
    2. ' =' → logprob: -1.809938907623291
    3. '+' → logprob: -5.809938907623291
    4. '=int' → logprob: -6.684938907623291
    5. '=A' → logprob: -8.059938430786133
    6. '=input' → logprob: -8.684938430786133
    7. ',' → logprob: -9.684938430786133
    8. '.' → logprob: -9.684938430786133
    9. ')' → logprob: -9.809938430786133
    10. '+=' → logprob: -9.934938430786133

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004457416478544474
    2. '(input' → logprob: -6.254457473754883
    3. '()' → logprob: -6.754457473754883
    4. ' (' → logprob: -8.004457473754883
    5. '(
' → logprob: -8.129457473754883
    6. '('' → logprob: -9.129457473754883
    7. ')' → logprob: -9.129457473754883
    8. '(int' → logprob: -9.504457473754883
    9. '(

' → logprob: -9.754457473754883
    10. 'input' → logprob: -9.879457473754883

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.15317031741142273
    2. '()' → logprob: -2.528170347213745
    3. ')' → logprob: -2.778170347213745
    4. '()
' → logprob: -11.528170585632324
    5. '())
' → logprob: -11.528170585632324
    6. ' ())' → logprob: -11.528170585632324
    7. '(' → logprob: -12.028170585632324
    8. '();)' → logprob: -12.153170585632324
    9. '`)' → logprob: -12.403170585632324
    10. ' )' → logprob: -12.778170585632324

Token 20: 'F' (ID: 37)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0030550956726074
    2. 's' → logprob: -1.5030550956726074
    3. 'total' → logprob: -1.5030550956726074
    4. 'F' → logprob: -2.2530550956726074
    5. 'if' → logprob: -3.2530550956726074
    6. 'result' → logprob: -4.628055095672607
    7. 'S' → logprob: -5.628055095672607
    8. 't' → logprob: -5.753055095672607
    9. 'max' → logprob: -5.878055095672607
    10. 'print' → logprob: -6.128055095672607

Token 21: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5544604659080505
    2. ' =' → logprob: -0.9294604659080505
    3. '=int' → logprob: -4.054460525512695
    4. '+' → logprob: -4.554460525512695
    5. ')' → logprob: -7.054460525512695
    6. '*' → logprob: -7.054460525512695
    7. '=input' → logprob: -8.304460525512695
    8. '.' → logprob: -9.054460525512695
    9. ' +=' → logprob: -9.054460525512695
    10. ' ' → logprob: -9.179460525512695

Token 22: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007261329446919262
    2. ' (' → logprob: -8.125725746154785
    3. '('' → logprob: -8.500725746154785
    4. '(
' → logprob: -10.125725746154785
    5. '()' → logprob: -10.250725746154785
    6. '("("' → logprob: -10.500725746154785
    7. ' ' → logprob: -11.000725746154785
    8. '(input' → logprob: -11.000725746154785
    9. ')' → logprob: -11.250725746154785
    10. ''' → logprob: -11.250725746154785

Token 23: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8826355934143066
    2. '())' → logprob: -0.8826355934143066
    3. ')' → logprob: -1.7576355934143066
    4. '(' → logprob: -9.257635116577148
    5. ' )' → logprob: -11.007635116577148
    6. ' ())' → logprob: -11.132635116577148
    7. '()
' → logprob: -11.382635116577148
    8. '();)' → logprob: -12.132635116577148
    9. '())
' → logprob: -12.632635116577148
    10. '()>' → logprob: -12.757635116577148

Token 24: 'print' (ID: 1598)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.7426397800445557
    2. 'sum' → logprob: -1.7426397800445557
    3. 's' → logprob: -1.8676397800445557
    4. 'x' → logprob: -2.3676397800445557
    5. 'if' → logprob: -2.7426397800445557
    6. 'result' → logprob: -2.9926397800445557
    7. 'X' → logprob: -3.2426397800445557
    8. 'a' → logprob: -3.4926397800445557
    9. 't' → logprob: -3.7426397800445557
    10. 'max' → logprob: -3.9926397800445557

Token 25: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003348698082845658
    2. '('' → logprob: -9.125334739685059
    3. '((' → logprob: -9.375334739685059
    4. '(A' → logprob: -9.500334739685059
    5. '(sum' → logprob: -10.625334739685059
    6. '()' → logprob: -11.375334739685059
    7. '("' → logprob: -11.625334739685059
    8. '("("' → logprob: -12.125334739685059
    9. '(max' → logprob: -12.375334739685059
    10. '(E' → logprob: -13.000334739685059

Token 26: '(sorted' (ID: 92488)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033990517258644104
    2. '(A' → logprob: -3.9089906215667725
    3. '([' → logprob: -4.533990383148193
    4. '((' → logprob: -6.408990383148193
    5. '()' → logprob: -7.658990383148193
    6. '(range' → logprob: -8.908990859985352
    7. '(()' → logprob: -9.533990859985352
    8. '(a' → logprob: -9.783990859985352
    9. '(E' → logprob: -10.283990859985352
    10. '(B' → logprob: -10.283990859985352

Token 27: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.006446065381169319
    2. '(' → logprob: -5.25644588470459
    3. '([(' → logprob: -7.88144588470459
    4. '((' → logprob: -8.38144588470459
    5. '([
' → logprob: -8.75644588470459
    6. '(A' → logprob: -8.75644588470459
    7. '({' → logprob: -9.50644588470459
    8. '([{' → logprob: -10.13144588470459
    9. '([]' → logprob: -10.50644588470459
    10. '(E' → logprob: -10.88144588470459

Token 28: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014719624072313309
    2. '[A' → logprob: -4.264719486236572
    3. ' A' → logprob: -7.889719486236572
    4. 'B' → logprob: -9.88971996307373
    5. '(A' → logprob: -10.38971996307373
    6. ' [' → logprob: -10.51471996307373
    7. '[' → logprob: -11.51471996307373
    8. '[a' → logprob: -11.76471996307373
    9. '{' → logprob: -11.88971996307373
    10. ' ' → logprob: -12.13971996307373

Token 29: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1009477972984314
    2. ',B' → logprob: -2.350947856903076
    3. ' ,' → logprob: -7.350947856903076
    4. ',F' → logprob: -10.350947380065918
    5. ',D' → logprob: -10.600947380065918
    6. ',E' → logprob: -11.100947380065918
    7. ',A' → logprob: -11.475947380065918
    8. ',C' → logprob: -12.475947380065918
    9. 'B' → logprob: -13.225947380065918
    10. ',
' → logprob: -13.475947380065918

Token 30: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.03875355422496796
    2. ',' → logprob: -3.2887535095214844
    3. ' ,' → logprob: -7.288753509521484
    4. 'C' → logprob: -11.413753509521484
    5. ',E' → logprob: -12.663753509521484
    6. ',
' → logprob: -12.788753509521484
    7. ' C' → logprob: -12.913753509521484
    8. ',D' → logprob: -13.038753509521484
    9. ',c' → logprob: -13.163753509521484
    10. ',F' → logprob: -13.288753509521484

Token 31: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.016325494274497032
    2. ',' → logprob: -4.1413254737854
    3. ' ,' → logprob: -8.391325950622559
    4. ',F' → logprob: -11.141325950622559
    5. ',d' → logprob: -11.266325950622559
    6. ',E' → logprob: -11.391325950622559
    7. ',
' → logprob: -11.766325950622559
    8. ',

' → logprob: -12.766325950622559
    9. 'D' → logprob: -12.766325950622559
    10. '```' → logprob: -13.141325950622559

Token 32: '],' (ID: 2155)
  Prédit: ',E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',E' → logprob: -0.022838331758975983
    2. ',' → logprob: -4.147838115692139
    3. ',F' → logprob: -5.022838115692139
    4. ' ,' → logprob: -8.772838592529297
    5. ' ' → logprob: -12.022838592529297
    6. ',,' → logprob: -12.147838592529297
    7. 'E' → logprob: -12.147838592529297
    8. ',e' → logprob: -12.772838592529297
    9. ',I' → logprob: -13.147838592529297
    10. ',A' → logprob: -13.272838592529297

Token 33: 'reverse' (ID: 53832)
  Prédit: 'reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.48394420742988586
    2. ' reverse' → logprob: -1.2339441776275635
    3. 'key' → logprob: -3.1089441776275635
    4. ' key' → logprob: -3.1089441776275635
    5. '(reverse' → logprob: -7.608944416046143
    6. 'k' → logprob: -7.983944416046143
    7. ' k' → logprob: -8.108943939208984
    8. ')' → logprob: -8.108943939208984
    9. '[:' → logprob: -8.233943939208984
    10. '()' → logprob: -8.358943939208984

Token 34: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0004433011345099658
    2. '=' → logprob: -7.750443458557129
    3. '=False' → logprob: -11.875443458557129
    4. '(True' → logprob: -13.250443458557129
    5. '```' → logprob: -14.375443458557129
    6. ')' → logprob: -14.625443458557129
    7. ')=' → logprob: -14.625443458557129
    8. '(' → logprob: -14.750443458557129
    9. '=T' → logprob: -15.000443458557129
    10. ' =' → logprob: -15.000443458557129

Token 35: ')' (ID: 8)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.28634190559387207
    2. ')' → logprob: -1.536341905593872
    3. '[:' → logprob: -4.036341667175293
    4. '[' → logprob: -4.536341667175293
    5. ')))' → logprob: -5.661341667175293
    6. '))' → logprob: -6.911341667175293
    7. '[:-' → logprob: -7.911341667175293
    8. ' )[' → logprob: -8.911341667175293
    9. '))[' → logprob: -9.411341667175293
    10. ')>' → logprob: -9.661341667175293

Token 36: '[:' (ID: 7808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05179687216877937
    2. '[:' → logprob: -3.0517969131469727
    3. ')' → logprob: -6.051796913146973
    4. ')[' → logprob: -7.926796913146973
    5. '))' → logprob: -8.051796913146973
    6. '[:-' → logprob: -9.801796913146973
    7. '[-' → logprob: -10.801796913146973
    8. ' [' → logprob: -10.926796913146973
    9. '```' → logprob: -11.176796913146973
    10. ',[' → logprob: -12.051796913146973

Token 37: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.012656208127737045
    2. ' ' → logprob: -4.387656211853027
    3. '2' → logprob: -9.262656211853027
    4. '4' → logprob: -10.387656211853027
    5. '   ' → logprob: -11.887656211853027
    6. '1' → logprob: -12.512656211853027
    7. '  ' → logprob: -12.950156211853027
    8. '-' → logprob: -13.325156211853027
    9. ')' → logprob: -13.887656211853027
    10. '```' → logprob: -14.200156211853027

Token 38: '])+' (ID: 119485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38829120993614197
    2. ']))' → logprob: -1.2632912397384644
    3. '])' → logprob: -4.013291358947754
    4. '))' → logprob: -4.263291358947754
    5. ']' → logprob: -6.138291358947754
    6. ')])' → logprob: -6.263291358947754
    7. ')+' → logprob: -6.638291358947754
    8. ')))' → logprob: -7.263291358947754
    9. ']+' → logprob: -8.388291358947754
    10. '+' → logprob: -8.513291358947754

Token 39: 'max' (ID: 3228)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5368401408195496
    2. 'max' → logprob: -1.2868402004241943
    3. ' sum' → logprob: -2.2868402004241943
    4. ' max' → logprob: -3.4118402004241943
    5. 'sorted' → logprob: -6.536839962005615
    6. 'F' → logprob: -6.786839962005615
    7. ' F' → logprob: -7.161839962005615
    8. 'E' → logprob: -7.661839962005615
    9. 'min' → logprob: -8.036840438842773
    10. ' sorted' → logprob: -8.286840438842773

Token 40: '(E' (ID: 20882)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.17257674038410187
    2. '(sorted' → logprob: -1.9225767850875854
    3. '(' → logprob: -4.422576904296875
    4. '((' → logprob: -9.297576904296875
    5. '([(' → logprob: -9.297576904296875
    6. '(F' → logprob: -10.672576904296875
    7. '(([' → logprob: -11.047576904296875
    8. '(E' → logprob: -11.172576904296875
    9. '([]' → logprob: -12.422576904296875
    10. '(A' → logprob: -12.547576904296875

Token 41: ',F' (ID: 66678)
  Prédit: ',F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',F' → logprob: -0.11459413170814514
    2. ',' → logprob: -2.2395942211151123
    3. ' ,' → logprob: -6.739593982696533
    4. ',D' → logprob: -7.989593982696533
    5. ',f' → logprob: -9.989594459533691
    6. ',G' → logprob: -10.239594459533691
    7. ',

' → logprob: -10.614594459533691
    8. ',E' → logprob: -10.739594459533691
    9. '+' → logprob: -10.864594459533691
    10. ',)' → logprob: -11.114594459533691

Token 42: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018374456092715263
    2. ')' → logprob: -4.018374443054199
    3. ')))' → logprob: -8.5183744430542
    4. '))
' → logprob: -11.3933744430542
    5. ')+' → logprob: -12.3933744430542
    6. ' ))' → logprob: -13.2683744430542
    7. ')
' → logprob: -13.6433744430542
    8. '+' → logprob: -14.2683744430542
    9. '))

' → logprob: -14.6433744430542
    10. '),' → logprob: -14.6433744430542


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 40
Tokens correctement prédits (1ère position, stricte): 9
Tokens correctement prédits (1ère position, avec adaptation): 9
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 22.50%
Précision adaptée (1ère position): 22.50%
Précision (top 10): 75.00%
================================================================================
