================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_monday_saturday_number(n):
    r = n % 7
    return r == 1 or r == 6

def monday_saturday_gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def divides(a, b):
    return b % a == 0

def is_monday_saturday_prime(n):
    if n <= 1:
        return False
    if not is_monday_saturday_number(n):
        return False
    # check divisors which are Monday-Saturday numbers
    for i in range(2, n):
        if divides(i, n) and is_monday_saturday_number(i):
            # i divides n; check if i is Monday-Saturday divisor
            if i != 1 and i != n:
                return False
    return True

def main():
    while True:
        line = input().strip()
        if line == '1':
            break
        n = int(line)
        factors = []
        # find Monday-Saturday prime factors of n
        # try all possible Monday-Saturday numbers <= n
        for i in range(2, n+1):
            if divides(i, n) and is_monday_saturday_number(i):
                if is_monday_saturday_prime(i):
                    if i not in factors:
                        factors.append(i)
        factors.sort()
        print(str(n)+":", end="")
        for f in factors:
            print(" "+str(f), end="")
        print()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_m' (ID: 1285)
  → Token d'amorce (pas de prédiction)

Token 3: 'onday' (ID: 8426)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2325892448425293
    2. '_a' → logprob: -2.2325892448425293
    3. 'e' → logprob: -3.3575892448425293
    4. 'ultiple' → logprob: -3.4825892448425293
    5. '(a' → logprob: -4.482589244842529
    6. '_' → logprob: -5.232589244842529
    7. 'o' → logprob: -5.857589244842529
    8. 'atching' → logprob: -5.982589244842529
    9. 'ultip' → logprob: -6.107589244842529
    10. 'ulti' → logprob: -6.482589244842529

Token 4: '_s' (ID: 1278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1979951709508896
    2. '():' → logprob: -1.9479951858520508
    3. '(:' → logprob: -3.447995185852051
    4. '(_:' → logprob: -6.197995185852051
    5. ':' → logprob: -6.697995185852051
    6. '_' → logprob: -7.072995185852051
    7. '```' → logprob: -8.32299518585205
    8. '(_' → logprob: -8.69799518585205
    9. '_:' → logprob: -9.19799518585205
    10. '(
' → logprob: -9.44799518585205

Token 5: 'aturday' (ID: 8790)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9504857659339905
    2. '(' → logprob: -1.2004857063293457
    3. 'u' → logprob: -2.0754857063293457
    4. 'unday' → logprob: -2.7004857063293457
    5. '(u' → logprob: -2.8254857063293457
    6. '(t' → logprob: -4.325485706329346
    7. '```' → logprob: -4.825485706329346
    8. 'tring' → logprob: -4.825485706329346
    9. 'aturday' → logprob: -4.950485706329346
    10. 'a' → logprob: -5.200485706329346

Token 6: '_number' (ID: 11733)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04956323653459549
    2. '():' → logprob: -3.17456316947937
    3. '(:' → logprob: -5.299563407897949
    4. '(day' → logprob: -7.299563407897949
    5. ':' → logprob: -8.29956340789795
    6. '_' → logprob: -8.79956340789795
    7. '(_' → logprob: -9.04956340789795
    8. '(a' → logprob: -9.54956340789795
    9. '(s' → logprob: -10.29956340789795
    10. '(_:' → logprob: -10.42456340789795

Token 7: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012429672060534358
    2. '(:' → logprob: -7.2512431144714355
    3. '(_:' → logprob: -8.501242637634277
    4. '(_' → logprob: -9.001242637634277
    5. '():' → logprob: -9.751242637634277
    6. '(s' → logprob: -10.376242637634277
    7. '```' → logprob: -11.126242637634277
    8. '_' → logprob: -11.126242637634277
    9. '(x' → logprob: -11.251242637634277
    10. ' (' → logprob: -11.501242637634277

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3142983317375183
    2. ')' → logprob: -1.314298391342163
    3. ':' → logprob: -7.064298152923584
    4. '):
' → logprob: -9.564298629760742
    5. '```' → logprob: -10.064298629760742
    6. ''):' → logprob: -10.939298629760742
    7. ')>' → logprob: -11.939298629760742
    8. '`)' → logprob: -12.314298629760742
    9. ':)' → logprob: -12.439298629760742
    10. '_' → logprob: -12.689298629760742

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.773775041103363
    2. '(' → logprob: -1.2737751007080078
    3. '   ' → logprob: -1.5237751007080078
    4. '```' → logprob: -4.023775100708008
    5. '():' → logprob: -4.523775100708008
    6. '(:' → logprob: -5.398775100708008
    7. ':
' → logprob: -6.398775100708008
    8. ' ' → logprob: -6.773775100708008
    9. ''' → logprob: -7.023775100708008
    10. '(
' → logprob: -7.148775100708008

Token 10: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15073992311954498
    2. '```' → logprob: -2.525739908218384
    3. ''' → logprob: -3.775739908218384
    4. ' return' → logprob: -4.525740146636963
    5. ' ' → logprob: -4.775740146636963
    6. 'r' (adapté à ' r') → logprob: -6.025740146636963
    7. 'return' → logprob: -6.025740146636963
    8. ' ```' → logprob: -6.525740146636963
    9. '    ' → logprob: -6.775740146636963
    10. '(' → logprob: -6.775740146636963

Token 11: ' =' (ID: 314)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.011392625980079174
    2. ''' → logprob: -5.261392593383789
    3. ''''' → logprob: -6.261392593383789
    4. '"' → logprob: -6.636392593383789
    5. ''''
' → logprob: -6.886392593383789
    6. '"""
' → logprob: -7.261392593383789
    7. '"""' → logprob: -7.636392593383789
    8. 'e' → logprob: -8.261392593383789
    9. '```' → logprob: -9.261392593383789
    10. 'etur' → logprob: -9.261392593383789

Token 12: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2224196493625641
    2. 'n' → logprob: -2.4724197387695312
    3. ' range' → logprob: -3.7224197387695312
    4. ' [' → logprob: -3.8474197387695312
    5. ' (' → logprob: -4.222419738769531
    6. ' ' → logprob: -4.347419738769531
    7. 'range' → logprob: -4.722419738769531
    8. '[' → logprob: -4.847419738769531
    9. '(n' → logprob: -5.222419738769531
    10. ' any' → logprob: -5.722419738769531

Token 13: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2330441176891327
    2. '%' → logprob: -1.608044147491455
    3. ' ' → logprob: -5.858044147491455
    4. 'eturn' → logprob: -6.483044147491455
    5. ' ==' → logprob: -6.483044147491455
    6. 'e' → logprob: -7.358044147491455
    7. '>' → logprob: -8.983043670654297
    8. '[' → logprob: -9.108043670654297
    9. 'em' → logprob: -9.108043670654297
    10. '```' → logprob: -9.483043670654297

Token 14: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.01628139428794384
    2. ' ' → logprob: -4.141281604766846
    3. '6' → logprob: -8.391281127929688
    4. '2' → logprob: -11.766281127929688
    5. '10' → logprob: -12.266281127929688
    6. '14' → logprob: -12.391281127929688
    7. '```' → logprob: -14.391281127929688
    8. '  ' → logprob: -14.516281127929688
    9. '12' → logprob: -14.891281127929688
    10. '1' → logprob: -15.141281127929688

Token 15: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0001322639436693862
    2. '6' → logprob: -9.00013256072998
    3. ' ' → logprob: -12.62513256072998
    4. '14' → logprob: -13.12513256072998
    5. '2' → logprob: -13.62513256072998
    6. '```' → logprob: -14.50013256072998
    7. '10' → logprob: -14.62513256072998
    8. '12' → logprob: -15.12513256072998
    9. '5' → logprob: -15.75013256072998
    10. '3' → logprob: -16.000131607055664

Token 16: '
' (ID: 198)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23099535703659058
    2. '==' → logprob: -1.6059954166412354
    3. ' ' → logprob: -5.605995178222656
    4. '   ' → logprob: -7.105995178222656
    5. '=' → logprob: -7.730995178222656
    6. '```' → logprob: -8.855995178222656
    7. '  ' → logprob: -9.355995178222656
    8. ' =' → logprob: -9.730995178222656
    9. '<|end|>' → logprob: -9.730995178222656
    10. '0' → logprob: -9.855995178222656

Token 17: '   ' (ID: 271)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.29214513301849365
    2. ' ' → logprob: -2.167145252227783
    3. '==' → logprob: -2.417145252227783
    4. '   ' → logprob: -4.167145252227783
    5. '=' → logprob: -4.667145252227783
    6. '```' → logprob: -5.167145252227783
    7. ' return' → logprob: -5.292145252227783
    8. '    ' → logprob: -5.667145252227783
    9. '  ' → logprob: -5.792145252227783
    10. ' =' → logprob: -6.042145252227783

Token 18: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9059141278266907
    2. ' return' → logprob: -1.030914068222046
    3. ' ' → logprob: -1.780914068222046
    4. '```' → logprob: -3.780914068222046
    5. ' ==' → logprob: -4.280914306640625
    6. 'return' (adapté à ' return') → logprob: -4.405914306640625
    7. '==' → logprob: -5.030914306640625
    8. '  ' → logprob: -5.530914306640625
    9. '    ' → logprob: -5.780914306640625
    10. '=' → logprob: -6.655914306640625

Token 19: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.018313821405172348
    2. 'r' → logprob: -4.018313884735107
    3. '(r' → logprob: -9.76831340789795
    4. ' ' → logprob: -9.89331340789795
    5. '(' → logprob: -11.26831340789795
    6. '0' → logprob: -11.26831340789795
    7. ' (' → logprob: -11.64331340789795
    8. '1' → logprob: -12.26831340789795
    9. ' True' → logprob: -12.39331340789795
    10. 'True' → logprob: -12.64331340789795

Token 20: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3568086326122284
    2. ' in' → logprob: -1.7318086624145508
    3. ' ' → logprob: -2.356808662414551
    4. '==' → logprob: -3.606808662414551
    5. '0' → logprob: -7.606808662414551
    6. '<|end|>' → logprob: -7.981808662414551
    7. '  ' → logprob: -9.35680866241455
    8. 'in' → logprob: -9.60680866241455
    9. ' !=' → logprob: -9.60680866241455
    10. ' <=' → logprob: -9.98180866241455

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45688551664352417
    2. '1' → logprob: -1.331885576248169
    3. '0' → logprob: -2.331885576248169
    4. '5' → logprob: -5.83188533782959
    5. '6' → logprob: -6.83188533782959
    6. '3' → logprob: -7.08188533782959
    7. '4' → logprob: -7.45688533782959
    8. '2' → logprob: -8.83188533782959
    9. '(' → logprob: -9.58188533782959
    10. ' (' → logprob: -11.95688533782959

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.185927614569664
    2. '0' → logprob: -1.8109276294708252
    3. '5' → logprob: -5.935927391052246
    4. '6' → logprob: -6.185927391052246
    5. ' ' → logprob: -6.810927391052246
    6. '3' → logprob: -8.560927391052246
    7. '4' → logprob: -9.185927391052246
    8. '(' → logprob: -10.185927391052246
    9. '2' → logprob: -10.560927391052246
    10. '```' → logprob: -13.810927391052246

Token 23: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0011597428238019347
    2. ' ' → logprob: -7.50115966796875
    3. 'or' → logprob: -7.62615966796875
    4. '<|end|>' → logprob: -9.12615966796875
    5. '0' → logprob: -12.12615966796875
    6. '  ' → logprob: -13.50115966796875
    7. ' ' → logprob: -13.75115966796875
    8. '	or' → logprob: -14.50115966796875
    9. '1' → logprob: -15.50115966796875
    10. ' and' → logprob: -15.50115966796875

Token 24: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.000444850797066465
    2. 'r' → logprob: -7.7504448890686035
    3. ' ' → logprob: -11.625444412231445
    4. ' ' → logprob: -12.375444412231445
    5. '<|end|>' → logprob: -15.125444412231445
    6. '6' → logprob: -15.750444412231445
    7. '4' → logprob: -16.250444412231445
    8. ' р' → logprob: -16.750444412231445
    9. '7' → logprob: -17.000444412231445
    10. ' ' → logprob: -17.250444412231445

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.100211963057518
    2. '==' → logprob: -2.3502118587493896
    3. ' ' → logprob: -12.725212097167969
    4. '=' → logprob: -13.725212097167969
    5. ' =' → logprob: -14.600212097167969
    6. '0' → logprob: -15.975212097167969
    7. '<|end|>' → logprob: -15.975212097167969
    8. '...' → logprob: -16.10021209716797
    9. ' ' → logprob: -16.10021209716797
    10. 'def' → logprob: -16.85021209716797

Token 26: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0004496189649216831
    2. ' ' → logprob: -8.000449180603027
    3. '5' → logprob: -9.750449180603027
    4. '0' → logprob: -9.875449180603027
    5. '7' → logprob: -12.375449180603027
    6. '2' → logprob: -16.375450134277344
    7. '   ' → logprob: -17.250450134277344
    8. '٦' → logprob: -17.437950134277344
    9. '```' → logprob: -18.000450134277344
    10. '６' → logprob: -18.187950134277344

Token 27: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00017278951418120414
    2. '0' → logprob: -8.87517261505127
    3. '5' → logprob: -10.62517261505127
    4. ' ' → logprob: -11.87517261505127
    5. '7' → logprob: -14.00017261505127
    6. '٦' → logprob: -15.62517261505127
    7. '```' → logprob: -16.125173568725586
    8. '   ' → logprob: -16.875173568725586
    9. '2' → logprob: -17.000173568725586
    10. '६' → logprob: -17.312673568725586

Token 28: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' monday' (ID: 143575)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.316681832075119
    2. ' ' → logprob: -1.4416818618774414
    3. '_' → logprob: -4.441681861877441
    4. ' space' → logprob: -4.816681861877441
    5. ' calculate' → logprob: -5.566681861877441
    6. ' ' → logprob: -6.066681861877441
    7. ' add' → logprob: -6.441681861877441
    8. ' get' → logprob: -6.941681861877441
    9. '  ' → logprob: -7.191681861877441
    10. ' day' → logprob: -7.441681861877441

Token 31: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.058372944593429565
    2. '_' → logprob: -2.933372974395752
    3. '_number' → logprob: -6.558372974395752
    4. '_day' → logprob: -6.808372974395752
    5. '_to' → logprob: -7.558372974395752
    6. '_numbers' → logprob: -8.558372497558594
    7. '_week' → logprob: -10.058372497558594
    8. 's' → logprob: -10.558372497558594
    9. '_is' → logprob: -10.808372497558594
    10. '_name' → logprob: -10.808372497558594

Token 32: 'aturday' (ID: 8790)
  Prédit: 'atur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atur' → logprob: -0.8976163268089294
    2. 'aturday' → logprob: -1.0226163864135742
    3. 'um' → logprob: -2.272616386413574
    4. 'at' → logprob: -2.397616386413574
    5. 't' → logprob: -5.022616386413574
    6. 'atu' → logprob: -5.397616386413574
    7. 'unday' → logprob: -5.522616386413574
    8. 'a' → logprob: -5.522616386413574
    9. 'quare' → logprob: -5.897616386413574
    10. 'chedule' → logprob: -6.022616386413574

Token 33: '_g' (ID: 5439)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.1589033156633377
    2. '_numbers' → logprob: -2.0339033603668213
    3. '_' → logprob: -5.908903121948242
    4. '_list' → logprob: -6.033903121948242
    5. '_week' → logprob: -6.283903121948242
    6. '_date' → logprob: -6.783903121948242
    7. '_s' → logprob: -6.908903121948242
    8. '_day' → logprob: -7.033903121948242
    9. '_count' → logprob: -7.533903121948242
    10. '_n' → logprob: -7.783903121948242

Token 34: 'cd' (ID: 8301)
  Prédit: 'enerator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enerator' → logprob: -0.21180599927902222
    2. 'en' → logprob: -2.211806058883667
    3. 'roup' → logprob: -3.336806058883667
    4. 'enerate' → logprob: -4.086805820465088
    5. 'et' → logprob: -4.961805820465088
    6. 'u' → logprob: -5.836805820465088
    7. 'e' → logprob: -5.961805820465088
    8. 'ener' → logprob: -6.336805820465088
    9. 'ame' → logprob: -6.586805820465088
    10. 'r' → logprob: -6.711805820465088

Token 35: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10001544654369354
    2. '_' → logprob: -2.72501540184021
    3. '(n' → logprob: -3.60001540184021
    4. '(a' → logprob: -7.850015640258789
    5. '(_)' → logprob: -8.100015640258789
    6. 'def' → logprob: -8.350015640258789
    7. 's' → logprob: -8.600015640258789
    8. '_(' → logprob: -8.600015640258789
    9. ' (' → logprob: -8.850015640258789
    10. '```' → logprob: -8.975015640258789

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007627569139003754
    2. ',b' → logprob: -5.382627487182617
    3. ' ,' → logprob: -6.257627487182617
    4. '_,' → logprob: -7.382627487182617
    5. ',)' → logprob: -8.882627487182617
    6. ',_' → logprob: -9.007627487182617
    7. ')' → logprob: -9.257627487182617
    8. ',n' → logprob: -10.257627487182617
    9. ',a' → logprob: -11.007627487182617
    10. ' ' → logprob: -11.007627487182617

Token 37: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02325211651623249
    2. ' b' → logprob: -3.773252010345459
    3. ' ' → logprob: -12.148252487182617
    4. '   ' → logprob: -14.648252487182617
    5. 'm' → logprob: -15.648252487182617
    6. 'n' → logprob: -15.898252487182617
    7. 's' → logprob: -16.023252487182617
    8. '    ' → logprob: -16.148252487182617
    9. '  ' → logprob: -16.148252487182617
    10. '	b' → logprob: -16.648252487182617

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002865258604288101
    2. ')' → logprob: -5.877865314483643
    3. ':' → logprob: -10.752864837646484
    4. '):
' → logprob: -10.877864837646484
    5. '   ' → logprob: -11.377864837646484
    6. ' ):' → logprob: -13.252864837646484
    7. ''):' → logprob: -13.377864837646484
    8. ',' → logprob: -13.877864837646484
    9. '**' → logprob: -14.377864837646484
    10. ' ' → logprob: -14.752864837646484

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002340685110539198
    2. '<|end|>' → logprob: -6.877340793609619
    3. ' ' → logprob: -7.502340793609619
    4. '       ' → logprob: -8.502340316772461
    5. '    
' → logprob: -8.627340316772461
    6. '  ' → logprob: -9.502340316772461
    7. ':' → logprob: -9.877340316772461
    8. '    ' → logprob: -10.002340316772461
    9. ' 
' → logprob: -10.127340316772461
    10. ' return' → logprob: -10.252340316772461

Token 40: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0752120092511177
    2. ' 
' → logprob: -3.325212001800537
    3. '    ' → logprob: -4.325212001800537
    4. ' ' → logprob: -4.575212001800537
    5. 'n' → logprob: -6.075212001800537
    6. ' while' → logprob: -6.200212001800537
    7. ' n' → logprob: -6.450212001800537
    8. '0' → logprob: -6.950212001800537
    9. '    
' → logprob: -7.325212001800537
    10. ' a' → logprob: -7.450212001800537

Token 41: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5958603620529175
    2. ' a' → logprob: -1.2208603620529175
    3. 'b' → logprob: -2.345860481262207
    4. 'a' → logprob: -2.845860481262207
    5. ' ' → logprob: -9.970860481262207
    6. '	a' → logprob: -10.970860481262207
    7. '	b' → logprob: -11.595860481262207
    8. '   ' → logprob: -12.220860481262207
    9. '(a' → logprob: -12.970860481262207
    10. '_b' → logprob: -12.970860481262207

Token 42: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.013832365162670612
    2. ':' → logprob: -4.8888325691223145
    3. ' >' → logprob: -5.7638325691223145
    4. '!=' → logprob: -6.2638325691223145
    5. '>' → logprob: -7.1388325691223145
    6. ' and' → logprob: -8.388832092285156
    7. ' ' → logprob: -10.513832092285156
    8. ' %' → logprob: -10.638832092285156
    9. 'and' → logprob: -11.263832092285156
    10. '%' → logprob: -11.638832092285156

Token 43: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10020763427019119
    2. '0' → logprob: -2.350207567214966
    3. '  ' → logprob: -14.975207328796387
    4. '```' → logprob: -15.225207328796387
    5. '   ' → logprob: -15.725207328796387
    6. ' ' → logprob: -16.350208282470703
    7. '<|end|>' → logprob: -16.350208282470703
    8. '	' → logprob: -18.100208282470703
    9. '۰' → logprob: -18.225208282470703
    10. 'a' → logprob: -18.600208282470703

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -18.750030517578125
    4. '```' → logprob: -19.375030517578125
    5. '۰' → logprob: -20.125030517578125
    6. '  ' → logprob: -20.250030517578125
    7. 'a' → logprob: -21.375030517578125
    8. ' ' → logprob: -21.625030517578125
    9. '00' → logprob: -21.937530517578125
    10. '０' → logprob: -21.937530517578125

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13555826246738434
    2. ':
' → logprob: -2.1355583667755127
    3. '   ' → logprob: -5.260558128356934
    4. '       ' → logprob: -6.135558128356934
    5. '<|end|>' → logprob: -7.010558128356934
    6. '):
' → logprob: -9.510558128356934
    7. '<|end|>' → logprob: -9.760558128356934
    8. ' and' → logprob: -10.385558128356934
    9. ':return' → logprob: -10.635558128356934
    10. ' :' → logprob: -10.885558128356934

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07624950259923935
    2. '   ' → logprob: -3.201249599456787
    3. '<|end|>' → logprob: -4.201249599456787
    4. '    
' → logprob: -5.451249599456787
    5. ' ' → logprob: -5.701249599456787
    6. ' 
' → logprob: -6.451249599456787
    7. '```' → logprob: -6.576249599456787
    8. '
' → logprob: -6.701249599456787
    9. '        
' → logprob: -6.951249599456787
    10. '    ' → logprob: -7.076249599456787

Token 47: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14209461212158203
    2. 'a' (adapté à ' a') → logprob: -2.142094612121582
    3. ' temp' → logprob: -5.392094612121582
    4. ' t' → logprob: -5.767094612121582
    5. ' r' → logprob: -6.392094612121582
    6. '    ' → logprob: -6.392094612121582
    7. 'temp' → logprob: -6.892094612121582
    8. 't' → logprob: -7.267094612121582
    9. '```' → logprob: -7.392094612121582
    10. 'r' → logprob: -8.267094612121582

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010322150774300098
    2. ' ,' → logprob: -7.50103235244751
    3. '%' → logprob: -8.001031875610352
    4. '%,' → logprob: -9.501031875610352
    5. ' %=' → logprob: -10.251031875610352
    6. '%=' → logprob: -11.251031875610352
    7. ' %' → logprob: -11.376031875610352
    8. '=' → logprob: -12.876031875610352
    9. ',b' → logprob: -13.001031875610352
    10. ' %,' → logprob: -13.751031875610352

Token 49: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1428738832473755
    2. 'b' → logprob: -2.017873764038086
    3. '<|end|>' → logprob: -8.892873764038086
    4. ' ' → logprob: -9.767873764038086
    5. '<|end|>' → logprob: -13.892873764038086
    6. ' ' → logprob: -14.017873764038086
    7. '	b' → logprob: -14.767873764038086
    8. '    ' → logprob: -15.392873764038086
    9. '```' → logprob: -15.392873764038086
    10. 's' → logprob: -15.955373764038086

Token 50: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759403705596924
    2. ' =' → logprob: -0.8259403705596924
    3. ',' → logprob: -15.200940132141113
    4. ' ' → logprob: -15.575940132141113
    5. '%=' → logprob: -15.700940132141113
    6. '<|end|>' → logprob: -16.45094108581543
    7. '   ' → logprob: -16.70094108581543
    8. ' %=' → logprob: -16.70094108581543
    9. ')' → logprob: -17.07594108581543
    10. '＝' → logprob: -18.20094108581543

Token 51: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16022585332393646
    2. 'b' → logprob: -1.9102258682250977
    3. ' ' → logprob: -13.660225868225098
    4. '	b' → logprob: -15.285225868225098
    5. '   ' → logprob: -16.41022491455078
    6. '(b' → logprob: -16.66022491455078
    7. ')b' → logprob: -16.66022491455078
    8. '```' → logprob: -17.03522491455078
    9. ' ' → logprob: -17.53522491455078
    10. '>b' → logprob: -17.53522491455078

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0722858102526516e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',a' → logprob: -15.375041007995605
    4. 'a' → logprob: -15.875041007995605
    5. ' ' → logprob: -16.50004005432129
    6. '<|end|>' → logprob: -16.87504005432129
    7. '‌,' → logprob: -17.00004005432129
    8. ',
' → logprob: -18.00004005432129
    9. ' a' → logprob: -18.12504005432129
    10. '<|end|>' → logprob: -19.25004005432129

Token 53: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.054883409291505814
    2. ' a' → logprob: -2.9298834800720215
    3. '<|end|>' → logprob: -14.429883003234863
    4. ' ' → logprob: -15.554883003234863
    5. '	a' → logprob: -15.679883003234863
    6. '>a' → logprob: -17.42988395690918
    7. '   ' → logprob: -17.55488395690918
    8. '_a' → logprob: -17.55488395690918
    9. '<|end|>' → logprob: -17.92988395690918
    10. '%' → logprob: -18.05488395690918

Token 54: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.11295945197343826
    2. ' %' → logprob: -2.237959384918213
    3. ' ' → logprob: -9.362959861755371
    4. '<|end|>' → logprob: -10.362959861755371
    5. ' ' → logprob: -11.737959861755371
    6. 'a' → logprob: -12.612959861755371
    7. '%i' → logprob: -12.862959861755371
    8. '%b' → logprob: -13.487959861755371
    9. '%A' → logprob: -13.487959861755371
    10. '%s' → logprob: -14.737959861755371

Token 55: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.615255839889869e-05
    2. ' b' → logprob: -9.250096321105957
    3. '	b' → logprob: -20.00009536743164
    4. ' ' → logprob: -21.00009536743164
    5. '<|end|>' → logprob: -21.50009536743164
    6. '_b' → logprob: -23.50009536743164
    7. ')b' → logprob: -23.50009536743164
    8. '   ' → logprob: -23.50009536743164
    9. '*b' → logprob: -23.87509536743164
    10. '$b' → logprob: -23.87509536743164

Token 56: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16635148227214813
    2. ' ' → logprob: -2.791351556777954
    3. ' 
' → logprob: -3.416351556777954
    4. '    
' → logprob: -4.041351318359375
    5. ' return' → logprob: -4.416351318359375
    6. '  
' → logprob: -4.416351318359375
    7. '<|end|>' → logprob: -5.416351318359375
    8. 'return' → logprob: -5.541351318359375
    9. '       ' → logprob: -5.916351318359375
    10. '
' → logprob: -6.416351318359375

Token 58: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3920910060405731
    2. '   ' → logprob: -1.7670910358428955
    3. 'return' (adapté à ' return') → logprob: -2.0170910358428955
    4. ' ' → logprob: -4.892090797424316
    5. ' 
' → logprob: -5.517090797424316
    6. '	return' → logprob: -5.892090797424316
    7. 'a' → logprob: -6.017090797424316
    8. ':return' → logprob: -6.267090797424316
    9. ' a' → logprob: -7.142090797424316
    10. '    
' → logprob: -7.892090797424316

Token 59: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.575951337814331
    2. ' a' → logprob: -0.825951337814331
    3. ' abs' → logprob: -12.07595157623291
    4. ' ' → logprob: -12.45095157623291
    5. 'abs' → logprob: -13.82595157623291
    6. ' ' → logprob: -14.57595157623291
    7. '	a' → logprob: -15.20095157623291
    8. '_a' → logprob: -15.45095157623291
    9. '  ' → logprob: -16.200950622558594
    10. '   ' → logprob: -16.575950622558594

Token 60: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6786370277404785
    2. '
' → logprob: -1.3036370277404785
    3. '<|end|>' → logprob: -1.8036370277404785
    4. '

' → logprob: -3.4286370277404785
    5. '```' → logprob: -4.9286370277404785
    6. '\n' → logprob: -5.3036370277404785
    7. '\' → logprob: -6.0536370277404785
    8. '#' → logprob: -6.3036370277404785
    9. 'n' → logprob: -6.4286370277404785
    10. '<|end|>' → logprob: -6.5536370277404785

Token 61: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3089057505130768
    2. '
' → logprob: -2.183905839920044
    3. '<|end|>' → logprob: -2.558905839920044
    4. '#' → logprob: -3.308905839920044
    5. '```' → logprob: -4.308905601501465
    6. 'n' → logprob: -4.808905601501465
    7. '

' → logprob: -5.683905601501465
    8. 'print' → logprob: -6.058905601501465
    9. '\n' → logprob: -6.183905601501465
    10. 'a' → logprob: -6.433905601501465

Token 62: ' divides' (ID: 144028)
  Prédit: ' monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' monday' → logprob: -0.35888588428497314
    2. ' ' → logprob: -1.7338858842849731
    3. ' is' → logprob: -2.8588857650756836
    4. ' main' → logprob: -3.6088857650756836
    5. ' saturday' → logprob: -4.483885765075684
    6. 'm' → logprob: -4.858885765075684
    7. ' gcd' → logprob: -5.358885765075684
    8. ' sunday' → logprob: -5.733885765075684
    9. ' _' → logprob: -6.108885765075684
    10. ' m' → logprob: -6.733885765075684

Token 63: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3296607732772827
    2. '(n' → logprob: -1.4546607732772827
    3. '(m' → logprob: -3.9546608924865723
    4. '_m' → logprob: -4.704660892486572
    5. '_number' → logprob: -5.579660892486572
    6. '(x' → logprob: -5.704660892486572
    7. '_even' → logprob: -5.954660892486572
    8. '_all' → logprob: -6.704660892486572
    9. '_exact' → logprob: -6.829660892486572
    10. '(' → logprob: -6.829660892486572

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.141186450899113e-05
    2. ' ,' → logprob: -11.000020980834961
    3. ',b' → logprob: -12.375020980834961
    4. '):' → logprob: -16.25002098083496
    5. ')' → logprob: -16.37502098083496
    6. ',
' → logprob: -16.75002098083496
    7. 's' → logprob: -16.87502098083496
    8. 'b' → logprob: -17.00002098083496
    9. ',n' → logprob: -17.00002098083496
    10. '_,' → logprob: -17.12502098083496

Token 65: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.34853100776672363
    2. 'b' → logprob: -1.2235310077667236
    3. ' ' → logprob: -9.598530769348145
    4. ' n' → logprob: -11.973530769348145
    5. 'n' → logprob: -12.348530769348145
    6. '   ' → logprob: -13.223530769348145
    7. '	b' → logprob: -13.598530769348145
    8. '  ' → logprob: -13.723530769348145
    9. ')' → logprob: -14.223530769348145
    10. '```' → logprob: -14.348530769348145

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.946405094116926e-05
    2. ')' → logprob: -10.125079154968262
    3. '):
' → logprob: -10.750079154968262
    4. ' ):' → logprob: -11.500079154968262
    5. ':' → logprob: -12.000079154968262
    6. ',' → logprob: -14.375079154968262
    7. '):
' → logprob: -14.750079154968262
    8. '   ' → logprob: -15.125079154968262
    9. '):

' → logprob: -17.000080108642578
    10. '=' → logprob: -17.125080108642578

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03344858065247536
    2. '    ' → logprob: -4.158448696136475
    3. ' ' → logprob: -4.908448696136475
    4. ' return' → logprob: -5.658448696136475
    5. '<|end|>' → logprob: -6.158448696136475
    6. ':' → logprob: -6.533448696136475
    7. ' :' → logprob: -7.158448696136475
    8. '  ' → logprob: -7.408448696136475
    9. ' (' → logprob: -7.408448696136475
    10. ':return' → logprob: -8.533448219299316

Token 68: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0876220092177391
    2. ' b' → logprob: -2.9626219272613525
    3. '   ' → logprob: -3.7126219272613525
    4. 'return' (adapté à ' return') → logprob: -5.837622165679932
    5. ' ' → logprob: -6.462622165679932
    6. ' ' → logprob: -6.962622165679932
    7. ' a' → logprob: -6.962622165679932
    8. 'b' → logprob: -7.087622165679932
    9. ' 
' → logprob: -8.212621688842773
    10. '    ' → logprob: -8.587621688842773

Token 69: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5764954686164856
    2. 'b' → logprob: -0.8264954686164856
    3. 'a' → logprob: -7.82649564743042
    4. ' a' → logprob: -8.826495170593262
    5. ' (' → logprob: -12.701495170593262
    6. '(b' → logprob: -12.951495170593262
    7. '	b' → logprob: -13.576495170593262
    8. ' ' → logprob: -13.576495170593262
    9. '(' → logprob: -14.326495170593262
    10. ' ' → logprob: -14.576495170593262

Token 70: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10021303594112396
    2. '%' → logprob: -2.350213050842285
    3. ' ' → logprob: -12.850213050842285
    4. ' ' → logprob: -13.100213050842285
    5. 'a' → logprob: -14.725213050842285
    6. '%b' → logprob: -15.225213050842285
    7. ' a' → logprob: -15.350213050842285
    8. '%s' → logprob: -15.475213050842285
    9. '%d' → logprob: -16.22521209716797
    10. '%c' → logprob: -16.35021209716797

Token 71: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '	a' → logprob: -20.12520408630371
    4. ' ' → logprob: -21.25020408630371
    5. '>a' → logprob: -21.75020408630371
    6. 'а' → logprob: -22.12520408630371
    7. '<|end|>' → logprob: -22.37520408630371
    8. '```' → logprob: -23.25020408630371
    9. '   ' → logprob: -23.62520408630371
    10. ')a' → logprob: -24.12520408630371

Token 72: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19620180130004883
    2. '==' → logprob: -2.071201801300049
    3. ' ' → logprob: -3.071201801300049
    4. '0' → logprob: -5.196201801300049
    5. '=' → logprob: -8.69620132446289
    6. '<|end|>' → logprob: -11.07120132446289
    7. ' =' → logprob: -12.07120132446289
    8. ')==' → logprob: -12.32120132446289
    9. ' ' → logprob: -12.32120132446289
    10. 's' → logprob: -12.69620132446289

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '<|end|>' → logprob: -18.001928329467773
    4. '   ' → logprob: -18.876928329467773
    5. '۰' → logprob: -19.626928329467773
    6. '  ' → logprob: -20.626928329467773
    7. '```' → logprob: -20.751928329467773
    8. ' ' → logprob: -20.876928329467773
    9. '٠' → logprob: -21.001928329467773
    10. ' ' → logprob: -21.501928329467773

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۰' → logprob: -19.750003814697266
    4. '٠' → logprob: -20.625003814697266
    5. ' ' → logprob: -21.250003814697266
    6. '०' → logprob: -21.375003814697266
    7. '```' → logprob: -21.375003814697266
    8. '   ' → logprob: -21.375003814697266
    9. '０' → logprob: -21.500003814697266
    10. '  ' → logprob: -21.500003814697266

Token 75: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20379260182380676
    2. '

' → logprob: -1.7037925720214844
    3. '
' → logprob: -6.203792572021484
    4. '<|end|>' → logprob: -8.203792572021484
    5. ' def' → logprob: -10.328792572021484
    6. '```' → logprob: -10.953792572021484
    7. ' 

' → logprob: -12.078792572021484
    8. '\' → logprob: -12.453792572021484
    9. '<|end|>' → logprob: -12.703792572021484
    10. '  

' → logprob: -12.828792572021484

Token 76: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000667640648316592
    2. '

' → logprob: -8.375667572021484
    3. '```' → logprob: -8.750667572021484
    4. '
' → logprob: -9.000667572021484
    5. '<|end|>' → logprob: -9.875667572021484
    6. '#' → logprob: -10.625667572021484
    7. 'n' → logprob: -10.750667572021484
    8. 'a' → logprob: -11.375667572021484
    9. ' 

' → logprob: -12.000667572021484
    10. '\' → logprob: -12.000667572021484

Token 77: ' is' (ID: 382)
  Prédit: ' monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monday' → logprob: -0.43193742632865906
    2. ' l' → logprob: -1.9319374561309814
    3. ' _' → logprob: -3.0569374561309814
    4. ' is' → logprob: -3.5569374561309814
    5. ' gcd' → logprob: -3.9319374561309814
    6. ' saturday' → logprob: -3.9319374561309814
    7. ' ' → logprob: -3.9319374561309814
    8. ' main' → logprob: -4.306937217712402
    9. ' m' → logprob: -4.431937217712402
    10. '_' → logprob: -4.806937217712402

Token 78: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.003328853053972125
    2. '_' → logprob: -6.003328800201416
    3. '_s' → logprob: -8.253329277038574
    4. ' _' → logprob: -8.378329277038574
    5. '_div' → logprob: -9.503329277038574
    6. '_a' → logprob: -9.628329277038574
    7. ' ' → logprob: -10.003329277038574
    8. 'Monday' → logprob: -10.378329277038574
    9. ' monday' → logprob: -10.503329277038574
    10. '_week' → logprob: -10.753329277038574

Token 79: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -0.005307285115122795
    2. '_m' → logprob: -5.630307197570801
    3. 'm' → logprob: -7.255307197570801
    4. 'on' → logprob: -7.630307197570801
    5. 's' → logprob: -8.5053071975708
    6. 'o' → logprob: -8.7553071975708
    7. '_s' → logprob: -9.6303071975708
    8. 'Monday' → logprob: -10.3803071975708
    9. '```' → logprob: -11.2553071975708
    10. 'ond' → logprob: -11.3803071975708

Token 80: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.027713820338249207
    2. '_' → logprob: -3.6527137756347656
    3. '_number' → logprob: -6.902713775634766
    4. '_or' → logprob: -8.527713775634766
    5. '_sat' → logprob: -9.402713775634766
    6. 's' → logprob: -9.652713775634766
    7. 'Saturday' → logprob: -11.402713775634766
    8. 'number' → logprob: -12.277713775634766
    9. '```' → logprob: -12.402713775634766
    10. '_day' → logprob: -12.402713775634766

Token 81: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -9.253090865968261e-06
    2. 'a' → logprob: -12.750009536743164
    3. 'unday' → logprob: -13.000009536743164
    4. 'Saturday' → logprob: -13.750009536743164
    5. 'atur' → logprob: -13.750009536743164
    6. 'at' → logprob: -14.500009536743164
    7. 'atud' → logprob: -14.500009536743164
    8. '```' → logprob: -15.250009536743164
    9. 's' → logprob: -15.625009536743164
    10. '_' → logprob: -16.375009536743164

Token 82: '_prime' (ID: 98616)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00145475915633142
    2. '_div' → logprob: -6.751454830169678
    3. '_' → logprob: -8.75145435333252
    4. '```' → logprob: -10.00145435333252
    5. ' _' → logprob: -11.50145435333252
    6. '_(' → logprob: -11.62645435333252
    7. '_n' → logprob: -11.75145435333252
    8. '_s' → logprob: -12.25145435333252
    9. '(' → logprob: -12.25145435333252
    10. '__' → logprob: -12.37645435333252

Token 83: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.575974702835083
    2. '(n' → logprob: -0.825974702835083
    3. '(a' → logprob: -11.450974464416504
    4. ' (' → logprob: -11.700974464416504
    5. '(num' → logprob: -12.200974464416504
    6. '(x' → logprob: -12.825974464416504
    7. '(number' → logprob: -13.200974464416504
    8. '(k' → logprob: -13.700974464416504
    9. '(_' → logprob: -13.825974464416504
    10. '(N' → logprob: -13.825974464416504

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.191489642835222e-05
    2. ')' → logprob: -10.375041961669922
    3. ' ):' → logprob: -12.375041961669922
    4. '):
' → logprob: -12.625041961669922
    5. ':' → logprob: -13.125041961669922
    6. '():' → logprob: -15.250041961669922
    7. '   ' → logprob: -15.375041961669922
    8. ''):' → logprob: -16.000041961669922
    9. '）：' → logprob: -16.125041961669922
    10. '):
' → logprob: -16.250041961669922

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008933625183999538
    2. ' if' → logprob: -4.7589335441589355
    3. ' for' → logprob: -9.258934020996094
    4. ':' → logprob: -9.508934020996094
    5. '```' → logprob: -10.008934020996094
    6. 'if' → logprob: -10.633934020996094
    7. ' :' → logprob: -11.508934020996094
    8. '    ' → logprob: -11.508934020996094
    9. 'def' → logprob: -11.883934020996094
    10. '    
' → logprob: -11.883934020996094

Token 86: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.003075871616601944
    2. 'if' (adapté à ' if') → logprob: -6.003076076507568
    3. '   ' → logprob: -8.50307559967041
    4. ' def' → logprob: -8.75307559967041
    5. ' import' → logprob: -9.62807559967041
    6. ' for' → logprob: -9.75307559967041
    7. ' ' → logprob: -10.00307559967041
    8. '    ' → logprob: -11.00307559967041
    9. 'import' → logprob: -11.25307559967041
    10. 'def' → logprob: -11.37807559967041

Token 87: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01104935072362423
    2. 'n' → logprob: -4.511049270629883
    3. '	n' → logprob: -14.136049270629883
    4. ' ' → logprob: -15.011049270629883
    5. ' ' → logprob: -15.261049270629883
    6. ' not' → logprob: -15.386049270629883
    7. '   ' → logprob: -17.386049270629883
    8. '```' → logprob: -18.011049270629883
    9. 'n't' → logprob: -18.323549270629883
    10. '_n' → logprob: -18.386049270629883

Token 88: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4905214011669159
    2. '<' → logprob: -1.7405214309692383
    3. ' <=' → logprob: -1.8655214309692383
    4. '<=' → logprob: -2.8655214309692383
    5. '==' → logprob: -8.490521430969238
    6. ' ' → logprob: -8.615521430969238
    7. ' ==' → logprob: -9.365521430969238
    8. '   ' → logprob: -12.740521430969238
    9. '```' → logprob: -13.115521430969238
    10. '=' → logprob: -13.115521430969238

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005566088366322219
    2. ' ' → logprob: -7.500556468963623
    3. '   ' → logprob: -13.750556945800781
    4. '2' → logprob: -14.125556945800781
    5. '3' → logprob: -14.250556945800781
    6. '```' → logprob: -14.875556945800781
    7. '  ' → logprob: -15.250556945800781
    8. ' ' → logprob: -15.750556945800781
    9. '１' → logprob: -16.00055694580078
    10. '    ' → logprob: -16.25055694580078

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011045700375689194
    2. '6' → logprob: -9.250110626220703
    3. ' ' → logprob: -12.375110626220703
    4. '3' → logprob: -12.875110626220703
    5. '2' → logprob: -13.375110626220703
    6. '```' → logprob: -13.375110626220703
    7. '

' → logprob: -13.625110626220703
    8. '   ' → logprob: -14.312610626220703
    9. '7' → logprob: -14.625110626220703
    10. '１' → logprob: -14.750110626220703

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027248715050518513
    2. ':return' → logprob: -6.127724647521973
    3. ':
' → logprob: -7.752724647521973
    4. ' or' → logprob: -9.502724647521973
    5. '   ' → logprob: -11.002724647521973
    6. ' :' → logprob: -11.627724647521973
    7. '<|end|>' → logprob: -12.252724647521973
    8. '       ' → logprob: -13.877724647521973
    9. '):' → logprob: -14.002724647521973
    10. ' and' → logprob: -14.252724647521973

Token 92: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0732460618019104
    2. ' return' → logprob: -3.0732460021972656
    3. '       ' → logprob: -3.9482460021972656
    4. ':return' → logprob: -6.698246002197266
    5. '    ' → logprob: -6.823246002197266
    6. ':' → logprob: -7.198246002197266
    7. ' ' → logprob: -7.323246002197266
    8. '	return' → logprob: -7.698246002197266
    9. 'return' → logprob: -8.073246002197266
    10. '<|end|>' → logprob: -8.823246002197266

Token 93: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06352993845939636
    2. 'return' (adapté à ' return') → logprob: -2.8135299682617188
    3. '   ' → logprob: -7.188529968261719
    4. ' 
' → logprob: -7.563529968261719
    5. '
' → logprob: -8.563529968261719
    6. '       ' → logprob: -10.938529968261719
    7. '    ' → logprob: -10.938529968261719
    8. ' ' → logprob: -11.063529968261719
    9. '	return' → logprob: -11.188529968261719
    10. ':return' → logprob: -11.313529968261719

Token 94: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.00043138445471413434
    2. 'False' → logprob: -7.750431537628174
    3. ' ' → logprob: -14.250431060791016
    4. '(False' → logprob: -17.625431060791016
    5. ' false' → logprob: -18.375431060791016
    6. '_false' → logprob: -19.250431060791016
    7. ' ' → logprob: -19.375431060791016
    8. '<|end|>' → logprob: -20.250431060791016
    9. ' True' → logprob: -20.375431060791016
    10. '=False' → logprob: -20.625431060791016

Token 95: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042553406208753586
    2. '
' → logprob: -3.917553424835205
    3. '    
' → logprob: -4.542553424835205
    4. '<|end|>' → logprob: -4.667553424835205
    5. '  
' → logprob: -7.042553424835205
    6. '```' → logprob: -8.667552947998047
    7. '   
' → logprob: -9.042552947998047
    8. ' for' → logprob: -9.167552947998047
    9. '<|end|>' → logprob: -9.167552947998047
    10. '  ' → logprob: -9.667552947998047

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001896033063530922
    2. '    
' → logprob: -6.751895904541016
    3. ' for' → logprob: -8.001895904541016
    4. '
' → logprob: -8.126895904541016
    5. 'for' → logprob: -9.876895904541016
    6. 'n' → logprob: -11.751895904541016
    7. '  
' → logprob: -11.876895904541016
    8. '<|end|>' → logprob: -12.126895904541016
    9. 'import' → logprob: -12.251895904541016
    10. 'def' → logprob: -12.501895904541016

Token 97: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3956049382686615
    2. 'for' → logprob: -1.1456049680709839
    3. '   ' → logprob: -5.020605087280273
    4. ' for' → logprob: -6.895605087280273
    5. ' if' → logprob: -6.895605087280273
    6. '2' → logprob: -10.520605087280273
    7. 'elif' → logprob: -11.020605087280273
    8. 'i' → logprob: -11.895605087280273
    9. '  ' → logprob: -12.270605087280273
    10. 'from' → logprob: -12.395605087280273

Token 98: ' not' (ID: 625)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.45001500844955444
    2. ' is' → logprob: -1.2000150680541992
    3. 'n' → logprob: -2.825015068054199
    4. 'is' → logprob: -6.325015068054199
    5. ' divides' → logprob: -10.5750150680542
    6. ' ' → logprob: -11.0125150680542
    7. '	n' → logprob: -11.1375150680542
    8. ' any' → logprob: -11.8250150680542
    9. '   ' → logprob: -12.2000150680542
    10. '	is' → logprob: -12.3250150680542

Token 99: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007618102710694075
    2. 'is' → logprob: -5.382617950439453
    3. ' (' → logprob: -5.882617950439453
    4. '(is' → logprob: -8.757617950439453
    5. '(' → logprob: -10.507617950439453
    6. ' all' → logprob: -11.757617950439453
    7. ' any' → logprob: -11.882617950439453
    8. ' ' → logprob: -12.757617950439453
    9. '	is' → logprob: -14.195117950439453
    10. '(n' → logprob: -14.882617950439453

Token 100: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -8.180258191714529e-06
    2. '_' → logprob: -12.500008583068848
    3. 'm' → logprob: -12.625008583068848
    4. 'Monday' → logprob: -14.000008583068848
    5. '_s' → logprob: -16.25000762939453
    6. 's' → logprob: -16.62500762939453
    7. ' _' → logprob: -16.87500762939453
    8. '\' → logprob: -18.50000762939453
    9. 'a' → logprob: -19.12500762939453
    10. '_week' → logprob: -19.12500762939453

Token 101: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -2.5941604690160602e-05
    2. 'm' → logprob: -11.250025749206543
    3. 'on' → logprob: -11.750025749206543
    4. 'Monday' → logprob: -12.875025749206543
    5. '```' → logprob: -13.875025749206543
    6. 'ond' → logprob: -14.750025749206543
    7. 'onda' → logprob: -15.500025749206543
    8. 'o' → logprob: -15.625025749206543
    9. 's' → logprob: -15.875025749206543
    10. 'ont' → logprob: -16.00002670288086

Token 102: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -4.842555426876061e-06
    2. 's' → logprob: -12.625004768371582
    3. 'Saturday' → logprob: -13.750004768371582
    4. '_' → logprob: -15.500004768371582
    5. '_m' → logprob: -16.2500057220459
    6. '_sat' → logprob: -16.7500057220459
    7. ' _' → logprob: -17.3750057220459
    8. 'm' → logprob: -17.7500057220459
    9. ' saturday' → logprob: -17.8750057220459
    10. '_number' → logprob: -18.3750057220459

Token 103: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.0009081258322112262
    2. 's' → logprob: -8.000907897949219
    3. 'onday' → logprob: -8.875907897949219
    4. 'a' → logprob: -9.000907897949219
    5. 'Saturday' → logprob: -9.000907897949219
    6. 'at' → logprob: -9.500907897949219
    7. 'atur' → logprob: -10.500907897949219
    8. 'unday' → logprob: -11.000907897949219
    9. '```' → logprob: -11.750907897949219
    10. 'atter' → logprob: -11.750907897949219

Token 104: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00045677117304876447
    2. '_prime' → logprob: -7.875456809997559
    3. '_n' → logprob: -10.000456809997559
    4. '_' → logprob: -10.500456809997559
    5. '_div' → logprob: -13.625456809997559
    6. '_num' → logprob: -14.250456809997559
    7. '_
' → logprob: -14.750456809997559
    8. '_s' → logprob: -15.375456809997559
    9. '
' → logprob: -15.625456809997559
    10. ' _' → logprob: -15.750456809997559

Token 105: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001657565007917583
    2. '(' → logprob: -8.750165939331055
    3. ' (' → logprob: -12.125165939331055
    4. '(s' → logprob: -14.375165939331055
    5. '(
' → logprob: -15.125165939331055
    6. '<|end|>' → logprob: -15.875165939331055
    7. '(abs' → logprob: -16.125165939331055
    8. '(nn' → logprob: -16.375165939331055
    9. '(

' → logprob: -16.500165939331055
    10. ')(' → logprob: -16.500165939331055

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011115610599517822
    2. '):
' → logprob: -4.886115550994873
    3. ' ):' → logprob: -6.136115550994873
    4. ')' → logprob: -6.636115550994873
    5. ' ):
' → logprob: -11.261116027832031
    6. '   ' → logprob: -12.261116027832031
    7. ' ' → logprob: -12.761116027832031
    8. '):
' → logprob: -12.761116027832031
    9. ' )' → logprob: -13.386116027832031
    10. '):

' → logprob: -14.136116027832031

Token 107: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026885127648711205
    2. '   ' → logprob: -4.026885032653809
    3. '       ' → logprob: -4.901885032653809
    4. ':
' → logprob: -7.026885032653809
    5. ':return' → logprob: -8.401885032653809
    6. ',' → logprob: -10.276885032653809
    7. '):' → logprob: -10.401885032653809
    8. ' :' → logprob: -10.526885032653809
    9. '    ' → logprob: -10.901885032653809
    10. ' and' → logprob: -11.401885032653809

Token 108: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5626699328422546
    2. ' return' → logprob: -0.9376699328422546
    3. ' ' → logprob: -4.18766975402832
    4. ' 
' → logprob: -4.68766975402832
    5. '    ' → logprob: -5.06266975402832
    6. '       ' → logprob: -5.56266975402832
    7. 'return' (adapté à ' return') → logprob: -6.31266975402832
    8. '
' → logprob: -6.43766975402832
    9. '    
' → logprob: -7.56266975402832
    10. '	return' → logprob: -9.68766975402832

Token 109: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0031879288144409657
    2. ' False' → logprob: -5.753188133239746
    3. 'True' → logprob: -11.503188133239746
    4. ' True' → logprob: -16.37818717956543
    5. 'None' → logprob: -16.75318717956543
    6. '(False' → logprob: -17.75318717956543
    7. 'false' → logprob: -19.25318717956543
    8. '0' → logprob: -20.50318717956543
    9. '  ' → logprob: -20.62818717956543
    10. 'F' → logprob: -20.75318717956543

Token 110: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08316602557897568
    2. '<|end|>' → logprob: -3.5831661224365234
    3. '    
' → logprob: -3.8331661224365234
    4. '
' → logprob: -3.8331661224365234
    5. ' for' → logprob: -5.083166122436523
    6. '```' → logprob: -6.833166122436523
    7. '  
' → logprob: -7.958166122436523
    8. 'for' → logprob: -8.083166122436523
    9. '   
' → logprob: -8.708166122436523
    10. 'def' → logprob: -8.833166122436523

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018163753673434258
    2. '<|end|>' → logprob: -4.143163681030273
    3. ' for' → logprob: -6.643163681030273
    4. '    
' → logprob: -7.393163681030273
    5. 'for' → logprob: -9.643163681030273
    6. '  ' → logprob: -10.393163681030273
    7. '<|end|>' → logprob: -10.643163681030273
    8. '  
' → logprob: -11.018163681030273
    9. '
' → logprob: -11.018163681030273
    10. '```' → logprob: -11.018163681030273

Token 112: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5183556079864502
    2. ' for' → logprob: -1.0183556079864502
    3. '   ' → logprob: -3.14335560798645
    4. 'import' → logprob: -10.143355369567871
    5. ' i' → logprob: -10.393355369567871
    6. 'i' → logprob: -10.393355369567871
    7. ' ' → logprob: -10.518355369567871
    8. '  ' → logprob: -10.518355369567871
    9. 'from' → logprob: -12.393355369567871
    10. '    
' → logprob: -12.518355369567871

Token 113: ' check' (ID: 2371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0077794683165848255
    2. 'for' → logprob: -4.882779598236084
    3. '   ' → logprob: -9.257779121398926
    4. ' from' → logprob: -9.757779121398926
    5. ' if' → logprob: -11.882779121398926
    6. ' import' → logprob: -13.007779121398926
    7. 'from' → logprob: -13.132779121398926
    8. 'import' → logprob: -13.632779121398926
    9. '```' → logprob: -13.632779121398926
    10. ' ' → logprob: -13.757779121398926

Token 114: ' divis' (ID: 37826)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011679680086672306
    2. 'for' → logprob: -4.511679649353027
    3. '   ' → logprob: -7.761679649353027
    4. ' from' → logprob: -9.636679649353027
    5. ' i' → logprob: -10.261679649353027
    6. 'import' → logprob: -10.761679649353027
    7. '	for' → logprob: -11.136679649353027
    8. ' ' → logprob: -11.261679649353027
    9. ' range' → logprob: -11.386679649353027
    10. 'from' → logprob: -11.511679649353027

Token 115: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.005293169524520636
    2. 'or' → logprob: -5.255293369293213
    3. 'ion' → logprob: -10.005292892456055
    4. 'ibility' → logprob: -11.255292892456055
    5. '```' → logprob: -13.755292892456055
    6. 'o' → logprob: -17.005292892456055
    7. 'for' → logprob: -17.380292892456055
    8. '   ' → logprob: -17.505292892456055
    9. 'on' → logprob: -17.505292892456055
    10. '``' → logprob: -17.630292892456055

Token 116: ' which' (ID: 1118)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05131003260612488
    2. ' i' → logprob: -3.5513100624084473
    3. ' from' → logprob: -5.176310062408447
    4. 'for' → logprob: -5.301310062408447
    5. ' ' → logprob: -5.926310062408447
    6. '   ' → logprob: -6.051310062408447
    7. ' in' → logprob: -6.176310062408447
    8. ',' → logprob: -7.176310062408447
    9. ' of' → logprob: -7.551310062408447
    10. '<|end|>' → logprob: -7.676310062408447

Token 117: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.23516613245010376
    2. ' up' → logprob: -2.860166072845459
    3. ' in' → logprob: -3.110166072845459
    4. ' ' → logprob: -3.110166072845459
    5. ' for' → logprob: -3.610166072845459
    6. ' from' → logprob: -4.985166072845459
    7. ' is' → logprob: -5.985166072845459
    8. ' range' → logprob: -5.985166072845459
    9. '<|end|>' → logprob: -6.110166072845459
    10. '=' → logprob: -6.110166072845459

Token 118: ' Monday' (ID: 10715)
  Prédit: ' monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monday' → logprob: -0.7793067097663879
    2. 'm' → logprob: -1.1543066501617432
    3. ' Monday' → logprob: -2.779306650161743
    4. 'Monday' → logprob: -2.904306650161743
    5. ' ' → logprob: -3.654306650161743
    6. ' is' → logprob: -4.279306888580322
    7. ' divisible' → logprob: -4.279306888580322
    8. ' multiples' → logprob: -4.404306888580322
    9. 'div' → logprob: -4.904306888580322
    10. ' lunes' → logprob: -5.029306888580322

Token 119: '-S' (ID: 6968)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.42372259497642517
    2. '_s' → logprob: -1.4237226247787476
    3. '_' → logprob: -3.423722505569458
    4. ' and' → logprob: -3.423722505569458
    5. 's' → logprob: -4.298722743988037
    6. ' ' → logprob: -4.298722743988037
    7. 'or' → logprob: -5.048722743988037
    8. 'and' → logprob: -6.423722743988037
    9. ' _' → logprob: -6.923722743988037
    10. '   ' → logprob: -6.923722743988037

Token 120: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -6.277553620748222e-05
    2. 'Saturday' → logprob: -9.750062942504883
    3. 's' → logprob: -13.250062942504883
    4. 'unday' → logprob: -13.875062942504883
    5. ' saturday' → logprob: -15.250062942504883
    6. '```' → logprob: -15.500062942504883
    7. 'atur' → logprob: -15.500062942504883
    8. 'at' → logprob: -15.875062942504883
    9. '_' → logprob: -16.125062942504883
    10. 'atud' → logprob: -16.250062942504883

Token 121: ' numbers' (ID: 8663)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45611298084259033
    2. ' from' → logprob: -1.7061129808425903
    3. ' between' → logprob: -3.081112861633301
    4. ' in' → logprob: -3.456112861633301
    5. ' numbers' → logprob: -3.956112861633301
    6. ' up' → logprob: -3.956112861633301
    7. ' ' → logprob: -4.456112861633301
    8. ' and' → logprob: -4.581112861633301
    9. 'from' → logprob: -4.956112861633301
    10. '   ' → logprob: -4.956112861633301

Token 122: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.051621757447719574
    2. '   ' → logprob: -3.051621675491333
    3. '<|end|>' → logprob: -6.426621913909912
    4. 'for' → logprob: -7.426621913909912
    5. ' ' → logprob: -8.176621437072754
    6. ' in' → logprob: -9.426621437072754
    7. '	for' → logprob: -9.426621437072754
    8. ' from' → logprob: -9.551621437072754
    9. '  ' → logprob: -9.551621437072754
    10. '    ' → logprob: -10.176621437072754

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34988364577293396
    2. ' for' → logprob: -1.2248836755752563
    3. '<|end|>' → logprob: -6.974883556365967
    4. 'for' → logprob: -8.849884033203125
    5. '  ' → logprob: -9.349884033203125
    6. '
' → logprob: -9.974884033203125
    7. ',' → logprob: -9.974884033203125
    8. ' ' → logprob: -9.974884033203125
    9. '```' → logprob: -10.724884033203125
    10. '    
' → logprob: -10.724884033203125

Token 124: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014820631593465805
    2. 'for' (adapté à ' for') → logprob: -4.764820575714111
    3. '   ' → logprob: -5.389820575714111
    4. ' i' → logprob: -6.514820575714111
    5. 'i' → logprob: -10.38982105255127
    6. ' d' → logprob: -10.88982105255127
    7. '<|end|>' → logprob: -10.88982105255127
    8. ' ' → logprob: -11.01482105255127
    9. 'import' → logprob: -11.63982105255127
    10. 'd' → logprob: -11.63982105255127

Token 125: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00017243190086446702
    2. 'i' → logprob: -8.75017261505127
    3. '	i' → logprob: -12.00017261505127
    4. ' d' → logprob: -12.50017261505127
    5. ' m' → logprob: -13.00017261505127
    6. ' x' → logprob: -14.37517261505127
    7. ' ' → logprob: -14.87517261505127
    8. 'Monday' → logprob: -15.37517261505127
    9. '(i' → logprob: -16.125171661376953
    10. ' p' → logprob: -16.125171661376953

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024339841678738594
    2. 'in' → logprob: -3.7743399143218994
    3. ' ' → logprob: -6.89933967590332
    4. '	in' → logprob: -10.77433967590332
    5. '```' → logprob: -11.39933967590332
    6. '<|end|>' → logprob: -11.64933967590332
    7. ',' → logprob: -12.39933967590332
    8. 'import' → logprob: -12.39933967590332
    9. '  ' → logprob: -12.39933967590332
    10. '_in' → logprob: -12.64933967590332

Token 127: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -2.951771421066951e-05
    2. 'range' → logprob: -10.625029563903809
    3. ' [' → logprob: -13.000029563903809
    4. '	range' → logprob: -13.250029563903809
    5. ' ' → logprob: -14.375029563903809
    6. '[' → logprob: -15.250029563903809
    7. '(range' → logprob: -15.750029563903809
    8. ' xrange' → logprob: -16.500028610229492
    9. ' list' → logprob: -18.375028610229492
    10. '  ' → logprob: -18.875028610229492

Token 128: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.306760805164231e-05
    2. '2' → logprob: -11.37501335144043
    3. ' ' → logprob: -14.00001335144043
    4. ' (' → logprob: -14.12501335144043
    5. '(
' → logprob: -16.87501335144043
    6. ')' → logprob: -17.75001335144043
    7. '((' → logprob: -18.37501335144043
    8. ':' → logprob: -19.37501335144043
    9. '   ' → logprob: -19.50001335144043
    10. '3' → logprob: -19.50001335144043

Token 129: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018768629524856806
    2. '(' → logprob: -9.250187873840332
    3. ' ' → logprob: -9.625187873840332
    4. ')' → logprob: -11.375187873840332
    5. '   ' → logprob: -11.625187873840332
    6. '```' → logprob: -14.000187873840332
    7. '۲' → logprob: -14.687687873840332
    8. 'Monday' → logprob: -14.812687873840332
    9. '２' → logprob: -15.125187873840332
    10. '    ' → logprob: -15.125187873840332

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018822348210960627
    2. ' ,' → logprob: -6.751882076263428
    3. ',n' → logprob: -7.251882076263428
    4. 'n' → logprob: -13.626882553100586
    5. ',int' → logprob: -14.376882553100586
    6. '   ' → logprob: -14.751882553100586
    7. ',
' → logprob: -14.751882553100586
    8. ' ' → logprob: -15.876882553100586
    9. ',i' → logprob: -16.751882553100586
    10. '‌,' → logprob: -16.876882553100586

Token 131: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47737643122673035
    2. 'n' → logprob: -1.2273764610290527
    3. ' int' → logprob: -2.9773764610290527
    4. 'int' → logprob: -3.3523764610290527
    5. ' (' → logprob: -8.227375984191895
    6. '	n' → logprob: -8.727375984191895
    7. '(n' → logprob: -9.727375984191895
    8. ' ' → logprob: -9.977375984191895
    9. '(int' → logprob: -10.852375984191895
    10. '   ' → logprob: -11.102375984191895

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05935828387737274
    2. '):
' → logprob: -3.1843583583831787
    3. ' ):' → logprob: -4.9343581199646
    4. '//' → logprob: -5.3093581199646
    5. '   ' → logprob: -6.0593581199646
    6. ' ' → logprob: -7.5593581199646
    7. ')' → logprob: -7.6843581199646
    8. ' //' → logprob: -8.059358596801758
    9. '+' → logprob: -8.434358596801758
    10. ' ):
' → logprob: -9.184358596801758

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004401513375341892
    2. ' ' → logprob: -6.379401683807373
    3. '<|end|>' → logprob: -6.379401683807373
    4. '        
' → logprob: -7.504401683807373
    5. ' if' → logprob: -8.504401206970215
    6. ' 
' → logprob: -9.379401206970215
    7. '<|end|>' → logprob: -10.379401206970215
    8. '   ' → logprob: -10.379401206970215
    9. '  
' → logprob: -10.754401206970215
    10. ' ' → logprob: -11.129401206970215

Token 134: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6007295846939087
    2. ' if' → logprob: -0.8507295846939087
    3. 'if' (adapté à ' if') → logprob: -3.725729465484619
    4. ' ' → logprob: -8.850729942321777
    5. '   ' → logprob: -9.475729942321777
    6. '	if' → logprob: -9.850729942321777
    7. '           ' → logprob: -9.850729942321777
    8. '
' → logprob: -11.600729942321777
    9. '	   ' → logprob: -11.600729942321777
    10. ' ' → logprob: -11.850729942321777

Token 135: ' divides' (ID: 144028)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.08898766338825226
    2. ' is' → logprob: -2.4639875888824463
    3. '   ' → logprob: -10.963987350463867
    4. ' ' → logprob: -11.588987350463867
    5. '	is' → logprob: -12.463987350463867
    6. 'i' → logprob: -12.463987350463867
    7. ' i' → logprob: -12.838987350463867
    8. '(is' → logprob: -13.338987350463867
    9. ' (' → logprob: -13.338987350463867
    10. '
' → logprob: -13.463987350463867

Token 136: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005342059303075075
    2. '(' → logprob: -8.125534057617188
    3. 'i' → logprob: -8.500534057617188
    4. 'm' → logprob: -11.875534057617188
    5. ' (' → logprob: -12.000534057617188
    6. '<|end|>' → logprob: -12.250534057617188
    7. 'is' → logprob: -12.375534057617188
    8. ')' → logprob: -12.625534057617188
    9. '(is' → logprob: -13.125534057617188
    10. ' i' → logprob: -13.500534057617188

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013287754729390144
    2. ' ,' → logprob: -4.513287544250488
    3. ',n' → logprob: -6.138287544250488
    4. 'n' → logprob: -9.638287544250488
    5. ' n' → logprob: -12.263287544250488
    6. ')' → logprob: -12.513287544250488
    7. ',
' → logprob: -13.263287544250488
    8. '(n' → logprob: -14.138287544250488
    9. '),' → logprob: -14.513287544250488
    10. 'and' → logprob: -14.763287544250488

Token 138: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023246875032782555
    2. ' n' → logprob: -3.7732467651367188
    3. '	n' → logprob: -13.648246765136719
    4. '<|end|>' → logprob: -16.02324676513672
    5. ')n' → logprob: -16.39824676513672
    6. ' ' → logprob: -18.27324676513672
    7. '_n' → logprob: -19.39824676513672
    8. ')' → logprob: -19.77324676513672
    9. '   ' → logprob: -20.27324676513672
    10. ' н' → logprob: -20.39824676513672

Token 139: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018415523692965508
    2. ' )' → logprob: -4.393415451049805
    3. ' and' → logprob: -5.768415451049805
    4. '):' → logprob: -6.018415451049805
    5. 'and' → logprob: -9.143415451049805
    6. ' ):' → logprob: -9.143415451049805
    7. '):
' → logprob: -9.393415451049805
    8. '       ' → logprob: -11.018415451049805
    9. '   ' → logprob: -12.143415451049805
    10. ' ):
' → logprob: -12.518415451049805

Token 140: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0043195029720664024
    2. 'and' → logprob: -5.504319667816162
    3. ' ' → logprob: -8.504319190979004
    4. '   ' → logprob: -11.129319190979004
    5. '	and' → logprob: -11.879319190979004
    6. ':' → logprob: -12.004319190979004
    7. '       ' → logprob: -12.629319190979004
    8. '    ' → logprob: -12.754319190979004
    9. '           ' → logprob: -13.254319190979004
    10. '  ' → logprob: -14.379319190979004

Token 141: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3132908046245575
    2. ' is' → logprob: -1.3132908344268799
    3. ' ' → logprob: -11.5632905960083
    4. ' not' → logprob: -12.1882905960083
    5. 'not' → logprob: -12.1882905960083
    6. '   ' → logprob: -12.4382905960083
    7. '(is' → logprob: -12.9382905960083
    8. '	is' → logprob: -13.8132905960083
    9. ' (' → logprob: -14.8132905960083
    10. '  ' → logprob: -15.3132905960083

Token 142: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -5.512236498361744e-07
    2. 'Monday' → logprob: -15.000000953674316
    3. '_' → logprob: -16.125
    4. 'm' → logprob: -16.5
    5. '_is' → logprob: -17.5
    6. '_s' → logprob: -17.625
    7. '```' → logprob: -18.0
    8. ' _' → logprob: -18.625
    9. '_day' → logprob: -18.75
    10. 'is' → logprob: -19.125

Token 143: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -0.0002929174806922674
    2. '_m' → logprob: -8.625292778015137
    3. 'on' → logprob: -9.500292778015137
    4. 'm' → logprob: -11.500292778015137
    5. 'ond' → logprob: -11.500292778015137
    6. 'Monday' → logprob: -12.250292778015137
    7. 'onth' → logprob: -12.500292778015137
    8. '```' → logprob: -12.625292778015137
    9. 'onda' → logprob: -13.375292778015137
    10. 'ont' → logprob: -13.375292778015137

Token 144: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.618001053633634e-05
    2. '_' → logprob: -10.625025749206543
    3. 'Saturday' → logprob: -14.000025749206543
    4. '_sat' → logprob: -15.250025749206543
    5. '```' → logprob: -15.625025749206543
    6. 's' → logprob: -15.625025749206543
    7. ' _' → logprob: -15.750025749206543
    8. '-_' → logprob: -16.12502670288086
    9. '_-' → logprob: -16.75002670288086
    10. '-' → logprob: -17.12502670288086

Token 145: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.0018696174956858158
    2. 's' → logprob: -6.3768696784973145
    3. 'Saturday' → logprob: -10.251869201660156
    4. 'onday' → logprob: -10.501869201660156
    5. 'at' → logprob: -10.501869201660156
    6. '_s' → logprob: -11.251869201660156
    7. '_' → logprob: -11.376869201660156
    8. 'm' → logprob: -11.501869201660156
    9. '```' → logprob: -11.751869201660156
    10. 'unday' → logprob: -11.751869201660156

Token 146: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.023272501304745674
    2. '_prime' → logprob: -3.7732725143432617
    3. '_' → logprob: -11.273272514343262
    4. 'number' → logprob: -11.398272514343262
    5. 'prime' → logprob: -12.898272514343262
    6. '_pr' → logprob: -15.773272514343262
    7. '_num' → logprob: -16.273271560668945
    8. '```' → logprob: -16.648271560668945
    9. '_n' → logprob: -16.898271560668945
    10. ''_' → logprob: -17.273271560668945

Token 147: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.250001907348633
    3. ' (' → logprob: -15.625001907348633
    4. '(ii' → logprob: -19.375001907348633
    5. '((' → logprob: -19.500001907348633
    6. '(
' → logprob: -20.000001907348633
    7. '

' → logprob: -20.000001907348633
    8. '(I' → logprob: -20.500001907348633
    9. '
' → logprob: -20.750001907348633
    10. '(n' → logprob: -20.750001907348633

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030351129826158285
    2. '):
' → logprob: -6.128035068511963
    3. ')' → logprob: -7.253035068511963
    4. ' ):' → logprob: -9.003035545349121
    5. ':' → logprob: -12.003035545349121
    6. 'and' → logprob: -12.378035545349121
    7. ' and' → logprob: -12.753035545349121
    8. '   ' → logprob: -13.378035545349121
    9. '():' → logprob: -13.878035545349121
    10. '       ' → logprob: -14.253035545349121

Token 149: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016476840246468782
    2. '       ' → logprob: -7.126647472381592
    3. 'return' → logprob: -7.626647472381592
    4. ' return' → logprob: -8.12664794921875
    5. ' and' → logprob: -11.12664794921875
    6. '               ' → logprob: -11.37664794921875
    7. ':return' → logprob: -11.75164794921875
    8. '          ' → logprob: -12.00164794921875
    9. '   ' → logprob: -12.12664794921875
    10. '
' → logprob: -12.25164794921875

Token 150: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31944888830184937
    2. 'return' → logprob: -1.3194489479064941
    3. '   ' → logprob: -5.944448947906494
    4. '           ' → logprob: -6.444448947906494
    5. '       ' → logprob: -6.444448947906494
    6. '	return' → logprob: -8.319448471069336
    7. ' ' → logprob: -9.569448471069336
    8. '               ' → logprob: -9.944448471069336
    9. '
' → logprob: -12.319448471069336
    10. '  ' → logprob: -13.194448471069336

Token 151: ' i' (ID: 575)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2536858916282654
    2. 'return' → logprob: -1.5036859512329102
    3. '           ' → logprob: -6.62868595123291
    4. '   ' → logprob: -8.12868595123291
    5. '       ' → logprob: -9.62868595123291
    6. ' ' → logprob: -10.00368595123291
    7. '               ' → logprob: -11.50368595123291
    8. '	return' → logprob: -11.62868595123291
    9. '  ' → logprob: -12.75368595123291
    10. ' if' → logprob: -13.12868595123291

Token 152: ' divides' (ID: 144028)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7117910385131836
    2. ' ' → logprob: -1.4617910385131836
    3. '<|end|>' → logprob: -1.9617910385131836
    4. ' return' → logprob: -2.3367910385131836
    5. 'return' → logprob: -4.211791038513184
    6. ' !=' → logprob: -5.461791038513184
    7. ' ==' → logprob: -5.461791038513184
    8. '==' → logprob: -5.836791038513184
    9. '   ' → logprob: -5.961791038513184
    10. '  ' → logprob: -6.086791038513184

Token 153: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4753482937812805
    2. ' n' → logprob: -0.9753482937812805
    3. '<|end|>' → logprob: -6.725348472595215
    4. '<|end|>' → logprob: -10.725348472595215
    5. ' the' → logprob: -11.100348472595215
    6. ' ' → logprob: -11.100348472595215
    7. '	n' → logprob: -11.475348472595215
    8. '
' → logprob: -12.975348472595215
    9. ' 
' → logprob: -13.475348472595215
    10. '   ' → logprob: -14.600348472595215

Token 154: ';' (ID: 26)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8650330901145935
    2. '           ' → logprob: -0.8650330901145935
    3. '       ' → logprob: -2.8650331497192383
    4. ' return' → logprob: -2.9900331497192383
    5. 'return' → logprob: -3.8650331497192383
    6. '               ' → logprob: -4.240033149719238
    7. '   ' → logprob: -5.115033149719238
    8. 'and' → logprob: -5.865033149719238
    9. ' ' → logprob: -6.240033149719238
    10. ',' → logprob: -6.490033149719238

Token 155: ' check' (ID: 2371)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10787427425384521
    2. 'return' → logprob: -2.3578743934631348
    3. '           ' → logprob: -5.107874393463135
    4. ' if' → logprob: -7.607874393463135
    5. '       ' → logprob: -7.732874393463135
    6. '	return' → logprob: -8.232873916625977
    7. '   ' → logprob: -8.732873916625977
    8. '               ' → logprob: -8.732873916625977
    9. ' ' → logprob: -10.107873916625977
    10. 'if' → logprob: -11.107873916625977

Token 156: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.022217078134417534
    2. 'if' → logprob: -3.897217035293579
    3. '   ' → logprob: -7.147217273712158
    4. ' return' → logprob: -7.897217273712158
    5. ' not' → logprob: -8.022216796875
    6. 'return' → logprob: -9.397216796875
    7. ' ' → logprob: -10.522216796875
    8. ' for' → logprob: -11.147216796875
    9. '
' → logprob: -11.272216796875
    10. 'not' → logprob: -11.772216796875

Token 157: ' i' (ID: 575)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.27336183190345764
    2. 'i' → logprob: -2.273361921310425
    3. 'not' → logprob: -2.398361921310425
    4. ' i' → logprob: -3.898361921310425
    5. ' is' → logprob: -4.148361682891846
    6. 'is' → logprob: -5.148361682891846
    7. 'False' → logprob: -6.398361682891846
    8. ' False' → logprob: -7.273361682891846
    9. 'n' → logprob: -8.023362159729004
    10. ' True' → logprob: -8.023362159729004

Token 158: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7254442572593689
    2. ' !=' → logprob: -1.7254443168640137
    3. ' ==' → logprob: -1.7254443168640137
    4. '==' → logprob: -2.3504443168640137
    5. 'is' → logprob: -3.6004443168640137
    6. ' ' → logprob: -3.9754443168640137
    7. '!=' → logprob: -4.850444316864014
    8. ' <' → logprob: -5.725444316864014
    9. '<|end|>' → logprob: -5.975444316864014
    10. '=' → logprob: -7.100444316864014

Token 159: ' Monday' (ID: 10715)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48876237869262695
    2. ' not' → logprob: -1.738762378692627
    3. ' n' → logprob: -2.738762378692627
    4. 'm' → logprob: -3.488762378692627
    5. '1' → logprob: -3.488762378692627
    6. 'not' → logprob: -3.738762378692627
    7. ' less' → logprob: -4.238762378692627
    8. ' is' → logprob: -4.738762378692627
    9. ' ' → logprob: -5.363762378692627
    10. ' equal' → logprob: -5.363762378692627

Token 160: '-S' (ID: 6968)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.015729675069451332
    2. '-' → logprob: -4.640729904174805
    3. '_' → logprob: -5.390729904174805
    4. '<|end|>' → logprob: -7.515729904174805
    5. '_S' → logprob: -9.015729904174805
    6. '-s' → logprob: -9.015729904174805
    7. '_-' → logprob: -9.015729904174805
    8. 'Saturday' → logprob: -9.265729904174805
    9. ' -' → logprob: -9.765729904174805
    10. '-_' → logprob: -10.015729904174805

Token 161: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.05038878694176674
    2. 's' → logprob: -3.175388813018799
    3. '_s' → logprob: -5.550388813018799
    4. 'Saturday' → logprob: -6.925388813018799
    5. ' saturday' → logprob: -7.175388813018799
    6. '_' → logprob: -7.300388813018799
    7. 'm' → logprob: -7.300388813018799
    8. 'unday' → logprob: -9.30038833618164
    9. '```' → logprob: -9.55038833618164
    10. '_m' → logprob: -10.17538833618164

Token 162: ' divisor' (ID: 100482)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.11852002888917923
    2. 'prime' → logprob: -2.2435200214385986
    3. ' prime' → logprob: -5.618520259857178
    4. '<|end|>' → logprob: -7.243520259857178
    5. '_s' → logprob: -8.11851978302002
    6. '_number' → logprob: -8.61851978302002
    7. 'def' → logprob: -8.74351978302002
    8. '_' → logprob: -8.74351978302002
    9. ' ' → logprob: -9.61851978302002
    10. 's' → logprob: -9.86851978302002

Token 163: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006699142511934042
    2. ' and' → logprob: -5.756699085235596
    3. '       ' → logprob: -6.881699085235596
    4. 'return' → logprob: -7.131699085235596
    5. '               ' → logprob: -7.256699085235596
    6. ' return' → logprob: -7.881699085235596
    7. ',' → logprob: -9.006699562072754
    8. ' ' → logprob: -9.256699562072754
    9. 'and' → logprob: -9.631699562072754
    10. '   ' → logprob: -9.756699562072754

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006330899195745587
    2. '               ' → logprob: -7.500633239746094
    3. 'return' → logprob: -10.000633239746094
    4. ' return' → logprob: -10.750633239746094
    5. '       ' → logprob: -11.875633239746094
    6. ' and' → logprob: -13.250633239746094
    7. '	       ' → logprob: -13.625633239746094
    8. '   ' → logprob: -14.125633239746094
    9. '          ' → logprob: -14.625633239746094
    10. '<|end|>' → logprob: -14.750633239746094

Token 165: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4135020971298218
    2. ' return' → logprob: -1.1635020971298218
    3. '           ' → logprob: -3.9135022163391113
    4. '   ' → logprob: -6.038502216339111
    5. '               ' → logprob: -6.038502216339111
    6. '       ' → logprob: -6.788502216339111
    7. '	return' → logprob: -8.288501739501953
    8. ' ' → logprob: -9.163501739501953
    9. '
' → logprob: -10.163501739501953
    10. '  ' → logprob: -12.163501739501953

Token 166: ' i' (ID: 575)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5550125241279602
    2. ' i' → logprob: -1.1800124645233154
    3. 'i' → logprob: -3.1800124645233154
    4. ' is' → logprob: -3.1800124645233154
    5. 'not' → logprob: -3.5550124645233154
    6. 'n' → logprob: -6.1800127029418945
    7. 'is' → logprob: -6.1800127029418945
    8. ' n' → logprob: -6.5550127029418945
    9. ' ' → logprob: -7.3050127029418945
    10. ' monday' → logprob: -9.117512702941895

Token 167: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.049576736986637115
    2. '!=' → logprob: -3.049576759338379
    3. ' <' → logprob: -7.799576759338379
    4. ' ==' → logprob: -8.424576759338379
    5. '==' → logprob: -9.049576759338379
    6. '<n' → logprob: -9.424576759338379
    7. ' ' → logprob: -9.674576759338379
    8. ' and' → logprob: -10.799576759338379
    9. ' not' → logprob: -11.049576759338379
    10. '<' → logprob: -11.049576759338379

Token 168: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02785503678023815
    2. '1' → logprob: -3.7778549194335938
    3. ' n' → logprob: -5.402854919433594
    4. ' ' → logprob: -9.402854919433594
    5. '	n' → logprob: -11.652854919433594
    6. '<n' → logprob: -14.027854919433594
    7. '```' → logprob: -14.402854919433594
    8. '<|end|>' → logprob: -14.652854919433594
    9. ')n' → logprob: -15.027854919433594
    10. '
' → logprob: -15.402854919433594

Token 169: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03808681666851044
    2. '1' → logprob: -3.2880868911743164
    3. ' n' → logprob: -10.288086891174316
    4. '	n' → logprob: -12.413086891174316
    5. ' ' → logprob: -13.038086891174316
    6. '```' → logprob: -13.413086891174316
    7. '<n' → logprob: -13.788086891174316
    8. ')n' → logprob: -14.913086891174316
    9. '<|end|>' → logprob: -15.038086891174316
    10. 'm' → logprob: -15.163086891174316

Token 170: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02676384337246418
    2. 'and' → logprob: -3.651763916015625
    3. ' ' → logprob: -7.776763916015625
    4. '<|end|>' → logprob: -10.401763916015625
    5. ':' → logprob: -12.151763916015625
    6. ')' → logprob: -12.526763916015625
    7. '	and' → logprob: -13.276763916015625
    8. '0' → logprob: -14.151763916015625
    9. ' :' → logprob: -15.026763916015625
    10. '<|end|>' → logprob: -15.026763916015625

Token 171: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19993774592876434
    2. 'i' → logprob: -1.8249377012252808
    3. ' n' → logprob: -4.69993782043457
    4. 'n' → logprob: -5.07493782043457
    5. ' not' → logprob: -5.57493782043457
    6. 'not' → logprob: -7.69993782043457
    7. ' is' → logprob: -8.82493782043457
    8. ' ' → logprob: -9.32493782043457
    9. '	i' → logprob: -10.44993782043457
    10. ' ' → logprob: -10.63743782043457

Token 172: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.013757008127868176
    2. '!=' → logprob: -4.388757228851318
    3. '<|end|>' → logprob: -6.763757228851318
    4. '<|end|>' → logprob: -10.51375675201416
    5. ' and' → logprob: -11.13875675201416
    6. 'and' → logprob: -11.51375675201416
    7. ' not' → logprob: -11.63875675201416
    8. ' ==' → logprob: -11.76375675201416
    9. ' ' → logprob: -12.38875675201416
    10. ' ' → logprob: -12.76375675201416

Token 173: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000627610192168504
    2. ' n' → logprob: -7.375627517700195
    3. '	n' → logprob: -14.000627517700195
    4. '<|end|>' → logprob: -15.875627517700195
    5. '<|end|>' → logprob: -17.125627517700195
    6. '_n' → logprob: -17.875627517700195
    7. ' ' → logprob: -18.000627517700195
    8. 'n't' → logprob: -18.375627517700195
    9. 'ndef' → logprob: -18.500627517700195
    10. '
' → logprob: -18.500627517700195

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021646903827786446
    2. ':
' → logprob: -3.8966469764709473
    3. '):' → logprob: -7.771646976470947
    4. ':return' → logprob: -8.021646499633789
    5. ' and' → logprob: -8.771646499633789
    6. '):
' → logprob: -9.146646499633789
    7. '       ' → logprob: -10.646646499633789
    8. ' :' → logprob: -10.771646499633789
    9. 'and' → logprob: -11.646646499633789
    10. ',' → logprob: -11.646646499633789

Token 175: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016559191048145294
    2. '           ' → logprob: -4.14155912399292
    3. 'return' → logprob: -7.89155912399292
    4. ' return' → logprob: -8.891559600830078
    5. '       ' → logprob: -12.016559600830078
    6. '                   ' → logprob: -12.766559600830078
    7. '              ' → logprob: -13.516559600830078
    8. '                
' → logprob: -14.141559600830078
    9. '             ' → logprob: -15.016559600830078
    10. '   ' → logprob: -15.016559600830078

Token 176: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7350428700447083
    2. 'return' (adapté à ' return') → logprob: -1.2350428104400635
    3. '               ' → logprob: -1.9850428104400635
    4. '           ' → logprob: -2.7350428104400635
    5. '                   ' → logprob: -3.6100428104400635
    6. '       ' → logprob: -8.610042572021484
    7. '   ' → logprob: -9.235042572021484
    8. '	return' → logprob: -10.235042572021484
    9. '
' → logprob: -10.985042572021484
    10. '                       ' → logprob: -10.985042572021484

Token 177: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3868711292743683
    2. ' False' → logprob: -1.136871099472046
    3. '(False' → logprob: -16.886871337890625
    4. '=False' → logprob: -18.011871337890625
    5. 'True' → logprob: -18.136871337890625
    6. ' True' → logprob: -18.636871337890625
    7. '_false' → logprob: -19.636871337890625
    8. ' ' → logprob: -20.636871337890625
    9. '.False' → logprob: -20.636871337890625
    10. ' ' → logprob: -21.011871337890625

Token 178: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024529116228222847
    2. '
' → logprob: -3.899529218673706
    3. '    
' → logprob: -6.024528980255127
    4. ' return' → logprob: -7.649528980255127
    5. 'return' → logprob: -8.024529457092285
    6. '<|end|>' → logprob: -8.524529457092285
    7. ' 
' → logprob: -8.649529457092285
    8. '	return' → logprob: -9.024529457092285
    9. '  
' → logprob: -9.274529457092285
    10. '\n' → logprob: -10.274529457092285

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005931289400905371
    2. 'return' → logprob: -5.505931377410889
    3. ' return' → logprob: -7.255931377410889
    4. '	return' → logprob: -7.255931377410889
    5. '    
' → logprob: -8.75593090057373
    6. '
' → logprob: -9.00593090057373
    7. '       ' → logprob: -10.38093090057373
    8. ' 
' → logprob: -10.50593090057373
    9. '<|end|>' → logprob: -10.50593090057373
    10. '  
' → logprob: -11.38093090057373

Token 180: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20181304216384888
    2. 'return' (adapté à ' return') → logprob: -1.701812982559204
    3. '	return' → logprob: -8.451812744140625
    4. ' return' → logprob: -8.826812744140625
    5. ':return' → logprob: -11.576812744140625
    6. '       ' → logprob: -11.951812744140625
    7. '
' → logprob: -11.951812744140625
    8. '    
' → logprob: -12.201812744140625
    9. '<|end|>' → logprob: -12.701812744140625
    10. ' ' → logprob: -12.951812744140625

Token 181: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005233763717114925
    2. ' True' → logprob: -5.2552337646484375
    3. '(True' → logprob: -19.755233764648438
    4. '   ' → logprob: -20.630233764648438
    5. 'Tr' → logprob: -20.630233764648438
    6. 'False' → logprob: -20.755233764648438
    7. ' ' → logprob: -21.505233764648438
    8. '=True' → logprob: -21.505233764648438
    9. 'true' → logprob: -23.255233764648438
    10. ' Tru' → logprob: -23.630233764648438

Token 182: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2275126874446869
    2. '<|end|>' → logprob: -2.3525125980377197
    3. 'n' → logprob: -3.4775125980377197
    4. ' 
' → logprob: -3.9775125980377197
    5. '   ' → logprob: -4.102512836456299
    6. '_' → logprob: -4.602512836456299
    7. '
' → logprob: -4.727512836456299
    8. '#' → logprob: -5.602512836456299
    9. ')' → logprob: -5.727512836456299
    10. 'def' → logprob: -5.852512836456299

Token 184: ' main' (ID: 2758)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12010321766138077
    2. ' monday' → logprob: -2.745103120803833
    3. 'is' → logprob: -3.370103120803833
    4. ' is' → logprob: -5.120103359222412
    5. 'g' → logprob: -5.870103359222412
    6. 'l' → logprob: -6.245103359222412
    7. 'main' → logprob: -6.995103359222412
    8. 's' → logprob: -6.995103359222412
    9. 'count' → logprob: -8.245102882385254
    10. ' gcd' → logprob: -8.495102882385254

Token 185: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.179569077678025e-05
    2. '():
' → logprob: -10.625041961669922
    3. ' ():' → logprob: -11.750041961669922
    4. '(' → logprob: -12.375041961669922
    5. '()' → logprob: -12.500041961669922
    6. '_' → logprob: -14.125041961669922
    7. '():
' → logprob: -15.250041961669922
    8. '()>' → logprob: -15.375041961669922
    9. ':' → logprob: -15.375041961669922
    10. '_:' → logprob: -17.000041961669922

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34327441453933716
    2. ' n' → logprob: -1.3432743549346924
    3. ' for' → logprob: -3.8432743549346924
    4. 'n' → logprob: -5.0932745933532715
    5. ' print' → logprob: -7.0932745933532715
    6. '    ' → logprob: -8.093274116516113
    7. ' import' → logprob: -8.468274116516113
    8. ' numbers' → logprob: -8.718274116516113
    9. 'for' → logprob: -9.218274116516113
    10. ' input' → logprob: -9.343274116516113

Token 187: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3120115399360657
    2. 'for' → logprob: -1.812011480331421
    3. ' for' → logprob: -3.062011480331421
    4. ' n' → logprob: -3.562011480331421
    5. 'print' → logprob: -4.93701171875
    6. '   ' → logprob: -4.93701171875
    7. 'numbers' → logprob: -5.43701171875
    8. ' numbers' → logprob: -6.31201171875
    9. 'import' → logprob: -6.31201171875
    10. 'm' → logprob: -6.56201171875

Token 188: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.011106422170996666
    2. 'True' → logprob: -4.511106491088867
    3. '(True' → logprob: -9.761106491088867
    4. '=True' → logprob: -14.511106491088867
    5. ' ' → logprob: -15.136106491088867
    6. '1' → logprob: -16.386106491088867
    7. ' Tru' → logprob: -16.386106491088867
    8. '  ' → logprob: -17.761106491088867
    9. '_true' → logprob: -18.136106491088867
    10. ' ' → logprob: -18.636106491088867

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008120091515593231
    2. ':
' → logprob: -7.62581205368042
    3. '():' → logprob: -8.625811576843262
    4. '       ' → logprob: -10.375811576843262
    5. ',' → logprob: -10.625811576843262
    6. '):' → logprob: -10.625811576843262
    7. '   ' → logprob: -10.750811576843262
    8. ' :' → logprob: -10.750811576843262
    9. '<|end|>' → logprob: -11.875811576843262
    10. '():
' → logprob: -12.375811576843262

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014102356508374214
    2. ' user' → logprob: -7.876410007476807
    3. ' n' → logprob: -8.251410484313965
    4. ' try' → logprob: -8.376410484313965
    5. 'n' → logprob: -8.501410484313965
    6. '   ' → logprob: -8.501410484313965
    7. ' line' → logprob: -10.501410484313965
    8. 'user' → logprob: -11.001410484313965
    9. ' input' → logprob: -11.001410484313965
    10. 'try' → logprob: -11.376410484313965

Token 191: ' line' (ID: 2543)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.5203902721405029
    2. ' user' → logprob: -1.895390272140503
    3. ' n' → logprob: -2.395390272140503
    4. ' inp' → logprob: -2.520390272140503
    5. ' line' → logprob: -3.645390272140503
    6. '   ' → logprob: -3.645390272140503
    7. 'n' → logprob: -4.395390510559082
    8. 'try' → logprob: -4.520390510559082
    9. ' input' → logprob: -6.020390510559082
    10. 'user' → logprob: -6.270390510559082

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009757032617926598
    2. '=' → logprob: -4.634757041931152
    3. ' ' → logprob: -14.884757041931152
    4. '_' → logprob: -15.384757041931152
    5. '  ' → logprob: -16.134756088256836
    6. 's' → logprob: -16.509756088256836
    7. '.' → logprob: -16.509756088256836
    8. '   ' → logprob: -17.384756088256836
    9. '=input' → logprob: -17.572256088256836
    10. ' =)' → logprob: -17.822256088256836

Token 193: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868713080883026
    2. ' input' → logprob: -1.136871337890625
    3. '=input' → logprob: -15.886871337890625
    4. '(input' → logprob: -17.136871337890625
    5. '	input' → logprob: -17.511871337890625
    6. '_input' → logprob: -18.136871337890625
    7. ' ' → logprob: -18.386871337890625
    8. '<input' → logprob: -18.636871337890625
    9. ',input' → logprob: -19.886871337890625
    10. '```' → logprob: -20.386871337890625

Token 194: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00019328886992298067
    2. '(' → logprob: -9.00019359588623
    3. '().' → logprob: -10.12519359588623
    4. '("")' → logprob: -11.87519359588623
    5. '()>' → logprob: -11.87519359588623
    6. '())' → logprob: -12.12519359588623
    7. '()
' → logprob: -12.87519359588623
    8. ' ()' → logprob: -13.50019359588623
    9. '('' → logprob: -13.50019359588623
    10. '();' → logprob: -14.00019359588623

Token 195: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.15310683415737e-05
    2. 'rstrip' → logprob: -10.750021934509277
    3. ' strip' → logprob: -17.62502098083496
    4. 'split' → logprob: -19.00002098083496
    5. 'str' → logprob: -21.12502098083496
    6. '_strip' → logprob: -21.62502098083496
    7. 'startswith' → logprob: -22.00002098083496
    8. '(strip' → logprob: -22.00002098083496
    9. '-strip' → logprob: -22.25002098083496
    10. 'isdigit' → logprob: -22.37502098083496

Token 196: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003110327525064349
    2. '(' → logprob: -8.125310897827148
    3. '('' → logprob: -12.375310897827148
    4. '().' → logprob: -13.125310897827148
    5. '()
' → logprob: -13.500310897827148
    6. '())' → logprob: -13.625310897827148
    7. '()`' → logprob: -14.500310897827148
    8. '()='' → logprob: -14.500310897827148
    9. '()>' → logprob: -14.625310897827148
    10. '()==' → logprob: -14.750310897827148

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.53999924659729
    2. '<|end|>' → logprob: -0.91499924659729
    3. '   ' → logprob: -5.164999008178711
    4. ' if' → logprob: -5.414999008178711
    5. '<|end|>' → logprob: -5.414999008178711
    6. ' ' → logprob: -6.789999008178711
    7. ',' → logprob: -7.914999008178711
    8. '        ' → logprob: -8.539999008178711
    9. 'if' → logprob: -9.164999008178711
    10. '    ' → logprob: -9.914999008178711

Token 198: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0009193199803121388
    2. ' if' → logprob: -7.000919342041016
    3. '<|end|>' → logprob: -11.875919342041016
    4. '   ' → logprob: -14.875919342041016
    5. 'If' → logprob: -16.250919342041016
    6. '	if' → logprob: -16.375919342041016
    7. '```' → logprob: -16.500919342041016
    8. '       ' → logprob: -16.875919342041016
    9. ';if' → logprob: -16.875919342041016
    10. '...' → logprob: -17.000919342041016

Token 199: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.32086241245269775
    2. ' not' → logprob: -1.3208624124526978
    3. 'line' → logprob: -4.945862293243408
    4. 'not' → logprob: -8.070862770080566
    5. ' ' → logprob: -8.945862770080566
    6. '	line' → logprob: -11.445862770080566
    7. '#line' → logprob: -12.695862770080566
    8. '(line' → logprob: -14.070862770080566
    9. '=line' → logprob: -14.445862770080566
    10. '[line' → logprob: -14.570862770080566

Token 200: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.043011635541915894
    2. '==' → logprob: -3.1680116653442383
    3. '()==' → logprob: -12.418011665344238
    4. ' ' → logprob: -12.918011665344238
    5. '.lower' → logprob: -12.918011665344238
    6. '.startswith' → logprob: -13.293011665344238
    7. ' in' → logprob: -14.668011665344238
    8. '=' → logprob: -15.418011665344238
    9. ')==' → logprob: -15.543011665344238
    10. '()' → logprob: -15.793011665344238

Token 201: ' '' (ID: 461)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.6522565484046936
    2. '"' → logprob: -1.6522564888000488
    3. '''' → logprob: -1.6522564888000488
    4. '"":' → logprob: -2.402256488800049
    5. ''' → logprob: -5.277256488800049
    6. ' ""' → logprob: -9.277256965637207
    7. ' "":
' → logprob: -10.027256965637207
    8. ''ex' → logprob: -10.152256965637207
    9. ' "' → logprob: -10.277256965637207
    10. ' '':
' → logprob: -11.402256965637207

Token 202: '1' (ID: 16)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5429682731628418
    2. ''' → logprob: -1.2929682731628418
    3. 'END' → logprob: -2.792968273162842
    4. 'exit' → logprob: -3.167968273162842
    5. 'quit' → logprob: -4.417968273162842
    6. '''' → logprob: -4.792968273162842
    7. 'end' → logprob: -5.417968273162842
    8. 'STOP' → logprob: -5.792968273162842
    9. '0' → logprob: -6.042968273162842
    10. 'EXIT' → logprob: -6.292968273162842

Token 203: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.8492624163627625
    2. '0' → logprob: -1.0992624759674072
    3. '2' → logprob: -2.7242624759674072
    4. '5' → logprob: -2.9742624759674072
    5. '':
' → logprob: -3.3492624759674072
    6. ''' → logprob: -4.099262237548828
    7. '7' → logprob: -4.099262237548828
    8. '1' → logprob: -4.099262237548828
    9. '3' → logprob: -4.224262237548828
    10. '9' → logprob: -4.599262237548828

Token 204: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10339342802762985
    2. '           ' → logprob: -2.353393316268921
    3. '
' → logprob: -6.6033935546875
    4. '0' → logprob: -7.7283935546875
    5. '   ' → logprob: -7.7283935546875
    6. ':' → logprob: -8.1033935546875
    7. ':
' → logprob: -8.8533935546875
    8. '      ' → logprob: -9.6033935546875
    9. '<|end|>' → logprob: -9.6033935546875
    10. '        
' → logprob: -10.1033935546875

Token 205: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18573221564292908
    2. ' break' → logprob: -2.185732126235962
    3. 'break' (adapté à ' break') → logprob: -2.935732126235962
    4. '           ' → logprob: -6.435732364654541
    5. '
' → logprob: -6.810732364654541
    6. '	break' → logprob: -7.060732364654541
    7. '   ' → logprob: -8.435731887817383
    8. 'return' → logprob: -9.185731887817383
    9. '               ' → logprob: -10.685731887817383
    10. ' return' → logprob: -10.685731887817383

Token 206: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09985461086034775
    2. '<|end|>' → logprob: -2.9748547077178955
    3. '
' → logprob: -3.4748547077178955
    4. '        
' → logprob: -4.474854469299316
    5. '   ' → logprob: -7.849854469299316
    6. '    
' → logprob: -8.099854469299316
    7. '<|end|>' → logprob: -8.099854469299316
    8. '  
' → logprob: -8.724854469299316
    9. ' ' → logprob: -8.849854469299316
    10. 'n' → logprob: -9.349854469299316

Token 208: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6395614147186279
    2. ' n' → logprob: -0.7645614147186279
    3. '       ' → logprob: -5.264561653137207
    4. '   ' → logprob: -8.139561653137207
    5. 'num' → logprob: -8.139561653137207
    6. ' numbers' → logprob: -8.389561653137207
    7. ' try' → logprob: -8.389561653137207
    8. ' number' → logprob: -8.514561653137207
    9. 'try' → logprob: -8.639561653137207
    10. ' num' → logprob: -8.764561653137207

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026341410353779793
    2. '=' → logprob: -3.651341438293457
    3. '=int' → logprob: -10.651341438293457
    4. ' ' → logprob: -11.151341438293457
    5. ' =
' → logprob: -14.026341438293457
    6. ')' → logprob: -14.276341438293457
    7. ',' → logprob: -14.401341438293457
    8. 'int' → logprob: -15.526341438293457
    9. '  ' → logprob: -16.02634048461914
    10. '   ' → logprob: -16.27634048461914

Token 210: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02975071594119072
    2. ' int' → logprob: -3.5297508239746094
    3. '[int' → logprob: -16.15475082397461
    4. '=int' → logprob: -16.40475082397461
    5. '(int' → logprob: -17.27975082397461
    6. '<int' → logprob: -18.52975082397461
    7. ' ' → logprob: -19.65475082397461
    8. '	int' → logprob: -19.77975082397461
    9. ':int' → logprob: -20.15475082397461
    10. ',int' → logprob: -20.65475082397461

Token 211: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.011048528365790844
    2. '(' → logprob: -4.511048316955566
    3. '(n' → logprob: -14.886048316955566
    4. '#line' → logprob: -16.636049270629883
    5. '(
' → logprob: -16.761049270629883
    6. '(lines' → logprob: -17.136049270629883
    7. '()' → logprob: -17.511049270629883
    8. '[line' → logprob: -17.511049270629883
    9. '(Line' → logprob: -17.636049270629883
    10. ' (' → logprob: -17.886049270629883

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2352385965641588e-05
    2. ')
' → logprob: -11.500012397766113
    3. ' )' → logprob: -13.125012397766113
    4. '))' → logprob: -17.750011444091797
    5. ')

' → logprob: -18.000011444091797
    6. '<|end|>' → logprob: -18.000011444091797
    7. '   ' → logprob: -18.250011444091797
    8. '       ' → logprob: -18.375011444091797
    9. ' ' → logprob: -18.500011444091797
    10. '
' → logprob: -18.625011444091797

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025501681491732597
    2. '   ' → logprob: -4.400501728057861
    3. '<|end|>' → logprob: -4.775501728057861
    4. ' if' → logprob: -5.525501728057861
    5. 'if' → logprob: -8.525501251220703
    6. '<|end|>' → logprob: -9.900501251220703
    7. '
' → logprob: -10.150501251220703
    8. '	if' → logprob: -10.150501251220703
    9. ' ' → logprob: -10.275501251220703
    10. '	' → logprob: -10.900501251220703

Token 214: ' factors' (ID: 11652)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3685583770275116
    2. 'if' → logprob: -1.368558406829834
    3. 'print' → logprob: -3.243558406829834
    4. ' print' → logprob: -4.368558406829834
    5. '       ' → logprob: -6.993558406829834
    6. 'result' → logprob: -7.743558406829834
    7. ' result' → logprob: -7.743558406829834
    8. '   ' → logprob: -8.493557929992676
    9. ' is' → logprob: -10.243557929992676
    10. ' for' → logprob: -10.618557929992676

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007498020306229591
    2. '=' → logprob: -5.007497787475586
    3. '_' → logprob: -7.382497787475586
    4. ' ' → logprob: -9.007497787475586
    5. ',' → logprob: -10.882497787475586
    6. 's' → logprob: -12.257497787475586
    7. '	' → logprob: -13.382497787475586
    8. '  ' → logprob: -13.507497787475586
    9. '   ' → logprob: -13.507497787475586
    10. '```' → logprob: -13.507497787475586

Token 216: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03842012584209442
    2. ' []' → logprob: -3.2884202003479004
    3. '[]
' → logprob: -8.538419723510742
    4. '[' → logprob: -8.788419723510742
    5. ' [' → logprob: -10.788419723510742
    6. ' []
' → logprob: -12.288419723510742
    7. '[n' → logprob: -13.413419723510742
    8. '[]

' → logprob: -13.413419723510742
    9. '[]}' → logprob: -14.413419723510742
    10. '[
' → logprob: -15.038419723510742

Token 217: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26966992020606995
    2. '       ' → logprob: -1.6446698904037476
    3. 'for' → logprob: -3.269670009613037
    4. ' i' → logprob: -6.144670009613037
    5. '   ' → logprob: -6.644670009613037
    6. '<|end|>' → logprob: -6.894670009613037
    7. 'i' → logprob: -8.269669532775879
    8. ' ' → logprob: -8.894669532775879
    9. '        ' → logprob: -9.144669532775879
    10. 'def' → logprob: -9.769669532775879

Token 218: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1724257618188858
    2. 'd' → logprob: -2.7974257469177246
    3. 'for' → logprob: -3.0474257469177246
    4. ' for' → logprob: -3.9224257469177246
    5. ' i' → logprob: -4.047425746917725
    6. 'temp' → logprob: -4.797425746917725
    7. 'num' → logprob: -6.922425746917725
    8. 'def' → logprob: -7.047425746917725
    9. ' temp' → logprob: -7.047425746917725
    10. ' d' → logprob: -7.922425746917725

Token 219: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2296333760023117
    2. 'i' → logprob: -1.8546333312988281
    3. 'temp' → logprob: -3.604633331298828
    4. ' for' → logprob: -4.729633331298828
    5. 'def' → logprob: -5.229633331298828
    6. 'd' → logprob: -5.729633331298828
    7. 'x' → logprob: -7.229633331298828
    8. ' i' → logprob: -7.354633331298828
    9. '   ' → logprob: -7.354633331298828
    10. 'num' → logprob: -7.604633331298828

Token 220: ' Monday' (ID: 10715)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.87882000207901
    2. ' i' → logprob: -1.1288199424743652
    3. ' for' → logprob: -1.7538199424743652
    4. 'for' → logprob: -2.7538199424743652
    5. 'f' → logprob: -4.128819942474365
    6. '   ' → logprob: -6.378819942474365
    7. 'factor' → logprob: -6.503819942474365
    8. ' factors' → logprob: -6.878819942474365
    9. ' factor' → logprob: -7.003819942474365
    10. 'd' → logprob: -7.503819942474365

Token 221: '-S' (ID: 6968)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00030412263004109263
    2. '_' → logprob: -8.250304222106934
    3. 'Saturday' → logprob: -10.750304222106934
    4. 's' → logprob: -11.500304222106934
    5. '-' → logprob: -13.250304222106934
    6. '   ' → logprob: -13.750304222106934
    7. '```' → logprob: -14.000304222106934
    8. '<|end|>' → logprob: -14.000304222106934
    9. 'def' → logprob: -14.125304222106934
    10. ' saturday' → logprob: -14.375304222106934

Token 222: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.0072996835224330425
    2. 's' → logprob: -5.257299900054932
    3. '_s' → logprob: -7.007299900054932
    4. 'Saturday' → logprob: -7.257299900054932
    5. ' saturday' → logprob: -9.132299423217773
    6. 'unday' → logprob: -9.257299423217773
    7. '_' → logprob: -9.507299423217773
    8. 'm' → logprob: -10.507299423217773
    9. '```' → logprob: -10.757299423217773
    10. 'at' → logprob: -10.757299423217773

Token 223: ' prime' (ID: 9197)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.2627580165863037
    2. 'f' → logprob: -2.1377580165863037
    3. '_number' → logprob: -2.1377580165863037
    4. 'numbers' → logprob: -2.1377580165863037
    5. 'number' → logprob: -2.3877580165863037
    6. 'div' → logprob: -2.7627580165863037
    7. ' factors' → logprob: -2.8877580165863037
    8. '_numbers' → logprob: -3.0127580165863037
    9. ' number' → logprob: -3.2627580165863037
    10. '_f' → logprob: -3.6377580165863037

Token 224: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2661609947681427
    2. '_f' → logprob: -1.6411609649658203
    3. '_' → logprob: -3.5161609649658203
    4. ' factors' → logprob: -4.76616096496582
    5. 's' → logprob: -6.64116096496582
    6. '   ' → logprob: -9.51616096496582
    7. '_s' → logprob: -9.64116096496582
    8. ' ' → logprob: -9.76616096496582
    9. 'factor' → logprob: -10.01616096496582
    10. '```' → logprob: -10.39116096496582

Token 225: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054883070290088654
    2. ' for' → logprob: -3.5548830032348633
    3. '(n' → logprob: -5.179883003234863
    4. 'for' → logprob: -5.679883003234863
    5. '        ' → logprob: -6.054883003234863
    6. '   ' → logprob: -6.054883003234863
    7. '(' → logprob: -6.054883003234863
    8. ' i' → logprob: -6.679883003234863
    9. ' n' → logprob: -6.804883003234863
    10. ' (' → logprob: -6.929883003234863

Token 226: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004078878089785576
    2. ' n' → logprob: -5.5040788650512695
    3. '	n' → logprob: -15.50407886505127
    4. '(n' → logprob: -15.87907886505127
    5. '   ' → logprob: -16.004079818725586
    6. ')n' → logprob: -17.754079818725586
    7. 'the' → logprob: -18.254079818725586
    8. '
' → logprob: -18.754079818725586
    9. '       ' → logprob: -18.879079818725586
    10. ' ' → logprob: -18.879079818725586

Token 227: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008540105074644089
    2. ' for' → logprob: -5.633540153503418
    3. '   ' → logprob: -5.758540153503418
    4. ' i' → logprob: -7.383540153503418
    5. 'for' → logprob: -8.258540153503418
    6. 'i' → logprob: -8.508540153503418
    7. '        
' → logprob: -8.758540153503418
    8. 'n' → logprob: -8.758540153503418
    9. ',' → logprob: -9.133540153503418
    10. ' n' → logprob: -10.633540153503418

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020758159458637238
    2. ' for' → logprob: -4.270758152008057
    3. '   ' → logprob: -5.520758152008057
    4. ' i' → logprob: -7.645758152008057
    5. 'for' → logprob: -7.895758152008057
    6. ',' → logprob: -8.270758628845215
    7. 'n' → logprob: -8.520758628845215
    8. '        ' → logprob: -8.645758628845215
    9. ' n' → logprob: -8.645758628845215
    10. '        
' → logprob: -8.770758628845215

Token 229: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1892547607421875
    2. 'i' → logprob: -1.9392547607421875
    3. ' for' → logprob: -3.9392547607421875
    4. '   ' → logprob: -5.9392547607421875
    5. 'd' → logprob: -6.0642547607421875
    6. ' i' → logprob: -6.5642547607421875
    7. '       ' → logprob: -6.6892547607421875
    8. 'temp' → logprob: -7.5642547607421875
    9. 'm' → logprob: -7.8142547607421875
    10. 'f' → logprob: -8.189254760742188

Token 230: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7270776033401489
    2. ' for' → logprob: -0.8520776033401489
    3. 'i' → logprob: -3.1020774841308594
    4. ' i' → logprob: -3.7270774841308594
    5. '       ' → logprob: -4.102077484130859
    6. '   ' → logprob: -6.602077484130859
    7. 'temp' → logprob: -7.102077484130859
    8. ' temp' → logprob: -7.352077484130859
    9. 'f' → logprob: -7.477077484130859
    10. 'factor' → logprob: -7.852077484130859

Token 231: ' all' (ID: 722)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5353457927703857
    2. ' for' → logprob: -0.9103457927703857
    3. ' range' → logprob: -5.535346031188965
    4. 'for' → logprob: -5.660346031188965
    5. '   ' → logprob: -6.035346031188965
    6. 'i' → logprob: -6.660346031188965
    7. 'range' → logprob: -8.285346031188965
    8. ' ' → logprob: -8.535346031188965
    9. '    ' → logprob: -8.660346031188965
    10. ' in' → logprob: -9.410346031188965

Token 232: ' possible' (ID: 4149)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00353034446015954
    2. ' i' → logprob: -6.253530502319336
    3. 'm' → logprob: -6.753530502319336
    4. 'Monday' → logprob: -8.628530502319336
    5. '   ' → logprob: -8.878530502319336
    6. 'for' → logprob: -9.628530502319336
    7. 'possible' → logprob: -11.378530502319336
    8. ' Monday' → logprob: -11.878530502319336
    9. '```' → logprob: -12.128530502319336
    10. 'is' → logprob: -12.378530502319336

Token 233: ' Monday' (ID: 10715)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.646201491355896
    2. 'i' → logprob: -0.771201491355896
    3. 'm' → logprob: -4.5212016105651855
    4. ' m' → logprob: -7.0212016105651855
    5. 'Monday' → logprob: -7.2712016105651855
    6. '   ' → logprob: -8.146201133728027
    7. '```' → logprob: -8.896201133728027
    8. ' Monday' → logprob: -8.896201133728027
    9. 'f' → logprob: -9.021201133728027
    10. ' ' → logprob: -9.646201133728027

Token 234: '-S' (ID: 6968)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.029899053275585175
    2. '-s' → logprob: -3.7798991203308105
    3. '_numbers' → logprob: -5.7798991203308105
    4. '-' → logprob: -6.5298991203308105
    5. 'Saturday' → logprob: -7.0298991203308105
    6. 's' → logprob: -8.154898643493652
    7. ' -' → logprob: -8.904898643493652
    8. '_number' → logprob: -9.154898643493652
    9. '   ' → logprob: -9.529898643493652
    10. '```' → logprob: -9.529898643493652

Token 235: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.12586210668087006
    2. 's' → logprob: -3.0008621215820312
    3. 'Saturday' → logprob: -3.5008621215820312
    4. '_s' → logprob: -4.000862121582031
    5. ' saturday' → logprob: -4.750862121582031
    6. ' Saturday' → logprob: -5.625862121582031
    7. '_' → logprob: -5.875862121582031
    8. '_sat' → logprob: -6.250862121582031
    9. '_numbers' → logprob: -6.750862121582031
    10. '_number' → logprob: -7.500862121582031

Token 236: ' numbers' (ID: 8663)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.054792046546936
    2. 'numbers' → logprob: -1.429792046546936
    3. ' numbers' → logprob: -1.804792046546936
    4. '_n' → logprob: -3.1797919273376465
    5. 's' → logprob: -3.4297919273376465
    6. 'f' → logprob: -3.4297919273376465
    7. 'n' → logprob: -3.5547919273376465
    8. '_f' → logprob: -3.6797919273376465
    9. 'i' → logprob: -3.8047919273376465
    10. '_number' → logprob: -3.9297919273376465

Token 237: ' <=' (ID: 5017)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4459647536277771
    2. '       ' → logprob: -1.4459648132324219
    3. 'for' → logprob: -3.070964813232422
    4. ' in' → logprob: -3.195964813232422
    5. '   ' → logprob: -3.945964813232422
    6. ' i' → logprob: -4.945964813232422
    7. ' from' → logprob: -5.695964813232422
    8. 'from' → logprob: -6.570964813232422
    9. ' ' → logprob: -6.820964813232422
    10. ',' → logprob: -7.195964813232422

Token 238: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4287879168987274
    2. ' n' → logprob: -1.0537879467010498
    3. 'int' → logprob: -10.178788185119629
    4. ' ' → logprob: -10.928788185119629
    5. ' int' → logprob: -11.428788185119629
    6. '	n' → logprob: -11.928788185119629
    7. '   ' → logprob: -12.928788185119629
    8. '```' → logprob: -13.553788185119629
    9. '
' → logprob: -13.928788185119629
    10. '100' → logprob: -13.928788185119629

Token 239: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05699765309691429
    2. ' for' → logprob: -2.931997537612915
    3. '   ' → logprob: -6.931997776031494
    4. 'for' → logprob: -8.056997299194336
    5. ' in' → logprob: -8.306997299194336
    6. ',' → logprob: -8.681997299194336
    7. ' from' → logprob: -9.556997299194336
    8. '        
' → logprob: -9.806997299194336
    9. ' range' → logprob: -9.931997299194336
    10. ' to' → logprob: -10.931997299194336

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03548100218176842
    2. ' for' → logprob: -3.4104809761047363
    3. '   ' → logprob: -6.785480976104736
    4. 'for' → logprob: -8.035481452941895
    5. '<|end|>' → logprob: -9.160481452941895
    6. ',' → logprob: -9.660481452941895
    7. '        
' → logprob: -10.535481452941895
    8. ' in' → logprob: -10.535481452941895
    9. ' to' → logprob: -11.035481452941895
    10. ' and' → logprob: -11.285481452941895

Token 241: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.737162172794342
    2. 'for' (adapté à ' for') → logprob: -0.862162172794342
    3. '   ' → logprob: -2.6121621131896973
    4. '       ' → logprob: -4.612162113189697
    5. 'i' → logprob: -4.737162113189697
    6. ' i' → logprob: -4.987162113189697
    7. ' ' → logprob: -8.362162590026855
    8. '	for' → logprob: -10.237162590026855
    9. '```' → logprob: -10.487162590026855
    10. 'm' → logprob: -10.862162590026855

Token 242: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3597148358821869
    2. ' i' → logprob: -1.2347148656845093
    3. 'm' → logprob: -5.484714984893799
    4. 'x' → logprob: -5.734714984893799
    5. 'num' → logprob: -6.984714984893799
    6. ' m' → logprob: -7.109714984893799
    7. ' num' → logprob: -7.359714984893799
    8. ' x' → logprob: -7.484714984893799
    9. ' candidate' → logprob: -8.35971450805664
    10. 'candidate' → logprob: -8.35971450805664

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0054139927960932255
    2. 'in' → logprob: -5.255414009094238
    3. ' ' → logprob: -8.755414009094238
    4. '	in' → logprob: -11.880414009094238
    5. '   ' → logprob: -12.505414009094238
    6. ',' → logprob: -13.005414009094238
    7. '```' → logprob: -13.255414009094238
    8. '    ' → logprob: -13.505414009094238
    9. '<|end|>' → logprob: -14.005414009094238
    10. '1' → logprob: -14.130414009094238

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38733971118927
    2. ' range' → logprob: -1.13733971118927
    3. '1' → logprob: -7.7623395919799805
    4. ' ' → logprob: -11.13733959197998
    5. '(range' → logprob: -11.13733959197998
    6. '2' → logprob: -11.76233959197998
    7. '   ' → logprob: -13.26233959197998
    8. ' in' → logprob: -13.76233959197998
    9. '	range' → logprob: -14.01233959197998
    10. 'in' → logprob: -14.13733959197998

Token 245: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2186991423368454
    2. '(' → logprob: -1.7186990976333618
    3. '2' → logprob: -4.718698978424072
    4. ' ' → logprob: -4.843698978424072
    5. '   ' → logprob: -9.21869945526123
    6. ' (' → logprob: -9.34369945526123
    7. '6' → logprob: -9.71869945526123
    8. ')' → logprob: -11.09369945526123
    9. '    ' → logprob: -11.09369945526123
    10. '(
' → logprob: -11.71869945526123

Token 246: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01816023886203766
    2. '2' → logprob: -4.018160343170166
    3. '7' → logprob: -11.643159866333008
    4. '(' → logprob: -14.143159866333008
    5. ' ' → logprob: -14.643159866333008
    6. 'n' → logprob: -14.893159866333008
    7. '   ' → logprob: -17.268159866333008
    8. '0' → logprob: -17.893159866333008
    9. '
' → logprob: -18.143159866333008
    10. 'i' → logprob: -18.893159866333008

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005007279687561095
    2. ' ,' → logprob: -8.000500679016113
    3. ',n' → logprob: -8.750500679016113
    4. 'n' → logprob: -12.750500679016113
    5. ',
' → logprob: -12.875500679016113
    6. '   ' → logprob: -13.500500679016113
    7. ' n' → logprob: -17.25050163269043
    8. '    ' → logprob: -18.25050163269043
    9. ' ' → logprob: -18.37550163269043
    10. '
' → logprob: -18.50050163269043

Token 248: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019287518225610256
    2. ' n' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.876928329467773
    4. '	n' → logprob: -16.501928329467773
    5. '    ' → logprob: -20.001928329467773
    6. ' ' → logprob: -20.376928329467773
    7. '
' → logprob: -20.876928329467773
    8. '(n' → logprob: -21.001928329467773
    9. '_n' → logprob: -21.751928329467773
    10. '       ' → logprob: -21.876928329467773

Token 249: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02573546953499317
    2. ' +' → logprob: -3.775735378265381
    3. '):
' → logprob: -6.150735378265381
    4. '):' → logprob: -8.400735855102539
    5. '   ' → logprob: -9.400735855102539
    6. ',' → logprob: -10.150735855102539
    7. ' ' → logprob: -13.275735855102539
    8. ' ):
' → logprob: -13.650735855102539
    9. ' ,' → logprob: -14.025735855102539
    10. '    ' → logprob: -14.150735855102539

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.250030517578125
    4. '
' → logprob: -17.500030517578125
    5. ')' → logprob: -17.625030517578125
    6. '):
' → logprob: -17.625030517578125
    7. '```' → logprob: -17.875030517578125
    8. '2' → logprob: -18.125030517578125
    9. '  ' → logprob: -18.625030517578125
    10. '7' → logprob: -19.375030517578125

Token 251: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.030767668038606644
    2. '):' → logprob: -3.5307676792144775
    3. ',' → logprob: -7.530767440795898
    4. '   ' → logprob: -8.155767440795898
    5. ' ):
' → logprob: -9.155767440795898
    6. '):
' → logprob: -10.280767440795898
    7. '       ' → logprob: -10.905767440795898
    8. '):

' → logprob: -11.655767440795898
    9. ' if' → logprob: -12.155767440795898
    10. ':' → logprob: -12.155767440795898

Token 252: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009515943005681038
    2. ' if' → logprob: -5.134515762329102
    3. '<|end|>' → logprob: -6.009515762329102
    4. '   ' → logprob: -7.509515762329102
    5. ',' → logprob: -9.134515762329102
    6. ' ' → logprob: -9.259515762329102
    7. ':' → logprob: -9.759515762329102
    8. '<|end|>' → logprob: -9.884515762329102
    9. '):
' → logprob: -10.134515762329102
    10. '	       ' → logprob: -10.509515762329102

Token 253: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.028205329552292824
    2. '       ' → logprob: -3.903205394744873
    3. 'if' (adapté à ' if') → logprob: -4.903205394744873
    4. '   ' → logprob: -9.528204917907715
    5. ' ' → logprob: -9.903204917907715
    6. '    ' → logprob: -11.028204917907715
    7. '        ' → logprob: -11.028204917907715
    8. ' ' → logprob: -11.028204917907715
    9. '	if' → logprob: -11.528204917907715
    10. '           ' → logprob: -11.903204917907715

Token 254: ' divides' (ID: 144028)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.014200996607542038
    2. ' is' → logprob: -4.2642011642456055
    3. '   ' → logprob: -10.389201164245605
    4. ' ' → logprob: -13.764201164245605
    5. '       ' → logprob: -13.764201164245605
    6. 'i' → logprob: -13.889201164245605
    7. ' divides' → logprob: -13.889201164245605
    8. 'n' → logprob: -14.264201164245605
    9. '(is' → logprob: -15.014201164245605
    10. 'div' → logprob: -15.014201164245605

Token 255: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0010623442940413952
    2. 'i' → logprob: -6.876062393188477
    3. ' i' → logprob: -11.626062393188477
    4. '(' → logprob: -11.876062393188477
    5. ' (' → logprob: -12.001062393188477
    6. ')' → logprob: -12.126062393188477
    7. '   ' → logprob: -14.876062393188477
    8. ',i' → logprob: -15.001062393188477
    9. '(
' → logprob: -15.251062393188477
    10. ')(' → logprob: -15.251062393188477

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004167083650827408
    2. ',n' → logprob: -5.879167079925537
    3. ' ,' → logprob: -6.629167079925537
    4. 'n' → logprob: -10.379167556762695
    5. ' n' → logprob: -12.629167556762695
    6. ',
' → logprob: -12.754167556762695
    7. ')' → logprob: -14.504167556762695
    8. '(n' → logprob: -14.504167556762695
    9. '),' → logprob: -15.004167556762695
    10. ',i' → logprob: -15.129167556762695

Token 257: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033558503491804004
    2. ' n' → logprob: -8.000335693359375
    3. '	n' → logprob: -16.000335693359375
    4. '   ' → logprob: -17.500335693359375
    5. '_n' → logprob: -18.500335693359375
    6. ')n' → logprob: -18.625335693359375
    7. ')' → logprob: -19.250335693359375
    8. ' ' → logprob: -19.625335693359375
    9. '<|end|>' → logprob: -19.625335693359375
    10. ',n' → logprob: -19.875335693359375

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002714681322686374
    2. ' )' → logprob: -8.250271797180176
    3. 'and' → logprob: -12.125271797180176
    4. ' and' → logprob: -12.375271797180176
    5. '")' → logprob: -15.875271797180176
    6. '):
' → logprob: -16.75027084350586
    7. '           ' → logprob: -16.75027084350586
    8. '`)' → logprob: -17.00027084350586
    9. '   ' → logprob: -17.25027084350586
    10. ')
' → logprob: -17.37527084350586

Token 259: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0013463040813803673
    2. 'and' → logprob: -6.626346111297607
    3. '           ' → logprob: -11.501346588134766
    4. ' ' → logprob: -12.001346588134766
    5. '            ' → logprob: -13.251346588134766
    6. '               ' → logprob: -14.001346588134766
    7. '          ' → logprob: -14.751346588134766
    8. '	and' → logprob: -15.251346588134766
    9. '              ' → logprob: -15.876346588134766
    10. '    ' → logprob: -15.876346588134766

Token 260: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5759415626525879
    2. 'is' → logprob: -0.8259415626525879
    3. ' ' → logprob: -13.95094108581543
    4. '   ' → logprob: -14.20094108581543
    5. '	is' → logprob: -15.07594108581543
    6. '           ' → logprob: -15.57594108581543
    7. '  ' → logprob: -16.20094108581543
    8. '
' → logprob: -17.57594108581543
    9. '    ' → logprob: -17.95094108581543
    10. '               ' → logprob: -18.32594108581543

Token 261: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.00014740281039848924
    2. 'm' → logprob: -9.375147819519043
    3. 'is' → logprob: -9.750147819519043
    4. 'Monday' → logprob: -13.000147819519043
    5. '(m' → logprob: -14.375147819519043
    6. '_is' → logprob: -14.500147819519043
    7. 's' → logprob: -14.750147819519043
    8. '(_' → logprob: -15.875147819519043
    9. ' monday' → logprob: -16.875146865844727
    10. '_' → logprob: -17.250146865844727

Token 262: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -0.01640254072844982
    2. '_m' → logprob: -4.766402721405029
    3. 'm' → logprob: -4.891402721405029
    4. 'Monday' → logprob: -9.141402244567871
    5. '_' → logprob: -10.016402244567871
    6. '```' → logprob: -10.516402244567871
    7. 'on' → logprob: -10.641402244567871
    8. '-m' → logprob: -11.641402244567871
    9. ' monday' → logprob: -12.266402244567871
    10. 'is' → logprob: -12.766402244567871

Token 263: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0001717166742309928
    2. 's' → logprob: -9.375171661376953
    3. 'Saturday' → logprob: -9.375171661376953
    4. '_number' → logprob: -14.250171661376953
    5. '_sat' → logprob: -14.625171661376953
    6. '\' → logprob: -15.250171661376953
    7. '```' → logprob: -15.750171661376953
    8. 'aturday' → logprob: -16.625171661376953
    9. '_' → logprob: -16.625171661376953
    10. ' saturday' → logprob: -16.625171661376953

Token 264: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -2.4391956685576588e-05
    2. 'Saturday' → logprob: -11.750024795532227
    3. 'unday' → logprob: -11.750024795532227
    4. 'onday' → logprob: -13.000024795532227
    5. '_' → logprob: -13.625024795532227
    6. 'at' → logprob: -14.000024795532227
    7. '_number' → logprob: -14.125024795532227
    8. 'atud' → logprob: -14.750024795532227
    9. 'ursday' → logprob: -14.875024795532227
    10. 'atter' → logprob: -15.000024795532227

Token 265: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0009954140987247229
    2. 'number' → logprob: -7.000995635986328
    3. '_prime' → logprob: -9.500995635986328
    4. 'prime' → logprob: -11.750995635986328
    5. '_' → logprob: -14.750995635986328
    6. '
' → logprob: -15.375995635986328
    7. 'Number' → logprob: -15.625995635986328
    8. '```' → logprob: -15.750995635986328
    9. ' number' → logprob: -16.000995635986328
    10. '

' → logprob: -16.375995635986328

Token 266: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.7432603272027336e-06
    2. ' (' → logprob: -13.625001907348633
    3. '(' → logprob: -15.125001907348633
    4. '(n' → logprob: -17.250001907348633
    5. ')' → logprob: -17.625001907348633
    6. ')(' → logprob: -18.625001907348633
    7. '(ii' → logprob: -19.000001907348633
    8. '(
' → logprob: -19.250001907348633
    9. '```' → logprob: -19.500001907348633
    10. '(I' → logprob: -19.625001907348633

Token 267: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2237115204334259
    2. ')' → logprob: -2.0987114906311035
    3. 'and' → logprob: -2.9737114906311035
    4. '):
' → logprob: -3.7237114906311035
    5. '):' → logprob: -6.3487114906311035
    6. '           ' → logprob: -7.5987114906311035
    7. ' )' → logprob: -8.848711967468262
    8. ':' → logprob: -9.973711967468262
    9. '       ' → logprob: -10.098711967468262
    10. ':
' → logprob: -10.473711967468262

Token 268: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003915849607437849
    2. 'and' → logprob: -6.253915786743164
    3. '               ' → logprob: -6.753915786743164
    4. '           ' → logprob: -7.628915786743164
    5. ':
' → logprob: -8.253915786743164
    6. ':' → logprob: -10.003915786743164
    7. '       ' → logprob: -12.253915786743164
    8. '<|end|>' → logprob: -12.253915786743164
    9. '<|end|>' → logprob: -13.003915786743164
    10. '):
' → logprob: -13.128915786743164

Token 269: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6135255098342896
    2. '               ' → logprob: -0.9885255098342896
    3. 'if' (adapté à ' if') → logprob: -2.488525390625
    4. '           ' → logprob: -5.988525390625
    5. '                   ' → logprob: -7.863525390625
    6. ' and' → logprob: -8.238525390625
    7. '   ' → logprob: -8.863525390625
    8. '       ' → logprob: -10.113525390625
    9. '                
' → logprob: -11.363525390625
    10. '	           ' → logprob: -11.738525390625

Token 270: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04859747737646103
    2. 'is' → logprob: -3.048597574234009
    3. '                   ' → logprob: -12.04859733581543
    4. '               ' → logprob: -12.79859733581543
    5. '   ' → logprob: -13.92359733581543
    6. '	is' → logprob: -15.42359733581543
    7. ' ' → logprob: -15.67359733581543
    8. '           ' → logprob: -16.17359733581543
    9. '                ' → logprob: -16.79859733581543
    10. '    ' → logprob: -17.79859733581543

Token 271: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.00014454191841650754
    2. 'is' → logprob: -9.000144958496094
    3. '_is' → logprob: -11.000144958496094
    4. '_s' → logprob: -13.000144958496094
    5. 'm' → logprob: -14.125144958496094
    6. 'Monday' → logprob: -14.250144958496094
    7. 's' → logprob: -15.625144958496094
    8. '_' → logprob: -16.000144958496094
    9. ' _' → logprob: -16.250144958496094
    10. '(_' → logprob: -16.500144958496094

Token 272: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -0.09111060202121735
    2. '_m' → logprob: -2.4661107063293457
    3. 'm' → logprob: -6.341110706329346
    4. 'Monday' → logprob: -8.466110229492188
    5. 'is' → logprob: -9.216110229492188
    6. 'on' → logprob: -10.716110229492188
    7. 's' → logprob: -10.716110229492188
    8. 'ond' → logprob: -11.216110229492188
    9. 'onda' → logprob: -12.091110229492188
    10. '-m' → logprob: -12.341110229492188

Token 273: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.082895273109898e-05
    2. 's' → logprob: -11.000030517578125
    3. 'Saturday' → logprob: -11.250030517578125
    4. '_sat' → logprob: -14.750030517578125
    5. '```' → logprob: -15.750030517578125
    6. ' saturday' → logprob: -16.125030517578125
    7. 'm' → logprob: -16.375030517578125
    8. '
' → logprob: -16.750030517578125
    9. ' Saturday' → logprob: -16.875030517578125
    10. '_m' → logprob: -17.250030517578125

Token 274: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.08656007051467896
    2. 'prime' → logprob: -2.586560010910034
    3. 'onday' → logprob: -5.961560249328613
    4. '_prime' → logprob: -6.836560249328613
    5. 'unday' → logprob: -7.211560249328613
    6. 'm' → logprob: -7.336560249328613
    7. 'r' → logprob: -7.711560249328613
    8. 'Saturday' → logprob: -7.836560249328613
    9. 'day' → logprob: -7.961560249328613
    10. 'p' → logprob: -8.586560249328613

Token 275: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -9.817902173381299e-05
    2. 'prime' → logprob: -9.25009822845459
    3. '
' → logprob: -13.75009822845459
    4. '_' → logprob: -14.25009822845459
    5. '_p' → logprob: -16.375097274780273
    6. ' prime' → logprob: -17.250097274780273
    7. '_pr' → logprob: -17.500097274780273
    8. '```' → logprob: -17.500097274780273
    9. '_primary' → logprob: -18.125097274780273
    10. ' _' → logprob: -18.125097274780273

Token 276: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.2664456789934775e-06
    2. ' (' → logprob: -14.125000953674316
    3. '(' → logprob: -14.625000953674316
    4. '(ii' → logprob: -17.125001907348633
    5. '```' → logprob: -18.875001907348633
    6. '(
' → logprob: -19.000001907348633
    7. '(n' → logprob: -19.750001907348633
    8. '   ' → logprob: -20.375001907348633
    9. ')(' → logprob: -20.625001907348633
    10. '(I' → logprob: -21.000001907348633

Token 277: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018207771703600883
    2. '):
' → logprob: -4.018207550048828
    3. '():' → logprob: -10.018207550048828
    4. '():
' → logprob: -12.643207550048828
    5. ' ):' → logprob: -12.768207550048828
    6. ')' → logprob: -13.143207550048828
    7. ':' → logprob: -13.268207550048828
    8. '()):
' → logprob: -13.518207550048828
    9. '()' → logprob: -13.893207550048828
    10. '):

' → logprob: -14.643207550048828

Token 278: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0021343177650123835
    2. '               ' → logprob: -7.127134323120117
    3. '                       ' → logprob: -7.627134323120117
    4. ':
' → logprob: -7.752134323120117
    5. '           ' → logprob: -9.002134323120117
    6. ',' → logprob: -9.502134323120117
    7. ' factors' → logprob: -9.877134323120117
    8. '):
' → logprob: -10.002134323120117
    9. '
' → logprob: -10.877134323120117
    10. '<|end|>' → logprob: -10.877134323120117

Token 279: ' if' (ID: 538)
  Prédit: ' factors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.20153729617595673
    2. '                       ' → logprob: -2.2015373706817627
    3. '                   ' → logprob: -2.8265373706817627
    4. '               ' → logprob: -4.951537132263184
    5. 'f' → logprob: -5.451537132263184
    6. '       ' → logprob: -7.201537132263184
    7. '           ' → logprob: -8.076537132263184
    8. '   ' → logprob: -9.701537132263184
    9. 'factor' → logprob: -9.951537132263184
    10. '	f' → logprob: -10.826537132263184

Token 280: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13560646772384644
    2. 'i' → logprob: -2.135606527328491
    3. ' n' → logprob: -5.510606288909912
    4. 'n' → logprob: -6.010606288909912
    5. ' not' → logprob: -7.135606288909912
    6. ' all' → logprob: -8.01060676574707
    7. ' len' → logprob: -8.26060676574707
    8. ' ' → logprob: -8.51060676574707
    9. ' divides' → logprob: -8.76060676574707
    10. 'len' → logprob: -9.01060676574707

Token 281: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.003532367292791605
    2. 'not' → logprob: -5.753532409667969
    3. ' in' → logprob: -8.503532409667969
    4. ' ==' → logprob: -10.003532409667969
    5. ')' → logprob: -10.378532409667969
    6. '==' → logprob: -10.628532409667969
    7. 'in' → logprob: -11.253532409667969
    8. ' ' → logprob: -11.378532409667969
    9. ' <=' → logprob: -12.003532409667969
    10. '>' → logprob: -12.378532409667969

Token 282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03724611923098564
    2. ' factors' → logprob: -3.4122462272644043
    3. 'in' → logprob: -5.662246227264404
    4. '<|end|>' → logprob: -10.162245750427246
    5. ' factores' → logprob: -10.912245750427246
    6. 'Factors' → logprob: -11.412245750427246
    7. ',' → logprob: -11.537245750427246
    8. 'factor' → logprob: -11.537245750427246
    9. ')' → logprob: -11.787245750427246
    10. ' ' → logprob: -12.287245750427246

Token 283: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.16025063395500183
    2. 'f' → logprob: -1.9102506637573242
    3. 'factor' → logprob: -10.660250663757324
    4. ' factores' → logprob: -13.660250663757324
    5. 'Factors' → logprob: -14.660250663757324
    6. 'fact' → logprob: -15.160250663757324
    7. ' fatores' → logprob: -15.660250663757324
    8. ' ' → logprob: -15.785250663757324
    9. '	f' → logprob: -15.910250663757324
    10. ' f' → logprob: -16.035249710083008

Token 284: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.766912043094635
    2. ':' → logprob: -1.1419119834899902
    3. ':
' → logprob: -1.7669119834899902
    4. '                   ' → logprob: -4.39191198348999
    5. '.append' → logprob: -4.39191198348999
    6. ',' → logprob: -4.51691198348999
    7. '):
' → logprob: -5.51691198348999
    8. '.' → logprob: -6.26691198348999
    9. '):' → logprob: -6.64191198348999
    10. ')' → logprob: -7.89191198348999

Token 285: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0017409856664016843
    2. ' factors' → logprob: -7.2517409324646
    3. '                   ' → logprob: -7.3767409324646
    4. '               ' → logprob: -8.376741409301758
    5. '           ' → logprob: -9.876741409301758
    6. '	                   ' → logprob: -10.501741409301758
    7. '       ' → logprob: -10.626741409301758
    8. 'f' → logprob: -10.626741409301758
    9. '		               ' → logprob: -11.876741409301758
    10. '			           ' → logprob: -11.876741409301758

Token 286: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.0065656909719109535
    2. '                           ' → logprob: -5.506565570831299
    3. 'f' → logprob: -7.131565570831299
    4. '	f' → logprob: -7.381565570831299
    5. ' f' → logprob: -7.506565570831299
    6. '                       ' → logprob: -9.006566047668457
    7. '           ' → logprob: -9.381566047668457
    8. '	                       ' → logprob: -10.006566047668457
    9. 'Factors' → logprob: -10.381566047668457
    10. '						' → logprob: -10.506566047668457

Token 287: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014169269241392612
    2. '.' → logprob: -4.264169216156006
    3. '.add' → logprob: -12.639169692993164
    4. '.push' → logprob: -14.514169692993164
    5. '.Append' → logprob: -14.889169692993164
    6. '.app' → logprob: -15.139169692993164
    7. ' .' → logprob: -15.139169692993164
    8. ').' → logprob: -15.389169692993164
    9. '.ap' → logprob: -15.389169692993164
    10. '.setdefault' → logprob: -15.389169692993164

Token 288: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.008614808320999146
    2. '(' → logprob: -4.758615016937256
    3. '(
' → logprob: -15.133614540100098
    4. ' (' → logprob: -17.508615493774414
    5. '(ii' → logprob: -18.883615493774414
    6. '((' → logprob: -19.508615493774414
    7. '('' → logprob: -19.883615493774414
    8. '(

' → logprob: -20.008615493774414
    9. 'i' → logprob: -20.133615493774414
    10. '(iv' → logprob: -20.383615493774414

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -12.750003814697266
    3. '))' → logprob: -15.625003814697266
    4. ' )' → logprob: -15.750003814697266
    5. ')}}' → logprob: -17.125003814697266
    6. '       ' → logprob: -17.375003814697266
    7. '),' → logprob: -17.375003814697266
    8. '   ' → logprob: -17.500003814697266
    9. ')`' → logprob: -17.625003814697266
    10. '                       ' → logprob: -17.875003814697266

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15256625413894653
    2. '
' → logprob: -2.0275661945343018
    3. '   ' → logprob: -4.902566432952881
    4. '<|end|>' → logprob: -6.527566432952881
    5. ',' → logprob: -8.152565956115723
    6. '    
' → logprob: -8.277565956115723
    7. '        
' → logprob: -9.027565956115723
    8. '<|end|>' → logprob: -9.777565956115723
    9. 'print' → logprob: -10.152565956115723
    10. '           ' → logprob: -10.277565956115723

Token 291: ' factors' (ID: 11652)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9408782720565796
    2. '       ' → logprob: -0.9408782720565796
    3. 'print' → logprob: -2.315878391265869
    4. '
' → logprob: -3.190878391265869
    5. 'for' → logprob: -3.190878391265869
    6. ' for' → logprob: -3.565878391265869
    7. 'f' → logprob: -5.690878391265869
    8. ' factors' → logprob: -6.315878391265869
    9. '```' → logprob: -6.815878391265869
    10. '        
' → logprob: -7.190878391265869

Token 292: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.002457345137372613
    2. '<|end|>' → logprob: -6.127457141876221
    3. '.append' → logprob: -9.127457618713379
    4. '.' → logprob: -10.127457618713379
    5. 'sort' → logprob: -10.752457618713379
    6. '.clear' → logprob: -11.002457618713379
    7. ')' → logprob: -11.002457618713379
    8. '.reverse' → logprob: -11.127457618713379
    9. '=' → logprob: -11.252457618713379
    10. '.remove' → logprob: -11.377457618713379

Token 293: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31691232323646545
    2. '()
' → logprob: -1.316912293434143
    3. '       ' → logprob: -5.8169121742248535
    4. '(' → logprob: -7.4419121742248535
    5. 'print' → logprob: -10.816912651062012
    6. '()\' → logprob: -11.191912651062012
    7. '()

' → logprob: -11.316912651062012
    8. '()
' → logprob: -11.566912651062012
    9. '(
' → logprob: -11.941912651062012
    10. '(),' → logprob: -12.566912651062012

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03076176717877388
    2. '   ' → logprob: -3.53076171875
    3. 'print' → logprob: -7.28076171875
    4. '<|end|>' → logprob: -8.40576171875
    5. '```' → logprob: -10.15576171875
    6. '        
' → logprob: -10.78076171875
    7. '
' → logprob: -11.03076171875
    8. '    
' → logprob: -11.03076171875
    9. 'for' → logprob: -13.40576171875
    10. ' print' → logprob: -13.65576171875

Token 295: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00046379686682485044
    2. '       ' → logprob: -8.250463485717773
    3. ' print' → logprob: -8.750463485717773
    4. 'if' → logprob: -10.375463485717773
    5. 'for' → logprob: -11.625463485717773
    6. '   ' → logprob: -12.625463485717773
    7. ' if' → logprob: -15.250463485717773
    8. '```' → logprob: -15.250463485717773
    9. ' for' → logprob: -15.500463485717773
    10. '	print' → logprob: -16.250463485717773

Token 296: '(str' (ID: 7946)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.06869347393512726
    2. '('' → logprob: -3.0686933994293213
    3. '(*' → logprob: -4.0686936378479
    4. '(' → logprob: -6.5686936378479
    5. '("' → logprob: -6.6936936378479
    6. '(tuple' → logprob: -9.068693161010742
    7. '(len' → logprob: -10.443693161010742
    8. '("("' → logprob: -11.568693161010742
    9. '((' → logprob: -13.068693161010742
    10. '(*)' → logprob: -13.693693161010742

Token 297: '(n' (ID: 2406)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00012332366895861924
    2. '(' → logprob: -9.250123023986816
    3. '(len' → logprob: -11.750123023986816
    4. '(',' → logprob: -12.375123023986816
    5. '([' → logprob: -12.375123023986816
    6. '('' → logprob: -12.875123023986816
    7. '(*' → logprob: -13.000123023986816
    8. '(",' → logprob: -13.625123023986816
    9. 'f' → logprob: -13.750123023986816
    10. '(tuple' → logprob: -13.875123023986816

Token 298: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014429436065256596
    2. ')+' → logprob: -4.264429569244385
    3. ',' → logprob: -9.139429092407227
    4. ')+"' → logprob: -9.514429092407227
    5. ')+'' → logprob: -9.639429092407227
    6. ' )' → logprob: -11.514429092407227
    7. '),' → logprob: -12.014429092407227
    8. '+' → logprob: -14.014429092407227
    9. '   ' → logprob: -14.014429092407227
    10. '))' → logprob: -14.889429092407227

Token 299: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5238481163978577
    2. '"' → logprob: -1.523848056793213
    3. '':' → logprob: -2.273848056793213
    4. ''' → logprob: -2.523848056793213
    5. '":"' → logprob: -5.523848056793213
    6. '':'' → logprob: -5.898848056793213
    7. '",' → logprob: -11.273848533630371
    8. '":"+' → logprob: -11.398848533630371
    9. '',' → logprob: -11.523848533630371
    10. ':' → logprob: -11.773848533630371

Token 300: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.37744590640068054
    2. ' "' → logprob: -2.127445936203003
    3. ''' → logprob: -2.627445936203003
    4. ' [' → logprob: -3.377445936203003
    5. '",' → logprob: -3.752445936203003
    6. ' ' → logprob: -4.377445697784424
    7. '[' → logprob: -4.502445697784424
    8. ' ","' → logprob: -4.752445697784424
    9. ' ",' → logprob: -4.877445697784424
    10. ' {'' → logprob: -5.002445697784424

Token 301: ' end' (ID: 1268)
  Prédit: '*f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*f' → logprob: -0.8728408813476562
    2. '"' → logprob: -1.3728408813476562
    3. '*' → logprob: -1.3728408813476562
    4. ' *' → logprob: -3.2478408813476562
    5. ''' → logprob: -3.4978408813476562
    6. ' '' → logprob: -5.872840881347656
    7. 'f' → logprob: -6.372840881347656
    8. ' "' → logprob: -7.497840881347656
    9. ')' → logprob: -7.497840881347656
    10. ''f' → logprob: -7.497840881347656

Token 302: '="")
' (ID: 154840)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06451448798179626
    2. ''' → logprob: -2.814514398574829
    3. '='' → logprob: -6.564514636993408
    4. '="' → logprob: -7.189514636993408
    5. ' "' → logprob: -8.68951416015625
    6. ')' → logprob: -9.06451416015625
    7. ' '' → logprob: -9.56451416015625
    8. ' )' → logprob: -12.06451416015625
    9. '```' → logprob: -12.68951416015625
    10. '    ' → logprob: -12.68951416015625

Token 303: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.03991549462080002
    2. ' factor' → logprob: -3.2899155616760254
    3. ' ' → logprob: -6.414915561676025
    4. 'f' → logprob: -9.539915084838867
    5. ' ' → logprob: -9.914915084838867
    6. ' i' → logprob: -9.914915084838867
    7. 'factor' → logprob: -9.914915084838867
    8. '	f' → logprob: -12.039915084838867
    9. ' fator' → logprob: -13.039915084838867
    10. ' x' → logprob: -13.414915084838867

Token 306: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005435001221485436
    2. ' f' → logprob: -7.750543594360352
    3. ',' → logprob: -10.250543594360352
    4. 'in' → logprob: -10.500543594360352
    5. '<|end|>' → logprob: -10.750543594360352
    6. ' ' → logprob: -11.625543594360352
    7. '  ' → logprob: -12.375543594360352
    8. 'f' → logprob: -12.875543594360352
    9. '   ' → logprob: -12.875543594360352
    10. ')' → logprob: -13.000543594360352

Token 307: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.0011585581814870238
    2. '"' → logprob: -7.001158714294434
    3. ' f' → logprob: -9.126158714294434
    4. ' "' → logprob: -9.126158714294434
    5. ' ' → logprob: -11.126158714294434
    6. 'f' → logprob: -11.501158714294434
    7. ' factores' → logprob: -13.001158714294434
    8. ' factor' → logprob: -14.626158714294434
    9. ' ("' → logprob: -14.626158714294434
    10. '("' → logprob: -15.001158714294434

Token 308: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3954560458660126
    2. '<|end|>' → logprob: -2.145456075668335
    3. '   ' → logprob: -2.395456075668335
    4. '       ' → logprob: -2.770456075668335
    5. '"' → logprob: -3.770456075668335
    6. ' print' → logprob: -5.145455837249756
    7. ')' → logprob: -5.395455837249756
    8. '           ' → logprob: -5.895455837249756
    9. '<|end|>' → logprob: -6.020455837249756
    10. 'print' → logprob: -6.020455837249756

Token 309: '           ' (ID: 352)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.20459134876728058
    2. '           ' → logprob: -1.8295913934707642
    3. 'print' → logprob: -4.829591274261475
    4. '       ' → logprob: -5.329591274261475
    5. '<|end|>' → logprob: -5.454591274261475
    6. '	       ' → logprob: -5.704591274261475
    7. '   ' → logprob: -6.454591274261475
    8. ' ' → logprob: -7.454591274261475
    9. '	print' → logprob: -7.829591274261475
    10. '	   ' → logprob: -8.579591751098633

Token 310: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.007701268419623375
    2. 'print' (adapté à ' print') → logprob: -4.882701396942139
    3. '           ' → logprob: -10.25770092010498
    4. '	print' → logprob: -11.13270092010498
    5. '       ' → logprob: -11.50770092010498
    6. '<|end|>' → logprob: -11.75770092010498
    7. '   ' → logprob: -12.00770092010498
    8. ' ' → logprob: -12.13270092010498
    9. '"' → logprob: -12.75770092010498
    10. '.print' → logprob: -13.13270092010498

Token 311: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007796602323651314
    2. '(' → logprob: -5.257796764373779
    3. '('' → logprob: -6.632796764373779
    4. '(f' → logprob: -6.757796764373779
    5. '"' → logprob: -9.632796287536621
    6. '()' → logprob: -11.882796287536621
    7. '(
' → logprob: -12.007796287536621
    8. ' ("' → logprob: -13.757796287536621
    9. '("")' → logprob: -14.007796287536621
    10. ''' → logprob: -15.007796287536621

Token 312: ' "+' (ID: 10953)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.267276406288147
    2. ' f' → logprob: -1.767276406288147
    3. ' "' → logprob: -3.3922762870788574
    4. ' ' → logprob: -3.5172762870788574
    5. ''' → logprob: -8.017276763916016
    6. ' '' → logprob: -10.392276763916016
    7. ' ' → logprob: -11.517276763916016
    8. ' ("' → logprob: -11.642276763916016
    9. '("' → logprob: -11.767276763916016
    10. 'f' → logprob: -12.017276763916016

Token 313: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.9361264946837764e-07
    2. ' str' → logprob: -16.25
    3. '(str' → logprob: -17.75
    4. 'f' → logprob: -20.125
    5. '[str' → logprob: -21.25
    6. '=str' → logprob: -22.0
    7. '	str' → logprob: -22.75
    8. '```' → logprob: -23.25
    9. 'repr' → logprob: -24.25
    10. '
' → logprob: -24.375

Token 314: '(f' (ID: 1526)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3132629990577698
    2. '(f' → logprob: -1.313262939453125
    3. '	f' → logprob: -14.313262939453125
    4. ' f' → logprob: -14.313262939453125
    5. '[f' → logprob: -17.188262939453125
    6. '(' → logprob: -17.688262939453125
    7. '<f' → logprob: -17.938262939453125
    8. '_f' → logprob: -18.688262939453125
    9. '(
' → logprob: -18.813262939453125
    10. 'ф' → logprob: -19.188262939453125

Token 315: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6042832732200623
    2. '),' → logprob: -1.104283332824707
    3. ',' → logprob: -2.104283332824707
    4. ',end' → logprob: -9.229283332824707
    5. ')",' → logprob: -10.354283332824707
    6. ')+' → logprob: -12.604283332824707
    7. ' ,' → logprob: -12.729283332824707
    8. ',f' → logprob: -12.729283332824707
    9. '))' → logprob: -12.729283332824707
    10. '",' → logprob: -13.479283332824707

Token 316: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0007104054093360901
    2. ' end' → logprob: -7.250710487365723
    3. ',end' → logprob: -14.875710487365723
    4. ')' → logprob: -17.750709533691406
    5. '(end' → logprob: -18.000709533691406
    6. '	end' → logprob: -18.375709533691406
    7. '   ' → logprob: -19.750709533691406
    8. ''end' → logprob: -19.875709533691406
    9. '=end' → logprob: -20.250709533691406
    10. ',' → logprob: -20.250709533691406

Token 317: '="")
' (ID: 154840)
  Prédit: '="'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '="' → logprob: -0.2065134346485138
    2. '"' → logprob: -1.7065134048461914
    3. '""' → logprob: -5.456513404846191
    4. '=""' → logprob: -7.331513404846191
    5. '(""))' → logprob: -9.706513404846191
    6. ' "")' → logprob: -10.206513404846191
    7. '="")
' → logprob: -10.581513404846191
    8. ')' → logprob: -10.706513404846191
    9. '="",' → logprob: -12.456513404846191
    10. '")' → logprob: -12.456513404846191

Token 318: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10169075429439545
    2. '       ' → logprob: -2.7266907691955566
    3. '
' → logprob: -4.101690769195557
    4. '\n' → logprob: -4.851690769195557
    5. '<|end|>' → logprob: -5.851690769195557
    6. '   ' → logprob: -6.226690769195557
    7. ' print' → logprob: -6.976690769195557
    8. '```' → logprob: -7.726690769195557
    9. '\' → logprob: -7.976690769195557
    10. '	print' → logprob: -8.726690292358398

Token 319: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005567280459217727
    2. ' print' → logprob: -8.375556945800781
    3. '
' → logprob: -8.500556945800781
    4. '\n' → logprob: -9.500556945800781
    5. '       ' → logprob: -10.625556945800781
    6. '	print' → logprob: -11.375556945800781
    7. '\' → logprob: -11.750556945800781
    8. '   ' → logprob: -13.500556945800781
    9. '```' → logprob: -13.875556945800781
    10. '
' → logprob: -15.625556945800781

Token 320: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0087516784551553e-05
    2. '()
' → logprob: -11.87501049041748
    3. '("")' → logprob: -13.25001049041748
    4. '(' → logprob: -13.62501049041748
    5. ' ()' → logprob: -16.750009536743164
    6. '()"' → logprob: -16.875009536743164
    7. '()\' → logprob: -17.125009536743164
    8. '()

' → logprob: -18.125009536743164
    9. '()<' → logprob: -18.125009536743164
    10. '()}' → logprob: -18.375009536743164

Token 321: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009951572865247726
    2. '
' → logprob: -5.009951591491699
    3. 'main' → logprob: -6.384951591491699
    4. '<|end|>' → logprob: -7.759951591491699
    5. ' if' → logprob: -7.884951591491699
    6. '#' → logprob: -8.2599515914917
    7. '```' → logprob: -8.3849515914917
    8. 'n' → logprob: -9.5099515914917
    9. '\n' → logprob: -9.6349515914917
    10. 'm' → logprob: -10.7599515914917

Token 322: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03910074010491371
    2. '__' → logprob: -3.2891006469726562
    3. '_' → logprob: -7.039100646972656
    4. '_name' → logprob: -9.039100646972656
    5. ' ' → logprob: -9.914100646972656
    6. ' _' → logprob: -12.664100646972656
    7. ' ' → logprob: -12.914100646972656
    8. '  ' → logprob: -13.039100646972656
    9. '___' → logprob: -13.539100646972656
    10. ' ' → logprob: -13.789100646972656

Token 323: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002989968634210527
    2. ' __' → logprob: -9.250299453735352
    3. '==' → logprob: -9.750299453735352
    4. '__.__' → logprob: -9.750299453735352
    5. ' ==' → logprob: -9.875299453735352
    6. '__.' → logprob: -11.875299453735352
    7. 'name' → logprob: -12.250299453735352
    8. '_' → logprob: -12.375299453735352
    9. '.__' → logprob: -12.875299453735352
    10. '__[' → logprob: -13.250299453735352

Token 324: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.8232690460281447e-05
    2. '__.__' → logprob: -10.250048637390137
    3. '==' → logprob: -11.375048637390137
    4. '___' → logprob: -14.875048637390137
    5. '__.' → logprob: -15.125048637390137
    6. '____' → logprob: -15.250048637390137
    7. '__["' → logprob: -15.875048637390137
    8. '=="' → logprob: -16.00004768371582
    9. '__
' → logprob: -16.37504768371582
    10. '"' → logprob: -16.62504768371582

Token 325: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.026677722111344337
    2. ' ==' → logprob: -4.15167760848999
    3. '==' → logprob: -4.65167760848999
    4. '=="' → logprob: -6.90167760848999
    5. '=='' → logprob: -10.776678085327148
    6. '"' → logprob: -12.651678085327148
    7. '_' → logprob: -13.026678085327148
    8. '__.__' → logprob: -13.151678085327148
    9. '___' → logprob: -13.401678085327148
    10. ' __' → logprob: -14.151678085327148

Token 326: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10021325200796127
    2. ''' → logprob: -2.3502132892608643
    3. ' "__' → logprob: -12.100213050842285
    4. '__' → logprob: -14.600213050842285
    5. ' '__' → logprob: -15.600213050842285
    6. ''"' → logprob: -15.725213050842285
    7. '"'' → logprob: -16.7252140045166
    8. '"user' → logprob: -16.7252140045166
    9. '"_' → logprob: -17.6002140045166
    10. '"name' → logprob: -17.8502140045166

Token 327: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00034952821442857385
    2. '__' → logprob: -8.000349998474121
    3. '"' → logprob: -11.500349998474121
    4. 'name' → logprob: -13.250349998474121
    5. '_main' → logprob: -14.125349998474121
    6. ' main' → logprob: -14.500349998474121
    7. ''' → logprob: -14.875349998474121
    8. 'MAIN' → logprob: -16.125349044799805
    9. 'built' → logprob: -16.125349044799805
    10. 'm' → logprob: -16.875349044799805

Token 328: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.013336466625332832
    2. '__' → logprob: -4.388336658477783
    3. '__':
' → logprob: -7.138336658477783
    4. '__.' → logprob: -10.888336181640625
    5. '__.__' → logprob: -12.513336181640625
    6. '_' → logprob: -12.763336181640625
    7. '__:' → logprob: -12.888336181640625
    8. '__["' → logprob: -13.013336181640625
    9. '.' → logprob: -13.763336181640625
    10. '__
' → logprob: -14.638336181640625

Token 329: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.5597102396423e-05
    2. ' main' → logprob: -10.250035285949707
    3. '__' → logprob: -15.750035285949707
    4. '	main' → logprob: -18.000036239624023
    5. '   ' → logprob: -20.625036239624023
    6. '_main' → logprob: -20.750036239624023
    7. 'run' → logprob: -21.375036239624023
    8. '(main' → logprob: -21.375036239624023
    9. 'm' → logprob: -22.625036239624023
    10. ' ' → logprob: -23.000036239624023

Token 330: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -23.0
    4. '.main' → logprob: -26.0
    5. '   ' → logprob: -26.25
    6. 'm' → logprob: -26.25
    7. '_main' → logprob: -26.625
    8. '(main' → logprob: -26.75
    9. 'mai' → logprob: -26.875
    10. '__' → logprob: -28.0

Token 331: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 329
Tokens correctement prédits (1ère position, stricte): 158
Tokens correctement prédits (1ère position, avec adaptation): 164
Tokens correctement prédits (top 10): 265
Précision stricte (1ère position): 48.02%
Précision adaptée (1ère position): 49.85%
Précision (top 10): 80.55%
================================================================================
