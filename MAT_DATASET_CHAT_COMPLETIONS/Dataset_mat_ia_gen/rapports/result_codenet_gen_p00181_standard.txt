================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def can_place(w, m, widths, max_width):
    count = 1
    current_sum = 0
    for width in widths:
        if width > max_width:
            return False
        if current_sum + width <= max_width:
            current_sum += width
        else:
            count += 1
            current_sum = width
            if count > m:
                return False
    return True

for line in sys.stdin:
    if not line.strip():
        continue
    m, n = map(int, line.split())
    if m == 0 and n == 0:
        break
    widths = [int(sys.stdin.readline()) for _ in range(n)]
    left, right = max(widths), sum(widths)
    while left < right:
        mid = (left + right) // 2
        if can_place(m, n, widths, mid):
            right = mid
        else:
            left = mid + 1
    print(left)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04091703146696091
    2. ' main' → logprob: -4.915916919708252
    3. ' space' → logprob: -5.165916919708252
    4. ' process' → logprob: -5.415916919708252
    5. ' ' → logprob: -6.040916919708252
    6. ' sys' → logprob: -6.165916919708252
    7. ' my' → logprob: -6.415916919708252
    8. ' function' → logprob: -6.790916919708252
    9. ' system' → logprob: -6.915916919708252
    10. ' a' → logprob: -6.915916919708252

Token 5: '_place' (ID: 81501)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006502439733594656
    2. ' _' → logprob: -5.756502628326416
    3. '_accept' → logprob: -7.131502628326416
    4. '_space' → logprob: -7.881502628326416
    5. '_t' → logprob: -8.381502151489258
    6. '_save' → logprob: -8.381502151489258
    7. '_c' → logprob: -8.631502151489258
    8. '_n' → logprob: -8.631502151489258
    9. '_access' → logprob: -8.881502151489258
    10. '_import' → logprob: -9.006502151489258

Token 6: '(w' (ID: 7420)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03701626881957054
    2. '(' → logprob: -3.6620161533355713
    3. ' ' → logprob: -4.91201639175415
    4. ' (' → logprob: -6.66201639175415
    5. '_space' → logprob: -6.78701639175415
    6. ' _' → logprob: -7.91201639175415
    7. '(space' → logprob: -9.537015914916992
    8. ')' → logprob: -9.662015914916992
    9. '_(' → logprob: -9.787015914916992
    10. '<|end|>' → logprob: -10.162015914916992

Token 7: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9764437675476074
    2. 'i' → logprob: -1.3514437675476074
    3. 'h' → logprob: -2.2264437675476074
    4. '_' → logprob: -2.3514437675476074
    5. ')' → logprob: -2.8514437675476074
    6. 'e' → logprob: -3.6014437675476074
    7. ',' → logprob: -3.7264437675476074
    8. '):' → logprob: -4.226443767547607
    9. '_i' → logprob: -4.476443767547607
    10. ' )' → logprob: -5.351443767547607

Token 8: ' m' (ID: 284)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.05212791636586189
    2. 'h' → logprob: -3.0521278381347656
    3. ' i' → logprob: -6.552127838134766
    4. ' x' → logprob: -7.052127838134766
    5. 'i' → logprob: -8.052127838134766
    6. 'x' → logprob: -8.802127838134766
    7. ' c' → logprob: -8.802127838134766
    8. ' s' → logprob: -9.302127838134766
    9. ' p' → logprob: -9.427127838134766
    10. ',' → logprob: -9.802127838134766

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1819140613079071
    2. ')' → logprob: -2.8069140911102295
    3. 'a' → logprob: -3.0569140911102295
    4. '):' → logprob: -3.0569140911102295
    5. 'e' → logprob: -5.80691385269165
    6. 'u' → logprob: -5.93191385269165
    7. '[' → logprob: -6.80691385269165
    8. ' ' → logprob: -7.05691385269165
    9. ' ,' → logprob: -7.05691385269165
    10. 'atrix' → logprob: -7.68191385269165

Token 10: ' widths' (ID: 127335)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.8486337661743164
    2. 'h' → logprob: -0.9736337661743164
    3. ' n' → logprob: -2.5986337661743164
    4. 'n' → logprob: -3.4736337661743164
    5. ' p' → logprob: -4.598633766174316
    6. 'p' → logprob: -4.598633766174316
    7. ' ' → logprob: -4.848633766174316
    8. ' d' → logprob: -4.973633766174316
    9. ' l' → logprob: -5.098633766174316
    10. 'l' → logprob: -5.098633766174316

Token 11: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16681599617004395
    2. ',' → logprob: -1.916815996170044
    3. ')' → logprob: -5.166815757751465
    4. '[' → logprob: -7.541815757751465
    5. '):
' → logprob: -8.916815757751465
    6. ' ):' → logprob: -10.291815757751465
    7. ':' → logprob: -10.291815757751465
    8. 's' → logprob: -10.416815757751465
    9. ']:' → logprob: -11.416815757751465
    10. '```' → logprob: -11.416815757751465

Token 12: ' max' (ID: 2999)
  Prédit: ' heights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.7908231019973755
    2. ' i' → logprob: -2.290822982788086
    3. ' h' → logprob: -2.665822982788086
    4. 'h' → logprob: -3.040822982788086
    5. 'he' → logprob: -3.040822982788086
    6. 'i' → logprob: -3.040822982788086
    7. ' n' → logprob: -3.415822982788086
    8. 'n' → logprob: -3.915822982788086
    9. ' spaces' → logprob: -4.040822982788086
    10. ' idx' → logprob: -4.540822982788086

Token 13: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.005763826426118612
    2. '_' → logprob: -6.005764007568359
    3. '_w' → logprob: -6.630764007568359
    4. '_height' → logprob: -7.630764007568359
    5. '_row' → logprob: -8.00576400756836
    6. '_line' → logprob: -8.25576400756836
    7. '_len' → logprob: -8.63076400756836
    8. 'Width' → logprob: -9.13076400756836
    9. '_length' → logprob: -9.38076400756836
    10. ')' → logprob: -9.50576400756836

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008938353508710861
    2. ')' → logprob: -4.883938312530518
    3. ',' → logprob: -7.008938312530518
    4. '_' → logprob: -8.508938789367676
    5. '):
' → logprob: -9.258938789367676
    6. ' ):' → logprob: -9.883938789367676
    7. '=' → logprob: -10.883938789367676
    8. 's' → logprob: -11.008938789367676
    9. '):
' → logprob: -11.258938789367676
    10. '):

' → logprob: -11.633938789367676

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2220042496919632
    2. '   ' → logprob: -1.7220042943954468
    3. ' :' → logprob: -4.097004413604736
    4. '    ' → logprob: -6.347004413604736
    5. '):' → logprob: -8.097003936767578
    6. ' ' → logprob: -8.222003936767578
    7. ':
' → logprob: -8.347003936767578
    8. '```' → logprob: -9.097003936767578
    9. '    
' → logprob: -9.222003936767578
    10. ''' → logprob: -9.347003936767578

Token 16: ' count' (ID: 3605)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5276817083358765
    2. ' :' → logprob: -1.4026817083358765
    3. '   ' → logprob: -2.027681827545166
    4. '    ' → logprob: -4.152681827545166
    5. ' ' → logprob: -4.777681827545166
    6. ' :
' → logprob: -6.777681827545166
    7. ' if' → logprob: -7.027681827545166
    8. ' for' → logprob: -7.402681827545166
    9. ' return' → logprob: -7.527681827545166
    10. '):' → logprob: -7.527681827545166

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02433355525135994
    2. '=' → logprob: -3.7743334770202637
    3. '_' → logprob: -7.274333477020264
    4. ' +=' → logprob: -8.274333953857422
    5. ' ' → logprob: -9.649333953857422
    6. ',' → logprob: -10.399333953857422
    7. '_space' → logprob: -11.274333953857422
    8. ')' → logprob: -11.399333953857422
    9. 's' → logprob: -13.024333953857422
    10. '_spaces' → logprob: -13.024333953857422

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008726848289370537
    2. '1' → logprob: -4.758727073669434
    3. '0' → logprob: -9.133727073669434
    4. ' ' → logprob: -12.633727073669434
    5. ' w' → logprob: -15.758727073669434
    6. ' =' → logprob: -16.133726119995117
    7. '`' → logprob: -16.258726119995117
    8. '2' → logprob: -16.446226119995117
    9. 's' → logprob: -16.508726119995117
    10. 'w' → logprob: -16.821226119995117

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03216242417693138
    2. ' ' → logprob: -3.5321624279022217
    3. '0' → logprob: -6.032162189483643
    4. 'w' → logprob: -13.0321626663208
    5. 'm' → logprob: -13.1571626663208
    6. '2' → logprob: -13.8446626663208
    7. 'len' → logprob: -13.9696626663208
    8. '   ' → logprob: -14.5946626663208
    9. ' ' → logprob: -14.5946626663208
    10. '```' → logprob: -15.5946626663208

Token 20: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.060847520828247
    2. '<|end|>' → logprob: -1.310847520828247
    3. '
' → logprob: -1.935847520828247
    4. ' ' → logprob: -2.560847520828247
    5. ' 
' → logprob: -2.810847520828247
    6. '<|end|>' → logprob: -3.685847520828247
    7. '    
' → logprob: -4.060847282409668
    8. '  
' → logprob: -4.060847282409668
    9. ',' → logprob: -5.060847282409668
    10. ' for' → logprob: -5.060847282409668

Token 21: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3801696300506592
    2. ' if' → logprob: -1.3801696300506592
    3. '<|end|>' → logprob: -1.7551696300506592
    4. '   ' → logprob: -2.630169630050659
    5. ' 
' → logprob: -2.630169630050659
    6. '<|end|>' → logprob: -3.630169630050659
    7. '```' → logprob: -3.880169630050659
    8. '
' → logprob: -3.880169630050659
    9. ' =' → logprob: -4.505169868469238
    10. '    
' → logprob: -4.505169868469238

Token 22: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.20375847816467285
    2. 'current' (adapté à ' current') → logprob: -1.7037584781646729
    3. ' curr' → logprob: -7.078758239746094
    4. 'curr' → logprob: -8.078758239746094
    5. 'total' → logprob: -8.578758239746094
    6. 'acc' → logprob: -8.703758239746094
    7. ' total' → logprob: -8.703758239746094
    8. ' accumulated' → logprob: -9.203758239746094
    9. ' cur' → logprob: -9.328758239746094
    10. '+' → logprob: -9.703758239746094

Token 23: '_sum' (ID: 29859)
  Prédit: '_width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.030389709398150444
    2. '_' → logprob: -3.6553897857666016
    3. ' _' → logprob: -6.655389785766602
    4. '_length' → logprob: -6.905389785766602
    5. '_line' → logprob: -7.030389785766602
    6. '_w' → logprob: -7.155389785766602
    7. '_space' → logprob: -9.405389785766602
    8. '_len' → logprob: -11.030389785766602
    9. '_sum' → logprob: -11.905389785766602
    10. '_row' → logprob: -12.530389785766602

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12487936019897461
    2. ' +=' → logprob: -2.2498793601989746
    3. '=' → logprob: -4.624879360198975
    4. ' ' → logprob: -6.499879360198975
    5. '<|end|>' → logprob: -8.374879837036133
    6. '+=' → logprob: -8.874879837036133
    7. '_' → logprob: -8.999879837036133
    8. ' +' → logprob: -10.124879837036133
    9. ')' → logprob: -10.874879837036133
    10. ' |=' → logprob: -11.124879837036133

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6438618302345276
    2. '0' → logprob: -0.7688618302345276
    3. ' widths' → logprob: -4.643861770629883
    4. 'width' → logprob: -6.768861770629883
    5. ' w' → logprob: -8.518861770629883
    6. ' width' → logprob: -9.268861770629883
    7. 'w' → logprob: -9.268861770629883
    8. ' ' → logprob: -10.893861770629883
    9. 'Widths' → logprob: -12.518861770629883
    10. '   ' → logprob: -13.206361770629883

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021441932767629623
    2. ' ' → logprob: -6.2521443367004395
    3. 'w' → logprob: -9.127143859863281
    4. 'width' → logprob: -9.252143859863281
    5. ' widths' → logprob: -12.252143859863281
    6. ' w' → logprob: -13.127143859863281
    7. '   ' → logprob: -14.814643859863281
    8. ' width' → logprob: -15.127143859863281
    9. '-' → logprob: -15.189643859863281
    10. ')' → logprob: -15.252143859863281

Token 27: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12796947360038757
    2. '   ' → logprob: -3.12796950340271
    3. '<|end|>' → logprob: -3.50296950340271
    4. ' ' → logprob: -3.87796950340271
    5. 'for' → logprob: -4.127969264984131
    6. ' 
' → logprob: -5.627969264984131
    7. '    ' → logprob: -6.502969264984131
    8. '<|end|>' → logprob: -6.627969264984131
    9. '	for' → logprob: -7.127969264984131
    10. '  ' → logprob: -7.627969264984131

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09337664395570755
    2. 'for' (adapté à ' for') → logprob: -3.093376636505127
    3. '<|end|>' → logprob: -3.593376636505127
    4. ' ' → logprob: -4.218376636505127
    5. '<|end|>' → logprob: -7.218376636505127
    6. '	for' → logprob: -8.218377113342285
    7. '   ' → logprob: -8.718377113342285
    8. ' 
' → logprob: -8.718377113342285
    9. ' ' → logprob: -8.968377113342285
    10. '  ' → logprob: -10.218377113342285

Token 30: ' width' (ID: 4345)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0543910264968872
    2. ' width' → logprob: -1.4293910264968872
    3. ' w' → logprob: -1.5543910264968872
    4. 'width' → logprob: -1.6793910264968872
    5. 'i' → logprob: -4.929390907287598
    6. ' i' → logprob: -5.054390907287598
    7. ' ' → logprob: -8.679390907287598
    8. 'x' → logprob: -8.929390907287598
    9. '   ' → logprob: -10.241890907287598
    10. '```' → logprob: -10.429390907287598

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04351747781038284
    2. 'in' → logprob: -3.168517589569092
    3. ',' → logprob: -8.418517112731934
    4. 's' → logprob: -8.918517112731934
    5. ' ' → logprob: -9.543517112731934
    6. ' ,' → logprob: -10.418517112731934
    7. '	in' → logprob: -11.418517112731934
    8. '_in' → logprob: -11.543517112731934
    9. '  ' → logprob: -11.793517112731934
    10. '   ' → logprob: -12.606017112731934

Token 32: ' widths' (ID: 127335)
  Prédit: ' widths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' widths' → logprob: -0.10057314485311508
    2. 'width' → logprob: -2.3505730628967285
    3. ' width' → logprob: -7.9755730628967285
    4. 'Widths' → logprob: -12.100573539733887
    5. 'w' → logprob: -12.725573539733887
    6. '-width' → logprob: -12.975573539733887
    7. ',width' → logprob: -13.225573539733887
    8. '(width' → logprob: -13.350573539733887
    9. ' ' → logprob: -13.350573539733887
    10. ' ' → logprob: -13.725573539733887

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004156756680458784
    2. '       ' → logprob: -6.254156589508057
    3. ':
' → logprob: -6.379156589508057
    4. '   ' → logprob: -8.129157066345215
    5. ' :' → logprob: -9.504157066345215
    6. '=' → logprob: -10.254157066345215
    7. '):' → logprob: -10.254157066345215
    8. ',' → logprob: -11.129157066345215
    9. '+' → logprob: -11.254157066345215
    10. '):
' → logprob: -11.504157066345215

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05198181793093681
    2. ':' → logprob: -3.6769819259643555
    3. ' if' → logprob: -4.6769819259643555
    4. '<|end|>' → logprob: -5.1769819259643555
    5. '+' → logprob: -5.6769819259643555
    6. ' +' → logprob: -6.4269819259643555
    7. '        ' → logprob: -6.9269819259643555
    8. ' ' → logprob: -6.9269819259643555
    9. ' :' → logprob: -7.4269819259643555
    10. '        
' → logprob: -7.4269819259643555

Token 35: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49014729261398315
    2. ' if' → logprob: -1.365147352218628
    3. '        ' → logprob: -2.615147352218628
    4. ' 
' → logprob: -3.490147352218628
    5. 'if' (adapté à ' if') → logprob: -4.865147113800049
    6. '<|end|>' → logprob: -5.115147113800049
    7. '        
' → logprob: -6.365147113800049
    8. '       ' → logprob: -6.615147113800049
    9. '<|end|>' → logprob: -6.865147113800049
    10. '    ' → logprob: -6.990147113800049

Token 36: ' width' (ID: 4345)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.025104042142629623
    2. ' width' → logprob: -4.02510404586792
    3. 'current' → logprob: -5.02510404586792
    4. 'width' → logprob: -8.025103569030762
    5. ' ' → logprob: -11.400103569030762
    6. '(current' → logprob: -12.275103569030762
    7. ' ' → logprob: -12.400103569030762
    8. ' widths' → logprob: -13.275103569030762
    9. 'w' → logprob: -13.400103569030762
    10. '(width' → logprob: -13.650103569030762

Token 37: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05849539861083031
    2. ' +' → logprob: -3.183495283126831
    3. '>' → logprob: -4.80849552154541
    4. '+' → logprob: -5.43349552154541
    5. ' <=' → logprob: -6.18349552154541
    6. ' ' → logprob: -7.18349552154541
    7. '<=' → logprob: -11.30849552154541
    8. ' ' → logprob: -12.05849552154541
    9. ' plus' → logprob: -13.43349552154541
    10. '  ' → logprob: -13.80849552154541

Token 38: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20141734182834625
    2. ' max' → logprob: -1.701417326927185
    3. 'm' → logprob: -13.326416969299316
    4. '	max' → logprob: -13.951416969299316
    5. '(max' → logprob: -14.576416969299316
    6. '=max' → logprob: -14.826416969299316
    7. ' ' → logprob: -14.826416969299316
    8. '[max' → logprob: -16.076417922973633
    9. '0' → logprob: -16.701417922973633
    10. '_max' → logprob: -16.701417922973633

Token 39: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -8.97155623533763e-05
    2. '_' → logprob: -10.000089645385742
    3. ' _' → logprob: -10.625089645385742
    4. '_w' → logprob: -11.125089645385742
    5. '```' → logprob: -13.250089645385742
    6. '_line' → logprob: -14.875089645385742
    7. 'width' → logprob: -15.000089645385742
    8. ')_' → logprob: -15.000089645385742
    9. '_length' → logprob: -15.375089645385742
    10. '_space' → logprob: -15.625089645385742

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03692101687192917
    2. ' :' → logprob: -3.9119210243225098
    3. ':return' → logprob: -4.28692102432251
    4. ' or' → logprob: -6.28692102432251
    5. ':
' → logprob: -7.78692102432251
    6. ' ' → logprob: -9.911920547485352
    7. ' return' → logprob: -10.036920547485352
    8. ' :
' → logprob: -10.411920547485352
    9. ' and' → logprob: -10.786920547485352
    10. '<|end|>' → logprob: -11.161920547485352

Token 41: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.3090736865997314
    2. ':return' → logprob: -1.4340736865997314
    3. ':' → logprob: -1.9340736865997314
    4. '       ' → logprob: -2.3090736865997314
    5. '           ' → logprob: -2.4340736865997314
    6. ' ' → logprob: -2.5590736865997314
    7. ' :' → logprob: -3.3090736865997314
    8. 'return' → logprob: -4.559073448181152
    9. ':
' → logprob: -4.684073448181152
    10. ' :
' → logprob: -5.059073448181152

Token 42: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20196180045604706
    2. 'return' (adapté à ' return') → logprob: -1.7019617557525635
    3. '           ' → logprob: -8.076961517333984
    4. '       ' → logprob: -8.826961517333984
    5. ':return' → logprob: -10.201961517333984
    6. '               ' → logprob: -11.076961517333984
    7. ' 
' → logprob: -11.951961517333984
    8. '	return' → logprob: -12.076961517333984
    9. '   ' → logprob: -12.076961517333984
    10. '```' → logprob: -12.201961517333984

Token 43: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011053125374019146
    2. ' False' → logprob: -4.511053085327148
    3. 'None' → logprob: -12.261053085327148
    4. 'True' → logprob: -15.386053085327148
    5. ' ' → logprob: -16.13605308532715
    6. 'float' → logprob: -16.26105308532715
    7. ' None' → logprob: -16.63605308532715
    8. '-' → logprob: -17.38605308532715
    9. 'false' → logprob: -17.51105308532715
    10. '0' → logprob: -17.76105308532715

Token 44: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3075427711009979
    2. '        
' → logprob: -1.9325428009033203
    3. ' 
' → logprob: -3.0575428009033203
    4. '<|end|>' → logprob: -3.1825428009033203
    5. ' ' → logprob: -4.55754280090332
    6. '
' → logprob: -5.30754280090332
    7. '        ' → logprob: -5.55754280090332
    8. '  
' → logprob: -5.93254280090332
    9. ',' → logprob: -6.18254280090332
    10. '    
' → logprob: -6.80754280090332

Token 45: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.47190144658088684
    2. '       ' → logprob: -1.9719014167785645
    3. '        
' → logprob: -2.2219014167785645
    4. '<|end|>' → logprob: -2.2219014167785645
    5. '  
' → logprob: -5.2219014167785645
    6. '    
' → logprob: -5.9719014167785645
    7. '
' → logprob: -6.0969014167785645
    8. ' ' → logprob: -6.2219014167785645
    9. '   
' → logprob: -6.7219014167785645
    10. '```' → logprob: -7.3469014167785645

Token 46: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0561463832855225
    2. '<|end|>' → logprob: -1.1811463832855225
    3. ' 
' → logprob: -1.9311463832855225
    4. '       ' → logprob: -2.8061463832855225
    5. ' if' → logprob: -3.0561463832855225
    6. '        
' → logprob: -3.0561463832855225
    7. '        ' → logprob: -4.806146621704102
    8. '  
' → logprob: -4.806146621704102
    9. 'if' (adapté à ' if') → logprob: -5.056146621704102
    10. '    
' → logprob: -5.806146621704102

Token 47: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.038042984902858734
    2. 'current' → logprob: -3.2880430221557617
    3. '(current' → logprob: -14.663043022155762
    4. ' ' → logprob: -15.538043022155762
    5. ' ' → logprob: -15.788043022155762
    6. '	current' → logprob: -15.788043022155762
    7. '   ' → logprob: -15.913043022155762
    8. '$current' → logprob: -16.038042068481445
    9. '[current' → logprob: -16.163042068481445
    10. '=current' → logprob: -16.538042068481445

Token 48: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0015085549093782902
    2. '_' → logprob: -7.001508712768555
    3. ' _' → logprob: -7.501508712768555
    4. '_width' → logprob: -11.126508712768555
    5. '+' → logprob: -11.626508712768555
    6. ' +' → logprob: -11.876508712768555
    7. '_s' → logprob: -11.876508712768555
    8. '_add' → logprob: -13.501508712768555
    9. ' ' → logprob: -14.251508712768555
    10. '_plus' → logprob: -14.251508712768555

Token 49: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07890686392784119
    2. '+' → logprob: -2.578906774520874
    3. ' plus' → logprob: -11.578907012939453
    4. '<|end|>' → logprob: -13.203907012939453
    5. ' ' → logprob: -13.578907012939453
    6. ' ' → logprob: -13.953907012939453
    7. '<|end|>' → logprob: -14.328907012939453
    8. '+w' → logprob: -14.453907012939453
    9. '>' → logprob: -14.703907012939453
    10. '+xml' → logprob: -15.078907012939453

Token 50: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.5231578946113586
    2. ' width' → logprob: -0.8981578946113586
    3. '	width' → logprob: -11.148158073425293
    4. '(width' → logprob: -11.773158073425293
    5. ' ' → logprob: -12.398158073425293
    6. ';width' → logprob: -13.148158073425293
    7. 'w' → logprob: -13.648158073425293
    8. ',width' → logprob: -13.773158073425293
    9. ' widths' → logprob: -14.148158073425293
    10. '.width' → logprob: -14.273158073425293

Token 51: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.17029713094234467
    2. ' >' → logprob: -1.9202971458435059
    3. '<=' → logprob: -5.045297145843506
    4. '>' → logprob: -5.670297145843506
    5. ' ' → logprob: -9.420296669006348
    6. '<|end|>' → logprob: -10.670296669006348
    7. ' ≤' → logprob: -12.420296669006348
    8. ' ' → logprob: -12.420296669006348
    9. '+' → logprob: -12.545296669006348
    10. '<|end|>' → logprob: -12.795296669006348

Token 52: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1269315630197525
    2. 'max' → logprob: -2.126931667327881
    3. '	max' → logprob: -13.751931190490723
    4. '[max' → logprob: -14.501931190490723
    5. ' ' → logprob: -14.751931190490723
    6. '(max' → logprob: -14.751931190490723
    7. ' ' → logprob: -14.876931190490723
    8. 'm' → logprob: -15.376931190490723
    9. '=max' → logprob: -15.751931190490723
    10. '_max' → logprob: -15.751931190490723

Token 53: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.00000286102295
    3. '_w' → logprob: -14.37500286102295
    4. 'width' → logprob: -15.37500286102295
    5. ' _' → logprob: -16.125003814697266
    6. '_WIDTH' → logprob: -16.875003814697266
    7. '_

' → logprob: -18.250003814697266
    8. '_
' → logprob: -18.500003814697266
    9. '```' → logprob: -18.750003814697266
    10. '_max' → logprob: -18.875003814697266

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007636327762156725
    2. ':
' → logprob: -4.882636547088623
    3. '       ' → logprob: -11.507636070251465
    4. ',' → logprob: -12.507636070251465
    5. ':

' → logprob: -12.507636070251465
    6. '           ' → logprob: -12.882636070251465
    7. '<|end|>' → logprob: -12.882636070251465
    8. ':
' → logprob: -13.257636070251465
    9. '<|end|>' → logprob: -13.382636070251465
    10. ' :' → logprob: -13.382636070251465

Token 55: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17976024746894836
    2. ':
' → logprob: -2.304760217666626
    3. '           ' → logprob: -3.054760217666626
    4. '       ' → logprob: -4.554760456085205
    5. '<|end|>' → logprob: -5.929760456085205
    6. ' :' → logprob: -7.179760456085205
    7. '<|end|>' → logprob: -7.429760456085205
    8. '```' → logprob: -7.554760456085205
    9. ' :
' → logprob: -7.804760456085205
    10. ',' → logprob: -8.554759979248047

Token 56: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.20267361402511597
    2. 'current' (adapté à ' current') → logprob: -1.7026736736297607
    3. '               ' → logprob: -7.827673435211182
    4. '           ' → logprob: -7.952673435211182
    5. ' ' → logprob: -8.82767391204834
    6. '            ' → logprob: -9.07767391204834
    7. ' ' → logprob: -9.07767391204834
    8. '[current' → logprob: -10.57767391204834
    9. '                ' → logprob: -10.82767391204834
    10. '_current' → logprob: -11.32767391204834

Token 57: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.007980403490364552
    2. '_' → logprob: -4.8829803466796875
    3. ' _' → logprob: -8.257980346679688
    4. '_s' → logprob: -9.257980346679688
    5. '```' → logprob: -12.507980346679688
    6. '_width' → logprob: -13.007980346679688
    7. ''_' → logprob: -13.257980346679688
    8. 'sum' → logprob: -14.132980346679688
    9. '_place' → logprob: -14.132980346679688
    10. ' `_' → logprob: -14.132980346679688

Token 58: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.057248957455158234
    2. ' +' → logprob: -3.057249069213867
    3. '+' → logprob: -4.932249069213867
    4. '+=' → logprob: -7.057249069213867
    5. '<|end|>' → logprob: -7.807249069213867
    6. ' ' → logprob: -9.057249069213867
    7. ' ' → logprob: -11.682249069213867
    8. ' =' → logprob: -11.807249069213867
    9. '<|end|>' → logprob: -12.307249069213867
    10. ' +#+' → logprob: -13.307249069213867

Token 59: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.0019288709154352546
    2. 'width' → logprob: -6.251928806304932
    3. '	width' → logprob: -16.376928329467773
    4. ' ' → logprob: -16.501928329467773
    5. '(width' → logprob: -17.626928329467773
    6. ' widths' → logprob: -18.251928329467773
    7. ',width' → logprob: -18.751928329467773
    8. ';width' → logprob: -19.001928329467773
    9. ' ' → logprob: -19.626928329467773
    10. '.width' → logprob: -21.376928329467773

Token 60: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21587014198303223
    2. 'else' → logprob: -2.2158701419830322
    3. ' else' → logprob: -2.4658701419830322
    4. '   ' → logprob: -10.340869903564453
    5. '<|end|>' → logprob: -10.340869903564453
    6. '
' → logprob: -10.465869903564453
    7. '	else' → logprob: -10.840869903564453
    8. ' 
' → logprob: -11.090869903564453
    9. '```' → logprob: -12.465869903564453
    10. '        
' → logprob: -12.590869903564453

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062142904847860336
    2. ' else' → logprob: -2.937142848968506
    3. 'else' → logprob: -4.937142848968506
    4. '<|end|>' → logprob: -10.312143325805664
    5. '   ' → logprob: -11.687143325805664
    6. '	else' → logprob: -12.062143325805664
    7. '```' → logprob: -12.812143325805664
    8. '
' → logprob: -12.937143325805664
    9. '<|end|>' → logprob: -13.937143325805664
    10. '      ' → logprob: -14.312143325805664

Token 62: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06274250894784927
    2. 'else' (adapté à ' else') → logprob: -2.8127424716949463
    3. '       ' → logprob: -7.187742710113525
    4. '	else' → logprob: -11.562742233276367
    5. '   ' → logprob: -11.687742233276367
    6. ' elif' → logprob: -15.312742233276367
    7. '    ' → logprob: -15.312742233276367
    8. '
' → logprob: -16.312742233276367
    9. '_else' → logprob: -16.437742233276367
    10. '  ' → logprob: -16.562742233276367

Token 63: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.202059805393219
    2. ':' → logprob: -1.7020597457885742
    3. '           ' → logprob: -8.452059745788574
    4. '
' → logprob: -8.952059745788574
    5. '       ' → logprob: -9.827059745788574
    6. ':
' → logprob: -9.952059745788574
    7. '):
' → logprob: -9.952059745788574
    8. '```' → logprob: -10.202059745788574
    9. '<|end|>' → logprob: -10.202059745788574
    10. ':

' → logprob: -10.702059745788574

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00879928283393383
    2. '
' → logprob: -5.258799076080322
    3. 'count' → logprob: -6.008799076080322
    4. '       ' → logprob: -7.508799076080322
    5. ' count' → logprob: -8.38379955291748
    6. '   ' → logprob: -9.50879955291748
    7. '            
' → logprob: -9.75879955291748
    8. '        
' → logprob: -10.38379955291748
    9. '```' → logprob: -10.38379955291748
    10. ' 
' → logprob: -10.50879955291748

Token 65: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.4811519682407379
    2. 'count' (adapté à ' count') → logprob: -0.9811519384384155
    3. '
' → logprob: -5.106152057647705
    4. '           ' → logprob: -7.606152057647705
    5. '       ' → logprob: -8.981151580810547
    6. ' 
' → logprob: -8.981151580810547
    7. '
' → logprob: -10.106151580810547
    8. '\n' → logprob: -10.231151580810547
    9. '   ' → logprob: -10.356151580810547
    10. 'newline' → logprob: -10.356151580810547

Token 66: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -2.3199920178740285e-05
    2. '+=' → logprob: -10.750022888183594
    3. ' +' → logprob: -14.125022888183594
    4. ' ' → logprob: -14.250022888183594
    5. ' =' → logprob: -15.500022888183594
    6. '+' → logprob: -16.875022888183594
    7. '<|end|>' → logprob: -18.250022888183594
    8. ' -=' → logprob: -18.500022888183594
    9. ' ' → logprob: -18.750022888183594
    10. ' |=' → logprob: -19.125022888183594

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. ' ' → logprob: -18.880233764648438
    4. '   ' → logprob: -19.755233764648438
    5. '```' → logprob: -20.005233764648438
    6. '<|end|>' → logprob: -20.255233764648438
    7. '  ' → logprob: -21.630233764648438
    8. '۱' → logprob: -22.192733764648438
    9. '0' → logprob: -22.317733764648438
    10. 's' → logprob: -22.380233764648438

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -22.625
    4. '   ' → logprob: -23.375
    5. '۱' → logprob: -24.0
    6. '-' → logprob: -24.125
    7. '１' → logprob: -24.25
    8. '2' → logprob: -24.5625
    9. '  ' → logprob: -25.0625
    10. ' ' → logprob: -25.3125

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41258278489112854
    2. ' 
' → logprob: -1.2875827550888062
    3. '           ' → logprob: -3.7875828742980957
    4. '<|end|>' → logprob: -4.162582874298096
    5. '  
' → logprob: -4.787582874298096
    6. 'current' → logprob: -5.162582874298096
    7. ' current' → logprob: -5.662582874298096
    8. '            
' → logprob: -6.162582874298096
    9. '\n' → logprob: -7.162582874298096
    10. '```' → logprob: -7.287582874298096

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019989803433418274
    2. ' 
' → logprob: -4.144989967346191
    3. '            
' → logprob: -6.644989967346191
    4. ' current' → logprob: -7.144989967346191
    5. '<|end|>' → logprob: -8.019989967346191
    6. '       ' → logprob: -8.144989967346191
    7. '```' → logprob: -8.394989967346191
    8. ' ' → logprob: -8.519989967346191
    9. 'current' → logprob: -8.894989967346191
    10. '  
' → logprob: -9.144989967346191

Token 71: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -2.7133641196996905e-05
    2. ' current' → logprob: -10.62502670288086
    3. '           ' → logprob: -12.87502670288086
    4. '
' → logprob: -16.75002670288086
    5. '```' → logprob: -16.87502670288086
    6. 'Current' → logprob: -18.00002670288086
    7. '	current' → logprob: -18.12502670288086
    8. '   ' → logprob: -18.62502670288086
    9. '_current' → logprob: -18.62502670288086
    10. '            
' → logprob: -18.62502670288086

Token 72: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00040004486800171435
    2. '_' → logprob: -7.875400066375732
    3. ' _' → logprob: -11.500399589538574
    4. '_s' → logprob: -11.875399589538574
    5. 'sum' → logprob: -13.625399589538574
    6. '=_' → logprob: -15.125399589538574
    7. '__' → logprob: -15.625399589538574
    8. '_width' → logprob: -16.00040054321289
    9. '=' → logprob: -16.12540054321289
    10. ')_' → logprob: -16.37540054321289

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687169551849365
    2. '=' → logprob: -1.1368716955184937
    3. ' ' → logprob: -15.011871337890625
    4. '<|end|>' → logprob: -15.261871337890625
    5. ' =
' → logprob: -17.511871337890625
    6. '=
' → logprob: -17.511871337890625
    7. '＝' → logprob: -17.636871337890625
    8. '=line' → logprob: -17.761871337890625
    9. '=int' → logprob: -18.011871337890625
    10. '=w' → logprob: -18.386871337890625

Token 74: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.061967797577381134
    2. ' width' → logprob: -2.8119678497314453
    3. '	width' → logprob: -15.811967849731445
    4. 'wide' → logprob: -18.061967849731445
    5. '(width' → logprob: -18.186967849731445
    6. ',width' → logprob: -18.311967849731445
    7. ';width' → logprob: -18.561967849731445
    8. ' ' → logprob: -19.061967849731445
    9. '.width' → logprob: -20.061967849731445
    10. '_width' → logprob: -20.186967849731445

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021588925272226334
    2. '       ' → logprob: -4.3965888023376465
    3. '<|end|>' → logprob: -5.6465888023376465
    4. '
' → logprob: -6.2715888023376465
    5. '    
' → logprob: -7.2715888023376465
    6. ' return' → logprob: -7.5215888023376465
    7. '  
' → logprob: -7.7715888023376465
    8. ' if' → logprob: -7.7715888023376465
    9. ' 
' → logprob: -8.271589279174805
    10. '           ' → logprob: -8.646589279174805

Token 76: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010035837069153786
    2. '       ' → logprob: -4.885035991668701
    3. ' return' → logprob: -6.510035991668701
    4. ' if' → logprob: -7.885035991668701
    5. 'return' → logprob: -8.260035514831543
    6. '           ' → logprob: -9.760035514831543
    7. '	return' → logprob: -9.885035514831543
    8. '    
' → logprob: -10.260035514831543
    9. '```' → logprob: -10.260035514831543
    10. ' ' → logprob: -10.760035514831543

Token 77: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1272045373916626
    2. ' if' → logprob: -2.127204418182373
    3. '   ' → logprob: -9.002204895019531
    4. 'return' → logprob: -9.252204895019531
    5. '           ' → logprob: -10.127204895019531
    6. '       ' → logprob: -11.627204895019531
    7. ' return' → logprob: -11.877204895019531
    8. '```' → logprob: -14.002204895019531
    9. '	if' → logprob: -15.127204895019531
    10. ' ' → logprob: -15.127204895019531

Token 78: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03804149478673935
    2. ' count' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.788042068481445
    4. '	count' → logprob: -18.538042068481445
    5. '   ' → logprob: -19.788042068481445
    6. '(count' → logprob: -21.038042068481445
    7. '$count' → logprob: -21.163042068481445
    8. '[count' → logprob: -21.913042068481445
    9. '  ' → logprob: -22.163042068481445
    10. 'counts' → logprob: -22.538042068481445

Token 79: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.020546913146972656
    2. '>' → logprob: -3.8955469131469727
    3. ' ' → logprob: -13.270546913146973
    4. ' ' → logprob: -13.645546913146973
    5. '>end' → logprob: -14.520546913146973
    6. '<|end|>' → logprob: -14.645546913146973
    7. '">' → logprob: -15.520546913146973
    8. '<|end|>' → logprob: -15.895546913146973
    9. ' >
' → logprob: -16.020545959472656
    10. '>w' → logprob: -16.270545959472656

Token 80: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2911425530910492
    2. ' m' → logprob: -1.4161425828933716
    3. 'w' → logprob: -5.041142463684082
    4. ' w' → logprob: -5.666142463684082
    5. ' ' → logprob: -11.541142463684082
    6. '   ' → logprob: -13.041142463684082
    7. '	m' → logprob: -13.416142463684082
    8. ' ' → logprob: -14.166142463684082
    9. '  ' → logprob: -15.728642463684082
    10. '```' → logprob: -15.728642463684082

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005799620877951384
    2. ':return' → logprob: -5.380799770355225
    3. ':
' → logprob: -6.755799770355225
    4. ' :' → logprob: -12.005799293518066
    5. '):' → logprob: -12.880799293518066
    6. ':
' → logprob: -13.130799293518066
    7. ':

' → logprob: -13.630799293518066
    8. '<|end|>' → logprob: -14.005799293518066
    9. 'return' → logprob: -14.755799293518066
    10. '):
' → logprob: -14.880799293518066

Token 82: '               ' (ID: 506)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04548802971839905
    2. 'return' → logprob: -3.295488119125366
    3. '               ' → logprob: -5.545487880706787
    4. '           ' → logprob: -5.670487880706787
    5. '       ' → logprob: -10.795488357543945
    6. ':return' → logprob: -11.045488357543945
    7. '   ' → logprob: -11.670488357543945
    8. ' ' → logprob: -12.295488357543945
    9. ' False' → logprob: -12.295488357543945
    10. '	return' → logprob: -12.420488357543945

Token 83: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2028372436761856
    2. 'return' (adapté à ' return') → logprob: -1.7028372287750244
    3. '               ' → logprob: -6.5778374671936035
    4. '                   ' → logprob: -10.827836990356445
    5. '           ' → logprob: -12.077836990356445
    6. ':return' → logprob: -12.952836990356445
    7. '```' → logprob: -13.452836990356445
    8. '	return' → logprob: -14.452836990356445
    9. '{return' → logprob: -14.577836990356445
    10. '   ' → logprob: -14.702836990356445

Token 84: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02324547804892063
    2. ' False' → logprob: -3.7732455730438232
    3. 'True' → logprob: -17.898244857788086
    4. '(False' → logprob: -19.648244857788086
    5. ' True' → logprob: -21.273244857788086
    6. '=False' → logprob: -21.898244857788086
    7. 'None' → logprob: -23.148244857788086
    8. '_false' → logprob: -23.648244857788086
    9. '```' → logprob: -24.273244857788086
    10. ' ' → logprob: -24.648244857788086

Token 85: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00067966926144436
    2. '
' → logprob: -7.6256794929504395
    3. 'return' → logprob: -9.000679969787598
    4. ' return' → logprob: -10.750679969787598
    5. '    
' → logprob: -11.000679969787598
    6. '```' → logprob: -11.500679969787598
    7. '       ' → logprob: -11.750679969787598
    8. '	return' → logprob: -11.875679969787598
    9. 'True' → logprob: -13.000679969787598
    10. '
' → logprob: -14.125679969787598

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037466554204002023
    2. 'return' → logprob: -8.250374794006348
    3. ' return' → logprob: -9.625374794006348
    4. '
' → logprob: -10.625374794006348
    5. '       ' → logprob: -11.375374794006348
    6. '```' → logprob: -12.125374794006348
    7. '	return' → logprob: -13.000374794006348
    8. 'True' → logprob: -13.125374794006348
    9. '    
' → logprob: -13.875374794006348
    10. '           ' → logprob: -16.00037384033203

Token 87: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16052590310573578
    2. 'return' (adapté à ' return') → logprob: -1.910525918006897
    3. ' return' → logprob: -8.410526275634766
    4. '	return' → logprob: -10.535526275634766
    5. '```' → logprob: -10.535526275634766
    6. '       ' → logprob: -11.535526275634766
    7. '    
' → logprob: -12.160526275634766
    8. '
' → logprob: -12.160526275634766
    9. 'True' → logprob: -13.410526275634766
    10. 'eturn' → logprob: -13.660526275634766

Token 88: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.10020667314529419
    2. 'True' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.60020637512207
    4. '(True' → logprob: -18.47520637512207
    5. '   ' → logprob: -20.22520637512207
    6. '=True' → logprob: -20.35020637512207
    7. ' Tru' → logprob: -20.35020637512207
    8. ' ' → logprob: -20.85020637512207
    9. ' true' → logprob: -22.10020637512207
    10. 'False' → logprob: -22.22520637512207

Token 89: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.42527326941490173
    2. '
' → logprob: -1.5502732992172241
    3. 'def' → logprob: -2.0502731800079346
    4. '<|end|>' → logprob: -5.925273418426514
    5. '```' → logprob: -7.050273418426514
    6. ' 

' → logprob: -7.800273418426514
    7. '' → logprob: -8.550272941589355
    8. '


' → logprob: -8.550272941589355
    9. '
' → logprob: -8.675272941589355
    10. '\n' → logprob: -8.925272941589355

Token 90: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009402931667864323
    2. '

' → logprob: -5.134402751922607
    3. '
' → logprob: -6.634402751922607
    4. '\' → logprob: -7.009402751922607
    5. '```' → logprob: -7.009402751922607
    6. '\n' → logprob: -9.259403228759766
    7. '_

' → logprob: -10.384403228759766
    8. ' 

' → logprob: -10.509403228759766
    9. 'n' → logprob: -10.509403228759766
    10. ' def' → logprob: -10.634403228759766

Token 91: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06930030882358551
    2. ' w' → logprob: -3.319300413131714
    3. ' _' → logprob: -3.819300413131714
    4. ' ' → logprob: -5.819300174713135
    5. ' m' → logprob: -6.069300174713135
    6. ' line' → logprob: -6.944300174713135
    7. 'i' → logprob: -7.444300174713135
    8. ' width' → logprob: -7.444300174713135
    9. ' space' → logprob: -7.569300174713135
    10. 'w' → logprob: -8.069300651550293

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0034161745570600033
    2. 'in' → logprob: -5.753416061401367
    3. ' ' → logprob: -9.003416061401367
    4. 's' → logprob: -9.753416061401367
    5. '[' → logprob: -11.128416061401367
    6. ' i' → logprob: -11.628416061401367
    7. '_' → logprob: -12.128416061401367
    8. '  ' → logprob: -12.378416061401367
    9. '[line' → logprob: -13.065916061401367
    10. '(' → logprob: -13.190916061401367

Token 93: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4740849733352661
    2. ' sys' → logprob: -0.9740849733352661
    3. '	sys' → logprob: -12.599084854125977
    4. '=sys' → logprob: -12.599084854125977
    5. '(sys' → logprob: -13.724084854125977
    6. 'stdin' → logprob: -17.474084854125977
    7. '```' → logprob: -17.724084854125977
    8. 's' → logprob: -17.974084854125977
    9. ' ' → logprob: -17.974084854125977
    10. 'iter' → logprob: -18.474084854125977

Token 94: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00010354319238103926
    2. '.' → logprob: -10.000103950500488
    3. '.argv' → logprob: -10.250103950500488
    4. 'stdin' → logprob: -10.875103950500488
    5. '.stdout' → logprob: -13.750103950500488
    6. '.readline' → logprob: -14.000103950500488
    7. ' stdin' → logprob: -14.375103950500488
    8. ' .' → logprob: -14.750103950500488
    9. '(stdin' → logprob: -15.250103950500488
    10. '.std' → logprob: -15.750103950500488

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01237320713698864
    2. '.readline' → logprob: -4.512372970581055
    3. '.readlines' → logprob: -7.387372970581055
    4. '.strip' → logprob: -7.887372970581055
    5. ' :' → logprob: -9.137372970581055
    6. '.' → logprob: -9.637372970581055
    7. ':
' → logprob: -9.887372970581055
    8. '.split' → logprob: -10.637372970581055
    9. '.rstrip' → logprob: -11.012372970581055
    10. 's' → logprob: -11.262372970581055

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003722884226590395
    2. ' line' → logprob: -7.378722667694092
    3. ' n' → logprob: -7.753722667694092
    4. '    
' → logprob: -8.00372314453125
    5. ' tokens' → logprob: -8.12872314453125
    6. ' w' → logprob: -8.25372314453125
    7. ' if' → logprob: -8.37872314453125
    8. ' parts' → logprob: -8.62872314453125
    9. 'tokens' → logprob: -8.62872314453125
    10. ' widths' → logprob: -8.75372314453125

Token 97: ' if' (ID: 538)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.49642419815063477
    2. ' line' → logprob: -1.6214241981506348
    3. ' if' → logprob: -3.3714241981506348
    4. '   ' → logprob: -3.4964241981506348
    5. ' parts' → logprob: -3.6214241981506348
    6. ' input' → logprob: -3.8714241981506348
    7. ' data' → logprob: -3.9964241981506348
    8. ' m' → logprob: -4.246424198150635
    9. 'n' → logprob: -4.371424198150635
    10. ' values' → logprob: -4.371424198150635

Token 98: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.31389498710632324
    2. ' not' → logprob: -1.3138949871063232
    3. 'line' → logprob: -7.563895225524902
    4. 'not' → logprob: -9.188895225524902
    5. ' len' → logprob: -12.063895225524902
    6. ' ' → logprob: -12.313895225524902
    7. ' ' → logprob: -14.438895225524902
    8. '	line' → logprob: -15.063895225524902
    9. '#line' → logprob: -15.688895225524902
    10. ' '' → logprob: -15.688895225524902

Token 99: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.023245595395565033
    2. 'line' → logprob: -3.7732455730438232
    3. '	line' → logprob: -16.523244857788086
    4. '(line' → logprob: -17.898244857788086
    5. ' ' → logprob: -18.148244857788086
    6. '#line' → logprob: -18.273244857788086
    7. 'ine' → logprob: -19.523244857788086
    8. ' ligne' → logprob: -19.773244857788086
    9. '=line' → logprob: -19.898244857788086
    10. ' ' → logprob: -20.148244857788086

Token 100: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.10045047104358673
    2. '.' → logprob: -2.3504505157470703
    3. ' .' → logprob: -8.72545051574707
    4. '.rstrip' → logprob: -9.72545051574707
    5. '.startswith' → logprob: -11.10045051574707
    6. 'strip' → logprob: -12.60045051574707
    7. ' strip' → logprob: -14.35045051574707
    8. '.trim' → logprob: -14.47545051574707
    9. '.chomp' → logprob: -14.60045051574707
    10. ':
' → logprob: -14.72545051574707

Token 101: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.048990409821271896
    2. '():
' → logprob: -3.048990488052368
    3. '()' → logprob: -8.173990249633789
    4. ' ():' → logprob: -9.673990249633789
    5. '():
' → logprob: -10.298990249633789
    6. ':' → logprob: -10.798990249633789
    7. '():

' → logprob: -12.923990249633789
    8. '()==' → logprob: -14.173990249633789
    9. ' ()' → logprob: -14.673990249633789
    10. '(' → logprob: -16.04899024963379

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10032183676958084
    2. '   ' → logprob: -2.3503217697143555
    3. ':' → logprob: -9.725321769714355
    4. ' break' → logprob: -11.100321769714355
    5. '<|end|>' → logprob: -11.100321769714355
    6. ',' → logprob: -12.350321769714355
    7. ' ' → logprob: -12.975321769714355
    8. '   ' → logprob: -13.100321769714355
    9. '    ' → logprob: -13.225321769714355
    10. '<|end|>' → logprob: -13.350321769714355

Token 103: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.05756749212741852
    2. 'break' → logprob: -3.432567596435547
    3. '   ' → logprob: -3.807567596435547
    4. '       ' → logprob: -6.682567596435547
    5. '	break' → logprob: -8.682567596435547
    6. '           ' → logprob: -12.807567596435547
    7. '```' → logprob: -12.807567596435547
    8. '    ' → logprob: -13.057567596435547
    9. '_break' → logprob: -13.182567596435547
    10. ' continue' → logprob: -13.932567596435547

Token 104: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037051814142614603
    2. '    
' → logprob: -5.753705024719238
    3. '
' → logprob: -7.878705024719238
    4. 'tokens' → logprob: -9.878705024719238
    5. 'm' → logprob: -10.628705024719238
    6. ' tokens' → logprob: -11.503705024719238
    7. '        
' → logprob: -12.003705024719238
    8. '<|end|>' → logprob: -12.003705024719238
    9. '```' → logprob: -12.003705024719238
    10. '   
' → logprob: -12.253705024719238

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028042756021022797
    2. '    
' → logprob: -6.502804279327393
    3. '
' → logprob: -7.002804279327393
    4. 'tokens' → logprob: -8.502803802490234
    5. '```' → logprob: -9.877803802490234
    6. 'm' → logprob: -10.002803802490234
    7. ' tokens' → logprob: -10.752803802490234
    8. ' n' → logprob: -11.252803802490234
    9. ' parts' → logprob: -11.377803802490234
    10. 'n' → logprob: -11.502803802490234

Token 106: ' m' (ID: 284)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.48237714171409607
    2. 'n' → logprob: -1.4823771715164185
    3. ' parts' → logprob: -2.232377052307129
    4. '   ' → logprob: -4.482377052307129
    5. 'w' → logprob: -4.482377052307129
    6. ' w' → logprob: -4.857377052307129
    7. 'm' (adapté à ' m') → logprob: -4.982377052307129
    8. ' m' → logprob: -5.107377052307129
    9. 'parts' → logprob: -5.732377052307129
    10. ' tokens' → logprob: -7.732377052307129

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014019758440554142
    2. ' =' → logprob: -4.764019966125488
    3. ' ,' → logprob: -5.264019966125488
    4. '=' → logprob: -8.514019966125488
    5. ',int' → logprob: -12.889019966125488
    6. '_,' → logprob: -13.639019966125488
    7. ',num' → logprob: -13.639019966125488
    8. ',n' → logprob: -13.639019966125488
    9. ',w' → logprob: -13.764019966125488
    10. ',width' → logprob: -13.764019966125488

Token 108: ' n' (ID: 297)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5690670013427734
    2. 'w' → logprob: -1.8190670013427734
    3. ' widths' → logprob: -1.9440670013427734
    4. ' n' → logprob: -2.1940670013427734
    5. 'n' → logprob: -4.694067001342773
    6. ' =' → logprob: -5.944067001342773
    7. 'width' → logprob: -5.944067001342773
    8. ' width' → logprob: -6.694067001342773
    9. '=' → logprob: -8.069067001342773
    10. ',' → logprob: -8.194067001342773

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004627360496670008
    2. '=' → logprob: -5.379627227783203
    3. ',' → logprob: -12.004627227783203
    4. ' ' → logprob: -14.129627227783203
    5. ')' → logprob: -16.379627227783203
    6. ' =)' → logprob: -17.129627227783203
    7. '=line' → logprob: -17.129627227783203
    8. ' =",' → logprob: -17.379627227783203
    9. ' =
' → logprob: -17.504627227783203
    10. ' ' → logprob: -17.629627227783203

Token 110: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004096208605915308
    2. ' line' → logprob: -5.754096031188965
    3. 'map' → logprob: -7.004096031188965
    4. 'line' → logprob: -12.379096031188965
    5. ' list' → logprob: -12.629096031188965
    6. ' [' → logprob: -13.879096031188965
    7. '[' → logprob: -14.379096031188965
    8. '	map' → logprob: -15.254096031188965
    9. '[line' → logprob: -15.379096031188965
    10. ' ' → logprob: -15.629096031188965

Token 111: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2281467616558075
    2. '(' → logprob: -1.8531467914581299
    3. '(str' → logprob: -3.10314679145813
    4. '(lambda' → logprob: -6.353146553039551
    5. '(line' → logprob: -7.978146553039551
    6. '(
' → logprob: -9.22814655303955
    7. '<|end|>' → logprob: -9.72814655303955
    8. '(eval' → logprob: -10.85314655303955
    9. '(list' → logprob: -11.72814655303955
    10. '(tuple' → logprob: -11.72814655303955

Token 112: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.016720861196517944
    2. ')' → logprob: -4.266720771789551
    3. '(' → logprob: -7.016720771789551
    4. ',line' → logprob: -7.516720771789551
    5. '[line' → logprob: -7.891720771789551
    6. ' line' → logprob: -8.64172077178955
    7. '=line' → logprob: -8.76672077178955
    8. '#line' → logprob: -8.89172077178955
    9. 'line' → logprob: -9.26672077178955
    10. '<|end|>' → logprob: -9.51672077178955

Token 113: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10020990669727325
    2. ' line' → logprob: -2.350209951400757
    3. '(line' → logprob: -13.350210189819336
    4. ')' → logprob: -13.725210189819336
    5. '	line' → logprob: -15.600210189819336
    6. '   ' → logprob: -15.850210189819336
    7. '=line' → logprob: -15.850210189819336
    8. '[line' → logprob: -16.350210189819336
    9. ' ' → logprob: -17.350210189819336
    10. '#line' → logprob: -17.850210189819336

Token 114: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.12944939732551575
    2. '().' → logprob: -2.5044493675231934
    3. '.split' → logprob: -3.2544493675231934
    4. '.' → logprob: -7.004449367523193
    5. ' .' → logprob: -9.629449844360352
    6. 'strip' → logprob: -10.504449844360352
    7. ')' → logprob: -10.629449844360352
    8. '.rstrip' → logprob: -10.754449844360352
    9. '.readline' → logprob: -10.879449844360352
    10. 'split' → logprob: -11.004449844360352

Token 115: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1119026392698288
    2. '('' → logprob: -3.1119027137756348
    3. '()' → logprob: -3.2369027137756348
    4. ')' → logprob: -4.486902713775635
    5. '(','' → logprob: -4.611902713775635
    6. '(' → logprob: -7.736902713775635
    7. '(',' → logprob: -8.611902236938477
    8. '())
' → logprob: -8.986902236938477
    9. '("' → logprob: -10.236902236938477
    10. '')' → logprob: -10.861902236938477

Token 116: '   ' (ID: 271)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.041119448840618134
    2. ' widths' → logprob: -3.541119337081909
    3. '   ' → logprob: -5.291119575500488
    4. '
' → logprob: -5.666119575500488
    5. 'w' → logprob: -6.541119575500488
    6. '    
' → logprob: -7.666119575500488
    7. ' width' → logprob: -8.541119575500488
    8. 'n' → logprob: -9.416119575500488
    9. '```' → logprob: -9.666119575500488
    10. '[' → logprob: -9.666119575500488

Token 117: ' if' (ID: 538)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.024289226159453392
    2. ' widths' → logprob: -4.024289131164551
    3. '   ' → logprob: -5.149289131164551
    4. '    
' → logprob: -9.14928913116455
    5. ' width' → logprob: -9.64928913116455
    6. '
' → logprob: -10.02428913116455
    7. 'w' → logprob: -10.27428913116455
    8. 'length' → logprob: -11.02428913116455
    9. 'break' → logprob: -11.02428913116455
    10. '```' → logprob: -12.02428913116455

Token 118: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.10452423989772797
    2. 'm' → logprob: -2.7295241355895996
    3. ' not' → logprob: -3.9795241355895996
    4. ' n' → logprob: -4.6045241355896
    5. ' can' → logprob: -5.9795241355896
    6. 'n' → logprob: -6.7295241355896
    7. 'can' → logprob: -6.9795241355896
    8. 'not' → logprob: -7.4795241355896
    9. ' __' → logprob: -10.604524612426758
    10. ' ' → logprob: -11.104524612426758

Token 119: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14123110473155975
    2. '==' → logprob: -2.766231060028076
    3. ' >' → logprob: -2.766231060028076
    4. '>' → logprob: -6.266231060028076
    5. ' <=' → logprob: -6.516231060028076
    6. ' >=' → logprob: -6.641231060028076
    7. ' <' → logprob: -6.891231060028076
    8. ' ' → logprob: -9.266231536865234
    9. '<=' → logprob: -10.141231536865234
    10. '>=' → logprob: -10.266231536865234

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033648353070020676
    2. ' ' → logprob: -3.4086482524871826
    3. ' n' → logprob: -13.783648490905762
    4. 'n' → logprob: -13.783648490905762
    5. '   ' → logprob: -15.533648490905762
    6. '  ' → logprob: -16.158647537231445
    7. ' -' → logprob: -16.408647537231445
    8. '-' → logprob: -16.783647537231445
    9. '۰' → logprob: -17.283647537231445
    10. 'm' → logprob: -17.408647537231445

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006458373973146081
    2. ' ' → logprob: -7.375645637512207
    3. 'n' → logprob: -11.000645637512207
    4. ' n' → logprob: -13.500645637512207
    5. '-' → logprob: -14.375645637512207
    6. '

' → logprob: -16.063146591186523
    7. '```' → logprob: -16.625646591186523
    8. '   ' → logprob: -16.875646591186523
    9. ' -' → logprob: -16.875646591186523
    10. '  ' → logprob: -16.938146591186523

Token 122: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07899675518274307
    2. 'and' → logprob: -2.5789966583251953
    3. ' or' → logprob: -9.203996658325195
    4. ' ' → logprob: -12.328996658325195
    5. '	and' → logprob: -13.953996658325195
    6. '   ' → logprob: -14.953996658325195
    7. ':' → logprob: -15.328996658325195
    8. 'or' → logprob: -15.328996658325195
    9. '  ' → logprob: -17.078996658325195
    10. '<|end|>' → logprob: -17.078996658325195

Token 123: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2519317865371704
    2. 'n' → logprob: -1.5019317865371704
    3. '	n' → logprob: -13.126932144165039
    4. ' ' → logprob: -15.126932144165039
    5. ' ' → logprob: -15.376932144165039
    6. '<|end|>' → logprob: -16.00193214416504
    7. ' н' → logprob: -18.25193214416504
    8. '_n' → logprob: -18.25193214416504
    9. '  ' → logprob: -18.25193214416504
    10. 'n't' → logprob: -18.62693214416504

Token 124: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06225525960326195
    2. '==' → logprob: -2.8122551441192627
    3. ' ' → logprob: -8.687254905700684
    4. '<|end|>' → logprob: -9.312254905700684
    5. '<|end|>' → logprob: -11.562254905700684
    6. '0' → logprob: -11.687254905700684
    7. ' ' → logprob: -12.312254905700684
    8. ' =' → logprob: -13.062254905700684
    9. '=' → logprob: -14.062254905700684
    10. ')==' → logprob: -14.187254905700684

Token 125: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759444236755371
    2. '0' → logprob: -0.8259444236755371
    3. '<|end|>' → logprob: -12.450944900512695
    4. ' ' → logprob: -14.450944900512695
    5. '  ' → logprob: -15.450944900512695
    6. '<|end|>' → logprob: -15.575944900512695
    7. '۰' → logprob: -17.138444900512695
    8. 's' → logprob: -17.763444900512695
    9. '   ' → logprob: -18.075944900512695
    10. '=' → logprob: -18.200944900512695

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '<|end|>' → logprob: -18.25007438659668
    4. '۰' → logprob: -19.62507438659668
    5. '<|end|>' → logprob: -20.62507438659668
    6. '  ' → logprob: -20.62507438659668
    7. '   ' → logprob: -21.31257438659668
    8. '০' → logprob: -21.37507438659668
    9. '```' → logprob: -21.93757438659668
    10. '०' → logprob: -22.00007438659668

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08001802861690521
    2. ':
' → logprob: -2.5800180435180664
    3. '   ' → logprob: -6.955018043518066
    4. '       ' → logprob: -8.705018043518066
    5. ':
' → logprob: -12.830018043518066
    6. ':return' → logprob: -13.330018043518066
    7. ':

' → logprob: -13.955018043518066
    8. '):
' → logprob: -14.580018043518066
    9. ' :
' → logprob: -15.080018043518066
    10. ' :' → logprob: -15.080018043518066

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7958202362060547
    2. '   ' → logprob: -1.1708202362060547
    3. ':' → logprob: -1.5458202362060547
    4. ':
' → logprob: -3.6708202362060547
    5. '	break' → logprob: -11.545820236206055
    6. '<|end|>' → logprob: -11.795820236206055
    7. ':
' → logprob: -11.920820236206055
    8. ' break' → logprob: -11.920820236206055
    9. '    ' → logprob: -11.920820236206055
    10. '	' → logprob: -12.045820236206055

Token 129: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.03232990577816963
    2. 'break' (adapté à ' break') → logprob: -4.03233003616333
    3. '       ' → logprob: -4.90733003616333
    4. '   ' → logprob: -5.03233003616333
    5. '	break' → logprob: -8.782329559326172
    6. '           ' → logprob: -12.157329559326172
    7. ' ' → logprob: -13.032329559326172
    8. '_break' → logprob: -13.907329559326172
    9. '```' → logprob: -14.407329559326172
    10. '
' → logprob: -15.032329559326172

Token 130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33480846881866455
    2. 'width' → logprob: -1.9598084688186646
    3. ' widths' → logprob: -1.9598084688186646
    4. '    
' → logprob: -6.709808349609375
    5. ' width' → logprob: -7.334808349609375
    6. '
' → logprob: -7.709808349609375
    7. '	width' → logprob: -9.084808349609375
    8. 'w' → logprob: -9.209808349609375
    9. '```' → logprob: -9.959808349609375
    10. '   ' → logprob: -10.584808349609375

Token 131: '   ' (ID: 271)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.2336752563714981
    2. '   ' → logprob: -1.733675241470337
    3. ' widths' → logprob: -3.483675241470337
    4. ' width' → logprob: -8.233675003051758
    5. '
' → logprob: -8.358675003051758
    6. '    
' → logprob: -8.483675003051758
    7. 'length' → logprob: -8.858675003051758
    8. 'w' → logprob: -9.608675003051758
    9. '```' → logprob: -9.983675003051758
    10. 'n' → logprob: -11.608675003051758

Token 132: ' widths' (ID: 127335)
  Prédit: ' widths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' widths' → logprob: -0.3257002532482147
    2. 'width' → logprob: -1.325700283050537
    3. '   ' → logprob: -4.575700283050537
    4. ' width' → logprob: -6.450700283050537
    5. '    
' → logprob: -8.325699806213379
    6. '
' → logprob: -9.450699806213379
    7. 'length' → logprob: -9.700699806213379
    8. ' lengths' → logprob: -11.700699806213379
    9. ' line' → logprob: -11.700699806213379
    10. '    ' → logprob: -11.825699806213379

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029758475720882416
    2. '=' → logprob: -3.5297584533691406
    3. '=[]' → logprob: -13.15475845336914
    4. ' ' → logprob: -13.15475845336914
    5. ',' → logprob: -13.52975845336914
    6. '[' → logprob: -14.15475845336914
    7. '_' → logprob: -14.40475845336914
    8. ' =[' → logprob: -14.90475845336914
    9. ' ' → logprob: -15.27975845336914
    10. ')' → logprob: -15.52975845336914

Token 134: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3981521725654602
    2. 'list' → logprob: -1.1481521129608154
    3. '[list' → logprob: -5.1481523513793945
    4. '[' → logprob: -6.2731523513793945
    5. '[]' → logprob: -6.2731523513793945
    6. ' [' → logprob: -6.5231523513793945
    7. ' []' → logprob: -8.773152351379395
    8. '[int' → logprob: -12.773152351379395
    9. '[n' → logprob: -13.648152351379395
    10. '[List' → logprob: -13.773152351379395

Token 135: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.925185440806672e-05
    2. ' int' → logprob: -9.250099182128906
    3. ']int' → logprob: -13.250099182128906
    4. '*' → logprob: -14.000099182128906
    5. '<int' → logprob: -16.250099182128906
    6. '0' → logprob: -16.625099182128906
    7. ' ' → logprob: -16.750099182128906
    8. '   ' → logprob: -16.750099182128906
    9. '[int' → logprob: -16.750099182128906
    10. ':int' → logprob: -17.375099182128906

Token 136: '(sys' (ID: 41042)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4964725375175476
    2. '(sys' → logprob: -0.9964725375175476
    3. '(input' → logprob: -3.8714725971221924
    4. '(' → logprob: -7.746472358703613
    5. '(i' → logprob: -7.996472358703613
    6. '(next' → logprob: -8.621472358703613
    7. '()' → logprob: -9.496472358703613
    8. 'sys' → logprob: -9.996472358703613
    9. '(_)' → logprob: -9.996472358703613
    10. '(s' → logprob: -9.996472358703613

Token 137: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.776898251497187e-05
    2. 'stdin' → logprob: -9.8750581741333
    3. '.argv' → logprob: -12.2500581741333
    4. '.readline' → logprob: -14.1250581741333
    5. ' stdin' → logprob: -15.0000581741333
    6. '.stdout' → logprob: -15.5000581741333
    7. '(stdin' → logprob: -15.8750581741333
    8. '.' → logprob: -16.375057220458984
    9. '.std' → logprob: -19.000057220458984
    10. 'input' → logprob: -19.625057220458984

Token 138: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.2246291337069124e-05
    2. '.' → logprob: -10.750021934509277
    3. '.stdin' → logprob: -14.375021934509277
    4. '.next' → logprob: -16.250022888183594
    5. ' readline' → logprob: -18.375022888183594
    6. 'line' → logprob: -18.750022888183594
    7. ')' → logprob: -19.500022888183594
    8. '().' → logprob: -19.750022888183594
    9. '.stdout' → logprob: -20.000022888183594
    10. ' .' → logprob: -20.375022888183594

Token 139: '())' (ID: 3516)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008642109110951424
    2. '())' → logprob: -4.758642196655273
    3. '()' → logprob: -10.633642196655273
    4. '())
' → logprob: -13.758642196655273
    5. '()]' → logprob: -13.883642196655273
    6. '()
' → logprob: -14.133642196655273
    7. ')' → logprob: -14.758642196655273
    8. ' ())' → logprob: -15.883642196655273
    9. '(' → logprob: -17.008642196655273
    10. ' ().' → logprob: -17.258642196655273

Token 140: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11363238096237183
    2. 'for' → logprob: -2.3636324405670166
    3. '.strip' → logprob: -4.3636322021484375
    4. '().' → logprob: -8.488632202148438
    5. '.rstrip' → logprob: -8.988632202148438
    6. '()' → logprob: -9.113632202148438
    7. '	for' → logprob: -9.863632202148438
    8. 'rstrip' → logprob: -9.988632202148438
    9. '.readline' → logprob: -10.613632202148438
    10. 'strip' → logprob: -10.988632202148438

Token 141: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20375847816467285
    2. '_' → logprob: -1.8287584781646729
    3. ' _' → logprob: -4.453758239746094
    4. 'range' → logprob: -4.578758239746094
    5. ' in' → logprob: -6.453758239746094
    6. '_range' → logprob: -8.578758239746094
    7. ' i' → logprob: -10.953758239746094
    8. ' xrange' → logprob: -11.578758239746094
    9. '_n' → logprob: -11.703758239746094
    10. 'i' → logprob: -11.828758239746094

Token 142: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005838918150402606
    2. ' range' → logprob: -7.500584125518799
    3. 'in' → logprob: -11.00058364868164
    4. ' in' → logprob: -11.37558364868164
    5. '(range' → logprob: -13.37558364868164
    6. '	range' → logprob: -14.25058364868164
    7. 'ange' → logprob: -15.50058364868164
    8. 'n' → logprob: -16.12558364868164
    9. ' ' → logprob: -16.25058364868164
    10. '  ' → logprob: -16.62558364868164

Token 143: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002475777640938759
    2. ' range' → logprob: -6.002475738525391
    3. '	range' → logprob: -16.50247573852539
    4. ' ' → logprob: -17.25247573852539
    5. '(range' → logprob: -17.87747573852539
    6. '  ' → logprob: -18.75247573852539
    7. '   ' → logprob: -19.50247573852539
    8. ')' → logprob: -20.12747573852539
    9. ' xrange' → logprob: -20.25247573852539
    10. 'n' → logprob: -20.37747573852539

Token 144: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.011373155459296e-05
    2. ' (' → logprob: -11.375030517578125
    3. '(' → logprob: -11.500030517578125
    4. 'n' → logprob: -11.750030517578125
    5. ' n' → logprob: -14.375030517578125
    6. '	n' → logprob: -18.375030517578125
    7. ')n' → logprob: -18.375030517578125
    8. '(
' → logprob: -19.250030517578125
    9. '<n' → logprob: -19.250030517578125
    10. ' ' → logprob: -20.000030517578125

Token 145: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0025299990084022284
    2. ']' → logprob: -6.002530097961426
    3. ')' → logprob: -9.877530097961426
    4. ' ]' → logprob: -13.502530097961426
    5. '}]' → logprob: -14.877530097961426
    6. ' )' → logprob: -14.877530097961426
    7. '()]' → logprob: -15.502530097961426
    8. ')]
' → logprob: -16.00252914428711
    9. '])' → logprob: -16.25252914428711
    10. '')]' → logprob: -16.25252914428711

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5650716423988342
    2. 'low' → logprob: -1.5650715827941895
    3. ' low' → logprob: -1.9400715827941895
    4. '
' → logprob: -3.3150715827941895
    5. 'left' → logprob: -3.8150715827941895
    6. ' left' → logprob: -4.9400715827941895
    7. '    
' → logprob: -5.4400715827941895
    8. ' lo' → logprob: -5.6900715827941895
    9. 'lo' → logprob: -6.1900715827941895
    10. '```' → logprob: -6.4400715827941895

Token 147: ' left' (ID: 3561)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.2552022635936737
    2. 'left' (adapté à ' left') → logprob: -1.505202293395996
    3. 'lo' → logprob: -5.880202293395996
    4. '
' → logprob: -8.255202293395996
    5. ' low' → logprob: -9.630202293395996
    6. 'start' → logprob: -10.005202293395996
    7. 'l' → logprob: -10.130202293395996
    8. '    
' → logprob: -10.755202293395996
    9. ' left' → logprob: -10.880202293395996
    10. '   ' → logprob: -11.755202293395996

Token 148: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009648896753787994
    2. '=' → logprob: -4.75964879989624
    3. ',' → logprob: -6.88464879989624
    4. ' ,' → logprob: -11.634649276733398
    5. ' ' → logprob: -14.134649276733398
    6. '<|end|>' → logprob: -14.634649276733398
    7. '```' → logprob: -16.5096492767334
    8. ' ' → logprob: -16.8846492767334
    9. ' =
' → logprob: -17.1346492767334
    10. ')' → logprob: -17.6346492767334

Token 149: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.12699131667613983
    2. 'right' → logprob: -2.1269912719726562
    3. ' ' → logprob: -10.501991271972656
    4. '=' → logprob: -11.001991271972656
    5. ' max' → logprob: -12.251991271972656
    6. 'max' → logprob: -12.626991271972656
    7. ' =' → logprob: -13.001991271972656
    8. '	right' → logprob: -13.001991271972656
    9. '```' → logprob: -13.376991271972656
    10. '<|end|>' → logprob: -13.626991271972656

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804194927215576
    2. '=' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.538042068481445
    4. ',' → logprob: -15.538042068481445
    5. '=int' → logprob: -17.538042068481445
    6. '<|end|>' → logprob: -17.913042068481445
    7. ' ' → logprob: -18.163042068481445
    8. ' =
' → logprob: -18.413042068481445
    9. '```' → logprob: -18.413042068481445
    10. '=max' → logprob: -18.663042068481445

Token 151: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20176218450069427
    2. 'max' → logprob: -1.7017621994018555
    3. ' sum' → logprob: -8.701762199401855
    4. 'sum' → logprob: -8.701762199401855
    5. '(max' → logprob: -11.201762199401855
    6. '=max' → logprob: -13.451762199401855
    7. '1' → logprob: -15.201762199401855
    8. '	max' → logprob: -15.326762199401855
    9. '0' → logprob: -15.576762199401855
    10. ' ' → logprob: -15.701762199401855

Token 152: '(width' (ID: 32972)
  Prédit: '(width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(width' → logprob: -0.0002736138121690601
    2. 'width' → logprob: -8.375273704528809
    3. '(' → logprob: -10.125273704528809
    4. '(max' → logprob: -14.250273704528809
    5. ' widths' → logprob: -14.375273704528809
    6. '(
' → logprob: -14.500273704528809
    7. 'Widths' → logprob: -15.000273704528809
    8. '(length' → logprob: -15.625273704528809
    9. ' (' → logprob: -15.875273704528809
    10. '_width' → logprob: -16.000272750854492

Token 153: 's' (ID: 82)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.21713478863239288
    2. 's' → logprob: -1.7171348333358765
    3. '(width' → logprob: -4.217134952545166
    4. 'idth' → logprob: -7.717134952545166
    5. ')' → logprob: -9.342134475708008
    6. ' widths' → logprob: -9.342134475708008
    7. '   ' → logprob: -9.842134475708008
    8. '_width' → logprob: -9.842134475708008
    9. ',width' → logprob: -9.842134475708008
    10. '-width' → logprob: -11.092134475708008

Token 154: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016192026436328888
    2. ' ,' → logprob: -4.1411919593811035
    3. ')' → logprob: -9.766192436218262
    4. '+' → logprob: -10.141192436218262
    5. '),' → logprob: -10.516192436218262
    6. ' +' → logprob: -11.641192436218262
    7. ' ' → logprob: -11.891192436218262
    8. ',max' → logprob: -12.766192436218262
    9. ',n' → logprob: -13.391192436218262
    10. 'import' → logprob: -13.516192436218262

Token 155: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4289272725582123
    2. ' sum' → logprob: -1.0539273023605347
    3. ' ' → logprob: -8.553927421569824
    4. '10' → logprob: -11.428927421569824
    5. 'max' → logprob: -12.303927421569824
    6. '	sum' → logprob: -12.678927421569824
    7. '   ' → logprob: -12.928927421569824
    8. '  ' → logprob: -13.053927421569824
    9. '=sum' → logprob: -13.053927421569824
    10. '(sum' → logprob: -13.178927421569824

Token 156: '(width' (ID: 32972)
  Prédit: '(width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(width' → logprob: -0.00020973898062948138
    2. '(' → logprob: -9.00020980834961
    3. 'width' → logprob: -9.37520980834961
    4. ' (' → logprob: -14.75020980834961
    5. '(length' → logprob: -14.75020980834961
    6. ' widths' → logprob: -15.75020980834961
    7. '(max' → logprob: -16.12520980834961
    8. ',width' → logprob: -16.62520980834961
    9. 'Widths' → logprob: -16.75020980834961
    10. '(w' → logprob: -16.75020980834961

Token 157: 's' (ID: 82)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.3253576159477234
    2. '(width' → logprob: -1.3253576755523682
    3. 'idth' → logprob: -4.825357437133789
    4. 's' → logprob: -5.950357437133789
    5. '_width' → logprob: -6.950357437133789
    6. ' widths' → logprob: -7.950357437133789
    7. ',width' → logprob: -10.700357437133789
    8. ')' → logprob: -11.075357437133789
    9. '	width' → logprob: -11.200357437133789
    10. 'Widths' → logprob: -11.450357437133789

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008211841923184693
    2. '+' → logprob: -7.500821113586426
    3. ')
' → logprob: -9.000821113586426
    4. ' )' → logprob: -9.250821113586426
    5. ' +' → logprob: -10.125821113586426
    6. ')+' → logprob: -12.500821113586426
    7. '   ' → logprob: -12.875821113586426
    8. '<|end|>' → logprob: -14.375821113586426
    9. ')

' → logprob: -15.250821113586426
    10. '```' → logprob: -15.250821113586426

Token 159: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3684009909629822
    2. 'while' → logprob: -1.868401050567627
    3. '
' → logprob: -2.118401050567627
    4. '    
' → logprob: -3.993401050567627
    5. '   ' → logprob: -4.993401050567627
    6. ' 
' → logprob: -5.618401050567627
    7. '<|end|>' → logprob: -5.743401050567627
    8. '  
' → logprob: -7.118401050567627
    9. '   
' → logprob: -8.368400573730469
    10. '	while' → logprob: -8.868400573730469

Token 160: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.08776210993528366
    2. 'while' (adapté à ' while') → logprob: -2.7127621173858643
    3. '
' → logprob: -4.712761878967285
    4. ' 
' → logprob: -5.087761878967285
    5. '    
' → logprob: -6.337761878967285
    6. '   ' → logprob: -7.962761878967285
    7. '  
' → logprob: -8.587761878967285
    8. '   
' → logprob: -9.962761878967285
    9. ' ' → logprob: -10.337761878967285
    10. '     
' → logprob: -10.462761878967285

Token 161: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.02975199744105339
    2. 'left' → logprob: -3.529752016067505
    3. ' lef' → logprob: -14.154751777648926
    4. '	left' → logprob: -14.279751777648926
    5. '(left' → logprob: -16.154752731323242
    6. '_left' → logprob: -17.279752731323242
    7. '[left' → logprob: -17.529752731323242
    8. ' ' → logprob: -17.779752731323242
    9. ' ' → logprob: -17.904752731323242
    10. 'Left' → logprob: -18.654752731323242

Token 162: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6135274171829224
    2. ' <' → logprob: -0.8635274171829224
    3. ' <=' → logprob: -3.613527297973633
    4. '<=' → logprob: -4.613527297973633
    5. ' ' → logprob: -12.363527297973633
    6. '<len' → logprob: -12.613527297973633
    7. ' ' → logprob: -13.238527297973633
    8. '<int' → logprob: -13.363527297973633
    9. '<th' → logprob: -13.613527297973633
    10. '<size' → logprob: -14.238527297973633

Token 163: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5759415626525879
    2. ' right' → logprob: -0.8259415626525879
    3. '=' → logprob: -14.45094108581543
    4. 'ight' → logprob: -14.45094108581543
    5. '	right' → logprob: -14.95094108581543
    6. '[right' → logprob: -15.82594108581543
    7. ' ' → logprob: -16.20094108581543
    8. '(right' → logprob: -16.32594108581543
    9. ':right' → logprob: -16.45094108581543
    10. ',right' → logprob: -16.57594108581543

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006761549040675163
    2. ':
' → logprob: -5.00676155090332
    3. '<|end|>' → logprob: -10.63176155090332
    4. ' :' → logprob: -12.00676155090332
    5. '   ' → logprob: -12.50676155090332
    6. '<|end|>' → logprob: -12.63176155090332
    7. ':

' → logprob: -12.88176155090332
    8. '):
' → logprob: -14.00676155090332
    9. ':
' → logprob: -14.13176155090332
    10. '):' → logprob: -14.25676155090332

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2060561180114746
    2. '   ' → logprob: -2.0810561180114746
    3. '    ' → logprob: -3.3310561180114746
    4. '    
' → logprob: -4.956056118011475
    5. ' ' → logprob: -5.081056118011475
    6. ' 
' → logprob: -5.706056118011475
    7. '<|end|>' → logprob: -6.456056118011475
    8. '     ' → logprob: -7.081056118011475
    9. ' mid' → logprob: -7.206056118011475
    10. '  ' → logprob: -7.206056118011475

Token 166: ' mid' (ID: 6959)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32336142659187317
    2. ' mid' → logprob: -1.5733613967895508
    3. 'mid' (adapté à ' mid') → logprob: -2.823361396789551
    4. '(mid' → logprob: -5.573361396789551
    5. ' middle' → logprob: -6.323361396789551
    6. ' 
' → logprob: -6.948361396789551
    7. '_mid' → logprob: -7.073361396789551
    8. ' midpoint' → logprob: -7.698361396789551
    9. 'middle' → logprob: -7.823361396789551
    10. ' (' → logprob: -7.823361396789551

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003457136917859316
    2. '=' → logprob: -8.125346183776855
    3. ' ' → logprob: -10.625346183776855
    4. '<|end|>' → logprob: -10.625346183776855
    5. ' =(' → logprob: -14.375346183776855
    6. '=int' → logprob: -15.750346183776855
    7. '=(' → logprob: -16.00034523010254
    8. '<|end|>' → logprob: -16.75034523010254
    9. ' =
' → logprob: -17.00034523010254
    10. ' =)' → logprob: -17.12534523010254

Token 168: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4741075932979584
    2. '(left' → logprob: -0.9741076231002808
    3. ' left' → logprob: -11.34910774230957
    4. 'left' → logprob: -11.47410774230957
    5. '[left' → logprob: -11.97410774230957
    6. ' ' → logprob: -13.97410774230957
    7. '   ' → logprob: -15.34910774230957
    8. '(mid' → logprob: -15.34910774230957
    9. '(right' → logprob: -15.47410774230957
    10. '(lhs' → logprob: -16.22410774230957

Token 169: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0015036711702123284
    2. ' left' → logprob: -6.5015034675598145
    3. 'right' → logprob: -13.626503944396973
    4. '(left' → logprob: -16.876502990722656
    5. '	left' → logprob: -17.251502990722656
    6. '[left' → logprob: -18.126502990722656
    7. ' ' → logprob: -18.501502990722656
    8. '_left' → logprob: -19.501502990722656
    9. '左' → logprob: -19.751502990722656
    10. '.left' → logprob: -20.001502990722656

Token 170: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269282102584839
    2. '+' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.501928329467773
    4. ' plus' → logprob: -17.001928329467773
    5. ' right' → logprob: -18.001928329467773
    6. ' ' → logprob: -18.626928329467773
    7. '＋' → logprob: -18.751928329467773
    8. ')' → logprob: -19.001928329467773
    9. '+r' → logprob: -19.001928329467773
    10. '[right' → logprob: -19.126928329467773

Token 171: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.31326824426651
    2. 'right' → logprob: -1.3132681846618652
    3. '	right' → logprob: -12.313268661499023
    4. ' ' → logprob: -13.313268661499023
    5. '[right' → logprob: -16.063268661499023
    6. '
' → logprob: -16.688268661499023
    7. '(right' → logprob: -17.188268661499023
    8. '_right' → logprob: -17.188268661499023
    9. 'Right' → logprob: -17.188268661499023
    10. '   ' → logprob: -17.438268661499023

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002489423204679042
    2. ')//' → logprob: -8.875248908996582
    3. ' )' → logprob: -9.125248908996582
    4. ')>>' → logprob: -16.0002498626709
    5. '+' → logprob: -18.7502498626709
    6. ')
' → logprob: -18.8752498626709
    7. ' //' → logprob: -19.2502498626709
    8. ' +' → logprob: -19.3752498626709
    9. '）' → logprob: -19.8752498626709
    10. ']' → logprob: -20.0002498626709

Token 173: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0001149867384810932
    2. '//' → logprob: -9.125115394592285
    3. ' ' → logprob: -13.000115394592285
    4. '```' → logprob: -14.000115394592285
    5. ' ' → logprob: -14.125115394592285
    6. ')' → logprob: -14.125115394592285
    7. ' >>' → logprob: -14.125115394592285
    8. '>>' → logprob: -15.250115394592285
    9. '1' → logprob: -15.625115394592285
    10. '2' → logprob: -16.37511444091797

Token 174: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014163747429847717
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.514163970947266
    4. '  ' → logprob: -16.826663970947266
    5. '```' → logprob: -17.201663970947266
    6. '۲' → logprob: -17.639163970947266
    7. '２' → logprob: -18.139163970947266
    8. '=' → logprob: -18.639163970947266
    9. ' ' → logprob: -18.764163970947266
    10. '    ' → logprob: -18.951663970947266

Token 175: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '２' → logprob: -19.50000762939453
    4. '۲' → logprob: -19.75000762939453
    5. '```' → logprob: -19.87500762939453
    6. '   ' → logprob: -20.62500762939453
    7. '٢' → logprob: -21.00000762939453
    8. '२' → logprob: -21.18750762939453
    9. '২' → logprob: -21.56250762939453
    10. '=' → logprob: -22.18750762939453

Token 176: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5600816011428833
    2. '       ' → logprob: -1.3100816011428833
    3. '<|end|>' → logprob: -2.6850814819335938
    4. ' if' → logprob: -3.4350814819335938
    5. ' 
' → logprob: -4.435081481933594
    6. '  
' → logprob: -4.560081481933594
    7. ' ' → logprob: -4.560081481933594
    8. '        
' → logprob: -4.560081481933594
    9. 'if' → logprob: -4.560081481933594
    10. '   ' → logprob: -6.560081481933594

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014916944317519665
    2. ' if' → logprob: -4.639916896820068
    3. '
' → logprob: -6.014916896820068
    4. '<|end|>' → logprob: -6.764916896820068
    5. 'if' → logprob: -7.014916896820068
    6. '        
' → logprob: -8.264917373657227
    7. '   ' → logprob: -8.389917373657227
    8. '  
' → logprob: -9.514917373657227
    9. ' 
' → logprob: -10.764917373657227
    10. '<|end|>' → logprob: -11.014917373657227

Token 178: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09729228168725967
    2. 'if' (adapté à ' if') → logprob: -2.472292184829712
    3. '       ' → logprob: -4.847292423248291
    4. '   ' → logprob: -7.722292423248291
    5. '
' → logprob: -11.472291946411133
    6. '	if' → logprob: -11.847291946411133
    7. ' ' → logprob: -12.847291946411133
    8. '        
' → logprob: -13.722291946411133
    9. '    ' → logprob: -13.972291946411133
    10. ' 
' → logprob: -13.972291946411133

Token 179: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.008619893342256546
    2. 'can' → logprob: -4.758619785308838
    3. '	can' → logprob: -12.258620262145996
    4. '(can' → logprob: -15.633620262145996
    5. '_can' → logprob: -15.883620262145996
    6. ' not' → logprob: -16.63361930847168
    7. 'Can' → logprob: -16.75861930847168
    8. ' ' → logprob: -16.88361930847168
    9. '.can' → logprob: -17.63361930847168
    10. ' ' → logprob: -17.75861930847168

Token 180: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.25000286102295
    3. ' _' → logprob: -14.00000286102295
    4. '_put' → logprob: -17.000001907348633
    5. '_continue' → logprob: -17.625001907348633
    6. 'place' → logprob: -18.125001907348633
    7. '_can' → logprob: -18.250001907348633
    8. ' place' → logprob: -18.875001907348633
    9. '_PLACE' → logprob: -18.875001907348633
    10. '_places' → logprob: -19.000001907348633

Token 181: '(m' (ID: 2145)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.014623414725065231
    2. '(m' → logprob: -4.764623641967773
    3. '(width' → logprob: -5.139623641967773
    4. '(' → logprob: -9.389623641967773
    5. '(n' → logprob: -10.764623641967773
    6. ' (' → logprob: -11.264623641967773
    7. '(mid' → logprob: -12.139623641967773
    8. 'w' → logprob: -13.014623641967773
    9. '(weights' → logprob: -13.639623641967773
    10. '(win' → logprob: -14.014623641967773

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004324245732277632
    2. ' ,' → logprob: -5.504324436187744
    3. ',m' → logprob: -9.254323959350586
    4. ',width' → logprob: -9.504323959350586
    5. ',w' → logprob: -9.629323959350586
    6. ',n' → logprob: -12.129323959350586
    7. ' widths' → logprob: -13.504323959350586
    8. ',
' → logprob: -14.129323959350586
    9. '[mid' → logprob: -14.629323959350586
    10. '```' → logprob: -15.379323959350586

Token 183: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08748549968004227
    2. ' n' → logprob: -2.8374855518341064
    3. 'mid' → logprob: -4.337485313415527
    4. 'm' → logprob: -4.587485313415527
    5. ' mid' → logprob: -6.587485313415527
    6. ' m' → logprob: -8.087485313415527
    7. 'right' → logprob: -10.212485313415527
    8. 'sys' → logprob: -10.212485313415527
    9. '   ' → logprob: -10.712485313415527
    10. '[mid' → logprob: -10.837485313415527

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037221689708530903
    2. ',width' → logprob: -6.253722190856934
    3. ' ,' → logprob: -6.378722190856934
    4. ',w' → logprob: -9.753722190856934
    5. 'width' → logprob: -10.878722190856934
    6. ',
' → logprob: -12.253722190856934
    7. ' widths' → logprob: -12.378722190856934
    8. ')' → logprob: -13.503722190856934
    9. '   ' → logprob: -13.753722190856934
    10. ',m' → logprob: -13.753722190856934

Token 185: ' widths' (ID: 127335)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.006756697781383991
    2. ' widths' → logprob: -5.006756782531738
    3. ' width' → logprob: -10.256756782531738
    4. ',width' → logprob: -13.006756782531738
    5. '
' → logprob: -14.256756782531738
    6. ';width' → logprob: -14.381756782531738
    7. 'Widths' → logprob: -14.381756782531738
    8. '	width' → logprob: -14.381756782531738
    9. '(width' → logprob: -14.631756782531738
    10. '   ' → logprob: -14.881756782531738

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006554892170242965
    2. ' ,' → logprob: -7.375655651092529
    3. '[mid' → logprob: -10.625655174255371
    4. ')' → logprob: -13.875655174255371
    5. ',
' → logprob: -13.875655174255371
    6. '(mid' → logprob: -14.125655174255371
    7. '[' → logprob: -14.375655174255371
    8. ',m' → logprob: -14.750655174255371
    9. 'mid' → logprob: -15.125655174255371
    10. '=' → logprob: -15.875655174255371

Token 187: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.011048170737922192
    2. ' mid' → logprob: -4.511048316955566
    3. '[mid' → logprob: -15.011048316955566
    4. '(mid' → logprob: -17.26104736328125
    5. '_mid' → logprob: -18.26104736328125
    6. '.mid' → logprob: -21.01104736328125
    7. 'midt' → logprob: -21.88604736328125
    8. 'Mid' → logprob: -22.13604736328125
    9. 'm' → logprob: -22.38604736328125
    10. '
' → logprob: -22.38604736328125

Token 188: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012710707262158394
    2. '):
' → logprob: -4.3877105712890625
    3. ' ):' → logprob: -8.637710571289062
    4. ')' → logprob: -11.762710571289062
    5. ':' → logprob: -11.887710571289062
    6. '):
' → logprob: -12.137710571289062
    7. ' ):
' → logprob: -13.262710571289062
    8. '=' → logprob: -14.012710571289062
    9. '):

' → logprob: -14.637710571289062
    10. '   ' → logprob: -16.012710571289062

Token 189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15969161689281464
    2. '
' → logprob: -2.659691572189331
    3. ' right' → logprob: -2.909691572189331
    4. 'right' → logprob: -4.53469181060791
    5. ' left' → logprob: -4.65969181060791
    6. '       ' → logprob: -6.78469181060791
    7. ' 
' → logprob: -7.40969181060791
    8. 'left' → logprob: -7.53469181060791
    9. '[right' → logprob: -9.03469181060791
    10. '               ' → logprob: -9.28469181060791

Token 190: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.12697871029376984
    2. ' right' → logprob: -2.126978635787964
    3. '
' → logprob: -10.001978874206543
    4. '	right' → logprob: -12.876978874206543
    5. '[right' → logprob: -14.001978874206543
    6. '.right' → logprob: -14.626978874206543
    7. 'r' → logprob: -15.001978874206543
    8. '_right' → logprob: -15.001978874206543
    9. 'Right' → logprob: -15.126978874206543
    10. '   ' → logprob: -15.751978874206543

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860202223062515
    2. '=' → logprob: -3.0486021041870117
    3. '<|end|>' → logprob: -11.548602104187012
    4. ')' → logprob: -12.423602104187012
    5. ' =
' → logprob: -15.298602104187012
    6. ' ' → logprob: -15.548602104187012
    7. ' =)' → logprob: -15.548602104187012
    8. ')=' → logprob: -16.673601150512695
    9. '＝' → logprob: -16.673601150512695
    10. '<|end|>' → logprob: -17.298601150512695

Token 192: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.25192955136299133
    2. ' mid' → logprob: -1.501929521560669
    3. '[mid' → logprob: -15.37692928314209
    4. '(mid' → logprob: -15.37692928314209
    5. '_mid' → logprob: -17.126930236816406
    6. '
' → logprob: -17.751930236816406
    7. ' midpoint' → logprob: -18.001930236816406
    8. ' ' → logprob: -18.376930236816406
    9. 'm' → logprob: -19.251930236816406
    10. '.mid' → logprob: -19.251930236816406

Token 193: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.008157730102539
    2. ' else' → logprob: -1.383157730102539
    3. 'else' → logprob: -1.758157730102539
    4. ' 
' → logprob: -2.258157730102539
    5. '       ' → logprob: -2.633157730102539
    6. '  
' → logprob: -4.508157730102539
    7. '<|end|>' → logprob: -4.508157730102539
    8. '    
' → logprob: -5.133157730102539
    9. '        
' → logprob: -5.883157730102539
    10. ' ' → logprob: -6.883157730102539

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027758227661252022
    2. ' else' → logprob: -4.0277581214904785
    3. '
' → logprob: -5.4027581214904785
    4. 'else' → logprob: -5.6527581214904785
    5. ' 
' → logprob: -6.9027581214904785
    6. '   ' → logprob: -8.277758598327637
    7. '  
' → logprob: -9.402758598327637
    8. '    
' → logprob: -9.527758598327637
    9. ' ' → logprob: -10.527758598327637
    10. '        
' → logprob: -10.527758598327637

Token 195: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2699204683303833
    2. 'else' (adapté à ' else') → logprob: -2.0199203491210938
    3. '       ' → logprob: -2.2699203491210938
    4. '   ' → logprob: -7.519920349121094
    5. '	else' → logprob: -10.519920349121094
    6. '    ' → logprob: -13.519920349121094
    7. '  ' → logprob: -13.894920349121094
    8. '	' → logprob: -14.019920349121094
    9. ' ' → logprob: -14.894920349121094
    10. '      ' → logprob: -15.019920349121094

Token 196: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23572427034378052
    2. '           ' → logprob: -1.9857242107391357
    3. ':' → logprob: -2.8607242107391357
    4. '       ' → logprob: -4.485724449157715
    5. ' :
' → logprob: -6.235724449157715
    6. '):
' → logprob: -7.360724449157715
    7. '   ' → logprob: -7.485724449157715
    8. ' :' → logprob: -8.235724449157715
    9. 'left' → logprob: -8.985724449157715
    10. '
' → logprob: -9.235724449157715

Token 197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44081369042396545
    2. '       ' → logprob: -1.065813660621643
    3. 'left' → logprob: -4.9408135414123535
    4. ' left' → logprob: -5.8158135414123535
    5. '   ' → logprob: -6.3158135414123535
    6. '	left' → logprob: -9.940814018249512
    7. '	       ' → logprob: -10.690814018249512
    8. ' ' → logprob: -12.440814018249512
    9. '[left' → logprob: -12.690814018249512
    10. '```' → logprob: -12.690814018249512

Token 198: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.201504647731781
    2. 'left' (adapté à ' left') → logprob: -1.7015047073364258
    3. '	left' → logprob: -9.951504707336426
    4. '           ' → logprob: -11.576504707336426
    5. ' lef' → logprob: -11.576504707336426
    6. '   ' → logprob: -11.826504707336426
    7. '[left' → logprob: -11.951504707336426
    8. '.left' → logprob: -12.826504707336426
    9. '    ' → logprob: -13.076504707336426
    10. '_left' → logprob: -13.451504707336426

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004735803231596947
    2. '=' → logprob: -5.379735946655273
    3. ' +=' → logprob: -9.129735946655273
    4. ' ' → logprob: -12.004735946655273
    5. '+=' → logprob: -14.379735946655273
    6. ' <<=' → logprob: -15.629735946655273
    7. ' =)' → logprob: -16.004735946655273
    8. '<|end|>' → logprob: -16.879735946655273
    9. ')' → logprob: -17.129735946655273
    10. ' *=' → logprob: -17.129735946655273

Token 200: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.6932002305984497
    2. 'mid' → logprob: -0.6932002305984497
    3. ' left' → logprob: -10.69320011138916
    4. 'left' → logprob: -11.44320011138916
    5. '[mid' → logprob: -11.94320011138916
    6. '(mid' → logprob: -12.69320011138916
    7. ' midpoint' → logprob: -12.81820011138916
    8. ' right' → logprob: -13.06820011138916
    9. 'right' → logprob: -13.81820011138916
    10. '+' → logprob: -14.06820011138916

Token 201: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.041038211435079575
    2. '=' → logprob: -3.6660382747650146
    3. ' +=' → logprob: -4.5410380363464355
    4. ' ' → logprob: -6.0410380363464355
    5. ' +' → logprob: -7.1660380363464355
    6. ' left' → logprob: -8.041038513183594
    7. '+' → logprob: -8.291038513183594
    8. '+=' → logprob: -8.791038513183594
    9. 'left' → logprob: -11.666038513183594
    10. ' next' → logprob: -11.666038513183594

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170460251159966
    2. ' ' → logprob: -6.751170635223389
    3. '```' → logprob: -15.62617015838623
    4. '<|end|>' → logprob: -18.376171112060547
    5. '   ' → logprob: -19.126171112060547
    6. '           ' → logprob: -19.251171112060547
    7. '0' → logprob: -20.126171112060547
    8. ' ' → logprob: -20.126171112060547
    9. '       ' → logprob: -20.501171112060547
    10. '`' → logprob: -20.626171112060547

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -17.000001907348633
    4. '   ' → logprob: -19.187501907348633
    5. '0' → logprob: -19.875001907348633
    6. '           ' → logprob: -20.125001907348633
    7. '`' → logprob: -21.000001907348633
    8. '2' → logprob: -21.062501907348633
    9. '``' → logprob: -21.062501907348633
    10. '
' → logprob: -21.125001907348633

Token 204: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3005577027797699
    2. 'print' → logprob: -1.4255577325820923
    3. '   ' → logprob: -5.175557613372803
    4. ' print' → logprob: -5.175557613372803
    5. '    
' → logprob: -5.925557613372803
    6. ' 
' → logprob: -6.300557613372803
    7. '  
' → logprob: -6.550557613372803
    8. '<|end|>' → logprob: -7.425557613372803
    9. '
' → logprob: -7.675557613372803
    10. '' → logprob: -8.175558090209961

Token 205: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006063294131308794
    2. '
' → logprob: -5.881063461303711
    3. ' print' → logprob: -6.131063461303711
    4. '   ' → logprob: -6.881063461303711
    5. '    
' → logprob: -11.131063461303711
    6. '```' → logprob: -11.506063461303711
    7. '(print' → logprob: -12.006063461303711
    8. ' 
' → logprob: -12.131063461303711
    9. '  
' → logprob: -12.381063461303711
    10. ')' → logprob: -12.881063461303711

Token 206: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1875571544806007e-05
    2. ' print' → logprob: -11.500011444091797
    3. '
' → logprob: -13.500011444091797
    4. '```' → logprob: -15.375011444091797
    5. '   ' → logprob: -15.875011444091797
    6. '
' → logprob: -18.125011444091797
    7. '#print' → logprob: -19.125011444091797
    8. '    
' → logprob: -19.125011444091797
    9. '	print' → logprob: -19.625011444091797
    10. '.print' → logprob: -20.375011444091797

Token 207: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -5.438573680294212e-06
    2. 'left' → logprob: -12.250005722045898
    3. '(right' → logprob: -15.125005722045898
    4. '(f' → logprob: -15.750005722045898
    5. '(' → logprob: -16.2500057220459
    6. '[left' → logprob: -18.2500057220459
    7. ' (' → logprob: -18.3750057220459
    8. ',left' → logprob: -18.6250057220459
    9. ' left' → logprob: -19.3750057220459
    10. ':left' → logprob: -19.7500057220459

Token 208: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -12.75000286102295
    3. ')`' → logprob: -16.875003814697266
    4. '))' → logprob: -17.500003814697266
    5. ')
' → logprob: -17.625003814697266
    6. '`)' → logprob: -18.500003814697266
    7. ')}' → logprob: -18.625003814697266
    8. '')' → logprob: -19.250003814697266
    9. '```' → logprob: -19.875003814697266
    10. '),' → logprob: -19.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 206
Tokens correctement prédits (1ère position, stricte): 109
Tokens correctement prédits (1ère position, avec adaptation): 113
Tokens correctement prédits (top 10): 194
Précision stricte (1ère position): 52.91%
Précision adaptée (1ère position): 54.85%
Précision (top 10): 94.17%
================================================================================
