================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    while True:
        N = input()
        if N == '0':
            break
        N = int(N)
        crossings = []
        streets = set()
        ns_streets = set()
        ew_streets = set()
        for _ in range(N):
            c = input()
            crossings.append(c)
            a,b = c.split('-')
            streets.add(a)
            streets.add(b)
        M = int(input())
        questions = []
        for _ in range(M):
            q = input()
            questions.append(q)
            a,b = q.split('-')
            streets.add(a)
            streets.add(b)
        # Build graph of crossings
        # streets are nodes, edges exist if streets cross
        graph = dict()
        for s in streets:
            graph[s] = set()
        # add edges from input crossings
        for c in crossings:
            a,b = c.split('-')
            graph[a].add(b)
            graph[b].add(a)
        # Deduce the orientation of streets by checking types of crossings
        # If two streets cross, one must be NS and the other EW
        # We guess orientation by coloring the graph as bipartite
        color = dict()
        def dfs_color(s, c_col):
            color[s] = c_col
            for neigh in graph[s]:
                if neigh in color:
                    if color[neigh] == c_col:
                        # conflict - not bipartite, but problem says city is Chinese plan so bipartite
                        pass
                else:
                    dfs_color(neigh, 1 - c_col)
        for st in streets:
            if st not in color:
                dfs_color(st, 0)
        for st in streets:
            if color[st] == 0:
                ns_streets.add(st)
            else:
                ew_streets.add(st)

        # Now determine equal strength relation
        # Two streets A and B have equal strength if:
        # (1) both cross the same third street C in the input
        # (2) there is no street D such that D-A and B-D appear in input
        # (3) there is no street E such that A-E and E-B appear in input

        # we consider only streets of the same orientation (equal strength only makes sense for streets in same direction)
        same_dir = [ns_streets, ew_streets]

        equal = dict()  # key: frozenset({A,B}), value: True if equal strength

        # function to check equal strength conditions for two same-direction streets A and B
        def check_equal(A,B):
            # condition (1): exist C such that C-A in input crossings AND C-B in input crossings
            # crossings are in crossings list; due to orientation, C crosses both A and B
            # So C is in other direction, crosses A and B
            # get streets crossing A and B
            crossA = graph[A]
            crossB = graph[B]
            common = crossA & crossB
            if not common:
                return False
            # condition (2):
            # no D such that D-A and B-D in input
            # D-A means edge from D to A
            # B-D means edge from B to D
            # Note that crossings are bidirectional edges in graph
            # To match the directions: in input, they are undirected edges,
            # but here direction matters? The input lines X-Y are ordered crossings. So we treat A-B and B-A differently?
            # The problem states that input crossings like X-Y means a crossing of X and Y, but order is important

            # Build direction edges from input crossings as given (X -> Y)
            # Build directed edges dict from input lines
            dir_edges = dict()
            for c in crossings:
                x,y = c.split('-')
                if x not in dir_edges:
                    dir_edges[x]=set()
                dir_edges[x].add(y)

            # check condition (2):
            # no D with D-A and B-D edges (direction matters)
            # so exist D with edge D->A and edge B->D
            for D in streets:
                if D in dir_edges and A in dir_edges[D]:
                    if B in dir_edges and D in dir_edges[B]:
                        return False
            # condition (3):
            # no E such that A-E and E-B edges exist
            for E in streets:
                if A in dir_edges and E in dir_edges[A]:
                    if E in dir_edges and B in dir_edges[E]:
                        return False
            return True

        # build equal strength sets
        # For all pairs in ns_streets and in ew_streets, check equal strength
        # store relations in union-find structure for equal strength

        parent = dict()
        def find(x):
            while parent[x] != x:
                parent[x] = parent[parent[x]]
                x = parent[x]
            return x
        def union(a,b):
            a=find(a)
            b=find(b)
            if a!=b:
                parent[b]=a

        for st in streets:
            parent[st] = st
        for group in same_dir:
            group_list = list(group)
            for i in range(len(group_list)):
                for j in range(i+1,len(group_list)):
                    A = group_list[i]
                    B = group_list[j]
                    if check_equal(A,B):
                        union(A,B)

        # Build stronger relation graph:
        # A is stronger than B if there is sequence A = A1, A2, ..., An = B with n>=2
        # and for any i in 1 .. n-1 either Ai-Ai+1 is in input crossings or Ai and Ai+1 have equal strength
        # define a graph with nodes as street equivalence classes (equal strength classes)
        # to do so, map each street to its parent (equal strength class),
        # then add edges between classes if there is an input crossing or equal strength connection between their members

        # first create classes mapping
        classes = dict()
        for st in streets:
            p = find(st)
            if p not in classes:
                classes[p] = set()
            classes[p].add(st)

        # build a graph between classes for stronger relation edges
        class_graph = dict()
        class_list = list(classes.keys())
        for c in class_list:
            class_graph[c] = set()

        # helper to get class of a street
        def cclass(s):
            return find(s)

        # input crossing edges (directed as per input)
        dir_edges = dict()
        for c in crossings:
            x,y = c.split('-')
            if x not in dir_edges:
                dir_edges[x] = set()
            dir_edges[x].add(y)

        # Add edges between classes based on input crossing edges
        for x in dir_edges:
            for y in dir_edges[x]:
                cx = cclass(x)
                cy = cclass(y)
                if cx != cy:
                    class_graph[cx].add(cy)

        # Add equal strength edges are handled by classes merging, no edges needed within same class

        # Now, to check if X is stronger than Y, check if class of X can reach class of Y by walking edges or inside equal strength class (already united)

        # For each question:
        # print YES if X and Y are orthogonal (one NS, one EW) and X class can reach Y class by path
        # else NO

        print(len(streets))
        for q in questions:
            X,Y = q.split('-')
            if X not in color or Y not in color:
                print("NO")
                continue
            # must be orthogonal
            if color[X] == color[Y]:
                print("NO")
                continue
            # check reachability from cclass(X) to cclass(Y)
            start = cclass(X)
            goal = cclass(Y)
            visited = set()
            stack = [start]
            found = False
            while stack:
                curr = stack.pop()
                if curr == goal:
                    found = True
                    break
                if curr in visited:
                    continue
                visited.add(curr)
                for nex in class_graph[curr]:
                    if nex not in visited:
                        stack.append(nex)
            print("YES" if found else "NO")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2962415814399719
    2. '\n' → logprob: -2.296241521835327
    3. '   ' → logprob: -2.796241521835327
    4. '(' → logprob: -3.796241521835327
    5. ''' → logprob: -4.046241760253906
    6. '    
' → logprob: -4.296241760253906
    7. '```' → logprob: -4.421241760253906
    8. ' 
' → logprob: -4.671241760253906
    9. ' ' → logprob: -5.546241760253906
    10. '    ' → logprob: -5.796241760253906

Token 4: ' while' (ID: 2049)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.426801472902298
    2. '   ' → logprob: -1.6768014430999756
    3. 'pass' → logprob: -2.4268014430999756
    4. 'p' → logprob: -3.5518014430999756
    5. 'return' → logprob: -4.176801681518555
    6. 'r' → logprob: -4.301801681518555
    7. '#' → logprob: -5.176801681518555
    8. '    ' → logprob: -6.176801681518555
    9. 'a' → logprob: -6.301801681518555
    10. 'n' → logprob: -6.801801681518555

Token 5: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.49563348293304443
    2. ' ' → logprob: -0.9956334829330444
    3. '  ' → logprob: -4.245633602142334
    4. ' not' → logprob: -5.995633602142334
    5. '    ' → logprob: -6.370633602142334
    6. ' (' → logprob: -6.995633602142334
    7. 'True' → logprob: -7.245633602142334
    8. '"' → logprob: -8.495633125305176
    9. ' )' → logprob: -8.870633125305176
    10. '<|end|>' → logprob: -9.245633125305176

Token 6: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005855606868863106
    2. '():' → logprob: -8.125585556030273
    3. ':
' → logprob: -9.500585556030273
    4. ' :' → logprob: -9.750585556030273
    5. '       ' → logprob: -9.750585556030273
    6. '):' → logprob: -10.750585556030273
    7. '(:' → logprob: -11.500585556030273
    8. ':**' → logprob: -11.625585556030273
    9. '```' → logprob: -11.750585556030273
    10. '   ' → logprob: -11.750585556030273

Token 7: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08627413958311081
    2. '        
' → logprob: -2.9612741470336914
    3. '```' → logprob: -4.961274147033691
    4. '\n' → logprob: -5.461274147033691
    5. '(' → logprob: -5.711274147033691
    6. '   ' → logprob: -5.836274147033691
    7. '`' → logprob: -5.961274147033691
    8. '\' → logprob: -6.086274147033691
    9. '    ' → logprob: -6.711274147033691
    10. '    
' → logprob: -6.961274147033691

Token 8: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.268907070159912
    2. '    ' → logprob: -1.518907070159912
    3. '       ' → logprob: -1.768907070159912
    4. 'user' → logprob: -2.768907070159912
    5. 'i' → logprob: -2.893907070159912
    6. 'input' → logprob: -3.143907070159912
    7. ' ' → logprob: -3.393907070159912
    8. '        ' → logprob: -3.643907070159912
    9. 'pass' → logprob: -3.893907070159912
    10. 'n' → logprob: -4.518907070159912

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7513359189033508
    2. 'o' → logprob: -2.251335859298706
    3. ' ' → logprob: -2.626335859298706
    4. '=' → logprob: -2.626335859298706
    5. '  ' → logprob: -2.751335859298706
    6. '   ' → logprob: -2.876335859298706
    7. ' o' → logprob: -3.251335859298706
    8. '.' → logprob: -3.251335859298706
    9. '_' → logprob: -3.751335859298706
    10. '    ' → logprob: -4.626336097717285

Token 10: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6580770611763
    2. ' int' → logprob: -0.7830770611763
    3. 'input' → logprob: -4.033077239990234
    4. 'int' → logprob: -4.908077239990234
    5. ' ' → logprob: -11.283077239990234
    6. '=int' → logprob: -11.783077239990234
    7. ' eval' → logprob: -12.158077239990234
    8. ' randint' → logprob: -12.158077239990234
    9. '<int' → logprob: -12.658077239990234
    10. ' i' → logprob: -12.783077239990234

Token 11: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021058868151158094
    2. '('' → logprob: -6.502105712890625
    3. '("("' → logprob: -8.127105712890625
    4. '()' → logprob: -8.252105712890625
    5. '("")' → logprob: -10.377105712890625
    6. '(`' → logprob: -12.752105712890625
    7. ''' → logprob: -13.502105712890625
    8. ')' → logprob: -13.627105712890625
    9. '```' → logprob: -13.627105712890625
    10. '("' → logprob: -13.627105712890625

Token 12: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8022090792655945
    2. ')' → logprob: -1.8022091388702393
    3. '```' → logprob: -2.4272091388702393
    4. '       ' → logprob: -2.6772091388702393
    5. ' if' → logprob: -2.6772091388702393
    6. ' ' → logprob: -3.5522091388702393
    7. 'if' → logprob: -3.6772091388702393
    8. ''' → logprob: -3.8022091388702393
    9. ' ==' → logprob: -4.67720890045166
    10. '==' → logprob: -4.67720890045166

Token 13: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1904977560043335
    2. ' if' → logprob: -2.190497875213623
    3. 'if' (adapté à ' if') → logprob: -3.815497875213623
    4. ' ' → logprob: -4.940497875213623
    5. '\n' → logprob: -5.190497875213623
    6. '```' → logprob: -5.315497875213623
    7. '.' → logprob: -5.565497875213623
    8. '\' → logprob: -5.940497875213623
    9. '        ' → logprob: -5.940497875213623
    10. ')' → logprob: -6.190497875213623

Token 14: ' N' (ID: 478)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011109715327620506
    2. ' N' → logprob: -4.636109828948975
    3. 'not' → logprob: -6.761109828948975
    4. ' ' → logprob: -8.636109352111816
    5. 'N' → logprob: -11.136109352111816
    6. '  ' → logprob: -13.761109352111816
    7. ' ' → logprob: -14.136109352111816
    8. ')' → logprob: -15.886109352111816
    9. '<|end|>' → logprob: -15.886109352111816
    10. '_not' → logprob: -16.386110305786133

Token 15: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009976706467568874
    2. '==' → logprob: -5.134976863861084
    3. '.' → logprob: -5.759976863861084
    4. ' .' → logprob: -7.884976863861084
    5. '.strip' → logprob: -8.634976387023926
    6. '.is' → logprob: -9.384976387023926
    7. ' =' → logprob: -9.759976387023926
    8. ' ' → logprob: -9.759976387023926
    9. ')' → logprob: -10.759976387023926
    10. '.startswith' → logprob: -10.884976387023926

Token 16: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3400367796421051
    2. '"' → logprob: -1.3400367498397827
    3. '''' → logprob: -4.090036869049072
    4. '""' → logprob: -4.840036869049072
    5. ' '' → logprob: -6.715036869049072
    6. ' "' → logprob: -8.215036392211914
    7. ' ''' → logprob: -8.715036392211914
    8. ' ""' → logprob: -9.715036392211914
    9. ' ' → logprob: -11.215036392211914
    10. ''ex' → logprob: -11.465036392211914

Token 17: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05805905535817146
    2. '0' → logprob: -3.933058977127075
    3. ''\' → logprob: -4.308059215545654
    4. '':' → logprob: -4.683059215545654
    5. '"' → logprob: -5.183059215545654
    6. '\n' → logprob: -5.433059215545654
    7. 'q' → logprob: -6.433059215545654
    8. 'exit' → logprob: -7.058059215545654
    9. '''' → logprob: -8.183058738708496
    10. ''q' → logprob: -8.183058738708496

Token 18: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00488931592553854
    2. ''' → logprob: -5.504889488220215
    3. ':' → logprob: -7.504889488220215
    4. '\n' → logprob: -9.004889488220215
    5. '':
' → logprob: -9.254889488220215
    6. '':
' → logprob: -11.004889488220215
    7. '":' → logprob: -11.379889488220215
    8. ' ':' → logprob: -11.879889488220215
    9. ''):' → logprob: -13.629889488220215
    10. '"' → logprob: -13.879889488220215

Token 19: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04440000280737877
    2. '       ' → logprob: -3.2943999767303467
    3. ' break' → logprob: -5.294400215148926
    4. ':' → logprob: -7.419400215148926
    5. '\n' → logprob: -8.794400215148926
    6. '   ' → logprob: -9.294400215148926
    7. '        ' → logprob: -9.544400215148926
    8. '<|end|>' → logprob: -9.544400215148926
    9. 'break' → logprob: -9.794400215148926
    10. '          ' → logprob: -9.919400215148926

Token 20: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3046194612979889
    2. '           ' → logprob: -1.5546194314956665
    3. '       ' → logprob: -3.054619550704956
    4. 'break' (adapté à ' break') → logprob: -5.554619312286377
    5. '	break' → logprob: -8.679619789123535
    6. '\n' → logprob: -10.054619789123535
    7. '   ' → logprob: -10.429619789123535
    8. '        ' → logprob: -10.929619789123535
    9. '_break' → logprob: -11.179619789123535
    10. '-break' → logprob: -12.179619789123535

Token 21: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13623841106891632
    2. '<|end|>' → logprob: -2.5112383365631104
    3. '\' → logprob: -4.6362385749816895
    4. '\n' → logprob: -4.7612385749816895
    5. '   ' → logprob: -5.1362385749816895
    6. '
' → logprob: -5.3862385749816895
    7. ')' → logprob: -5.8862385749816895
    8. '        
' → logprob: -6.0112385749816895
    9. '```' → logprob: -6.0112385749816895
    10. '    ' → logprob: -6.0112385749816895

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11957787722349167
    2. '<|end|>' → logprob: -2.7445778846740723
    3. '        
' → logprob: -3.9945778846740723
    4. '
' → logprob: -4.119577884674072
    5. '\n' → logprob: -5.119577884674072
    6. '\' → logprob: -6.369577884674072
    7. ')' → logprob: -6.619577884674072
    8. '```' → logprob: -7.244577884674072
    9. '    
' → logprob: -7.369577884674072
    10. '   ' → logprob: -7.494577884674072

Token 23: ' N' (ID: 478)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44432249665260315
    2. ' =' → logprob: -1.0693224668502808
    3. '.' → logprob: -4.56932258605957
    4. '.strip' → logprob: -7.06932258605957
    5. '+' → logprob: -7.19432258605957
    6. '[::-' → logprob: -7.19432258605957
    7. ')' → logprob: -7.56932258605957
    8. '=int' → logprob: -7.69432258605957
    9. '[' → logprob: -7.81932258605957
    10. ',' → logprob: -7.94432258605957

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0015347393928095698
    2. 'int' → logprob: -6.501534938812256
    3. ' list' → logprob: -11.001534461975098
    4. ' N' → logprob: -12.501534461975098
    5. ' len' → logprob: -12.626534461975098
    6. '[int' → logprob: -13.376534461975098
    7. ' input' → logprob: -13.501534461975098
    8. ' ' → logprob: -13.751534461975098
    9. ' ' → logprob: -14.126534461975098
    10. ' float' → logprob: -14.376534461975098

Token 26: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07898573577404022
    2. '(N' → logprob: -2.5789856910705566
    3. '()' → logprob: -9.578986167907715
    4. '('' → logprob: -11.453986167907715
    5. ' (' → logprob: -12.453986167907715
    6. '(
' → logprob: -12.828986167907715
    7. '(`' → logprob: -13.203986167907715
    8. '(

' → logprob: -13.203986167907715
    9. '("("' → logprob: -14.078986167907715
    10. '("")' → logprob: -14.703986167907715

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.618001053633634e-05
    2. ' )' → logprob: -10.625025749206543
    3. ')
' → logprob: -13.750025749206543
    4. '))' → logprob: -16.00002670288086
    5. '   ' → logprob: -16.50002670288086
    6. '#' → logprob: -16.75002670288086
    7. ')#' → logprob: -16.87502670288086
    8. ' ' → logprob: -16.87502670288086
    9. '+' → logprob: -17.50002670288086
    10. ')return' → logprob: -17.50002670288086

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12116733938455582
    2. '<|end|>' → logprob: -2.2461674213409424
    3. ' ' → logprob: -6.121167182922363
    4. '        
' → logprob: -6.246167182922363
    5. '<|end|>' → logprob: -7.121167182922363
    6. '   ' → logprob: -7.121167182922363
    7. '    ' → logprob: -7.496167182922363
    8. '        ' → logprob: -7.621167182922363
    9. ')' → logprob: -8.246167182922363
    10. '      ' → logprob: -8.496167182922363

Token 29: ' crossings' (ID: 199340)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0503613948822021
    2. 's' → logprob: -1.6753613948822021
    3. 'i' → logprob: -1.9253613948822021
    4. 'r' → logprob: -2.550361394882202
    5. 'n' → logprob: -3.300361394882202
    6. '       ' → logprob: -3.550361394882202
    7. ' i' → logprob: -3.925361394882202
    8. '    ' → logprob: -4.050361633300781
    9. 'result' → logprob: -4.175361633300781
    10. '   ' → logprob: -4.300361633300781

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011460978537797928
    2. ' ' → logprob: -5.386460781097412
    3. ' +=' → logprob: -6.011460781097412
    4. '=' → logprob: -6.261460781097412
    5. '_' → logprob: -6.636460781097412
    6. '_count' → logprob: -7.636460781097412
    7. '   ' → logprob: -8.63646125793457
    8. '    ' → logprob: -10.01146125793457
    9. '  ' → logprob: -10.01146125793457
    10. ' _' → logprob: -10.01146125793457

Token 31: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.05495585501194
    2. ' [' → logprob: -3.8049559593200684
    3. '[]' → logprob: -3.8049559593200684
    4. ' ' → logprob: -4.804955959320068
    5. '0' → logprob: -8.17995548248291
    6. '[' → logprob: -8.30495548248291
    7. ' N' → logprob: -9.05495548248291
    8. ' set' → logprob: -10.92995548248291
    9. ' {}' → logprob: -10.92995548248291
    10. ' [[]' → logprob: -11.05495548248291

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3569718301296234
    2. '<|end|>' → logprob: -1.3569718599319458
    3. '   ' → logprob: -4.231971740722656
    4. '    ' → logprob: -4.731971740722656
    5. '        ' → logprob: -5.231971740722656
    6. '\' → logprob: -5.731971740722656
    7. '<|end|>' → logprob: -6.106971740722656
    8. '        
' → logprob: -6.231971740722656
    9. ' ' → logprob: -6.481971740722656
    10. ' for' → logprob: -6.981971740722656

Token 33: ' streets' (ID: 25360)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07555914670228958
    2. '   ' → logprob: -3.700559139251709
    3. '       ' → logprob: -3.825559139251709
    4. ' for' → logprob: -4.200559139251709
    5. '	for' → logprob: -5.700559139251709
    6. '\t' → logprob: -5.950559139251709
    7. ' ' → logprob: -6.450559139251709
    8. '[' → logprob: -6.575559139251709
    9. '    ' → logprob: -7.325559139251709
    10. '	' → logprob: -7.575559139251709

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022796730045229197
    2. '=' → logprob: -6.502279758453369
    3. '.append' → logprob: -8.252279281616211
    4. '[' → logprob: -9.127279281616211
    5. '.' → logprob: -9.252279281616211
    6. '<|end|>' → logprob: -9.752279281616211
    7. '_' → logprob: -10.127279281616211
    8. '=[]' → logprob: -10.377279281616211
    9. '[]' → logprob: -10.377279281616211
    10. '   ' → logprob: -10.377279281616211

Token 35: ' set' (ID: 920)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.128384530544281
    2. '[]' → logprob: -2.128384590148926
    3. ' [' → logprob: -7.378384590148926
    4. ' ' → logprob: -7.753384590148926
    5. '[' → logprob: -8.003384590148926
    6. ' [[]' → logprob: -11.003384590148926
    7. ' []
' → logprob: -11.128384590148926
    8. '[]
' → logprob: -12.003384590148926
    9. '[]}' → logprob: -12.253384590148926
    10. '   ' → logprob: -12.628384590148926

Token 36: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0029685497283935547
    2. '(' → logprob: -5.877968788146973
    3. '([]' → logprob: -10.627968788146973
    4. ' ()' → logprob: -10.752968788146973
    5. '()>' → logprob: -10.877968788146973
    6. '()]' → logprob: -11.002968788146973
    7. '())' → logprob: -11.127968788146973
    8. '(),' → logprob: -11.252968788146973
    9. '()
' → logprob: -11.377968788146973
    10. '()`' → logprob: -12.002968788146973

Token 37: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' ns' (ID: 18343)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '_st' (ID: 2518)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6270968914031982
    2. 't' → logprob: -1.0020968914031982
    3. '=' → logprob: -2.3770968914031982
    4. 'e' → logprob: -6.377097129821777
    5. 'a' → logprob: -7.002097129821777
    6. 'w' → logprob: -7.627097129821777
    7. ',' → logprob: -7.627097129821777
    8. 'g' → logprob: -7.877097129821777
    9. 'u' → logprob: -8.127097129821777
    10. '=[]' → logprob: -8.377097129821777

Token 40: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.1455630511045456
    2. 'r' → logprob: -2.3955631256103516
    3. 'reet' → logprob: -3.7705631256103516
    4. 'ree' → logprob: -4.895563125610352
    5. '_' → logprob: -5.520563125610352
    6. '_re' → logprob: -6.645563125610352
    7. 'rees' → logprob: -6.645563125610352
    8. '=' → logprob: -6.895563125610352
    9. '```' → logprob: -6.895563125610352
    10. 'ream' → logprob: -7.520563125610352

Token 41: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.016249725595116615
    2. 'et' → logprob: -4.141249656677246
    3. 'ects' → logprob: -10.141249656677246
    4. 're' → logprob: -10.516249656677246
    5. 'stre' → logprob: -10.766249656677246
    6. 'e' → logprob: -11.016249656677246
    7. '```' → logprob: -11.266249656677246
    8. 'etsa' → logprob: -11.391249656677246
    9. 'rets' → logprob: -11.891249656677246
    10. 'etc' → logprob: -12.266249656677246

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.527737021446228
    2. '.' → logprob: -1.027737021446228
    3. '=' → logprob: -3.0277371406555176
    4. '.add' → logprob: -6.527737140655518
    5. ',' → logprob: -6.902737140655518
    6. '.=' → logprob: -7.652737140655518
    7. ' .' → logprob: -8.27773666381836
    8. '_' → logprob: -8.52773666381836
    9. ' ' → logprob: -8.90273666381836
    10. '<|end|>' → logprob: -9.15273666381836

Token 43: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3570570945739746
    2. ' set' → logprob: -1.3570570945739746
    3. '[]' → logprob: -3.7320570945739746
    4. ' []' → logprob: -4.357057094573975
    5. '{}' → logprob: -5.232057094573975
    6. ' {}' → logprob: -8.357057571411133
    7. '(set' → logprob: -8.982057571411133
    8. '{' → logprob: -9.107057571411133
    9. '=set' → logprob: -9.357057571411133
    10. '()' → logprob: -9.857057571411133

Token 44: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007807997753843665
    2. '(' → logprob: -7.2507805824279785
    3. ' ()' → logprob: -10.375781059265137
    4. '()
' → logprob: -11.125781059265137
    5. '()\' → logprob: -12.125781059265137
    6. '()]' → logprob: -12.375781059265137
    7. '(),' → logprob: -12.625781059265137
    8. '()>' → logprob: -13.000781059265137
    9. '()

' → logprob: -13.000781059265137
    10. '())' → logprob: -13.875781059265137

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44081631302833557
    2. '<|end|>' → logprob: -1.0658162832260132
    3. '<|end|>' → logprob: -5.315816402435303
    4. '   ' → logprob: -5.815816402435303
    5. ' ' → logprob: -6.565816402435303
    6. '        
' → logprob: -6.940816402435303
    7. '    ' → logprob: -8.190815925598145
    8. 'newline' → logprob: -8.565815925598145
    9. '	' → logprob: -8.690815925598145
    10. '        ' → logprob: -9.065815925598145

Token 46: ' ew' (ID: 64459)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3231469988822937
    2. ' for' → logprob: -1.6981470584869385
    3. '       ' → logprob: -2.5731470584869385
    4. '   ' → logprob: -4.448146820068359
    5. ' ' → logprob: -6.323146820068359
    6. '	for' → logprob: -6.823146820068359
    7. '<|end|>' → logprob: -7.198146820068359
    8. '  ' → logprob: -8.44814682006836
    9. '    ' → logprob: -8.44814682006836
    10. ')' → logprob: -8.69814682006836

Token 47: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.314005047082901
    2. '_' → logprob: -1.3140050172805786
    3. 'stre' → logprob: -7.939004898071289
    4. '_s' → logprob: -8.439004898071289
    5. '_=' → logprob: -9.939004898071289
    6. 'St' → logprob: -10.314004898071289
    7. '_str' → logprob: -10.689004898071289
    8. '=' → logprob: -10.939004898071289
    9. ' =' → logprob: -11.314004898071289
    10. 's' → logprob: -11.939004898071289

Token 48: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.014476092532277107
    2. 'stre' → logprob: -4.389476299285889
    3. 'ree' → logprob: -7.514476299285889
    4. 'reet' → logprob: -7.639476299285889
    5. 'e' → logprob: -8.26447582244873
    6. 'rees' → logprob: -8.38947582244873
    7. '_' → logprob: -9.76447582244873
    8. '_st' → logprob: -10.13947582244873
    9. '_re' → logprob: -10.32697582244873
    10. 'se' → logprob: -10.51447582244873

Token 49: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.002369704656302929
    2. 'stre' → logprob: -6.5023698806762695
    3. 'et' → logprob: -7.3773698806762695
    4. 'e' → logprob: -9.25236988067627
    5. 'ects' → logprob: -10.75236988067627
    6. 'sts' → logprob: -11.12736988067627
    7. '       ' → logprob: -11.12736988067627
    8. 'etsa' → logprob: -11.25236988067627
    9. 'ests' → logprob: -11.25236988067627
    10. '   ' → logprob: -11.50236988067627

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019362468738108873
    2. '=' → logprob: -6.251936435699463
    3. '<|end|>' → logprob: -12.751935958862305
    4. '.add' → logprob: -13.126935958862305
    5. ' ' → logprob: -13.626935958862305
    6. '.' → logprob: -14.501935958862305
    7. '=set' → logprob: -15.626935958862305
    8. ' |=' → logprob: -16.001935958862305
    9. 's' → logprob: -16.001935958862305
    10. ' =)' → logprob: -16.126935958862305

Token 51: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.3134447932243347
    2. 'set' → logprob: -1.3134448528289795
    3. ' []' → logprob: -9.938445091247559
    4. ' ' → logprob: -10.438445091247559
    5. '{}' → logprob: -10.563445091247559
    6. '(set' → logprob: -11.063445091247559
    7. '=set' → logprob: -11.188445091247559
    8. '	set' → logprob: -11.188445091247559
    9. '[]' → logprob: -11.688445091247559
    10. ' {}' → logprob: -11.813445091247559

Token 52: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006333283381536603
    2. '(' → logprob: -7.750633239746094
    3. '()
' → logprob: -8.625633239746094
    4. ' ()' → logprob: -11.625633239746094
    5. '()\' → logprob: -12.500633239746094
    6. '()

' → logprob: -12.625633239746094
    7. ')' → logprob: -13.500633239746094
    8. '()]' → logprob: -13.750633239746094
    9. '   ' → logprob: -14.125633239746094
    10. '()`' → logprob: -14.375633239746094

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5517847537994385
    2. '<|end|>' → logprob: -0.9267847537994385
    3. '   ' → logprob: -4.301784515380859
    4. 'for' → logprob: -5.426784515380859
    5. '<|end|>' → logprob: -5.551784515380859
    6. ' for' → logprob: -5.926784515380859
    7. '
' → logprob: -6.551784515380859
    8. ' ' → logprob: -7.551784515380859
    9. '        
' → logprob: -7.801784515380859
    10. '    ' → logprob: -8.42678451538086

Token 54: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43677160143852234
    2. 'for' (adapté à ' for') → logprob: -1.4367716312408447
    3. '<|end|>' → logprob: -2.5617716312408447
    4. ' for' → logprob: -3.5617716312408447
    5. '   ' → logprob: -5.186771392822266
    6. '<|end|>' → logprob: -6.686771392822266
    7. 'newline' → logprob: -7.561771392822266
    8. '	for' → logprob: -7.811771392822266
    9. '```' → logprob: -7.811771392822266
    10. ' ' → logprob: -8.061771392822266

Token 55: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.012107654474675655
    2. ' i' → logprob: -5.012107849121094
    3. ' ' → logprob: -5.512107849121094
    4. '_' → logprob: -6.637107849121094
    5. 'i' → logprob: -11.262107849121094
    6. ' ' → logprob: -11.387107849121094
    7. ' ‌' → logprob: -13.512107849121094
    8. '_i' → logprob: -14.012107849121094
    9. ' in' → logprob: -14.137107849121094
    10. ' ▁' → logprob: -14.387107849121094

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0027556647546589375
    2. 'in' → logprob: -6.252755641937256
    3. ' ' → logprob: -7.127755641937256
    4. '  ' → logprob: -11.877756118774414
    5. ' _' → logprob: -12.127756118774414
    6. ' i' → logprob: -12.377756118774414
    7. 'i' → logprob: -12.877756118774414
    8. 'range' → logprob: -13.252756118774414
    9. '_' → logprob: -14.127756118774414
    10. 'n' → logprob: -14.752756118774414

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06200813129544258
    2. ' range' → logprob: -2.8120081424713135
    3. ' ' → logprob: -11.062007904052734
    4. 'rang' → logprob: -11.562007904052734
    5. 'ran' → logprob: -12.312007904052734
    6. '	range' → logprob: -12.687007904052734
    7. '  ' → logprob: -13.062007904052734
    8. 'r' → logprob: -13.812007904052734
    9. 'ra' → logprob: -14.062007904052734
    10. '(range' → logprob: -14.187007904052734

Token 58: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.08297962695360184
    2. ' N' → logprob: -3.207979679107666
    3. '(' → logprob: -3.332979679107666
    4. ' (' → logprob: -5.832979679107666
    5. 'N' → logprob: -7.582979679107666
    6. '(n' → logprob: -10.332979202270508
    7. ' ' → logprob: -10.832979202270508
    8. '(int' → logprob: -12.457979202270508
    9. '(range' → logprob: -12.707979202270508
    10. ' range' → logprob: -12.832979202270508

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003012617235071957
    2. ' ):' → logprob: -9.000301361083984
    3. '):
' → logprob: -9.125301361083984
    4. ':' → logprob: -9.875301361083984
    5. ')' → logprob: -12.500301361083984
    6. '():' → logprob: -12.625301361083984
    7. '   ' → logprob: -12.625301361083984
    8. '+' → logprob: -12.875301361083984
    9. ',' → logprob: -13.625301361083984
    10. '):
' → logprob: -14.250301361083984

Token 60: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9379268884658813
    2. '           ' → logprob: -1.5629268884658813
    3. '<|end|>' → logprob: -2.062926769256592
    4. '    ' → logprob: -2.187926769256592
    5. '        ' → logprob: -2.937926769256592
    6. '   ' → logprob: -3.062926769256592
    7. ' ' → logprob: -3.187926769256592
    8. '<|end|>' → logprob: -5.437926769256592
    9. '     ' → logprob: -6.187926769256592
    10. '            ' → logprob: -6.312926769256592

Token 61: ' c' (ID: 274)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1721699982881546
    2. ' s' → logprob: -2.2971699237823486
    3. ' x' → logprob: -4.047170162200928
    4. ' street' → logprob: -4.422170162200928
    5. 'line' → logprob: -5.172170162200928
    6. ' crossing' → logprob: -5.297170162200928
    7. ' data' → logprob: -6.172170162200928
    8. ' ' → logprob: -6.422170162200928
    9. ' parts' → logprob: -6.547170162200928
    10. ' streets' → logprob: -6.547170162200928

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06267455220222473
    2. ',' → logprob: -3.4376745223999023
    3. '=' → logprob: -4.437674522399902
    4. 'ross' → logprob: -4.812674522399902
    5. ' ' → logprob: -5.312674522399902
    6. 'r' → logprob: -7.062674522399902
    7. '   ' → logprob: -7.062674522399902
    8. '  ' → logprob: -7.437674522399902
    9. '=input' → logprob: -7.687674522399902
    10. '1' → logprob: -8.687674522399902

Token 63: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.023534635081887245
    2. 'input' → logprob: -3.8985345363616943
    3. ' list' → logprob: -6.273534774780273
    4. ' ' → logprob: -7.273534774780273
    5. 'list' → logprob: -8.898534774780273
    6. ' tuple' → logprob: -9.148534774780273
    7. ' int' → logprob: -9.523534774780273
    8. ' [' → logprob: -10.398534774780273
    9. 'int' → logprob: -11.398534774780273
    10. '[input' → logprob: -11.648534774780273

Token 64: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017347980756312609
    2. '())' → logprob: -7.251734733581543
    3. '().' → logprob: -7.501734733581543
    4. '(' → logprob: -8.126734733581543
    5. ')' → logprob: -9.251734733581543
    6. '()`' → logprob: -10.751734733581543
    7. '`()' → logprob: -11.501734733581543
    8. '()
' → logprob: -11.751734733581543
    9. ']()' → logprob: -12.001734733581543
    10. '()]' → logprob: -12.251734733581543

Token 65: '           ' (ID: 352)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.029391715303063393
    2. '.' → logprob: -4.529391765594482
    3. '       ' → logprob: -5.029391765594482
    4. '.strip' → logprob: -5.529391765594482
    5. '<|end|>' → logprob: -5.904391765594482
    6. 'split' → logprob: -6.654391765594482
    7. ')' → logprob: -7.029391765594482
    8. ' ' → logprob: -7.279391765594482
    9. ' split' → logprob: -7.779391765594482
    10. '.readline' → logprob: -8.654391288757324

Token 66: ' crossings' (ID: 199340)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.45723390579223633
    2. '        ' → logprob: -2.2072339057922363
    3. 's' → logprob: -3.0822339057922363
    4. '       ' → logprob: -3.7072339057922363
    5. '_' → logprob: -3.8322339057922363
    6. 'split' → logprob: -4.082233905792236
    7. ' ' → logprob: -4.207233905792236
    8. ')' → logprob: -4.207233905792236
    9. '_split' → logprob: -4.207233905792236
    10. '.' → logprob: -4.582233905792236

Token 67: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.160328209400177
    2. '.' → logprob: -1.9103281497955322
    3. ' .' → logprob: -9.910327911376953
    4. '.extend' → logprob: -10.160327911376953
    5. '.add' → logprob: -11.660327911376953
    6. '.setdefault' → logprob: -13.160327911376953
    7. '.ap' → logprob: -13.660327911376953
    8. '.split' → logprob: -13.785327911376953
    9. ' =' → logprob: -14.285327911376953
    10. '.=' → logprob: -14.285327911376953

Token 68: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.03811103478074074
    2. '(' → logprob: -3.2881109714508057
    3. '((' → logprob: -9.663110733032227
    4. '(
' → logprob: -13.663110733032227
    5. '('' → logprob: -13.663110733032227
    6. '(tuple' → logprob: -13.788110733032227
    7. '("("' → logprob: -14.538110733032227
    8. ' (' → logprob: -14.788110733032227
    9. '(list' → logprob: -14.913110733032227
    10. '(int' → logprob: -15.538110733032227

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013691288768313825
    2. ')
' → logprob: -9.125137329101562
    3. ' )' → logprob: -11.250137329101562
    4. '))' → logprob: -12.250137329101562
    5. '       ' → logprob: -12.500137329101562
    6. '           ' → logprob: -13.875137329101562
    7. '`)' → logprob: -14.000137329101562
    8. ')

' → logprob: -14.125137329101562
    9. '')' → logprob: -14.250137329101562
    10. ')`' → logprob: -14.375137329101562

Token 70: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31521517038345337
    2. '       ' → logprob: -2.0652151107788086
    3. '<|end|>' → logprob: -2.1902151107788086
    4. '<|end|>' → logprob: -5.065215110778809
    5. '        
' → logprob: -5.690215110778809
    6. '           ' → logprob: -6.065215110778809
    7. ' ' → logprob: -6.190215110778809
    8. '.split' → logprob: -6.315215110778809
    9. ')' → logprob: -6.440215110778809
    10. '```' → logprob: -6.440215110778809

Token 71: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8862332105636597
    2. ' if' → logprob: -1.7612332105636597
    3. ' 
' → logprob: -2.136233329772949
    4. 'if' → logprob: -2.761233329772949
    5. 's' → logprob: -3.011233329772949
    6. ' for' → logprob: -3.261233329772949
    7. 'for' → logprob: -3.511233329772949
    8. '<|end|>' → logprob: -3.886233329772949
    9. '[' → logprob: -4.636233329772949
    10. 'newline' → logprob: -4.761233329772949

Token 72: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07139796763658524
    2. ',' → logprob: -3.1963980197906494
    3. ' ' → logprob: -4.19639778137207
    4. '=' → logprob: -5.57139778137207
    5. ' ,' → logprob: -5.57139778137207
    6. 'dd' → logprob: -6.57139778137207
    7. ',b' → logprob: -6.69639778137207
    8. 't' → logprob: -7.82139778137207
    9. '_s' → logprob: -8.57139778137207
    10. '_' → logprob: -8.69639778137207

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04642317444086075
    2. '=' → logprob: -3.2964231967926025
    3. ',' → logprob: -4.796422958374023
    4. ' ,' → logprob: -9.796422958374023
    5. ' ' → logprob: -11.546422958374023
    6. ')' → logprob: -11.921422958374023
    7. ',c' → logprob: -12.046422958374023
    8. ',b' → logprob: -13.296422958374023
    9. ',a' → logprob: -13.921422958374023
    10. ' =
' → logprob: -14.421422958374023

Token 74: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03530138358473778
    2. 'c' → logprob: -4.160301208496094
    3. ' map' → logprob: -4.160301208496094
    4. 'map' → logprob: -5.785301208496094
    5. ' ' → logprob: -8.660301208496094
    6. ' [' → logprob: -9.535301208496094
    7. '[' → logprob: -10.160301208496094
    8. 'b' → logprob: -11.160301208496094
    9. ' =' → logprob: -11.160301208496094
    10. '    ' → logprob: -11.660301208496094

Token 75: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.6361795663833618
    2. '.' → logprob: -0.7611795663833618
    3. ' =' → logprob: -6.761179447174072
    4. ' .' → logprob: -7.136179447174072
    5. '=' → logprob: -7.636179447174072
    6. '.strip' → logprob: -7.636179447174072
    7. 'split' → logprob: -9.01117992401123
    8. '[' → logprob: -9.01117992401123
    9. ',' → logprob: -9.13617992401123
    10. '.replace' → logprob: -9.13617992401123

Token 76: '('-' (ID: 33343)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04994286969304085
    2. '(',' → logprob: -3.549942970275879
    3. '('' → logprob: -4.049942970275879
    4. '(' → logprob: -6.924942970275879
    5. '('-' → logprob: -7.549942970275879
    6. '('.')' → logprob: -7.924942970275879
    7. '(','' → logprob: -8.799942970275879
    8. '('/')' → logprob: -8.924942970275879
    9. '(",' → logprob: -9.674942970275879
    10. '()[' → logprob: -9.799942970275879

Token 77: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.4333864152431488
    2. ')' → logprob: -1.0583864450454712
    3. '1' → logprob: -6.558386325836182
    4. ',' → logprob: -6.933386325836182
    5. '")' → logprob: -7.308386325836182
    6. '>' → logprob: -7.433386325836182
    7. ')>' → logprob: -8.18338680267334
    8. '')}}' → logprob: -8.93338680267334
    9. '`)' → logprob: -9.05838680267334
    10. ''>' → logprob: -9.43338680267334

Token 78: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' streets' (ID: 25360)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8605440855026245
    2. ' ns' → logprob: -0.8605440855026245
    3. 'ns' → logprob: -2.360544204711914
    4. ' a' → logprob: -3.860544204711914
    5. ' streets' → logprob: -4.485544204711914
    6. 'a' → logprob: -4.860544204711914
    7. 'if' → logprob: -4.985544204711914
    8. 'b' → logprob: -6.485544204711914
    9. 'st' → logprob: -6.485544204711914
    10. ' b' → logprob: -6.985544204711914

Token 80: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3163941502571106
    2. '.add' → logprob: -1.3163940906524658
    3. '.update' → logprob: -6.316394329071045
    4. ' .' → logprob: -6.816394329071045
    5. '.setdefault' → logprob: -9.066393852233887
    6. '<|end|>' → logprob: -9.816393852233887
    7. '.union' → logprob: -11.066393852233887
    8. '.=' → logprob: -12.191393852233887
    9. '.append' → logprob: -12.316393852233887
    10. ' ' → logprob: -12.441393852233887

Token 81: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.003824421903118491
    2. '(' → logprob: -5.628824234008789
    3. 'a' → logprob: -8.628824234008789
    4. ' a' → logprob: -10.628824234008789
    5. '(b' → logprob: -11.378824234008789
    6. ' (' → logprob: -11.878824234008789
    7. '('' → logprob: -13.378824234008789
    8. '(s' → logprob: -14.628824234008789
    9. '((' → logprob: -14.753824234008789
    10. '(str' → logprob: -15.878824234008789

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022720585111528635
    2. ')
' → logprob: -6.127272129058838
    3. ' )' → logprob: -9.75227165222168
    4. '<|end|>' → logprob: -11.50227165222168
    5. ')
' → logprob: -11.62727165222168
    6. '           ' → logprob: -13.75227165222168
    7. ' )
' → logprob: -13.75227165222168
    8. '       ' → logprob: -14.12727165222168
    9. '),' → logprob: -14.25227165222168
    10. ',' → logprob: -14.25227165222168

Token 83: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' streets' (ID: 25360)
  Prédit: ' streets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' streets' → logprob: -0.011996233835816383
    2. 'b' → logprob: -5.011996269226074
    3. 'stre' → logprob: -6.011996269226074
    4. ' b' → logprob: -6.011996269226074
    5. ' ' → logprob: -8.136996269226074
    6. '<|end|>' → logprob: -10.511996269226074
    7. ')' → logprob: -11.511996269226074
    8. 's' → logprob: -11.511996269226074
    9. ' Streets' → logprob: -12.011996269226074
    10. ' calles' → logprob: -12.511996269226074

Token 85: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12697944045066833
    2. '.add' → logprob: -2.126979351043701
    3. '<|end|>' → logprob: -10.62697982788086
    4. '.update' → logprob: -11.50197982788086
    5. ' .' → logprob: -11.75197982788086
    6. '.setdefault' → logprob: -12.87697982788086
    7. '.remove' → logprob: -13.00197982788086
    8. '.union' → logprob: -14.37697982788086
    9. '<|end|>' → logprob: -14.37697982788086
    10. '.)' → logprob: -14.50197982788086

Token 86: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00011355629976605996
    2. '(' → logprob: -9.125113487243652
    3. ' (' → logprob: -12.875113487243652
    4. '('' → logprob: -13.875113487243652
    5. ' b' → logprob: -14.250113487243652
    6. 'b' → logprob: -15.125113487243652
    7. '(a' → logprob: -17.12511444091797
    8. ''' → logprob: -17.25011444091797
    9. '(B' → logprob: -17.50011444091797
    10. '	b' → logprob: -17.62511444091797

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002752790169324726
    2. ')
' → logprob: -8.250275611877441
    3. '<|end|>' → logprob: -12.375275611877441
    4. ' )' → logprob: -12.625275611877441
    5. '       ' → logprob: -13.250275611877441
    6. ')

' → logprob: -13.375275611877441
    7. '           ' → logprob: -13.750275611877441
    8. '<|end|>' → logprob: -14.750275611877441
    9. '```' → logprob: -15.375275611877441
    10. '),' → logprob: -15.500275611877441

Token 88: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03996772691607475
    2. '<|end|>' → logprob: -3.7899677753448486
    3. ' ' → logprob: -5.0399675369262695
    4. '<|end|>' → logprob: -6.0399675369262695
    5. '       ' → logprob: -6.6649675369262695
    6. '
' → logprob: -7.0399675369262695
    7. '        ' → logprob: -7.2899675369262695
    8. '            ' → logprob: -7.4149675369262695
    9. '          ' → logprob: -7.5399675369262695
    10. '```' → logprob: -7.5399675369262695

Token 89: ' M' (ID: 391)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011998465284705162
    2. '           ' → logprob: -5.011998653411865
    3. '<|end|>' → logprob: -6.511998653411865
    4. ' if' → logprob: -6.761998653411865
    5. ' for' → logprob: -7.261998653411865
    6. 'if' → logprob: -7.261998653411865
    7. 'for' → logprob: -8.136998176574707
    8. '   ' → logprob: -8.261998176574707
    9. '```' → logprob: -9.011998176574707
    10. ' ' → logprob: -9.511998176574707

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014167741872370243
    2. '=' → logprob: -4.264167785644531
    3. ' ' → logprob: -13.264167785644531
    4. 'space' → logprob: -14.139167785644531
    5. ' ' → logprob: -14.889167785644531
    6. '=int' → logprob: -15.264167785644531
    7. '_' → logprob: -15.889167785644531
    8. '  ' → logprob: -16.01416778564453
    9. ')' → logprob: -16.01416778564453
    10. ',' → logprob: -16.13916778564453

Token 91: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.9033956527709961
    2. ' input' → logprob: -1.278395652770996
    3. 'int' → logprob: -1.403395652770996
    4. 'input' → logprob: -2.653395652770996
    5. ' len' → logprob: -9.653395652770996
    6. 'len' → logprob: -10.153395652770996
    7. ' ' → logprob: -11.028395652770996
    8. '   ' → logprob: -12.278395652770996
    9. '0' → logprob: -12.278395652770996
    10. '  ' → logprob: -13.028395652770996

Token 92: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001605115394340828
    2. '(' → logprob: -8.750160217285156
    3. 'input' → logprob: -13.750160217285156
    4. ' (' → logprob: -14.625160217285156
    5. '()' → logprob: -15.625160217285156
    6. '=input' → logprob: -16.625160217285156
    7. ' input' → logprob: -16.750160217285156
    8. '(
' → logprob: -17.625160217285156
    9. '(in' → logprob: -17.750160217285156
    10. ',input' → logprob: -18.500160217285156

Token 93: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6803863048553467
    2. '()' → logprob: -1.1803863048553467
    3. ')' → logprob: -1.6803863048553467
    4. '()
' → logprob: -9.430386543273926
    5. '(' → logprob: -11.680386543273926
    6. ' ())' → logprob: -11.680386543273926
    7. '())
' → logprob: -11.805386543273926
    8. ' )' → logprob: -12.305386543273926
    9. '();)' → logprob: -12.555386543273926
    10. '))' → logprob: -14.805386543273926

Token 94: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' questions' (ID: 5359)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12166471779346466
    2. 'for' → logprob: -2.3716647624969482
    3. ' for' → logprob: -3.8716647624969482
    4. '<|end|>' → logprob: -8.496665000915527
    5. '	for' → logprob: -8.996665000915527
    6. '   ' → logprob: -10.621665000915527
    7. '<|end|>' → logprob: -12.121665000915527
    8. '```' → logprob: -12.246665000915527
    9. '	' → logprob: -12.871665000915527
    10. '        
' → logprob: -12.871665000915527

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004171714186668396
    2. '=' → logprob: -5.504171848297119
    3. '_' → logprob: -9.754171371459961
    4. ' ' → logprob: -10.754171371459961
    5. '<|end|>' → logprob: -13.254171371459961
    6. ')' → logprob: -13.379171371459961
    7. '<|end|>' → logprob: -13.379171371459961
    8. ',' → logprob: -13.504171371459961
    9. '  ' → logprob: -13.629171371459961
    10. '   ' → logprob: -14.129171371459961

Token 97: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31343406438827515
    2. ' []' → logprob: -1.31343412399292
    3. '[' → logprob: -9.313433647155762
    4. ' [' → logprob: -9.938433647155762
    5. '[input' → logprob: -10.688433647155762
    6. '[]
' → logprob: -12.188433647155762
    7. '[int' → logprob: -13.188433647155762
    8. ' []
' → logprob: -14.063433647155762
    9. '[]}' → logprob: -14.188433647155762
    10. '[]>' → logprob: -14.688433647155762

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3539392054080963
    2. '<|end|>' → logprob: -1.228939175605774
    3. '<|end|>' → logprob: -5.978939056396484
    4. '	' → logprob: -6.603939056396484
    5. ' for' → logprob: -7.353939056396484
    6. 'for' → logprob: -7.603939056396484
    7. '
' → logprob: -9.103939056396484
    8. '   ' → logprob: -9.228939056396484
    9. '	   ' → logprob: -9.853939056396484
    10. '	for' → logprob: -9.978939056396484

Token 99: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5409064888954163
    2. '       ' → logprob: -1.1659064292907715
    3. ' for' → logprob: -2.4159064292907715
    4. '<|end|>' → logprob: -4.1659064292907715
    5. '	for' → logprob: -6.9159064292907715
    6. '<|end|>' → logprob: -8.79090690612793
    7. '	' → logprob: -9.54090690612793
    8. '   ' → logprob: -10.91590690612793
    9. '	   ' → logprob: -11.66590690612793
    10. '[' → logprob: -11.66590690612793

Token 100: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.575968325138092
    2. '_' → logprob: -0.825968325138092
    3. ' ' → logprob: -10.825968742370605
    4. ' i' → logprob: -11.700968742370605
    5. ' ' → logprob: -14.325968742370605
    6. '_i' → logprob: -17.32596778869629
    7. 'i' → logprob: -17.45096778869629
    8. ' _
' → logprob: -18.57596778869629
    9. ' ▁' → logprob: -18.70096778869629
    10. ' in' → logprob: -18.70096778869629

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009121468290686607
    2. 'in' → logprob: -4.884121417999268
    3. 'range' → logprob: -7.634121417999268
    4. ' _' → logprob: -7.759121417999268
    5. ' ' → logprob: -8.009121894836426
    6. ' range' → logprob: -8.384121894836426
    7. '_' → logprob: -10.134121894836426
    8. ' i' → logprob: -13.634121894836426
    9. '_in' → logprob: -15.134121894836426
    10. 's' → logprob: -15.134121894836426

Token 102: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150877207517624
    2. ' range' → logprob: -4.018150806427002
    3. '(range' → logprob: -14.89315128326416
    4. '	range' → logprob: -15.39315128326416
    5. 'ran' → logprob: -16.393150329589844
    6. ' ' → logprob: -16.768150329589844
    7. 'ange' → logprob: -16.768150329589844
    8. '_range' → logprob: -17.268150329589844
    9. 'rang' → logprob: -17.393150329589844
    10. 'in' → logprob: -17.643150329589844

Token 103: '(M' (ID: 6103)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.42606794834136963
    2. '(M' → logprob: -1.4260679483413696
    3. ' (' → logprob: -2.30106782913208
    4. '(' → logprob: -5.42606782913208
    5. ' ' → logprob: -6.55106782913208
    6. 'M' → logprob: -7.30106782913208
    7. '  ' → logprob: -12.301068305969238
    8. '<|end|>' → logprob: -12.926068305969238
    9. ' ' → logprob: -13.301068305969238
    10. '()' → logprob: -13.301068305969238

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09836885333061218
    2. '):
' → logprob: -2.7233688831329346
    3. ':' → logprob: -3.5983688831329346
    4. ':
' → logprob: -8.098368644714355
    5. ' ):' → logprob: -8.973368644714355
    6. ')' → logprob: -9.348368644714355
    7. '   ' → logprob: -10.223368644714355
    8. ' ):
' → logprob: -10.473368644714355
    9. '       ' → logprob: -10.848368644714355
    10. ',' → logprob: -11.223368644714355

Token 105: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009358525276184082
    2. '   ' → logprob: -4.8843584060668945
    3. '<|end|>' → logprob: -6.5093584060668945
    4. '           ' → logprob: -9.259358406066895
    5. '<|end|>' → logprob: -9.384358406066895
    6. ' questions' → logprob: -11.759358406066895
    7. ' ' → logprob: -11.759358406066895
    8. ',' → logprob: -11.759358406066895
    9. '        
' → logprob: -11.884358406066895
    10. '	       ' → logprob: -12.009358406066895

Token 106: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.08825946599245071
    2. 'q' (adapté à ' q') → logprob: -2.58825945854187
    3. ' question' → logprob: -5.213259696960449
    4. ' questions' → logprob: -6.338259696960449
    5. 'questions' → logprob: -6.838259696960449
    6. 'question' → logprob: -7.338259696960449
    7. ' line' → logprob: -9.08825969696045
    8. '           ' → logprob: -9.21325969696045
    9. '   ' → logprob: -10.08825969696045
    10. ' s' → logprob: -10.58825969696045

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004621303640305996
    2. '=' → logprob: -5.379621505737305
    3. ' ' → logprob: -13.879621505737305
    4. '   ' → logprob: -17.129621505737305
    5. ' =
' → logprob: -17.129621505737305
    6. 's' → logprob: -17.379621505737305
    7. 'u' → logprob: -17.504621505737305
    8. '=input' → logprob: -17.629621505737305
    9. '	' → logprob: -17.879621505737305
    10. ' ' → logprob: -18.129621505737305

Token 108: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740828275680542
    2. ' input' → logprob: -0.9740828275680542
    3. 'int' → logprob: -12.849082946777344
    4. '(input' → logprob: -13.974082946777344
    5. '=input' → logprob: -14.349082946777344
    6. ' int' → logprob: -15.224082946777344
    7. '	input' → logprob: -15.224082946777344
    8. '   ' → logprob: -15.349082946777344
    9. ' ' → logprob: -15.349082946777344
    10. '<input' → logprob: -15.599082946777344

Token 109: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.32654589228332e-05
    2. '())' → logprob: -10.375073432922363
    3. '()
' → logprob: -10.500073432922363
    4. '().' → logprob: -12.125073432922363
    5. '(' → logprob: -13.250073432922363
    6. ')' → logprob: -13.250073432922363
    7. '()

' → logprob: -13.625073432922363
    8. '()`' → logprob: -13.875073432922363
    9. ' ()' → logprob: -14.500073432922363
    10. '();' → logprob: -14.750073432922363

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021465370431542397
    2. '<|end|>' → logprob: -4.021465301513672
    3. '<|end|>' → logprob: -6.021465301513672
    4. '       ' → logprob: -7.521465301513672
    5. ',' → logprob: -9.146465301513672
    6. 'questions' → logprob: -10.146465301513672
    7. ')' → logprob: -10.146465301513672
    8. '          ' → logprob: -10.771465301513672
    9. '   ' → logprob: -10.896465301513672
    10. '            
' → logprob: -10.896465301513672

Token 111: ' questions' (ID: 5359)
  Prédit: 'questions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'questions' (adapté à ' questions') → logprob: -0.44896626472473145
    2. ' questions' → logprob: -1.5739662647247314
    3. '           ' → logprob: -1.9489662647247314
    4. '       ' → logprob: -5.198966026306152
    5. '<|end|>' → logprob: -5.573966026306152
    6. '.questions' → logprob: -7.198966026306152
    7. '   ' → logprob: -7.323966026306152
    8. 'question' → logprob: -8.323966026306152
    9. '<|end|>' → logprob: -8.323966026306152
    10. '/questions' → logprob: -9.198966026306152

Token 112: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014190302230417728
    2. '.' → logprob: -4.264190196990967
    3. 'append' → logprob: -10.639190673828125
    4. '.add' → logprob: -14.264190673828125
    5. ' .' → logprob: -14.764190673828125
    6. '.extend' → logprob: -14.764190673828125
    7. '.app' → logprob: -14.889190673828125
    8. '.Append' → logprob: -15.139190673828125
    9. '.setdefault' → logprob: -15.389190673828125
    10. '_append' → logprob: -15.889190673828125

Token 113: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0024768433067947626
    2. '(' → logprob: -6.002476692199707
    3. ' (' → logprob: -14.502476692199707
    4. '(
' → logprob: -15.502476692199707
    5. '(Q' → logprob: -15.877476692199707
    6. '(s' → logprob: -16.502477645874023
    7. '((' → logprob: -17.127477645874023
    8. '('' → logprob: -17.252477645874023
    9. '(x' → logprob: -17.502477645874023
    10. '(query' → logprob: -17.627477645874023

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8444881536415778e-05
    2. ')
' → logprob: -10.875028610229492
    3. ' )' → logprob: -12.625028610229492
    4. '())' → logprob: -13.375028610229492
    5. '))' → logprob: -13.500028610229492
    6. '       ' → logprob: -13.500028610229492
    7. '()' → logprob: -14.375028610229492
    8. '   ' → logprob: -15.000028610229492
    9. '<|end|>' → logprob: -15.250028610229492
    10. '`)' → logprob: -16.250028610229492

Token 115: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39023858308792114
    2. '<|end|>' → logprob: -1.6402385234832764
    3. ' for' → logprob: -2.6402385234832764
    4. 'for' → logprob: -3.3902385234832764
    5. '   ' → logprob: -5.1402387619018555
    6. '
' → logprob: -5.3902387619018555
    7. ')' → logprob: -5.8902387619018555
    8. '#' → logprob: -5.8902387619018555
    9. '        
' → logprob: -6.1402387619018555
    10. '<|end|>' → logprob: -6.2652387619018555

Token 116: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7508937120437622
    2. '       ' → logprob: -1.5008937120437622
    3. '
' → logprob: -2.8758935928344727
    4. ' a' → logprob: -3.0008935928344727
    5. ' if' → logprob: -3.0008935928344727
    6. 'a' (adapté à ' a') → logprob: -3.3758935928344727
    7. '   ' → logprob: -3.6258935928344727
    8. 'for' → logprob: -3.7508935928344727
    9. '<|end|>' → logprob: -4.000893592834473
    10. '           ' → logprob: -4.375893592834473

Token 117: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.08977418392896652
    2. ',' → logprob: -2.4647741317749023
    3. ' ,' → logprob: -7.964774131774902
    4. ',q' → logprob: -8.964774131774902
    5. ',v' → logprob: -9.464774131774902
    6. ',a' → logprob: -9.714774131774902
    7. ',s' → logprob: -9.839774131774902
    8. 'b' → logprob: -10.214774131774902
    9. ',w' → logprob: -10.339774131774902
    10. ',B' → logprob: -10.589774131774902

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038417715579271317
    2. '=' → logprob: -3.2884178161621094
    3. ',' → logprob: -8.16341781616211
    4. ' ' → logprob: -9.53841781616211
    5. ' ,' → logprob: -11.66341781616211
    6. ')' → logprob: -12.53841781616211
    7. '<|end|>' → logprob: -13.41341781616211
    8. ',q' → logprob: -13.53841781616211
    9. ',c' → logprob: -14.60091781616211
    10. '.' → logprob: -14.85091781616211

Token 119: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.011048882268369198
    2. 'q' → logprob: -4.511048793792725
    3. '	q' → logprob: -15.136049270629883
    4. ' ' → logprob: -15.761049270629883
    5. 'questions' → logprob: -15.761049270629883
    6. '[q' → logprob: -16.261049270629883
    7. '(q' → logprob: -16.886049270629883
    8. '.q' → logprob: -17.136049270629883
    9. ',q' → logprob: -17.386049270629883
    10. ' questions' → logprob: -17.511049270629883

Token 120: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.3955405056476593
    2. '.' → logprob: -2.145540475845337
    3. '=' → logprob: -2.145540475845337
    4. ' =' → logprob: -2.395540475845337
    5. '.=' → logprob: -7.145540714263916
    6. ' .' → logprob: -7.770540714263916
    7. 'split' → logprob: -8.770540237426758
    8. '.s' → logprob: -10.145540237426758
    9. '_split' → logprob: -10.395540237426758
    10. ' ' → logprob: -10.645540237426758

Token 121: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.0051653278060257435
    2. '('' → logprob: -5.505165100097656
    3. '(' → logprob: -7.005165100097656
    4. ''-' → logprob: -9.505165100097656
    5. '('.')' → logprob: -10.130165100097656
    6. '("-' → logprob: -10.755165100097656
    7. '('-',' → logprob: -10.880165100097656
    8. '(',' → logprob: -12.130165100097656
    9. '-' → logprob: -12.505165100097656
    10. '('/')' → logprob: -12.755165100097656

Token 122: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.533456563949585
    2. '')' → logprob: -0.908456563949585
    3. ')
' → logprob: -5.158456802368164
    4. '')
' → logprob: -5.408456802368164
    5. '")' → logprob: -11.408456802368164
    6. ')
' → logprob: -11.533456802368164
    7. '')
' → logprob: -11.908456802368164
    8. '`)' → logprob: -12.283456802368164
    9. ''' → logprob: -12.783456802368164
    10. ',' → logprob: -13.033456802368164

Token 123: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' streets' (ID: 25360)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38049498200416565
    2. 'if' → logprob: -1.6304949522018433
    3. ' ns' → logprob: -2.755495071411133
    4. 'ns' → logprob: -3.630495071411133
    5. ' streets' → logprob: -4.005495071411133
    6. '#' → logprob: -6.130495071411133
    7. ' for' → logprob: -6.255495071411133
    8. ' a' → logprob: -7.005495071411133
    9. 'a' → logprob: -7.130495071411133
    10. 'for' → logprob: -7.505495071411133

Token 125: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22869187593460083
    2. '.add' → logprob: -1.603691816329956
    3. '<|end|>' → logprob: -6.103692054748535
    4. ' .' → logprob: -7.853692054748535
    5. '.update' → logprob: -8.353692054748535
    6. '.setdefault' → logprob: -8.478692054748535
    7. '.remove' → logprob: -9.853692054748535
    8. '.union' → logprob: -10.228692054748535
    9. '<|end|>' → logprob: -10.353692054748535
    10. 'add' → logprob: -11.353692054748535

Token 126: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004661522805690765
    2. '(' → logprob: -5.379661560058594
    3. '('' → logprob: -10.254661560058594
    4. '(b' → logprob: -12.629661560058594
    5. ' (' → logprob: -13.754661560058594
    6. '(A' → logprob: -14.504661560058594
    7. 'a' → logprob: -14.879661560058594
    8. '((' → logprob: -16.004661560058594
    9. '(x' → logprob: -16.129661560058594
    10. '("' → logprob: -16.254661560058594

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030114573892205954
    2. ')
' → logprob: -5.878011226654053
    3. ' )' → logprob: -8.753011703491211
    4. '<|end|>' → logprob: -10.503011703491211
    5. '           ' → logprob: -12.128011703491211
    6. ' )
' → logprob: -12.503011703491211
    7. ')b' → logprob: -13.003011703491211
    8. ')a' → logprob: -13.128011703491211
    9. ')

' → logprob: -13.378011703491211
    10. '
' → logprob: -14.253011703491211

Token 128: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041937120258808136
    2. '<|end|>' → logprob: -3.2919371128082275
    3. '            
' → logprob: -7.041937351226807
    4. '       ' → logprob: -7.166937351226807
    5. ' 
' → logprob: -7.666937351226807
    6. '
' → logprob: -7.791937351226807
    7. ' ' → logprob: -7.791937351226807
    8. '  
' → logprob: -8.541936874389648
    9. '          ' → logprob: -8.791936874389648
    10. '<|end|>' → logprob: -9.291936874389648

Token 129: ' streets' (ID: 25360)
  Prédit: ' streets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' streets' → logprob: -0.5518858432769775
    2. 'b' → logprob: -1.1768858432769775
    3. 'stre' → logprob: -2.1768858432769775
    4. ' b' → logprob: -6.051885604858398
    5. 'spaces' → logprob: -9.676885604858398
    6. 's' → logprob: -11.051885604858398
    7. ' spaces' → logprob: -11.801885604858398
    8. ' Streets' → logprob: -11.926885604858398
    9. 'st' → logprob: -12.176885604858398
    10. '           ' → logprob: -12.301885604858398

Token 130: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.22570639848709106
    2. '.' → logprob: -1.6007063388824463
    3. 'add' → logprob: -8.850706100463867
    4. ' .' → logprob: -9.850706100463867
    5. '.
' → logprob: -10.850706100463867
    6. '.remove' → logprob: -10.975706100463867
    7. '<|end|>' → logprob: -10.975706100463867
    8. '.update' → logprob: -11.350706100463867
    9. '.setdefault' → logprob: -11.725706100463867
    10. ' add' → logprob: -12.600706100463867

Token 131: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0016191228060051799
    2. '(' → logprob: -6.501619338989258
    3. ' (' → logprob: -9.626619338989258
    4. '('' → logprob: -10.001619338989258
    5. '(B' → logprob: -13.126619338989258
    6. 'b' → logprob: -13.876619338989258
    7. '(a' → logprob: -14.251619338989258
    8. ''' → logprob: -14.376619338989258
    9. ')' → logprob: -15.251619338989258
    10. '(space' → logprob: -15.501619338989258

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.481510692741722e-05
    2. '<|end|>' → logprob: -10.25007438659668
    3. ')
' → logprob: -10.50007438659668
    4. '       ' → logprob: -12.50007438659668
    5. ' )' → logprob: -12.87507438659668
    6. '#' → logprob: -14.12507438659668
    7. '')' → logprob: -14.25007438659668
    8. '<|end|>' → logprob: -14.50007438659668
    9. ')return' → logprob: -14.62507438659668
    10. '           ' → logprob: -15.00007438659668

Token 133: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5001698732376099
    2. 'graph' → logprob: -1.6251698732376099
    3. '   ' → logprob: -2.6251697540283203
    4. '#' (adapté à ' #') → logprob: -3.0001697540283203
    5. ' graph' → logprob: -3.7501697540283203
    6. '        
' → logprob: -4.75016975402832
    7. 'n' → logprob: -5.50016975402832
    8. ')' → logprob: -5.50016975402832
    9. ' for' → logprob: -5.87516975402832
    10. '<|end|>' → logprob: -6.12516975402832

Token 135: ' Build' (ID: 10885)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9889713525772095
    2. '#' → logprob: -1.4889713525772095
    3. ' graph' → logprob: -1.4889713525772095
    4. 'adj' → logprob: -3.73897123336792
    5. 'visited' → logprob: -3.98897123336792
    6. 'from' → logprob: -3.98897123336792
    7. ' #' → logprob: -4.11397123336792
    8. 'dist' → logprob: -4.36397123336792
    9. 'distance' → logprob: -4.61397123336792
    10. ' from' → logprob: -4.61397123336792

Token 136: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.19878143072128296
    2. ' adjacency' → logprob: -1.9487814903259277
    3. 'graph' → logprob: -4.073781490325928
    4. '<|end|>' → logprob: -4.698781490325928
    5. ' a' → logprob: -4.948781490325928
    6. '_graph' → logprob: -7.073781490325928
    7. ' an' → logprob: -7.198781490325928
    8. 'adj' → logprob: -7.198781490325928
    9. ' graphs' → logprob: -7.448781490325928
    10. ' adj' → logprob: -7.698781490325928

Token 137: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39832934737205505
    2. '       ' → logprob: -2.523329257965088
    3. ' =' → logprob: -2.648329257965088
    4. ':' → logprob: -2.898329257965088
    5. 'graph' → logprob: -3.523329257965088
    6. '<|end|>' → logprob: -3.523329257965088
    7. ' graph' → logprob: -4.273329257965088
    8. '        
' → logprob: -4.523329257965088
    9. '(graph' → logprob: -5.273329257965088
    10. '=' → logprob: -5.398329257965088

Token 138: ' crossings' (ID: 199340)
  Prédit: ' streets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' streets' → logprob: -0.675193190574646
    2. 'stre' → logprob: -1.675193190574646
    3. ' connections' → logprob: -2.5501933097839355
    4. ' adjacency' → logprob: -2.8001933097839355
    5. 'connections' → logprob: -2.9251933097839355
    6. 'adj' → logprob: -3.3001933097839355
    7. ' intersections' → logprob: -3.5501933097839355
    8. ' crossings' → logprob: -4.3001933097839355
    9. ' neighbors' → logprob: -4.6751933097839355
    10. ' adjacent' → logprob: -4.6751933097839355

Token 139: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5111117362976074
    2. ' graph' → logprob: -1.6361117362976074
    3. '       ' → logprob: -2.1361117362976074
    4. 'graph' → logprob: -3.2611117362976074
    5. '<|end|>' → logprob: -4.136111736297607
    6. '	graph' → logprob: -4.511111736297607
    7. ':' → logprob: -5.011111736297607
    8. ' adjacency' → logprob: -5.386111736297607
    9. ' edges' → logprob: -6.136111736297607
    10. ',' → logprob: -6.636111736297607

Token 140: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33298248052597046
    2. '       ' → logprob: -1.4579825401306152
    3. ':' → logprob: -4.082982540130615
    4. '   ' → logprob: -5.082982540130615
    5. 'graph' → logprob: -5.207982540130615
    6. '<|end|>' → logprob: -5.207982540130615
    7. '        
' → logprob: -5.582982540130615
    8. ' graph' → logprob: -5.707982540130615
    9. ',' → logprob: -6.832982540130615
    10. '    
' → logprob: -6.957982540130615

Token 141: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6363986134529114
    2. ' graph' → logprob: -0.7613986134529114
    3. '       ' → logprob: -6.386398792266846
    4. '	graph' → logprob: -7.011398792266846
    5. 'from' → logprob: -8.136398315429688
    6. ' from' → logprob: -8.261398315429688
    7. '
' → logprob: -8.386398315429688
    8. '   ' → logprob: -9.261398315429688
    9. 'import' → logprob: -9.386398315429688
    10. '_graph' → logprob: -9.761398315429688

Token 142: ' streets' (ID: 25360)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.1277306079864502
    2. 'graph' → logprob: -2.12773060798645
    3. ' from' → logprob: -8.127730369567871
    4. 'from' → logprob: -8.752730369567871
    5. ' adjacency' → logprob: -9.502730369567871
    6. 'g' → logprob: -9.752730369567871
    7. ' adj' → logprob: -9.877730369567871
    8. ' g' → logprob: -10.127730369567871
    9. ' edges' → logprob: -10.252730369567871
    10. 'import' → logprob: -10.877730369567871

Token 143: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2236669957637787
    2. '=' → logprob: -1.973667025566101
    3. '_map' → logprob: -3.9736669063568115
    4. '_neighbors' → logprob: -4.348667144775391
    5. '_graph' → logprob: -4.598667144775391
    6. '_' → logprob: -5.098667144775391
    7. '_adj' → logprob: -5.473667144775391
    8. '_to' → logprob: -5.723667144775391
    9. '_edges' → logprob: -6.223667144775391
    10. '_connections' → logprob: -6.473667144775391

Token 144: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.16899435222148895
    2. 'nodes' → logprob: -2.293994426727295
    3. ' vertices' → logprob: -3.793994426727295
    4. ' edges' → logprob: -3.918994426727295
    5. 'edges' → logprob: -5.418994426727295
    6. ' keys' → logprob: -5.793994426727295
    7. 'vertices' → logprob: -5.918994426727295
    8. ' the' → logprob: -6.793994426727295
    9. 'keys' → logprob: -8.043993949890137
    10. '_nodes' → logprob: -8.793993949890137

Token 145: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05839049071073532
    2. '<|end|>' → logprob: -3.5583903789520264
    3. '       ' → logprob: -4.4333906173706055
    4. 'graph' → logprob: -4.8083906173706055
    5. ',' → logprob: -6.0583906173706055
    6. ' graph' → logprob: -6.1833906173706055
    7. '   ' → logprob: -7.4333906173706055
    8. ',
' → logprob: -7.4333906173706055
    9. '	graph' → logprob: -7.6833906173706055
    10. '<|end|>' → logprob: -8.308390617370605

Token 146: ' edges' (ID: 22569)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.9828351140022278
    2. ' edges' → logprob: -0.9828351140022278
    3. ' neighbors' → logprob: -2.482835054397583
    4. 'graph' → logprob: -2.857835054397583
    5. 'edges' → logprob: -3.107835054397583
    6. 'neighbors' → logprob: -3.482835054397583
    7. ' adjacency' → logprob: -3.982835054397583
    8. 'adj' → logprob: -5.232835292816162
    9. ' adj' → logprob: -5.482835292816162
    10. ' and' → logprob: -6.732835292816162

Token 147: ' exist' (ID: 4310)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008719762787222862
    2. '=' → logprob: -4.7587199211120605
    3. ',' → logprob: -11.008719444274902
    4. ' are' → logprob: -11.133719444274902
    5. ' =
' → logprob: -11.508719444274902
    6. '=[]' → logprob: -11.633719444274902
    7. '   ' → logprob: -11.883719444274902
    8. ' ' → logprob: -12.008719444274902
    9. ')' → logprob: -12.008719444274902
    10. '.' → logprob: -12.383719444274902

Token 148: ' if' (ID: 538)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.1548513025045395
    2. ' if' → logprob: -2.404851198196411
    3. 'between' → logprob: -3.654851198196411
    4. '=' → logprob: -5.27985143661499
    5. ' for' → logprob: -5.52985143661499
    6. ' =' → logprob: -5.65485143661499
    7. 'if' → logprob: -5.65485143661499
    8. ' where' → logprob: -6.15485143661499
    9. '   ' → logprob: -6.27985143661499
    10. ',' → logprob: -6.77985143661499

Token 149: ' streets' (ID: 25360)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.7759465575218201
    2. ' the' → logprob: -1.6509466171264648
    3. ' two' → logprob: -2.275946617126465
    4. ' a' → logprob: -2.400946617126465
    5. ' they' → logprob: -3.400946617126465
    6. ' there' → logprob: -3.400946617126465
    7. ' streets' → logprob: -3.650946617126465
    8. 'a' → logprob: -4.650946617126465
    9. ' these' → logprob: -4.775946617126465
    10. 'stre' → logprob: -5.150946617126465

Token 150: ' cross' (ID: 8088)
  Prédit: ' share'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' share' → logprob: -0.5708245635032654
    2. 'share' → logprob: -1.4458246231079102
    3. ' in' → logprob: -2.19582462310791
    4. ' are' → logprob: -3.44582462310791
    5. 'are' → logprob: -4.57082462310791
    6. ' intersect' → logprob: -4.82082462310791
    7. 'in' → logprob: -5.07082462310791
    8. ' appear' → logprob: -5.32082462310791
    9. ' have' → logprob: -5.44582462310791
    10. 'appear' → logprob: -5.57082462310791

Token 151: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18155287206172943
    2. '       ' → logprob: -2.4315528869628906
    3. ' graph' → logprob: -3.4315528869628906
    4. 'graph' → logprob: -3.4315528869628906
    5. '   ' → logprob: -5.056552886962891
    6. ',' → logprob: -6.556552886962891
    7. '	graph' → logprob: -6.931552886962891
    8. '        
' → logprob: -7.306552886962891
    9. '  
' → logprob: -7.931552886962891
    10. '
' → logprob: -8.05655288696289

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24430285394191742
    2. '
' → logprob: -1.6193028688430786
    3. ' graph' → logprob: -4.994302749633789
    4. '   ' → logprob: -5.494302749633789
    5. '        
' → logprob: -5.744302749633789
    6. 'graph' → logprob: -6.369302749633789
    7. '<|end|>' → logprob: -7.119302749633789
    8. '    
' → logprob: -7.994302749633789
    9. '  
' → logprob: -8.244302749633789
    10. ',' → logprob: -8.369302749633789

Token 153: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.1497683972120285
    2. ' graph' → logprob: -2.399768352508545
    3. '       ' → logprob: -3.649768352508545
    4. '   ' → logprob: -4.274768352508545
    5. '
' → logprob: -5.774768352508545
    6. 'from' → logprob: -6.524768352508545
    7. '	graph' → logprob: -6.649768352508545
    8. 'import' → logprob: -7.024768352508545
    9. ' from' → logprob: -7.524768352508545
    10. '        
' → logprob: -8.524768829345703

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408488392829895
    2. ' =' → logprob: -0.9740848541259766
    3. '={}' → logprob: -12.349084854125977
    4. '[' → logprob: -13.724084854125977
    5. '.setdefault' → logprob: -13.974084854125977
    6. '={' → logprob: -15.099084854125977
    7. ']' → logprob: -15.349084854125977
    8. 's' → logprob: -15.474084854125977
    9. ')' → logprob: -15.474084854125977
    10. ' ={' → logprob: -15.599084854125977

Token 155: ' dict' (ID: 11878)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3883630931377411
    2. '{}' → logprob: -1.1383631229400635
    3. 'default' → logprob: -7.138362884521484
    4. ' {' → logprob: -7.388362884521484
    5. ' {}' → logprob: -9.888362884521484
    6. 'dict' → logprob: -11.013362884521484
    7. ' defaultdict' → logprob: -12.263362884521484
    8. 'collections' → logprob: -12.388362884521484
    9. '{}
' → logprob: -14.263362884521484
    10. '{
' → logprob: -14.388362884521484

Token 156: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00286039337515831
    2. '.from' → logprob: -6.6278605461120605
    3. '.setdefault' → logprob: -6.8778605461120605
    4. '(' → logprob: -9.252860069274902
    5. ' ()' → logprob: -9.252860069274902
    6. '()>' → logprob: -9.877860069274902
    7. '()
' → logprob: -10.002860069274902
    8. '([(' → logprob: -10.002860069274902
    9. 'from' → logprob: -10.377860069274902
    10. '()<' → logprob: -10.752860069274902

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24907392263412476
    2. ' for' → logprob: -1.7490739822387695
    3. 'for' → logprob: -3.2490739822387695
    4. '()' → logprob: -6.3740739822387695
    5. '   ' → logprob: -6.7490739822387695
    6. '        
' → logprob: -7.1240739822387695
    7. ')' → logprob: -7.2490739822387695
    8. '()
' → logprob: -7.2490739822387695
    9. '<|end|>' → logprob: -7.2490739822387695
    10. ' 
' → logprob: -7.6240739822387695

Token 158: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2519545555114746
    2. ' for' → logprob: -1.5019545555114746
    3. '       ' → logprob: -10.876955032348633
    4. '   ' → logprob: -12.876955032348633
    5. ' 
' → logprob: -14.001955032348633
    6. ')' → logprob: -14.001955032348633
    7. '<|end|>' → logprob: -14.376955032348633
    8. '
' → logprob: -14.501955032348633
    9. '	for' → logprob: -14.876955032348633
    10. ' ' → logprob: -15.126955032348633

Token 159: ' s' (ID: 265)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.27613717317581177
    2. 'street' → logprob: -1.526137113571167
    3. 's' → logprob: -4.026137351989746
    4. ' s' → logprob: -5.151137351989746
    5. 'st' → logprob: -8.526137351989746
    6. ' st' → logprob: -10.651137351989746
    7. ' node' → logprob: -11.026137351989746
    8. 'stre' → logprob: -11.651137351989746
    9. 'node' → logprob: -11.776137351989746
    10. 'a' → logprob: -12.526137351989746

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04314454644918442
    2. 'in' → logprob: -3.168144464492798
    3. 's' → logprob: -9.793144226074219
    4. 't' → logprob: -10.543144226074219
    5. 'n' → logprob: -10.918144226074219
    6. 'i' → logprob: -11.043144226074219
    7. ' ' → logprob: -11.918144226074219
    8. '_in' → logprob: -12.418144226074219
    9. '_' → logprob: -12.793144226074219
    10. 'tre' → logprob: -12.918144226074219

Token 161: ' streets' (ID: 25360)
  Prédit: ' streets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' streets' → logprob: -0.029753033071756363
    2. 'stre' → logprob: -3.5297529697418213
    3. 'st' → logprob: -13.029752731323242
    4. 'sts' → logprob: -16.029752731323242
    5. 's' → logprob: -16.279752731323242
    6. 'list' → logprob: -16.654752731323242
    7. 'street' → logprob: -18.029752731323242
    8. 'stairs' → logprob: -18.654752731323242
    9. 'str' → logprob: -18.779752731323242
    10. ' list' → logprob: -18.779752731323242

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011712945997714996
    2. ':
' → logprob: -6.751171112060547
    3. '):' → logprob: -14.376171112060547
    4. ' :' → logprob: -16.001171112060547
    5. '):
' → logprob: -16.251171112060547
    6. ':list' → logprob: -16.376171112060547
    7. ',' → logprob: -16.751171112060547
    8. ':
' → logprob: -17.251171112060547
    9. ':

' → logprob: -17.251171112060547
    10. '=' → logprob: -17.251171112060547

Token 163: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8014129400253296
    2. ':
' → logprob: -1.1764129400253296
    3. ':' → logprob: -2.051413059234619
    4. '       ' → logprob: -2.426413059234619
    5. '           ' → logprob: -4.176413059234619
    6. ' graph' → logprob: -5.676413059234619
    7. '(graph' → logprob: -6.176413059234619
    8. '):
' → logprob: -6.301413059234619
    9. '
' → logprob: -7.176413059234619
    10. '	graph' → logprob: -7.551413059234619

Token 164: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.014250123873353004
    2. 'graph' (adapté à ' graph') → logprob: -4.2642502784729
    3. '	graph' → logprob: -9.514249801635742
    4. '(graph' → logprob: -11.514249801635742
    5. '   ' → logprob: -13.139249801635742
    6. '.graph' → logprob: -15.014249801635742
    7. ' ' → logprob: -15.139249801635742
    8. '_graph' → logprob: -16.139249801635742
    9. 'Graph' → logprob: -16.889249801635742
    10. ' ' → logprob: -17.014249801635742

Token 165: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0005541055579669774
    2. '[' → logprob: -7.500554084777832
    3. '[]' → logprob: -15.000554084777832
    4. 's' → logprob: -15.625554084777832
    5. '=' → logprob: -15.750554084777832
    6. ' [' → logprob: -16.25055503845215
    7. ' =' → logprob: -16.50055503845215
    8. '[S' → logprob: -16.75055503845215
    9. ']' → logprob: -17.25055503845215
    10. '[...]' → logprob: -18.00055503845215

Token 166: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.7755875129951164e-05
    2. ']=' → logprob: -10.00004768371582
    3. ' ]' → logprob: -13.12504768371582
    4. ' =' → logprob: -16.50004768371582
    5. ']={' → logprob: -16.62504768371582
    6. '=' → logprob: -16.62504768371582
    7. '']' → logprob: -17.25004768371582
    8. ')' → logprob: -17.62504768371582
    9. '"]' → logprob: -18.12504768371582
    10. '`]' → logprob: -19.00004768371582

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133469223976135
    2. '=' → logprob: -1.3133468627929688
    3. '=[]' → logprob: -10.063346862792969
    4. ']' → logprob: -10.188346862792969
    5. '=set' → logprob: -13.313346862792969
    6. '[]' → logprob: -13.813346862792969
    7. ']=' → logprob: -14.188346862792969
    8. 'set' → logprob: -14.313346862792969
    9. ' ' → logprob: -14.938346862792969
    10. ')' → logprob: -16.06334686279297

Token 168: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.043825022876262665
    2. '[]' → logprob: -3.5438249111175537
    3. ' set' → logprob: -4.293825149536133
    4. ' []' → logprob: -8.043825149536133
    5. '	set' → logprob: -14.043825149536133
    6. ' ' → logprob: -15.168825149536133
    7. '[]}' → logprob: -15.168825149536133
    8. '   ' → logprob: -15.543825149536133
    9. '(set' → logprob: -15.918825149536133
    10. '[]>' → logprob: -15.918825149536133

Token 169: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.750003814697266
    3. '()
' → logprob: -13.750003814697266
    4. '()>' → logprob: -15.375003814697266
    5. '()]' → logprob: -15.625003814697266
    6. '())' → logprob: -15.625003814697266
    7. '()

' → logprob: -15.875003814697266
    8. '(),' → logprob: -16.250003814697266
    9. '()</' → logprob: -16.375003814697266
    10. ' ()' → logprob: -16.625003814697266

Token 170: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5084217190742493
    2. '<|end|>' → logprob: -1.5084216594696045
    3. 'for' → logprob: -2.2584216594696045
    4. '       ' → logprob: -2.8834216594696045
    5. '   ' → logprob: -4.633421897888184
    6. '
' → logprob: -6.258421897888184
    7. '  
' → logprob: -6.508421897888184
    8. ' ' → logprob: -7.008421897888184
    9. '<|end|>' → logprob: -7.258421897888184
    10. '        
' → logprob: -7.633421897888184

Token 172: ' add' (ID: 1147)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003617885522544384
    2. ' for' → logprob: -5.628617763519287
    3. '#' → logprob: -11.753618240356445
    4. 'from' → logprob: -12.253618240356445
    5. '       ' → logprob: -12.503618240356445
    6. '   ' → logprob: -14.378618240356445
    7. '
' → logprob: -15.378618240356445
    8. 'For' → logprob: -15.503618240356445
    9. '```' → logprob: -16.003618240356445
    10. '<|end|>' → logprob: -16.003618240356445

Token 173: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.13728292286396027
    2. ' ' → logprob: -3.7622828483581543
    3. ' for' → logprob: -3.7622828483581543
    4. '<|end|>' → logprob: -3.7622828483581543
    5. 'edges' → logprob: -4.387282848358154
    6. '_edges' → logprob: -4.387282848358154
    7. 's' → logprob: -4.887282848358154
    8. 'ed' → logprob: -5.012282848358154
    9. '   ' → logprob: -5.762282848358154
    10. '<|end|>' → logprob: -5.887282848358154

Token 174: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ' input' (ID: 3422)
  Prédit: ' crossings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crossings' → logprob: -0.6357860565185547
    2. 'cross' → logprob: -0.7607860565185547
    3. 'for' → logprob: -6.010786056518555
    4. ' cross' → logprob: -8.135786056518555
    5. ' for' → logprob: -9.135786056518555
    6. ' crossing' → logprob: -9.635786056518555
    7. ' crossroads' → logprob: -10.135786056518555
    8. '_cross' → logprob: -10.135786056518555
    9. 'Cross' → logprob: -10.260786056518555
    10. '   ' → logprob: -10.510786056518555

Token 176: ' crossings' (ID: 199340)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5249361395835876
    2. '       ' → logprob: -1.7749361991882324
    3. 'for' → logprob: -2.2749361991882324
    4. '<|end|>' → logprob: -2.5249361991882324
    5. '
' → logprob: -3.3999361991882324
    6. '   ' → logprob: -4.149936199188232
    7. '<|end|>' → logprob: -5.899936199188232
    8. '	for' → logprob: -6.149936199188232
    9. '        
' → logprob: -7.399936199188232
    10. '    
' → logprob: -7.649936199188232

Token 177: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2052910327911377
    2. ' for' → logprob: -1.4552910327911377
    3. '<|end|>' → logprob: -1.4552910327911377
    4. '       ' → logprob: -1.7052910327911377
    5. 'for' → logprob: -3.4552910327911377
    6. '   ' → logprob: -4.705290794372559
    7. '<|end|>' → logprob: -5.455290794372559
    8. '        
' → logprob: -6.080290794372559
    9. '    
' → logprob: -6.455290794372559
    10. '  
' → logprob: -6.455290794372559

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5791516304016113
    2. '<|end|>' → logprob: -1.2041516304016113
    3. '
' → logprob: -2.7041516304016113
    4. ' for' → logprob: -3.5791516304016113
    5. '<|end|>' → logprob: -4.579151630401611
    6. '   ' → logprob: -4.579151630401611
    7. '  
' → logprob: -4.829151630401611
    8. '        
' → logprob: -4.954151630401611
    9. '    
' → logprob: -5.829151630401611
    10. 'for' → logprob: -5.954151630401611

Token 179: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5841233134269714
    2. 'for' (adapté à ' for') → logprob: -0.8341233134269714
    3. '       ' → logprob: -4.959123134613037
    4. '   ' → logprob: -7.584123134613037
    5. '<|end|>' → logprob: -7.709123134613037
    6. '
' → logprob: -8.959123611450195
    7. '	for' → logprob: -11.084123611450195
    8. '        
' → logprob: -11.959123611450195
    9. ' 
' → logprob: -12.209123611450195
    10. ' ' → logprob: -12.209123611450195

Token 180: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03933102637529373
    2. 'c' → logprob: -3.5393309593200684
    3. ' a' → logprob: -5.164330959320068
    4. ' crossing' → logprob: -6.539330959320068
    5. 'a' → logprob: -6.789330959320068
    6. ' s' → logprob: -8.164331436157227
    7. 'cross' → logprob: -8.539331436157227
    8. ' (' → logprob: -8.539331436157227
    9. ' cross' → logprob: -8.914331436157227
    10. ' ' → logprob: -9.039331436157227

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006835903041064739
    2. 'in' → logprob: -5.0068359375
    3. ' ' → logprob: -9.3818359375
    4. 's' → logprob: -10.6318359375
    5. 'a' → logprob: -12.6318359375
    6. '  ' → logprob: -13.2568359375
    7. '<|end|>' → logprob: -13.7568359375
    8. 'c' → logprob: -14.1318359375
    9. ')' → logprob: -14.2568359375
    10. '   ' → logprob: -14.3818359375

Token 182: ' crossings' (ID: 199340)
  Prédit: ' crossings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crossings' → logprob: -0.22546781599521637
    2. 'cross' → logprob: -1.6004678010940552
    3. ' crossroads' → logprob: -10.600467681884766
    4. 'c' → logprob: -11.850467681884766
    5. '-cross' → logprob: -12.350467681884766
    6. 'Cross' → logprob: -12.725467681884766
    7. '_cross' → logprob: -12.725467681884766
    8. 'range' → logprob: -12.975467681884766
    9. ' ' → logprob: -13.100467681884766
    10. ' cross' → logprob: -13.225467681884766

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06860754638910294
    2. ':
' → logprob: -2.8186075687408447
    3. '.split' → logprob: -5.943607330322266
    4. ',' → logprob: -6.693607330322266
    5. ' in' → logprob: -7.193607330322266
    6. '):' → logprob: -7.818607330322266
    7. ' =' → logprob: -8.443607330322266
    8. '):
' → logprob: -8.818607330322266
    9. ' a' → logprob: -8.818607330322266
    10. ' :' → logprob: -8.818607330322266

Token 184: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007313412148505449
    2. '       ' → logprob: -5.132313251495361
    3. '    
' → logprob: -7.882313251495361
    4. '<|end|>' → logprob: -8.38231372833252
    5. ',' → logprob: -8.63231372833252
    6. '           ' → logprob: -8.75731372833252
    7. '	   ' → logprob: -9.88231372833252
    8. '    ' → logprob: -9.88231372833252
    9. 'a' → logprob: -10.00731372833252
    10. ' a' → logprob: -10.00731372833252

Token 185: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00021569548698607832
    2. ' a' → logprob: -8.750215530395508
    3. '           ' → logprob: -10.000215530395508
    4. '   ' → logprob: -11.500215530395508
    5. '       ' → logprob: -14.000215530395508
    6. 's' → logprob: -15.375215530395508
    7. '	a' → logprob: -16.125215530395508
    8. 'x' → logprob: -16.250215530395508
    9. 'u' → logprob: -16.750215530395508
    10. 'A' → logprob: -16.875215530395508

Token 186: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.17985834181308746
    2. ',' → logprob: -1.8048583269119263
    3. ' ,' → logprob: -9.679858207702637
    4. 'b' → logprob: -11.054858207702637
    5. ',a' → logprob: -11.179858207702637
    6. ',c' → logprob: -12.429858207702637
    7. ',s' → logprob: -12.679858207702637
    8. ',_' → logprob: -12.929858207702637
    9. ',v' → logprob: -13.679858207702637
    10. '_,' → logprob: -13.679858207702637

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3872222602367401
    2. ' =' → logprob: -1.1372222900390625
    3. ',' → logprob: -8.012222290039062
    4. ',c' → logprob: -12.262222290039062
    5. ' ' → logprob: -12.762222290039062
    6. ' ,' → logprob: -12.762222290039062
    7. 'a' → logprob: -13.262222290039062
    8. ')' → logprob: -13.387222290039062
    9. ',a' → logprob: -13.387222290039062
    10. '=a' → logprob: -13.512222290039062

Token 188: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.005233882926404476
    2. 'c' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.130233764648438
    4. '	c' → logprob: -18.130233764648438
    5. '[c' → logprob: -18.630233764648438
    6. '(c' → logprob: -18.755233764648438
    7. ')c' → logprob: -19.630233764648438
    8. ' ' → logprob: -19.755233764648438
    9. 'map' → logprob: -20.255233764648438
    10. '[' → logprob: -20.380233764648438

Token 189: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0003421375877223909
    2. '.' → logprob: -8.12534236907959
    3. ' .' → logprob: -10.12534236907959
    4. '-' → logprob: -13.00034236907959
    5. 'split' → logprob: -13.12534236907959
    6. '-s' → logprob: -14.50034236907959
    7. '.strip' → logprob: -14.75034236907959
    8. '.replace' → logprob: -15.50034236907959
    9. '           ' → logprob: -15.62534236907959
    10. ' split' → logprob: -15.75034236907959

Token 190: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -4.763666947837919e-05
    2. ''-' → logprob: -10.75004768371582
    3. '(' → logprob: -11.12504768371582
    4. '("-' → logprob: -12.00004768371582
    5. '('' → logprob: -13.12504768371582
    6. '('-',' → logprob: -13.25004768371582
    7. '-' → logprob: -13.50004768371582
    8. ' ('' → logprob: -17.62504768371582
    9. '('.')' → logprob: -18.25004768371582
    10. ' '-'' → logprob: -18.62504768371582

Token 191: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.04467487707734108
    2. '')
' → logprob: -3.169674873352051
    3. ')' → logprob: -6.669674873352051
    4. ' ')' → logprob: -8.91967487335205
    5. '')
' → logprob: -9.41967487335205
    6. '-' → logprob: -9.79467487335205
    7. ' ')
' → logprob: -10.16967487335205
    8. ''' → logprob: -11.04467487335205
    9. ')
' → logprob: -11.04467487335205
    10. ',' → logprob: -11.29467487335205

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05111624673008919
    2. '
' → logprob: -3.1761162281036377
    3. '       ' → logprob: -6.176116466522217
    4. '    
' → logprob: -6.676116466522217
    5. '   ' → logprob: -6.801116466522217
    6. ' 
' → logprob: -7.301116466522217
    7. ')
' → logprob: -7.426116466522217
    8. ' graph' → logprob: -7.676116466522217
    9. 'graph' → logprob: -7.801116466522217
    10. ')' → logprob: -8.051115989685059

Token 193: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.10021431744098663
    2. ' graph' → logprob: -2.3502142429351807
    3. '           ' → logprob: -12.350214004516602
    4. '	graph' → logprob: -12.975214004516602
    5. '   ' → logprob: -14.225214004516602
    6. '(graph' → logprob: -16.3502140045166
    7. '
' → logprob: -17.1002140045166
    8. ' ' → logprob: -17.6002140045166
    9. 'if' → logprob: -17.8502140045166
    10. '_graph' → logprob: -17.9752140045166

Token 194: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -7.941850526549388e-06
    2. '[' → logprob: -12.125007629394531
    3. 'a' → logprob: -13.000007629394531
    4. '[s' → logprob: -16.25000762939453
    5. ' [' → logprob: -17.50000762939453
    6. '\[' → logprob: -17.62500762939453
    7. '```' → logprob: -18.25000762939453
    8. '[A' → logprob: -18.50000762939453
    9. '   ' → logprob: -19.25000762939453
    10. '(a' → logprob: -19.37500762939453

Token 195: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00020461321400944144
    2. '.add' → logprob: -9.125205039978027
    3. ']' → logprob: -9.500205039978027
    4. '.' → logprob: -10.875205039978027
    5. ' ].' → logprob: -13.875205039978027
    6. '[' → logprob: -14.250205039978027
    7. '.]' → logprob: -16.37520408630371
    8. ''].' → logprob: -16.62520408630371
    9. ').' → logprob: -16.87520408630371
    10. '][' → logprob: -17.00020408630371

Token 196: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -3.128163257315464e-07
    2. ' add' → logprob: -15.625
    3. '.add' → logprob: -16.5
    4. 'append' → logprob: -18.375
    5. ')add' → logprob: -19.5
    6. '	add' → logprob: -20.5
    7. 'ad' → logprob: -20.5
    8. 'update' → logprob: -20.5
    9. '```' → logprob: -21.0
    10. '_add' → logprob: -21.0

Token 197: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00017147827020380646
    2. '(' → logprob: -8.750171661376953
    3. 'b' → logprob: -11.250171661376953
    4. ' (' → logprob: -17.625171661376953
    5. ' b' → logprob: -17.750171661376953
    6. '(B' → logprob: -18.875171661376953
    7. '	b' → logprob: -19.125171661376953
    8. '(
' → logprob: -19.500171661376953
    9. ')b' → logprob: -19.750171661376953
    10. '()' → logprob: -20.875171661376953

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004452083958312869
    2. ')
' → logprob: -7.750445365905762
    3. ' )' → logprob: -11.250445365905762
    4. '<|end|>' → logprob: -13.875445365905762
    5. ')

' → logprob: -15.875445365905762
    6. '       ' → logprob: -16.000444412231445
    7. '   ' → logprob: -16.375444412231445
    8. ')
' → logprob: -17.000444412231445
    9. '),' → logprob: -17.000444412231445
    10. ' )
' → logprob: -17.000444412231445

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09637133032083511
    2. '       ' → logprob: -3.2213714122772217
    3. '   ' → logprob: -3.5963714122772217
    4. 'graph' → logprob: -4.221371173858643
    5. ' graph' → logprob: -5.221371173858643
    6. '	graph' → logprob: -6.346371173858643
    7. '
' → logprob: -6.846371173858643
    8. ' ' → logprob: -7.471371173858643
    9. '(graph' → logprob: -7.971371173858643
    10. '               ' → logprob: -8.3463716506958

Token 200: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.4307442307472229
    2. 'graph' (adapté à ' graph') → logprob: -1.0557441711425781
    3. 'a' → logprob: -6.930744171142578
    4. ' a' → logprob: -7.305744171142578
    5. ' 
' → logprob: -8.680744171142578
    6. ' ' → logprob: -8.930744171142578
    7. '(graph' → logprob: -10.555744171142578
    8. ')' → logprob: -11.055744171142578
    9. '	graph' → logprob: -11.305744171142578
    10. '<|end|>' → logprob: -11.430744171142578

Token 201: '[b' (ID: 40800)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0022881142795085907
    2. '[b' → logprob: -6.127288341522217
    3. '[' → logprob: -9.377287864685059
    4. 'a' → logprob: -11.252287864685059
    5. '[s' → logprob: -13.002287864685059
    6. '[c' → logprob: -13.127287864685059
    7. '```' → logprob: -14.752287864685059
    8. 'b' → logprob: -15.502287864685059
    9. '[A' → logprob: -15.502287864685059
    10. '[
' → logprob: -16.002288818359375

Token 202: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0003155625017825514
    2. ').' → logprob: -8.50031566619873
    3. ']' → logprob: -10.00031566619873
    4. '.' → logprob: -10.12531566619873
    5. '.add' → logprob: -10.75031566619873
    6. '}.' → logprob: -13.25031566619873
    7. ' ].' → logprob: -13.50031566619873
    8. '[' → logprob: -14.37531566619873
    9. ')' → logprob: -14.37531566619873
    10. ''].' → logprob: -15.00031566619873

Token 203: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -3.128163257315464e-07
    2. ' add' → logprob: -15.5
    3. '.add' → logprob: -17.625
    4. 'append' → logprob: -18.5
    5. '	add' → logprob: -18.75
    6. '(add' → logprob: -19.0
    7. '   ' → logprob: -19.375
    8. 'a' → logprob: -19.5
    9. '```' → logprob: -19.75
    10. ')add' → logprob: -19.75

Token 204: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -8.995397365652025e-05
    2. '(' → logprob: -9.375089645385742
    3. 'a' → logprob: -12.250089645385742
    4. '(
' → logprob: -15.375089645385742
    5. ' (' → logprob: -17.375089645385742
    6. '(s' → logprob: -19.500089645385742
    7. '(A' → logprob: -20.375089645385742
    8. 's' → logprob: -21.250089645385742
    9. '(

' → logprob: -21.250089645385742
    10. '()' → logprob: -21.375089645385742

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.566264295950532e-05
    2. ')
' → logprob: -9.375085830688477
    3. ' )' → logprob: -14.875085830688477
    4. '<|end|>' → logprob: -15.375085830688477
    5. ')

' → logprob: -16.125085830688477
    6. '       ' → logprob: -17.000085830688477
    7. '}' → logprob: -17.000085830688477
    8. '),' → logprob: -17.500085830688477
    9. '   ' → logprob: -17.750085830688477
    10. ')return' → logprob: -17.875085830688477

Token 206: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7183747291564941
    2. '       ' → logprob: -0.9683747291564941
    3. '<|end|>' → logprob: -2.093374729156494
    4. '        
' → logprob: -5.718374729156494
    5. '<|end|>' → logprob: -5.843374729156494
    6. ' for' → logprob: -7.218374729156494
    7. '    
' → logprob: -7.218374729156494
    8. '   ' → logprob: -7.218374729156494
    9. 'for' → logprob: -8.218374252319336
    10. '  
' → logprob: -8.718374252319336

Token 207: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6958675980567932
    2. '       ' → logprob: -0.9458675980567932
    3. ' for' → logprob: -3.0708675384521484
    4. 'for' → logprob: -3.8208675384521484
    5. '<|end|>' → logprob: -3.8208675384521484
    6. '   ' → logprob: -4.570867538452148
    7. '        
' → logprob: -4.945867538452148
    8. '    
' → logprob: -5.945867538452148
    9. '```' → logprob: -7.070867538452148
    10. '<|end|>' → logprob: -7.445867538452148

Token 208: ' Ded' (ID: 68390)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.757930338382721
    2. ' for' → logprob: -1.0079302787780762
    3. '#' → logprob: -2.757930278778076
    4. 'def' → logprob: -3.507930278778076
    5. ' answers' → logprob: -3.882930278778076
    6. 'answers' → logprob: -4.257930278778076
    7. 'results' → logprob: -4.507930278778076
    8. 'from' → logprob: -4.632930278778076
    9. ' results' → logprob: -4.757930278778076
    10. ' from' → logprob: -6.382930278778076

Token 209: 'uce' (ID: 20747)
  Prédit: 'uce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uce' → logprob: -0.017739316448569298
    2. 'uplicate' → logprob: -4.392739295959473
    3. 'uct' → logprob: -6.142739295959473
    4. 'up' → logprob: -6.892739295959473
    5. 'u' → logprob: -7.767739295959473
    6. 'ucing' → logprob: -8.142739295959473
    7. '   ' → logprob: -8.517739295959473
    8. 'uc' → logprob: -8.642739295959473
    9. 'upe' → logprob: -8.892739295959473
    10. 'icate' → logprob: -8.892739295959473

Token 210: ' the' (ID: 290)
  Prédit: ' ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ns' → logprob: -0.2117181271314621
    2. 'ns' → logprob: -2.0867180824279785
    3. ' directions' → logprob: -4.4617180824279785
    4. ' north' → logprob: -4.7117180824279785
    5. ' the' → logprob: -4.9617180824279785
    6. ' for' → logprob: -5.0867180824279785
    7. ' NS' → logprob: -5.8367180824279785
    8. 'for' → logprob: -5.9617180824279785
    9. 'north' → logprob: -5.9617180824279785
    10. ' orientation' → logprob: -6.2117180824279785

Token 211: ' orientation' (ID: 29546)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.6978278756141663
    2. ' ns' → logprob: -1.5728278160095215
    3. ' orientation' → logprob: -2.5728278160095215
    4. ' direction' → logprob: -2.9478278160095215
    5. 'direction' → logprob: -3.1978278160095215
    6. ' directions' → logprob: -3.4478278160095215
    7. ' north' → logprob: -4.1978278160095215
    8. 'north' → logprob: -4.3228278160095215
    9. 'orientation' → logprob: -4.5728278160095215
    10. 'n' → logprob: -4.9478278160095215

Token 212: ' of' (ID: 328)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3903839886188507
    2. ' of' → logprob: -1.2653839588165283
    3. 'for' → logprob: -3.6403839588165283
    4. ':' → logprob: -5.515384197235107
    5. '       ' → logprob: -5.765384197235107
    6. '   ' → logprob: -6.140384197235107
    7. '<|end|>' → logprob: -6.765384197235107
    8. 's' → logprob: -6.890384197235107
    9. ' ' → logprob: -6.890384197235107
    10. '#' → logprob: -7.515384197235107

Token 213: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.8127939105033875
    2. ' streets' → logprob: -0.9377939105033875
    3. ' the' → logprob: -2.9377939701080322
    4. ' each' → logprob: -3.4377939701080322
    5. 'the' → logprob: -3.4377939701080322
    6. 'each' → logprob: -3.5627939701080322
    7. ' crossings' → logprob: -4.437793731689453
    8. 'cross' → logprob: -6.062793731689453
    9. ' all' → logprob: -6.437793731689453
    10. 'all' → logprob: -6.437793731689453

Token 214: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10138262808322906
    2. ' for' → logprob: -3.2263827323913574
    3. '<|end|>' → logprob: -3.4763827323913574
    4. '
' → logprob: -4.476382732391357
    5. '   ' → logprob: -6.101382732391357
    6. ',' → logprob: -6.101382732391357
    7. '        
' → logprob: -6.351382732391357
    8. '#' → logprob: -6.476382732391357
    9. ':' → logprob: -6.476382732391357
    10. 'for' → logprob: -6.726382732391357

Token 215: ' checking' (ID: 19141)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.958425760269165
    2. 'checking' → logprob: -1.708425760269165
    3. ' checking' → logprob: -1.958425760269165
    4. ' analyzing' → logprob: -2.083425760269165
    5. 'for' → logprob: -3.833425760269165
    6. 'looking' → logprob: -3.958425760269165
    7. ' for' → logprob: -4.333425521850586
    8. ' iter' → logprob: -4.333425521850586
    9. 'determ' → logprob: -4.458425521850586
    10. ' looking' → logprob: -4.708425521850586

Token 216: ' types' (ID: 6009)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9242419600486755
    2. ' for' → logprob: -1.5492420196533203
    3. ' the' → logprob: -2.2992420196533203
    4. 'if' → logprob: -2.4242420196533203
    5. ' if' → logprob: -3.0492420196533203
    6. 'a' → logprob: -3.1742420196533203
    7. ' a' → logprob: -3.4242420196533203
    8. ''' → logprob: -3.9242420196533203
    9. ' '' → logprob: -4.04924201965332
    10. ''-' → logprob: -4.04924201965332

Token 217: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6483315825462341
    2. ':' → logprob: -1.023331642150879
    3. '   ' → logprob: -3.023331642150879
    4. ' for' → logprob: -3.398331642150879
    5. '
' → logprob: -5.023331642150879
    6. '<|end|>' → logprob: -5.148331642150879
    7. ':
' → logprob: -5.273331642150879
    8. 'for' → logprob: -5.523331642150879
    9. ' if' → logprob: -6.148331642150879
    10. ' of' → logprob: -6.523331642150879

Token 218: ' crossings' (ID: 199340)
  Prédit: ' crossings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crossings' → logprob: -1.0893995761871338
    2. ' the' → logprob: -1.2143995761871338
    3. 'stre' → logprob: -2.464399576187134
    4. 'a' → logprob: -2.714399576187134
    5. ' streets' → logprob: -2.839399576187134
    6. ' a' → logprob: -3.714399576187134
    7. 'the' → logprob: -3.964399576187134
    8. 'cross' → logprob: -4.089399337768555
    9. ' crossing' → logprob: -4.214399337768555
    10. ' input' → logprob: -4.464399337768555

Token 219: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24077671766281128
    2. '       ' → logprob: -1.865776777267456
    3. '<|end|>' → logprob: -2.865776777267456
    4. '<|end|>' → logprob: -7.115776538848877
    5. ' for' → logprob: -8.115777015686035
    6. '        
' → logprob: -8.115777015686035
    7. ':' → logprob: -8.365777015686035
    8. '   ' → logprob: -8.615777015686035
    9. '  
' → logprob: -9.490777015686035
    10. '#' → logprob: -9.865777015686035

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15170159935951233
    2. '
' → logprob: -2.2767016887664795
    3. '<|end|>' → logprob: -3.7767016887664795
    4. '   ' → logprob: -5.0267014503479
    5. ' for' → logprob: -5.1517014503479
    6. '        
' → logprob: -6.5267014503479
    7. '<|end|>' → logprob: -7.7767014503479
    8. '    
' → logprob: -8.901701927185059
    9. 'for' → logprob: -9.026701927185059
    10. '```' → logprob: -9.276701927185059

Token 221: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15767215192317963
    2. '       ' → logprob: -2.032672166824341
    3. 'for' → logprob: -4.282671928405762
    4. '<|end|>' → logprob: -7.907671928405762
    5. '
' → logprob: -8.282671928405762
    6. '   ' → logprob: -9.032671928405762
    7. '        
' → logprob: -9.407671928405762
    8. '        ' → logprob: -9.782671928405762
    9. '#' (adapté à ' #') → logprob: -10.407671928405762
    10. '           ' → logprob: -10.532671928405762

Token 222: ' If' (ID: 1843)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1979527324438095
    2. 'for' → logprob: -1.8229527473449707
    3. '       ' → logprob: -4.447952747344971
    4. ' ns' → logprob: -6.822952747344971
    5. '#' → logprob: -7.072952747344971
    6. 'ns' → logprob: -7.197952747344971
    7. ' orientation' → logprob: -7.322952747344971
    8. ' orientations' → logprob: -7.447952747344971
    9. ' oriented' → logprob: -7.572952747344971
    10. ' #' → logprob: -8.322952270507812

Token 223: ' two' (ID: 1920)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0721403360366821
    2. ' '-'' → logprob: -1.5721403360366821
    3. ''-' → logprob: -1.6971403360366821
    4. ' '' → logprob: -1.9471403360366821
    5. 'a' → logprob: -2.9471402168273926
    6. ''' → logprob: -4.197140216827393
    7. ''a' → logprob: -4.322140216827393
    8. ' all' → logprob: -4.572140216827393
    9. ' len' → logprob: -4.947140216827393
    10. ' any' → logprob: -4.947140216827393

Token 224: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.338866263628006
    2. ' streets' → logprob: -1.3388662338256836
    3. '-st' → logprob: -5.088866233825684
    4. 'ns' → logprob: -5.338866233825684
    5. '-' → logprob: -5.588866233825684
    6. 'st' → logprob: -6.213866233825684
    7. 'north' → logprob: -6.213866233825684
    8. 's' → logprob: -7.213866233825684
    9. 'a' → logprob: -7.588866233825684
    10. ''s' → logprob: -7.838866233825684

Token 225: ' cross' (ID: 8088)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connected' → logprob: -1.949381947517395
    2. ' are' → logprob: -2.0743818283081055
    3. 'are' → logprob: -2.0743818283081055
    4. ' both' → logprob: -2.5743818283081055
    5. ''s' → logprob: -2.8243818283081055
    6. 'both' → logprob: -2.8243818283081055
    7. 'connected' → logprob: -2.8243818283081055
    8. ' in' → logprob: -3.0743818283081055
    9. ' have' → logprob: -3.0743818283081055
    10. 'have' → logprob: -3.4493818283081055

Token 226: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6478775143623352
    2. ' and' → logprob: -1.0228774547576904
    3. ',' → logprob: -3.1478774547576904
    4. ' at' → logprob: -3.7728774547576904
    5. 'with' → logprob: -4.2728776931762695
    6. ' with' → logprob: -4.2728776931762695
    7. ' that' → logprob: -4.5228776931762695
    8. 'that' → logprob: -5.5228776931762695
    9. 'at' → logprob: -5.8978776931762695
    10. 'def' → logprob: -7.7728776931762695

Token 227: ' one' (ID: 1001)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4923713803291321
    2. 'if' → logprob: -1.4923713207244873
    3. '#' → logprob: -2.4923713207244873
    4. 'a' → logprob: -3.7423713207244873
    5. ' and' → logprob: -3.8673713207244873
    6. ' a' → logprob: -4.117371559143066
    7. 'and' → logprob: -4.742371559143066
    8. ' #' → logprob: -5.742371559143066
    9. ' for' → logprob: -6.117371559143066
    10. '...' → logprob: -7.242371559143066

Token 228: ' must' (ID: 2804)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2529449760913849
    2. 'in' → logprob: -2.1279449462890625
    3. '_' → logprob: -3.1279449462890625
    4. ' is' → logprob: -3.8779449462890625
    5. '.endswith' → logprob: -4.8779449462890625
    6. 'is' → logprob: -5.0029449462890625
    7. 's' → logprob: -5.0029449462890625
    8. '<|end|>' → logprob: -5.1279449462890625
    9. '.startswith' → logprob: -6.1279449462890625
    10. ' ends' → logprob: -6.7529449462890625

Token 229: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.39215409755706787
    2. 'be' → logprob: -1.1421540975570679
    3. 'in' → logprob: -6.642154216766357
    4. ' in' → logprob: -6.767154216766357
    5. 'continue' → logprob: -6.767154216766357
    6. ' continue' → logprob: -7.392154216766357
    7. 'end' → logprob: -7.642154216766357
    8. 'start' → logprob: -9.0171537399292
    9. ' end' → logprob: -9.1421537399292
    10. ' have' → logprob: -9.5171537399292

Token 230: ' NS' (ID: 6950)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.5293202996253967
    2. 'north' → logprob: -1.279320240020752
    3. 'in' → logprob: -3.029320240020752
    4. ' ns' → logprob: -4.029320240020752
    5. ' north' → logprob: -4.029320240020752
    6. ' in' → logprob: -4.404320240020752
    7. 'east' → logprob: -5.029320240020752
    8. 'NS' → logprob: -5.154320240020752
    9. 'a' → logprob: -5.154320240020752
    10. '_ns' → logprob: -5.279320240020752

Token 231: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22847220301628113
    2. '_st' → logprob: -2.7284722328186035
    3. '_' → logprob: -2.8534722328186035
    4. '<|end|>' → logprob: -3.4784722328186035
    5. '       ' → logprob: -4.3534722328186035
    6. 'and' → logprob: -4.4784722328186035
    7. ',' → logprob: -4.6034722328186035
    8. ')' → logprob: -5.3534722328186035
    9. ' or' → logprob: -6.1034722328186035
    10. ' if' → logprob: -6.6034722328186035

Token 232: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.17483974993228912
    2. 'one' → logprob: -2.049839735031128
    3. ' the' → logprob: -3.799839735031128
    4. ' one' → logprob: -4.924839973449707
    5. 'other' → logprob: -6.799839973449707
    6. 'another' → logprob: -7.424839973449707
    7. 'not' → logprob: -8.924839973449707
    8. 'if' → logprob: -9.299839973449707
    9. ' another' → logprob: -10.924839973449707
    10. 'only' → logprob: -11.049839973449707

Token 233: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.4290262758731842
    2. ' other' → logprob: -1.0540262460708618
    3. 'else' → logprob: -10.05402660369873
    4. '_other' → logprob: -10.42902660369873
    5. ' else' → logprob: -10.67902660369873
    6. 'Other' → logprob: -10.67902660369873
    7. '```' → logprob: -10.67902660369873
    8. 'another' → logprob: -10.80402660369873
    9. '0' → logprob: -10.80402660369873
    10. ' ' → logprob: -11.30402660369873

Token 234: ' EW' (ID: 143307)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7029181122779846
    2. ' must' → logprob: -1.0779180526733398
    3. 'EW' → logprob: -2.57791805267334
    4. ' EW' → logprob: -2.70291805267334
    5. ' be' → logprob: -4.45291805267334
    6. 'is' → logprob: -5.32791805267334
    7. 'must' → logprob: -5.82791805267334
    8. '<|end|>' → logprob: -8.20291805267334
    9. 'ew' → logprob: -8.57791805267334
    10. ' E' → logprob: -8.70291805267334

Token 235: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17471003532409668
    2. ' for' → logprob: -2.2997100353240967
    3. '
' → logprob: -3.2997100353240967
    4. 'for' → logprob: -4.299710273742676
    5. '<|end|>' → logprob: -4.799710273742676
    6. '        
' → logprob: -7.299710273742676
    7. '<|end|>' → logprob: -8.674710273742676
    8. ',' → logprob: -9.174710273742676
    9. '   ' → logprob: -9.174710273742676
    10. '	for' → logprob: -9.799710273742676

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027953339740633965
    2. '
' → logprob: -3.6529533863067627
    3. '<|end|>' → logprob: -6.777953147888184
    4. ' for' → logprob: -8.527953147888184
    5. '        
' → logprob: -8.902953147888184
    6. '<|end|>' → logprob: -10.027953147888184
    7. '           ' → logprob: -10.277953147888184
    8. ',' → logprob: -10.652953147888184
    9. '   ' → logprob: -10.652953147888184
    10. 'for' → logprob: -11.902953147888184

Token 237: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.397292822599411
    2. 'changed' → logprob: -1.6472928524017334
    3. '       ' → logprob: -2.2722928524017334
    4. ' for' → logprob: -4.647292613983154
    5. ' changed' → logprob: -4.647292613983154
    6. 'visited' → logprob: -5.772292613983154
    7. 'change' → logprob: -6.022292613983154
    8. 'updated' → logprob: -6.522292613983154
    9. 'changes' → logprob: -6.897292613983154
    10. '#' (adapté à ' #') → logprob: -6.897292613983154

Token 238: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3788740336894989
    2. 'changed' → logprob: -1.3788740634918213
    3. ' changed' → logprob: -3.6288740634918213
    4. ' for' → logprob: -4.128873825073242
    5. '       ' → logprob: -4.878873825073242
    6. 'change' → logprob: -5.628873825073242
    7. '#' → logprob: -6.128873825073242
    8. 'visited' → logprob: -6.878873825073242
    9. 'orientation' → logprob: -7.003873825073242
    10. 'queue' → logprob: -7.128873825073242

Token 239: ' guess' (ID: 11915)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4307677745819092
    2. '       ' → logprob: -1.6807677745819092
    3. ' for' → logprob: -2.680767774581909
    4. '#' → logprob: -3.680767774581909
    5. 'ns' → logprob: -4.055768013000488
    6. '   ' → logprob: -4.430768013000488
    7. 'visited' → logprob: -4.805768013000488
    8. '           ' → logprob: -4.930768013000488
    9. 'while' → logprob: -6.055768013000488
    10. 'continue' → logprob: -6.055768013000488

Token 240: ' orientation' (ID: 29546)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6378850340843201
    2. ' if' → logprob: -2.012885093688965
    3. 'for' → logprob: -2.137885093688965
    4. ' a' → logprob: -2.762885093688965
    5. ' that' → logprob: -2.887885093688965
    6. '   ' → logprob: -4.512885093688965
    7. 'if' → logprob: -4.512885093688965
    8. ' first' → logprob: -4.637885093688965
    9. '#' → logprob: -4.887885093688965
    10. ' at' → logprob: -4.887885093688965

Token 241: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19674928486347198
    2. ' for' → logprob: -1.8217493295669556
    3. 'for' → logprob: -5.196749210357666
    4. '   ' → logprob: -5.446749210357666
    5. ' if' → logprob: -5.821749210357666
    6. '        ' → logprob: -7.446749210357666
    7. ':' → logprob: -7.821749210357666
    8. '           ' → logprob: -7.946749210357666
    9. '        
' → logprob: -7.946749210357666
    10. ',' → logprob: -8.071749687194824

Token 242: ' coloring' (ID: 50205)
  Prédit: ' initializing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initializing' → logprob: -1.2580389976501465
    2. ' iter' → logprob: -2.0080389976501465
    3. ' assigning' → logprob: -2.0080389976501465
    4. 'starting' → logprob: -2.5080389976501465
    5. ' picking' → logprob: -2.6330389976501465
    6. 'assign' → logprob: -2.6330389976501465
    7. 'iter' → logprob: -3.6330389976501465
    8. ' adding' → logprob: -3.8830389976501465
    9. ' starting' → logprob: -4.0080389976501465
    10. 'next' → logprob: -4.1330389976501465

Token 243: ' the' (ID: 290)
  Prédit: ' colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' colors' → logprob: -1.1649587154388428
    2. ' color' → logprob: -1.2899587154388428
    3. 'colors' → logprob: -2.0399587154388428
    4. '       ' → logprob: -2.1649587154388428
    5. 'color' → logprob: -2.2899587154388428
    6. ' from' → logprob: -3.7899587154388428
    7. 'from' → logprob: -4.164958953857422
    8. '   ' → logprob: -5.039958953857422
    9. 'def' → logprob: -5.039958953857422
    10. 'visited' → logprob: -5.414958953857422

Token 244: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.401743769645691
    2. ' streets' → logprob: -1.401743769645691
    3. 'stre' → logprob: -1.776743769645691
    4. ' graph' → logprob: -2.0267438888549805
    5. ' next' → logprob: -2.4017438888549805
    6. 'next' → logprob: -2.7767438888549805
    7. 'nodes' → logprob: -4.5267438888549805
    8. 'first' → logprob: -4.6517438888549805
    9. 'street' → logprob: -4.7767438888549805
    10. ' nodes' → logprob: -5.2767438888549805

Token 245: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45237499475479126
    2. 'color' → logprob: -2.5773749351501465
    3. ' color' → logprob: -2.7023749351501465
    4. 'colors' → logprob: -2.8273749351501465
    5. '
' → logprob: -2.9523749351501465
    6. ' colors' → logprob: -3.5773749351501465
    7. ' from' → logprob: -3.8273749351501465
    8. 'from' → logprob: -3.9523749351501465
    9. 'def' → logprob: -4.5773749351501465
    10. '   ' → logprob: -4.5773749351501465

Token 246: ' bip' (ID: 54467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6824279427528381
    2. 'a' → logprob: -0.9324279427528381
    3. ' a' → logprob: -3.0574278831481934
    4. ' bip' → logprob: -3.0574278831481934
    5. 'two' → logprob: -5.807427883148193
    6. ' two' → logprob: -6.307427883148193
    7. '2' → logprob: -7.057427883148193
    8. ' ' → logprob: -7.682427883148193
    9. '```' → logprob: -8.182428359985352
    10. '"' → logprob: -8.807428359985352

Token 247: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.0003971839905716479
    2. 'ar' → logprob: -8.000396728515625
    3. '```' → logprob: -11.500396728515625
    4. '<' → logprob: -12.125396728515625
    5. 'arte' → logprob: -12.375396728515625
    6. 'a' → logprob: -12.375396728515625
    7. 'arti' → logprob: -12.500396728515625
    8. 'article' → logprob: -12.625396728515625
    9. 'part' → logprob: -12.750396728515625
    10. 'арт' → logprob: -13.250396728515625

Token 248: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -2.1888679839321412e-05
    2. 'e' → logprob: -11.875021934509277
    3. 'ate' → logprob: -12.000021934509277
    4. '```' → logprob: -13.000021934509277
    5. ' ite' → logprob: -13.625021934509277
    6. 'itle' → logprob: -14.500021934509277
    7. 'te' → logprob: -14.625021934509277
    8. '...' → logprob: -15.000021934509277
    9. '>' → logprob: -15.000021934509277
    10. '<' → logprob: -15.125021934509277

Token 249: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3686521053314209
    2. 'color' → logprob: -1.993652105331421
    3. '
' → logprob: -2.743652105331421
    4. ' color' → logprob: -3.368652105331421
    5. 'colors' → logprob: -3.368652105331421
    6. '   ' → logprob: -3.993652105331421
    7. ' colors' → logprob: -5.24365234375
    8. 'visited' → logprob: -5.49365234375
    9. 'def' → logprob: -5.86865234375
    10. 'from' → logprob: -5.86865234375

Token 250: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4019070565700531
    2. '       ' → logprob: -1.1519070863723755
    3. '   ' → logprob: -4.901906967163086
    4. ':' → logprob: -5.901906967163086
    5. 'def' → logprob: -6.651906967163086
    6. '        
' → logprob: -6.651906967163086
    7. ':
' → logprob: -7.276906967163086
    8. '    
' → logprob: -7.526906967163086
    9. '  
' → logprob: -8.276906967163086
    10. '```' → logprob: -8.651906967163086

Token 251: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.4505632519721985
    2. 'color' (adapté à ' color') → logprob: -1.7005631923675537
    3. '
' → logprob: -2.8255631923675537
    4. ' colors' → logprob: -3.3255631923675537
    5. 'colors' → logprob: -3.8255631923675537
    6. 'def' → logprob: -3.9505631923675537
    7. ' def' → logprob: -4.950563430786133
    8. 'from' → logprob: -4.950563430786133
    9. 'visited' → logprob: -5.075563430786133
    10. '       ' → logprob: -5.075563430786133

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005239445250481367
    2. '=' → logprob: -5.255239486694336
    3. 's' → logprob: -12.755239486694336
    4. ',' → logprob: -14.005239486694336
    5. '={}' → logprob: -14.505239486694336
    6. '[' → logprob: -15.130239486694336
    7. ')' → logprob: -15.255239486694336
    8. 'ing' → logprob: -15.755239486694336
    9. ' ' → logprob: -15.755239486694336
    10. '(' → logprob: -15.755239486694336

Token 253: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.029779991135001183
    2. 'dict' → logprob: -3.5297799110412598
    3. ' dict' → logprob: -10.529780387878418
    4. '{' → logprob: -13.029780387878418
    5. ' {}' → logprob: -14.779780387878418
    6. '{}
' → logprob: -15.654780387878418
    7. '(dict' → logprob: -17.1547794342041
    8. '{}

' → logprob: -17.2797794342041
    9. '{})' → logprob: -17.4047794342041
    10. '={}' → logprob: -18.1547794342041

Token 254: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005662570474669337
    2. '()
' → logprob: -7.500566482543945
    3. '(' → logprob: -11.875566482543945
    4. '()

' → logprob: -13.125566482543945
    5. ' ()' → logprob: -14.000566482543945
    6. ')' → logprob: -14.625566482543945
    7. '()
' → logprob: -14.750566482543945
    8. '())' → logprob: -15.250566482543945
    9. '()\' → logprob: -15.250566482543945
    10. '(),' → logprob: -15.500566482543945

Token 255: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.454471230506897
    2. ' def' → logprob: -1.204471230506897
    3. '   ' → logprob: -3.3294711112976074
    4. '       ' → logprob: -4.579471111297607
    5. ' for' → logprob: -5.079471111297607
    6. 'from' → logprob: -5.579471111297607
    7. ' stack' → logprob: -5.829471111297607
    8. ' queue' → logprob: -5.954471111297607
    9. ' from' → logprob: -6.579471111297607
    10. 'for' → logprob: -7.204471111297607

Token 256: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2150193154811859
    2. 'from' → logprob: -2.4650192260742188
    3. 'for' → logprob: -2.4650192260742188
    4. ' def' → logprob: -4.340019226074219
    5. ' for' → logprob: -4.840019226074219
    6. ' from' → logprob: -6.590019226074219
    7. 'import' → logprob: -7.465019226074219
    8. '   ' → logprob: -7.965019226074219
    9. 'stack' → logprob: -9.215019226074219
    10. '       ' → logprob: -9.840019226074219

Token 257: ' dfs' (ID: 51252)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.6297401785850525
    2. ' dfs' → logprob: -0.8797401785850525
    3. 'dfs' → logprob: -3.5047402381896973
    4. ' bip' → logprob: -4.754740238189697
    5. ' color' → logprob: -4.879740238189697
    6. 'b' → logprob: -5.254740238189697
    7. 'color' → logprob: -7.379740238189697
    8. ' graph' → logprob: -9.129739761352539
    9. ' ' → logprob: -9.629739761352539
    10. ' is' → logprob: -10.504739761352539

Token 258: '_color' (ID: 15576)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.3871784210205078
    2. '(u' → logprob: -1.3871784210205078
    3. '(s' → logprob: -2.887178421020508
    4. '(v' → logprob: -4.262178421020508
    5. ' (' → logprob: -6.887178421020508
    6. '(' → logprob: -8.637178421020508
    7. 'dfs' → logprob: -9.637178421020508
    8. '(st' → logprob: -9.887178421020508
    9. '(vertex' → logprob: -10.387178421020508
    10. '(x' → logprob: -10.887178421020508

Token 259: '(s' (ID: 1858)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.21534019708633423
    2. '(u' → logprob: -1.9653401374816895
    3. '(s' → logprob: -2.9653401374816895
    4. '(v' → logprob: -6.2153401374816895
    5. '(' → logprob: -10.090340614318848
    6. '(st' → logprob: -10.965340614318848
    7. '(n' → logprob: -11.715340614318848
    8. '(vertex' → logprob: -12.465340614318848
    9. '(
' → logprob: -12.840340614318848
    10. '(city' → logprob: -12.965340614318848

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.704065213445574e-05
    2. ',s' → logprob: -10.125046730041504
    3. ',node' → logprob: -13.125046730041504
    4. ',u' → logprob: -13.375046730041504
    5. ' ,' → logprob: -13.375046730041504
    6. ',v' → logprob: -14.250046730041504
    7. ',color' → logprob: -14.625046730041504
    8. 'u' → logprob: -14.750046730041504
    9. 's' → logprob: -16.50004768371582
    10. ',k' → logprob: -16.62504768371582

Token 261: ' c' (ID: 274)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.15935257077217102
    2. 'c' → logprob: -2.1593525409698486
    3. 'current' → logprob: -4.159352779388428
    4. 'curr' → logprob: -4.409352779388428
    5. 'clr' → logprob: -6.034352779388428
    6. ' col' → logprob: -7.409352779388428
    7. 'cur' → logprob: -7.534352779388428
    8. 'd' → logprob: -8.15935230255127
    9. ' curr' → logprob: -9.15935230255127
    10. ' c' → logprob: -9.28435230255127

Token 262: '_col' (ID: 7255)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39018514752388
    2. '):
' → logprob: -1.1401851177215576
    3. 'olor' → logprob: -5.765185356140137
    4. 'ol' → logprob: -9.140185356140137
    5. '):
' → logprob: -10.390185356140137
    6. '):

' → logprob: -10.765185356140137
    7. ')' → logprob: -12.390185356140137
    8. '   ' → logprob: -13.140185356140137
    9. ':' → logprob: -13.140185356140137
    10. 'OLOR' → logprob: -13.390185356140137

Token 263: '):
' (ID: 1883)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.015206392854452133
    2. '):' → logprob: -4.390206336975098
    3. '):
' → logprob: -6.015206336975098
    4. ')' → logprob: -9.265206336975098
    5. '   ' → logprob: -10.390206336975098
    6. '):

' → logprob: -10.640206336975098
    7. 'o' → logprob: -10.765206336975098
    8. ' or' → logprob: -10.890206336975098
    9. 'olor' → logprob: -11.140206336975098
    10. ':' → logprob: -11.390206336975098

Token 264: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1475639343261719
    2. '       ' → logprob: -1.3975639343261719
    3. '   ' → logprob: -1.5225639343261719
    4. ':
' → logprob: -1.8975639343261719
    5. '
' → logprob: -3.647563934326172
    6. '):
' → logprob: -4.022563934326172
    7. '<|end|>' → logprob: -4.647563934326172
    8. '):' → logprob: -5.522563934326172
    9. '(color' → logprob: -6.647563934326172
    10. ' 
' → logprob: -6.772563934326172

Token 265: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -1.0255986452102661
    2. 'color' (adapté à ' color') → logprob: -1.0255986452102661
    3. '   ' → logprob: -1.2755986452102661
    4. ' if' → logprob: -6.025598526000977
    5. '       ' → logprob: -7.400598526000977
    6. '	color' → logprob: -7.650598526000977
    7. 'if' → logprob: -9.900598526000977
    8. ' ' → logprob: -12.400598526000977
    9. ',color' → logprob: -12.900598526000977
    10. '[color' → logprob: -12.900598526000977

Token 266: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.9862216504407115e-05
    2. '[' → logprob: -12.125020027160645
    3. '=s' → logprob: -12.125020027160645
    4. 's' → logprob: -13.125020027160645
    5. '[S' → logprob: -13.125020027160645
    6. '=' → logprob: -13.125020027160645
    7. ' =' → logprob: -13.500020027160645
    8. ' s' → logprob: -13.750020027160645
    9. '	s' → logprob: -16.750019073486328
    10. '.setdefault' → logprob: -16.750019073486328

Token 267: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010446818545460701
    2. ')' → logprob: -4.885447025299072
    3. ']=' → logprob: -5.885447025299072
    4. '=' → logprob: -10.260446548461914
    5. ')=' → logprob: -11.635446548461914
    6. ' ]' → logprob: -12.010446548461914
    7. '])' → logprob: -12.385446548461914
    8. ' =' → logprob: -13.760446548461914
    9. ' )' → logprob: -14.385446548461914
    10. ',' → logprob: -14.635446548461914

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003177952254191041
    2. ' =' → logprob: -5.753178119659424
    3. ']=' → logprob: -16.253177642822266
    4. ']' → logprob: -16.503177642822266
    5. '=c' → logprob: -17.128177642822266
    6. ')=' → logprob: -18.003177642822266
    7. ')' → logprob: -18.503177642822266
    8. '=

' → logprob: -18.503177642822266
    9. '=}' → logprob: -19.003177642822266
    10. '＝' → logprob: -19.253177642822266

Token 269: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008046258008107543
    2. ' c' → logprob: -7.125804424285889
    3. '   ' → logprob: -15.375804901123047
    4. '	c' → logprob: -18.000804901123047
    5. ' ' → logprob: -18.500804901123047
    6. '1' → logprob: -19.875804901123047
    7. '$c' → logprob: -19.875804901123047
    8. '(c' → logprob: -20.000804901123047
    9. ')c' → logprob: -20.375804901123047
    10. '```' → logprob: -20.625804901123047

Token 270: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -6.8497312895488e-05
    2. 'col' → logprob: -9.750068664550781
    3. '_color' → logprob: -11.625068664550781
    4. '_' → logprob: -14.500068664550781
    5. '_co' → logprob: -14.875068664550781
    6. '_c' → logprob: -16.25006866455078
    7. 'color' → logprob: -16.62506866455078
    8. 'olor' → logprob: -17.00006866455078
    9. '[col' → logprob: -17.25006866455078
    10. '_COL' → logprob: -17.37506866455078

Token 271: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02101861499249935
    2. '           ' → logprob: -4.1460185050964355
    3. '<|end|>' → logprob: -5.6460185050964355
    4. '   ' → logprob: -7.2710185050964355
    5. '       ' → logprob: -7.7710185050964355
    6. ' for' → logprob: -9.396018981933594
    7. '<|end|>' → logprob: -10.021018981933594
    8. '
' → logprob: -10.146018981933594
    9. '    
' → logprob: -10.396018981933594
    10. 'for' → logprob: -10.521018981933594

Token 272: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5266464352607727
    2. '           ' → logprob: -1.026646375656128
    3. '<|end|>' → logprob: -3.401646375656128
    4. '   ' → logprob: -4.651646614074707
    5. '       ' → logprob: -5.526646614074707
    6. ' for' → logprob: -6.651646614074707
    7. '<|end|>' → logprob: -6.901646614074707
    8. '    
' → logprob: -7.401646614074707
    9. '  
' → logprob: -7.776646614074707
    10. ',' → logprob: -8.401646614074707

Token 273: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4773421883583069
    2. 'for' (adapté à ' for') → logprob: -0.9773421883583069
    3. '   ' → logprob: -5.727342128753662
    4. '	for' → logprob: -12.72734260559082
    5. '       ' → logprob: -14.22734260559082
    6. '           ' → logprob: -14.72734260559082
    7. '
' → logprob: -16.97734260559082
    8. '  ' → logprob: -17.10234260559082
    9. ' ' → logprob: -17.47734260559082
    10. '    
' → logprob: -17.60234260559082

Token 274: ' neigh' (ID: 9109)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.45189788937568665
    2. 'nei' → logprob: -1.4518978595733643
    3. 'nbr' → logprob: -2.4518978595733643
    4. 'n' → logprob: -3.9518978595733643
    5. 'ne' → logprob: -3.9518978595733643
    6. 'nb' → logprob: -5.951898097991943
    7. ' nei' → logprob: -6.826898097991943
    8. 'nx' → logprob: -8.076897621154785
    9. 't' → logprob: -8.076897621154785
    10. 'adj' → logprob: -8.701897621154785

Token 275: ' in' (ID: 306)
  Prédit: 'bor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bor' → logprob: -0.6666041612625122
    2. ' in' → logprob: -1.1666041612625122
    3. 'or' → logprob: -1.9166041612625122
    4. 's' → logprob: -4.916604042053223
    5. 'in' → logprob: -5.041604042053223
    6. 'bors' → logprob: -5.041604042053223
    7. 'b' → logprob: -5.791604042053223
    8. 'bour' → logprob: -6.166604042053223
    9. ' ' → logprob: -6.791604042053223
    10. 'ighbor' → logprob: -8.291604042053223

Token 276: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00020354038861114532
    2. ' graph' → logprob: -8.500203132629395
    3. '(graph' → logprob: -17.75020408630371
    4. '	graph' → logprob: -17.87520408630371
    5. '   ' → logprob: -19.87520408630371
    6. ' ' → logprob: -21.00020408630371
    7. '[' → logprob: -22.25020408630371
    8. '  ' → logprob: -22.75020408630371
    9. 'graphic' → logprob: -22.87520408630371
    10. 'graphql' → logprob: -23.25020408630371

Token 277: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -5.512236498361744e-07
    2. 's' → logprob: -14.625000953674316
    3. '[' → logprob: -17.875
    4. ' [' → logprob: -18.0
    5. ' s' → logprob: -18.625
    6. '[S' → logprob: -18.75
    7. '(s' → logprob: -20.0
    8. '[c' → logprob: -20.5
    9. '<s' → logprob: -21.0
    10. '	s' → logprob: -21.0

Token 278: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.11962590366601944
    2. ']:' → logprob: -2.2446258068084717
    3. ']' → logprob: -5.119626045227051
    4. '):
' → logprob: -7.994626045227051
    5. ']:
' → logprob: -8.74462604522705
    6. ':' → logprob: -9.11962604522705
    7. ':
' → logprob: -9.86962604522705
    8. ' ]' → logprob: -9.86962604522705
    9. ']:

' → logprob: -9.99462604522705
    10. '   ' → logprob: -11.86962604522705

Token 279: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004227270372211933
    2. ' if' → logprob: -5.629227161407471
    3. '           ' → logprob: -8.504227638244629
    4. '       ' → logprob: -9.004227638244629
    5. '                
' → logprob: -9.254227638244629
    6. ',' → logprob: -10.254227638244629
    7. ':' → logprob: -10.379227638244629
    8. '```' → logprob: -10.754227638244629
    9. 'if' → logprob: -10.879227638244629
    10. '<|end|>' → logprob: -11.004227638244629

Token 280: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21631452441215515
    2. '               ' → logprob: -1.7163145542144775
    3. 'if' (adapté à ' if') → logprob: -4.216314315795898
    4. '                   ' → logprob: -10.591314315795898
    5. '           ' → logprob: -13.091314315795898
    6. '
' → logprob: -13.091314315795898
    7. '   ' → logprob: -13.466314315795898
    8. ' ' → logprob: -13.466314315795898
    9. '	if' → logprob: -14.341314315795898
    10. '       ' → logprob: -14.341314315795898

Token 281: ' neigh' (ID: 9109)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.07892625778913498
    2. ' neigh' → logprob: -2.5789263248443604
    3. '(ne' → logprob: -11.328926086425781
    4. 'n' → logprob: -11.828926086425781
    5. '   ' → logprob: -12.328926086425781
    6. ' ne' → logprob: -12.703926086425781
    7. 'neq' → logprob: -13.203926086425781
    8. ' ' → logprob: -13.328926086425781
    9. 's' → logprob: -13.953926086425781
    10. '    ' → logprob: -14.328926086425781

Token 282: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.023388266563415527
    2. 'not' → logprob: -3.773388385772705
    3. ' in' → logprob: -9.023387908935547
    4. 'in' → logprob: -11.148387908935547
    5. '	not' → logprob: -12.648387908935547
    6. ')' → logprob: -13.023387908935547
    7. ']' → logprob: -13.273387908935547
    8. ' no' → logprob: -15.398387908935547
    9. 'n't' → logprob: -15.648387908935547
    10. 'n' → logprob: -16.148387908935547

Token 283: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0024756586644798517
    2. ' color' → logprob: -6.002475738525391
    3. '	color' → logprob: -17.00247573852539
    4. '[color' → logprob: -18.12747573852539
    5. '(color' → logprob: -19.00247573852539
    6. ' ' → logprob: -19.37747573852539
    7. 'c' → logprob: -19.75247573852539
    8. '```' → logprob: -20.12747573852539
    9. '   ' → logprob: -20.25247573852539
    10. '.color' → logprob: -20.25247573852539

Token 284: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2626701891422272
    2. 'and' → logprob: -2.2626702785491943
    3. ' and' → logprob: -2.5126702785491943
    4. ':' → logprob: -3.2626702785491943
    5. '==' → logprob: -5.887670040130615
    6. ':return' → logprob: -6.637670040130615
    7. '                   ' → logprob: -7.137670040130615
    8. '):
' → logprob: -7.262670040130615
    9. '               ' → logprob: -7.387670040130615
    10. ':

' → logprob: -7.637670040130615

Token 285: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20688019692897797
    2. ' and' → logprob: -2.5818800926208496
    3. '               ' → logprob: -2.8318800926208496
    4. ':' → logprob: -3.7068800926208496
    5. ':
' → logprob: -3.9568800926208496
    6. 'and' → logprob: -6.20688009262085
    7. ' continue' → logprob: -6.83188009262085
    8. '           ' → logprob: -6.95688009262085
    9. ':return' → logprob: -6.95688009262085
    10. 'continue' → logprob: -7.20688009262085

Token 286: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.234871745109558
    2. '                       ' → logprob: -1.234871745109558
    3. '                   ' → logprob: -1.734871745109558
    4. 'if' (adapté à ' if') → logprob: -2.1098718643188477
    5. ' if' → logprob: -2.3598718643188477
    6. 'and' → logprob: -4.234871864318848
    7. 'continue' → logprob: -5.484871864318848
    8. ' continue' → logprob: -5.859871864318848
    9. '               ' → logprob: -5.859871864318848
    10. ':' → logprob: -8.234871864318848

Token 287: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.005234594456851482
    2. ' color' → logprob: -5.255234718322754
    3. '(color' → logprob: -15.630234718322754
    4. 'c' → logprob: -16.005233764648438
    5. '   ' → logprob: -16.130233764648438
    6. '[color' → logprob: -16.255233764648438
    7. '	color' → logprob: -16.630233764648438
    8. ' ' → logprob: -16.880233764648438
    9. '=color' → logprob: -17.130233764648438
    10. 'colors' → logprob: -17.255233764648438

Token 288: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000627014203928411
    2. '[s' → logprob: -7.375627040863037
    3. 'ne' → logprob: -15.000626564025879
    4. 's' → logprob: -16.625627517700195
    5. ' [' → logprob: -17.625627517700195
    6. '[n' → logprob: -18.125627517700195
    7. '```' → logprob: -18.250627517700195
    8. ' s' → logprob: -18.375627517700195
    9. '(ne' → logprob: -18.500627517700195
    10. '   ' → logprob: -19.375627517700195

Token 289: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.008647187612950802
    2. '[' → logprob: -4.7586469650268555
    3. 's' → logprob: -10.633646965026855
    4. '(ne' → logprob: -13.133646965026855
    5. ' neigh' → logprob: -13.508646965026855
    6. ']' → logprob: -13.633646965026855
    7. 'n' → logprob: -13.758646965026855
    8. 'neq' → logprob: -13.758646965026855
    9. '][' → logprob: -15.133646965026855
    10. '   ' → logprob: -15.758646965026855

Token 290: 'igh' (ID: 1251)
  Prédit: 'igh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igh' → logprob: -0.0020669952500611544
    2. '[' → logprob: -6.3770670890808105
    3. 'gh' → logprob: -8.252066612243652
    4. 'ig' → logprob: -9.377066612243652
    5. 'e' → logprob: -12.377066612243652
    6. '][' → logprob: -12.627066612243652
    7. 'i' → logprob: -12.627066612243652
    8. ']' → logprob: -13.627066612243652
    9. 's' → logprob: -14.377066612243652
    10. '

' → logprob: -14.377066612243652

Token 291: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07773856073617935
    2. '!=' → logprob: -2.9527385234832764
    3. ' ==' → logprob: -4.5777387619018555
    4. ']' → logprob: -5.0777387619018555
    5. ']==' → logprob: -5.3277387619018555
    6. ' !=' → logprob: -6.8277387619018555
    7. ']!=' → logprob: -8.952738761901855
    8. '```' → logprob: -12.202738761901855
    9. '==
' → logprob: -13.327738761901855
    10. '']==' → logprob: -13.452738761901855

Token 292: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.48307493329048157
    2. '==' → logprob: -0.9830749034881592
    3. ' !=' → logprob: -5.108075141906738
    4. ' ==' → logprob: -5.858075141906738
    5. ']==' → logprob: -10.858075141906738
    6. ']!=' → logprob: -11.733075141906738
    7. '=' → logprob: -11.983075141906738
    8. '```' → logprob: -11.983075141906738
    9. '[' → logprob: -12.358075141906738
    10. '()!=' → logprob: -12.483075141906738

Token 293: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3634190261363983
    2. 'color' → logprob: -1.2384190559387207
    3. ' color' → logprob: -4.738419055938721
    4. ' c' → logprob: -5.113419055938721
    5. '   ' → logprob: -10.363418579101562
    6. '=color' → logprob: -11.363418579101562
    7. ' ' → logprob: -11.488418579101562
    8. '	color' → logprob: -12.113418579101562
    9. '	c' → logprob: -12.238418579101562
    10. '```' → logprob: -12.550918579101562

Token 294: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0027604142669588327
    2. '_color' → logprob: -7.002760410308838
    3. '[col' → logprob: -7.002760410308838
    4. 'col' → logprob: -7.377760410308838
    5. '[color' → logprob: -9.127760887145996
    6. 'color' → logprob: -9.252760887145996
    7. '[s' → logprob: -9.377760887145996
    8. 'olor' → logprob: -12.002760887145996
    9. 'icol' → logprob: -12.627760887145996
    10. '[' → logprob: -12.877760887145996

Token 295: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4097248613834381
    2. ':' → logprob: -1.2847248315811157
    3. '                       ' → logprob: -2.9097249507904053
    4. ':return' → logprob: -5.659724712371826
    5. '                   ' → logprob: -7.909724712371826
    6. '               ' → logprob: -8.284725189208984
    7. '):
' → logprob: -8.409725189208984
    8. '       ' → logprob: -8.659725189208984
    9. '                           ' → logprob: -9.034725189208984
    10. '           ' → logprob: -9.534725189208984

Token 296: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0051170578226447105
    2. ':
' → logprob: -5.380116939544678
    3. ':' → logprob: -8.505117416381836
    4. 'return' → logprob: -9.505117416381836
    5. ' return' → logprob: -9.630117416381836
    6. ':return' → logprob: -9.755117416381836
    7. '                   ' → logprob: -10.255117416381836
    8. '       ' → logprob: -11.255117416381836
    9. ',' → logprob: -11.755117416381836
    10. '               ' → logprob: -12.005117416381836

Token 297: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22692161798477173
    2. 'return' → logprob: -1.601921558380127
    3. '                           ' → logprob: -7.851921558380127
    4. ' continue' → logprob: -8.476922035217285
    5. '                       ' → logprob: -8.601922035217285
    6. '                   ' → logprob: -8.976922035217285
    7. ' raise' → logprob: -8.976922035217285
    8. '
' → logprob: -9.476922035217285
    9. 'print' → logprob: -9.726922035217285
    10. '               ' → logprob: -9.726922035217285

Token 298: ' conflict' (ID: 21461)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01832856610417366
    2. ' return' → logprob: -4.143328666687012
    3. '#' → logprob: -6.393328666687012
    4. 'raise' → logprob: -8.268328666687012
    5. 'print' → logprob: -8.893328666687012
    6. '                   ' → logprob: -9.768328666687012
    7. '           ' → logprob: -9.893328666687012
    8. '               ' → logprob: -10.393328666687012
    9. '                       ' → logprob: -10.518328666687012
    10. ' #' → logprob: -10.768328666687012

Token 299: ' -' (ID: 533)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4788745939731598
    2. 'return' → logprob: -1.2288745641708374
    3. '
' → logprob: -3.728874683380127
    4. '                           ' → logprob: -4.228874683380127
    5. '           ' → logprob: -4.603874683380127
    6. '                       ' → logprob: -4.978874683380127
    7. '               ' → logprob: -4.978874683380127
    8. ':return' → logprob: -4.978874683380127
    9. '<|end|>' → logprob: -5.103874683380127
    10. '                   ' → logprob: -5.978874683380127

Token 300: ' not' (ID: 625)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48518314957618713
    2. 'return' → logprob: -0.9851831197738647
    3. ' pass' → logprob: -5.235183238983154
    4. 'pass' → logprob: -6.610183238983154
    5. 'print' → logprob: -6.735183238983154
    6. ' continue' → logprob: -6.985183238983154
    7. ' print' → logprob: -7.735183238983154
    8. '#' → logprob: -7.735183238983154
    9. 'continue' → logprob: -7.735183238983154
    10. ' raise' → logprob: -8.360182762145996

Token 301: ' bip' (ID: 54467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3872184753417969
    2. ' bip' → logprob: -1.1372184753417969
    3. ' b' → logprob: -8.012218475341797
    4. '_b' → logprob: -11.762218475341797
    5. 'bic' → logprob: -12.887218475341797
    6. 'bi' → logprob: -13.762218475341797
    7. '	b' → logprob: -13.887218475341797
    8. ' a' → logprob: -14.262218475341797
    9. ' ' → logprob: -15.012218475341797
    10. ' bipolar' → logprob: -15.137218475341797

Token 302: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -7.111979357432574e-05
    2. 'ar' → logprob: -9.75007152557373
    3. 'arti' → logprob: -12.25007152557373
    4. 'at' → logprob: -12.75007152557373
    5. 'artisan' → logprob: -13.37507152557373
    6. 'a' → logprob: -14.12507152557373
    7. 'arte' → logprob: -14.37507152557373
    8. 'арт' → logprob: -14.62507152557373
    9. '#' → logprob: -14.62507152557373
    10. 'arat' → logprob: -15.62507152557373

Token 303: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -15.625000953674316
    3. 'ate' → logprob: -15.875000953674316
    4. 'e' → logprob: -16.000001907348633
    5. ' ite' → logprob: -16.125001907348633
    6. 'art' → logprob: -16.250001907348633
    7. 'itle' → logprob: -16.375001907348633
    8. 'ile' → logprob: -17.125001907348633
    9. '#' → logprob: -17.750001907348633
    10. '_' → logprob: -18.000001907348633

Token 304: ',' (ID: 11)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.3384989500045776
    2. 'return' → logprob: -1.3384989500045776
    3. '                           ' → logprob: -1.5884989500045776
    4. '
' → logprob: -1.9634989500045776
    5. '                       ' → logprob: -2.213499069213867
    6. '           ' → logprob: -5.463499069213867
    7. '                   ' → logprob: -5.588499069213867
    8. ',' → logprob: -5.713499069213867
    9. ')' → logprob: -5.713499069213867
    10. ')
' → logprob: -6.213499069213867

Token 305: ' but' (ID: 889)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10128482431173325
    2. 'return' → logprob: -2.3512847423553467
    3. '                           ' → logprob: -7.976284980773926
    4. ' print' → logprob: -7.976284980773926
    5. 'print' → logprob: -8.976284980773926
    6. '                   ' → logprob: -9.226284980773926
    7. ' continue' → logprob: -10.226284980773926
    8. '                       ' → logprob: -10.476284980773926
    9. '                               ' → logprob: -10.601284980773926
    10. '           ' → logprob: -10.851284980773926

Token 306: ' problem' (ID: 4792)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.15212392807006836
    2. ' pass' → logprob: -2.5271239280700684
    3. 'return' → logprob: -3.0271239280700684
    4. ' continue' → logprob: -4.777123928070068
    5. 'pass' → logprob: -5.652123928070068
    6. 'continue' → logprob: -7.527123928070068
    7. ' raise' → logprob: -9.277124404907227
    8. ' exit' → logprob: -9.777124404907227
    9. '           ' → logprob: -10.402124404907227
    10. '               ' → logprob: -11.027124404907227

Token 307: ' says' (ID: 5003)
  Prédit: ' does'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' does' → logprob: -1.0700061321258545
    2. ' doesn't' → logprob: -1.8200061321258545
    3. '<|end|>' → logprob: -2.0700061321258545
    4. ' continues' → logprob: -2.1950061321258545
    5. ':' → logprob: -2.5700061321258545
    6. 'does' → logprob: -3.1950061321258545
    7. ' states' → logprob: -3.5700061321258545
    8. ' specifies' → logprob: -4.195006370544434
    9. ' constraints' → logprob: -4.320006370544434
    10. '.' → logprob: -4.820006370544434

Token 308: ' city' (ID: 5030)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.2773117423057556
    2. ' pass' → logprob: -2.0273118019104004
    3. ' this' → logprob: -3.2773118019104004
    4. ' continue' → logprob: -3.4023118019104004
    5. ' it' → logprob: -4.1523118019104
    6. 'pass' → logprob: -4.7773118019104
    7. 'continue' → logprob: -5.4023118019104
    8. ' we' → logprob: -6.2773118019104
    9. 'no' → logprob: -6.4023118019104
    10. 'this' → logprob: -7.0273118019104

Token 309: ' is' (ID: 382)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.9878753423690796
    2. ' is' → logprob: -1.1128753423690796
    3. ' continue' → logprob: -1.9878753423690796
    4. 'continue' → logprob: -3.362875461578369
    5. '           ' → logprob: -3.987875461578369
    6. ' does' → logprob: -4.112875461578369
    7. ' will' → logprob: -4.737875461578369
    8. '                       ' → logprob: -4.737875461578369
    9. ' has' → logprob: -5.112875461578369
    10. 'is' → logprob: -5.112875461578369

Token 310: ' Chinese' (ID: 13999)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6932090520858765
    2. ' bip' → logprob: -0.6932090520858765
    3. ' b' → logprob: -10.693208694458008
    4. ' always' → logprob: -11.443208694458008
    5. '       ' → logprob: -11.693208694458008
    6. '   ' → logprob: -11.818208694458008
    7. '	b' → logprob: -12.318208694458008
    8. ' ' → logprob: -12.693208694458008
    9. 'bic' → logprob: -13.568208694458008
    10. ' bipolar' → logprob: -14.318208694458008

Token 311: ' plan' (ID: 3496)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.55057692527771
    2. ' whispers' → logprob: -1.30057692527771
    3. 'wall' → logprob: -3.05057692527771
    4. 'wh' → logprob: -4.175577163696289
    5. ' walls' → logprob: -4.175577163696289
    6. 'Wh' → logprob: -4.675577163696289
    7. ' whispered' → logprob: -4.675577163696289
    8. 'Wall' → logprob: -4.800577163696289
    9. ' wall' → logprob: -5.050577163696289
    10. ',' → logprob: -5.425577163696289

Token 312: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9761844277381897
    2. '#' → logprob: -1.476184368133545
    3. 'ning' → logprob: -2.101184368133545
    4. '           ' → logprob: -2.601184368133545
    5. 'def' → logprob: -3.476184368133545
    6. '
' → logprob: -3.601184368133545
    7. 'ned' → logprob: -3.976184368133545
    8. '   ' → logprob: -4.226184368133545
    9. '                       ' → logprob: -4.226184368133545
    10. ' city' → logprob: -4.351184368133545

Token 313: ' bip' (ID: 54467)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2606193423271179
    2. 'return' → logprob: -2.5106194019317627
    3. ' continue' → logprob: -2.6356194019317627
    4. 'continue' → logprob: -3.3856194019317627
    5. ' pass' → logprob: -3.5106194019317627
    6. 'pass' → logprob: -4.760619163513184
    7. '                   ' → logprob: -6.510619163513184
    8. '                       ' → logprob: -6.760619163513184
    9. ' no' → logprob: -7.885619163513184
    10. '               ' → logprob: -8.010619163513184

Token 314: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -3.666993507067673e-05
    2. 'ar' → logprob: -10.375036239624023
    3. 'arti' → logprob: -13.250036239624023
    4. '```' → logprob: -15.000036239624023
    5. 'artisan' → logprob: -15.000036239624023
    6. 'at' → logprob: -15.125036239624023
    7. '       ' → logprob: -15.125036239624023
    8. '           ' → logprob: -15.250036239624023
    9. 'arte' → logprob: -15.375036239624023
    10. '}' → logprob: -15.500036239624023

Token 315: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.00022022522171027958
    2. 'e' → logprob: -8.87522029876709
    3. 'ate' → logprob: -9.75022029876709
    4. 'def' → logprob: -12.00022029876709
    5. '```' → logprob: -12.00022029876709
    6. 'te' → logprob: -13.62522029876709
    7. 'it' → logprob: -13.62522029876709
    8. 'ited' → logprob: -13.75022029876709
    9. 'itle' → logprob: -14.00022029876709
    10. '[' → logprob: -14.50022029876709

Token 316: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.23172105848789215
    2. '               ' → logprob: -2.2317211627960205
    3. '                   ' → logprob: -2.6067211627960205
    4. '
' → logprob: -4.606720924377441
    5. '           ' → logprob: -5.606720924377441
    6. ' continue' → logprob: -5.606720924377441
    7. '                           ' → logprob: -5.856720924377441
    8. ' return' → logprob: -6.481720924377441
    9. 'return' → logprob: -6.731720924377441
    10. 'continue' → logprob: -6.856720924377441

Token 317: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01579808071255684
    2. '                   ' → logprob: -5.015798091888428
    3. '                           ' → logprob: -6.015798091888428
    4. '
' → logprob: -6.515798091888428
    5. ' return' → logprob: -6.515798091888428
    6. '               ' → logprob: -6.515798091888428
    7. 'return' → logprob: -7.140798091888428
    8. '           ' → logprob: -7.515798091888428
    9. '\n' → logprob: -8.01579761505127
    10. ' continue' → logprob: -8.51579761505127

Token 318: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.9462583065032959
    2. 'pass' (adapté à ' pass') → logprob: -1.321258306503296
    3. 'return' → logprob: -1.321258306503296
    4. ' return' → logprob: -2.696258306503296
    5. 'continue' → logprob: -5.071258544921875
    6. ' continue' → logprob: -6.196258544921875
    7. '                   ' → logprob: -7.321258544921875
    8. '                       ' → logprob: -7.321258544921875
    9. '                           ' → logprob: -7.821258544921875
    10. 'print' → logprob: -8.321258544921875

Token 319: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00104305159766227
    2. '                   ' → logprob: -6.87604284286499
    3. '           ' → logprob: -12.376043319702148
    4. 'else' → logprob: -12.626043319702148
    5. ' else' → logprob: -13.376043319702148
    6. '                       ' → logprob: -14.626043319702148
    7. '```' → logprob: -15.501043319702148
    8. '   ' → logprob: -16.12604331970215
    9. '
' → logprob: -16.25104331970215
    10. ',' → logprob: -16.50104331970215

Token 320: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00034535606391727924
    2. '                   ' → logprob: -8.000345230102539
    3. '           ' → logprob: -12.250345230102539
    4. '                       ' → logprob: -13.250345230102539
    5. 'else' → logprob: -13.625345230102539
    6. ' else' → logprob: -14.000345230102539
    7. '   ' → logprob: -15.250345230102539
    8. '```' → logprob: -15.375345230102539
    9. '       ' → logprob: -15.500345230102539
    10. '
' → logprob: -15.500345230102539

Token 321: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09208694845438004
    2. ' else' → logprob: -2.5920870304107666
    3. 'else' (adapté à ' else') → logprob: -4.3420867919921875
    4. '           ' → logprob: -9.842086791992188
    5. 'elif' → logprob: -11.467086791992188
    6. ' elif' → logprob: -11.717086791992188
    7. '                ' → logprob: -12.217086791992188
    8. '   ' → logprob: -12.467086791992188
    9. '                   ' → logprob: -12.467086791992188
    10. '              ' → logprob: -12.592086791992188

Token 322: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5136220455169678
    2. ':
' → logprob: -1.3886220455169678
    3. '                   ' → logprob: -1.8886220455169678
    4. '               ' → logprob: -7.638622283935547
    5. '                       ' → logprob: -8.513622283935547
    6. '           ' → logprob: -8.888622283935547
    7. ' :' → logprob: -10.763622283935547
    8. ' :
' → logprob: -10.763622283935547
    9. ',' → logprob: -11.013622283935547
    10. '   ' → logprob: -11.263622283935547

Token 323: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0032261949963867664
    2. ' dfs' → logprob: -5.878226280212402
    3. '               ' → logprob: -8.503226280212402
    4. 'dfs' → logprob: -9.503226280212402
    5. '                       ' → logprob: -9.753226280212402
    6. '           ' → logprob: -10.503226280212402
    7. '                  ' → logprob: -11.503226280212402
    8. '   ' → logprob: -11.753226280212402
    9. '                ' → logprob: -11.753226280212402
    10. '       ' → logprob: -11.878226280212402

Token 324: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.04040803015232086
    2. ' dfs' → logprob: -3.290408134460449
    3. '                   ' → logprob: -6.290408134460449
    4. '                       ' → logprob: -7.665408134460449
    5. 'df' → logprob: -11.29040813446045
    6. '               ' → logprob: -11.66540813446045
    7. '           ' → logprob: -12.16540813446045
    8. 'd' → logprob: -12.54040813446045
    9. '       ' → logprob: -13.41540813446045
    10. '                           ' → logprob: -13.66540813446045

Token 325: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -3.173704271830502e-06
    2. '_col' → logprob: -12.75000286102295
    3. '_' → logprob: -15.12500286102295
    4. '_token' → logprob: -17.750003814697266
    5. '_code' → logprob: -18.375003814697266
    6. '_colour' → logprob: -19.000003814697266
    7. '_COLOR' → logprob: -19.125003814697266
    8. '_colors' → logprob: -19.125003814697266
    9. 'color' → logprob: -20.250003814697266
    10. '_depth' → logprob: -20.375003814697266

Token 326: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.750004768371582
    3. 'ne' → logprob: -13.750004768371582
    4. '(n' → logprob: -14.875004768371582
    5. '_color' → logprob: -15.250004768371582
    6. '_ne' → logprob: -15.750004768371582
    7. '(se' → logprob: -17.1250057220459
    8. ' (' → logprob: -17.1250057220459
    9. '(
' → logprob: -17.3750057220459
    10. '(not' → logprob: -17.5000057220459

Token 327: 'igh' (ID: 1251)
  Prédit: 'igh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igh' → logprob: -0.009613470174372196
    2. 'gh' → logprob: -4.884613513946533
    3. 'ighbor' → logprob: -7.509613513946533
    4. 's' → logprob: -7.884613513946533
    5. '_color' → logprob: -8.009613037109375
    6. '(s' → logprob: -8.384613037109375
    7. 'ight' → logprob: -8.509613037109375
    8. 'ig' → logprob: -9.134613037109375
    9. '[' → logprob: -10.634613037109375
    10. '(' → logprob: -10.634613037109375

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006160454358905554
    2. '(ne' → logprob: -5.131160259246826
    3. ' ,' → logprob: -8.881160736083984
    4. ')' → logprob: -10.006160736083984
    5. ' (' → logprob: -11.131160736083984
    6. ',(' → logprob: -12.006160736083984
    7. 'ne' → logprob: -12.131160736083984
    8. ',s' → logprob: -12.506160736083984
    9. ',
' → logprob: -12.631160736083984
    10. '(' → logprob: -12.631160736083984

Token 329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008675140561535954
    2. 'c' → logprob: -7.5008673667907715
    3. ''' → logprob: -9.25086784362793
    4. ' ' → logprob: -9.25086784362793
    5. 'not' → logprob: -10.12586784362793
    6. '3' → logprob: -10.62586784362793
    7. '   ' → logprob: -11.37586784362793
    8. '(c' → logprob: -11.75086784362793
    9. ' c' → logprob: -12.00086784362793
    10. '(' → logprob: -12.00086784362793

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006601344794034958
    2. ''' → logprob: -7.875659942626953
    3. 'c' → logprob: -8.750659942626953
    4. '3' → logprob: -10.000659942626953
    5. '-' → logprob: -10.625659942626953
    6. '(' → logprob: -10.750659942626953
    7. 'not' → logprob: -11.000659942626953
    8. '(c' → logprob: -12.375659942626953
    9. '"' → logprob: -13.125659942626953
    10. ' ' → logprob: -13.250659942626953

Token 331: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21570661664009094
    2. '-c' → logprob: -2.2157065868377686
    3. ' -' → logprob: -2.4657065868377686
    4. '-col' → logprob: -13.715706825256348
    5. 'c' → logprob: -14.215706825256348
    6. '   ' → logprob: -14.840706825256348
    7. '1' → logprob: -15.090706825256348
    8. '-C' → logprob: -15.340706825256348
    9. '-color' → logprob: -16.21570587158203
    10. '-not' → logprob: -16.46570587158203

Token 332: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014001218369230628
    2. ' c' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.750139236450195
    4. '	c' → logprob: -17.625139236450195
    5. ')c' → logprob: -18.125139236450195
    6. ' ' → logprob: -18.500139236450195
    7. 'col' → logprob: -18.625139236450195
    8. '  ' → logprob: -19.000139236450195
    9. '_c' → logprob: -20.000139236450195
    10. 'color' → logprob: -20.500139236450195

Token 333: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0006304710987024009
    2. 'col' → logprob: -7.3756303787231445
    3. '_color' → logprob: -13.250630378723145
    4. '_' → logprob: -14.125630378723145
    5. '_c' → logprob: -15.250630378723145
    6. 'ocol' → logprob: -15.875630378723145
    7. 'olor' → logprob: -15.875630378723145
    8. '_COL' → logprob: -16.00063133239746
    9. 'color' → logprob: -16.00063133239746
    10. '	col' → logprob: -16.12563133239746

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. ')
' → logprob: -10.875020027160645
    3. ' )' → logprob: -13.625020027160645
    4. ')

' → logprob: -16.12502098083496
    5. '       ' → logprob: -16.62502098083496
    6. '   ' → logprob: -17.12502098083496
    7. ')return' → logprob: -17.75002098083496
    8. '<|end|>' → logprob: -17.75002098083496
    9. '           ' → logprob: -18.00002098083496
    10. ')#' → logprob: -18.87502098083496

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07306036353111267
    2. '
' → logprob: -3.4480602741241455
    3. 'dfs' → logprob: -4.198060512542725
    4. '   ' → logprob: -4.823060512542725
    5. '           ' → logprob: -5.073060512542725
    6. '<|end|>' → logprob: -5.823060512542725
    7. 'for' → logprob: -6.573060512542725
    8. '    
' → logprob: -6.948060512542725
    9. ' for' → logprob: -7.573060512542725
    10. '        
' → logprob: -7.573060512542725

Token 336: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06410625576972961
    2. 'for' (adapté à ' for') → logprob: -3.0641062259674072
    3. '   ' → logprob: -4.814106464385986
    4. '       ' → logprob: -5.189106464385986
    5. ' dfs' → logprob: -7.314106464385986
    6. '    
' → logprob: -8.314105987548828
    7. '        
' → logprob: -8.314105987548828
    8. 'dfs' → logprob: -8.439105987548828
    9. '
' → logprob: -8.939105987548828
    10. '	for' → logprob: -9.689105987548828

Token 337: ' st' (ID: 420)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.14431019127368927
    2. 's' → logprob: -2.019310235977173
    3. ' street' → logprob: -6.519309997558594
    4. 'street' → logprob: -8.769309997558594
    5. '	s' → logprob: -14.394309997558594
    6. 'st' → logprob: -14.394309997558594
    7. 'stre' → logprob: -14.519309997558594
    8. 'Street' → logprob: -14.894309997558594
    9. ' st' → logprob: -15.144309997558594
    10. ' node' → logprob: -15.269309997558594

Token 338: ' in' (ID: 306)
  Prédit: 'reet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.00303249410353601
    2. 'r' → logprob: -6.753032684326172
    3. ' in' → logprob: -7.003032684326172
    4. 're' → logprob: -7.128032684326172
    5. 'ree' → logprob: -9.003032684326172
    6. 'REET' → logprob: -11.378032684326172
    7. 'rest' → logprob: -12.878032684326172
    8. 's' → logprob: -13.003032684326172
    9. '_' → logprob: -13.003032684326172
    10. 'e' → logprob: -13.253032684326172

Token 339: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.06197004392743111
    2. ' streets' → logprob: -2.8119699954986572
    3. 'graph' → logprob: -13.186969757080078
    4. ' graph' → logprob: -15.186969757080078
    5. 'list' → logprob: -16.561969757080078
    6. 'stairs' → logprob: -16.811969757080078
    7. 'sts' → logprob: -17.186969757080078
    8. 'street' → logprob: -17.686969757080078
    9. ' stre' → logprob: -18.561969757080078
    10. 's' → logprob: -18.561969757080078

Token 340: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009187239338643849
    2. ':
' → logprob: -7.125918865203857
    3. ' :' → logprob: -9.6259183883667
    4. ' not' → logprob: -11.5009183883667
    5. '):' → logprob: -11.8759183883667
    6. '<|end|>' → logprob: -12.2509183883667
    7. ':not' → logprob: -12.2509183883667
    8. 'not' → logprob: -12.5009183883667
    9. ' in' → logprob: -12.7509183883667
    10. '):
' → logprob: -13.0009183883667

Token 341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11629679054021835
    2. ':' → logprob: -3.3662967681884766
    3. '   ' → logprob: -3.4912967681884766
    4. ':
' → logprob: -3.7412967681884766
    5. ' if' → logprob: -3.9912967681884766
    6. '       ' → logprob: -6.241296768188477
    7. ',' → logprob: -8.866296768188477
    8. '):
' → logprob: -9.116296768188477
    9. '          ' → logprob: -9.991296768188477
    10. '
' → logprob: -10.116296768188477

Token 342: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5254184603691101
    2. '           ' → logprob: -1.0254185199737549
    3. 'if' (adapté à ' if') → logprob: -3.025418519973755
    4. '   ' → logprob: -6.525418281555176
    5. '       ' → logprob: -11.400418281555176
    6. '               ' → logprob: -11.650418281555176
    7. ' not' → logprob: -11.900418281555176
    8. ' ' → logprob: -12.025418281555176
    9. '    ' → logprob: -13.150418281555176
    10. 'not' → logprob: -13.525418281555176

Token 343: ' st' (ID: 420)
  Prédit: ' st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' st' → logprob: -0.04858816787600517
    2. 'st' → logprob: -3.048588275909424
    3. '(st' → logprob: -15.173587799072266
    4. '	st' → logprob: -15.548587799072266
    5. ' ' → logprob: -15.673587799072266
    6. ' ' → logprob: -15.673587799072266
    7. '```' → logprob: -16.923587799072266
    8. '   ' → logprob: -17.423587799072266
    9. 'St' → logprob: -17.673587799072266
    10. '_st' → logprob: -17.798587799072266

Token 344: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.029753385111689568
    2. 'not' → logprob: -3.5297534465789795
    3. ')' → logprob: -13.779753684997559
    4. '	not' → logprob: -13.779753684997559
    5. ' ' → logprob: -15.279753684997559
    6. ']' → logprob: -15.404753684997559
    7. ' no' → logprob: -15.529753684997559
    8. ' in' → logprob: -17.029752731323242
    9. '   ' → logprob: -17.529752731323242
    10. 'ot' → logprob: -17.779752731323242

Token 345: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05574178323149681
    2. 'in' → logprob: -2.930741786956787
    3. ' color' → logprob: -7.555741786956787
    4. 'color' → logprob: -8.055741310119629
    5. '   ' → logprob: -12.305741310119629
    6. ' ' → logprob: -12.555741310119629
    7. '<|end|>' → logprob: -12.555741310119629
    8. '    ' → logprob: -13.055741310119629
    9. '(color' → logprob: -13.930741310119629
    10. '  ' → logprob: -14.305741310119629

Token 346: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0017023178515955806
    2. ' color' → logprob: -6.376702308654785
    3. '	color' → logprob: -16.3767032623291
    4. ' ' → logprob: -17.3767032623291
    5. '   ' → logprob: -17.6267032623291
    6. '(color' → logprob: -18.5017032623291
    7. '[color' → logprob: -18.8767032623291
    8. '.color' → logprob: -19.2517032623291
    9. '=color' → logprob: -19.2517032623291
    10. '```' → logprob: -19.3767032623291

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3133608102798462
    2. ':
' → logprob: -1.3133608102798462
    3. '():
' → logprob: -9.438361167907715
    4. '):
' → logprob: -11.313361167907715
    5. '):' → logprob: -12.563361167907715
    6. '():' → logprob: -13.938361167907715
    7. ':

' → logprob: -14.063361167907715
    8. ':
' → logprob: -14.438361167907715
    9. '=' → logprob: -15.063361167907715
    10. ']:
' → logprob: -15.063361167907715

Token 348: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17482353746891022
    2. ':' → logprob: -2.049823522567749
    3. '               ' → logprob: -3.799823522567749
    4. '           ' → logprob: -4.799823760986328
    5. '():
' → logprob: -8.174823760986328
    6. '):
' → logprob: -8.174823760986328
    7. ' :
' → logprob: -8.674823760986328
    8. ' dfs' → logprob: -8.924823760986328
    9. '       ' → logprob: -9.549823760986328
    10. ':

' → logprob: -10.799823760986328

Token 349: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.2041892409324646
    2. 'dfs' (adapté à ' dfs') → logprob: -1.7041893005371094
    3. '               ' → logprob: -6.329189300537109
    4. '                   ' → logprob: -7.579189300537109
    5. '           ' → logprob: -7.954189300537109
    6. '   ' → logprob: -10.07918930053711
    7. 'df' → logprob: -11.07918930053711
    8. 'd' → logprob: -11.32918930053711
    9. ' DFS' → logprob: -11.32918930053711
    10. '       ' → logprob: -11.57918930053711

Token 350: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -4.36574100604048e-06
    2. '_col' → logprob: -12.500004768371582
    3. '_' → logprob: -15.500004768371582
    4. 'color' → logprob: -15.750004768371582
    5. '_code' → logprob: -16.375003814697266
    6. '_colour' → logprob: -17.000003814697266
    7. '_COLOR' → logprob: -17.625003814697266
    8. '_c' → logprob: -17.750003814697266
    9. '_colors' → logprob: -18.250003814697266
    10. 'Color' → logprob: -19.000003814697266

Token 351: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -15.375000953674316
    4. 'st' → logprob: -16.250001907348633
    5. '_st' → logprob: -16.250001907348633
    6. ' st' → logprob: -17.375001907348633
    7. '(s' → logprob: -17.500001907348633
    8. '(St' → logprob: -17.750001907348633
    9. '```' → logprob: -17.875001907348633
    10. '	st' → logprob: -17.875001907348633

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ' ,' → logprob: -12.125007629394531
    3. 'st' → logprob: -13.625007629394531
    4. ')' → logprob: -15.250007629394531
    5. '(st' → logprob: -15.250007629394531
    6. ' st' → logprob: -15.625007629394531
    7. 's' → logprob: -16.37500762939453
    8. ',
' → logprob: -17.12500762939453
    9. '),' → logprob: -17.50000762939453
    10. '_,' → logprob: -18.37500762939453

Token 353: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -16.2517032623291
    4. '1' → logprob: -17.8767032623291
    5. ')' → logprob: -19.0017032623291
    6. '  ' → logprob: -19.7517032623291
    7. '۰' → logprob: -19.7517032623291
    8. '    ' → logprob: -20.8142032623291
    9. '       ' → logprob: -21.4392032623291
    10. '00' → logprob: -21.6892032623291

Token 354: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.250024795532227
    4. '۰' → logprob: -17.875024795532227
    5. '1' → logprob: -18.250024795532227
    6. ')' → logprob: -18.687524795532227
    7. '  ' → logprob: -19.875024795532227
    8. '０' → logprob: -20.062524795532227
    9. '<|end|>' → logprob: -20.437524795532227
    10. '=' → logprob: -20.437524795532227

Token 355: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -12.500003814697266
    3. ' )' → logprob: -15.125003814697266
    4. '<|end|>' → logprob: -15.875003814697266
    5. ')

' → logprob: -17.375003814697266
    6. '))' → logprob: -17.625003814697266
    7. '       ' → logprob: -17.625003814697266
    8. '())' → logprob: -17.625003814697266
    9. ')}' → logprob: -17.875003814697266
    10. '),' → logprob: -18.625003814697266

Token 356: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3127562701702118
    2. '<|end|>' → logprob: -1.4377562999725342
    3. ' for' → logprob: -4.312756061553955
    4. '       ' → logprob: -4.437756061553955
    5. '   ' → logprob: -6.187756061553955
    6. '<|end|>' → logprob: -7.187756061553955
    7. 'for' → logprob: -7.437756061553955
    8. '        
' → logprob: -7.437756061553955
    9. '    
' → logprob: -8.187756538391113
    10. ' if' → logprob: -8.437756538391113

Token 357: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5536068677902222
    2. 'for' (adapté à ' for') → logprob: -1.0536068677902222
    3. '       ' → logprob: -2.6786069869995117
    4. '   ' → logprob: -6.053606986999512
    5. 'ns' → logprob: -6.303606986999512
    6. '#' → logprob: -6.553606986999512
    7. '<|end|>' → logprob: -7.303606986999512
    8. '
' → logprob: -7.678606986999512
    9. ' ns' → logprob: -8.303606986999512
    10. 'if' → logprob: -8.803606986999512

Token 358: ' st' (ID: 420)
  Prédit: ' st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' st' → logprob: -0.03746797889471054
    2. 'st' → logprob: -3.5374679565429688
    3. ' s' → logprob: -5.037467956542969
    4. 's' → logprob: -7.037467956542969
    5. ' street' → logprob: -8.287467956542969
    6. 'street' → logprob: -10.412467956542969
    7. '_st' → logprob: -10.912467956542969
    8. '	st' → logprob: -11.787467956542969
    9. 'St' → logprob: -12.537467956542969
    10. '(st' → logprob: -12.787467956542969

Token 359: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00014442270912695676
    2. 'in' → logprob: -8.875144004821777
    3. ' ' → logprob: -12.625144004821777
    4. 'st' → logprob: -14.625144004821777
    5. ',' → logprob: -15.000144004821777
    6. '  ' → logprob: -15.625144004821777
    7. 's' → logprob: -16.125144958496094
    8. '	in' → logprob: -16.125144958496094
    9. '   ' → logprob: -16.250144958496094
    10. '_in' → logprob: -16.750144958496094

Token 360: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.332919180393219
    2. ' streets' → logprob: -1.3329191207885742
    3. 'color' → logprob: -4.207919120788574
    4. ' color' → logprob: -5.457919120788574
    5. 'st' → logprob: -8.707919120788574
    6. 'street' → logprob: -9.957919120788574
    7. 'graph' → logprob: -10.207919120788574
    8. 'stairs' → logprob: -11.332919120788574
    9. ' graph' → logprob: -11.582919120788574
    10. 'sts' → logprob: -11.582919120788574

Token 361: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5875505805015564
    2. ':
' → logprob: -0.8375505805015564
    3. ' in' → logprob: -4.587550640106201
    4. 'in' → logprob: -7.837550640106201
    5. '):
' → logprob: -7.837550640106201
    6. 'if' → logprob: -8.712550163269043
    7. '):' → logprob: -9.212550163269043
    8. ',' → logprob: -9.962550163269043
    9. ':

' → logprob: -10.087550163269043
    10. '   ' → logprob: -10.087550163269043

Token 362: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05695464089512825
    2. ':' → logprob: -2.9319546222686768
    3. '           ' → logprob: -6.806954860687256
    4. '   ' → logprob: -7.806954860687256
    5. '):
' → logprob: -7.931954860687256
    6. '       ' → logprob: -8.931954383850098
    7. ':

' → logprob: -10.931954383850098
    8. '():
' → logprob: -11.306954383850098
    9. ':
' → logprob: -11.431954383850098
    10. ',' → logprob: -11.681954383850098

Token 363: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31801217794418335
    2. '   ' → logprob: -2.068012237548828
    3. ' if' → logprob: -2.693012237548828
    4. '       ' → logprob: -3.568012237548828
    5. '           ' → logprob: -3.818012237548828
    6. 'ns' → logprob: -3.943012237548828
    7. ':
' → logprob: -5.568012237548828
    8. '               ' → logprob: -5.943012237548828
    9. ':' → logprob: -7.193012237548828
    10. '
' → logprob: -7.818012237548828

Token 364: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.03366229683160782
    2. 'color' → logprob: -3.4086623191833496
    3. 'st' → logprob: -11.408661842346191
    4. ' st' → logprob: -13.283661842346191
    5. '(color' → logprob: -13.408661842346191
    6. ' ' → logprob: -14.533661842346191
    7. '[color' → logprob: -15.158661842346191
    8. '	color' → logprob: -15.408661842346191
    9. 'c' → logprob: -15.783661842346191
    10. '0' → logprob: -16.096162796020508

Token 365: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. ' [' → logprob: -14.375001907348633
    3. '.get' → logprob: -14.750001907348633
    4. '(st' → logprob: -15.250001907348633
    5. '[s' → logprob: -15.375001907348633
    6. 'st' → logprob: -17.125001907348633
    7. '```' → logprob: -17.625001907348633
    8. ' st' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.500001907348633
    10. 'get' → logprob: -18.625001907348633

Token 366: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0037866546772420406
    2. '[' → logprob: -5.628786563873291
    3. '(st' → logprob: -8.62878704071045
    4. ' st' → logprob: -12.12878704071045
    5. ']' → logprob: -14.25378704071045
    6. 's' → logprob: -14.37878704071045
    7. ')' → logprob: -14.50378704071045
    8. '][' → logprob: -16.003786087036133
    9. '	st' → logprob: -16.628786087036133
    10. '   ' → logprob: -16.753786087036133

Token 367: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6367384791374207
    2. ' ==' → logprob: -1.3867385387420654
    3. ']' → logprob: -1.6367385387420654
    4. ']==' → logprob: -3.6367385387420654
    5. ' ]' → logprob: -9.886738777160645
    6. '0' → logprob: -10.386738777160645
    7. ')' → logprob: -10.886738777160645
    8. '[' → logprob: -11.136738777160645
    9. ' ' → logprob: -11.886738777160645
    10. ')==' → logprob: -11.886738777160645

Token 368: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16022889316082
    2. ' ==' → logprob: -1.9102288484573364
    3. '==
' → logprob: -12.660228729248047
    4. ']==' → logprob: -14.285228729248047
    5. ')==' → logprob: -14.910228729248047
    6. '()==' → logprob: -15.785228729248047
    7. ':' → logprob: -16.035228729248047
    8. '=' → logprob: -16.160228729248047
    9. '===' → logprob: -16.410228729248047
    10. ' ==
' → logprob: -17.035228729248047

Token 369: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019347082125023007
    2. ' ' → logprob: -6.25193452835083
    3. '1' → logprob: -12.001935005187988
    4. '   ' → logprob: -17.876934051513672
    5. '=' → logprob: -19.251934051513672
    6. '[' → logprob: -20.251934051513672
    7. '  ' → logprob: -20.501934051513672
    8. '۰' → logprob: -20.626934051513672
    9. ' ' → logprob: -20.814434051513672
    10. '    ' → logprob: -21.751934051513672

Token 370: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.500016212463379
    3. '1' → logprob: -12.125016212463379
    4. '   ' → logprob: -16.625015258789062
    5. '=' → logprob: -19.000015258789062
    6. '۰' → logprob: -19.687515258789062
    7. '[' → logprob: -20.125015258789062
    8. '  ' → logprob: -20.187515258789062
    9. '       ' → logprob: -21.000015258789062
    10. '    ' → logprob: -21.125015258789062

Token 371: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.005330282263457775
    2. ':' → logprob: -5.2553300857543945
    3. '           ' → logprob: -9.630330085754395
    4. ' :
' → logprob: -11.880330085754395
    5. '):
' → logprob: -12.005330085754395
    6. ':
' → logprob: -12.005330085754395
    7. 'ns' → logprob: -13.130330085754395
    8. ' and' → logprob: -13.255330085754395
    9. ':

' → logprob: -13.380330085754395
    10. ',' → logprob: -13.505330085754395

Token 372: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17999596893787384
    2. '           ' → logprob: -2.3049960136413574
    3. ':' → logprob: -2.9299960136413574
    4. '               ' → logprob: -5.179996013641357
    5. 'ns' → logprob: -5.804996013641357
    6. ' and' → logprob: -7.054996013641357
    7. '   ' → logprob: -7.804996013641357
    8. ',' → logprob: -8.1799955368042
    9. ' ns' → logprob: -8.1799955368042
    10. '.' → logprob: -8.3049955368042

Token 373: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' (adapté à ' ns') → logprob: -0.0020735294092446566
    2. '               ' → logprob: -6.252073764801025
    3. ' ns' → logprob: -9.752073287963867
    4. '   ' → logprob: -10.127073287963867
    5. '	ns' → logprob: -10.877073287963867
    6. 'n' → logprob: -11.627073287963867
    7. '           ' → logprob: -12.002073287963867
    8. '_ns' → logprob: -12.502073287963867
    9. '                   ' → logprob: -12.877073287963867
    10. 'ew' → logprob: -13.377073287963867

Token 374: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.875
    3. '\' → logprob: -18.5
    4. '_s' → logprob: -20.25
    5. '_sp' → logprob: -20.25
    6. '_se' → logprob: -20.625
    7. '_sh' → logprob: -20.75
    8. '```' → logprob: -20.875
    9. '_str' → logprob: -21.0
    10. '_ST' → logprob: -21.0

Token 375: 're' (ID: 264)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.3976346552371979
    2. '_st' → logprob: -1.3976346254348755
    3. 're' → logprob: -2.522634744644165
    4. 'tre' → logprob: -8.522634506225586
    5. 'reet' → logprob: -9.022634506225586
    6. 'st' → logprob: -9.022634506225586
    7. '_re' → logprob: -9.522634506225586
    8. 'St' → logprob: -10.522634506225586
    9. 'e' → logprob: -10.772634506225586
    10. '_' → logprob: -11.147634506225586

Token 376: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0005980697460472584
    2. 'stre' → logprob: -8.000597953796387
    3. 'et' → logprob: -8.375597953796387
    4. '_st' → logprob: -11.875597953796387
    5. 'ests' → logprob: -12.125597953796387
    6. 'ects' → logprob: -12.125597953796387
    7. 'e' → logprob: -12.375597953796387
    8. 'sts' → logprob: -12.750597953796387
    9. 'ents' → logprob: -14.000597953796387
    10. 're' → logprob: -14.250597953796387

Token 377: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.0325924449716695e-05
    2. '.' → logprob: -11.50001049041748
    3. ' .' → logprob: -15.87501049041748
    4. '.append' → logprob: -16.875009536743164
    5. '.setdefault' → logprob: -17.250009536743164
    6. '.Add' → logprob: -17.625009536743164
    7. 'add' → logprob: -18.625009536743164
    8. ')add' → logprob: -20.125009536743164
    9. '.remove' → logprob: -21.125009536743164
    10. '.update' → logprob: -21.125009536743164

Token 378: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -1.0280383548888494e-06
    2. 'st' → logprob: -13.875000953674316
    3. '(' → logprob: -18.000001907348633
    4. '	st' → logprob: -21.375001907348633
    5. ' st' → logprob: -21.625001907348633
    6. '((' → logprob: -22.000001907348633
    7. ' (' → logprob: -22.000001907348633
    8. 's' → logprob: -22.000001907348633
    9. '(s' → logprob: -22.000001907348633
    10. '(
' → logprob: -22.750001907348633

Token 379: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001801801408873871
    2. ')
' → logprob: -8.6251802444458
    3. ' )' → logprob: -14.7501802444458
    4. ')

' → logprob: -15.7501802444458
    5. '())' → logprob: -16.875179290771484
    6. '))' → logprob: -18.500179290771484
    7. '       ' → logprob: -18.500179290771484
    8. ')
' → logprob: -18.875179290771484
    9. ')`' → logprob: -19.250179290771484
    10. '   ' → logprob: -19.375179290771484

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004896908067166805
    2. 'else' → logprob: -5.504897117614746
    3. ' else' → logprob: -7.379897117614746
    4. '       ' → logprob: -8.629897117614746
    5. 'elif' → logprob: -11.629897117614746
    6. '```' → logprob: -13.254897117614746
    7. ' elif' → logprob: -13.754897117614746
    8. '          ' → logprob: -14.004897117614746
    9. '               ' → logprob: -14.129897117614746
    10. '	       ' → logprob: -14.379897117614746

Token 381: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16394789516925812
    2. ' else' → logprob: -1.9139479398727417
    3. '       ' → logprob: -5.788948059082031
    4. '           ' → logprob: -7.413948059082031
    5. 'elif' → logprob: -10.038948059082031
    6. ' elif' → logprob: -12.163948059082031
    7. '   ' → logprob: -13.663948059082031
    8. '               ' → logprob: -14.663948059082031
    9. 'if' → logprob: -14.663948059082031
    10. '
' → logprob: -14.663948059082031

Token 382: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006323943380266428
    2. ':
' → logprob: -5.75632381439209
    3. '               ' → logprob: -5.88132381439209
    4. ' :' → logprob: -9.38132381439209
    5. ')' → logprob: -9.50632381439209
    6. '):' → logprob: -10.00632381439209
    7. '       ' → logprob: -10.25632381439209
    8. '           ' → logprob: -10.38132381439209
    9. '(' → logprob: -11.25632381439209
    10. '{' → logprob: -11.38132381439209

Token 383: '               ' (ID: 506)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.45710524916648865
    2. ' ew' → logprob: -1.082105278968811
    3. '       ' → logprob: -3.9571051597595215
    4. '               ' → logprob: -5.0821051597595215
    5. '           ' → logprob: -6.2071051597595215
    6. '   ' → logprob: -8.33210563659668
    7. 'ns' → logprob: -8.83210563659668
    8. '(' → logprob: -10.08210563659668
    9. 'ow' → logprob: -10.33210563659668
    10. ' ' → logprob: -10.58210563659668

Token 384: ' ew' (ID: 64459)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' (adapté à ' ew') → logprob: -0.011048289015889168
    2. ' ew' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.011048316955566
    4. 'ews' → logprob: -17.26104736328125
    5. '       ' → logprob: -17.51104736328125
    6. ' ' → logprob: -17.63604736328125
    7. 'ow' → logprob: -17.76104736328125
    8. 'aw' → logprob: -17.88604736328125
    9. '-ew' → logprob: -17.88604736328125
    10. '    ' → logprob: -18.51104736328125

Token 385: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.375
    3. '_s' → logprob: -16.625
    4. 'stre' → logprob: -16.875
    5. 'St' → logprob: -17.25
    6. 'st' → logprob: -18.0
    7. '```' → logprob: -18.625
    8. '._' → logprob: -19.25
    9. ' _' → logprob: -19.375
    10. 's' → logprob: -19.5

Token 386: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.25884026288986206
    2. 'stre' → logprob: -1.5088403224945068
    3. '_st' → logprob: -5.008840084075928
    4. 'st' → logprob: -9.508840560913086
    5. 'St' → logprob: -10.508840560913086
    6. 'reet' → logprob: -10.883840560913086
    7. 'ree' → logprob: -11.258840560913086
    8. 'e' → logprob: -11.383840560913086
    9. 'tre' → logprob: -11.383840560913086
    10. 'se' → logprob: -11.508840560913086

Token 387: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.07309726625680923
    2. 'stre' → logprob: -2.8230972290039062
    3. '_st' → logprob: -4.698097229003906
    4. 'et' → logprob: -6.698097229003906
    5. 'sts' → logprob: -8.198097229003906
    6. 'st' → logprob: -8.323097229003906
    7. 'St' → logprob: -9.698097229003906
    8. 'e' → logprob: -10.448097229003906
    9. 'ests' → logprob: -10.573097229003906
    10. 's' → logprob: -10.573097229003906

Token 388: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.129266067640856e-05
    2. '.' → logprob: -10.875020980834961
    3. 'add' → logprob: -13.000020980834961
    4. '.append' → logprob: -17.75002098083496
    5. ' .' → logprob: -17.87502098083496
    6. '   ' → logprob: -18.50002098083496
    7. '.Add' → logprob: -18.75002098083496
    8. '.setdefault' → logprob: -18.87502098083496
    9. 's' → logprob: -19.25002098083496
    10. '           ' → logprob: -19.75002098083496

Token 389: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.00015860427811276168
    2. 'st' → logprob: -8.750158309936523
    3. '	st' → logprob: -17.250158309936523
    4. '(' → logprob: -17.500158309936523
    5. '(s' → logprob: -19.250158309936523
    6. ' st' → logprob: -19.375158309936523
    7. 's' → logprob: -19.375158309936523
    8. 'stre' → logprob: -19.875158309936523
    9. '/st' → logprob: -20.500158309936523
    10. ' (' → logprob: -21.250158309936523

Token 390: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5451681974809617e-05
    2. ')
' → logprob: -11.875015258789062
    3. '))' → logprob: -12.500015258789062
    4. ')}' → logprob: -13.250015258789062
    5. '})' → logprob: -14.250015258789062
    6. ')`' → logprob: -14.500015258789062
    7. '(st' → logprob: -14.500015258789062
    8. '}' → logprob: -14.500015258789062
    9. ')**' → logprob: -15.750015258789062
    10. '())' → logprob: -16.250015258789062

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044554948806762695
    2. '<|end|>' → logprob: -4.044554710388184
    3. '
' → logprob: -4.294554710388184
    4. '        
' → logprob: -4.669554710388184
    5. '   ' → logprob: -6.794554710388184
    6. '    
' → logprob: -7.919554710388184
    7. ')' → logprob: -8.294554710388184
    8. 'import' → logprob: -8.544554710388184
    9. 'from' → logprob: -9.044554710388184
    10. 'def' → logprob: -9.044554710388184

Token 392: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9582037329673767
    2. 'dist' → logprob: -1.0832037925720215
    3. '       ' → logprob: -1.9582037925720215
    4. 'from' → logprob: -2.5832037925720215
    5. 'visited' → logprob: -3.7082037925720215
    6. 'distance' → logprob: -3.9582037925720215
    7. 'import' → logprob: -5.9582037925720215
    8. 'ns' → logprob: -6.5832037925720215
    9. 'adj' → logprob: -6.8332037925720215
    10. ' #' → logprob: -6.9582037925720215

Token 393: ' Now' (ID: 6549)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.846713125705719
    2. 'dist' → logprob: -1.0967130661010742
    3. 'from' → logprob: -2.596713066101074
    4. 'ns' → logprob: -3.221713066101074
    5. 'distance' → logprob: -3.596713066101074
    6. 'visited' → logprob: -3.971713066101074
    7. 'for' → logprob: -4.096713066101074
    8. 'ew' → logprob: -4.971713066101074
    9. 'uf' → logprob: -5.721713066101074
    10. 'import' → logprob: -5.721713066101074

Token 394: ' determine' (ID: 11433)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6474840641021729
    2. '#' → logprob: -1.1474840641021729
    3. ',' → logprob: -2.647484064102173
    4. 'from' → logprob: -3.647484064102173
    5. 'we' → logprob: -3.897484064102173
    6. ' we' → logprob: -4.772483825683594
    7. 'import' → logprob: -4.897483825683594
    8. 'build' → logprob: -5.272483825683594
    9. 'for' → logprob: -5.647483825683594
    10. '   ' → logprob: -6.272483825683594

Token 395: ' equal' (ID: 12629)
  Prédit: ' answers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' answers' → logprob: -2.044687271118164
    2. 'answers' → logprob: -2.044687271118164
    3. ' which' → logprob: -2.169687271118164
    4. ' for' → logprob: -2.419687271118164
    5. ' the' → logprob: -2.669687271118164
    6. 'for' → logprob: -2.669687271118164
    7. ' directions' → logprob: -2.794687271118164
    8. ' answer' → logprob: -3.294687271118164
    9. '       ' → logprob: -3.419687271118164
    10. 'answer' → logprob: -3.544687271118164

Token 396: ' strength' (ID: 9386)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -2.1068501472473145
    2. 'ities' → logprob: -2.2318501472473145
    3. '   ' → logprob: -2.3568501472473145
    4. 's' → logprob: -2.6068501472473145
    5. ' crossings' → logprob: -2.6068501472473145
    6. 'to' → logprob: -2.8568501472473145
    7. '=' → logprob: -3.2318501472473145
    8. 'cross' → logprob: -3.3568501472473145
    9. 'neighbor' → logprob: -3.6068501472473145
    10. ' =' → logprob: -3.6068501472473145

Token 397: ' relation' (ID: 18075)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4797112047672272
    2. ' =' → logprob: -2.6047112941741943
    3. 'strength' → logprob: -2.7297112941741943
    4. '=' → logprob: -2.9797112941741943
    5. 'equal' → logprob: -3.2297112941741943
    6. '()' → logprob: -3.4797112941741943
    7. 'for' → logprob: -3.6047112941741943
    8. ' for' → logprob: -4.479711055755615
    9. 'answers' → logprob: -5.104711055755615
    10. '#' → logprob: -5.104711055755615

Token 398: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2936358153820038
    2. '
' → logprob: -1.4186358451843262
    3. '<|end|>' → logprob: -5.668635845184326
    4. '        
' → logprob: -6.168635845184326
    5. ':' → logprob: -6.668635845184326
    6. ' for' → logprob: -6.918635845184326
    7. ',' → logprob: -7.043635845184326
    8. ' =' → logprob: -7.043635845184326
    9. '=' → logprob: -7.293635845184326
    10. ',
' → logprob: -8.418635368347168

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02862095832824707
    2. ' =' → logprob: -4.528620719909668
    3. '=' → logprob: -5.153620719909668
    4. '<|end|>' → logprob: -5.778620719909668
    5. '
' → logprob: -6.528620719909668
    6. ',' → logprob: -6.778620719909668
    7. 'equal' → logprob: -7.028620719909668
    8. '        
' → logprob: -7.153620719909668
    9. '#' → logprob: -7.653620719909668
    10. ' equal' → logprob: -7.653620719909668

Token 400: ' #' (ID: 1069)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.27407968044281006
    2. ' equal' → logprob: -1.89907968044281
    3. 'strength' → logprob: -3.7740797996520996
    4. 'eq' → logprob: -3.7740797996520996
    5. '       ' → logprob: -4.3990797996521
    6. 'equ' → logprob: -5.7740797996521
    7. 'edges' → logprob: -5.8990797996521
    8. 'equals' → logprob: -5.8990797996521
    9. 'relations' → logprob: -5.8990797996521
    10. ' strength' → logprob: -5.8990797996521

Token 401: ' Two' (ID: 13311)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.1267947405576706
    2. 'strength' → logprob: -2.7517948150634766
    3. ' equal' → logprob: -3.7517948150634766
    4. 'eq' → logprob: -5.126794815063477
    5. '#' → logprob: -5.501794815063477
    6. 'equ' → logprob: -5.501794815063477
    7. 'ns' → logprob: -5.876794815063477
    8. ' strength' → logprob: -6.626794815063477
    9. '   ' → logprob: -6.626794815063477
    10. 'for' → logprob: -6.751794815063477

Token 402: ' streets' (ID: 25360)
  Prédit: ' streets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' streets' → logprob: -0.19138023257255554
    2. 'stre' → logprob: -2.691380262374878
    3. ' ns' → logprob: -3.316380262374878
    4. 'ns' → logprob: -3.566380262374878
    5. 'st' → logprob: -4.441380023956299
    6. ' crossings' → logprob: -5.941380023956299
    7. '_st' → logprob: -6.191380023956299
    8. ' lines' → logprob: -6.191380023956299
    9. ' equal' → logprob: -6.191380023956299
    10. ' for' → logprob: -6.191380023956299

Token 403: ' A' (ID: 355)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.222416639328003
    2. ' of' → logprob: -1.597416639328003
    3. ' that' → logprob: -1.847416639328003
    4. ' are' → logprob: -2.222416639328003
    5. ' from' → logprob: -2.847416639328003
    6. 'from' → logprob: -3.097416639328003
    7. ' have' → logprob: -3.472416639328003
    8. 'in' → logprob: -3.722416639328003
    9. ' on' → logprob: -3.847416639328003
    10. ' with' → logprob: -4.222416877746582

Token 404: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09933384507894516
    2. 'and' → logprob: -3.5993337631225586
    3. ' are' → logprob: -4.224333763122559
    4. ',' → logprob: -4.224333763122559
    5. ' have' → logprob: -4.849333763122559
    6. ' can' → logprob: -5.099333763122559
    7. ' =' → logprob: -5.349333763122559
    8. ' ==' → logprob: -5.474333763122559
    9. ' connected' → logprob: -5.974333763122559
    10. ' equal' → logprob: -6.099333763122559

Token 405: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20153222978115082
    2. ' B' → logprob: -1.701532244682312
    3. ' two' → logprob: -9.451532363891602
    4. 'two' → logprob: -11.201532363891602
    5. ' ' → logprob: -11.826532363891602
    6. 'b' → logprob: -11.951532363891602
    7. 'Two' → logprob: -12.201532363891602
    8. 'A' → logprob: -13.076532363891602
    9. '<|end|>' → logprob: -13.201532363891602
    10. 'a' → logprob: -13.951532363891602

Token 406: ' have' (ID: 679)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.13473796844482422
    2. ' have' → logprob: -3.134737968444824
    3. ' can' → logprob: -3.634737968444824
    4. ' in' → logprob: -3.759737968444824
    5. 'are' → logprob: -5.009737968444824
    6. ' if' → logprob: -5.259737968444824
    7. ' must' → logprob: -5.509737968444824
    8. ' that' → logprob: -5.884737968444824
    9. ' belong' → logprob: -5.884737968444824
    10. ' =' → logprob: -6.134737968444824

Token 407: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.5825241208076477
    2. ' equal' → logprob: -0.8325241208076477
    3. 'the' → logprob: -6.082524299621582
    4. ' the' → logprob: -6.332524299621582
    5. 'same' → logprob: -7.582524299621582
    6. 'an' → logprob: -7.707524299621582
    7. ' an' → logprob: -8.207524299621582
    8. 'a' → logprob: -8.332524299621582
    9. ' same' → logprob: -8.832524299621582
    10. '#' → logprob: -9.082524299621582

Token 408: ' strength' (ID: 9386)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.6516624093055725
    2. ' strength' → logprob: -0.9016624093055725
    3. 'strength' → logprob: -2.6516623497009277
    4. '_' → logprob: -6.276662349700928
    5. ' _' → logprob: -8.276662826538086
    6. '-strength' → logprob: -9.526662826538086
    7. '_str' → logprob: -10.276662826538086
    8. '_s' → logprob: -10.401662826538086
    9. ' strengths' → logprob: -10.526662826538086
    10. 'streng' → logprob: -10.901662826538086

Token 409: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0033071122597903013
    2. 'if' → logprob: -6.003307342529297
    3. ' iff' → logprob: -8.003307342529297
    4. '<|end|>' → logprob: -8.503307342529297
    5. ' =' → logprob: -9.378307342529297
    6. ' only' → logprob: -9.503307342529297
    7. ' ' → logprob: -10.253307342529297
    8. ',' → logprob: -10.628307342529297
    9. '   ' → logprob: -10.878307342529297
    10. ' and' → logprob: -11.628307342529297

Token 410: ':
' (ID: 734)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.918097734451294
    2. '(' → logprob: -1.293097734451294
    3. '(A' → logprob: -2.543097734451294
    4. 'abs' → logprob: -3.168097734451294
    5. 'they' → logprob: -3.168097734451294
    6. 'color' → logprob: -3.418097734451294
    7. 'there' → logprob: -3.793097734451294
    8. ' there' → logprob: -3.918097734451294
    9. ' (' → logprob: -4.043097496032715
    10. '(abs' → logprob: -4.043097496032715

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49282529950141907
    2. ' A' → logprob: -2.2428252696990967
    3. '        ' → logprob: -2.6178252696990967
    4. ' (' → logprob: -2.7428252696990967
    5. '#' → logprob: -3.4928252696990967
    6. ' not' → logprob: -3.9928252696990967
    7. '<|end|>' → logprob: -4.242825508117676
    8. ' color' → logprob: -4.367825508117676
    9. ' a' → logprob: -4.492825508117676
    10. 'A' → logprob: -4.492825508117676

Token 412: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8333985805511475
    2. '       ' → logprob: -0.8333985805511475
    3. ' #' → logprob: -2.2083985805511475
    4. ' (' → logprob: -4.208398818969727
    5. ' A' → logprob: -6.333398818969727
    6. '           ' → logprob: -7.083398818969727
    7. '        ' → logprob: -7.208398818969727
    8. ' a' → logprob: -7.708398818969727
    9. 'A' → logprob: -7.708398818969727
    10. 'color' → logprob: -8.083398818969727

Token 413: ' (' (ID: 350)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.5836363434791565
    2. ' (' → logprob: -1.3336362838745117
    3. 'color' → logprob: -2.5836362838745117
    4. ' A' → logprob: -3.4586362838745117
    5. ' abs' → logprob: -3.4586362838745117
    6. 'A' → logprob: -3.8336362838745117
    7. 'abs' → logprob: -5.208636283874512
    8. '(color' → logprob: -5.208636283874512
    9. ' not' → logprob: -6.333636283874512
    10. '#' → logprob: -6.958636283874512

Token 414: '1' (ID: 16)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.31727197766304016
    2. 'A' → logprob: -1.6922719478607178
    3. ' color' → logprob: -3.0672719478607178
    4. ' (' → logprob: -4.192272186279297
    5. '(color' → logprob: -4.192272186279297
    6. ' A' → logprob: -5.942272186279297
    7. '(A' → logprob: -5.942272186279297
    8. 'abs' → logprob: -6.567272186279297
    9. '   ' → logprob: -7.192272186279297
    10. '(' → logprob: -7.317272186279297

Token 415: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05095130577683449
    2. ',' → logprob: -4.5509514808654785
    3. ' if' → logprob: -4.8009514808654785
    4. ' )' → logprob: -4.8009514808654785
    5. ' and' → logprob: -5.0509514808654785
    6. ' in' → logprob: -5.4259514808654785
    7. ' ==' → logprob: -5.5509514808654785
    8. '       ' → logprob: -6.5509514808654785
    9. '   ' → logprob: -6.5509514808654785
    10. 'if' → logprob: -6.6759514808654785

Token 416: ' both' (ID: 2973)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6803703904151917
    2. '(' → logprob: -1.8053703308105469
    3. ' (' → logprob: -2.430370330810547
    4. ' color' → logprob: -2.680370330810547
    5. ' A' → logprob: -2.930370330810547
    6. 'color' → logprob: -3.055370330810547
    7. 'They' → logprob: -3.680370330810547
    8. ' they' → logprob: -4.305370330810547
    9. ' both' → logprob: -5.305370330810547
    10. 'they' → logprob: -5.305370330810547

Token 417: ' cross' (ID: 8088)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24534420669078827
    2. 'in' → logprob: -2.1203441619873047
    3. ' are' → logprob: -2.4953441619873047
    4. 'are' → logprob: -5.370344161987305
    5. 'A' → logprob: -5.495344161987305
    6. ' A' → logprob: -5.495344161987305
    7. ' belong' → logprob: -6.870344161987305
    8. ' not' → logprob: -7.995344161987305
    9. ' have' → logprob: -8.745344161987305
    10. 'a' → logprob: -8.745344161987305

Token 418: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.5061345100402832
    2. ' and' → logprob: -2.006134510040283
    3. '   ' → logprob: -2.131134510040283
    4. ' or' → logprob: -2.506134510040283
    5. '       ' → logprob: -2.506134510040283
    6. ',' → logprob: -3.131134510040283
    7. ' (' → logprob: -3.256134510040283
    8. '(' → logprob: -3.631134510040283
    9. ' each' → logprob: -3.631134510040283
    10. 'the' → logprob: -3.631134510040283

Token 419: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.403388112783432
    2. ' same' → logprob: -1.1533881425857544
    3. 'other' → logprob: -4.403388023376465
    4. ' other' → logprob: -6.278388023376465
    5. 'third' → logprob: -6.278388023376465
    6. ' third' → logprob: -9.653388023376465
    7. 'next' → logprob: -9.778388023376465
    8. ' next' → logprob: -10.028388023376465
    9. '   ' → logprob: -10.653388023376465
    10. ' ' → logprob: -10.778388023376465

Token 420: ' third' (ID: 6914)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.3132101893424988
    2. '-' → logprob: -2.6882102489471436
    3. 'street' → logprob: -2.9382102489471436
    4. ' line' → logprob: -3.5632102489471436
    5. ' streets' → logprob: -3.5632102489471436
    6. ' direction' → logprob: -4.3132100105285645
    7. ' side' → logprob: -4.4382100105285645
    8. 'direction' → logprob: -4.5632100105285645
    9. ' type' → logprob: -5.0632100105285645
    10. 'line' → logprob: -5.8132100105285645

Token 421: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.723587155342102
    2. 'street' → logprob: -0.848587155342102
    3. '-' → logprob: -2.7235870361328125
    4. 'stre' → logprob: -4.8485870361328125
    5. ')' → logprob: -5.3485870361328125
    6. ' ' → logprob: -5.8485870361328125
    7. ' -' → logprob: -6.4735870361328125
    8. '   ' → logprob: -6.7235870361328125
    9. 'party' → logprob: -8.098587036132812
    10. ' one' → logprob: -8.223587036132812

Token 422: ' C' (ID: 363)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0495653934776783
    2. ' and' → logprob: -3.799565315246582
    3. '           ' → logprob: -4.299565315246582
    4. ',' → logprob: -5.174565315246582
    5. ' or' → logprob: -5.174565315246582
    6. ' (' → logprob: -8.549565315246582
    7. 'and' → logprob: -8.799565315246582
    8. '   ' → logprob: -9.049565315246582
    9. '<|end|>' → logprob: -9.049565315246582
    10. ' #' → logprob: -9.299565315246582

Token 423: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14693647623062134
    2. '           ' → logprob: -2.8969364166259766
    3. ' and' → logprob: -3.2719364166259766
    4. ',' → logprob: -3.7719364166259766
    5. ' or' → logprob: -4.521936416625977
    6. '#' → logprob: -5.771936416625977
    7. 'and' → logprob: -6.271936416625977
    8. '   ' → logprob: -7.021936416625977
    9. ' (' → logprob: -7.396936416625977
    10. ' #' → logprob: -7.521936416625977

Token 424: ' the' (ID: 290)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.6274467706680298
    2. ' ns' → logprob: -0.8774467706680298
    3. ' ew' → logprob: -4.00244665145874
    4. ' the' → logprob: -5.00244665145874
    5. 'ew' → logprob: -5.62744665145874
    6. 'the' → logprob: -5.75244665145874
    7. ' at' → logprob: -6.12744665145874
    8. ' a' → logprob: -6.37744665145874
    9. '(ns' → logprob: -6.50244665145874
    10. 'common' → logprob: -6.50244665145874

Token 425: ' input' (ID: 3422)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.3085971474647522
    2. ' same' → logprob: -1.8085970878601074
    3. 'ns' → logprob: -2.4335970878601074
    4. ' opposite' → logprob: -6.308597087860107
    5. 'op' → logprob: -6.308597087860107
    6. 'graph' → logprob: -6.683597087860107
    7. '   ' → logprob: -6.808597087860107
    8. ' ns' → logprob: -6.808597087860107
    9. 'NS' → logprob: -6.808597087860107
    10. '#' → logprob: -7.183597087860107

Token 426: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032020892947912216
    2. ',' → logprob: -4.6570210456848145
    3. '
' → logprob: -4.9070210456848145
    4. '           ' → logprob: -5.4070210456848145
    5. ' and' → logprob: -5.4070210456848145
    6. '        
' → logprob: -6.6570210456848145
    7. ',
' → logprob: -7.2820210456848145
    8. '   ' → logprob: -7.4070210456848145
    9. ' (' → logprob: -7.7820210456848145
    10. ' or' → logprob: -8.032020568847656

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01646726205945015
    2. ' and' → logprob: -5.266467094421387
    3. ',' → logprob: -5.391467094421387
    4. '<|end|>' → logprob: -5.891467094421387
    5. '           ' → logprob: -6.391467094421387
    6. ' or' → logprob: -8.141467094421387
    7. '#' → logprob: -8.266467094421387
    8. ' (' → logprob: -8.391467094421387
    9. ' #' → logprob: -8.516467094421387
    10. '   ' → logprob: -8.516467094421387

Token 428: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001463692169636488
    2. '#' (adapté à ' #') → logprob: -7.626463890075684
    3. '           ' → logprob: -7.876463890075684
    4. ' and' → logprob: -9.001463890075684
    5. ',' → logprob: -9.126463890075684
    6. ' (' → logprob: -9.376463890075684
    7. '<|end|>' → logprob: -9.376463890075684
    8. ' #' → logprob: -9.876463890075684
    9. ' or' → logprob: -10.626463890075684
    10. '   ' → logprob: -10.626463890075684

Token 429: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013586864806711674
    2. '
' → logprob: -7.751358509063721
    3. '<|end|>' → logprob: -8.751358985900879
    4. '        
' → logprob: -8.876358985900879
    5. '#' → logprob: -9.001358985900879
    6. '           ' → logprob: -9.001358985900879
    7. ',' → logprob: -9.626358985900879
    8. '   ' → logprob: -9.876358985900879
    9. ' and' → logprob: -10.001358985900879
    10. ')' → logprob: -10.001358985900879

Token 430: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9825613498687744
    2. '       ' → logprob: -0.9825613498687744
    3. ' )' → logprob: -2.1075613498687744
    4. '#' → logprob: -2.8575613498687744
    5. '
' → logprob: -3.6075613498687744
    6. 'newline' → logprob: -4.982561111450195
    7. '        
' → logprob: -5.107561111450195
    8. '   ' → logprob: -5.107561111450195
    9. '\n' → logprob: -5.232561111450195
    10. ' 
' → logprob: -5.232561111450195

Token 431: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008573676459491253
    2. '       ' → logprob: -5.008573532104492
    3. ' )' → logprob: -6.883573532104492
    4. '           ' → logprob: -7.883573532104492
    5. '   ' → logprob: -8.633573532104492
    6. ' and' → logprob: -9.008573532104492
    7. 'and' → logprob: -9.508573532104492
    8. '#' → logprob: -10.758573532104492
    9. '        ' → logprob: -11.133573532104492
    10. '      ' → logprob: -11.883573532104492

Token 432: ' there' (ID: 1354)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.199321985244751
    2. ' any' → logprob: -1.949321985244751
    3. ' color' → logprob: -2.824321985244751
    4. ' C' → logprob: -2.949321985244751
    5. ' both' → logprob: -2.949321985244751
    6. ' c' → logprob: -3.074321985244751
    7. 'C' → logprob: -3.199321985244751
    8. '(' → logprob: -3.199321985244751
    9. ' for' → logprob: -3.574321985244751
    10. 'color' → logprob: -3.824321985244751

Token 433: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.292888343334198
    2. ''s' → logprob: -1.6678884029388428
    3. ' is' → logprob: -3.0428884029388428
    4. 'exists' → logprob: -4.542888164520264
    5. 'are' → logprob: -6.167888164520264
    6. 's' → logprob: -6.292888164520264
    7. ' exists' → logprob: -6.792888164520264
    8. '#' → logprob: -7.292888164520264
    9. ' are' → logprob: -8.167888641357422
    10. 'in' → logprob: -8.542888641357422

Token 434: ' no' (ID: 860)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.32433170080184937
    2. ' an' → logprob: -1.9493317604064941
    3. 'a' → logprob: -2.699331760406494
    4. ' at' → logprob: -3.199331760406494
    5. ' no' → logprob: -4.699331760406494
    6. ' some' → logprob: -5.074331760406494
    7. 'an' → logprob: -5.574331760406494
    8. ' ' → logprob: -5.824331760406494
    9. ' c' → logprob: -6.574331760406494
    10. 'at' → logprob: -7.449331760406494

Token 435: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -1.3020868301391602
    2. ' space' → logprob: -1.6770868301391602
    3. 'space' → logprob: -2.17708683013916
    4. ' edge' → logprob: -2.67708683013916
    5. 'street' → logprob: -3.05208683013916
    6. ' ' → logprob: -3.30208683013916
    7. ' path' → logprob: -3.42708683013916
    8. ' other' → logprob: -3.80208683013916
    9. '   ' → logprob: -4.05208683013916
    10. ''' → logprob: -4.05208683013916

Token 436: ' D' (ID: 415)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.8250488638877869
    2. ' ' → logprob: -1.4500489234924316
    3. ' in' → logprob: -1.9500489234924316
    4. ' s' → logprob: -2.9500489234924316
    5. ' C' → logprob: -3.3250489234924316
    6. ' '' → logprob: -3.8250489234924316
    7. ' c' → logprob: -4.200048923492432
    8. ' between' → logprob: -4.575048923492432
    9. 'C' → logprob: -4.825048923492432
    10. 's' → logprob: -5.075048923492432

Token 437: ' such' (ID: 2238)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.11942122131586075
    2. ' ' → logprob: -2.9944212436676025
    3. ' in' → logprob: -3.6194212436676025
    4. '   ' → logprob: -5.119421005249023
    5. ' such' → logprob: -5.119421005249023
    6. 'that' → logprob: -5.244421005249023
    7. '<|end|>' → logprob: -5.494421005249023
    8. ')' → logprob: -5.994421005249023
    9. ' which' → logprob: -6.494421005249023
    10. '           ' → logprob: -6.744421005249023

Token 438: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.028273940086364746
    2. ' that' → logprob: -3.6532740592956543
    3. 'at' → logprob: -6.903274059295654
    4. '           ' → logprob: -7.403274059295654
    5. '       ' → logprob: -9.653273582458496
    6. '_that' → logprob: -9.778273582458496
    7. '               ' → logprob: -10.278273582458496
    8. ')' → logprob: -10.778273582458496
    9. '```' → logprob: -10.778273582458496
    10. '   ' → logprob: -11.028273582458496

Token 439: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.12925468385219574
    2. '(' → logprob: -3.5042545795440674
    3. ' D' → logprob: -4.0042548179626465
    4. 'A' → logprob: -4.7542548179626465
    5. ' (' → logprob: -4.7542548179626465
    6. 'd' → logprob: -5.1292548179626465
    7. 'C' → logprob: -5.1292548179626465
    8. 'graph' → logprob: -5.2542548179626465
    9. '(a' → logprob: -5.2542548179626465
    10. '((' → logprob: -5.5042548179626465

Token 440: '-A' (ID: 9406)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0229986906051636
    2. ' crosses' → logprob: -1.7729986906051636
    3. 'cross' → logprob: -2.022998809814453
    4. 'in' → logprob: -2.272998809814453
    5. ' ==' → logprob: -2.647998809814453
    6. '-' → logprob: -2.897998809814453
    7. '==' → logprob: -4.022998809814453
    8. ' is' → logprob: -4.022998809814453
    9. ' -' → logprob: -4.397998809814453
    10. ' cross' → logprob: -4.772998809814453

Token 441: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14521196484565735
    2. ' ' → logprob: -4.270212173461914
    3. ' ==' → logprob: -4.395212173461914
    4. ''' → logprob: -4.520212173461914
    5. '   ' → logprob: -4.645212173461914
    6. '-' → logprob: -4.645212173461914
    7. '       ' → logprob: -4.770212173461914
    8. ' '' → logprob: -4.770212173461914
    9. 'in' → logprob: -4.770212173461914
    10. ' -' → logprob: -5.020212173461914

Token 442: ' B' (ID: 418)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.1324363648891449
    2. ' D' → logprob: -2.1324362754821777
    3. 'A' → logprob: -5.757436275482178
    4. ' A' → logprob: -7.507436275482178
    5. 'C' → logprob: -7.882436275482178
    6. 'B' → logprob: -8.007436752319336
    7. 'd' → logprob: -8.257436752319336
    8. '   ' → logprob: -8.882436752319336
    9. ''' → logprob: -9.007436752319336
    10. ' C' → logprob: -9.507436752319336

Token 443: '-D' (ID: 11989)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011596855707466602
    2. '-cross' → logprob: -5.6365966796875
    3. ' -' → logprob: -6.3865966796875
    4. '-c' → logprob: -6.5115966796875
    5. '<|end|>' → logprob: -7.3865966796875
    6. 's' → logprob: -7.6365966796875
    7. ' and' → logprob: -7.8865966796875
    8. '<|end|>' → logprob: -7.8865966796875
    9. '   ' → logprob: -8.1365966796875
    10. ' ' → logprob: -8.5115966796875

Token 444: ' appear' (ID: 7680)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2156950831413269
    2. 'and' → logprob: -2.2156951427459717
    3. ' in' → logprob: -3.4656951427459717
    4. '           ' → logprob: -4.215694904327393
    5. '<|end|>' → logprob: -5.215694904327393
    6. '       ' → logprob: -5.340694904327393
    7. ',' → logprob: -5.465694904327393
    8. '#' → logprob: -5.715694904327393
    9. 'in' → logprob: -5.965694904327393
    10. ')' → logprob: -6.340694904327393

Token 445: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17790144681930542
    2. '
' → logprob: -2.30290150642395
    3. '<|end|>' → logprob: -2.80290150642395
    4. '<|end|>' → logprob: -7.177901268005371
    5. '        
' → logprob: -7.802901268005371
    6. ',' → logprob: -8.052901268005371
    7. '.' → logprob: -8.927901268005371
    8. ' in' → logprob: -9.052901268005371
    9. ')' → logprob: -9.427901268005371
    10. '           ' → logprob: -9.552901268005371

Token 446: ' input' (ID: 3422)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.09778828918933868
    2. ' crossings' → logprob: -2.5977883338928223
    3. ' cross' → logprob: -4.347788333892822
    4. 'stre' → logprob: -6.597788333892822
    5. ' streets' → logprob: -6.972788333892822
    6. '   ' → logprob: -7.097788333892822
    7. 'input' → logprob: -7.347788333892822
    8. ' input' → logprob: -7.847788333892822
    9. 'the' → logprob: -8.472787857055664
    10. '       ' → logprob: -8.722787857055664

Token 447: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08374670147895813
    2. '
' → logprob: -2.5837466716766357
    3. '<|end|>' → logprob: -5.833746910095215
    4. '        
' → logprob: -6.333746910095215
    5. '<|end|>' → logprob: -9.583746910095215
    6. '#' → logprob: -10.833746910095215
    7. '   ' → logprob: -11.958746910095215
    8. ',' → logprob: -12.333746910095215
    9. '        
        
' → logprob: -12.333746910095215
    10. '    
' → logprob: -12.583746910095215

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47841453552246094
    2. '
' → logprob: -0.9784145355224609
    3. '        
' → logprob: -5.853414535522461
    4. '#' → logprob: -7.728414535522461
    5. '<|end|>' → logprob: -8.228414535522461
    6. 'equal' → logprob: -8.853414535522461
    7. '

' → logprob: -9.103414535522461
    8. 'equ' → logprob: -9.853414535522461
    9. '
' → logprob: -10.103414535522461
    10. 'from' → logprob: -10.228414535522461

Token 449: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14641116559505463
    2. 'equal' → logprob: -2.896411180496216
    3. '
' → logprob: -3.271411180496216
    4. ' equal' → logprob: -3.521411180496216
    5. '        
' → logprob: -5.646410942077637
    6. 'equ' → logprob: -6.271410942077637
    7. '#' (adapté à ' #') → logprob: -6.521410942077637
    8. 'eq' → logprob: -6.646410942077637
    9. ' eq' → logprob: -7.396410942077637
    10. 'from' → logprob: -7.771410942077637

Token 450: ' (' (ID: 350)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.038981739431619644
    2. 'eq' → logprob: -4.538981914520264
    3. '       ' → logprob: -4.663981914520264
    4. '#' → logprob: -4.663981914520264
    5. ' equal' → logprob: -5.663981914520264
    6. 'from' → logprob: -6.913981914520264
    7. 'strength' → logprob: -7.038981914520264
    8. 'equals' → logprob: -7.538981914520264
    9. 'equ' → logprob: -7.663981914520264
    10. 'relation' → logprob: -7.663981914520264

Token 451: '3' (ID: 18)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5931462645530701
    2. '#' → logprob: -1.4681463241577148
    3. '       ' → logprob: -2.218146324157715
    4. ' )' → logprob: -3.593146324157715
    5. '
' → logprob: -3.718146324157715
    6. ')
' → logprob: -3.968146324157715
    7. 'continue' → logprob: -5.093146324157715
    8. ' #' → logprob: -5.468146324157715
    9. 'for' → logprob: -5.718146324157715
    10. ' continue' → logprob: -5.843146324157715

Token 452: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001771331299096346
    2. ' )' → logprob: -7.126771450042725
    3. '       ' → logprob: -7.751771450042725
    4. '#' → logprob: -7.876771450042725
    5. ')#' → logprob: -9.126770973205566
    6. '   ' → logprob: -10.876770973205566
    7. '           ' → logprob: -11.251770973205566
    8. ')
' → logprob: -12.126770973205566
    9. '        ' → logprob: -13.376770973205566
    10. 'def' → logprob: -13.876770973205566

Token 453: ' there' (ID: 1354)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2971014082431793
    2. ' for' → logprob: -2.1721014976501465
    3. ' #' → logprob: -2.6721014976501465
    4. '#' → logprob: -3.5471014976501465
    5. 'for' → logprob: -4.5471014976501465
    6. '        ' → logprob: -5.1721014976501465
    7. ' continue' → logprob: -5.2971014976501465
    8. '
' → logprob: -5.7971014976501465
    9. '           ' → logprob: -5.9221014976501465
    10. '   ' → logprob: -6.1721014976501465

Token 454: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9271741509437561
    2. ' is' → logprob: -1.1771740913391113
    3. '.' → logprob: -2.9271740913391113
    4. ')' → logprob: -2.9271740913391113
    5. ''s' → logprob: -2.9271740913391113
    6. ' are' → logprob: -3.1771740913391113
    7. ' =' → logprob: -3.3021740913391113
    8. 'is' → logprob: -4.302174091339111
    9. '#' → logprob: -4.802174091339111
    10. ' not' → logprob: -5.052174091339111

Token 455: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.01605900563299656
    2. 'no' → logprob: -4.391058921813965
    3. ' a' → logprob: -6.016058921813965
    4. ' not' → logprob: -7.516058921813965
    5. ' an' → logprob: -8.641058921813965
    6. ' ' → logprob: -9.266058921813965
    7. ' at' → logprob: -9.516058921813965
    8. '   ' → logprob: -9.891058921813965
    9. 'a' → logprob: -10.141058921813965
    10. 'not' → logprob: -10.266058921813965

Token 456: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.2942972481250763
    2. ' D' → logprob: -1.919297218322754
    3. 'street' → logprob: -3.419297218322754
    4. ' ' → logprob: -3.419297218322754
    5. ' C' → logprob: -4.419297218322754
    6. 'stre' → logprob: -4.419297218322754
    7. ' space' → logprob: -5.544297218322754
    8. ' c' → logprob: -5.794297218322754
    9. 'D' → logprob: -6.294297218322754
    10. ' s' → logprob: -6.669297218322754

Token 457: ' E' (ID: 457)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.009688206948339939
    2. 'D' → logprob: -5.009688377380371
    3. ' d' → logprob: -6.634688377380371
    4. ' E' → logprob: -7.134688377380371
    5. ' C' → logprob: -7.509688377380371
    6. ' ' → logprob: -9.009688377380371
    7. 'd' → logprob: -9.259688377380371
    8. 'E' → logprob: -10.134688377380371
    9. ' s' → logprob: -10.634688377380371
    10. 'C' → logprob: -11.634688377380371

Token 458: ' such' (ID: 2238)
  Prédit: ' such'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.04958115890622139
    2. ' that' → logprob: -3.4245810508728027
    3. ' ' → logprob: -5.174581050872803
    4. '<|end|>' → logprob: -5.549581050872803
    5. 'such' → logprob: -5.924581050872803
    6. 'that' → logprob: -6.924581050872803
    7. '           ' → logprob: -7.549581050872803
    8. '       ' → logprob: -8.674581527709961
    9. '   ' → logprob: -8.674581527709961
    10. '<|end|>' → logprob: -8.674581527709961

Token 459: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.06342332065105438
    2. ' that' → logprob: -2.8134233951568604
    3. '           ' → logprob: -7.188423156738281
    4. '```' → logprob: -8.688423156738281
    5. 'E' → logprob: -8.813423156738281
    6. '               ' → logprob: -8.938423156738281
    7. '   ' → logprob: -9.563423156738281
    8. '       ' → logprob: -9.938423156738281
    9. '#' → logprob: -10.688423156738281
    10. 'a' → logprob: -11.188423156738281

Token 460: ' A' (ID: 355)
  Prédit: ' E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.6823037266731262
    2. 'E' → logprob: -0.8073037266731262
    3. ' (' → logprob: -3.9323036670684814
    4. '(E' → logprob: -5.1823039054870605
    5. '(e' → logprob: -5.4323039054870605
    6. '   ' → logprob: -5.4323039054870605
    7. '(' → logprob: -6.0573039054870605
    8. 'e' → logprob: -6.1823039054870605
    9. ' ' → logprob: -6.3073039054870605
    10. ' color' → logprob: -6.4323039054870605

Token 461: '-E' (ID: 15684)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.133882999420166
    2. ' and' → logprob: -1.508882999420166
    3. ' -' → logprob: -1.633882999420166
    4. '       ' → logprob: -2.883882999420166
    5. ' in' → logprob: -2.883882999420166
    6. '-e' → logprob: -3.508882999420166
    7. '-E' → logprob: -3.883882999420166
    8. 'and' → logprob: -4.258882999420166
    9. '           ' → logprob: -4.633882999420166
    10. '   ' → logprob: -4.633882999420166

Token 462: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09685403853654861
    2. ' in' → logprob: -2.9718539714813232
    3. 'and' → logprob: -3.4718539714813232
    4. 'in' → logprob: -5.846854209899902
    5. '           ' → logprob: -6.096854209899902
    6. ' or' → logprob: -6.096854209899902
    7. '<|end|>' → logprob: -6.971854209899902
    8. ')' → logprob: -7.346854209899902
    9. '[' → logprob: -8.721854209899902
    10. '       ' → logprob: -8.846854209899902

Token 463: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.08514178544282913
    2. ' E' → logprob: -2.585141897201538
    3. 'B' → logprob: -5.335141658782959
    4. ' B' → logprob: -6.835141658782959
    5. 'e' → logprob: -8.460142135620117
    6. '   ' → logprob: -9.835142135620117
    7. 'D' → logprob: -11.085142135620117
    8. ' e' → logprob: -11.335142135620117
    9. '       ' → logprob: -11.585142135620117
    10. ' ' → logprob: -11.960142135620117

Token 464: '-B' (ID: 8287)
  Prédit: '-B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-B' → logprob: -0.5639560222625732
    2. '-E' → logprob: -0.9389560222625732
    3. '-A' → logprob: -3.5639560222625732
    4. '-C' → logprob: -5.438956260681152
    5. '-' → logprob: -5.563956260681152
    6. '-D' → logprob: -6.188956260681152
    7. '-F' → logprob: -6.688956260681152
    8. ' -' → logprob: -8.938956260681152
    9. '-b' → logprob: -10.563956260681152
    10. '-I' → logprob: -11.438956260681152

Token 465: ' appear' (ID: 7680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08224140107631683
    2. 'in' → logprob: -3.2072412967681885
    3. ' appear' → logprob: -3.4572412967681885
    4. 'appear' → logprob: -5.082241535186768
    5. '           ' → logprob: -8.58224105834961
    6. ' and' → logprob: -9.45724105834961
    7. ' appears' → logprob: -9.70724105834961
    8. 'appe' → logprob: -9.70724105834961
    9. ' ' → logprob: -10.08224105834961
    10. '       ' → logprob: -10.20724105834961

Token 466: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08303163200616837
    2. 'in' → logprob: -2.58303165435791
    3. ')' → logprob: -6.08303165435791
    4. '_in' → logprob: -7.20803165435791
    5. '           ' → logprob: -7.95803165435791
    6. '       ' → logprob: -8.45803165435791
    7. 's' → logprob: -9.33303165435791
    8. 'In' → logprob: -9.45803165435791
    9. '(' → logprob: -9.58303165435791
    10. '   ' → logprob: -9.83303165435791

Token 467: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07901349663734436
    2. ' input' → logprob: -2.5790135860443115
    3. '           ' → logprob: -11.07901382446289
    4. '(input' → logprob: -11.20401382446289
    5. 'the' → logprob: -11.32901382446289
    6. '[input' → logprob: -11.32901382446289
    7. '
' → logprob: -11.45401382446289
    8. '       ' → logprob: -12.07901382446289
    9. '=input' → logprob: -12.20401382446289
    10. 'c' → logprob: -12.20401382446289

Token 468: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011984329670667648
    2. '
' → logprob: -5.136984348297119
    3. '        
' → logprob: -6.011984348297119
    4. 'equal' → logprob: -6.136984348297119
    5. 'equ' → logprob: -7.261984348297119
    6. 'edges' → logprob: -8.386983871459961
    7. '#' → logprob: -9.261983871459961
    8. 'relations' → logprob: -9.636983871459961
    9. '   ' → logprob: -10.011983871459961
    10. 'eq' → logprob: -10.136983871459961

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016023457050323486
    2. 'equal' → logprob: -4.516023635864258
    3. '
' → logprob: -6.391023635864258
    4. '        
' → logprob: -6.766023635864258
    5. ' equal' → logprob: -7.141023635864258
    6. '#' → logprob: -7.766023635864258
    7. 'equ' → logprob: -8.641023635864258
    8. '   ' → logprob: -9.266023635864258
    9. '<|end|>' → logprob: -9.266023635864258
    10. 'eq' → logprob: -9.766023635864258

Token 470: ' #' (ID: 1069)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.15686602890491486
    2. '       ' → logprob: -3.0318660736083984
    3. '#' (adapté à ' #') → logprob: -3.1568660736083984
    4. 'eq' → logprob: -3.6568660736083984
    5. 'adj' → logprob: -5.031866073608398
    6. 'edges' → logprob: -5.656866073608398
    7. 'cross' → logprob: -5.656866073608398
    8. 'from' → logprob: -5.656866073608398
    9. 'strength' → logprob: -5.656866073608398
    10. ' equal' → logprob: -6.656866073608398

Token 471: ' we' (ID: 581)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.10878899693489075
    2. '#' → logprob: -2.9837889671325684
    3. 'eq' → logprob: -4.358788967132568
    4. 'strength' → logprob: -4.483788967132568
    5. 'adj' → logprob: -4.733788967132568
    6. 'from' → logprob: -5.233788967132568
    7. 'edges' → logprob: -5.358788967132568
    8. 'cross' → logprob: -5.483788967132568
    9. 'edge' → logprob: -7.358788967132568
    10. 'equ' → logprob: -7.608788967132568

Token 472: ' consider' (ID: 3331)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.143271565437317
    2. 'need' → logprob: -1.268271565437317
    3. ' need' → logprob: -2.6432714462280273
    4. '=' → logprob: -2.7682714462280273
    5. ' =' → logprob: -3.2682714462280273
    6. 'for' → logprob: -3.2682714462280273
    7. 'have' → logprob: -3.3932714462280273
    8. 's' → logprob: -3.6432714462280273
    9. 'continue' → logprob: -3.7682714462280273
    10. 'from' → logprob: -4.018271446228027

Token 473: ' only' (ID: 1606)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.5961319804191589
    2. 'adj' → logprob: -1.7211320400238037
    3. '#' → logprob: -2.2211320400238037
    4. 'neighbors' → logprob: -3.4711320400238037
    5. 'all' → logprob: -3.7211320400238037
    6. 'ns' → logprob: -3.8461320400238037
    7. '   ' → logprob: -4.221131801605225
    8. 'edges' → logprob: -4.471131801605225
    9. 'neighbor' → logprob: -4.846131801605225
    10. ' equal' → logprob: -4.971131801605225

Token 474: ' streets' (ID: 25360)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.017494870349764824
    2. 'equal' → logprob: -5.1424946784973145
    3. 'ew' → logprob: -5.6424946784973145
    4. 'edges' → logprob: -6.5174946784973145
    5. ' ns' → logprob: -6.7674946784973145
    6. '#' → logprob: -7.1424946784973145
    7. 'stre' → logprob: -7.2674946784973145
    8. 'all' → logprob: -7.8924946784973145
    9. 'eq' → logprob: -8.017495155334473
    10. '   ' → logprob: -8.017495155334473

Token 475: ' of' (ID: 328)
  Prédit: '_ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ns' → logprob: -0.8626068234443665
    2. '_in' → logprob: -1.4876067638397217
    3. ' =' → logprob: -2.1126067638397217
    4. 'with' → logprob: -3.6126067638397217
    5. 'ns' → logprob: -3.7376067638397217
    6. ' in' → logprob: -3.8626067638397217
    7. '=' → logprob: -3.8626067638397217
    8. 'in' → logprob: -4.112607002258301
    9. '_with' → logprob: -4.362607002258301
    10. '_' → logprob: -4.487607002258301

Token 476: ' the' (ID: 290)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.3475536108016968
    2. 'the' → logprob: -2.0975537300109863
    3. 'same' → logprob: -2.5975537300109863
    4. ' ns' → logprob: -3.5975537300109863
    5. ' the' → logprob: -3.9725537300109863
    6. 'different' → logprob: -4.347553730010986
    7. ' same' → logprob: -5.097553730010986
    8. 'color' → logprob: -5.347553730010986
    9. 'each' → logprob: -5.472553730010986
    10. 'def' → logprob: -5.597553730010986

Token 477: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.009358052164316177
    2. ' same' → logprob: -5.384357929229736
    3. 'ns' → logprob: -5.509357929229736
    4. 'op' → logprob: -9.009358406066895
    5. 'sam' → logprob: -9.134358406066895
    6. 'graph' → logprob: -9.509358406066895
    7. 'first' → logprob: -10.134358406066895
    8. 'type' → logprob: -10.384358406066895
    9. '   ' → logprob: -10.759358406066895
    10. 'city' → logprob: -10.884358406066895

Token 478: ' orientation' (ID: 29546)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3480571508407593
    2. ' color' → logprob: -2.473057270050049
    3. ' orientation' → logprob: -2.723057270050049
    4. ' type' → logprob: -3.098057270050049
    5. 'line' → logprob: -3.723057270050049
    6. 'orientation' → logprob: -3.973057270050049
    7. 'color' → logprob: -4.223057270050049
    8. '_line' → logprob: -4.348057270050049
    9. 'type' → logprob: -4.348057270050049
    10. '_orientation' → logprob: -5.473057270050049

Token 479: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1755308359861374
    2. '
' → logprob: -1.9255307912826538
    3. '        
' → logprob: -5.175530910491943
    4. 'for' → logprob: -5.550530910491943
    5. ',' → logprob: -6.175530910491943
    6. ' for' → logprob: -6.550530910491943
    7. 'same' → logprob: -7.925530910491943
    8. '#' → logprob: -8.550530433654785
    9. '```' → logprob: -8.675530433654785
    10. '
' → logprob: -9.050530433654785

Token 480: 'equal' (ID: 63943)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6321978569030762
    2. 'for' → logprob: -1.6321978569030762
    3. '       ' → logprob: -1.7571978569030762
    4. ' for' → logprob: -3.132197856903076
    5. ')
' → logprob: -3.257197856903076
    6. '
' → logprob: -4.257197856903076
    7. '        
' → logprob: -6.757197856903076
    8. ' )' → logprob: -7.132197856903076
    9. '           ' → logprob: -8.382198333740234
    10. '   ' → logprob: -8.632198333740234

Token 481: ' strength' (ID: 9386)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.06786531209945679
    2. ' strength' → logprob: -3.5678653717041016
    3. 'strength' → logprob: -3.9428653717041016
    4. '_st' → logprob: -4.192865371704102
    5. '   ' → logprob: -7.317865371704102
    6. '_' → logprob: -7.692865371704102
    7. '_orientation' → logprob: -7.692865371704102
    8. ')' → logprob: -8.192865371704102
    9. '_str' → logprob: -8.442865371704102
    10. ' _' → logprob: -8.942865371704102

Token 482: ' only' (ID: 1606)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14516659080982208
    2. '   ' → logprob: -3.5201666355133057
    3. ' sets' → logprob: -3.7701666355133057
    4. ' relation' → logprob: -3.7701666355133057
    5. ')
' → logprob: -5.145166397094727
    6. ' for' → logprob: -5.395166397094727
    7. '_st' → logprob: -5.520166397094727
    8. 'for' → logprob: -5.770166397094727
    9. '_set' → logprob: -5.895166397094727
    10. 's' → logprob: -5.895166397094727

Token 483: ' makes' (ID: 4787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7371293306350708
    2. ' if' → logprob: -1.1121293306350708
    3. 'if' → logprob: -2.1121292114257812
    4. ' for' → logprob: -3.3621292114257812
    5. 'for' → logprob: -4.237129211425781
    6. ' on' → logprob: -5.112129211425781
    7. ' )' → logprob: -5.487129211425781
    8. '   ' → logprob: -5.862129211425781
    9. ' in' → logprob: -5.987129211425781
    10. ' among' → logprob: -6.862129211425781

Token 484: ' sense' (ID: 8512)
  Prédit: 'sense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sense' → logprob: -0.38696908950805664
    2. ' sense' → logprob: -1.1369690895080566
    3. 's' → logprob: -9.511968612670898
    4. ' s' → logprob: -11.761968612670898
    5. '   ' → logprob: -12.261968612670898
    6. ' sentido' → logprob: -12.761968612670898
    7. ' ' → logprob: -13.261968612670898
    8. ' senses' → logprob: -13.386968612670898
    9. ')' → logprob: -13.636968612670898
    10. ' sens' → logprob: -14.011968612670898

Token 485: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3539762496948242
    2. ')' → logprob: -1.6039762496948242
    3. ' if' → logprob: -3.353976249694824
    4. ' in' → logprob: -4.103976249694824
    5. 'for' → logprob: -4.103976249694824
    6. ' to' → logprob: -4.603976249694824
    7. ' on' → logprob: -4.853976249694824
    8. ' )' → logprob: -4.978976249694824
    9. ' among' → logprob: -7.103976249694824
    10. 'if' → logprob: -7.353976249694824

Token 486: ' streets' (ID: 25360)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -1.0643939971923828
    2. ' streets' → logprob: -1.0643939971923828
    3. ' ns' → logprob: -1.4393939971923828
    4. ' same' → logprob: -3.314393997192383
    5. 'same' → logprob: -4.314393997192383
    6. 'stre' → logprob: -4.939393997192383
    7. ')' → logprob: -5.814393997192383
    8. ' the' → logprob: -6.564393997192383
    9. ' lines' → logprob: -6.689393997192383
    10. ' ew' → logprob: -6.939393997192383

Token 487: ' in' (ID: 306)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.019128479063510895
    2. 'of' → logprob: -4.269128322601318
    3. ' in' → logprob: -6.269128322601318
    4. ' with' → logprob: -6.894128322601318
    5. ' that' → logprob: -7.019128322601318
    6. ')' → logprob: -7.769128322601318
    7. ' )' → logprob: -8.769128799438477
    8. ' on' → logprob: -9.019128799438477
    9. 'with' → logprob: -9.144128799438477
    10. 'in' → logprob: -9.769128799438477

Token 488: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3175521492958069
    2. ' the' → logprob: -2.317552089691162
    3. 'same' → logprob: -2.442552089691162
    4. 'ns' → logprob: -2.692552089691162
    5. ' ns' → logprob: -4.567552089691162
    6. ' same' → logprob: -4.942552089691162
    7. 'one' → logprob: -7.067552089691162
    8. ' one' → logprob: -8.19255256652832
    9. '#' → logprob: -10.06755256652832
    10. '   ' → logprob: -10.31755256652832

Token 489: ' direction' (ID: 9262)
  Prédit: ' orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' orientation' → logprob: -0.9471916556358337
    2. 'orientation' → logprob: -1.0721917152404785
    3. '_orientation' → logprob: -1.3221917152404785
    4. ' line' → logprob: -7.0721917152404785
    5. ')' → logprob: -7.8221917152404785
    6. '_or' → logprob: -8.19719123840332
    7. '   ' → logprob: -8.44719123840332
    8. '_set' → logprob: -8.44719123840332
    9. '\n' → logprob: -8.57219123840332
    10. 'direction' → logprob: -8.69719123840332

Token 490: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005745809990912676
    2. 's' → logprob: -5.630745887756348
    3. '       ' → logprob: -7.380745887756348
    4. ',' → logprob: -8.255745887756348
    5. ')
' → logprob: -8.255745887756348
    6. ' )' → logprob: -8.505745887756348
    7. '
' → logprob: -8.755745887756348
    8. '.' → logprob: -8.755745887756348
    9. '   ' → logprob: -8.880745887756348
    10. ':' → logprob: -9.380745887756348

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3097648322582245
    2. '
' → logprob: -1.6847648620605469
    3. 'for' → logprob: -3.184764862060547
    4. ' for' → logprob: -3.809764862060547
    5. '        
' → logprob: -5.059764862060547
    6. '#' → logprob: -5.434764862060547
    7. '```' → logprob: -6.684764862060547
    8. ',' → logprob: -7.934764862060547
    9. '   ' → logprob: -8.059764862060547
    10. '\n' → logprob: -8.184764862060547

Token 492: ' same' (ID: 2684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08426808565855026
    2. 'same' (adapté à ' same') → logprob: -3.209268093109131
    3. '#' → logprob: -4.709268093109131
    4. 'equal' → logprob: -4.834268093109131
    5. 'adj' → logprob: -5.459268093109131
    6. 'ns' → logprob: -5.459268093109131
    7. ' same' → logprob: -6.084268093109131
    8. '        
' → logprob: -6.209268093109131
    9. 'for' → logprob: -6.709268093109131
    10. 'from' → logprob: -6.834268093109131

Token 493: '_dir' (ID: 9526)
  Prédit: '_orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orientation' → logprob: -0.8033198714256287
    2. '_st' → logprob: -1.1783199310302734
    3. '_' → logprob: -2.1783199310302734
    4. '_or' → logprob: -2.8033199310302734
    5. '_direction' → logprob: -3.8033199310302734
    6. '_dir' → logprob: -3.8033199310302734
    7. '_s' → logprob: -4.553319931030273
    8. '_side' → logprob: -5.803319931030273
    9. '_ori' → logprob: -5.803319931030273
    10. '_same' → logprob: -6.178319931030273

Token 494: ' =' (ID: 314)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.03500514104962349
    2. ' =' → logprob: -3.9100050926208496
    3. '=' → logprob: -4.41000509262085
    4. '_' → logprob: -6.28500509262085
    5. '_s' → logprob: -8.910005569458008
    6. 'stre' → logprob: -9.535005569458008
    7. 's' → logprob: -10.660005569458008
    8. 'st' → logprob: -10.910005569458008
    9. '=_' → logprob: -11.160005569458008
    10. '   ' → logprob: -11.410005569458008

Token 495: ' [' (ID: 723)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.16507971286773682
    2. '{' → logprob: -2.4150795936584473
    3. ' ns' → logprob: -3.2900795936584473
    4. 'set' → logprob: -4.665079593658447
    5. '[' → logprob: -5.290079593658447
    6. '(ns' → logprob: -5.290079593658447
    7. ' {' → logprob: -6.165079593658447
    8. '{}' → logprob: -6.540079593658447
    9. ' [' → logprob: -6.915079593658447
    10. '   ' → logprob: -8.040080070495605

Token 496: 'ns' (ID: 6097)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.14573389291763306
    2. 's' → logprob: -2.0207338333129883
    3. 'ns' → logprob: -6.645733833312988
    4. 'street' → logprob: -6.895733833312988
    5. '(st' → logprob: -8.520733833312988
    6. 'list' → logprob: -8.645733833312988
    7. 'x' → logprob: -9.020733833312988
    8. 'sorted' → logprob: -10.270733833312988
    9. '[' → logprob: -10.520733833312988
    10. ' st' → logprob: -10.645733833312988

Token 497: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.002780273789539933
    2. '_' → logprob: -6.252780437469482
    3. '_s' → logprob: -7.252780437469482
    4. 'for' → logprob: -10.377779960632324
    5. 'St' → logprob: -11.002779960632324
    6. ']_' → logprob: -11.002779960632324
    7. 'st' → logprob: -11.127779960632324
    8. 'stre' → logprob: -11.377779960632324
    9. ' for' → logprob: -11.502779960632324
    10. '[' → logprob: -11.502779960632324

Token 498: 're' (ID: 264)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.17383326590061188
    2. 're' → logprob: -2.5488333702087402
    3. 'stre' → logprob: -2.5488333702087402
    4. '_re' → logprob: -6.54883337020874
    5. '_' → logprob: -6.92383337020874
    6. '_s' → logprob: -8.173832893371582
    7. 'reet' → logprob: -9.048832893371582
    8. 'ree' → logprob: -9.673832893371582
    9. '_t' → logprob: -9.923832893371582
    10. 'rees' → logprob: -9.923832893371582

Token 499: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.021700335666537285
    2. 'stre' → logprob: -4.146700382232666
    3. 'et' → logprob: -6.271700382232666
    4. 're' → logprob: -6.771700382232666
    5. 'e' → logprob: -7.271700382232666
    6. 'ects' → logprob: -7.521700382232666
    7. '_st' → logprob: -7.646700382232666
    8. 'sts' → logprob: -8.521699905395508
    9. 'ests' → logprob: -8.771699905395508
    10. 's' → logprob: -9.021699905395508

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019142862409353256
    2. '.inter' → logprob: -5.2691426277160645
    3. ']' → logprob: -5.5191426277160645
    4. '.union' → logprob: -6.0191426277160645
    5. ' |' → logprob: -6.2691426277160645
    6. ' ,' → logprob: -6.5191426277160645
    7. ' if' → logprob: -6.7691426277160645
    8. '   ' → logprob: -7.3941426277160645
    9. '|' → logprob: -8.019143104553223
    10. '.' → logprob: -8.019143104553223

Token 501: ' ew' (ID: 64459)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.10023827850818634
    2. ' ew' → logprob: -2.35023832321167
    3. '   ' → logprob: -10.600237846374512
    4. ' ' → logprob: -12.475237846374512
    5. '    ' → logprob: -13.975237846374512
    6. 'ews' → logprob: -14.100237846374512
    7. '       ' → logprob: -14.475237846374512
    8. '  ' → logprob: -15.350237846374512
    9. '        ' → logprob: -15.850237846374512
    10. '-ew' → logprob: -16.350238800048828

Token 502: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -7.465036105713807e-06
    2. 'stre' → logprob: -12.625007629394531
    3. 'st' → logprob: -13.250007629394531
    4. 'St' → logprob: -13.625007629394531
    5. '_' → logprob: -15.500007629394531
    6. '   ' → logprob: -15.875007629394531
    7. ' _' → logprob: -15.875007629394531
    8. ']' → logprob: -16.25000762939453
    9. ',' → logprob: -16.50000762939453
    10. '_se' → logprob: -16.75000762939453

Token 503: 're' (ID: 264)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.003313057590276003
    2. 'stre' → logprob: -5.753313064575195
    3. 'st' → logprob: -9.253313064575195
    4. '_' → logprob: -10.628313064575195
    5. '_s' → logprob: -13.128313064575195
    6. 'St' → logprob: -13.378313064575195
    7. '_re' → logprob: -13.878313064575195
    8. '\' → logprob: -13.878313064575195
    9. '_t' → logprob: -14.003313064575195
    10. '```' → logprob: -14.003313064575195

Token 504: 'ets' (ID: 1719)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.5565400123596191
    2. 'stre' → logprob: -0.9315400123596191
    3. 're' → logprob: -4.056540012359619
    4. 'tre' → logprob: -4.931540012359619
    5. 'ets' → logprob: -6.056540012359619
    6. 'st' → logprob: -6.556540012359619
    7. '_' → logprob: -6.806540012359619
    8. '_sets' → logprob: -7.181540012359619
    9. 'sets' → logprob: -7.431540012359619
    10. '_re' → logprob: -7.556540012359619

Token 505: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003347159130498767
    2. ']
' → logprob: -6.128347396850586
    3. ',' → logprob: -7.378347396850586
    4. '][' → logprob: -8.253347396850586
    5. '[' → logprob: -8.878347396850586
    6. ']

' → logprob: -9.503347396850586
    7. ' ]' → logprob: -10.128347396850586
    8. '   ' → logprob: -11.878347396850586
    9. ']
' → logprob: -12.253347396850586
    10. ')' → logprob: -13.128347396850586

Token 506: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29492101073265076
    2. '       ' → logprob: -2.4199209213256836
    3. ',
' → logprob: -3.0449209213256836
    4. 'for' → logprob: -3.0449209213256836
    5. ' for' → logprob: -3.4199209213256836
    6. ',' → logprob: -3.9199209213256836
    7. '        
' → logprob: -5.294920921325684
    8. '[
' → logprob: -5.919920921325684
    9. ']' → logprob: -6.294920921325684
    10. ']
' → logprob: -6.419920921325684

Token 507: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' (adapté à ' equal') → logprob: -0.48420313000679016
    2. '       ' → logprob: -1.4842031002044678
    3. 'for' → logprob: -2.2342031002044678
    4. 'result' → logprob: -4.109203338623047
    5. 'results' → logprob: -5.109203338623047
    6. 'eq' → logprob: -5.109203338623047
    7. 'res' → logprob: -5.109203338623047
    8. ' for' → logprob: -5.484203338623047
    9. ' equal' → logprob: -5.984203338623047
    10. 'equ' → logprob: -6.359203338623047

Token 508: ' =' (ID: 314)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.00784202478826046
    2. '_rel' → logprob: -5.382842063903809
    3. 'strength' → logprob: -7.257842063903809
    4. '_pairs' → logprob: -7.257842063903809
    5. '_edges' → logprob: -8.007842063903809
    6. '_str' → logprob: -8.132842063903809
    7. '_relation' → logprob: -8.257842063903809
    8. '=' → logprob: -8.757842063903809
    9. '_' → logprob: -8.757842063903809
    10. '_st' → logprob: -9.132842063903809

Token 509: ' dict' (ID: 11878)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06346281617879868
    2. '{' → logprob: -4.188462734222412
    3. 'set' → logprob: -4.188462734222412
    4. '[{' → logprob: -4.438462734222412
    5. 'dict' → logprob: -4.563462734222412
    6. '{}' → logprob: -5.438462734222412
    7. '[]' → logprob: -5.563462734222412
    8. ' [' → logprob: -7.563462734222412
    9. '[s' → logprob: -10.43846321105957
    10. '[d' → logprob: -10.56346321105957

Token 510: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.033754851669073105
    2. '()
' → logprob: -3.408754825592041
    3. '       ' → logprob: -9.9087553024292
    4. '()

' → logprob: -10.9087553024292
    5. '()\' → logprob: -11.1587553024292
    6. '()
' → logprob: -12.6587553024292
    7. '()]' → logprob: -12.9087553024292
    8. '(),' → logprob: -13.0337553024292
    9. '()`' → logprob: -13.1587553024292
    10. '(),
' → logprob: -13.1587553024292

Token 511: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9437969326972961
    2. '<|end|>' → logprob: -0.9437969326972961
    3. '
' → logprob: -2.0687968730926514
    4. ' for' → logprob: -3.3187968730926514
    5. 'for' → logprob: -4.4437971115112305
    6. ')' → logprob: -4.4437971115112305
    7. '<|end|>' → logprob: -5.0687971115112305
    8. ',
' → logprob: -5.1937971115112305
    9. ',' → logprob: -5.1937971115112305
    10. ' =' → logprob: -5.8187971115112305

Token 512: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009206168353557587
    2. 'for' → logprob: -4.759206295013428
    3. ' for' → logprob: -7.759206295013428
    4. '<|end|>' → logprob: -10.00920581817627
    5. '        
' → logprob: -10.63420581817627
    6. '
' → logprob: -10.63420581817627
    7. 'from' → logprob: -10.75920581817627
    8. '#' → logprob: -11.38420581817627
    9. '()
' → logprob: -11.88420581817627
    10. '()' → logprob: -12.00920581817627

Token 513: ' key' (ID: 2140)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029778379946947098
    2. '{}' → logprob: -3.904778480529785
    3. 'tuple' → logprob: -5.529778480529785
    4. 'set' → logprob: -6.654778480529785
    5. '{' → logprob: -6.654778480529785
    6. 'lambda' → logprob: -7.779778480529785
    7. 'key' → logprob: -8.029778480529785
    8. 'from' → logprob: -8.154778480529785
    9. 'str' → logprob: -8.654778480529785
    10. '()
' → logprob: -8.779778480529785

Token 514: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08988946676254272
    2. ' =' → logprob: -2.4648895263671875
    3. '()' → logprob: -8.089889526367188
    4. ',' → logprob: -8.964889526367188
    5. ':' → logprob: -9.339889526367188
    6. '=
' → logprob: -9.464889526367188
    7. '(' → logprob: -9.589889526367188
    8. ')' → logprob: -9.714889526367188
    9. 's' → logprob: -9.964889526367188
    10. '   ' → logprob: -10.464889526367188

Token 515: ' fro' (ID: 16956)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.5843092799186707
    2. '(s' → logprob: -1.9593093395233154
    3. '(str' → logprob: -2.0843093395233154
    4. ' (' → logprob: -2.8343093395233154
    5. 'tuple' → logprob: -3.2093093395233154
    6. '(a' → logprob: -3.5843093395233154
    7. 'fro' → logprob: -4.584309101104736
    8. '(f' → logprob: -4.709309101104736
    9. '(tuple' → logprob: -4.709309101104736
    10. '()' → logprob: -4.834309101104736

Token 516: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -0.0027806314174085855
    2. 'zen' → logprob: -6.002780437469482
    3. 'ze' → logprob: -9.00278091430664
    4. 'zes' → logprob: -9.25278091430664
    5. 'zent' → logprob: -10.00278091430664
    6. 'zem' → logprob: -11.50278091430664
    7. 'st' → logprob: -11.75278091430664
    8. 'zend' → logprob: -12.00278091430664
    9. 'zet' → logprob: -12.12778091430664
    10. 'zon' → logprob: -12.62778091430664

Token 517: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.2955609858036041
    2. 'set' → logprob: -2.7955610752105713
    3. 'ze' → logprob: -3.0455610752105713
    4. 'ize' → logprob: -3.4205610752105713
    5. 'y' → logprob: -3.9205610752105713
    6. 'e' → logprob: -3.9205610752105713
    7. '```' → logprob: -4.045560836791992
    8. 'ame' → logprob: -4.545560836791992
    9. 'es' → logprob: -4.670560836791992
    10. 'ode' → logprob: -5.170560836791992

Token 518: '({' (ID: 3972)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24566279351711273
    2. '({' → logprob: -1.995662808418274
    3. '([' → logprob: -3.3706626892089844
    4. '{' → logprob: -3.9956626892089844
    5. '()
' → logprob: -4.745662689208984
    6. '((' → logprob: -4.870662689208984
    7. '(),' → logprob: -5.495662689208984
    8. '(' → logprob: -5.870662689208984
    9. '(st' → logprob: -6.370662689208984
    10. '([(' → logprob: -6.745662689208984

Token 519: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012479047290980816
    2. 'A' → logprob: -5.012478828430176
    3. ''a' → logprob: -6.387478828430176
    4. 's' → logprob: -6.637478828430176
    5. '   ' → logprob: -7.887478828430176
    6. '(a' → logprob: -8.012478828430176
    7. ')' → logprob: -8.137478828430176
    8. 'stre' → logprob: -8.137478828430176
    9. 'st' → logprob: -8.262478828430176
    10. '})' → logprob: -8.387478828430176

Token 520: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012747305445373058
    2. '(a' → logprob: -5.387747287750244
    3. '(st' → logprob: -6.262747287750244
    4. '(','' → logprob: -6.762747287750244
    5. '})' → logprob: -6.887747287750244
    6. ' ,' → logprob: -7.387747287750244
    7. ',a' → logprob: -7.637747287750244
    8. '}),' → logprob: -7.762747287750244
    9. 'a' → logprob: -7.887747287750244
    10. '(',' → logprob: -8.387747764587402

Token 521: '}),' (ID: 81345)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.23405124247074127
    2. '}),' → logprob: -1.60905122756958
    3. '}' → logprob: -5.23405122756958
    4. ')' → logprob: -6.10905122756958
    5. ')}' → logprob: -7.48405122756958
    6. '})
' → logprob: -8.984051704406738
    7. ',' → logprob: -9.359051704406738
    8. '),' → logprob: -9.734051704406738
    9. '}))' → logprob: -9.984051704406738
    10. ')},' → logprob: -10.234051704406738

Token 522: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.06754457205533981
    2. ' value' → logprob: -2.817544460296631
    3. 'set' → logprob: -5.567544460296631
    4. ''value' → logprob: -7.067544460296631
    5. ' set' → logprob: -7.567544460296631
    6. '"value' → logprob: -8.692544937133789
    7. '   ' → logprob: -10.317544937133789
    8. 'False' → logprob: -10.567544937133789
    9. '[]' → logprob: -10.692544937133789
    10. 'True' → logprob: -10.692544937133789

Token 523: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06930497288703918
    2. ' =' → logprob: -2.819304943084717
    3. '=set' → logprob: -5.569304943084717
    4. 'set' → logprob: -5.944304943084717
    5. ' set' → logprob: -8.069305419921875
    6. '(set' → logprob: -8.944305419921875
    7. '0' → logprob: -9.069305419921875
    8. '   ' → logprob: -9.444305419921875
    9. 'True' → logprob: -10.069305419921875
    10. '=False' → logprob: -10.444305419921875

Token 524: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029008952900767326
    2. 'set' → logprob: -4.029008865356445
    3. 'False' → logprob: -4.779008865356445
    4. ' True' → logprob: -6.154008865356445
    5. '[]' → logprob: -8.654008865356445
    6. '   ' → logprob: -10.529008865356445
    7. 'bool' → logprob: -10.529008865356445
    8. ' set' → logprob: -10.904008865356445
    9. ' False' → logprob: -11.904008865356445
    10. '0' → logprob: -12.279008865356445

Token 525: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11099322140216827
    2. '       ' → logprob: -2.6109931468963623
    3. ' for' → logprob: -4.860993385314941
    4. ')' → logprob: -5.110993385314941
    5. 'for' → logprob: -5.235993385314941
    6. ',' → logprob: -5.610993385314941
    7. ',
' → logprob: -6.110993385314941
    8. '   ' → logprob: -6.735993385314941
    9. ' 
' → logprob: -6.860993385314941
    10. '<|end|>' → logprob: -6.985993385314941

Token 526: ' equal' (ID: 12629)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.14779198169708252
    2. ' True' → logprob: -2.272791862487793
    3. 'equal' → logprob: -4.022791862487793
    4. ' equal' → logprob: -4.147791862487793
    5. 'False' → logprob: -9.397791862487793
    6. '   ' → logprob: -9.397791862487793
    7. 'true' → logprob: -9.522791862487793
    8. 'A' → logprob: -9.522791862487793
    9. '=True' → logprob: -9.772791862487793
    10. ' set' → logprob: -9.772791862487793

Token 527: ' strength' (ID: 9386)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46154290437698364
    2. '       ' → logprob: -2.086542844772339
    3. ')' → logprob: -2.586542844772339
    4. 'for' → logprob: -3.086542844772339
    5. ',' → logprob: -3.711542844772339
    6. '   ' → logprob: -3.961542844772339
    7. '_' → logprob: -4.211543083190918
    8. '<|end|>' → logprob: -4.211543083190918
    9. ' for' → logprob: -4.586543083190918
    10. ')
' → logprob: -4.836543083190918

Token 528: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6849461793899536
    2. '
' → logprob: -0.8099461793899536
    3. ',' → logprob: -3.684946060180664
    4. ',
' → logprob: -4.559946060180664
    5. ')
' → logprob: -5.809946060180664
    6. ')' → logprob: -6.184946060180664
    7. '<|end|>' → logprob: -6.184946060180664
    8. '        
' → logprob: -6.309946060180664
    9. ' for' → logprob: -6.934946060180664
    10. '   ' → logprob: -6.934946060180664

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020178556442260742
    2. 'for' → logprob: -6.877017974853516
    3. '
' → logprob: -7.877017974853516
    4. '   ' → logprob: -8.377017974853516
    5. '        
' → logprob: -9.127017974853516
    6. ' for' → logprob: -9.127017974853516
    7. '#' → logprob: -9.752017974853516
    8. 'def' → logprob: -10.127017974853516
    9. 'edges' → logprob: -10.627017974853516
    10. '           ' → logprob: -11.752017974853516

Token 530: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04936685413122177
    2. '       ' → logprob: -3.6743669509887695
    3. 'from' → logprob: -5.0493669509887695
    4. ' for' → logprob: -5.0493669509887695
    5. '#' (adapté à ' #') → logprob: -5.1743669509887695
    6. 'adj' → logprob: -6.5493669509887695
    7. 'neighbors' → logprob: -6.6743669509887695
    8. 'def' → logprob: -7.6743669509887695
    9. 'all' → logprob: -7.6743669509887695
    10. '   ' → logprob: -8.67436695098877

Token 531: ' function' (ID: 1114)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11347222328186035
    2. '#' → logprob: -2.8634722232818604
    3. 'adj' → logprob: -3.8634722232818604
    4. 'from' → logprob: -3.9884722232818604
    5. 'neighbors' → logprob: -5.488471984863281
    6. 'def' → logprob: -6.113471984863281
    7. 'cross' → logprob: -6.363471984863281
    8. 'street' → logprob: -7.238471984863281
    9. 'connections' → logprob: -7.488471984863281
    10. 'edges' → logprob: -8.238471984863281

Token 532: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021656466647982597
    2. ' def' → logprob: -4.021656513214111
    3. '
' → logprob: -5.771656513214111
    4. '   ' → logprob: -9.146656036376953
    5. 'from' → logprob: -9.896656036376953
    6. ' to' → logprob: -10.271656036376953
    7. '       ' → logprob: -10.396656036376953
    8. '=' → logprob: -10.521656036376953
    9. 'get' → logprob: -10.896656036376953
    10. ' =' → logprob: -10.896656036376953

Token 533: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.38039618730545044
    2. 'get' → logprob: -2.1303961277008057
    3. 'find' → logprob: -2.8803961277008057
    4. 'det' → logprob: -3.1303961277008057
    5. 'compute' → logprob: -3.8803961277008057
    6. 'def' → logprob: -4.130396366119385
    7. 'is' → logprob: -4.505396366119385
    8. 'build' → logprob: -4.630396366119385
    9. 'add' → logprob: -4.755396366119385
    10. ' check' → logprob: -4.755396366119385

Token 534: ' equal' (ID: 12629)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01590602472424507
    2. ' def' → logprob: -4.265905857086182
    3. '
' → logprob: -6.890905857086182
    4. ' equal' → logprob: -8.14090633392334
    5. 'equal' → logprob: -8.26590633392334
    6. '   ' → logprob: -10.01590633392334
    7. ' ' → logprob: -10.76590633392334
    8. '_equal' → logprob: -11.14090633392334
    9. ')' → logprob: -11.26590633392334
    10. ' =' → logprob: -11.26590633392334

Token 535: ' strength' (ID: 9386)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.11255849152803421
    2. '_' → logprob: -2.362558603286743
    3. 'strength' → logprob: -4.987558364868164
    4. 'def' → logprob: -6.237558364868164
    5. '_equal' → logprob: -6.237558364868164
    6. ')' → logprob: -7.737558364868164
    7. ' strength' → logprob: -8.487558364868164
    8. '   ' → logprob: -8.862558364868164
    9. '_st' → logprob: -9.112558364868164
    10. '_str' → logprob: -9.237558364868164

Token 536: ' conditions' (ID: 6409)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016341444104909897
    2. '
' → logprob: -5.016341209411621
    3. ' def' → logprob: -5.641341209411621
    4. '(' → logprob: -6.391341209411621
    5. '(
' → logprob: -6.516341209411621
    6. '       ' → logprob: -7.141341209411621
    7. '   ' → logprob: -7.516341209411621
    8. '\' → logprob: -8.891341209411621
    9. '        
' → logprob: -9.141341209411621
    10. ':' → logprob: -9.141341209411621

Token 537: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20431779325008392
    2. '
' → logprob: -1.7043178081512451
    3. ' def' → logprob: -6.329317569732666
    4. '       ' → logprob: -8.329318046569824
    5. '   ' → logprob: -8.454318046569824
    6. '```' → logprob: -8.954318046569824
    7. '(
' → logprob: -9.454318046569824
    8. '        
' → logprob: -9.454318046569824
    9. '

' → logprob: -9.579318046569824
    10. '    
' → logprob: -9.704318046569824

Token 538: ' two' (ID: 1920)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5170803666114807
    2. 'pair' → logprob: -2.392080307006836
    3. 's' → logprob: -2.767080307006836
    4. 'a' → logprob: -2.892080307006836
    5. 'stre' → logprob: -3.392080307006836
    6. 'pairs' → logprob: -3.642080307006836
    7. 'def' → logprob: -3.892080307006836
    8. ' pair' → logprob: -4.142080307006836
    9. ' s' → logprob: -4.142080307006836
    10. ' A' → logprob: -4.267080307006836

Token 539: ' same' (ID: 2684)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.4017234742641449
    2. 's' → logprob: -1.6517235040664673
    3. ' streets' → logprob: -2.9017233848571777
    4. 'st' → logprob: -3.1517233848571777
    5. ' s' → logprob: -3.5267233848571777
    6. 'street' → logprob: -5.651723384857178
    7. 'A' → logprob: -6.276723384857178
    8. ' st' → logprob: -6.276723384857178
    9. 'a' → logprob: -6.526723384857178
    10. 'sts' → logprob: -7.401723384857178

Token 540: '-direction' (ID: 59770)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7778096795082092
    2. '_dir' → logprob: -1.2778096199035645
    3. '_direction' → logprob: -1.9028096199035645
    4. '_st' → logprob: -3.1528096199035645
    5. '   ' → logprob: -3.9028096199035645
    6. ')' → logprob: -4.1528096199035645
    7. '       ' → logprob: -5.0278096199035645
    8. '_dirs' → logprob: -5.1528096199035645
    9. '[' → logprob: -5.7778096199035645
    10. ' _' → logprob: -5.9028096199035645

Token 541: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.045218270272016525
    2. ' streets' → logprob: -3.1702182292938232
    3. 's' → logprob: -6.920218467712402
    4. 'st' → logprob: -7.545218467712402
    5. '_st' → logprob: -8.670218467712402
    6. ')' → logprob: -9.045218467712402
    7. ' s' → logprob: -9.170218467712402
    8. '(st' → logprob: -9.295218467712402
    9. 'street' → logprob: -9.920218467712402
    10. '   ' → logprob: -10.420218467712402

Token 542: ' A' (ID: 355)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06236928328871727
    2. '       ' → logprob: -3.0623693466186523
    3. '   ' → logprob: -5.062369346618652
    4. ' def' → logprob: -5.562369346618652
    5. '(' → logprob: -6.812369346618652
    6. '(
' → logprob: -7.687369346618652
    7. '        
' → logprob: -8.187369346618652
    8. '
' → logprob: -8.437369346618652
    9. ')' → logprob: -8.687369346618652
    10. '(def' → logprob: -9.062369346618652

Token 543: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5961697101593018
    2. ',' → logprob: -1.3461697101593018
    3. '       ' → logprob: -3.3461697101593018
    4. '   ' → logprob: -3.3461697101593018
    5. ' and' → logprob: -3.7211697101593018
    6. ':' → logprob: -3.8461697101593018
    7. '(s' → logprob: -4.346169471740723
    8. ' (' → logprob: -4.596169471740723
    9. '
' → logprob: -5.221169471740723
    10. 'and' → logprob: -5.346169471740723

Token 544: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.061995700001716614
    2. ' B' → logprob: -2.8119957447052
    3. ' ' → logprob: -10.686995506286621
    4. 'b' → logprob: -12.561995506286621
    5. '
' → logprob: -15.436995506286621
    6. ' ' → logprob: -15.561995506286621
    7. 's' → logprob: -15.811995506286621
    8. ',' → logprob: -15.874495506286621
    9. '   ' → logprob: -16.436996459960938
    10. '<|end|>' → logprob: -16.436996459960938

Token 545: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6666991710662842
    2. '
' → logprob: -1.0416991710662842
    3. '       ' → logprob: -2.166699171066284
    4. '   ' → logprob: -4.791699409484863
    5. '        
' → logprob: -5.541699409484863
    6. ' def' → logprob: -5.916699409484863
    7. '    
' → logprob: -7.041699409484863
    8. '(
' → logprob: -7.416699409484863
    9. '(' → logprob: -7.541699409484863
    10. '\' → logprob: -8.291699409484863

Token 546: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16807468235492706
    2. 'def' → logprob: -2.043074607849121
    3. '   ' → logprob: -3.918074607849121
    4. ' def' → logprob: -6.043074607849121
    5. '        
' → logprob: -6.668074607849121
    6. '(' → logprob: -7.668074607849121
    7. '    
' → logprob: -8.293074607849121
    8. '           ' → logprob: -8.293074607849121
    9. ')' → logprob: -8.793074607849121
    10. '
' → logprob: -8.918074607849121

Token 547: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0297005046159029
    2. '       ' → logprob: -4.15470027923584
    3. ' def' → logprob: -4.40470027923584
    4. '
' → logprob: -7.40470027923584
    5. '   ' → logprob: -8.02970027923584
    6. '        
' → logprob: -8.02970027923584
    7. '    
' → logprob: -10.40470027923584
    8. ' 
' → logprob: -10.52970027923584
    9. '\' → logprob: -12.15470027923584
    10. '	def' → logprob: -12.15470027923584

Token 548: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.017647849395871162
    2. 'equal' → logprob: -4.517647743225098
    3. 'are' → logprob: -6.017647743225098
    4. ' check' → logprob: -6.142647743225098
    5. 'is' → logprob: -6.267647743225098
    6. 'has' → logprob: -10.392647743225098
    7. ' equal' → logprob: -10.767647743225098
    8. 'have' → logprob: -11.392647743225098
    9. ' is' → logprob: -11.517647743225098
    10. 'can' → logprob: -12.392647743225098

Token 549: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.31384655833244324
    2. '_strength' → logprob: -1.3138465881347656
    3. '_' → logprob: -8.313846588134766
    4. '_equals' → logprob: -9.188846588134766
    5. '_eq' → logprob: -9.438846588134766
    6. '_str' → logprob: -9.938846588134766
    7. '_equ' → logprob: -10.563846588134766
    8. 'equal' → logprob: -11.063846588134766
    9. '_e' → logprob: -11.438846588134766
    10. 'strength' → logprob: -11.938846588134766

Token 550: '(A' (ID: 10706)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.0006727590807713568
    2. '_' → logprob: -7.500672817230225
    3. '(' → logprob: -9.500672340393066
    4. '(_' → logprob: -11.625672340393066
    5. '_str' → logprob: -11.750672340393066
    6. 'strength' → logprob: -12.000672340393066
    7. '_equal' → logprob: -12.250672340393066
    8. '_st' → logprob: -12.375672340393066
    9. ' _' → logprob: -13.125672340393066
    10. '_s' → logprob: -13.625672340393066

Token 551: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00584218418225646
    2. ',B' → logprob: -5.255842208862305
    3. ' ,' → logprob: -7.880842208862305
    4. ',A' → logprob: -8.755842208862305
    5. ',b' → logprob: -9.755842208862305
    6. ',
' → logprob: -12.130842208862305
    7. '   ' → logprob: -13.005842208862305
    8. ',a' → logprob: -13.380842208862305
    9. 'B' → logprob: -13.630842208862305
    10. '_,' → logprob: -14.255842208862305

Token 552: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08012069761753082
    2. '):
' → logprob: -2.580120801925659
    3. ',' → logprob: -6.95512056350708
    4. '):
' → logprob: -9.205121040344238
    5. ')' → logprob: -9.455121040344238
    6. '   ' → logprob: -9.830121040344238
    7. ' ):' → logprob: -10.955121040344238
    8. ':' → logprob: -11.330121040344238
    9. '):

' → logprob: -11.830121040344238
    10. ' ' → logprob: -13.330121040344238

Token 553: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13003918528556824
    2. '   ' → logprob: -2.2550392150878906
    3. '    
' → logprob: -5.005039215087891
    4. '           ' → logprob: -5.880039215087891
    5. '<|end|>' → logprob: -6.255039215087891
    6. ':' → logprob: -6.380039215087891
    7. '        
' → logprob: -6.880039215087891
    8. '):
' → logprob: -7.505039215087891
    9. ',' → logprob: -7.630039215087891
    10. ')' → logprob: -7.755039215087891

Token 554: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5742162466049194
    2. '       ' → logprob: -1.3242162466049194
    3. '           ' → logprob: -1.9492162466049194
    4. 'a' → logprob: -5.074216365814209
    5. 'A' → logprob: -5.574216365814209
    6. 'for' → logprob: -5.699216365814209
    7. 'set' → logprob: -5.949216365814209
    8. 'common' → logprob: -5.949216365814209
    9. 'if' → logprob: -6.199216365814209
    10. 's' → logprob: -6.449216365814209

Token 555: ' condition' (ID: 7060)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.38917645812034607
    2. 'cross' → logprob: -2.389176368713379
    3. '   ' → logprob: -2.889176368713379
    4. 'A' → logprob: -3.764176368713379
    5. 'shared' → logprob: -3.889176368713379
    6. '#' → logprob: -3.889176368713379
    7. 'neighbors' → logprob: -3.889176368713379
    8. 'for' → logprob: -4.139176368713379
    9. 'if' → logprob: -4.264176368713379
    10. 'adj' → logprob: -4.389176368713379

Token 556: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8080980777740479
    2. '(' → logprob: -1.6830980777740479
    3. ' (' → logprob: -1.6830980777740479
    4. 's' → logprob: -2.558098077774048
    5. ' =' → logprob: -3.683098077774048
    6. '           ' → logprob: -3.683098077774048
    7. '   ' → logprob: -3.933098077774048
    8. '       ' → logprob: -4.558097839355469
    9. ' ' → logprob: -5.183097839355469
    10. ' #' → logprob: -5.683097839355469

Token 557: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19348271191120148
    2. '0' → logprob: -1.943482756614685
    3. ' ' → logprob: -4.068482875823975
    4. ')' → logprob: -4.318482875823975
    5. '(' → logprob: -7.318482875823975
    6. '   ' → logprob: -7.818482875823975
    7. ' (' → logprob: -8.693482398986816
    8. '       ' → logprob: -8.943482398986816
    9. '           ' → logprob: -9.068482398986816
    10. '2' → logprob: -9.193482398986816

Token 558: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07423477619886398
    2. '):' → logprob: -2.6992347240448
    3. ' )' → logprob: -5.824234962463379
    4. '):
' → logprob: -7.574234962463379
    5. ')
' → logprob: -8.324234962463379
    6. '   ' → logprob: -8.449234962463379
    7. ' ):' → logprob: -8.949234962463379
    8. ':' → logprob: -9.449234962463379
    9. '           ' → logprob: -9.824234962463379
    10. ',' → logprob: -10.324234962463379

Token 559: ' exist' (ID: 4310)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0289039611816406
    2. '   ' → logprob: -1.4039039611816406
    3. 'common' → logprob: -1.9039039611816406
    4. 'cross' → logprob: -2.6539039611816406
    5. ' common' → logprob: -3.5289039611816406
    6. '       ' → logprob: -3.7789039611816406
    7. 'shared' → logprob: -3.7789039611816406
    8. 'for' → logprob: -4.028903961181641
    9. 'set' → logprob: -4.278903961181641
    10. ' shared' → logprob: -4.528903961181641

Token 560: ' C' (ID: 363)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4079156816005707
    2. ' s' → logprob: -1.782915711402893
    3. ' any' → logprob: -2.4079155921936035
    4. 'C' → logprob: -3.5329155921936035
    5. ' a' → logprob: -4.5329155921936035
    6. ' c' → logprob: -4.7829155921936035
    7. ' C' → logprob: -4.7829155921936035
    8. 'any' → logprob: -4.9079155921936035
    9. 'c' → logprob: -5.4079155921936035
    10. ' ' → logprob: -6.2829155921936035

Token 561: ' such' (ID: 2238)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.49740615487098694
    2. ' =' → logprob: -1.3724061250686646
    3. '           ' → logprob: -3.247406244277954
    4. 'in' → logprob: -3.372406244277954
    5. 's' → logprob: -4.247406005859375
    6. ' for' → logprob: -4.372406005859375
    7. '=' → logprob: -5.122406005859375
    8. 'for' → logprob: -5.247406005859375
    9. '_in' → logprob: -5.247406005859375
    10. 'A' → logprob: -5.747406005859375

Token 562: ' that' (ID: 484)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6810347437858582
    2. 'that' → logprob: -0.8060347437858582
    3. ' that' → logprob: -3.181034803390503
    4. 'hat' → logprob: -6.306034564971924
    5. 'in' → logprob: -6.556034564971924
    6. ' at' → logprob: -6.806034564971924
    7. 'is' → logprob: -7.681034564971924
    8. 'exists' → logprob: -8.556035041809082
    9. ' in' → logprob: -8.931035041809082
    10. '           ' → logprob: -9.306035041809082

Token 563: ' C' (ID: 363)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.45832961797714233
    2. 'any' → logprob: -1.333329677581787
    3. 'C' → logprob: -2.708329677581787
    4. 'A' → logprob: -4.333329677581787
    5. '(any' → logprob: -4.708329677581787
    6. ' C' → logprob: -4.958329677581787
    7. 'c' → logprob: -6.208329677581787
    8. ' A' → logprob: -6.958329677581787
    9. '   ' → logprob: -6.958329677581787
    10. ' c' → logprob: -7.333329677581787

Token 564: '-A' (ID: 9406)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.523745059967041
    2. 'in' → logprob: -1.023745059967041
    3. 'cross' → logprob: -4.148745059967041
    4. '-cross' → logprob: -4.648745059967041
    5. '-' → logprob: -5.648745059967041
    6. '-in' → logprob: -5.648745059967041
    7. '_cross' → logprob: -6.148745059967041
    8. ' =' → logprob: -6.273745059967041
    9. ')' → logprob: -6.273745059967041
    10. ' !=' → logprob: -6.523745059967041

Token 565: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16786141693592072
    2. 'in' → logprob: -2.6678614616394043
    3. ' and' → logprob: -2.6678614616394043
    4. 'and' → logprob: -4.542861461639404
    5. ')' → logprob: -5.542861461639404
    6. '<|end|>' → logprob: -8.167860984802246
    7. ' ' → logprob: -8.667860984802246
    8. ',' → logprob: -9.042860984802246
    9. 's' → logprob: -9.292860984802246
    10. ' or' → logprob: -9.542860984802246

Token 566: ' input' (ID: 3422)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7415138483047485
    2. 'cross' → logprob: -0.7415138483047485
    3. ' graph' → logprob: -3.491513729095459
    4. ' crossings' → logprob: -4.741513729095459
    5. 'input' → logprob: -6.241513729095459
    6. 'stre' → logprob: -6.741513729095459
    7. ' cross' → logprob: -6.741513729095459
    8. 'N' → logprob: -7.241513729095459
    9. 'equal' → logprob: -7.741513729095459
    10. '
' → logprob: -8.241514205932617

Token 567: ' crossings' (ID: 199340)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2049413919448853
    2. '<|end|>' → logprob: -1.2049413919448853
    3. ' and' → logprob: -1.3299413919448853
    4. ',' → logprob: -3.2049412727355957
    5. ' or' → logprob: -3.4549412727355957
    6. ')' → logprob: -3.5799412727355957
    7. '<|end|>' → logprob: -4.204941272735596
    8. ' if' → logprob: -4.954941272735596
    9. ' in' → logprob: -6.329941272735596
    10. 'and' → logprob: -6.454941272735596

Token 568: ' AND' (ID: 6178)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3069615364074707
    2. '<|end|>' → logprob: -1.5569615364074707
    3. ',' → logprob: -4.056961536407471
    4. '<|end|>' → logprob: -4.181961536407471
    5. ' and' → logprob: -5.306961536407471
    6. ')' → logprob: -5.306961536407471
    7. '   ' → logprob: -6.306961536407471
    8. '       ' → logprob: -6.306961536407471
    9. ' or' → logprob: -6.931961536407471
    10. '
' → logprob: -7.056961536407471

Token 569: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.027924951165914536
    2. ' C' → logprob: -3.7779250144958496
    3. 'A' → logprob: -5.90292501449585
    4. '   ' → logprob: -7.15292501449585
    5. 'c' → logprob: -7.90292501449585
    6. 'B' → logprob: -8.152924537658691
    7. ' ' → logprob: -8.902924537658691
    8. ' A' → logprob: -8.902924537658691
    9. ' (' → logprob: -10.152924537658691
    10. '  ' → logprob: -10.402924537658691

Token 570: '-B' (ID: 8287)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8111624121665955
    2. ' in' → logprob: -0.9361624121665955
    3. '-A' → logprob: -2.5611624717712402
    4. 'in' → logprob: -3.4361624717712402
    5. '-in' → logprob: -4.43616247177124
    6. ')' → logprob: -4.81116247177124
    7. ' -' → logprob: -4.93616247177124
    8. '-B' → logprob: -4.93616247177124
    9. '<|end|>' → logprob: -5.18616247177124
    10. ' and' → logprob: -6.31116247177124

Token 571: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11304984986782074
    2. 'in' → logprob: -2.2380497455596924
    3. '<|end|>' → logprob: -9.613049507141113
    4. ')' → logprob: -9.988049507141113
    5. '<|end|>' → logprob: -10.738049507141113
    6. ' ' → logprob: -10.738049507141113
    7. ' also' → logprob: -11.363049507141113
    8. '   ' → logprob: -12.300549507141113
    9. '
' → logprob: -12.363049507141113
    10. '_in' → logprob: -12.488049507141113

Token 572: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7352071404457092
    2. 'cross' → logprob: -1.2352070808410645
    3. ' crossings' → logprob: -2.2352070808410645
    4. ' input' → logprob: -2.6102070808410645
    5. 'graph' → logprob: -3.7352070808410645
    6. ' graph' → logprob: -5.4852070808410645
    7. 'stre' → logprob: -5.7352070808410645
    8. ' streets' → logprob: -5.7352070808410645
    9. ' cross' → logprob: -6.2352070808410645
    10. '[' → logprob: -6.3602070808410645

Token 573: ' crossings' (ID: 199340)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07975928485393524
    2. 's' → logprob: -3.704759359359741
    3. '   ' → logprob: -4.454759120941162
    4. ' and' → logprob: -4.954759120941162
    5. ')' → logprob: -5.454759120941162
    6. '       ' → logprob: -5.454759120941162
    7. 'cross' → logprob: -5.454759120941162
    8. ' crossings' → logprob: -5.579759120941162
    9. 'stre' → logprob: -5.829759120941162
    10. ' cross' → logprob: -6.329759120941162

Token 574: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002595276804640889
    2. '<|end|>' → logprob: -6.2525954246521
    3. '<|end|>' → logprob: -7.7525954246521
    4. ',' → logprob: -8.627594947814941
    5. '       ' → logprob: -11.002594947814941
    6. '   ' → logprob: -11.752594947814941
    7. '
' → logprob: -11.752594947814941
    8. '            
' → logprob: -12.877594947814941
    9. 's' → logprob: -12.877594947814941
    10. ')' → logprob: -13.127594947814941

Token 575: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004324573092162609
    2. '       ' → logprob: -8.625432014465332
    3. '   ' → logprob: -9.125432014465332
    4. '<|end|>' → logprob: -10.000432014465332
    5. ',' → logprob: -10.375432014465332
    6. '<|end|>' → logprob: -10.875432014465332
    7. 'def' → logprob: -11.375432014465332
    8. 's' → logprob: -11.375432014465332
    9. 'from' → logprob: -12.625432014465332
    10. 'tokens' → logprob: -12.625432014465332

Token 576: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006259493064135313
    2. '   ' → logprob: -5.381259441375732
    3. 'A' → logprob: -7.381259441375732
    4. '       ' → logprob: -8.13125991821289
    5. 'c' → logprob: -8.63125991821289
    6. 'a' → logprob: -9.38125991821289
    7. 'cross' → logprob: -9.38125991821289
    8. 'def' → logprob: -9.50625991821289
    9. 's' → logprob: -9.75625991821289
    10. 'for' → logprob: -10.00625991821289

Token 577: ' crossings' (ID: 199340)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6440756916999817
    2. '   ' → logprob: -0.8940756916999817
    3. 'A' → logprob: -4.269075870513916
    4. ' A' → logprob: -5.519075870513916
    5. 'adj' → logprob: -5.519075870513916
    6. '       ' → logprob: -5.644075870513916
    7. ' for' → logprob: -5.644075870513916
    8. 'cross' → logprob: -5.894075870513916
    9. ' a' → logprob: -6.019075870513916
    10. ' adj' → logprob: -6.019075870513916

Token 578: ' are' (ID: 553)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.3320624828338623
    2. '_st' → logprob: -2.8320624828338623
    3. '_map' → logprob: -2.9570624828338623
    4. '_sets' → logprob: -3.2070624828338623
    5. '_c' → logprob: -3.8320624828338623
    6. '_cross' → logprob: -4.207062721252441
    7. '_s' → logprob: -4.332062721252441
    8. ' =' → logprob: -4.457062721252441
    9. '_dict' → logprob: -4.707062721252441
    10. '_edges' → logprob: -4.707062721252441

Token 579: ' in' (ID: 306)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6604514122009277
    2. '[' → logprob: -1.7854514122009277
    3. '{' → logprob: -2.2854514122009277
    4. '[a' → logprob: -2.7854514122009277
    5. '[c' → logprob: -2.9104514122009277
    6. '[(' → logprob: -3.2854514122009277
    7. 'dict' → logprob: -4.910451412200928
    8. '[]' → logprob: -5.035451412200928
    9. '[]
' → logprob: -5.035451412200928
    10. 'a' → logprob: -5.160451412200928

Token 580: ' crossings' (ID: 199340)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.6179593801498413
    2. 'set' → logprob: -1.9929593801498413
    3. 'graph' → logprob: -2.117959499359131
    4. 'ns' → logprob: -2.992959499359131
    5. '[' → logprob: -3.367959499359131
    6. 'c' → logprob: -3.617959499359131
    7. 'input' → logprob: -3.617959499359131
    8. 'a' → logprob: -4.492959499359131
    9. '[c' → logprob: -4.617959499359131
    10. 'both' → logprob: -4.867959499359131

Token 581: ' list' (ID: 1562)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.109962098300457
    2. '
' → logprob: -2.609961986541748
    3. 'def' → logprob: -4.734961986541748
    4. '   ' → logprob: -4.734961986541748
    5. ')' → logprob: -5.859961986541748
    6. ',' → logprob: -5.984961986541748
    7. '<|end|>' → logprob: -6.109961986541748
    8. '       ' → logprob: -6.609961986541748
    9. '<|end|>' → logprob: -7.109961986541748
    10. '            
' → logprob: -7.484961986541748

Token 582: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11540467292070389
    2. '   ' → logprob: -2.6154046058654785
    3. '
' → logprob: -4.2404046058654785
    4. 'def' → logprob: -5.2404046058654785
    5. ',' → logprob: -5.4904046058654785
    6. '    
' → logprob: -5.6154046058654785
    7. '       ' → logprob: -6.1154046058654785
    8. '            
' → logprob: -6.7404046058654785
    9. ')' → logprob: -7.4904046058654785
    10. '<|end|>' → logprob: -7.4904046058654785

Token 583: ' due' (ID: 5192)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10381198674440384
    2. '   ' → logprob: -2.6038119792938232
    3. 'A' → logprob: -5.228812217712402
    4. ' sets' → logprob: -6.228812217712402
    5. ' for' → logprob: -6.353812217712402
    6. ' A' → logprob: -6.728812217712402
    7. ' input' → logprob: -6.853812217712402
    8. 'a' → logprob: -6.978812217712402
    9. ' a' → logprob: -6.978812217712402
    10. '#' → logprob: -6.978812217712402

Token 584: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03781745955348015
    2. 'to' → logprob: -3.4128174781799316
    3. '_to' → logprob: -6.912817478179932
    4. ')' → logprob: -7.162817478179932
    5. ' ' → logprob: -7.162817478179932
    6. '=' → logprob: -8.162817001342773
    7. ' =' → logprob: -8.537817001342773
    8. '    ' → logprob: -8.537817001342773
    9. '   ' → logprob: -8.662817001342773
    10. '<|end|>' → logprob: -8.662817001342773

Token 585: ' orientation' (ID: 29546)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8436033129692078
    2. 'len' → logprob: -1.9686033725738525
    3. 'the' → logprob: -2.2186033725738525
    4. ' code' → logprob: -2.5936033725738525
    5. ' len' → logprob: -2.7186033725738525
    6. ' sets' → logprob: -3.2186033725738525
    7. ' set' → logprob: -3.8436033725738525
    8. ' their' → logprob: -3.9686033725738525
    9. 'set' → logprob: -4.468603134155273
    10. ' input' → logprob: -4.718603134155273

Token 586: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0674884170293808
    2. ',' → logprob: -3.192488431930542
    3. '   ' → logprob: -5.192488193511963
    4. ')' → logprob: -5.442488193511963
    5. 'def' → logprob: -5.692488193511963
    6. '
' → logprob: -5.942488193511963
    7. '<|end|>' → logprob: -6.817488193511963
    8. '       ' → logprob: -6.942488193511963
    9. '            
' → logprob: -7.067488193511963
    10. ')
' → logprob: -7.317488193511963

Token 587: ' C' (ID: 363)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4638328552246094
    2. 'def' → logprob: -1.5888328552246094
    3. '#' → logprob: -1.8388328552246094
    4. 'A' → logprob: -1.8388328552246094
    5. '   ' → logprob: -3.2138328552246094
    6. 'a' → logprob: -3.4638328552246094
    7. ' c' → logprob: -3.5888328552246094
    8. 'c' → logprob: -3.8388328552246094
    9. ' def' → logprob: -3.8388328552246094
    10. 'adj' → logprob: -4.213832855224609

Token 588: ' crosses' (ID: 95853)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5855396389961243
    2. ' =' → logprob: -3.0855395793914795
    3. 'in' → logprob: -3.3355395793914795
    4. '-' → logprob: -3.3355395793914795
    5. '_neighbors' → logprob: -3.3355395793914795
    6. ' is' → logprob: -3.5855395793914795
    7. '=' → logprob: -3.5855395793914795
    8. 'for' → logprob: -3.8355395793914795
    9. 'ns' → logprob: -3.8355395793914795
    10. ')' → logprob: -4.210539817810059

Token 589: ' both' (ID: 2973)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0800837278366089
    2. 'both' → logprob: -1.5800837278366089
    3. '-' → logprob: -1.9550837278366089
    4. ' both' → logprob: -2.5800838470458984
    5. 'a' → logprob: -2.8300838470458984
    6. 's' → logprob: -3.0800838470458984
    7. ' A' → logprob: -3.9550838470458984
    8. 'the' → logprob: -4.455083847045898
    9. 'with' → logprob: -4.455083847045898
    10. ' a' → logprob: -4.580083847045898

Token 590: ' A' (ID: 355)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4246445298194885
    2. ')' → logprob: -2.7996444702148438
    3. 'def' → logprob: -2.7996444702148438
    4. '   ' → logprob: -2.7996444702148438
    5. ',' → logprob: -3.0496444702148438
    6. '
' → logprob: -3.5496444702148438
    7. ')
' → logprob: -4.174644470214844
    8. ' =' → logprob: -4.674644470214844
    9. 's' → logprob: -5.299644470214844
    10. '<|end|>' → logprob: -5.299644470214844

Token 591: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8834555149078369
    2. '           ' → logprob: -0.8834555149078369
    3. ' if' → logprob: -2.383455514907837
    4. ',' → logprob: -3.258455514907837
    5. ')' → logprob: -4.383455276489258
    6. 's' → logprob: -5.508455276489258
    7. ' in' → logprob: -5.633455276489258
    8. 'and' → logprob: -5.633455276489258
    9. ' =' → logprob: -5.758455276489258
    10. 'def' → logprob: -6.008455276489258

Token 592: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06990842521190643
    2. ' B' → logprob: -2.819908380508423
    3. 'C' → logprob: -5.069908618927002
    4. ' C' → logprob: -6.819908618927002
    5. 'A' → logprob: -8.944908142089844
    6. ' ' → logprob: -9.944908142089844
    7. ' both' → logprob: -10.069908142089844
    8. 'b' → logprob: -10.069908142089844
    9. ' A' → logprob: -10.194908142089844
    10. ')' → logprob: -10.319908142089844

Token 593: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.074307382106781
    2. ')' → logprob: -4.074307441711426
    3. 'def' → logprob: -4.074307441711426
    4. '   ' → logprob: -4.324307441711426
    5. '<|end|>' → logprob: -4.949307441711426
    6. '       ' → logprob: -5.449307441711426
    7. ',' → logprob: -5.574307441711426
    8. '<|end|>' → logprob: -5.699307441711426
    9. '
' → logprob: -6.324307441711426
    10. ')
' → logprob: -6.699307441711426

Token 594: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013314292300492525
    2. '   ' → logprob: -7.501331329345703
    3. '<|end|>' → logprob: -8.126331329345703
    4. '       ' → logprob: -8.876331329345703
    5. ',' → logprob: -9.251331329345703
    6. '<|end|>' → logprob: -9.626331329345703
    7. ')' → logprob: -10.001331329345703
    8. 'def' → logprob: -10.626331329345703
    9. ' from' → logprob: -11.251331329345703
    10. ' for' → logprob: -11.376331329345703

Token 595: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018071742728352547
    2. '   ' → logprob: -4.64307165145874
    3. '       ' → logprob: -5.89307165145874
    4. ' for' → logprob: -6.89307165145874
    5. 'def' → logprob: -7.39307165145874
    6. '
' → logprob: -7.64307165145874
    7. ' A' → logprob: -7.76807165145874
    8. '            
' → logprob: -7.89307165145874
    9. ' sets' → logprob: -8.018072128295898
    10. '    
' → logprob: -8.018072128295898

Token 596: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008142891339957714
    2. '   ' → logprob: -5.008142948150635
    3. 'A' → logprob: -7.883142948150635
    4. '       ' → logprob: -8.383142471313477
    5. 'def' → logprob: -8.633142471313477
    6. 'a' → logprob: -9.008142471313477
    7. '#' → logprob: -9.383142471313477
    8. 'for' → logprob: -9.383142471313477
    9. '            
' → logprob: -9.758142471313477
    10. 'from' → logprob: -10.258142471313477

Token 597: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9483764171600342
    2. 'for' → logprob: -2.073376417160034
    3. ' for' → logprob: -2.573376417160034
    4. 'A' → logprob: -2.573376417160034
    5. '#' → logprob: -2.698376417160034
    6. 'ns' → logprob: -3.073376417160034
    7. 'c' → logprob: -3.448376417160034
    8. 'def' → logprob: -3.698376417160034
    9. 'C' → logprob: -3.948376417160034
    10. 'cross' → logprob: -4.448376655578613

Token 598: ' is' (ID: 382)
  Prédit: 'ross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ross' → logprob: -0.8560585379600525
    2. 's' → logprob: -1.1060585975646973
    3. 'for' → logprob: -3.7310585975646973
    4. ' is' → logprob: -4.106058597564697
    5. 'cross' → logprob: -4.231058597564697
    6. '_candidates' → logprob: -4.231058597564697
    7. '_cross' → logprob: -4.231058597564697
    8. 'andidates' → logprob: -4.356058597564697
    9. '#' → logprob: -4.356058597564697
    10. '_neighbors' → logprob: -4.481058597564697

Token 599: ' in' (ID: 306)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.4546504020690918
    2. 'a' → logprob: -1.9546504020690918
    3. 'any' → logprob: -2.079650402069092
    4. ' None' → logprob: -2.579650402069092
    5. ' next' → logprob: -2.579650402069092
    6. ' a' → logprob: -2.829650402069092
    7. ' any' → logprob: -2.954650402069092
    8. 'ns' → logprob: -3.204650402069092
    9. '[' → logprob: -3.329650402069092
    10. 'next' → logprob: -3.454650402069092

Token 600: ' other' (ID: 1273)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.5052600502967834
    2. 'graph' → logprob: -1.2552599906921387
    3. 'stre' → logprob: -3.5052599906921387
    4. '[' → logprob: -4.005259990692139
    5. 'ew' → logprob: -4.505259990692139
    6. 'cross' → logprob: -4.755259990692139
    7. 'set' → logprob: -4.880259990692139
    8. '   ' → logprob: -4.880259990692139
    9. '{' → logprob: -5.130259990692139
    10. ' graph' → logprob: -5.880259990692139

Token 601: ' direction' (ID: 9262)
  Prédit: '_dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -1.2609206438064575
    2. '_st' → logprob: -1.3859206438064575
    3. 'direction' → logprob: -2.010920524597168
    4. ' direction' → logprob: -2.635920524597168
    5. 'st' → logprob: -3.385920524597168
    6. '_direction' → logprob: -3.385920524597168
    7. ' orientation' → logprob: -3.760920524597168
    8. ')' → logprob: -3.885920524597168
    9. 'orientation' → logprob: -4.010920524597168
    10. 's' → logprob: -4.385920524597168

Token 602: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08277015388011932
    2. '
' → logprob: -3.4577701091766357
    3. ')' → logprob: -4.332770347595215
    4. '   ' → logprob: -4.957770347595215
    5. '       ' → logprob: -5.332770347595215
    6. '<|end|>' → logprob: -5.332770347595215
    7. '<|end|>' → logprob: -5.332770347595215
    8. 'def' → logprob: -5.582770347595215
    9. ',' → logprob: -5.957770347595215
    10. ')
' → logprob: -6.082770347595215

Token 603: ' crosses' (ID: 95853)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7800306081771851
    2. ' not' → logprob: -1.655030608177185
    3. ' so' → logprob: -2.2800307273864746
    4. ' but' → logprob: -2.7800307273864746
    5. '           ' → logprob: -3.4050307273864746
    6. 'and' → logprob: -3.4050307273864746
    7. ' for' → logprob: -3.7800307273864746
    8. ' let's' → logprob: -4.655030727386475
    9. ' which' → logprob: -4.780030727386475
    10. 'not' → logprob: -4.905030727386475

Token 604: ' A' (ID: 355)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.18636691570281982
    2. 'A' → logprob: -2.1863670349121094
    3. ' both' → logprob: -2.9363670349121094
    4. 'at' → logprob: -6.686367034912109
    5. ' at' → logprob: -7.311367034912109
    6. ' A' → logprob: -7.311367034912109
    7. 'with' → logprob: -7.936367034912109
    8. 's' → logprob: -8.06136703491211
    9. 'a' → logprob: -8.81136703491211
    10. '{' → logprob: -9.06136703491211

Token 605: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1510341316461563
    2. 'and' → logprob: -2.026034116744995
    3. '           ' → logprob: -5.651034355163574
    4. ',' → logprob: -6.151034355163574
    5. ')' → logprob: -6.776034355163574
    6. ' or' → logprob: -7.776034355163574
    7. 's' → logprob: -8.651034355163574
    8. 'def' → logprob: -9.026034355163574
    9. '.' → logprob: -9.151034355163574
    10. ' in' → logprob: -9.276034355163574

Token 606: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10329215228557587
    2. ' B' → logprob: -2.353292226791382
    3. 'C' → logprob: -5.978291988372803
    4. ' C' → logprob: -7.603291988372803
    5. 'b' → logprob: -10.978292465209961
    6. ' ' → logprob: -11.103292465209961
    7. 'c' → logprob: -12.103292465209961
    8. '   ' → logprob: -12.853292465209961
    9. ' c' → logprob: -13.353292465209961
    10. '           ' → logprob: -13.603292465209961

Token 607: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008555943146348
    2. '   ' → logprob: -5.633555889129639
    3. '<|end|>' → logprob: -6.633555889129639
    4. '       ' → logprob: -7.133555889129639
    5. ')' → logprob: -7.133555889129639
    6. ',' → logprob: -7.383555889129639
    7. '<|end|>' → logprob: -7.758555889129639
    8. 'def' → logprob: -7.758555889129639
    9. '
' → logprob: -9.008556365966797
    10. '            
' → logprob: -9.258556365966797

Token 608: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022357820998877287
    2. '       ' → logprob: -7.2522358894348145
    3. ')' → logprob: -7.8772358894348145
    4. '   ' → logprob: -8.127235412597656
    5. ',' → logprob: -8.252235412597656
    6. '<|end|>' → logprob: -8.252235412597656
    7. '<|end|>' → logprob: -9.752235412597656
    8. '
' → logprob: -9.752235412597656
    9. '            
' → logprob: -10.502235412597656
    10. 'def' → logprob: -10.877235412597656

Token 609: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004438066855072975
    2. '   ' → logprob: -5.5044379234313965
    3. '       ' → logprob: -8.629438400268555
    4. 'def' → logprob: -9.879438400268555
    5. 'A' → logprob: -10.129438400268555
    6. ' A' → logprob: -11.379438400268555
    7. '            
' → logprob: -11.379438400268555
    8. 'from' → logprob: -11.629438400268555
    9. ',' → logprob: -12.191938400268555
    10. '    
' → logprob: -12.191938400268555

Token 610: ' get' (ID: 717)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004868568852543831
    2. '   ' → logprob: -5.754868507385254
    3. '
' → logprob: -7.754868507385254
    4. '       ' → logprob: -8.004868507385254
    5. '            
' → logprob: -8.629868507385254
    6. 'def' → logprob: -8.754868507385254
    7. ' for' → logprob: -9.129868507385254
    8. '    
' → logprob: -9.692368507385254
    9. ',' → logprob: -10.067368507385254
    10. ' from' → logprob: -10.129868507385254

Token 611: ' streets' (ID: 25360)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2324068546295166
    2. 'cross' → logprob: -2.4824068546295166
    3. 'C' → logprob: -2.6074068546295166
    4. '   ' → logprob: -2.7324068546295166
    5. ' neighbors' → logprob: -2.7324068546295166
    6. 'other' → logprob: -2.9824068546295166
    7. ' A' → logprob: -3.2324068546295166
    8. '#' → logprob: -3.3574068546295166
    9. ' other' → logprob: -3.3574068546295166
    10. 'neighbors' → logprob: -3.7324068546295166

Token 612: ' crossing' (ID: 50946)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.4790503978729248
    2. 's' → logprob: -2.229050397872925
    3. '_in' → logprob: -2.354050397872925
    4. 'ns' → logprob: -2.479050397872925
    5. ' of' → logprob: -2.604050397872925
    6. '   ' → logprob: -2.854050397872925
    7. 'of' → logprob: -2.979050397872925
    8. '_cross' → logprob: -3.104050397872925
    9. '_of' → logprob: -3.229050397872925
    10. '_a' → logprob: -3.354050397872925

Token 613: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.29284146428108215
    2. 's' → logprob: -2.6678414344787598
    3. '_a' → logprob: -3.4178414344787598
    4. '_A' → logprob: -3.5428414344787598
    5. '_of' → logprob: -3.7928414344787598
    6. '_with' → logprob: -4.16784143447876
    7. 'with' → logprob: -4.66784143447876
    8. '_in' → logprob: -5.04284143447876
    9. ' =' → logprob: -5.04284143447876
    10. '_set' → logprob: -5.04284143447876

Token 614: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05654725059866905
    2. 'def' → logprob: -3.681547164916992
    3. '   ' → logprob: -3.806547164916992
    4. '       ' → logprob: -5.681547164916992
    5. ',' → logprob: -6.806547164916992
    6. 'A' → logprob: -7.181547164916992
    7. ' =' → logprob: -7.806547164916992
    8. 's' → logprob: -7.931547164916992
    9. '
' → logprob: -7.931547164916992
    10. 'a' → logprob: -8.056547164916992

Token 615: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04580405727028847
    2. ' B' → logprob: -3.170804023742676
    3. 'stre' → logprob: -6.920804023742676
    4. ' streets' → logprob: -7.795804023742676
    5. 'b' → logprob: -7.795804023742676
    6. '
' → logprob: -8.670804023742676
    7. 'graph' → logprob: -8.920804023742676
    8. 'cross' → logprob: -9.170804023742676
    9. ' ' → logprob: -9.420804023742676
    10. 'a' → logprob: -9.920804023742676

Token 616: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006555859465152025
    2. '   ' → logprob: -5.881556034088135
    3. 'def' → logprob: -6.506556034088135
    4. '
' → logprob: -6.631556034088135
    5. ',' → logprob: -7.631556034088135
    6. '            
' → logprob: -9.131555557250977
    7. 'A' → logprob: -9.631555557250977
    8. 's' → logprob: -10.006555557250977
    9. '    
' → logprob: -10.256555557250977
    10. 'a' → logprob: -10.631555557250977

Token 617: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011481954716145992
    2. '   ' → logprob: -4.886481761932373
    3. 'def' → logprob: -6.136481761932373
    4. '
' → logprob: -6.761481761932373
    5. '       ' → logprob: -8.011482238769531
    6. ',' → logprob: -9.386482238769531
    7. '    
' → logprob: -10.636482238769531
    8. '            
' → logprob: -10.636482238769531
    9. ' def' → logprob: -11.636482238769531
    10. 's' → logprob: -11.761482238769531

Token 618: ' cross' (ID: 8088)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15478360652923584
    2. '   ' → logprob: -2.7797837257385254
    3. 'def' → logprob: -3.5297837257385254
    4. 'A' → logprob: -3.7797837257385254
    5. 'cross' (adapté à ' cross') → logprob: -3.9047837257385254
    6. 'a' → logprob: -5.404783725738525
    7. '       ' → logprob: -7.029783725738525
    8. 's' → logprob: -7.404783725738525
    9. 'neighbors' → logprob: -7.404783725738525
    10. 'set' → logprob: -7.904783725738525

Token 619: 'A' (ID: 32)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.4726809561252594
    2. 'es' → logprob: -1.472680926322937
    3. 'A' → logprob: -2.7226810455322266
    4. 'ings' → logprob: -3.0976810455322266
    5. 'ers' → logprob: -3.9726810455322266
    6. '_a' → logprob: -4.722681045532227
    7. 'ed' → logprob: -5.972681045532227
    8. 's' → logprob: -6.347681045532227
    9. '_set' → logprob: -6.597681045532227
    10. '_A' → logprob: -7.222681045532227

Token 620: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7441443204879761
    2. ' =' → logprob: -0.9941443204879761
    3. '=' → logprob: -2.1191444396972656
    4. '_s' → logprob: -3.6191444396972656
    5. '_set' → logprob: -5.744144439697266
    6. '_st' → logprob: -6.494144439697266
    7. '=set' → logprob: -7.744144439697266
    8. 'set' → logprob: -7.994144439697266
    9. 'es' → logprob: -8.119144439697266
    10. '_' → logprob: -8.244144439697266

Token 621: ' graph' (ID: 7465)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.20186330378055573
    2. '{' → logprob: -1.7018632888793945
    3. ' set' → logprob: -8.076863288879395
    4. 'graph' → logprob: -10.201863288879395
    5. ' {' → logprob: -10.326863288879395
    6. '{s' → logprob: -10.326863288879395
    7. '   ' → logprob: -11.826863288879395
    8. '[' → logprob: -12.201863288879395
    9. '(set' → logprob: -12.326863288879395
    10. '{x' → logprob: -12.451863288879395

Token 622: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.0003297440707683563
    2. '[' → logprob: -9.125329971313477
    3. '[a' → logprob: -9.250329971313477
    4. '.get' → logprob: -9.375329971313477
    5. 'A' → logprob: -11.375329971313477
    6. '[B' → logprob: -11.875329971313477
    7. '[s' → logprob: -12.000329971313477
    8. ' [' → logprob: -12.875329971313477
    9. '[C' → logprob: -13.375329971313477
    10. 's' → logprob: -13.375329971313477

Token 623: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2261287420988083
    2. ']
' → logprob: -1.6011286973953247
    3. '].' → logprob: -8.101128578186035
    4. ']
' → logprob: -8.851128578186035
    5. ')' → logprob: -9.226128578186035
    6. ']&' → logprob: -9.851128578186035
    7. ']

' → logprob: -10.226128578186035
    8. ')
' → logprob: -11.101128578186035
    9. '       ' → logprob: -11.351128578186035
    10. '           ' → logprob: -11.601128578186035

Token 624: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09268811345100403
    2. ' cross' → logprob: -3.2176880836486816
    3. '   ' → logprob: -4.092688083648682
    4. '           ' → logprob: -4.717688083648682
    5. 'cross' → logprob: -4.967688083648682
    6. ' 
' → logprob: -5.342688083648682
    7. '       ' → logprob: -6.217688083648682
    8. '
' → logprob: -6.342688083648682
    9. ' ' → logprob: -6.592688083648682
    10. '<|end|>' → logprob: -6.842688083648682

Token 625: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' (adapté à ' cross') → logprob: -0.06199872866272926
    2. ' cross' → logprob: -2.8119988441467285
    3. '           ' → logprob: -10.68699836730957
    4. '   ' → logprob: -12.43699836730957
    5. '       ' → logprob: -13.18699836730957
    6. '.cross' → logprob: -13.31199836730957
    7. ' ' → logprob: -14.93699836730957
    8. '_cross' → logprob: -15.06199836730957
    9. '-cross' → logprob: -17.31199836730957
    10. '
' → logprob: -17.68699836730957

Token 626: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0001342903997283429
    2. 'A' → logprob: -9.000134468078613
    3. '[B' → logprob: -12.250134468078613
    4. '(B' → logprob: -12.500134468078613
    5. 's' → logprob: -13.875134468078613
    6. ' B' → logprob: -14.375134468078613
    7. 'ers' → logprob: -15.500134468078613
    8. '[' → logprob: -16.125133514404297
    9. 'es' → logprob: -16.250133514404297
    10. 'ed' → logprob: -16.625133514404297

Token 627: ' =' (ID: 314)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.004062847699970007
    2. '&' → logprob: -6.129062652587891
    3. ' &
' → logprob: -7.254062652587891
    4. ')' → logprob: -8.12906265258789
    5. '&B' → logprob: -8.37906265258789
    6. ' ' → logprob: -8.37906265258789
    7. '<|end|>' → logprob: -8.37906265258789
    8. '.inter' → logprob: -9.75406265258789
    9. '           ' → logprob: -10.12906265258789
    10. ' &=' → logprob: -11.00406265258789

Token 628: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0007100477814674377
    2. ' graph' → logprob: -7.2507100105285645
    3. '	graph' → logprob: -16.375709533691406
    4. '(graph' → logprob: -17.750709533691406
    5. 'graphs' → logprob: -21.000709533691406
    6. '   ' → logprob: -21.375709533691406
    7. 'graphql' → logprob: -21.750709533691406
    8. ' ' → logprob: -22.000709533691406
    9. 'set' → logprob: -22.125709533691406
    10. 'graphic' → logprob: -22.375709533691406

Token 629: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.0013321444857865572
    2. 'B' → logprob: -6.6263322830200195
    3. '[
' → logprob: -13.50133228302002
    4. '[' → logprob: -13.50133228302002
    5. '(B' → logprob: -14.25133228302002
    6. '```' → logprob: -14.75133228302002
    7. '"B' → logprob: -15.00133228302002
    8. '[b' → logprob: -15.00133228302002
    9. '<B' → logprob: -15.25133228302002
    10. '[A' → logprob: -15.25133228302002

Token 630: ']
' (ID: 1592)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.4937714636325836
    2. ']' → logprob: -1.6187714338302612
    3. ')' → logprob: -2.368771553039551
    4. '&' → logprob: -2.368771553039551
    5. '<|end|>' → logprob: -6.868771553039551
    6. ' ]' → logprob: -7.368771553039551
    7. '           ' → logprob: -7.618771553039551
    8. ' &
' → logprob: -7.618771553039551
    9. '.inter' → logprob: -7.743771553039551
    10. '       ' → logprob: -7.868771553039551

Token 631: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5889244079589844
    2. '<|end|>' → logprob: -0.9639244079589844
    3. '   ' → logprob: -4.213924407958984
    4. '<|end|>' → logprob: -4.588924407958984
    5. '       ' → logprob: -4.713924407958984
    6. '
' → logprob: -4.838924407958984
    7. '  
' → logprob: -5.088924407958984
    8. ' ' → logprob: -5.463924407958984
    9. '    
' → logprob: -6.213924407958984
    10. ' if' → logprob: -6.213924407958984

Token 632: ' common' (ID: 5355)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' (adapté à ' common') → logprob: -0.5650981664657593
    2. '           ' → logprob: -1.5650981664657593
    3. '   ' → logprob: -2.565098285675049
    4. 'for' → logprob: -2.815098285675049
    5. 'if' → logprob: -3.690098285675049
    6. 'inter' → logprob: -3.815098285675049
    7. ' common' → logprob: -3.940098285675049
    8. ' for' → logprob: -5.065098285675049
    9. 'shared' → logprob: -5.690098285675049
    10. 'intersection' → logprob: -5.815098285675049

Token 633: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0364726185798645
    2. '=' → logprob: -4.036472797393799
    3. '_st' → logprob: -4.661472797393799
    4. '_cross' → logprob: -5.036472797393799
    5. '_neighbors' → logprob: -6.786472797393799
    6. '_' → logprob: -8.28647232055664
    7. 's' → logprob: -8.41147232055664
    8. '_s' → logprob: -8.66147232055664
    9. ' ' → logprob: -8.91147232055664
    10. '_inter' → logprob: -9.41147232055664

Token 634: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.00861528143286705
    2. ' cross' → logprob: -4.758615493774414
    3. 'graph' → logprob: -15.258615493774414
    4. ' ' → logprob: -15.508615493774414
    5. '   ' → logprob: -15.633615493774414
    6. '  ' → logprob: -16.508615493774414
    7. '{' → logprob: -17.383615493774414
    8. '.cross' → logprob: -18.383615493774414
    9. 'set' → logprob: -18.508615493774414
    10. 'c' → logprob: -18.633615493774414

Token 635: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.282920129597187e-05
    2. 'B' → logprob: -11.375012397766113
    3. '{' → logprob: -15.000012397766113
    4. 'a' → logprob: -15.125012397766113
    5. '(A' → logprob: -15.250012397766113
    6. 's' → logprob: -16.25001335144043
    7. '   ' → logprob: -16.75001335144043
    8. 'set' → logprob: -16.75001335144043
    9. '(' → logprob: -17.12501335144043
    10. ' ' → logprob: -17.25001335144043

Token 636: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.007716055028140545
    2. '&' → logprob: -5.257716178894043
    3. '.inter' → logprob: -6.007716178894043
    4. '&B' → logprob: -11.757716178894043
    5. '&amp' → logprob: -12.757716178894043
    6. '   ' → logprob: -13.507716178894043
    7. '&I' → logprob: -13.757716178894043
    8. '&nbsp' → logprob: -13.882716178894043
    9. '.&' → logprob: -14.007716178894043
    10. ' ' → logprob: -14.007716178894043

Token 637: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0019286326132714748
    2. ' cross' → logprob: -6.251928806304932
    3. 'graph' → logprob: -16.876928329467773
    4. ' ' → logprob: -19.001928329467773
    5. '   ' → logprob: -19.376928329467773
    6. '.cross' → logprob: -20.001928329467773
    7. 'c' → logprob: -20.126928329467773
    8. '_cross' → logprob: -20.876928329467773
    9. 'cut' → logprob: -21.001928329467773
    10. 'copy' → logprob: -21.001928329467773

Token 638: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -8.006006828509271e-05
    2. 'cross' → logprob: -9.500080108642578
    3. ' cross' → logprob: -12.875080108642578
    4. 'A' → logprob: -13.625080108642578
    5. ' B' → logprob: -13.750080108642578
    6. '_B' → logprob: -15.750080108642578
    7. 'AB' → logprob: -16.250080108642578
    8. '(B' → logprob: -17.375080108642578
    9. '_cross' → logprob: -17.375080108642578
    10. ' ' → logprob: -18.125080108642578

Token 639: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 640: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00467054545879364
    2. '<|end|>' → logprob: -6.1296706199646
    3. '   ' → logprob: -7.1296706199646
    4. '
' → logprob: -7.6296706199646
    5. '<|end|>' → logprob: -8.379670143127441
    6. '  
' → logprob: -8.379670143127441
    7. '       ' → logprob: -8.504670143127441
    8. ' for' → logprob: -9.379670143127441
    9. '    
' → logprob: -9.504670143127441
    10. '            
' → logprob: -9.504670143127441

Token 641: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2078988552093506
    2. ' if' → logprob: -1.3328988552093506
    3. ' for' → logprob: -1.3328988552093506
    4. 'if' (adapté à ' if') → logprob: -2.4578988552093506
    5. '           ' → logprob: -3.0828988552093506
    6. 'for' → logprob: -3.2078988552093506
    7. '       ' → logprob: -6.83289909362793
    8. ' ' → logprob: -7.70789909362793
    9. '  ' → logprob: -9.08289909362793
    10. '<|end|>' → logprob: -10.08289909362793

Token 642: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0038588629104197025
    2. 'len' → logprob: -6.253859043121338
    3. ' not' → logprob: -6.253859043121338
    4. '   ' → logprob: -12.87885856628418
    5. 'common' → logprob: -13.37885856628418
    6. ' len' → logprob: -14.25385856628418
    7. '       ' → logprob: -14.75385856628418
    8. '           ' → logprob: -15.75385856628418
    9. '!' → logprob: -17.25385856628418
    10. '     ' → logprob: -17.25385856628418

Token 643: ' common' (ID: 5355)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.006715967319905758
    2. ' common' → logprob: -5.006715774536133
    3. '(common' → logprob: -14.506715774536133
    4. '	common' → logprob: -16.131715774536133
    5. ' ' → logprob: -18.256715774536133
    6. 'any' → logprob: -18.381715774536133
    7. 'len' → logprob: -18.506715774536133
    8. '   ' → logprob: -18.631715774536133
    9. 'comm' → logprob: -19.006715774536133
    10. '.common' → logprob: -19.381715774536133

Token 644: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22703829407691956
    2. ':
' → logprob: -1.6020382642745972
    3. ':return' → logprob: -6.602038383483887
    4. '):' → logprob: -9.227038383483887
    5. '):
' → logprob: -9.477038383483887
    6. '           ' → logprob: -10.352038383483887
    7. '               ' → logprob: -10.602038383483887
    8. ')' → logprob: -11.227038383483887
    9. ':
' → logprob: -12.352038383483887
    10. ' or' → logprob: -12.477038383483887

Token 645: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021736434428021312
    2. '           ' → logprob: -8.87521743774414
    3. ' return' → logprob: -10.50021743774414
    4. '       ' → logprob: -10.62521743774414
    5. 'return' → logprob: -11.00021743774414
    6. '                   ' → logprob: -13.00021743774414
    7. '   ' → logprob: -13.12521743774414
    8. ':return' → logprob: -13.87521743774414
    9. ':' → logprob: -14.37521743774414
    10. '              ' → logprob: -14.75021743774414

Token 646: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10274631530046463
    2. ' return' → logprob: -2.3527462482452393
    3. '               ' → logprob: -6.102746486663818
    4. '   ' → logprob: -8.47774600982666
    5. '           ' → logprob: -9.47774600982666
    6. '       ' → logprob: -11.85274600982666
    7. '	return' → logprob: -12.60274600982666
    8. '
' → logprob: -13.10274600982666
    9. ':return' → logprob: -13.35274600982666
    10. '                   ' → logprob: -14.60274600982666

Token 647: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. '(False' → logprob: -19.875261306762695
    4. '   ' → logprob: -20.500261306762695
    5. 'True' → logprob: -21.125261306762695
    6. 'false' → logprob: -21.625261306762695
    7. '=False' → logprob: -23.750261306762695
    8. '0' → logprob: -23.750261306762695
    9. '
' → logprob: -24.000261306762695
    10. '[]' → logprob: -24.500261306762695

Token 648: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4849940538406372
    2. '<|end|>' → logprob: -1.8599940538406372
    3. '
' → logprob: -1.9849940538406372
    4. '       ' → logprob: -3.1099939346313477
    5. '    
' → logprob: -4.609993934631348
    6. '            
' → logprob: -4.734993934631348
    7. '        
' → logprob: -4.859993934631348
    8. '  
' → logprob: -5.359993934631348
    9. '<|end|>' → logprob: -5.734993934631348
    10. ' 
' → logprob: -5.734993934631348

Token 649: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15195968747138977
    2. '
' → logprob: -2.9019596576690674
    3. '       ' → logprob: -3.5269596576690674
    4. '<|end|>' → logprob: -3.7769596576690674
    5. '    
' → logprob: -4.2769598960876465
    6. '            
' → logprob: -5.0269598960876465
    7. '        
' → logprob: -5.0269598960876465
    8. '  
' → logprob: -6.0269598960876465
    9. ' return' → logprob: -6.9019598960876465
    10. ')' → logprob: -7.4019598960876465

Token 650: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010422522202134132
    2. '       ' → logprob: -4.885422706604004
    3. '
' → logprob: -7.135422706604004
    4. '   ' → logprob: -7.385422706604004
    5. '            
' → logprob: -7.760422706604004
    6. '#' (adapté à ' #') → logprob: -7.885422706604004
    7. '        
' → logprob: -8.510422706604004
    8. '    
' → logprob: -9.135422706604004
    9. 'for' → logprob: -9.385422706604004
    10. 'if' → logprob: -9.885422706604004

Token 651: ' condition' (ID: 7060)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.982917308807373
    2. 'for' → logprob: -1.232917308807373
    3. '           ' → logprob: -1.607917308807373
    4. '   ' → logprob: -2.232917308807373
    5. '       ' → logprob: -3.732917308807373
    6. 'set' → logprob: -7.607917308807373
    7. 'edges' → logprob: -7.982917308807373
    8. 'adj' → logprob: -7.982917308807373
    9. ' for' → logprob: -8.732917785644531
    10. 'cross' → logprob: -8.857917785644531

Token 652: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0590413361787796
    2. '(' → logprob: -3.1840412616729736
    3. '           ' → logprob: -4.434041500091553
    4. ' (
' → logprob: -6.559041500091553
    5. '   ' → logprob: -7.059041500091553
    6. '    ' → logprob: -7.934041500091553
    7. '            ' → logprob: -8.184041023254395
    8. ' =' → logprob: -8.309041023254395
    9. 's' → logprob: -9.309041023254395
    10. '        ' → logprob: -9.309041023254395

Token 653: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4497165381908417
    2. '(' → logprob: -1.699716567993164
    3. '1' → logprob: -2.074716567993164
    4. ' (' → logprob: -3.074716567993164
    5. ' ' → logprob: -5.449716567993164
    6. '   ' → logprob: -6.324716567993164
    7. ')' → logprob: -8.074716567993164
    8. '```' → logprob: -8.199716567993164
    9. '           ' → logprob: -8.449716567993164
    10. '       ' → logprob: -8.574716567993164

Token 654: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30053967237472534
    2. '):' → logprob: -1.8005397319793701
    3. '           ' → logprob: -2.42553973197937
    4. '   ' → logprob: -5.925539493560791
    5. '):
' → logprob: -6.550539493560791
    6. ':' → logprob: -6.800539493560791
    7. '       ' → logprob: -8.67553997039795
    8. ',' → logprob: -9.17553997039795
    9. ' )' → logprob: -9.30053997039795
    10. ')
' → logprob: -9.30053997039795

Token 655: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01407488714903593
    2. '   ' → logprob: -4.764074802398682
    3. '       ' → logprob: -5.389074802398682
    4. 'for' → logprob: -7.139074802398682
    5. ' for' → logprob: -9.51407527923584
    6. 'if' → logprob: -13.01407527923584
    7. '               ' → logprob: -13.26407527923584
    8. 'from' → logprob: -13.76407527923584
    9. '          ' → logprob: -13.88907527923584
    10. ' ' → logprob: -14.01407527923584

Token 656: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19673822820186615
    2. ' for' → logprob: -1.8217382431030273
    3. '           ' → logprob: -5.071738243103027
    4. '   ' → logprob: -5.696738243103027
    5. '       ' → logprob: -6.196738243103027
    6. 'cross' → logprob: -6.446738243103027
    7. '#' (adapté à ' #') → logprob: -6.946738243103027
    8. 'if' → logprob: -7.696738243103027
    9. 'AB' → logprob: -8.446738243103027
    10. 'A' → logprob: -8.571738243103027

Token 657: ' no' (ID: 860)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11611903458833694
    2. '   ' → logprob: -2.741119146347046
    3. '           ' → logprob: -3.241119146347046
    4. ' for' → logprob: -6.241118907928467
    5. '       ' → logprob: -6.366118907928467
    6. 'if' → logprob: -6.741118907928467
    7. '#' → logprob: -7.991118907928467
    8. 'set' → logprob: -8.491119384765625
    9. 'cross' → logprob: -8.991119384765625
    10. 'edges' → logprob: -9.491119384765625

Token 658: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.6995875239372253
    2. 'D' → logprob: -1.3245875835418701
    3. ' street' → logprob: -2.57458758354187
    4. ' for' → logprob: -2.94958758354187
    5. 'for' → logprob: -3.32458758354187
    6. ' s' → logprob: -4.199587345123291
    7. 'street' → logprob: -4.199587345123291
    8. 's' → logprob: -4.324587345123291
    9. 'd' → logprob: -4.824587345123291
    10. ' d' → logprob: -5.324587345123291

Token 659: ' such' (ID: 2238)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9668166041374207
    2. 'in' → logprob: -1.9668166637420654
    3. ' for' → logprob: -1.9668166637420654
    4. 'for' → logprob: -1.9668166637420654
    5. ' such' → logprob: -2.4668166637420654
    6. ' =' → logprob: -3.2168166637420654
    7. '           ' → logprob: -3.7168166637420654
    8. 'such' → logprob: -4.091816425323486
    9. 'exists' → logprob: -4.591816425323486
    10. ' exists' → logprob: -5.216816425323486

Token 660: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.0178991686552763
    2. 'D' → logprob: -4.767899036407471
    3. ' that' → logprob: -5.142899036407471
    4. 'in' → logprob: -6.267899036407471
    5. 'A' → logprob: -8.017899513244629
    6. 'not' → logprob: -8.392899513244629
    7. 's' → logprob: -8.517899513244629
    8. '   ' → logprob: -8.892899513244629
    9. 'a' → logprob: -9.017899513244629
    10. '           ' → logprob: -9.142899513244629

Token 661: ' D' (ID: 415)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.7918591499328613
    2. 'D' → logprob: -1.2918591499328613
    3. ' D' → logprob: -2.0418591499328613
    4. 'any' → logprob: -2.4168591499328613
    5. '(any' → logprob: -3.4168591499328613
    6. ' (' → logprob: -4.916859149932861
    7. '(D' → logprob: -6.041859149932861
    8. 'd' → logprob: -6.416859149932861
    9. 'graph' → logprob: -6.541859149932861
    10. '(s' → logprob: -6.541859149932861

Token 662: '-A' (ID: 9406)
  Prédit: '-A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-A' → logprob: -0.21573053300380707
    2. '-' → logprob: -2.0907304286956787
    3. ' in' → logprob: -2.9657304286956787
    4. 'in' → logprob: -4.590730667114258
    5. ' -' → logprob: -5.340730667114258
    6. 'A' → logprob: -5.840730667114258
    7. '-in' → logprob: -7.840730667114258
    8. '-a' → logprob: -8.590730667114258
    9. ' A' → logprob: -9.340730667114258
    10. '_A' → logprob: -10.090730667114258

Token 663: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3689934015274048
    2. ' in' → logprob: -1.3689934015274048
    3. 'and' → logprob: -2.9939932823181152
    4. 'in' → logprob: -5.868993282318115
    5. ' &' → logprob: -7.743993282318115
    6. ' not' → logprob: -7.868993282318115
    7. ')' → logprob: -8.868993759155273
    8. '           ' → logprob: -8.868993759155273
    9. ' ' → logprob: -9.118993759155273
    10. '   ' → logprob: -10.493993759155273

Token 664: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.014360117726027966
    2. ' B' → logprob: -4.389359951019287
    3. 'A' → logprob: -6.389359951019287
    4. ' A' → logprob: -10.014360427856445
    5. ' ' → logprob: -10.514360427856445
    6. '(B' → logprob: -10.764360427856445
    7. 'b' → logprob: -10.764360427856445
    8. 'D' → logprob: -10.889360427856445
    9. '   ' → logprob: -11.264360427856445
    10. '
' → logprob: -12.139360427856445

Token 665: '-D' (ID: 11989)
  Prédit: '-D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-D' → logprob: -7.421908958349377e-05
    2. ' -' → logprob: -9.87507438659668
    3. '-' → logprob: -11.12507438659668
    4. 'D' → logprob: -13.75007438659668
    5. '}-' → logprob: -13.87507438659668
    6. '```' → logprob: -13.87507438659668
    7. ' in' → logprob: -14.37507438659668
    8. ')-' → logprob: -14.62507438659668
    9. 'in' → logprob: -14.87507438659668
    10. ''-' → logprob: -14.87507438659668

Token 666: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1107228994369507
    2. ' &' → logprob: -1.1107228994369507
    3. 'intersection' → logprob: -2.8607230186462402
    4. '&' → logprob: -2.9857230186462402
    5. '.' → logprob: -3.2357230186462402
    6. ' in' → logprob: -3.3607230186462402
    7. '.inter' → logprob: -4.11072301864624
    8. 'appear' → logprob: -4.11072301864624
    9. 'inter' → logprob: -4.23572301864624
    10. 'in' → logprob: -4.48572301864624

Token 667: ' input' (ID: 3422)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.02044401690363884
    2. ' graph' → logprob: -4.145443916320801
    3. 'input' → logprob: -6.020443916320801
    4. 'cross' → logprob: -6.395443916320801
    5. '
' → logprob: -9.5204439163208
    6. '(graph' → logprob: -9.6454439163208
    7. ' input' → logprob: -10.0204439163208
    8. 'c' → logprob: -10.7704439163208
    9. '{' → logprob: -11.0204439163208
    10. '	graph' → logprob: -11.5204439163208

Token 668: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030551888048648834
    2. '   ' → logprob: -6.753055095672607
    3. '
' → logprob: -6.878055095672607
    4. '       ' → logprob: -7.878055095672607
    5. ',' → logprob: -9.003055572509766
    6. '<|end|>' → logprob: -9.503055572509766
    7. '               ' → logprob: -10.003055572509766
    8. '{' → logprob: -10.753055572509766
    9. '          ' → logprob: -10.878055572509766
    10. ' ' → logprob: -11.003055572509766

Token 669: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0070996661670506
    2. '<|end|>' → logprob: -5.007099628448486
    3. '       ' → logprob: -8.507100105285645
    4. '<|end|>' → logprob: -9.382100105285645
    5. '   ' → logprob: -9.632100105285645
    6. '               ' → logprob: -12.257100105285645
    7. ',' → logprob: -12.382100105285645
    8. '```' → logprob: -12.382100105285645
    9. ' for' → logprob: -12.632100105285645
    10. '{' → logprob: -13.382100105285645

Token 670: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3148161768913269
    2. ' for' → logprob: -2.0648162364959717
    3. '   ' → logprob: -2.5648162364959717
    4. 'for' → logprob: -2.9398162364959717
    5. '       ' → logprob: -4.814815998077393
    6. ' if' → logprob: -5.939815998077393
    7. 'if' → logprob: -6.689815998077393
    8. '
' → logprob: -7.439815998077393
    9. 'd' → logprob: -8.31481647491455
    10. ' cross' → logprob: -8.43981647491455

Token 671: ' D' (ID: 415)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7745092511177063
    2. '           ' → logprob: -1.1495091915130615
    3. ' for' → logprob: -1.8995091915130615
    4. '   ' → logprob: -2.7745091915130615
    5. '       ' → logprob: -5.399509429931641
    6. 'cross' → logprob: -6.649509429931641
    7. 'if' → logprob: -6.899509429931641
    8. 'D' → logprob: -7.649509429931641
    9. 'edges' → logprob: -8.14950942993164
    10. ' cross' → logprob: -8.14950942993164

Token 672: '-A' (ID: 9406)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6609269976615906
    2. 'for' → logprob: -1.4109270572662354
    3. '_candidates' → logprob: -1.7859270572662354
    4. 'in' → logprob: -4.285926818847656
    5. 'exists' → logprob: -4.785926818847656
    6. 'cross' → logprob: -5.160926818847656
    7. ' =' → logprob: -5.410926818847656
    8. '_set' → logprob: -5.535926818847656
    9. '_cross' → logprob: -5.535926818847656
    10. '_s' → logprob: -5.785926818847656

Token 673: ' means' (ID: 4748)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6020295023918152
    2. '_edges' → logprob: -1.85202956199646
    3. 's' → logprob: -2.60202956199646
    4. '=' → logprob: -3.47702956199646
    5. ' and' → logprob: -3.60202956199646
    6. 'in' → logprob: -3.72702956199646
    7. 'and' → logprob: -3.72702956199646
    8. ' in' → logprob: -3.72702956199646
    9. '_neighbors' → logprob: -4.102029323577881
    10. 'edges' → logprob: -4.477029323577881

Token 674: ' edge' (ID: 11165)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.9340753555297852
    2. ' any' → logprob: -1.1840753555297852
    3. 'D' → logprob: -1.4340753555297852
    4. 'graph' → logprob: -4.184075355529785
    5. ' D' → logprob: -4.309075355529785
    6. '(any' → logprob: -4.434075355529785
    7. '{' → logprob: -5.184075355529785
    8. '(D' → logprob: -5.309075355529785
    9. ' graph' → logprob: -5.559075355529785
    10. ' (' → logprob: -6.434075355529785

Token 675: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027794521301984787
    2. 'in' → logprob: -4.402794361114502
    3. 's' → logprob: -5.402794361114502
    4. ' not' → logprob: -5.652794361114502
    5. ' exists' → logprob: -6.402794361114502
    6. 'from' → logprob: -6.527794361114502
    7. ' from' → logprob: -7.652794361114502
    8. '[A' → logprob: -7.777794361114502
    9. 'A' → logprob: -8.15279483795166
    10. '[' → logprob: -8.40279483795166

Token 676: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.010910107754170895
    2. 'graph' → logprob: -4.7609100341796875
    3. ' D' → logprob: -6.8859100341796875
    4. 'd' → logprob: -7.6359100341796875
    5. 'B' → logprob: -7.8859100341796875
    6. ' graph' → logprob: -8.760910034179688
    7. 'A' → logprob: -9.135910034179688
    8. 'b' → logprob: -10.260910034179688
    9. '
' → logprob: -10.760910034179688
    10. '   ' → logprob: -11.510910034179688

Token 677: ' to' (ID: 316)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4852290749549866
    2. ' to' → logprob: -1.4852290153503418
    3. 'in' → logprob: -2.360229015350342
    4. 'to' → logprob: -2.860229015350342
    5. ')' → logprob: -5.735229015350342
    6. '           ' → logprob: -7.610229015350342
    7. ' exists' → logprob: -7.860229015350342
    8. ' and' → logprob: -7.860229015350342
    9. ' not' → logprob: -7.985229015350342
    10. ' ' → logprob: -8.1102294921875

Token 678: ' A' (ID: 355)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.07993406802415848
    2. 'A' → logprob: -2.7049341201782227
    3. 'B' → logprob: -5.079934120178223
    4. 'graph' → logprob: -6.329934120178223
    5. ' D' → logprob: -6.704934120178223
    6. ' A' → logprob: -8.329934120178223
    7. '{' → logprob: -8.954934120178223
    8. 'd' → logprob: -9.079934120178223
    9. ' graph' → logprob: -10.454934120178223
    10. 'set' → logprob: -10.454934120178223

Token 679: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023685127962380648
    2. ' and' → logprob: -7.377368450164795
    3. '<|end|>' → logprob: -7.377368450164795
    4. '
' → logprob: -8.002368927001953
    5. ' if' → logprob: -8.627368927001953
    6. '<|end|>' → logprob: -9.252368927001953
    7. '   ' → logprob: -9.502368927001953
    8. '            ' → logprob: -9.752368927001953
    9. '            
' → logprob: -9.752368927001953
    10. ',' → logprob: -9.877368927001953

Token 680: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019414882408455014
    2. '<|end|>' → logprob: -6.376941680908203
    3. '<|end|>' → logprob: -10.001941680908203
    4. ' for' → logprob: -10.001941680908203
    5. ',' → logprob: -10.126941680908203
    6. '   ' → logprob: -10.251941680908203
    7. '       ' → logprob: -11.001941680908203
    8. '
' → logprob: -11.126941680908203
    9. ' and' → logprob: -12.001941680908203
    10. '            
' → logprob: -12.126941680908203

Token 681: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034880004823207855
    2. ' for' → logprob: -3.7848799228668213
    3. 'for' → logprob: -4.9098801612854
    4. '   ' → logprob: -5.7848801612854
    5. '       ' → logprob: -8.284879684448242
    6. ',' → logprob: -8.534879684448242
    7. ' if' → logprob: -8.784879684448242
    8. ' and' → logprob: -8.909879684448242
    9. 'if' → logprob: -9.409879684448242
    10. '
' → logprob: -9.909879684448242

Token 682: ' B' (ID: 418)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16434204578399658
    2. ' for' → logprob: -2.164341926574707
    3. '           ' → logprob: -3.414341926574707
    4. '   ' → logprob: -6.164341926574707
    5. '#' → logprob: -7.914341926574707
    6. 'if' → logprob: -8.039341926574707
    7. 'c' → logprob: -8.539341926574707
    8. ' candidates' → logprob: -9.414341926574707
    9. 'edges' → logprob: -9.539341926574707
    10. ' if' → logprob: -9.664341926574707

Token 683: '-D' (ID: 11989)
  Prédit: '-D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-D' → logprob: -0.16775156557559967
    2. ' -' → logprob: -2.5427515506744385
    3. '-' → logprob: -2.9177515506744385
    4. '-A' → logprob: -4.417751789093018
    5. '-cross' → logprob: -5.917751789093018
    6. '-d' → logprob: -6.042751789093018
    7. ')-' → logprob: -6.167751789093018
    8. '-B' → logprob: -6.792751789093018
    9. '-)' → logprob: -8.04275131225586
    10. '-in' → logprob: -8.16775131225586

Token 684: ' means' (ID: 4748)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4602186977863312
    2. ' in' → logprob: -1.2102186679840088
    3. ' and' → logprob: -2.710218667984009
    4. 'and' → logprob: -6.585218906402588
    5. 'not' → logprob: -6.835218906402588
    6. 'in' → logprob: -6.960218906402588
    7. ')' → logprob: -8.08521842956543
    8. ' &' → logprob: -8.71021842956543
    9. ' ' → logprob: -9.71021842956543
    10. '           ' → logprob: -10.71021842956543

Token 685: ' edge' (ID: 11165)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.889894425868988
    2. 'B' → logprob: -1.8898944854736328
    3. ' graph' → logprob: -2.514894485473633
    4. '{' → logprob: -2.639894485473633
    5. 'graph' → logprob: -2.639894485473633
    6. ' D' → logprob: -2.764894485473633
    7. ' edge' → logprob: -3.139894485473633
    8. 'edge' → logprob: -3.264894485473633
    9. 'D' → logprob: -3.639894485473633
    10. ' not' → logprob: -4.889894485473633

Token 686: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3132929801940918
    2. ' from' → logprob: -1.3132929801940918
    3. '[from' → logprob: -11.06329345703125
    4. 'to' → logprob: -12.56329345703125
    5. '.from' → logprob: -12.81329345703125
    6. ' to' → logprob: -13.06329345703125
    7. ' ' → logprob: -13.31329345703125
    8. '	from' → logprob: -13.43829345703125
    9. '[' → logprob: -13.93829345703125
    10. '   ' → logprob: -14.43829345703125

Token 687: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002208781661465764
    2. ' B' → logprob: -6.127208709716797
    3. 'D' → logprob: -11.002208709716797
    4. 'b' → logprob: -12.127208709716797
    5. 'graph' → logprob: -14.127208709716797
    6. '{' → logprob: -15.627208709716797
    7. 'A' → logprob: -15.752208709716797
    8. ' ' → logprob: -15.877208709716797
    9. '[B' → logprob: -16.502208709716797
    10. ' graph' → logprob: -16.752208709716797

Token 688: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.15011101961135864
    2. 'to' → logprob: -2.025110960006714
    3. ' in' → logprob: -5.525111198425293
    4. ')' → logprob: -6.400111198425293
    5. '   ' → logprob: -7.900111198425293
    6. ' not' → logprob: -8.525111198425293
    7. 'in' → logprob: -8.525111198425293
    8. '[' → logprob: -8.900111198425293
    9. '[to' → logprob: -9.025111198425293
    10. ' ' → logprob: -9.400111198425293

Token 689: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.005983900744467974
    2. ' D' → logprob: -5.130983829498291
    3. '{' → logprob: -10.63098430633545
    4. 'd' → logprob: -11.38098430633545
    5. '
' → logprob: -11.75598430633545
    6. ' ' → logprob: -12.25598430633545
    7. 'A' → logprob: -13.13098430633545
    8. 'set' → logprob: -13.38098430633545
    9. 'B' → logprob: -14.00598430633545
    10. '	D' → logprob: -14.88098430633545

Token 690: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13035555183887482
    2. '
' → logprob: -2.1303555965423584
    3. '   ' → logprob: -6.255355358123779
    4. '       ' → logprob: -7.755355358123779
    5. ' for' → logprob: -8.255355834960938
    6. '<|end|>' → logprob: -8.255355834960938
    7. '            
' → logprob: -8.880355834960938
    8. 'for' → logprob: -9.005355834960938
    9. '    
' → logprob: -9.880355834960938
    10. '
' → logprob: -10.505355834960938

Token 691: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007504248642362654
    2. '       ' → logprob: -8.375750541687012
    3. '<|end|>' → logprob: -8.375750541687012
    4. '   ' → logprob: -8.500750541687012
    5. '
' → logprob: -9.875750541687012
    6. '<|end|>' → logprob: -11.250750541687012
    7. ' for' → logprob: -12.250750541687012
    8. ',' → logprob: -12.750750541687012
    9. 'for' → logprob: -13.375750541687012
    10. '```' → logprob: -13.375750541687012

Token 692: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12308772653341293
    2. '   ' → logprob: -2.4980876445770264
    3. ' for' → logprob: -4.1230878829956055
    4. '       ' → logprob: -4.6230878829956055
    5. 'for' → logprob: -5.1230878829956055
    6. '
' → logprob: -6.4980878829956055
    7. '    
' → logprob: -11.123087882995605
    8. ' ' → logprob: -11.373087882995605
    9. '  ' → logprob: -11.498087882995605
    10. 'if' → logprob: -11.873087882995605

Token 693: ' Note' (ID: 12225)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33156195282936096
    2. 'for' → logprob: -1.9565619230270386
    3. ' for' → logprob: -2.706562042236328
    4. '   ' → logprob: -2.706562042236328
    5. '       ' → logprob: -4.956562042236328
    6. 'd' → logprob: -9.331562042236328
    7. 'if' → logprob: -9.706562042236328
    8. ' ' → logprob: -10.206562042236328
    9. ' if' → logprob: -11.206562042236328
    10. '  ' → logprob: -11.706562042236328

Token 694: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6020658612251282
    2. ' that' → logprob: -1.8520658016204834
    3. ' for' → logprob: -1.8520658016204834
    4. ':' → logprob: -3.1020658016204834
    5. '       ' → logprob: -3.1020658016204834
    6. 'for' → logprob: -4.7270660400390625
    7. '               ' → logprob: -4.8520660400390625
    8. '            ' → logprob: -5.2270660400390625
    9. ' continue' → logprob: -5.7270660400390625
    10. ' =' → logprob: -5.8520660400390625

Token 695: ' crossings' (ID: 199340)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26306143403053284
    2. 'for' → logprob: -1.6380614042282104
    3. '           ' → logprob: -3.6380615234375
    4. '            ' → logprob: -6.1380615234375
    5. ' same' → logprob: -6.5130615234375
    6. '               ' → logprob: -7.0130615234375
    7. ' all' → logprob: -7.1380615234375
    8. 'same' → logprob: -7.3880615234375
    9. ' def' → logprob: -7.6380615234375
    10. '   ' → logprob: -7.6380615234375

Token 696: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5111862421035767
    2. ' =' → logprob: -1.7611862421035767
    3. ' in' → logprob: -3.136186122894287
    4. 'are' → logprob: -3.136186122894287
    5. '<|end|>' → logprob: -3.761186122894287
    6. '=' → logprob: -3.886186122894287
    7. 's' → logprob: -4.011186122894287
    8. ' is' → logprob: -4.386186122894287
    9. ' can' → logprob: -4.636186122894287
    10. 'in' → logprob: -4.886186122894287

Token 697: ' bid' (ID: 16023)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'und' → logprob: -0.020127443596720695
    2. ' und' → logprob: -4.395127296447754
    3. 'edges' → logprob: -5.895127296447754
    4. '   ' → logprob: -6.645127296447754
    5. 'stored' → logprob: -7.145127296447754
    6. 'bid' → logprob: -7.270127296447754
    7. 's' → logprob: -7.645127296447754
    8. 'all' → logprob: -7.770127296447754
    9. 'unordered' → logprob: -8.395127296447754
    10. 'represented' → logprob: -8.645127296447754

Token 698: 'irectional' (ID: 86044)
  Prédit: 'irectional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irectional' → logprob: -0.0012666594702750444
    2. 'irected' → logprob: -7.1262664794921875
    3. 'rection' → logprob: -7.7512664794921875
    4. 'ir' → logprob: -11.501266479492188
    5. 'irection' → logprob: -11.876266479492188
    6. 'irect' → logprob: -12.376266479492188
    7. 'ection' → logprob: -13.251266479492188
    8. '```' → logprob: -13.251266479492188
    9. 'edges' → logprob: -13.626266479492188
    10. '   ' → logprob: -14.001266479492188

Token 699: ' edges' (ID: 22569)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028238967061042786
    2. '<|end|>' → logprob: -6.752823829650879
    3. '
' → logprob: -7.502823829650879
    4. ',' → logprob: -8.127823829650879
    5. '       ' → logprob: -8.502823829650879
    6. '<|end|>' → logprob: -8.752823829650879
    7. ' for' → logprob: -9.127823829650879
    8. '   ' → logprob: -9.127823829650879
    9. ',
' → logprob: -10.002823829650879
    10. '            
' → logprob: -10.002823829650879

Token 700: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004770445637404919
    2. '<|end|>' → logprob: -5.629770278930664
    3. '       ' → logprob: -7.504770278930664
    4. '   ' → logprob: -8.504770278930664
    5. '<|end|>' → logprob: -9.004770278930664
    6. ' for' → logprob: -9.004770278930664
    7. ',' → logprob: -9.629770278930664
    8. '
' → logprob: -10.004770278930664
    9. 'for' → logprob: -11.629770278930664
    10. '          ' → logprob: -11.629770278930664

Token 701: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.11429868638515472
    2. ' graph' → logprob: -2.2392985820770264
    3. 'the' → logprob: -6.7392988204956055
    4. ' the' → logprob: -8.864298820495605
    5. 'und' → logprob: -10.364298820495605
    6. '	graph' → logprob: -10.364298820495605
    7. '(graph' → logprob: -10.739298820495605
    8. 'both' → logprob: -11.114298820495605
    9. 'input' → logprob: -11.614298820495605
    10. '```' → logprob: -12.239298820495605

Token 702: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037099348846822977
    2. '
' → logprob: -6.37870979309082
    3. '   ' → logprob: -7.00370979309082
    4. '       ' → logprob: -7.37870979309082
    5. '<|end|>' → logprob: -8.75370979309082
    6. ' for' → logprob: -8.87870979309082
    7. ',' → logprob: -9.62870979309082
    8. '            
' → logprob: -10.12870979309082
    9. '    
' → logprob: -11.37870979309082
    10. 'for' → logprob: -11.62870979309082

Token 703: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009703203104436398
    2. '       ' → logprob: -5.759703159332275
    3. '
' → logprob: -6.134703159332275
    4. '<|end|>' → logprob: -6.509703159332275
    5. ' for' → logprob: -6.634703159332275
    6. '   ' → logprob: -6.634703159332275
    7. '<|end|>' → logprob: -10.009703636169434
    8. '    
' → logprob: -10.384703636169434
    9. 'for' → logprob: -10.509703636169434
    10. '            
' → logprob: -10.634703636169434

Token 704: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20383276045322418
    2. '   ' → logprob: -2.2038328647613525
    3. 'for' → logprob: -3.0788328647613525
    4. ' for' → logprob: -3.8288328647613525
    5. '       ' → logprob: -5.078832626342773
    6. ' ' → logprob: -11.453832626342773
    7. 'if' → logprob: -12.328832626342773
    8. '#' (adapté à ' #') → logprob: -12.703832626342773
    9. 'edges' → logprob: -12.703832626342773
    10. '
' → logprob: -12.953832626342773

Token 705: ' To' (ID: 2514)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6431478261947632
    2. 'for' → logprob: -0.8931478261947632
    3. '   ' → logprob: -3.2681479454040527
    4. ' for' → logprob: -4.143147945404053
    5. '       ' → logprob: -4.518147945404053
    6. 'edges' → logprob: -10.268147468566895
    7. 'd' → logprob: -11.268147468566895
    8. ' ' → logprob: -11.393147468566895
    9. 'if' → logprob: -11.643147468566895
    10. '
' → logprob: -12.018147468566895

Token 706: ' match' (ID: 3981)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20433151721954346
    2. ' for' → logprob: -1.9543315172195435
    3. '       ' → logprob: -4.204331398010254
    4. 'return' → logprob: -4.454331398010254
    5. '           ' → logprob: -5.329331398010254
    6. '   ' → logprob: -5.704331398010254
    7. ' return' → logprob: -6.579331398010254
    8. ' check' → logprob: -6.579331398010254
    9. 'check' → logprob: -6.829331398010254
    10. ' ' → logprob: -7.454331398010254

Token 707: ' the' (ID: 290)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.197646975517273
    2. 'd' → logprob: -1.447646975517273
    3. ' d' → logprob: -2.0726470947265625
    4. ' D' → logprob: -2.6976470947265625
    5. ' any' → logprob: -2.8226470947265625
    6. 'for' → logprob: -3.3226470947265625
    7. ' for' → logprob: -3.4476470947265625
    8. ' all' → logprob: -3.9476470947265625
    9. 'any' → logprob: -4.3226470947265625
    10. 'all' → logprob: -4.3226470947265625

Token 708: ' directions' (ID: 24921)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.7159610986709595
    2. 'not' → logprob: -1.7159610986709595
    3. 'any' → logprob: -2.59096097946167
    4. ' any' → logprob: -2.59096097946167
    5. ' all' → logprob: -2.71596097946167
    6. 'all' → logprob: -2.71596097946167
    7. 'for' → logprob: -2.84096097946167
    8. 'D' → logprob: -3.34096097946167
    9. ' D' → logprob: -3.34096097946167
    10. 'def' → logprob: -3.46596097946167

Token 709: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6180633902549744
    2. ',' → logprob: -0.9930633902549744
    3. ' for' → logprob: -2.868063449859619
    4. 'for' → logprob: -4.618063449859619
    5. ' ,' → logprob: -5.493063449859619
    6. '            ' → logprob: -5.993063449859619
    7. ' of' → logprob: -5.993063449859619
    8. ' in' → logprob: -6.243063449859619
    9. '               ' → logprob: -6.618063449859619
    10. ' we' → logprob: -6.743063449859619

Token 710: ' in' (ID: 306)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12946060299873352
    2. 'for' → logprob: -2.504460573196411
    3. '           ' → logprob: -3.379460573196411
    4. '   ' → logprob: -5.50446081161499
    5. '       ' → logprob: -8.254460334777832
    6. ' return' → logprob: -8.379460334777832
    7. ' ' → logprob: -9.254460334777832
    8. ' A' → logprob: -9.504460334777832
    9. ' directions' → logprob: -9.629460334777832
    10. 'A' → logprob: -9.754460334777832

Token 711: ' input' (ID: 3422)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.5179353952407837
    2. 'ns' → logprob: -1.6429353952407837
    3. 'range' → logprob: -1.7679353952407837
    4. 'for' → logprob: -2.017935276031494
    5. 'cross' → logprob: -2.892935276031494
    6. 'equal' → logprob: -3.142935276031494
    7. '[' → logprob: -3.392935276031494
    8. ' range' → logprob: -4.017935276031494
    9. ' graph' → logprob: -4.267935276031494
    10. 'same' → logprob: -4.392935276031494

Token 712: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9846007227897644
    2. '       ' → logprob: -1.4846007823944092
    3. 'cross' → logprob: -2.109600782394409
    4. 'stre' → logprob: -2.734600782394409
    5. 'edges' → logprob: -3.109600782394409
    6. ' crossings' → logprob: -3.609600782394409
    7. '   ' → logprob: -3.609600782394409
    8. 's' → logprob: -3.734600782394409
    9. 'for' → logprob: -4.10960054397583
    10. ',' → logprob: -4.73460054397583

Token 713: ' they' (ID: 1023)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12807466089725494
    2. ' for' → logprob: -3.0030746459960938
    3. '           ' → logprob: -3.5030746459960938
    4. '#' → logprob: -3.6280746459960938
    5. 'continue' → logprob: -6.003074645996094
    6. 'edges' → logprob: -6.003074645996094
    7. 'def' → logprob: -6.378074645996094
    8. '               ' → logprob: -6.753074645996094
    9. 'pass' → logprob: -6.878074645996094
    10. '       ' → logprob: -7.253074645996094

Token 714: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.9007257223129272
    2. ' are' → logprob: -1.5257257223129272
    3. 'appear' → logprob: -2.150725841522217
    4. ' only' → logprob: -3.025725841522217
    5. ' appear' → logprob: -3.025725841522217
    6. '#' → logprob: -3.650725841522217
    7. ' represent' → logprob: -4.150725841522217
    8. 'do' → logprob: -4.650725841522217
    9. 'only' → logprob: -4.775725841522217
    10. 'have' → logprob: -5.150725841522217

Token 715: ' und' (ID: 844)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'und' → logprob: -0.35145026445388794
    2. 'stre' → logprob: -2.476450204849243
    3. 'stored' → logprob: -3.351450204849243
    4. 'both' → logprob: -3.476450204849243
    5. 'cross' → logprob: -3.601450204849243
    6. 'represented' → logprob: -3.851450204849243
    7. 'bid' → logprob: -4.351450443267822
    8. 'all' → logprob: -4.476450443267822
    9. 'edges' → logprob: -4.851450443267822
    10. 'given' → logprob: -5.101450443267822

Token 716: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -2.3199920178740285e-05
    2. 'irectional' → logprob: -11.500022888183594
    3. 'er' → logprob: -12.625022888183594
    4. 'efined' → logprob: -13.000022888183594
    5. 'irect' → logprob: -13.500022888183594
    6. '```' → logprob: -13.500022888183594
    7. '   ' → logprob: -13.500022888183594
    8. '#' → logprob: -14.000022888183594
    9. 'ir' → logprob: -14.500022888183594
    10. 'ected' → logprob: -14.750022888183594

Token 717: ' edges' (ID: 22569)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08008570224046707
    2. '
' → logprob: -3.4550857543945312
    3. '<|end|>' → logprob: -3.4550857543945312
    4. ',' → logprob: -5.080085754394531
    5. '<|end|>' → logprob: -5.705085754394531
    6. '       ' → logprob: -6.955085754394531
    7. ' for' → logprob: -7.330085754394531
    8. ',
' → logprob: -7.580085754394531
    9. '   ' → logprob: -7.580085754394531
    10. '            
' → logprob: -7.955085754394531

Token 718: ',
' (ID: 412)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24077896773815155
    2. '<|end|>' → logprob: -1.740778923034668
    3. '
' → logprob: -3.740778923034668
    4. '<|end|>' → logprob: -5.365778923034668
    5. '   ' → logprob: -5.740778923034668
    6. '       ' → logprob: -5.865778923034668
    7. ',' → logprob: -6.865778923034668
    8. '            
' → logprob: -7.490778923034668
    9. '    
' → logprob: -7.615778923034668
    10. ',
' → logprob: -7.990778923034668

Token 719: '           ' (ID: 352)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.03976473584771156
    2. ' but' → logprob: -3.789764642715454
    3. '           ' → logprob: -4.164764881134033
    4. 'so' → logprob: -7.664764881134033
    5. 'but' → logprob: -8.664764404296875
    6. ' continue' → logprob: -9.789764404296875
    7. '            ' → logprob: -10.289764404296875
    8. '            
' → logprob: -10.289764404296875
    9. ' and' → logprob: -11.039764404296875
    10. '       ' → logprob: -11.039764404296875

Token 720: ' #' (ID: 1069)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.28001075983047485
    2. ' but' → logprob: -1.78001070022583
    3. '           ' → logprob: -3.53001070022583
    4. 'so' → logprob: -3.78001070022583
    5. 'but' → logprob: -4.03001070022583
    6. '#' (adapté à ' #') → logprob: -5.40501070022583
    7. ' and' → logprob: -8.530011177062988
    8. '
' → logprob: -8.905011177062988
    9. '       ' → logprob: -9.155011177062988
    10. ' #' → logprob: -9.280011177062988

Token 721: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6676484942436218
    2. '           ' → logprob: -1.0426485538482666
    3. ' so' → logprob: -2.6676485538482666
    4. ' #' → logprob: -4.0426483154296875
    5. ' for' → logprob: -4.2926483154296875
    6. ' but' → logprob: -4.2926483154296875
    7. 'for' → logprob: -5.1676483154296875
    8. ' return' → logprob: -5.7926483154296875
    9. 'so' → logprob: -5.7926483154296875
    10. 'but' → logprob: -5.9176483154296875

Token 722: ' here' (ID: 2105)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5365862250328064
    2. ' for' → logprob: -1.4115862846374512
    3. '           ' → logprob: -2.161586284637451
    4. '#' → logprob: -3.161586284637451
    5. 'return' → logprob: -5.036586284637451
    6. ' return' → logprob: -6.286586284637451
    7. ' #' → logprob: -6.786586284637451
    8. ' we' → logprob: -6.911586284637451
    9. '               ' → logprob: -7.036586284637451
    10. 'we' → logprob: -7.161586284637451

Token 723: ' direction' (ID: 9262)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.18661709129810333
    2. 'we' → logprob: -2.561617136001587
    3. ',' → logprob: -3.186617136001587
    4. '           ' → logprob: -3.936617136001587
    5. ' the' → logprob: -4.186616897583008
    6. ' is' → logprob: -5.561616897583008
    7. ' both' → logprob: -6.436616897583008
    8. ' they' → logprob: -6.936616897583008
    9. ' for' → logprob: -7.186616897583008
    10. ''s' → logprob: -7.186616897583008

Token 724: ' matters' (ID: 19854)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5517802238464355
    2. 's' → logprob: -1.4267802238464355
    3. 'al' → logprob: -2.5517802238464355
    4. 'ality' → logprob: -3.3017802238464355
    5. '<|end|>' → logprob: -3.9267802238464355
    6. ' continues' → logprob: -4.3017802238464355
    7. ' s' → logprob: -5.4267802238464355
    8. '<|end|>' → logprob: -5.4267802238464355
    9. ' ' → logprob: -6.0517802238464355
    10. ' remains' → logprob: -6.0517802238464355

Token 725: '?' (ID: 30)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017165892058983445
    2. '
' → logprob: -7.126716613769531
    3. '<|end|>' → logprob: -8.001716613769531
    4. '       ' → logprob: -8.876716613769531
    5. ',' → logprob: -9.001716613769531
    6. ' for' → logprob: -9.376716613769531
    7. '<|end|>' → logprob: -9.626716613769531
    8. '   ' → logprob: -10.001716613769531
    9. '            
' → logprob: -10.251716613769531
    10. ',
' → logprob: -11.751716613769531

Token 726: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011947108432650566
    2. '
' → logprob: -5.261947154998779
    3. ' return' → logprob: -6.136947154998779
    4. '<|end|>' → logprob: -6.511947154998779
    5. '       ' → logprob: -7.761947154998779
    6. '               ' → logprob: -8.011946678161621
    7. '            
' → logprob: -8.011946678161621
    8. '   ' → logprob: -8.136946678161621
    9. '#' → logprob: -8.261946678161621
    10. ' if' → logprob: -8.636946678161621

Token 727: ' input' (ID: 3422)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.8447749614715576
    2. '#' → logprob: -1.7197749614715576
    3. 'problem' → logprob: -2.2197749614715576
    4. ' problem' → logprob: -2.4697749614715576
    5. 'code' → logprob: -2.5947749614715576
    6. 'input' → logprob: -3.8447749614715576
    7. ' next' → logprob: -4.344775199890137
    8. 'user' → logprob: -4.719775199890137
    9. ' input' → logprob: -4.844775199890137
    10. ' user' → logprob: -4.969775199890137

Token 728: ' lines' (ID: 8698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 729: ' X' (ID: 2127)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7093467712402344
    2. ' seem' → logprob: -2.5843467712402344
    3. 'are' → logprob: -2.9593467712402344
    4. ' continue' → logprob: -3.0843467712402344
    5. ' appear' → logprob: -3.2093467712402344
    6. '#' → logprob: -3.4593467712402344
    7. '           ' → logprob: -3.7093467712402344
    8. ' may' → logprob: -3.9593467712402344
    9. ' that' → logprob: -4.084346771240234
    10. ',' → logprob: -4.209346771240234

Token 730: '-Y' (ID: 47491)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3394273817539215
    2. ' and' → logprob: -2.2144274711608887
    3. 'and' → logprob: -2.7144274711608887
    4. ''-' → logprob: -3.4644274711608887
    5. '<|end|>' → logprob: -4.089427471160889
    6. ')' → logprob: -4.964427471160889
    7. '[-' → logprob: -4.964427471160889
    8. ' -' → logprob: -5.089427471160889
    9. '<|end|>' → logprob: -5.089427471160889
    10. '[' → logprob: -5.214427471160889

Token 731: ' are' (ID: 553)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6263419389724731
    2. '<|end|>' → logprob: -1.7513419389724731
    3. ')' → logprob: -1.8763419389724731
    4. ' is' → logprob: -2.3763418197631836
    5. ':' → logprob: -3.0013418197631836
    6. '           ' → logprob: -3.3763418197631836
    7. ' appears' → logprob: -3.5013418197631836
    8. ' and' → logprob: -3.6263418197631836
    9. ' in' → logprob: -3.8763418197631836
    10. '<|end|>' → logprob: -4.126341819763184

Token 732: ' ordered' (ID: 17889)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'und' → logprob: -0.9579246044158936
    2. 'always' → logprob: -2.0829246044158936
    3. 'stre' → logprob: -2.2079246044158936
    4. 'ass' → logprob: -2.7079246044158936
    5. 'treated' → logprob: -3.3329246044158936
    6. 'all' → logprob: -3.5829246044158936
    7. 'stored' → logprob: -3.7079246044158936
    8. 'consider' → logprob: -3.7079246044158936
    9. '   ' → logprob: -3.8329246044158936
    10. 'interpre' → logprob: -3.9579246044158936

Token 733: ' crossings' (ID: 199340)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 734: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 735: ' So' (ID: 2632)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 736: ' we' (ID: 581)
  Prédit: ' we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.8120933175086975
    2. ' continue' → logprob: -1.0620932579040527
    3. ' the' → logprob: -3.0620932579040527
    4. '#' → logprob: -3.1870932579040527
    5. 'continue' → logprob: -3.6870932579040527
    6. 'we' → logprob: -4.062093257904053
    7. ' #' → logprob: -4.937093257904053
    8. ' for' → logprob: -4.937093257904053
    9. 'the' → logprob: -5.187093257904053
    10. ' let's' → logprob: -5.562093257904053

Token 737: ' treat' (ID: 4665)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.6787634491920471
    2. 'need' → logprob: -1.0537633895874023
    3. ' continue' → logprob: -2.8037633895874023
    4. 'continue' → logprob: -3.4287633895874023
    5. ' should' → logprob: -4.553763389587402
    6. 'have' → logprob: -4.928763389587402
    7. 'should' → logprob: -5.053763389587402
    8. ' have' → logprob: -5.053763389587402
    9. ' must' → logprob: -5.553763389587402
    10. ' can' → logprob: -5.678763389587402

Token 738: ' A' (ID: 355)
  Prédit: 'them'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'them' → logprob: -0.71841961145401
    2. ' them' → logprob: -1.2184195518493652
    3. 'edges' → logprob: -2.9684195518493652
    4. 'graph' → logprob: -2.9684195518493652
    5. 'the' → logprob: -2.9684195518493652
    6. ' edges' → logprob: -4.343419551849365
    7. ' graph' → logprob: -4.843419551849365
    8. ' the' → logprob: -4.843419551849365
    9. 'both' → logprob: -5.218419551849365
    10. ' as' → logprob: -5.468419551849365

Token 739: '-B' (ID: 8287)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.523197591304779
    2. '-B' → logprob: -1.5231976509094238
    3. '-' → logprob: -3.398197650909424
    4. 's' → logprob: -3.523197650909424
    5. '<|end|>' → logprob: -3.773197650909424
    6. ')' → logprob: -4.023197650909424
    7. ' as' → logprob: -4.273197650909424
    8. 'and' → logprob: -4.398197650909424
    9. ' -' → logprob: -4.898197650909424
    10. '[' → logprob: -5.023197650909424

Token 740: ' and' (ID: 326)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.10693538188934326
    2. ' and' → logprob: -2.856935501098633
    3. ')' → logprob: -3.856935501098633
    4. 'as' → logprob: -4.981935501098633
    5. ' edges' → logprob: -5.481935501098633
    6. 'and' → logprob: -5.981935501098633
    7. ' in' → logprob: -6.231935501098633
    8. ',' → logprob: -6.481935501098633
    9. '<|end|>' → logprob: -6.981935501098633
    10. '
' → logprob: -7.356935501098633

Token 741: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3870236575603485
    2. ' B' → logprob: -1.137023687362671
    3. ' ' → logprob: -9.13702392578125
    4. 'A' → logprob: -10.88702392578125
    5. ' A' → logprob: -11.63702392578125
    6. '   ' → logprob: -12.13702392578125
    7. '```' → logprob: -12.63702392578125
    8. 'b' → logprob: -13.63702392578125
    9. '	B' → logprob: -13.63702392578125
    10. '  ' → logprob: -13.76202392578125

Token 742: '-A' (ID: 9406)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7076587677001953
    2. '-A' → logprob: -0.7076587677001953
    3. ')-' → logprob: -5.707658767700195
    4. '-)' → logprob: -5.832658767700195
    5. ')' → logprob: -6.332658767700195
    6. '[-' → logprob: -6.832658767700195
    7. '-C' → logprob: -7.082658767700195
    8. '```' → logprob: -7.082658767700195
    9. '
' → logprob: -7.457658767700195
    10. '<|end|>' → logprob: -7.582658767700195

Token 743: ' differently' (ID: 36490)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.06736907362937927
    2. 'as' → logprob: -2.817368984222412
    3. '
' → logprob: -6.442368984222412
    4. ')' → logprob: -7.692368984222412
    5. ' edges' → logprob: -7.692368984222412
    6. ' lines' → logprob: -7.942368984222412
    7. 's' → logprob: -7.942368984222412
    8. ' are' → logprob: -8.06736946105957
    9. '```' → logprob: -8.44236946105957
    10. ' both' → logprob: -8.56736946105957

Token 744: '?
' (ID: 3901)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17831027507781982
    2. '<|end|>' → logprob: -2.0533103942871094
    3. '           ' → logprob: -4.303310394287109
    4. '<|end|>' → logprob: -4.428310394287109
    5. '\n' → logprob: -5.428310394287109
    6. '       ' → logprob: -6.928310394287109
    7. ',' → logprob: -7.803310394287109
    8. ' 
' → logprob: -7.803310394287109
    9. ')' → logprob: -8.05331039428711
    10. '            
' → logprob: -8.17831039428711

Token 745: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 746: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3946302533149719
    2. ' 
' → logprob: -1.5196301937103271
    3. '<|end|>' → logprob: -3.144630193710327
    4. ')' → logprob: -4.019630432128906
    5. '           ' → logprob: -4.644630432128906
    6. '
' → logprob: -4.769630432128906
    7. '       ' → logprob: -5.144630432128906
    8. '[' → logprob: -5.769630432128906
    9. '  
' → logprob: -5.894630432128906
    10. '#' (adapté à ' #') → logprob: -6.269630432128906

Token 747: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1691616773605347
    2. ' continue' → logprob: -1.1691616773605347
    3. '           ' → logprob: -1.2941616773605347
    4. '       ' → logprob: -3.669161796569824
    5. 'continue' → logprob: -4.544161796569824
    6. ' 
' → logprob: -4.544161796569824
    7. '
' → logprob: -4.544161796569824
    8. ' #' → logprob: -4.669161796569824
    9. ' if' → logprob: -4.919161796569824
    10. ' return' → logprob: -5.169161796569824

Token 748: ' problem' (ID: 4792)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.7842036485671997
    2. ' next' → logprob: -1.9092036485671997
    3. '#' → logprob: -2.03420352935791
    4. 'input' → logprob: -3.15920352935791
    5. ' input' → logprob: -3.28420352935791
    6. ' user' → logprob: -3.40920352935791
    7. ' rest' → logprob: -4.03420352935791
    8. 'code' → logprob: -4.15920352935791
    9. '```' → logprob: -4.40920352935791
    10. 'def' → logprob: -4.65920352935791

Token 749: ' states' (ID: 9407)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 750: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.49557414650917053
    2. ' the' → logprob: -2.2455742359161377
    3. ' we' → logprob: -2.4955742359161377
    4. '<|end|>' → logprob: -2.7455742359161377
    5. ':' → logprob: -3.3705742359161377
    6. 'that' → logprob: -4.120573997497559
    7. 'the' → logprob: -4.370573997497559
    8. ' continue' → logprob: -4.495573997497559
    9. '<|end|>' → logprob: -5.245573997497559
    10. '#' → logprob: -5.370573997497559

Token 751: ' input' (ID: 3422)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.8554257154464722
    2. 'the' → logprob: -1.1054257154464722
    3. 'edges' → logprob: -2.4804258346557617
    4. 'stre' → logprob: -3.6054258346557617
    5. ' the' → logprob: -3.8554258346557617
    6. 'input' → logprob: -3.9804258346557617
    7. 'all' → logprob: -4.355425834655762
    8. 'each' → logprob: -4.605425834655762
    9. 'they' → logprob: -4.730425834655762
    10. 'we' → logprob: -4.855425834655762

Token 752: ' crossings' (ID: 199340)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.4984164834022522
    2. ' lines' → logprob: -0.9984164834022522
    3. 'edges' → logprob: -4.623416423797607
    4. '_lines' → logprob: -5.373416423797607
    5. ' is' → logprob: -6.623416423797607
    6. 's' → logprob: -6.873416423797607
    7. '<|end|>' → logprob: -6.998416423797607
    8. 'tokens' → logprob: -7.248416423797607
    9. ' edges' → logprob: -7.373416423797607
    10. ')' → logprob: -7.498416423797607

Token 753: ' like' (ID: 1299)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.30413052439689636
    2. '<|end|>' → logprob: -1.6791305541992188
    3. ')' → logprob: -3.6791305541992188
    4. ' can' → logprob: -3.9291305541992188
    5. ' is' → logprob: -5.054130554199219
    6. 's' → logprob: -5.304130554199219
    7. '<|end|>' → logprob: -5.804130554199219
    8. ' appear' → logprob: -6.054130554199219
    9. ' only' → logprob: -6.179130554199219
    10. ' continue' → logprob: -6.429130554199219

Token 754: ' X' (ID: 2127)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.514630675315857
    2. 'A' → logprob: -1.764630675315857
    3. ' A' → logprob: -1.764630675315857
    4. 'a' → logprob: -2.2646307945251465
    5. ''' → logprob: -3.1396307945251465
    6. '"' → logprob: -3.2646307945251465
    7. ' c' → logprob: -3.3896307945251465
    8. ' '' → logprob: -3.5146307945251465
    9. 'X' → logprob: -3.6396307945251465
    10. ' X' → logprob: -3.8896307945251465

Token 755: '-Y' (ID: 47491)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.057131290435791
    2. ''-' → logprob: -1.057131290435791
    3. '-Y' → logprob: -1.807131290435791
    4. ' -' → logprob: -3.182131290435791
    5. ' and' → logprob: -3.682131290435791
    6. '[-' → logprob: -4.182131290435791
    7. '-B' → logprob: -4.682131290435791
    8. ')' → logprob: -4.932131290435791
    9. 'and' → logprob: -5.057131290435791
    10. '"-' → logprob: -5.307131290435791

Token 756: ' means' (ID: 4748)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.9426930546760559
    2. '<|end|>' → logprob: -1.4426929950714111
    3. ' and' → logprob: -2.317692995071411
    4. ' can' → logprob: -2.442692995071411
    5. ')' → logprob: -2.567692995071411
    6. '<|end|>' → logprob: -3.442692995071411
    7. ' only' → logprob: -4.31769323348999
    8. ' or' → logprob: -4.94269323348999
    9. ' is' → logprob: -5.06769323348999
    10. ',' → logprob: -5.06769323348999

Token 757: ' a' (ID: 261)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.08473838865756989
    2. ' X' → logprob: -3.9597384929656982
    3. 'the' → logprob: -4.084738254547119
    4. 'that' → logprob: -4.459738254547119
    5. 'they' → logprob: -4.709738254547119
    6. 'stre' → logprob: -5.584738254547119
    7. 'there' → logprob: -5.959738254547119
    8. 'direction' → logprob: -6.084738254547119
    9. 'A' → logprob: -6.209738254547119
    10. 'from' → logprob: -6.334738254547119

Token 758: ' crossing' (ID: 50946)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.9896788001060486
    2. ' directed' → logprob: -1.6146788597106934
    3. ' crossing' → logprob: -2.2396788597106934
    4. 'n' → logprob: -2.7396788597106934
    5. '-' → logprob: -3.1146788597106934
    6. ' cross' → logprob: -3.8646788597106934
    7. 'cross' → logprob: -4.239678859710693
    8. ' road' → logprob: -4.489678859710693
    9. ' ' → logprob: -4.614678859710693
    10. 's' → logprob: -4.614678859710693

Token 759: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 760: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.0164200067520142
    2. 'stre' → logprob: -1.2664200067520142
    3. 'two' → logprob: -2.0164198875427246
    4. ' streets' → logprob: -2.3914198875427246
    5. ' X' → logprob: -2.8914198875427246
    6. ' two' → logprob: -3.0164198875427246
    7. 'the' → logprob: -4.891419887542725
    8. 'street' → logprob: -5.641419887542725
    9. ' the' → logprob: -6.141419887542725
    10. 'a' → logprob: -6.141419887542725

Token 761: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.193068727850914
    2. '-' → logprob: -2.193068742752075
    3. 'and' → logprob: -2.818068742752075
    4. ' -' → logprob: -5.943068504333496
    5. ')' → logprob: -7.318068504333496
    6. '<|end|>' → logprob: -8.568068504333496
    7. ''-' → logprob: -8.818068504333496
    8. '-Y' → logprob: -9.068068504333496
    9. '-and' → logprob: -9.568068504333496
    10. '```' → logprob: -9.943068504333496

Token 762: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00018768629524856806
    2. ' Y' → logprob: -8.750187873840332
    3. 'X' → logprob: -10.875187873840332
    4. 'y' → logprob: -12.750187873840332
    5. '<|end|>' → logprob: -13.125187873840332
    6. 'the' → logprob: -13.500187873840332
    7. ' ' → logprob: -14.125187873840332
    8. '	Y' → logprob: -14.562687873840332
    9. '
' → logprob: -15.250187873840332
    10. 'a' → logprob: -15.437687873840332

Token 763: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 764: ' but' (ID: 889)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -1.0795447826385498
    2. '           ' → logprob: -1.8295447826385498
    3. '<|end|>' → logprob: -1.8295447826385498
    4. ' continue' → logprob: -2.20454478263855
    5. ' but' → logprob: -2.32954478263855
    6. ' and' → logprob: -3.70454478263855
    7. '<|end|>' → logprob: -3.95454478263855
    8. '       ' → logprob: -4.079545021057129
    9. '#' → logprob: -4.329545021057129
    10. 'continue' → logprob: -4.329545021057129

Token 765: ' order' (ID: 2569)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.057923436164856
    2. ' not' → logprob: -1.807923436164856
    3. '#' → logprob: -2.0579233169555664
    4. 'the' → logprob: -2.4329233169555664
    5. ' we' → logprob: -2.9329233169555664
    6. ' here' → logprob: -3.0579233169555664
    7. 'we' → logprob: -3.4329233169555664
    8. ' no' → logprob: -3.8079233169555664
    9. '       ' → logprob: -4.307923316955566
    10. 'not' → logprob: -4.307923316955566

Token 766: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 767: ' important' (ID: 3378)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6815590858459473
    2. 'important' → logprob: -1.4315590858459473
    3. ' not' → logprob: -2.6815590858459473
    4. 'sign' → logprob: -3.4315590858459473
    5. 'irre' → logprob: -3.5565590858459473
    6. ' significant' → logprob: -3.6815590858459473
    7. 're' → logprob: -3.8065590858459473
    8. 'ignored' → logprob: -3.9315590858459473
    9. ' irrelevant' → logprob: -4.056559085845947
    10. ' important' → logprob: -4.806559085845947

Token 768: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 769: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 770: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017757466062903404
    2. ' for' → logprob: -6.142757415771484
    3. '       ' → logprob: -6.142757415771484
    4. '
' → logprob: -6.267757415771484
    5. ' return' → logprob: -6.267757415771484
    6. '<|end|>' → logprob: -6.392757415771484
    7. '#' (adapté à ' #') → logprob: -6.767757415771484
    8. ' edges' → logprob: -7.267757415771484
    9. '   ' → logprob: -7.330257415771484
    10. ',' → logprob: -7.705257415771484

Token 771: ' Build' (ID: 10885)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19849693775177002
    2. ' for' → logprob: -3.3234968185424805
    3. 'return' → logprob: -3.5734968185424805
    4. '#' → logprob: -3.6984968185424805
    5. 'for' → logprob: -3.6984968185424805
    6. ' return' → logprob: -3.6984968185424805
    7. ' lines' → logprob: -4.8234968185424805
    8. 'input' → logprob: -4.9484968185424805
    9. '   ' → logprob: -5.0734968185424805
    10. ' input' → logprob: -5.3234968185424805

Token 772: ' direction' (ID: 9262)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6242915391921997
    2. 'from' → logprob: -1.8742915391921997
    3. '   ' → logprob: -2.12429141998291
    4. 'dir' → logprob: -2.24929141998291
    5. 'in' → logprob: -2.37429141998291
    6. 'direction' → logprob: -2.74929141998291
    7. 'dire' → logprob: -2.74929141998291
    8. 'incoming' → logprob: -2.87429141998291
    9. 'adj' → logprob: -3.37429141998291
    10. 'edges' → logprob: -3.62429141998291

Token 773: ' edges' (ID: 22569)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5978623032569885
    2. '_edges' → logprob: -1.4728622436523438
    3. '_map' → logprob: -1.7228622436523438
    4. '_graph' → logprob: -4.222862243652344
    5. 's' → logprob: -4.472862243652344
    6. ' =' → logprob: -5.722862243652344
    7. 'ality' → logprob: -5.972862243652344
    8. '_from' → logprob: -6.597862243652344
    9. '_edge' → logprob: -6.972862243652344
    10. '   ' → logprob: -6.972862243652344

Token 774: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0107320547103882
    2. '           ' → logprob: -1.6357320547103882
    3. '
' → logprob: -1.8857320547103882
    4. '<|end|>' → logprob: -1.8857320547103882
    5. '<|end|>' → logprob: -2.7607321739196777
    6. ':' → logprob: -3.8857321739196777
    7. ' edges' → logprob: -4.510732173919678
    8. '=' → logprob: -4.885732173919678
    9. ',' → logprob: -5.385732173919678
    10. 'edges' → logprob: -5.760732173919678

Token 775: ' input' (ID: 3422)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.4679027497768402
    2. 'c' → logprob: -1.2179027795791626
    3. 'input' → logprob: -3.842902660369873
    4. 'the' → logprob: -4.342902660369873
    5. 'a' → logprob: -4.467902660369873
    6. 'graph' → logprob: -5.092902660369873
    7. 'for' → logprob: -5.967902660369873
    8. 'stre' → logprob: -6.092902660369873
    9. '   ' → logprob: -6.217902660369873
    10. '```' → logprob: -6.467902660369873

Token 776: ' crossings' (ID: 199340)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.4955192804336548
    2. '           ' → logprob: -1.8705192804336548
    3. 'dire' → logprob: -1.8705192804336548
    4. ' directed' → logprob: -2.1205191612243652
    5. ' direction' → logprob: -2.2455191612243652
    6. 'edges' → logprob: -2.6205191612243652
    7. ' edges' → logprob: -2.6205191612243652
    8. ' directions' → logprob: -3.3705191612243652
    9. '
' → logprob: -4.370519161224365
    10. 'dir' → logprob: -4.495519161224365

Token 777: ' as' (ID: 472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3291585147380829
    2. 'direction' → logprob: -2.0791585445404053
    3. 'dire' → logprob: -2.8291585445404053
    4. ' directed' → logprob: -4.079158306121826
    5. ' direction' → logprob: -4.079158306121826
    6. 'edges' → logprob: -4.204158306121826
    7. ' edges' → logprob: -4.579158306121826
    8. '
' → logprob: -4.579158306121826
    9. ' directions' → logprob: -4.954158306121826
    10. 'direct' → logprob: -5.829158306121826

Token 778: ' given' (ID: 4335)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.5547878742218018
    2. '[]' → logprob: -1.0547878742218018
    3. 'set' → logprob: -3.1797878742218018
    4. 'dir' → logprob: -4.679787635803223
    5. 'dict' → logprob: -5.054787635803223
    6. 'direction' → logprob: -5.054787635803223
    7. 'a' → logprob: -5.554787635803223
    8. '{}' → logprob: -5.929787635803223
    9. 'dire' → logprob: -6.429787635803223
    10. '{' → logprob: -6.679787635803223

Token 779: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.039790391921997
    2. 'direction' → logprob: -1.789790391921997
    3. ' directed' → logprob: -1.914790391921997
    4. ' direction' → logprob: -2.039790391921997
    5. '
' → logprob: -2.289790391921997
    6. ' edges' → logprob: -3.539790391921997
    7. 'edges' → logprob: -3.914790391921997
    8. 'dire' → logprob: -4.289790153503418
    9. ' directions' → logprob: -4.414790153503418
    10. '            
' → logprob: -4.914790153503418

Token 780: 'X' (ID: 55)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direct' → logprob: -1.3617393970489502
    2. 'dire' → logprob: -1.3617393970489502
    3. 'dir' → logprob: -1.6117393970489502
    4. 'edges' → logprob: -2.73673939704895
    5. 'direction' → logprob: -2.73673939704895
    6. ')' → logprob: -3.36173939704895
    7. 'default' → logprob: -3.48673939704895
    8. 'a' → logprob: -3.98673939704895
    9. 'c' → logprob: -4.361739158630371
    10. ' directed' → logprob: -4.861739158630371

Token 781: ' ->' (ID: 2747)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5349935293197632
    2. ')' → logprob: -2.2849936485290527
    3. '[-' → logprob: -2.6599936485290527
    4. ''-' → logprob: -2.9099936485290527
    5. '[' → logprob: -3.1599936485290527
    6. ')-' → logprob: -3.2849936485290527
    7. ',' → logprob: -3.9099936485290527
    8. '<|end|>' → logprob: -4.159993648529053
    9. '   ' → logprob: -4.534993648529053
    10. '-)' → logprob: -5.159993648529053

Token 782: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0540890134871006
    2. 'A' → logprob: -4.429089069366455
    3. 'b' → logprob: -5.179089069366455
    4. 'B' → logprob: -5.179089069366455
    5. 'stre' → logprob: -5.179089069366455
    6. 'y' → logprob: -5.429089069366455
    7. ' Y' → logprob: -5.429089069366455
    8. 'a' → logprob: -5.929089069366455
    9. ')' → logprob: -6.179089069366455
    10. 'X' → logprob: -6.429089069366455

Token 783: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2939980030059814
    2. ' =' → logprob: -1.2939980030059814
    3. ')
' → logprob: -2.0439980030059814
    4. '):
' → logprob: -2.2939980030059814
    5. '           ' → logprob: -2.6689980030059814
    6. 's' → logprob: -3.2939980030059814
    7. '):' → logprob: -3.7939980030059814
    8. ',' → logprob: -4.043997764587402
    9. '
' → logprob: -4.168997764587402
    10. 'edges' → logprob: -4.543997764587402

Token 784: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4476779103279114
    2. ' edges' → logprob: -2.1976778507232666
    3. 'edges' → logprob: -2.4476778507232666
    4. 'direction' → logprob: -3.1976778507232666
    5. '
' → logprob: -3.3226778507232666
    6. ' direction' → logprob: -3.5726778507232666
    7. ' directions' → logprob: -3.9476778507232666
    8. '       ' → logprob: -4.822678089141846
    9. '<|end|>' → logprob: -5.197678089141846
    10. '            
' → logprob: -5.447678089141846

Token 785: ' #' (ID: 1069)
  Prédit: ' direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' direction' → logprob: -1.6157912015914917
    2. 'direction' → logprob: -1.7407912015914917
    3. ' directed' → logprob: -1.9907912015914917
    4. '           ' → logprob: -1.9907912015914917
    5. ' edges' → logprob: -2.1157913208007812
    6. 'edges' → logprob: -2.8657913208007812
    7. ' directions' → logprob: -3.1157913208007812
    8. 'dire' → logprob: -3.2407913208007812
    9. '
' → logprob: -3.7407913208007812
    10. '       ' → logprob: -4.240791320800781

Token 786: ' Build' (ID: 10885)
  Prédit: ' directed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directed' → logprob: -1.3821799755096436
    2. 'direction' → logprob: -1.5071799755096436
    3. ' direction' → logprob: -1.7571799755096436
    4. '           ' → logprob: -2.5071799755096436
    5. 'dire' → logprob: -2.5071799755096436
    6. ' edges' → logprob: -3.2571799755096436
    7. 'edges' → logprob: -3.3821799755096436
    8. ' directions' → logprob: -3.3821799755096436
    9. ' dir' → logprob: -4.007180213928223
    10. 'dir' → logprob: -4.257180213928223

Token 787: ' directed' (ID: 23699)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.24985271692276
    2. 'dir' → logprob: -2.6248526573181152
    3. ' direction' → logprob: -2.8748526573181152
    4. 'direct' → logprob: -3.4998526573181152
    5. 'dire' → logprob: -3.6248526573181152
    6. 'edges' → logprob: -4.499852657318115
    7. ' directed' → logprob: -4.624852657318115
    8. ' dir' → logprob: -5.124852657318115
    9. 'from' → logprob: -5.749852657318115
    10. '   ' → logprob: -6.624852657318115

Token 788: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.07326113432645798
    2. 'edges' → logprob: -2.698261022567749
    3. ' edges' → logprob: -6.573261260986328
    4. '_cross' → logprob: -7.448261260986328
    5. 'graph' → logprob: -7.698261260986328
    6. '_graph' → logprob: -8.073261260986328
    7. '_edge' → logprob: -8.823261260986328
    8. 'cross' → logprob: -9.448261260986328
    9. ' graph' → logprob: -9.573261260986328
    10. '_' → logprob: -9.823261260986328

Token 789: ' dict' (ID: 11878)
  Prédit: ' directed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directed' → logprob: -0.7125817537307739
    2. '           ' → logprob: -1.712581753730774
    3. 'direction' → logprob: -2.2125816345214844
    4. '
' → logprob: -2.4625816345214844
    5. 'dire' → logprob: -3.4625816345214844
    6. 'edges' → logprob: -3.8375816345214844
    7. 'direct' → logprob: -4.337581634521484
    8. ' direction' → logprob: -4.462581634521484
    9. 'from' → logprob: -4.462581634521484
    10. 'dir' → logprob: -4.587581634521484

Token 790: ' from' (ID: 591)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.0080220699310303
    2. 'dire' → logprob: -1.1330220699310303
    3. 'direct' → logprob: -1.8830220699310303
    4. ' directed' → logprob: -2.7580220699310303
    5. '           ' → logprob: -3.2580220699310303
    6. 'dir' → logprob: -3.5080220699310303
    7. 'edges' → logprob: -4.258022308349609
    8. 'from' → logprob: -5.383022308349609
    9. ' direction' → logprob: -5.883022308349609
    10. ' directions' → logprob: -7.008022308349609

Token 791: ' input' (ID: 3422)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.2725985646247864
    2. 'c' → logprob: -1.8975985050201416
    3. '{}' → logprob: -3.6475985050201416
    4. ' crossings' → logprob: -4.022598743438721
    5. 'collections' → logprob: -4.397598743438721
    6. 'input' → logprob: -4.522598743438721
    7. '[]' → logprob: -4.647598743438721
    8. 'default' → logprob: -6.147598743438721
    9. '{' → logprob: -6.272598743438721
    10. 'stre' → logprob: -6.772598743438721

Token 792: ' lines' (ID: 8698)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direct' → logprob: -1.056899905204773
    2. 'dire' → logprob: -1.181899905204773
    3. 'direction' → logprob: -1.806899905204773
    4. '           ' → logprob: -3.1819000244140625
    5. ' directed' → logprob: -3.1819000244140625
    6. 'edges' → logprob: -3.1819000244140625
    7. 'dir' → logprob: -3.6819000244140625
    8. 'if' → logprob: -3.9319000244140625
    9. ' if' → logprob: -6.1819000244140625
    10. 'from' → logprob: -6.3069000244140625

Token 793: '
' (ID: 198)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.8942617177963257
    2. 'dire' → logprob: -1.6442617177963257
    3. '           ' → logprob: -2.1442618370056152
    4. ' directed' → logprob: -2.1442618370056152
    5. 'direct' → logprob: -2.2692618370056152
    6. 'dir' → logprob: -3.7692618370056152
    7. 'edges' → logprob: -4.144261837005615
    8. ' direction' → logprob: -4.644261837005615
    9. ' directions' → logprob: -5.644261837005615
    10. ' dir' → logprob: -6.519261837005615

Token 794: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4053114354610443
    2. ' directed' → logprob: -1.7803114652633667
    3. 'direction' → logprob: -2.905311346054077
    4. 'direct' → logprob: -3.405311346054077
    5. 'dire' → logprob: -3.655311346054077
    6. '
' → logprob: -4.030311584472656
    7. 'dir' → logprob: -4.530311584472656
    8. '       ' → logprob: -5.155311584472656
    9. ' direction' → logprob: -5.780311584472656
    10. ' dir' → logprob: -5.780311584472656

Token 795: ' dir' (ID: 5609)
  Prédit: ' directed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directed' → logprob: -0.5024063587188721
    2. 'direction' → logprob: -2.127406358718872
    3. 'direct' → logprob: -2.502406358718872
    4. 'dire' → logprob: -2.877406358718872
    5. '           ' → logprob: -3.002406358718872
    6. ' direction' → logprob: -3.127406358718872
    7. ' directions' → logprob: -4.377406120300293
    8. ' dir' → logprob: -4.627406120300293
    9. 'dir' (adapté à ' dir') → logprob: -4.627406120300293
    10. ' direct' → logprob: -5.752406120300293

Token 796: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00036502102739177644
    2. 's' → logprob: -8.875365257263184
    3. 'edges' → logprob: -9.625365257263184
    4. '_' → logprob: -9.625365257263184
    5. '_lines' → logprob: -10.625365257263184
    6. '_e' → logprob: -11.375365257263184
    7. 'Edges' → logprob: -11.625365257263184
    8. 'ections' → logprob: -11.750365257263184
    9. '_cross' → logprob: -12.125365257263184
    10. 'ect' → logprob: -12.375365257263184

Token 797: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31330057978630066
    2. ' =' → logprob: -1.313300609588623
    3. '.setdefault' → logprob: -10.188300132751465
    4. '[' → logprob: -14.438300132751465
    5. 's' → logprob: -15.938300132751465
    6. ':' → logprob: -16.31330108642578
    7. ' ' → logprob: -16.56330108642578
    8. 'if' → logprob: -16.81330108642578
    9. '={}' → logprob: -16.81330108642578
    10. '={' → logprob: -16.93830108642578

Token 798: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.249507337808609
    2. 'dict' → logprob: -1.9995073080062866
    3. '{' → logprob: -2.874507427215576
    4. 'set' → logprob: -3.624507427215576
    5. 'default' → logprob: -6.749507427215576
    6. '[]' → logprob: -7.749507427215576
    7. ' dict' → logprob: -8.374506950378418
    8. ' {}' → logprob: -8.374506950378418
    9. '{
' → logprob: -9.374506950378418
    10. '[' → logprob: -10.624506950378418

Token 799: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6621450781822205
    2. '()
' → logprob: -1.0371451377868652
    3. ' =' → logprob: -2.1621451377868652
    4. '           ' → logprob: -4.537145137786865
    5. '=' → logprob: -6.162145137786865
    6. 'from' → logprob: -7.037145137786865
    7. '()

' → logprob: -8.162144660949707
    8. '       ' → logprob: -8.662144660949707
    9. ':' → logprob: -9.162144660949707
    10. '.setdefault' → logprob: -9.162144660949707

Token 800: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9324273467063904
    2. ' for' → logprob: -1.3074274063110352
    3. '           ' → logprob: -1.3074274063110352
    4. 'for' → logprob: -3.307427406311035
    5. ' =' → logprob: -3.807427406311035
    6. '<|end|>' → logprob: -6.557427406311035
    7. '   ' → logprob: -6.682427406311035
    8. ' defaultdict' → logprob: -7.307427406311035
    9. 'from' → logprob: -7.432427406311035
    10. 'def' → logprob: -7.557427406311035

Token 801: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7775670886039734
    2. '           ' → logprob: -1.5275671482086182
    3. '       ' → logprob: -1.7775671482086182
    4. 'for' (adapté à ' for') → logprob: -1.9025671482086182
    5. '<|end|>' → logprob: -6.152566909790039
    6. '...' → logprob: -6.777566909790039
    7. ' if' → logprob: -7.277566909790039
    8. 'if' → logprob: -8.652566909790039
    9. '<|end|>' → logprob: -8.902566909790039
    10. 'def' → logprob: -9.152566909790039

Token 802: ' c' (ID: 274)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.798007071018219
    2. 'c' → logprob: -0.923007071018219
    3. ' s' → logprob: -2.798007011413574
    4. ' c' → logprob: -3.298007011413574
    5. 'line' → logprob: -3.673007011413574
    6. ' line' → logprob: -4.298007011413574
    7. 'st' → logprob: -5.298007011413574
    8. 'x' → logprob: -5.548007011413574
    9. 'edge' → logprob: -6.423007011413574
    10. 'e' → logprob: -7.048007011413574

Token 803: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16344672441482544
    2. ' in' → logprob: -1.9134466648101807
    3. 's' → logprob: -6.16344690322876
    4. 'c' → logprob: -8.788446426391602
    5. 'e' → logprob: -8.788446426391602
    6. '=' → logprob: -9.038446426391602
    7. 'n' → logprob: -9.288446426391602
    8. 'a' → logprob: -9.413446426391602
    9. 'i' → logprob: -9.538446426391602
    10. ' ' → logprob: -9.663446426391602

Token 804: ' crossings' (ID: 199340)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.03881845623254776
    2. ' crossings' → logprob: -3.288818359375
    3. 'stre' → logprob: -7.663818359375
    4. '[' → logprob: -9.038818359375
    5. 'c' → logprob: -9.788818359375
    6. '[c' → logprob: -10.288818359375
    7. 'connections' → logprob: -11.038818359375
    8. 'range' → logprob: -11.413818359375
    9. 'graph' → logprob: -11.538818359375
    10. 'corn' → logprob: -11.538818359375

Token 805: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7866632342338562
    2. ':
' → logprob: -1.036663293838501
    3. '.split' → logprob: -2.911663293838501
    4. '           ' → logprob: -3.036663293838501
    5. ' in' → logprob: -4.036663055419922
    6. '=' → logprob: -4.161663055419922
    7. ' =' → logprob: -4.161663055419922
    8. '):
' → logprob: -4.286663055419922
    9. '):' → logprob: -5.536663055419922
    10. 'in' → logprob: -5.661663055419922

Token 806: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14858736097812653
    2. '       ' → logprob: -2.523587465286255
    3. ' =' → logprob: -3.773587465286255
    4. '=' → logprob: -4.148587226867676
    5. ':' → logprob: -4.523587226867676
    6. '               ' → logprob: -5.773587226867676
    7. '   ' → logprob: -6.898587226867676
    8. 'tokens' → logprob: -7.273587226867676
    9. ',' → logprob: -7.398587226867676
    10. 'a' → logprob: -8.023587226867676

Token 807: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.8012602925300598
    2. 'a' → logprob: -0.9262602925300598
    3. ' a' → logprob: -2.801260232925415
    4. '               ' → logprob: -3.176260232925415
    5. ' x' → logprob: -3.301260232925415
    6. '   ' → logprob: -5.801260471343994
    7. 'from' → logprob: -5.926260471343994
    8. 'X' → logprob: -6.176260471343994
    9. ' parts' → logprob: -6.301260471343994
    10. 's' → logprob: -6.301260471343994

Token 808: ',y' (ID: 16103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9876452088356018
    2. ' =' → logprob: -1.487645149230957
    3. ',' → logprob: -1.737645149230957
    4. 's' → logprob: -1.987645149230957
    5. '_,' → logprob: -3.862645149230957
    6. 'x' → logprob: -3.987645149230957
    7. 'a' → logprob: -4.362645149230957
    8. '_' → logprob: -4.737645149230957
    9. '_parts' → logprob: -4.737645149230957
    10. '_split' → logprob: -5.737645149230957

Token 809: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741942286491394
    2. '=' → logprob: -0.9741942286491394
    3. '=c' → logprob: -9.099194526672363
    4. 'split' → logprob: -13.974194526672363
    5. '=line' → logprob: -13.974194526672363
    6. ',c' → logprob: -14.099194526672363
    7. 'c' → logprob: -14.599194526672363
    8. ' ' → logprob: -14.724194526672363
    9. '=cut' → logprob: -14.724194526672363
    10. '=x' → logprob: -15.349194526672363

Token 810: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011047814972698689
    2. ' c' → logprob: -4.511047840118408
    3. '[c' → logprob: -18.13604736328125
    4. '   ' → logprob: -18.26104736328125
    5. '(c' → logprob: -18.76104736328125
    6. '	c' → logprob: -19.13604736328125
    7. 'map' → logprob: -19.38604736328125
    8. 'x' → logprob: -19.38604736328125
    9. '[' → logprob: -20.13604736328125
    10. ')c' → logprob: -20.26104736328125

Token 811: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.6721015572547913
    2. '=' → logprob: -0.9221015572547913
    3. '.' → logprob: -2.5471014976501465
    4. ' =' → logprob: -4.7971014976501465
    5. ' .' → logprob: -5.7971014976501465
    6. 'split' → logprob: -7.5471014976501465
    7. '=c' → logprob: -7.5471014976501465
    8. '.c' → logprob: -8.422101974487305
    9. '.strip' → logprob: -8.547101974487305
    10. 's' → logprob: -8.672101974487305

Token 812: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.0006050990778021514
    2. ''-' → logprob: -7.62560510635376
    3. '('-',' → logprob: -9.375604629516602
    4. '("-' → logprob: -10.750604629516602
    5. '(' → logprob: -12.125604629516602
    6. '('' → logprob: -13.125604629516602
    7. '-' → logprob: -13.375604629516602
    8. '[' → logprob: -14.250604629516602
    9. '"-' → logprob: -14.875604629516602
    10. '('.')' → logprob: -15.375604629516602

Token 813: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6097227931022644
    2. '')
' → logprob: -0.8597227931022644
    3. ')
' → logprob: -3.609722852706909
    4. ')' → logprob: -5.10972261428833
    5. '')
' → logprob: -10.109723091125488
    6. '')[' → logprob: -10.359723091125488
    7. ''' → logprob: -11.484723091125488
    8. '")
' → logprob: -11.609723091125488
    9. '1' → logprob: -11.859723091125488
    10. '")' → logprob: -12.234723091125488

Token 814: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.420598219847307e-05
    2. '           ' → logprob: -10.3750638961792
    3. '<|end|>' → logprob: -11.3750638961792
    4. ' if' → logprob: -12.2500638961792
    5. '                   ' → logprob: -12.5000638961792
    6. '       ' → logprob: -12.6250638961792
    7. '   ' → logprob: -13.7500638961792
    8. '              ' → logprob: -13.8750638961792
    9. '```' → logprob: -14.0000638961792
    10. '
' → logprob: -14.1250638961792

Token 815: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7515155673027039
    2. ' if' → logprob: -0.7515155673027039
    3. 'if' (adapté à ' if') → logprob: -3.1265156269073486
    4. ' for' → logprob: -4.8765153884887695
    5. 'for' → logprob: -5.8765153884887695
    6. '           ' → logprob: -6.5015153884887695
    7. '   ' → logprob: -7.7515153884887695
    8. 'dir' → logprob: -9.00151538848877
    9. '                   ' → logprob: -9.62651538848877
    10. '       ' → logprob: -9.87651538848877

Token 816: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002354832977289334
    2. ' x' → logprob: -8.375235557556152
    3. 'y' → logprob: -13.500235557556152
    4. '   ' → logprob: -13.750235557556152
    5. '(x' → logprob: -14.000235557556152
    6. 'dir' → logprob: -14.500235557556152
    7. '           ' → logprob: -15.375235557556152
    8. 'not' → logprob: -15.375235557556152
    9. ' ' → logprob: -15.750235557556152
    10. '	x' → logprob: -16.250234603881836

Token 817: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11370674520730972
    2. 'not' → logprob: -2.2387068271636963
    3. ' in' → logprob: -7.738706588745117
    4. 'in' → logprob: -8.113706588745117
    5. ')' → logprob: -9.238706588745117
    6. ']' → logprob: -10.988706588745117
    7. 'n't' → logprob: -12.488706588745117
    8. '[' → logprob: -12.738706588745117
    9. '!=' → logprob: -12.863706588745117
    10. 'y' → logprob: -13.113706588745117

Token 818: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5770469307899475
    2. 'in' → logprob: -0.8270469307899475
    3. 'dir' → logprob: -6.827046871185303
    4. 'not' → logprob: -11.702047348022461
    5. ' dir' → logprob: -12.452047348022461
    6. ' not' → logprob: -13.077047348022461
    7. '           ' → logprob: -13.202047348022461
    8. ' ' → logprob: -13.827047348022461
    9. '[' → logprob: -14.077047348022461
    10. 'to' → logprob: -14.077047348022461

Token 819: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -6.704273118884885e-07
    2. ' dir' → logprob: -14.250000953674316
    3. '	dir' → logprob: -19.625
    4. 'dict' → logprob: -20.125
    5. '(dir' → logprob: -20.25
    6. 'Dir' → logprob: -20.75
    7. '   ' → logprob: -20.75
    8. '           ' → logprob: -20.75
    9. '_dir' → logprob: -21.25
    10. 'graph' → logprob: -21.375

Token 820: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0006320207612589002
    2. 'edges' → logprob: -7.375631809234619
    3. 'irected' → logprob: -12.625632286071777
    4. ' edges' → logprob: -14.500632286071777
    5. 'Edges' → logprob: -14.750632286071777
    6. 'irections' → logprob: -14.875632286071777
    7. 'ict' → logprob: -16.37563133239746
    8. '_ed' → logprob: -16.50063133239746
    9. 'irectional' → logprob: -16.62563133239746
    10. '.edges' → logprob: -16.62563133239746

Token 821: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06258609145879745
    2. ':' → logprob: -2.8125860691070557
    3. '):
' → logprob: -7.812586307525635
    4. '                   ' → logprob: -8.937585830688477
    5. ']:
' → logprob: -10.937585830688477
    6. '               ' → logprob: -11.312585830688477
    7. '           ' → logprob: -11.812585830688477
    8. ':

' → logprob: -11.812585830688477
    9. '.keys' → logprob: -12.062585830688477
    10. ')' → logprob: -12.062585830688477

Token 822: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07629501074552536
    2. 'dir' → logprob: -3.4512948989868164
    3. '               ' → logprob: -3.5762948989868164
    4. ':' → logprob: -5.951294898986816
    5. '           ' → logprob: -5.951294898986816
    6. ':
' → logprob: -5.951294898986816
    7. ' dir' → logprob: -6.576294898986816
    8. '                       ' → logprob: -7.201294898986816
    9. '(dir' → logprob: -7.326294898986816
    10. '```' → logprob: -7.576294898986816

Token 823: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' (adapté à ' dir') → logprob: -0.0067156096920371056
    2. ' dir' → logprob: -5.006715774536133
    3. '	dir' → logprob: -15.631715774536133
    4. '   ' → logprob: -17.506715774536133
    5. '(dir' → logprob: -17.756715774536133
    6. 'dirs' → logprob: -19.006715774536133
    7. '_dir' → logprob: -19.131715774536133
    8. 'Dir' → logprob: -19.256715774536133
    9. '-dir' → logprob: -19.756715774536133
    10. '                   ' → logprob: -20.131715774536133

Token 824: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -6.704273118884885e-07
    2. 'edges' → logprob: -14.375000953674316
    3. '_edge' → logprob: -18.25
    4. '_ed' → logprob: -18.625
    5. '_entries' → logprob: -18.875
    6. 'Edges' → logprob: -19.125
    7. '```' → logprob: -19.375
    8. '_' → logprob: -19.625
    9. 's' → logprob: -20.375
    10. '_errors' → logprob: -20.625

Token 825: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: 0.0
    2. 'x' → logprob: -18.25
    3. '{x' → logprob: -18.5
    4. '=' → logprob: -19.0
    5. '.setdefault' → logprob: -19.125
    6. '[' → logprob: -19.375
    7. ' =' → logprob: -19.875
    8. '
' → logprob: -20.0
    9. '[c' → logprob: -20.75
    10. '   ' → logprob: -20.875

Token 826: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009889603592455387
    2. ']=' → logprob: -4.634889602661133
    3. ']={' → logprob: -9.134889602661133
    4. '=' → logprob: -10.884889602661133
    5. ' ]' → logprob: -13.259889602661133
    6. ' =' → logprob: -13.259889602661133
    7. ']='' → logprob: -14.259889602661133
    8. ']:
' → logprob: -15.259889602661133
    9. ']+=' → logprob: -15.259889602661133
    10. '<|end|>' → logprob: -15.259889602661133

Token 827: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -4.008129963040119e-06
    2. '[]' → logprob: -13.000003814697266
    3. ' set' → logprob: -13.875003814697266
    4. '{' → logprob: -14.375003814697266
    5. '[]
' → logprob: -16.250003814697266
    6. '{}' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.000003814697266
    8. '	set' → logprob: -18.125003814697266
    9. '=set' → logprob: -18.250003814697266
    10. '[' → logprob: -19.750003814697266

Token 828: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07894928008317947
    2. '()
' → logprob: -2.578949213027954
    3. '()
' → logprob: -9.953948974609375
    4. '()

' → logprob: -11.828948974609375
    5. '()\' → logprob: -13.203948974609375
    6. '()</' → logprob: -13.953948974609375
    7. '()`' → logprob: -14.078948974609375
    8. '();' → logprob: -14.828948974609375
    9. '())' → logprob: -15.078948974609375
    10. '()]' → logprob: -16.203948974609375

Token 829: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05405467748641968
    2. '               ' → logprob: -3.0540547370910645
    3. ' y' → logprob: -6.4290547370910645
    4. '           ' → logprob: -6.6790547370910645
    5. '       ' → logprob: -6.9290547370910645
    6. ' x' → logprob: -7.6790547370910645
    7. '   ' → logprob: -7.8040547370910645
    8. '                       ' → logprob: -9.054054260253906
    9. '```' → logprob: -9.179054260253906
    10. '(x' → logprob: -9.429054260253906

Token 830: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' (adapté à ' dir') → logprob: -0.00033593899570405483
    2. ' dir' → logprob: -8.000335693359375
    3. '                   ' → logprob: -15.500335693359375
    4. '	dir' → logprob: -16.250335693359375
    5. '               ' → logprob: -16.875335693359375
    6. '   ' → logprob: -17.000335693359375
    7. '```' → logprob: -17.500335693359375
    8. '(dir' → logprob: -18.000335693359375
    9. '           ' → logprob: -18.750335693359375
    10. 'x' → logprob: -19.000335693359375

Token 831: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -5.919942486798391e-05
    2. '[y' → logprob: -11.125059127807617
    3. 'edges' → logprob: -11.625059127807617
    4. '_entries' → logprob: -11.625059127807617
    5. 'Edges' → logprob: -12.625059127807617
    6. 's' → logprob: -12.875059127807617
    7. 'es' → logprob: -13.000059127807617
    8. '[x' → logprob: -13.250059127807617
    9. 'y' → logprob: -13.375059127807617
    10. 'er' → logprob: -13.500059127807617

Token 832: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00012106612848583609
    2. '[y' → logprob: -9.125121116638184
    3. 'x' → logprob: -11.375121116638184
    4. '.setdefault' → logprob: -15.125121116638184
    5. '(x' → logprob: -16.000120162963867
    6. '[' → logprob: -16.375120162963867
    7. '{x' → logprob: -16.875120162963867
    8. '[c' → logprob: -18.000120162963867
    9. '```' → logprob: -18.125120162963867
    10. '[t' → logprob: -19.625120162963867

Token 833: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.816093228830141e-06
    2. ']' → logprob: -13.37500286102295
    3. '.add' → logprob: -14.87500286102295
    4. '   ' → logprob: -15.62500286102295
    5. '}.' → logprob: -15.87500286102295
    6. ').' → logprob: -16.000001907348633
    7. ''].' → logprob: -16.000001907348633
    8. ' ].' → logprob: -16.375001907348633
    9. 'add' → logprob: -16.875001907348633
    10. '           ' → logprob: -16.875001907348633

Token 834: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.320199877838604e-07
    2. ' add' → logprob: -14.75
    3. 'append' → logprob: -16.875
    4. '.add' → logprob: -18.5
    5. ')add' → logprob: -20.125
    6. 'adde' → logprob: -20.5
    7. '_add' → logprob: -21.0
    8. ' ' → logprob: -21.125
    9. '	add' → logprob: -21.25
    10. 'update' → logprob: -22.125

Token 835: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004082197323441505
    2. '(y' → logprob: -5.504082202911377
    3. ' y' → logprob: -12.504081726074219
    4. '	y' → logprob: -17.00408172607422
    5. '[y' → logprob: -18.00408172607422
    6. 'b' → logprob: -18.75408172607422
    7. ''y' → logprob: -19.25408172607422
    8. '   ' → logprob: -20.00408172607422
    9. ',y' → logprob: -20.12908172607422
    10. ')y' → logprob: -20.12908172607422

Token 836: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.6934557505883276e-05
    2. '           ' → logprob: -10.125057220458984
    3. ')
' → logprob: -11.125057220458984
    4. '               ' → logprob: -13.625057220458984
    5. ' )' → logprob: -14.875057220458984
    6. '<|end|>' → logprob: -16.000057220458984
    7. '       ' → logprob: -16.250057220458984
    8. ')}' → logprob: -16.500057220458984
    9. ')return' → logprob: -16.500057220458984
    10. ')#' → logprob: -16.875057220458984

Token 837: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005791273433715105
    2. '       ' → logprob: -7.750579357147217
    3. '
' → logprob: -9.375578880310059
    4. '<|end|>' → logprob: -10.625578880310059
    5. '            
' → logprob: -11.500578880310059
    6. ')' → logprob: -11.750578880310059
    7. '               ' → logprob: -11.875578880310059
    8. '   ' → logprob: -12.875578880310059
    9. '          ' → logprob: -12.875578880310059
    10. '        
' → logprob: -13.125578880310059

Token 838: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004472348664421588
    2. '       ' → logprob: -8.500447273254395
    3. '   ' → logprob: -9.000447273254395
    4. 'for' → logprob: -9.750447273254395
    5. ' for' → logprob: -10.125447273254395
    6. '
' → logprob: -11.500447273254395
    7. '#' (adapté à ' #') → logprob: -12.125447273254395
    8. '               ' → logprob: -12.875447273254395
    9. '          ' → logprob: -13.875447273254395
    10. 'def' → logprob: -14.750447273254395

Token 839: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05456920713186264
    2. '   ' → logprob: -3.5545692443847656
    3. ' if' → logprob: -5.179569244384766
    4. 'for' → logprob: -5.304569244384766
    5. ' for' → logprob: -5.304569244384766
    6. '       ' → logprob: -5.429569244384766
    7. 'if' → logprob: -5.679569244384766
    8. '
' → logprob: -7.304569244384766
    9. 'return' → logprob: -8.554569244384766
    10. ' return' → logprob: -9.554569244384766

Token 840: ' condition' (ID: 7060)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8428636193275452
    2. 'for' → logprob: -0.8428636193275452
    3. '           ' → logprob: -2.3428635597229004
    4. '   ' → logprob: -3.2178635597229004
    5. ' any' → logprob: -6.2178635597229
    6. 'any' → logprob: -8.092864036560059
    7. '       ' → logprob: -8.342864036560059
    8. '
' → logprob: -9.592864036560059
    9. ' not' → logprob: -10.092864036560059
    10. ' ' → logprob: -10.092864036560059

Token 841: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001226062304340303
    2. '   ' → logprob: -7.75122594833374
    3. ' for' → logprob: -8.751226425170898
    4. '       ' → logprob: -8.876226425170898
    5. '
' → logprob: -9.251226425170898
    6. ' D' → logprob: -9.251226425170898
    7. '            ' → logprob: -10.001226425170898
    8. '    ' → logprob: -10.001226425170898
    9. ' =' → logprob: -10.626226425170898
    10. '            
' → logprob: -10.626226425170898

Token 842: '2' (ID: 17)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.15820543467998505
    2. 'A' → logprob: -3.033205509185791
    3. ' B' → logprob: -3.033205509185791
    4. 'D' → logprob: -4.033205509185791
    5. ')' → logprob: -4.658205509185791
    6. ' A' → logprob: -5.033205509185791
    7. '(B' → logprob: -5.783205509185791
    8. '           ' → logprob: -6.033205509185791
    9. '   ' → logprob: -6.158205509185791
    10. ' D' → logprob: -6.658205509185791

Token 843: '):
' (ID: 1883)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13773195445537567
    2. '   ' → logprob: -3.1377320289611816
    3. ')' → logprob: -3.3877320289611816
    4. '
' → logprob: -3.5127320289611816
    5. ' for' → logprob: -4.762732028961182
    6. ',' → logprob: -5.762732028961182
    7. ':' → logprob: -6.012732028961182
    8. ' =' → logprob: -6.387732028961182
    9. '):
' → logprob: -6.887732028961182
    10. '):' → logprob: -6.887732028961182

Token 844: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008817831985652447
    2. '   ' → logprob: -5.133817672729492
    3. ' for' → logprob: -6.133817672729492
    4. 'for' → logprob: -7.508817672729492
    5. '       ' → logprob: -8.883817672729492
    6. '
' → logprob: -11.383817672729492
    7. '```' → logprob: -12.633817672729492
    8. ' ' → logprob: -13.133817672729492
    9. '          ' → logprob: -13.133817672729492
    10. '               ' → logprob: -13.133817672729492

Token 845: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0421186685562134
    2. '   ' → logprob: -1.4171186685562134
    3. '           ' → logprob: -1.5421186685562134
    4. ' for' → logprob: -1.6671186685562134
    5. '       ' → logprob: -6.292118549346924
    6. ' ' → logprob: -8.417119026184082
    7. '  ' → logprob: -9.667119026184082
    8. '               ' → logprob: -11.917119026184082
    9. '    ' → logprob: -12.417119026184082
    10. '          ' → logprob: -12.417119026184082

Token 846: ' no' (ID: 860)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4339035451412201
    2. ' for' → logprob: -1.3089035749435425
    3. '   ' → logprob: -2.683903455734253
    4. '           ' → logprob: -4.308903694152832
    5. '       ' → logprob: -8.933903694152832
    6. ' ' → logprob: -10.933903694152832
    7. '  ' → logprob: -12.183903694152832
    8. 'if' → logprob: -12.308903694152832
    9. ' if' → logprob: -13.933903694152832
    10. '               ' → logprob: -14.183903694152832

Token 847: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.22784456610679626
    2. 'D' → logprob: -1.7278445959091187
    3. ' d' → logprob: -3.852844476699829
    4. 'd' → logprob: -5.477844715118408
    5. ' ' → logprob: -8.22784423828125
    6. ' s' → logprob: -8.97784423828125
    7. ' x' → logprob: -9.72784423828125
    8. '   ' → logprob: -9.97784423828125
    9. ' street' → logprob: -10.10284423828125
    10. 's' → logprob: -10.35284423828125

Token 848: ' with' (ID: 483)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.8224013447761536
    2. ' in' → logprob: -1.0724012851715088
    3. ' for' → logprob: -2.697401285171509
    4. ' =' → logprob: -3.072401285171509
    5. 'for' → logprob: -3.322401285171509
    6. 'in' → logprob: -3.572401285171509
    7. 'such' → logprob: -3.947401285171509
    8. '           ' → logprob: -5.072401523590088
    9. ' ' → logprob: -6.322401523590088
    10. ')' → logprob: -6.322401523590088

Token 849: ' D' (ID: 415)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3669652044773102
    2. 'D' → logprob: -1.9919651746749878
    3. 'any' → logprob: -2.1169652938842773
    4. ' d' → logprob: -3.7419652938842773
    5. ' any' → logprob: -4.241965293884277
    6. ' D' → logprob: -5.741965293884277
    7. 'dir' → logprob: -5.991965293884277
    8. 'street' → logprob: -5.991965293884277
    9. 's' → logprob: -6.991965293884277
    10. 'stre' → logprob: -7.116965293884277

Token 850: '-A' (ID: 9406)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1009210348129272
    2. '-A' → logprob: -1.1009210348129272
    3. '-' → logprob: -1.6009210348129272
    4. 'in' → logprob: -3.100921154022217
    5. ' -' → logprob: -3.350921154022217
    6. ' not' → logprob: -4.225921154022217
    7. 'not' → logprob: -4.225921154022217
    8. '-a' → logprob: -5.100921154022217
    9. '-in' → logprob: -5.350921154022217
    10. 'for' → logprob: -5.475921154022217

Token 851: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6456811428070068
    2. '           ' → logprob: -1.2706811428070068
    3. ' for' → logprob: -3.020681142807007
    4. ' and' → logprob: -3.270681142807007
    5. ' =' → logprob: -3.645681142807007
    6. ' or' → logprob: -3.770681142807007
    7. 'in' → logprob: -4.145681381225586
    8. ':
' → logprob: -4.895681381225586
    9. 'for' → logprob: -5.145681381225586
    10. ':' → logprob: -5.395681381225586

Token 852: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6181142926216125
    2. 'A' → logprob: -1.4931142330169678
    3. ' B' → logprob: -2.1181142330169678
    4. ' A' → logprob: -2.7431142330169678
    5. ' not' → logprob: -4.243114471435547
    6. 'D' → logprob: -4.618114471435547
    7. ' D' → logprob: -5.118114471435547
    8. '(A' → logprob: -5.118114471435547
    9. 'not' → logprob: -5.493114471435547
    10. ' (' → logprob: -5.493114471435547

Token 853: '-D' (ID: 11989)
  Prédit: '-D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-D' → logprob: -0.10791590809822083
    2. '-' → logprob: -2.4829158782958984
    3. '-d' → logprob: -4.732915878295898
    4. ''-' → logprob: -5.482915878295898
    5. ' in' → logprob: -6.732915878295898
    6. '-in' → logprob: -6.732915878295898
    7. ' -' → logprob: -7.357915878295898
    8. 'in' → logprob: -7.607915878295898
    9. ')-' → logprob: -7.607915878295898
    10. '}-' → logprob: -7.982915878295898

Token 854: ' edges' (ID: 22569)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03245985507965088
    2. ' for' → logprob: -4.032459735870361
    3. '   ' → logprob: -4.782459735870361
    4. '
' → logprob: -6.032459735870361
    5. '       ' → logprob: -6.907459735870361
    6. 'for' → logprob: -7.282459735870361
    7. ',' → logprob: -7.657459735870361
    8. '<|end|>' → logprob: -8.65746021270752
    9. '<|end|>' → logprob: -8.78246021270752
    10. ' if' → logprob: -9.15746021270752

Token 855: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000698376854415983
    2. '   ' → logprob: -8.25069808959961
    3. '
' → logprob: -8.75069808959961
    4. ' for' → logprob: -9.12569808959961
    5. '       ' → logprob: -10.00069808959961
    6. ',' → logprob: -10.12569808959961
    7. '<|end|>' → logprob: -10.37569808959961
    8. 'for' → logprob: -11.25069808959961
    9. '<|end|>' → logprob: -11.50069808959961
    10. ' ' → logprob: -12.62569808959961

Token 856: 'direction' (ID: 43278)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7329591512680054
    2. ' True' → logprob: -1.7329591512680054
    3. 'True' → logprob: -1.8579591512680054
    4. '           ' → logprob: -2.107959270477295
    5. '):
' → logprob: -2.232959270477295
    6. '):' → logprob: -3.232959270477295
    7. ' not' → logprob: -3.482959270477295
    8. '
' → logprob: -3.982959270477295
    9. 'not' → logprob: -3.982959270477295
    10. 'd' → logprob: -4.107959270477295

Token 857: ' matters' (ID: 19854)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7895533442497253
    2. ')' → logprob: -1.2895534038543701
    3. '           ' → logprob: -2.78955340385437
    4. ' exists' → logprob: -3.41455340385437
    5. '):
' → logprob: -3.53955340385437
    6. 'in' → logprob: -3.53955340385437
    7. '):' → logprob: -3.91455340385437
    8. ' of' → logprob: -4.539553165435791
    9. ' edges' → logprob: -4.664553165435791
    10. ' is' → logprob: -4.914553165435791

Token 858: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17120511829853058
    2. ')' → logprob: -1.9212051630020142
    3. ')
' → logprob: -4.671205043792725
    4. '):
' → logprob: -6.921205043792725
    5. ' )' → logprob: -8.671205520629883
    6. '       ' → logprob: -9.671205520629883
    7. '):' → logprob: -9.796205520629883
    8. ' )
' → logprob: -10.046205520629883
    9. ').' → logprob: -10.171205520629883
    10. ',' → logprob: -10.171205520629883

Token 859: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001119499676860869
    2. '
' → logprob: -7.126119613647461
    3. '   ' → logprob: -8.876119613647461
    4. '       ' → logprob: -9.126119613647461
    5. ' for' → logprob: -10.751119613647461
    6. '<|end|>' → logprob: -10.876119613647461
    7. 'for' → logprob: -12.251119613647461
    8. '               ' → logprob: -13.001119613647461
    9. '            
' → logprob: -13.126119613647461
    10. '    
' → logprob: -13.126119613647461

Token 860: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2471311241388321
    2. '   ' → logprob: -1.622131109237671
    3. 'for' → logprob: -4.37213134765625
    4. ' for' → logprob: -4.87213134765625
    5. '       ' → logprob: -6.74713134765625
    6. '
' → logprob: -11.49713134765625
    7. '  ' → logprob: -12.37213134765625
    8. '```' → logprob: -12.37213134765625
    9. ' ' → logprob: -12.74713134765625
    10. '	for' → logprob: -13.24713134765625

Token 861: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18737488985061646
    2. '   ' → logprob: -2.1873748302459717
    3. ' for' → logprob: -3.3123748302459717
    4. 'for' → logprob: -3.9373748302459717
    5. '       ' → logprob: -5.937375068664551
    6. '
' → logprob: -10.68737506866455
    7. ' ' → logprob: -11.06237506866455
    8. '  ' → logprob: -11.06237506866455
    9. '    ' → logprob: -12.18737506866455
    10. '          ' → logprob: -12.31237506866455

Token 862: ' exist' (ID: 4310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.460911363363266
    2. ' for' → logprob: -1.0859113931655884
    3. '           ' → logprob: -3.460911273956299
    4. '   ' → logprob: -9.585911750793457
    5. '               ' → logprob: -9.710911750793457
    6. 'd' → logprob: -10.085911750793457
    7. ' streets' → logprob: -10.210911750793457
    8. '	for' → logprob: -11.585911750793457
    9. 'all' → logprob: -11.710911750793457
    10. '       ' → logprob: -12.085911750793457

Token 863: ' D' (ID: 415)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1951501965522766
    2. 'd' → logprob: -3.070150136947632
    3. ' D' → logprob: -3.195150136947632
    4. ' for' → logprob: -3.445150136947632
    5. ' any' → logprob: -3.570150136947632
    6. 'for' → logprob: -4.195150375366211
    7. 'D' → logprob: -4.570150375366211
    8. 'any' → logprob: -6.070150375366211
    9. ' s' → logprob: -7.445150375366211
    10. 's' → logprob: -7.695150375366211

Token 864: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39849868416786194
    2. ' =' → logprob: -2.148498773574829
    3. 'in' → logprob: -2.398498773574829
    4. 'for' → logprob: -2.648498773574829
    5. ' for' → logprob: -3.148498773574829
    6. '   ' → logprob: -6.77349853515625
    7. '=' → logprob: -6.89849853515625
    8. ':' → logprob: -6.89849853515625
    9. '           ' → logprob: -7.14849853515625
    10. 's' → logprob: -7.39849853515625

Token 865: ' edge' (ID: 11165)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.1975802481174469
    2. 'dir' → logprob: -2.822580337524414
    3. 'A' → logprob: -3.197580337524414
    4. '(A' → logprob: -3.197580337524414
    5. '(D' → logprob: -3.947580337524414
    6. '(dir' → logprob: -4.822580337524414
    7. ' (' → logprob: -5.947580337524414
    8. '(' → logprob: -6.072580337524414
    9. ' D' → logprob: -6.322580337524414
    10. 'd' → logprob: -7.197580337524414

Token 866: ' D' (ID: 415)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5269312858581543
    2. 'from' → logprob: -1.5269312858581543
    3. ' in' → logprob: -1.9019312858581543
    4. 's' → logprob: -4.276931285858154
    5. 'D' → logprob: -4.651931285858154
    6. ' from' → logprob: -5.026931285858154
    7. ' =' → logprob: -5.651931285858154
    8. ' D' → logprob: -6.401931285858154
    9. '   ' → logprob: -6.776931285858154
    10. '=' → logprob: -6.776931285858154

Token 867: '->' (ID: 609)
  Prédit: '-A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-A' → logprob: -0.05838802084326744
    2. '-' → logprob: -3.6833879947662354
    3. ' -' → logprob: -4.5583882331848145
    4. '-a' → logprob: -4.8083882331848145
    5. '->' → logprob: -6.0583882331848145
    6. '-D' → logprob: -6.3083882331848145
    7. '```' → logprob: -6.6833882331848145
    8. ''-' → logprob: -6.8083882331848145
    9. 'A' → logprob: -7.1833882331848145
    10. 'to' → logprob: -7.5583882331848145

Token 868: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.534558552724775e-05
    2. ' A' → logprob: -10.750025749206543
    3. 'a' → logprob: -14.000025749206543
    4. '{' → logprob: -14.375025749206543
    5. '   ' → logprob: -14.375025749206543
    6. 'B' → logprob: -14.750025749206543
    7. '"A' → logprob: -15.125025749206543
    8. ' ' → logprob: -15.250025749206543
    9. '```' → logprob: -15.250025749206543
    10. '[A' → logprob: -15.500025749206543

Token 869: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2221689075231552
    2. ' and' → logprob: -1.9721689224243164
    3. ' for' → logprob: -3.3471689224243164
    4. ' or' → logprob: -4.847168922424316
    5. ')' → logprob: -5.597168922424316
    6. 'and' → logprob: -5.972168922424316
    7. ' if' → logprob: -6.472168922424316
    8. '       ' → logprob: -6.722168922424316
    9. ' in' → logprob: -6.847168922424316
    10. 'for' → logprob: -6.847168922424316

Token 870: ' edge' (ID: 11165)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3091336190700531
    2. ' A' → logprob: -1.9341336488723755
    3. 'D' → logprob: -2.434133529663086
    4. ' D' → logprob: -3.684133529663086
    5. 'edge' → logprob: -5.684133529663086
    6. 'B' → logprob: -6.684133529663086
    7. 'd' → logprob: -7.434133529663086
    8. ' edge' → logprob: -7.559133529663086
    9. ''A' → logprob: -7.809133529663086
    10. ' ' → logprob: -7.934133529663086

Token 871: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.034000884741544724
    2. ' B' → logprob: -3.409000873565674
    3. 'b' → logprob: -9.034001350402832
    4. 'D' → logprob: -9.409001350402832
    5. '   ' → logprob: -10.284001350402832
    6. '"B' → logprob: -10.409001350402832
    7. 'BDD' → logprob: -10.659001350402832
    8. ' ' → logprob: -10.784001350402832
    9. '`' → logprob: -11.534001350402832
    10. '           ' → logprob: -12.284001350402832

Token 872: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.35084661841392517
    2. '-' → logprob: -1.3508466482162476
    3. ''-' → logprob: -3.350846529006958
    4. ' ->' → logprob: -7.475846767425537
    5. ''' → logprob: -7.725846767425537
    6. '"-' → logprob: -8.600846290588379
    7. ' -' → logprob: -9.600846290588379
    8. ')-' → logprob: -9.600846290588379
    9. '-'' → logprob: -9.975846290588379
    10. '   ' → logprob: -9.975846290588379

Token 873: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.0206720617134124e-05
    2. ' D' → logprob: -11.50001049041748
    3. 'd' → logprob: -17.625009536743164
    4. '	D' → logprob: -18.625009536743164
    5. '   ' → logprob: -19.000009536743164
    6. '```' → logprob: -19.375009536743164
    7. ' ' → logprob: -19.500009536743164
    8. '`' → logprob: -20.375009536743164
    9. '
' → logprob: -20.625009536743164
    10. '>D' → logprob: -20.875009536743164

Token 874: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013415027409791946
    2. '
' → logprob: -4.6384148597717285
    3. '   ' → logprob: -6.6384148597717285
    4. '       ' → logprob: -7.3884148597717285
    5. '<|end|>' → logprob: -7.3884148597717285
    6. ' for' → logprob: -7.7634148597717285
    7. '<|end|>' → logprob: -8.513415336608887
    8. ',' → logprob: -9.263415336608887
    9. '            
' → logprob: -9.263415336608887
    10. 'for' → logprob: -9.513415336608887

Token 875: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001648876117542386
    2. ' for' → logprob: -7.626648902893066
    3. '<|end|>' → logprob: -7.626648902893066
    4. '       ' → logprob: -7.876648902893066
    5. '   ' → logprob: -8.626648902893066
    6. '<|end|>' → logprob: -10.626648902893066
    7. 'for' → logprob: -10.876648902893066
    8. '
' → logprob: -11.251648902893066
    9. ',' → logprob: -11.501648902893066
    10. ')' → logprob: -11.751648902893066

Token 876: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014168680645525455
    2. '   ' → logprob: -4.639168739318848
    3. ' for' → logprob: -6.264168739318848
    4. '
' → logprob: -6.514168739318848
    5. '       ' → logprob: -7.139168739318848
    6. 'for' (adapté à ' for') → logprob: -8.514168739318848
    7. ',' → logprob: -12.139168739318848
    8. '    
' → logprob: -13.139168739318848
    9. '            
' → logprob: -13.139168739318848
    10. '               ' → logprob: -13.264168739318848

Token 877: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0334337055683136
    2. 'd' → logprob: -3.533433675765991
    3. ' D' → logprob: -5.65843391418457
    4. ' d' → logprob: -8.65843391418457
    5. 'dir' → logprob: -12.78343391418457
    6. '_d' → logprob: -13.15843391418457
    7. '   ' → logprob: -13.53343391418457
    8. 's' → logprob: -14.03343391418457
    9. '_D' → logprob: -14.09593391418457
    10. '	D' → logprob: -14.59593391418457

Token 878: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026304712519049644
    2. 'in' → logprob: -3.6513047218322754
    3. '	in' → logprob: -13.151304244995117
    4. ' ' → logprob: -13.401304244995117
    5. '_in' → logprob: -14.776304244995117
    6. 's' → logprob: -15.401304244995117
    7. '<|end|>' → logprob: -16.401304244995117
    8. '  ' → logprob: -16.651304244995117
    9. ',' → logprob: -17.026304244995117
    10. 'In' → logprob: -17.151304244995117

Token 879: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.12791450321674347
    2. 'graph' → logprob: -2.1279144287109375
    3. 'dir' → logprob: -7.6279144287109375
    4. 'cross' → logprob: -8.502914428710938
    5. 'street' → logprob: -9.252914428710938
    6. ' streets' → logprob: -10.252914428710938
    7. 'set' → logprob: -10.377914428710938
    8. 'stairs' → logprob: -10.877914428710938
    9. 'graphs' → logprob: -11.127914428710938
    10. 'range' → logprob: -11.377914428710938

Token 880: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08494744449853897
    2. ':
' → logprob: -2.584947347640991
    3. '       ' → logprob: -6.58494758605957
    4. '<|end|>' → logprob: -6.70994758605957
    5. '           ' → logprob: -7.08494758605957
    6. ' :' → logprob: -7.33494758605957
    7. ' if' → logprob: -7.45994758605957
    8. ' :
' → logprob: -8.20994758605957
    9. '   ' → logprob: -8.45994758605957
    10. '):
' → logprob: -8.70994758605957

Token 881: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021630918607115746
    2. '           ' → logprob: -4.271630764007568
    3. ':' → logprob: -5.646630764007568
    4. '<|end|>' → logprob: -5.896630764007568
    5. ' if' → logprob: -7.521630764007568
    6. '       ' → logprob: -8.771631240844727
    7. '                               ' → logprob: -9.271631240844727
    8. '<|end|>' → logprob: -9.646631240844727
    9. ':
' → logprob: -9.771631240844727
    10. ',' → logprob: -10.521631240844727

Token 882: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09489760547876358
    2. ' if' → logprob: -3.094897508621216
    3. 'if' (adapté à ' if') → logprob: -3.219897508621216
    4. '           ' → logprob: -5.344897747039795
    5. '   ' → logprob: -8.594897270202637
    6. '       ' → logprob: -8.844897270202637
    7. '<|end|>' → logprob: -9.969897270202637
    8. '                   ' → logprob: -10.469897270202637
    9. '	           ' → logprob: -10.594897270202637
    10. '```' → logprob: -10.844897270202637

Token 883: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.013965095393359661
    2. 'dir' → logprob: -4.763965129852295
    3. ' D' → logprob: -6.763965129852295
    4. 'A' → logprob: -6.888965129852295
    5. '(D' → logprob: -6.888965129852295
    6. '(dir' → logprob: -7.763965129852295
    7. ''D' → logprob: -7.888965129852295
    8. '('' → logprob: -8.513964653015137
    9. '(' → logprob: -8.513964653015137
    10. 'd' → logprob: -8.763964653015137

Token 884: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12341294437646866
    2. ' !=' → logprob: -2.373412847518921
    3. ' not' → logprob: -4.6234130859375
    4. 'in' → logprob: -4.7484130859375
    5. '!=' → logprob: -5.7484130859375
    6. ' ==' → logprob: -7.4984130859375
    7. ')' → logprob: -8.3734130859375
    8. 'not' → logprob: -9.1234130859375
    9. '->' → logprob: -9.2484130859375
    10. '==' → logprob: -9.2484130859375

Token 885: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -2.3795937522663735e-05
    2. 'graph' → logprob: -11.25002384185791
    3. ' dir' → logprob: -11.50002384185791
    4. 'color' → logprob: -15.75002384185791
    5. '(dir' → logprob: -15.87502384185791
    6. '	dir' → logprob: -17.000022888183594
    7. 'dirs' → logprob: -17.250022888183594
    8. ' ' → logprob: -17.625022888183594
    9. '           ' → logprob: -17.750022888183594
    10. '
' → logprob: -17.750022888183594

Token 886: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -7.584239938296378e-06
    2. 'edges' → logprob: -12.125007629394531
    3. '```' → logprob: -14.500007629394531
    4. '
' → logprob: -14.750007629394531
    5. 'Edges' → logprob: -15.750007629394531
    6. '_edge' → logprob: -16.12500762939453
    7. ' edges' → logprob: -16.12500762939453
    8. ')' → logprob: -16.12500762939453
    9. '_ed' → logprob: -16.12500762939453
    10. '_graph' → logprob: -16.37500762939453

Token 887: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931568384170532
    2. 'and' → logprob: -0.6931568384170532
    3. '	and' → logprob: -12.568157196044922
    4. '       ' → logprob: -13.068157196044922
    5. '           ' → logprob: -13.193157196044922
    6. ':
' → logprob: -14.568157196044922
    7. '   ' → logprob: -14.693157196044922
    8. ':' → logprob: -14.943157196044922
    9. ' ' → logprob: -15.193157196044922
    10. '.get' → logprob: -16.068157196044922

Token 888: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001735870959237218
    2. ' A' → logprob: -6.626735687255859
    3. '   ' → logprob: -8.25173568725586
    4. 'D' → logprob: -9.75173568725586
    5. ' ' → logprob: -10.62673568725586
    6. ''A' → logprob: -10.62673568725586
    7. '           ' → logprob: -11.25173568725586
    8. '                   ' → logprob: -12.12673568725586
    9. 'B' → logprob: -12.50173568725586
    10. '               ' → logprob: -12.62673568725586

Token 889: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12791860103607178
    2. ' in' → logprob: -2.1279187202453613
    3. ']' → logprob: -7.502918720245361
    4. ')' → logprob: -8.127918243408203
    5. '   ' → logprob: -10.127918243408203
    6. ' ' → logprob: -10.502918243408203
    7. 'not' → logprob: -10.752918243408203
    8. '  ' → logprob: -11.252918243408203
    9. 'and' → logprob: -11.752918243408203
    10. '    ' → logprob: -12.252918243408203

Token 890: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -1.9385402993066236e-05
    2. ' dir' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.250019073486328
    4. '(dir' → logprob: -16.500019073486328
    5. '	dir' → logprob: -16.750019073486328
    6. ' ' → logprob: -17.750019073486328
    7. '           ' → logprob: -17.875019073486328
    8. '       ' → logprob: -18.250019073486328
    9. '[' → logprob: -18.750019073486328
    10. '```' → logprob: -19.625019073486328

Token 891: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.259079363080673e-05
    2. 'edges' → logprob: -11.500012397766113
    3. 'Edges' → logprob: -13.125012397766113
    4. '_dir' → logprob: -15.500012397766113
    5. '_ed' → logprob: -16.50001335144043
    6. ' edges' → logprob: -16.50001335144043
    7. '[' → logprob: -17.37501335144043
    8. '_edge' → logprob: -17.37501335144043
    9. '.edges' → logprob: -18.37501335144043
    10. 'ed' → logprob: -18.75001335144043

Token 892: '[D' (ID: 159299)
  Prédit: '[D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -1.9027791495318525e-05
    2. 'D' → logprob: -10.875019073486328
    3. '```' → logprob: -18.000019073486328
    4. '[' → logprob: -18.000019073486328
    5. '[d' → logprob: -18.125019073486328
    6. '               ' → logprob: -18.375019073486328
    7. '"D' → logprob: -18.625019073486328
    8. '``' → logprob: -19.000019073486328
    9. '<D' → logprob: -19.125019073486328
    10. '           ' → logprob: -19.250019073486328

Token 893: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.048366256058216095
    2. ']:' → logprob: -4.173366069793701
    3. ' and' → logprob: -4.548366069793701
    4. 'and' → logprob: -5.048366069793701
    5. '               ' → logprob: -5.423366069793701
    6. '           ' → logprob: -5.423366069793701
    7. ']:
' → logprob: -6.173366069793701
    8. ')' → logprob: -6.423366069793701
    9. '       ' → logprob: -7.673366069793701
    10. '                   ' → logprob: -8.42336654663086

Token 894: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.019681503996253014
    2. '                   ' → logprob: -4.019681453704834
    3. 'and' → logprob: -6.769681453704834
    4. '               ' → logprob: -8.144681930541992
    5. '                ' → logprob: -9.894681930541992
    6. '           ' → logprob: -11.519681930541992
    7. '                    ' → logprob: -11.644681930541992
    8. '                  ' → logprob: -11.894681930541992
    9. '                       ' → logprob: -12.894681930541992
    10. '                    
' → logprob: -13.019681930541992

Token 895: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003194589400663972
    2. ' and' → logprob: -6.628194808959961
    3. '                   ' → logprob: -7.253194808959961
    4. ' if' → logprob: -7.503194808959961
    5. '               ' → logprob: -7.878194808959961
    6. ' ' → logprob: -9.753194808959961
    7. '                        
' → logprob: -10.378194808959961
    8. '<|end|>' → logprob: -10.503194808959961
    9. '                        ' → logprob: -10.878194808959961
    10. '                           ' → logprob: -11.128194808959961

Token 896: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.009256602264940739
    2. ' B' → logprob: -4.759256839752197
    3. 'D' → logprob: -7.509256839752197
    4. '   ' → logprob: -9.884256362915039
    5. ' D' → logprob: -11.384256362915039
    6. ' ' → logprob: -11.509256362915039
    7. 'b' → logprob: -12.384256362915039
    8. 'A' → logprob: -12.509256362915039
    9. '  ' → logprob: -13.259256362915039
    10. 'dir' → logprob: -13.384256362915039

Token 897: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048601455986499786
    2. 'in' → logprob: -3.0486013889312744
    3. '                   ' → logprob: -12.173601150512695
    4. ' ' → logprob: -13.548601150512695
    5. ')' → logprob: -13.673601150512695
    6. ' not' → logprob: -13.798601150512695
    7. '               ' → logprob: -13.798601150512695
    8. '<|end|>' → logprob: -14.298601150512695
    9. ' в' → logprob: -14.548601150512695
    10. ']' → logprob: -14.923601150512695

Token 898: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.2519592046737671
    2. ' dir' → logprob: -1.501959204673767
    3. '(dir' → logprob: -11.251958847045898
    4. '[' → logprob: -12.126958847045898
    5. 'if' → logprob: -13.126958847045898
    6. '           ' → logprob: -13.251958847045898
    7. '                   ' → logprob: -14.001958847045898
    8. '	dir' → logprob: -14.126958847045898
    9. '               ' → logprob: -14.376958847045898
    10. '   ' → logprob: -14.626958847045898

Token 899: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.306760805164231e-05
    2. 'dir' → logprob: -12.12501335144043
    3. 'edges' → logprob: -12.62501335144043
    4. '_dir' → logprob: -13.00001335144043
    5. 'Edges' → logprob: -13.87501335144043
    6. '_ed' → logprob: -14.50001335144043
    7. '_dirs' → logprob: -15.00001335144043
    8. '_edge' → logprob: -16.25001335144043
    9. 'ed' → logprob: -17.12501335144043
    10. '```' → logprob: -17.12501335144043

Token 900: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8225775957107544
    2. 'and' → logprob: -1.0725775957107544
    3. '[D' → logprob: -1.5725775957107544
    4. '                   ' → logprob: -4.822577476501465
    5. 'D' → logprob: -6.447577476501465
    6. '               ' → logprob: -6.822577476501465
    7. '           ' → logprob: -9.197577476501465
    8. '   ' → logprob: -9.447577476501465
    9. '[' → logprob: -9.572577476501465
    10. '                       ' → logprob: -11.072577476501465

Token 901: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0007412535487674177
    2. 'B' → logprob: -7.375741481781006
    3. ' D' → logprob: -9.375741004943848
    4. '   ' → logprob: -10.750741004943848
    5. '           ' → logprob: -13.125741004943848
    6. ' ' → logprob: -13.375741004943848
    7. '       ' → logprob: -13.625741004943848
    8. '     ' → logprob: -14.250741004943848
    9. '               ' → logprob: -14.500741004943848
    10. '  ' → logprob: -14.875741004943848

Token 902: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22550301253795624
    2. ' in' → logprob: -1.6005029678344727
    3. '   ' → logprob: -10.600502967834473
    4. '           ' → logprob: -10.975502967834473
    5. '                   ' → logprob: -11.100502967834473
    6. ' ' → logprob: -11.600502967834473
    7. '               ' → logprob: -11.725502967834473
    8. '
' → logprob: -12.850502967834473
    9. '  ' → logprob: -13.100502967834473
    10. '       ' → logprob: -13.475502967834473

Token 903: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -1.0206720617134124e-05
    2. ' dir' → logprob: -11.50001049041748
    3. '(dir' → logprob: -17.500009536743164
    4. '	dir' → logprob: -19.375009536743164
    5. '           ' → logprob: -20.000009536743164
    6. '   ' → logprob: -20.125009536743164
    7. '_dir' → logprob: -22.000009536743164
    8. '       ' → logprob: -22.375009536743164
    9. 'Dir' → logprob: -22.375009536743164
    10. '
' → logprob: -22.625009536743164

Token 904: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -2.816093228830141e-06
    2. 'edges' → logprob: -13.50000286102295
    3. 'Edges' → logprob: -13.87500286102295
    4. 'dir' → logprob: -15.62500286102295
    5. '_ed' → logprob: -16.000001907348633
    6. '[' → logprob: -16.625001907348633
    7. '_dir' → logprob: -17.625001907348633
    8. 's' → logprob: -17.875001907348633
    9. '```' → logprob: -18.125001907348633
    10. '_edge' → logprob: -18.500001907348633

Token 905: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -1.9361264946837764e-07
    2. 'B' → logprob: -17.0
    3. '[D' → logprob: -18.0
    4. '
' → logprob: -18.125
    5. '[b' → logprob: -18.125
    6. '   ' → logprob: -19.125
    7. '(B' → logprob: -19.25
    8. '[' → logprob: -19.375
    9. '``' → logprob: -19.375
    10. '[
' → logprob: -19.75

Token 906: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.7315755486488342
    2. ']:
' → logprob: -0.7315755486488342
    3. '               ' → logprob: -4.2315754890441895
    4. '                   ' → logprob: -5.2315754890441895
    5. ':' → logprob: -5.4815754890441895
    6. ']' → logprob: -5.6065754890441895
    7. '[' → logprob: -5.7315754890441895
    8. '[D' → logprob: -6.1065754890441895
    9. ':
' → logprob: -7.1065754890441895
    10. '.' → logprob: -7.6065754890441895

Token 907: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00013321757433004677
    2. ':' → logprob: -9.625133514404297
    3. ':
' → logprob: -10.625133514404297
    4. '                           ' → logprob: -11.000133514404297
    5. '                   ' → logprob: -11.625133514404297
    6. '                        
' → logprob: -12.375133514404297
    7. '                      ' → logprob: -12.750133514404297
    8. '                        ' → logprob: -13.125133514404297
    9. '                               ' → logprob: -13.500133514404297
    10. '():
' → logprob: -13.750133514404297

Token 908: ' return' (ID: 622)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.009405175223946571
    2. ' return' → logprob: -5.384405136108398
    3. 'return' (adapté à ' return') → logprob: -6.009405136108398
    4. '                       ' → logprob: -6.134405136108398
    5. '                               ' → logprob: -9.384405136108398
    6. '                   ' → logprob: -10.384405136108398
    7. '           ' → logprob: -11.009405136108398
    8. '               ' → logprob: -11.634405136108398
    9. '                          ' → logprob: -12.884405136108398
    10. '                            ' → logprob: -13.384405136108398

Token 909: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6937510371208191
    2. 'False' → logprob: -0.6937510371208191
    3. ' True' → logprob: -7.693750858306885
    4. 'True' → logprob: -8.818751335144043
    5. '(False' → logprob: -17.818750381469727
    6. '=False' → logprob: -19.568750381469727
    7. '   ' → logprob: -19.693750381469727
    8. ' false' → logprob: -19.818750381469727
    9. '_false' → logprob: -19.818750381469727
    10. '.False' → logprob: -20.443750381469727

Token 910: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021104090847074986
    2. '
' → logprob: -7.252110481262207
    3. '       ' → logprob: -7.252110481262207
    4. '<|end|>' → logprob: -8.002110481262207
    5. '               ' → logprob: -9.252110481262207
    6. '		' → logprob: -9.627110481262207
    7. '<|end|>' → logprob: -10.127110481262207
    8. '            
' → logprob: -10.502110481262207
    9. 'return' → logprob: -10.877110481262207
    10. '                   ' → logprob: -11.252110481262207

Token 911: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008598887361586094
    2. '       ' → logprob: -7.75085973739624
    3. '               ' → logprob: -8.500860214233398
    4. '<|end|>' → logprob: -9.500860214233398
    5. '                   ' → logprob: -9.875860214233398
    6. '		' → logprob: -10.000860214233398
    7. '<|end|>' → logprob: -11.250860214233398
    8. '	       ' → logprob: -11.750860214233398
    9. '   ' → logprob: -12.000860214233398
    10. '                       ' → logprob: -12.875860214233398

Token 912: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1436784714460373
    2. '       ' → logprob: -2.0186784267425537
    3. '<|end|>' → logprob: -7.393678665161133
    4. '   ' → logprob: -8.768678665161133
    5. '<|end|>' → logprob: -9.768678665161133
    6. '               ' → logprob: -9.893678665161133
    7. 'return' → logprob: -10.643678665161133
    8. ' return' → logprob: -11.018678665161133
    9. ',' → logprob: -11.518678665161133
    10. '
' → logprob: -11.768678665161133

Token 913: ' condition' (ID: 7060)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00723022036254406
    2. '#' → logprob: -5.632230281829834
    3. '       ' → logprob: -5.882230281829834
    4. '   ' → logprob: -7.382230281829834
    5. '
' → logprob: -8.507229804992676
    6. '               ' → logprob: -12.507229804992676
    7. ' #' → logprob: -12.757229804992676
    8. ' ' → logprob: -13.882229804992676
    9. '            
' → logprob: -14.257229804992676
    10. '          ' → logprob: -14.757229804992676

Token 914: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03481495380401611
    2. '(' → logprob: -3.4098148345947266
    3. '           ' → logprob: -6.784814834594727
    4. '            ' → logprob: -11.284814834594727
    5. '```' → logprob: -11.534814834594727
    6. ' #' → logprob: -12.034814834594727
    7. '            
' → logprob: -13.534814834594727
    8. ')' → logprob: -13.534814834594727
    9. ' ' → logprob: -14.409814834594727
    10. ' (
' → logprob: -14.409814834594727

Token 915: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.253090865968261e-06
    2. ')' → logprob: -12.375009536743164
    3. '(' → logprob: -13.000009536743164
    4. ' ' → logprob: -13.375009536743164
    5. '2' → logprob: -13.875009536743164
    6. '   ' → logprob: -15.875009536743164
    7. '```' → logprob: -17.750009536743164
    8. '۳' → logprob: -17.875009536743164
    9. ' (' → logprob: -18.375009536743164
    10. '３' → logprob: -18.500009536743164

Token 916: '):
' (ID: 1883)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2103656381368637
    2. ':' → logprob: -1.710365653038025
    3. ':
' → logprob: -4.8353657722473145
    4. '):' → logprob: -7.8353657722473145
    5. '):
' → logprob: -8.585365295410156
    6. '       ' → logprob: -8.710365295410156
    7. ')' → logprob: -9.085365295410156
    8. '   ' → logprob: -10.835365295410156
    9. '               ' → logprob: -11.085365295410156
    10. '          ' → logprob: -11.085365295410156

Token 917: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1160349458805285e-05
    2. '       ' → logprob: -11.500011444091797
    3. '               ' → logprob: -15.250011444091797
    4. '#' → logprob: -16.125011444091797
    5. '          ' → logprob: -16.125011444091797
    6. 'for' → logprob: -16.250011444091797
    7. '```' → logprob: -16.250011444091797
    8. '		' → logprob: -16.375011444091797
    9. ' for' → logprob: -16.500011444091797
    10. '   ' → logprob: -16.750011444091797

Token 918: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10100103169679642
    2. '       ' → logprob: -2.351001024246216
    3. '   ' → logprob: -7.851001262664795
    4. 'for' → logprob: -8.226000785827637
    5. ' for' → logprob: -9.476000785827637
    6. '
' → logprob: -10.351000785827637
    7. '#' (adapté à ' #') → logprob: -10.851000785827637
    8. '               ' → logprob: -12.601000785827637
    9. ' #' → logprob: -13.726000785827637
    10. '```' → logprob: -14.101000785827637

Token 919: ' no' (ID: 860)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05391010642051697
    2. ' for' → logprob: -3.67891001701355
    3. 'for' → logprob: -4.053910255432129
    4. '       ' → logprob: -5.178910255432129
    5. '   ' → logprob: -5.553910255432129
    6. '
' → logprob: -9.553910255432129
    7. ' no' → logprob: -9.553910255432129
    8. '               ' → logprob: -9.803910255432129
    9. 'def' → logprob: -10.053910255432129
    10. '#' → logprob: -10.303910255432129

Token 920: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.14527033269405365
    2. 'E' → logprob: -2.020270347595215
    3. ' street' → logprob: -6.145270347595215
    4. 'street' → logprob: -8.145270347595215
    5. 'stre' → logprob: -9.895270347595215
    6. '   ' → logprob: -9.895270347595215
    7. ' ' → logprob: -10.145270347595215
    8. '       ' → logprob: -12.395270347595215
    9. '	E' → logprob: -13.270270347595215
    10. '  ' → logprob: -13.395270347595215

Token 921: ' such' (ID: 2238)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33878016471862793
    2. 'in' → logprob: -1.713780164718628
    3. '           ' → logprob: -2.713780164718628
    4. ' with' → logprob: -3.838780164718628
    5. 'with' → logprob: -4.588780403137207
    6. '               ' → logprob: -5.588780403137207
    7. ' such' → logprob: -6.088780403137207
    8. '       ' → logprob: -7.463780403137207
    9. '            ' → logprob: -7.588780403137207
    10. ' =' → logprob: -8.463780403137207

Token 922: ' that' (ID: 484)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12778137624263763
    2. ' in' → logprob: -2.377781391143799
    3. '               ' → logprob: -4.127781391143799
    4. '           ' → logprob: -4.627781391143799
    5. '```' → logprob: -7.877781391143799
    6. 'not' → logprob: -8.25278091430664
    7. '                   ' → logprob: -9.12778091430664
    8. 'E' → logprob: -9.37778091430664
    9. '            ' → logprob: -9.37778091430664
    10. '   ' → logprob: -9.50278091430664

Token 923: ' A' (ID: 355)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.013609424233436584
    2. ' E' → logprob: -4.388609409332275
    3. '(E' → logprob: -7.388609409332275
    4. 'A' → logprob: -8.388609886169434
    5. '   ' → logprob: -8.638609886169434
    6. '(' → logprob: -10.763609886169434
    7. ' (' → logprob: -11.013609886169434
    8. '(A' → logprob: -11.888609886169434
    9. ' ' → logprob: -12.013609886169434
    10. '       ' → logprob: -12.263609886169434

Token 924: '-E' (ID: 15684)
  Prédit: '-E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-E' → logprob: -0.03349653631448746
    2. ' in' → logprob: -4.283496379852295
    3. '->' → logprob: -4.408496379852295
    4. '-' → logprob: -5.533496379852295
    5. 'in' → logprob: -6.158496379852295
    6. ' -' → logprob: -7.783496379852295
    7. ''-' → logprob: -9.658496856689453
    8. '
' → logprob: -9.908496856689453
    9. 'E' → logprob: -9.908496856689453
    10. '   ' → logprob: -10.033496856689453

Token 925: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8585447669029236
    2. ' and' → logprob: -0.8585447669029236
    3. 'and' → logprob: -2.2335448265075684
    4. 'in' → logprob: -3.1085448265075684
    5. '           ' → logprob: -7.983544826507568
    6. '```' → logprob: -9.60854434967041
    7. ')' → logprob: -9.85854434967041
    8. 'if' → logprob: -10.23354434967041
    9. '
' → logprob: -10.73354434967041
    10. ' ' → logprob: -11.10854434967041

Token 926: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.005418853834271431
    2. ' E' → logprob: -5.25541877746582
    3. '   ' → logprob: -8.75541877746582
    4. '       ' → logprob: -11.75541877746582
    5. '           ' → logprob: -12.13041877746582
    6. ' ' → logprob: -12.50541877746582
    7. '(E' → logprob: -13.25541877746582
    8. '`' → logprob: -13.63041877746582
    9. 'e' → logprob: -13.63041877746582
    10. '	E' → logprob: -13.63041877746582

Token 927: '-B' (ID: 8287)
  Prédit: '-B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-B' → logprob: -4.251091377227567e-05
    2. '-E' → logprob: -11.000042915344238
    3. ' -' → logprob: -11.375042915344238
    4. '-A' → logprob: -11.875042915344238
    5. '```' → logprob: -13.000042915344238
    6. '-' → logprob: -13.250042915344238
    7. '-b' → logprob: -13.625042915344238
    8. '   ' → logprob: -14.875042915344238
    9. '->' → logprob: -15.125042915344238
    10. '
' → logprob: -15.375042915344238

Token 928: ' edges' (ID: 22569)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006515554850921035
    2. ' for' → logprob: -7.7506513595581055
    3. 'for' → logprob: -9.000651359558105
    4. '               ' → logprob: -10.500651359558105
    5. '       ' → logprob: -11.250651359558105
    6. '```' → logprob: -11.250651359558105
    7. '          ' → logprob: -11.250651359558105
    8. '   ' → logprob: -11.625651359558105
    9. ',' → logprob: -12.250651359558105
    10. '
' → logprob: -12.875651359558105

Token 929: ' exist' (ID: 4310)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.093505099765025e-05
    2. '<|end|>' → logprob: -12.250020980834961
    3. '       ' → logprob: -12.500020980834961
    4. '<|end|>' → logprob: -12.625020980834961
    5. ',' → logprob: -12.750020980834961
    6. ' for' → logprob: -13.250020980834961
    7. '   ' → logprob: -13.875020980834961
    8. '```' → logprob: -14.000020980834961
    9. '               ' → logprob: -14.125020980834961
    10. 'for' → logprob: -14.125020980834961

Token 930: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.802049756515771e-05
    2. '       ' → logprob: -10.875067710876465
    3. ' for' → logprob: -11.125067710876465
    4. '<|end|>' → logprob: -11.125067710876465
    5. '   ' → logprob: -12.250067710876465
    6. '               ' → logprob: -12.500067710876465
    7. '```' → logprob: -12.875067710876465
    8. '<|end|>' → logprob: -12.875067710876465
    9. 'for' → logprob: -13.250067710876465
    10. ',' → logprob: -14.250067710876465

Token 931: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011868205183418468
    2. '       ' → logprob: -9.125118255615234
    3. ' for' → logprob: -12.500118255615234
    4. '   ' → logprob: -13.250118255615234
    5. 'for' → logprob: -13.500118255615234
    6. '               ' → logprob: -14.000118255615234
    7. '```' → logprob: -14.000118255615234
    8. '	       ' → logprob: -14.500118255615234
    9. '          ' → logprob: -15.000118255615234
    10. '<|end|>' → logprob: -15.625118255615234

Token 932: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006889065727591515
    2. ' for' → logprob: -5.5068888664245605
    3. '       ' → logprob: -6.3818888664245605
    4. 'for' (adapté à ' for') → logprob: -7.0068888664245605
    5. '   ' → logprob: -8.506889343261719
    6. '               ' → logprob: -12.881889343261719
    7. '```' → logprob: -13.756889343261719
    8. '	       ' → logprob: -13.881889343261719
    9. '<|end|>' → logprob: -14.256889343261719
    10. '          ' → logprob: -15.131889343261719

Token 933: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.016035541892051697
    2. ' E' → logprob: -4.141035556793213
    3. 'st' → logprob: -14.391035079956055
    4. 'stre' → logprob: -15.266035079956055
    5. '	E' → logprob: -15.391035079956055
    6. 'street' → logprob: -15.641035079956055
    7. 'e' → logprob: -16.891035079956055
    8. ' street' → logprob: -17.016035079956055
    9. '_E' → logprob: -17.516035079956055
    10. '(st' → logprob: -17.766035079956055

Token 934: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005234952084720135
    2. 'in' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.380234718322754
    4. '	in' → logprob: -15.130234718322754
    5. '   ' → logprob: -16.13023567199707
    6. '  ' → logprob: -16.38023567199707
    7. 's' → logprob: -17.00523567199707
    8. '       ' → logprob: -17.13023567199707
    9. 'import' → logprob: -17.63023567199707
    10. 'In' → logprob: -17.63023567199707

Token 935: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.04861121252179146
    2. ' streets' → logprob: -3.0486111640930176
    3. 'graph' → logprob: -10.923611640930176
    4. 'street' → logprob: -13.548611640930176
    5. 'stairs' → logprob: -14.173611640930176
    6. '(st' → logprob: -14.173611640930176
    7. '[' → logprob: -14.173611640930176
    8. 'st' → logprob: -14.673611640930176
    9. 'sts' → logprob: -14.923611640930176
    10. ' graph' → logprob: -15.298611640930176

Token 936: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0527273416519165
    2. ':
' → logprob: -1.3027273416519165
    3. '           ' → logprob: -1.6777273416519165
    4. '               ' → logprob: -1.6777273416519165
    5. '       ' → logprob: -5.802727222442627
    6. '	       ' → logprob: -7.177727222442627
    7. '<|end|>' → logprob: -7.302727222442627
    8. '	           ' → logprob: -8.427727699279785
    9. '<|end|>' → logprob: -8.677727699279785
    10. '		       ' → logprob: -9.177727699279785

Token 937: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014476210810244083
    2. '               ' → logprob: -4.264476299285889
    3. '       ' → logprob: -8.63947582244873
    4. '	       ' → logprob: -9.63947582244873
    5. '```' → logprob: -10.51447582244873
    6. ':' → logprob: -11.26447582244873
    7. '   ' → logprob: -11.51447582244873
    8. ':
' → logprob: -12.01447582244873
    9. '	           ' → logprob: -12.76447582244873
    10. '<|end|>' → logprob: -13.01447582244873

Token 938: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010372139513492584
    2. '               ' → logprob: -4.885372161865234
    3. '       ' → logprob: -6.510372161865234
    4. 'if' (adapté à ' if') → logprob: -6.760372161865234
    5. ' if' → logprob: -9.635372161865234
    6. '   ' → logprob: -10.135372161865234
    7. '```' → logprob: -11.885372161865234
    8. '	       ' → logprob: -13.135372161865234
    9. '                   ' → logprob: -14.260372161865234
    10. 'def' → logprob: -16.010372161865234

Token 939: ' A' (ID: 355)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.014294074848294258
    2. 'A' → logprob: -4.389294147491455
    3. ' E' → logprob: -6.514294147491455
    4. '(E' → logprob: -8.639293670654297
    5. ' A' → logprob: -10.139293670654297
    6. '(' → logprob: -10.514293670654297
    7. '(A' → logprob: -11.139293670654297
    8. 'color' → logprob: -11.514293670654297
    9. ' (' → logprob: -11.639293670654297
    10. 'e' → logprob: -11.889293670654297

Token 940: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3137829005718231
    2. 'in' → logprob: -1.3137829303741455
    3. ' not' → logprob: -7.688782691955566
    4. 'not' → logprob: -10.063782691955566
    5. '[' → logprob: -12.563782691955566
    6. ' ' → logprob: -12.688782691955566
    7. '   ' → logprob: -12.813782691955566
    8. ']' → logprob: -13.063782691955566
    9. '	in' → logprob: -13.563782691955566
    10. '[in' → logprob: -13.688782691955566

Token 941: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.018162349238991737
    2. ' dir' → logprob: -4.018162250518799
    3. '           ' → logprob: -12.393162727355957
    4. '(dir' → logprob: -12.643162727355957
    5. 'graph' → logprob: -14.143162727355957
    6. '[' → logprob: -14.518162727355957
    7. '	dir' → logprob: -14.643162727355957
    8. '               ' → logprob: -14.643162727355957
    9. '```' → logprob: -14.643162727355957
    10. '                   ' → logprob: -14.768162727355957

Token 942: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -9.758300438988954e-05
    2. 'edges' → logprob: -9.250097274780273
    3. 'Edges' → logprob: -14.375097274780273
    4. ' edges' → logprob: -15.625097274780273
    5. '_ed' → logprob: -15.750097274780273
    6. '.edges' → logprob: -16.000097274780273
    7. '_edge' → logprob: -16.250097274780273
    8. '```' → logprob: -16.375097274780273
    9. '[' → logprob: -17.125097274780273
    10. 'e' → logprob: -17.500097274780273

Token 943: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2863284647464752
    2. ' and' → logprob: -1.4113284349441528
    3. '               ' → logprob: -6.036328315734863
    4. '[E' → logprob: -6.161328315734863
    5. '                   ' → logprob: -7.911328315734863
    6. '           ' → logprob: -8.536328315734863
    7. '```' → logprob: -10.661328315734863
    8. '   ' → logprob: -11.161328315734863
    9. '                ' → logprob: -11.411328315734863
    10. '       ' → logprob: -11.411328315734863

Token 944: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.02697494812309742
    2. ' E' → logprob: -3.65197491645813
    3. '   ' → logprob: -7.526975154876709
    4. ' ' → logprob: -9.02697467803955
    5. '  ' → logprob: -11.77697467803955
    6. '       ' → logprob: -12.52697467803955
    7. '    ' → logprob: -13.27697467803955
    8. '           ' → logprob: -14.15197467803955
    9. '     ' → logprob: -14.52697467803955
    10. '	E' → logprob: -15.27697467803955

Token 945: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06203692406415939
    2. ' in' → logprob: -2.8120369911193848
    3. '[' → logprob: -9.937036514282227
    4. ' ' → logprob: -12.187036514282227
    5. '
' → logprob: -12.312036514282227
    6. '   ' → logprob: -13.312036514282227
    7. '```' → logprob: -13.437036514282227
    8. '<|end|>' → logprob: -13.687036514282227
    9. 'dir' → logprob: -13.812036514282227
    10. '[in' → logprob: -13.937036514282227

Token 946: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -3.128163257315464e-07
    2. ' dir' → logprob: -15.5
    3. '(dir' → logprob: -17.625
    4. '	dir' → logprob: -19.125
    5. '   ' → logprob: -20.625
    6. 'dict' → logprob: -21.125
    7. '```' → logprob: -21.125
    8. '[' → logprob: -21.125
    9. 'Dir' → logprob: -22.0
    10. 'def' → logprob: -22.125

Token 947: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -8.77627644513268e-06
    2. 'edges' → logprob: -12.250008583068848
    3. 'Edges' → logprob: -13.125008583068848
    4. 'dir' → logprob: -13.625008583068848
    5. '[' → logprob: -15.500008583068848
    6. 'ed' → logprob: -15.875008583068848
    7. '```' → logprob: -16.125009536743164
    8. '_ed' → logprob: -16.250009536743164
    9. '_dir' → logprob: -16.375009536743164
    10. '_edge' → logprob: -17.500009536743164

Token 948: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -3.1424973713001236e-05
    2. 'A' → logprob: -10.375031471252441
    3. '```' → logprob: -17.625030517578125
    4. '[a' → logprob: -18.000030517578125
    5. '"A' → logprob: -18.375030517578125
    6. '[' → logprob: -18.625030517578125
    7. '(A' → logprob: -19.000030517578125
    8. '
' → logprob: -19.375030517578125
    9. 'def' → logprob: -19.500030517578125
    10. '   ' → logprob: -19.875030517578125

Token 949: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.1738702356815338
    2. ']' → logprob: -2.048870325088501
    3. ']:' → logprob: -3.673870325088501
    4. 'and' → logprob: -5.798870086669922
    5. ' and' → logprob: -7.173870086669922
    6. '               ' → logprob: -7.423870086669922
    7. ':
' → logprob: -8.173870086669922
    8. '           ' → logprob: -8.673870086669922
    9. '                   ' → logprob: -8.673870086669922
    10. ':' → logprob: -8.923870086669922

Token 950: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1324879378080368
    2. ' and' → logprob: -2.6324880123138428
    3. '                       ' → logprob: -3.1324880123138428
    4. 'and' → logprob: -5.257487773895264
    5. '               ' → logprob: -6.007487773895264
    6. '           ' → logprob: -7.507487773895264
    7. ' if' → logprob: -9.007488250732422
    8. '```' → logprob: -9.632488250732422
    9. '<|end|>' → logprob: -9.882488250732422
    10. 'if' → logprob: -10.382488250732422

Token 951: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005394434090703726
    2. ' if' → logprob: -5.880394458770752
    3. 'if' (adapté à ' if') → logprob: -6.005394458770752
    4. '                   ' → logprob: -9.255393981933594
    5. '       ' → logprob: -11.880393981933594
    6. '               ' → logprob: -12.130393981933594
    7. '           ' → logprob: -12.630393981933594
    8. '                      ' → logprob: -13.005393981933594
    9. '   ' → logprob: -13.255393981933594
    10. '                        ' → logprob: -13.505393981933594

Token 952: ' E' (ID: 457)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07955177873373032
    2. 'E' → logprob: -2.5795516967773438
    3. ' B' → logprob: -7.454551696777344
    4. ' E' → logprob: -9.704551696777344
    5. '   ' → logprob: -11.454551696777344
    6. 'b' → logprob: -12.579551696777344
    7. ' ' → logprob: -12.579551696777344
    8. '  ' → logprob: -14.079551696777344
    9. 'e' → logprob: -14.204551696777344
    10. '           ' → logprob: -14.454551696777344

Token 953: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002078503370285
    2. 'in' → logprob: -2.350207805633545
    3. ' ' → logprob: -15.350208282470703
    4. '[in' → logprob: -15.350208282470703
    5. '```' → logprob: -15.600208282470703
    6. 'In' → logprob: -15.600208282470703
    7. '[' → logprob: -15.725208282470703
    8. '
' → logprob: -16.475208282470703
    9. 'and' → logprob: -17.100208282470703
    10. '<|end|>' → logprob: -17.475208282470703

Token 954: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.03364893049001694
    2. ' dir' → logprob: -3.40864896774292
    3. '	dir' → logprob: -14.033648490905762
    4. '(dir' → logprob: -14.533648490905762
    5. '   ' → logprob: -14.783648490905762
    6. ' ' → logprob: -14.908648490905762
    7. 'dict' → logprob: -15.158648490905762
    8. '```' → logprob: -15.783648490905762
    9. '           ' → logprob: -15.908648490905762
    10. ' in' → logprob: -16.408649444580078

Token 955: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -7.896309739408025e-07
    2. 'edges' → logprob: -14.625000953674316
    3. 'Edges' → logprob: -15.500000953674316
    4. '```' → logprob: -17.125
    5. '_dir' → logprob: -17.375
    6. '_edge' → logprob: -17.625
    7. '_ed' → logprob: -18.125
    8. 'dir' → logprob: -19.25
    9. 'ed' → logprob: -19.5
    10. '_lines' → logprob: -19.625

Token 956: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889056205749512
    2. 'and' → logprob: -2.578890562057495
    3. '```' → logprob: -15.328890800476074
    4. 'in' → logprob: -15.703890800476074
    5. '                   ' → logprob: -15.828890800476074
    6. ' in' → logprob: -15.953890800476074
    7. '   ' → logprob: -16.578889846801758
    8. '           ' → logprob: -16.953889846801758
    9. '[' → logprob: -17.203889846801758
    10. '               ' → logprob: -17.953889846801758

Token 957: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.1888679839321412e-05
    2. ' B' → logprob: -11.125021934509277
    3. '   ' → logprob: -12.000021934509277
    4. 'E' → logprob: -15.500021934509277
    5. ' ' → logprob: -15.625021934509277
    6. '  ' → logprob: -15.875021934509277
    7. '           ' → logprob: -16.00002098083496
    8. 'b' → logprob: -16.62502098083496
    9. '    ' → logprob: -17.00002098083496
    10. '       ' → logprob: -17.37502098083496

Token 958: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01105300523340702
    2. 'in' → logprob: -4.511053085327148
    3. '[' → logprob: -12.886053085327148
    4. ' ' → logprob: -13.761053085327148
    5. '```' → logprob: -14.136053085327148
    6. '[in' → logprob: -14.511053085327148
    7. '   ' → logprob: -16.38605308532715
    8. ']' → logprob: -16.38605308532715
    9. '
' → logprob: -17.01105308532715
    10. 'In' → logprob: -17.01105308532715

Token 959: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0002613358374219388
    2. ' dir' → logprob: -8.250261306762695
    3. '(dir' → logprob: -17.500261306762695
    4. '	dir' → logprob: -18.375261306762695
    5. '   ' → logprob: -18.750261306762695
    6. '```' → logprob: -18.875261306762695
    7. ' ' → logprob: -19.250261306762695
    8. '[' → logprob: -19.750261306762695
    9. 'dict' → logprob: -20.500261306762695
    10. '           ' → logprob: -21.000261306762695

Token 960: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.3196130692958832
    2. 'dir' → logprob: -1.3196130990982056
    3. '_dir' → logprob: -5.694612979888916
    4. '[' → logprob: -6.444612979888916
    5. 'edges' → logprob: -7.069612979888916
    6. 'Edges' → logprob: -8.569613456726074
    7. '```' → logprob: -9.069613456726074
    8. ' dir' → logprob: -9.694613456726074
    9. '(dir' → logprob: -10.194613456726074
    10. '	dir' → logprob: -10.444613456726074

Token 961: '[E' (ID: 145915)
  Prédit: '[E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[E' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -12.000008583068848
    3. 'E' → logprob: -13.125008583068848
    4. '[A' → logprob: -14.750008583068848
    5. '[D' → logprob: -16.000009536743164
    6. 'dir' → logprob: -17.250009536743164
    7. '```' → logprob: -17.250009536743164
    8. '[e' → logprob: -17.375009536743164
    9. '(E' → logprob: -17.750009536743164
    10. '<E' → logprob: -17.875009536743164

Token 962: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.16481749713420868
    2. ']:' → logprob: -1.914817452430725
    3. ':
' → logprob: -6.4148173332214355
    4. ':' → logprob: -7.0398173332214355
    5. ']' → logprob: -7.0398173332214355
    6. '               ' → logprob: -8.039817810058594
    7. '[' → logprob: -8.539817810058594
    8. '']:
' → logprob: -8.914817810058594
    9. '                   ' → logprob: -9.039817810058594
    10. '```' → logprob: -9.539817810058594

Token 963: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007074289605952799
    2. ':
' → logprob: -8.000707626342773
    3. ':' → logprob: -8.500707626342773
    4. '                   ' → logprob: -9.875707626342773
    5. '```' → logprob: -10.125707626342773
    6. ':return' → logprob: -10.125707626342773
    7. '                      ' → logprob: -11.250707626342773
    8. '                     ' → logprob: -12.250707626342773
    9. '               ' → logprob: -12.375707626342773
    10. 'return' → logprob: -12.625707626342773

Token 964: ' return' (ID: 622)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2986682057380676
    2. '                       ' → logprob: -1.5486681461334229
    3. 'return' (adapté à ' return') → logprob: -3.673668146133423
    4. ' return' → logprob: -4.048668384552002
    5. '           ' → logprob: -6.423668384552002
    6. '               ' → logprob: -7.048668384552002
    7. '                               ' → logprob: -8.548667907714844
    8. '                   ' → logprob: -9.673667907714844
    9. '                          ' → logprob: -10.548667907714844
    10. '                        ' → logprob: -10.923667907714844

Token 965: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.165027217415627e-05
    2. ' False' → logprob: -10.750021934509277
    3. 'True' → logprob: -16.37502098083496
    4. '(False' → logprob: -18.50002098083496
    5. '_false' → logprob: -22.25002098083496
    6. 'F' → logprob: -22.37502098083496
    7. '=False' → logprob: -22.50002098083496
    8. 'false' → logprob: -22.62502098083496
    9. '```' → logprob: -22.75002098083496
    10. '
' → logprob: -23.87502098083496

Token 966: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.004696090007201e-05
    2. '       ' → logprob: -9.750069618225098
    3. '               ' → logprob: -11.750069618225098
    4. 'return' → logprob: -13.125069618225098
    5. '   ' → logprob: -14.625069618225098
    6. '                   ' → logprob: -14.875069618225098
    7. '          ' → logprob: -14.875069618225098
    8. '```' → logprob: -15.750069618225098
    9. '		' → logprob: -16.000070571899414
    10. ' return' → logprob: -16.125070571899414

Token 967: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004657137673348188
    2. '       ' → logprob: -5.37965726852417
    3. 'return' → logprob: -11.004656791687012
    4. '   ' → logprob: -11.254656791687012
    5. '               ' → logprob: -12.504656791687012
    6. '	       ' → logprob: -13.754656791687012
    7. '		' → logprob: -13.879656791687012
    8. '          ' → logprob: -14.254656791687012
    9. '                   ' → logprob: -15.629656791687012
    10. '	   ' → logprob: -16.004657745361328

Token 968: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008570956997573376
    2. '           ' → logprob: -5.383571147918701
    3. '   ' → logprob: -5.633571147918701
    4. 'return' (adapté à ' return') → logprob: -8.008570671081543
    5. ' return' → logprob: -10.758570671081543
    6. '
' → logprob: -12.133570671081543
    7. '               ' → logprob: -12.758570671081543
    8. '        
' → logprob: -13.758570671081543
    9. '```' → logprob: -13.883570671081543
    10. '     ' → logprob: -14.383570671081543

Token 969: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.10034641623497009
    2. 'True' → logprob: -2.350346326828003
    3. ' False' → logprob: -9.350346565246582
    4. 'False' → logprob: -9.850346565246582
    5. ' ' → logprob: -16.475345611572266
    6. '(True' → logprob: -17.225345611572266
    7. '   ' → logprob: -19.725345611572266
    8. ' ' → logprob: -20.350345611572266
    9. '=True' → logprob: -20.475345611572266
    10. ' None' → logprob: -20.850345611572266

Token 970: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015332828275859356
    2. '<|end|>' → logprob: -4.8903326988220215
    3. '
' → logprob: -5.0153326988220215
    4. '        
' → logprob: -7.2653326988220215
    5. '<|end|>' → logprob: -9.14033317565918
    6. '   ' → logprob: -9.64033317565918
    7. '           ' → logprob: -9.89033317565918
    8. '    
' → logprob: -10.64033317565918
    9. '  
' → logprob: -11.01533317565918
    10. ' for' → logprob: -11.26533317565918

Token 971: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14633361995220184
    2. '
' → logprob: -2.021333694458008
    3. '        
' → logprob: -6.771333694458008
    4. ' for' → logprob: -7.021333694458008
    5. '   ' → logprob: -7.271333694458008
    6. 'for' → logprob: -7.521333694458008
    7. '<|end|>' → logprob: -9.021333694458008
    8. '    
' → logprob: -9.146333694458008
    9. '  
' → logprob: -10.646333694458008
    10. '           ' → logprob: -10.646333694458008

Token 972: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12083546817302704
    2. 'for' → logprob: -2.245835542678833
    3. ' for' → logprob: -4.870835304260254
    4. '   ' → logprob: -8.620835304260254
    5. '
' → logprob: -9.620835304260254
    6. 'import' → logprob: -10.870835304260254
    7. '        
' → logprob: -10.995835304260254
    8. '```' → logprob: -11.120835304260254
    9. 'from' → logprob: -11.745835304260254
    10. '	for' → logprob: -12.745835304260254

Token 973: ' build' (ID: 3024)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002530714264139533
    2. '       ' → logprob: -6.127530574798584
    3. ' for' → logprob: -8.002531051635742
    4. '   ' → logprob: -11.752531051635742
    5. 'from' → logprob: -14.127531051635742
    6. 'equal' → logprob: -14.127531051635742
    7. '```' → logprob: -14.752531051635742
    8. '           ' → logprob: -15.002531051635742
    9. '#' → logprob: -15.127531051635742
    10. '
' → logprob: -15.502531051635742

Token 974: ' equal' (ID: 12629)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -1.0247173309326172
    2. 'equal' → logprob: -1.1497173309326172
    3. 'for' → logprob: -2.024717330932617
    4. 'from' → logprob: -2.149717330932617
    5. ' equal' → logprob: -3.774717330932617
    6. ' pairs' → logprob: -3.899717330932617
    7. 'edges' → logprob: -4.274717330932617
    8. 'adj' → logprob: -5.524717330932617
    9. ' for' → logprob: -5.774717330932617
    10. '   ' → logprob: -6.024717330932617

Token 975: ' strength' (ID: 9386)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.31778231263160706
    2. ' =' → logprob: -1.5677822828292847
    3. '_st' → logprob: -3.817782402038574
    4. '=' → logprob: -4.317782402038574
    5. 'pairs' → logprob: -4.692782402038574
    6. '_sets' → logprob: -5.317782402038574
    7. '_rel' → logprob: -6.067782402038574
    8. '_keys' → logprob: -6.192782402038574
    9. '       ' → logprob: -6.192782402038574
    10. '_edges' → logprob: -6.567782402038574

Token 976: ' sets' (ID: 11982)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.3529149293899536
    2. 'for' → logprob: -1.6029149293899536
    3. '_pairs' → logprob: -2.852914810180664
    4. '       ' → logprob: -4.852914810180664
    5. 'edges' → logprob: -5.102914810180664
    6. '   ' → logprob: -5.602914810180664
    7. 'relations' → logprob: -5.727914810180664
    8. 'sets' → logprob: -6.102914810180664
    9. '=' → logprob: -6.477914810180664
    10. 'graph' → logprob: -6.477914810180664

Token 977: '
' (ID: 198)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.14658516645431519
    2. ' equal' → logprob: -2.89658522605896
    3. 'from' → logprob: -3.39658522605896
    4. 'groups' → logprob: -4.271584987640381
    5. '       ' → logprob: -4.271584987640381
    6. ' from' → logprob: -5.396584987640381
    7. 'sets' → logprob: -5.646584987640381
    8. 'for' → logprob: -6.021584987640381
    9. ' groups' → logprob: -6.521584987640381
    10. ' sets' → logprob: -6.896584987640381

Token 978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2342555671930313
    2. 'for' → logprob: -2.23425555229187
    3. ' for' → logprob: -2.73425555229187
    4. '
' → logprob: -3.73425555229187
    5. '        
' → logprob: -5.234255790710449
    6. '```' → logprob: -5.734255790710449
    7. 'pairs' → logprob: -6.609255790710449
    8. ' pairs' → logprob: -7.359255790710449
    9. 'from' → logprob: -7.359255790710449
    10. ' sets' → logprob: -8.23425579071045

Token 979: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05206194519996643
    2. 'from' → logprob: -4.052062034606934
    3. ' for' → logprob: -4.177062034606934
    4. 'equal' → logprob: -4.552062034606934
    5. '       ' → logprob: -5.052062034606934
    6. ' from' → logprob: -8.302062034606934
    7. ' equal' → logprob: -8.302062034606934
    8. 'import' → logprob: -9.052062034606934
    9. 'all' → logprob: -9.302062034606934
    10. 'pairs' → logprob: -9.302062034606934

Token 980: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02360822819173336
    2. 'from' → logprob: -4.023608207702637
    3. ' for' → logprob: -5.898608207702637
    4. 'equal' → logprob: -6.398608207702637
    5. 'import' → logprob: -7.773608207702637
    6. 'pairs' → logprob: -8.273608207702637
    7. '   ' → logprob: -9.273608207702637
    8. ' from' → logprob: -9.898608207702637
    9. 'visited' → logprob: -10.523608207702637
    10. 'street' → logprob: -10.648608207702637

Token 981: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0129013061523438
    2. 'st' → logprob: -1.5129013061523438
    3. ' st' → logprob: -2.3879013061523438
    4. 's' → logprob: -2.6379013061523438
    5. 'ns' → logprob: -2.6379013061523438
    6. ' i' → logprob: -2.7629013061523438
    7. ' s' → logprob: -3.1379013061523438
    8. ' ns' → logprob: -3.8879013061523438
    9. 'dir' → logprob: -4.012901306152344
    10. 'd' → logprob: -5.137901306152344

Token 982: ' pairs' (ID: 24702)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0279195308685303
    2. 's' → logprob: -1.2779195308685303
    3. ' st' → logprob: -1.6529195308685303
    4. 'A' → logprob: -2.7779195308685303
    5. ' i' → logprob: -3.1529195308685303
    6. 'i' → logprob: -3.6529195308685303
    7. 'st' → logprob: -3.9029195308685303
    8. ' A' → logprob: -4.152919769287109
    9. '   ' → logprob: -6.652919769287109
    10. 'same' → logprob: -7.277919769287109

Token 983: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3266395628452301
    2. '       ' → logprob: -2.2016396522521973
    3. '(st' → logprob: -2.3266396522521973
    4. 'in' → logprob: -3.4516396522521973
    5. ' of' → logprob: -3.9516396522521973
    6. ' (' → logprob: -5.701639652252197
    7. 'of' → logprob: -5.951639652252197
    8. '   ' → logprob: -6.076639652252197
    9. '           ' → logprob: -6.576639652252197
    10. '(ns' → logprob: -6.826639652252197

Token 984: ' ns' (ID: 18343)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.9617955684661865
    2. 'ns' → logprob: -1.2117955684661865
    3. ' same' → logprob: -2.2117955684661865
    4. ' ns' → logprob: -2.4617955684661865
    5. '[' → logprob: -3.2117955684661865
    6. ' range' → logprob: -3.4617955684661865
    7. 'range' → logprob: -3.9617955684661865
    8. '(ns' → logprob: -4.086795806884766
    9. '[s' → logprob: -5.336795806884766
    10. ' [' → logprob: -6.336795806884766

Token 985: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.006735976319760084
    2. '       ' → logprob: -6.006735801696777
    3. 'for' → logprob: -6.881735801696777
    4. '   ' → logprob: -7.131735801696777
    5. '_s' → logprob: -7.256735801696777
    6. '_t' → logprob: -7.506735801696777
    7. 't' → logprob: -7.631735801696777
    8. 'st' → logprob: -8.256735801696777
    9. 'stre' → logprob: -8.381735801696777
    10. 's' → logprob: -10.256735801696777

Token 986: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.014324271120131016
    2. 'stre' → logprob: -4.889324188232422
    3. '_st' → logprob: -6.014324188232422
    4. '_' → logprob: -6.764324188232422
    5. 'reet' → logprob: -7.264324188232422
    6. 'sets' → logprob: -7.389324188232422
    7. '_sets' → logprob: -7.389324188232422
    8. '_re' → logprob: -9.014324188232422
    9. 'e' → logprob: -9.014324188232422
    10. 'rets' → logprob: -9.014324188232422

Token 987: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.2089088410139084
    2. 're' → logprob: -1.8339087963104248
    3. 'stre' → logprob: -4.458909034729004
    4. '_st' → logprob: -5.458909034729004
    5. 'rets' → logprob: -5.458909034729004
    6. 'sets' → logprob: -5.583909034729004
    7. 'et' → logprob: -6.333909034729004
    8. '_sets' → logprob: -7.333909034729004
    9. 'e' → logprob: -7.458909034729004
    10. '_' → logprob: -7.583909034729004

Token 988: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03177714720368385
    2. ':' → logprob: -4.156777381896973
    3. ',' → logprob: -5.281777381896973
    4. 'for' → logprob: -5.656777381896973
    5. 'from' → logprob: -5.906777381896973
    6. 'import' → logprob: -6.656777381896973
    7. ':
' → logprob: -6.906777381896973
    8. '
' → logprob: -7.156777381896973
    9. ' for' → logprob: -7.531777381896973
    10. ' from' → logprob: -8.781777381896973

Token 989: ' in' (ID: 306)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.05590682476758957
    2. ' ew' → logprob: -2.9309067726135254
    3. 'for' → logprob: -8.055907249450684
    4. '   ' → logprob: -8.055907249450684
    5. 'ns' → logprob: -9.055907249450684
    6. '       ' → logprob: -9.680907249450684
    7. 'ow' → logprob: -10.180907249450684
    8. '
' → logprob: -10.180907249450684
    9. ' for' → logprob: -10.305907249450684
    10. 'ews' → logprob: -10.680907249450684

Token 990: ' ew' (ID: 64459)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.00543367350474
    2. ' ew' → logprob: -5.505433559417725
    3. 'ns' → logprob: -6.755433559417725
    4. '   ' → logprob: -9.380434036254883
    5. '[' → logprob: -10.255434036254883
    6. 'ews' → logprob: -10.755434036254883
    7. ' ns' → logprob: -11.005434036254883
    8. ' ' → logprob: -12.255434036254883
    9. '       ' → logprob: -12.505434036254883
    10. '
' → logprob: -12.630434036254883

Token 991: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.00028529210248962045
    2. 'stre' → logprob: -9.000285148620605
    3. '_' → logprob: -10.250285148620605
    4. '_s' → logprob: -10.375285148620605
    5. 'st' → logprob: -10.625285148620605
    6. 'for' → logprob: -10.750285148620605
    7. '_dir' → logprob: -11.125285148620605
    8. 'street' → logprob: -11.375285148620605
    9. 'dir' → logprob: -11.875285148620605
    10. 's' → logprob: -12.500285148620605

Token 992: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0062842522747814655
    2. 'e' → logprob: -5.506284236907959
    3. '_' → logprob: -7.006284236907959
    4. 'stre' → logprob: -8.006284713745117
    5. 'reet' → logprob: -8.631284713745117
    6. '_st' → logprob: -8.756284713745117
    7. '[' → logprob: -9.256284713745117
    8. 'ree' → logprob: -9.256284713745117
    9. '_re' → logprob: -9.506284713745117
    10. '_e' → logprob: -9.881284713745117

Token 993: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.47898828983306885
    2. 'e' → logprob: -0.9789882898330688
    3. 're' → logprob: -5.603988170623779
    4. 'ects' → logprob: -7.978988170623779
    5. 'et' → logprob: -9.103988647460938
    6. 'sets' → logprob: -9.353988647460938
    7. '```' → logprob: -9.728988647460938
    8. '_' → logprob: -9.728988647460938
    9. '   ' → logprob: -9.853988647460938
    10. 's' → logprob: -10.103988647460938

Token 994: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018768439069390297
    2. 'from' → logprob: -4.268768310546875
    3. 'import' → logprob: -6.018768310546875
    4. 'for' → logprob: -6.518768310546875
    5. ' for' → logprob: -8.143768310546875
    6. ' from' → logprob: -8.518768310546875
    7. '
' → logprob: -8.893768310546875
    8. '   ' → logprob: -10.768768310546875
    9. '```' → logprob: -11.143768310546875
    10. ',' → logprob: -11.393768310546875

Token 995: ' check' (ID: 2371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042457323521375656
    2. ' from' → logprob: -3.917457342147827
    3. ' for' → logprob: -4.042457103729248
    4. 'import' → logprob: -6.542457103729248
    5. 'from' → logprob: -6.667457103729248
    6. ' import' → logprob: -7.417457103729248
    7. '
' → logprob: -7.917457103729248
    8. '```' → logprob: -8.917457580566406
    9. '   ' → logprob: -9.417457580566406
    10. 'for' → logprob: -9.542457580566406

Token 996: ' equal' (ID: 12629)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16350340843200684
    2. '       ' → logprob: -2.788503408432007
    3. ' for' → logprob: -2.788503408432007
    4. '```' → logprob: -4.038503646850586
    5. 'from' → logprob: -5.038503646850586
    6. 'import' → logprob: -7.163503646850586
    7. '``' → logprob: -7.413503646850586
    8. 'ns' → logprob: -7.663503646850586
    9. '   ' → logprob: -7.788503646850586
    10. '           ' → logprob: -7.788503646850586

Token 997: ' strength' (ID: 9386)
  Prédit: 'strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strength' → logprob: -0.8130900263786316
    2. '_strength' → logprob: -1.5630900859832764
    3. '       ' → logprob: -2.0630900859832764
    4. ' strength' → logprob: -2.4380900859832764
    5. 'for' → logprob: -2.6880900859832764
    6. '   ' → logprob: -4.313089847564697
    7. '_st' → logprob: -4.438089847564697
    8. ' for' → logprob: -4.438089847564697
    9. '           ' → logprob: -5.438089847564697
    10. '  ' → logprob: -5.688089847564697

Token 998: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048437006771564484
    2. '
' → logprob: -3.6734371185302734
    3. 'for' → logprob: -4.298437118530273
    4. 'from' → logprob: -5.548437118530273
    5. ' for' → logprob: -5.798437118530273
    6. '```' → logprob: -7.423437118530273
    7. 'import' → logprob: -8.048437118530273
    8. '        
' → logprob: -8.923437118530273
    9. ' from' → logprob: -8.923437118530273
    10. '   ' → logprob: -8.923437118530273

Token 999: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006311862962320447
    2. '```' → logprob: -8.125631332397461
    3. '
' → logprob: -8.750631332397461
    4. '        
' → logprob: -9.625631332397461
    5. 'for' → logprob: -10.375631332397461
    6. 'from' → logprob: -10.375631332397461
    7. ' for' → logprob: -10.875631332397461
    8. 'import' → logprob: -11.125631332397461
    9. '<|end|>' → logprob: -12.125631332397461
    10. '           ' → logprob: -12.625631332397461

Token 1000: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05303342640399933
    2. 'from' → logprob: -3.3030333518981934
    3. 'for' → logprob: -4.428033351898193
    4. 'import' → logprob: -6.553033351898193
    5. ' for' → logprob: -7.178033351898193
    6. ' from' → logprob: -7.803033351898193
    7. '
' → logprob: -8.553033828735352
    8. '```' → logprob: -9.053033828735352
    9. '        
' → logprob: -10.928033828735352
    10. '   ' → logprob: -11.303033828735352

Token 1001: ' store' (ID: 4897)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40352267026901245
    2. 'from' → logprob: -1.5285227298736572
    3. 'for' → logprob: -2.2785227298736572
    4. 'import' → logprob: -4.653522491455078
    5. ' for' → logprob: -6.278522491455078
    6. ' from' → logprob: -6.653522491455078
    7. '   ' → logprob: -11.153522491455078
    8. '```' → logprob: -11.153522491455078
    9. '
' → logprob: -11.278522491455078
    10. '        
' → logprob: -12.278522491455078

Token 1002: ' relations' (ID: 5523)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2673899233341217
    2. ' for' → logprob: -1.8923898935317993
    3. 'equal' → logprob: -4.14238977432251
    4. '       ' → logprob: -4.26738977432251
    5. 'pairs' → logprob: -4.26738977432251
    6. ' equal' → logprob: -5.01738977432251
    7. 'keys' → logprob: -5.14238977432251
    8. ' pairs' → logprob: -5.14238977432251
    9. ' keys' → logprob: -5.39238977432251
    10. 'True' → logprob: -6.14238977432251

Token 1003: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06485462933778763
    2. 'from' → logprob: -3.064854621887207
    3. 'for' → logprob: -4.939854621887207
    4. 'import' → logprob: -5.439854621887207
    5. '
' → logprob: -5.939854621887207
    6. ' from' → logprob: -6.814854621887207
    7. ' for' → logprob: -7.189854621887207
    8. '        
' → logprob: -9.939854621887207
    9. '   ' → logprob: -10.314854621887207
    10. 'equal' → logprob: -10.689854621887207

Token 1004: ' union' (ID: 22208)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.0007813957636244595
    2. 'graph' → logprob: -7.500781536102295
    3. ' equal' → logprob: -8.625781059265137
    4. 'default' → logprob: -10.500781059265137
    5. 'for' → logprob: -12.375781059265137
    6. '[]' → logprob: -12.750781059265137
    7. 'equ' → logprob: -13.000781059265137
    8. '(equal' → logprob: -13.125781059265137
    9. '{' → logprob: -13.375781059265137
    10. '=' → logprob: -13.625781059265137

Token 1005: '-find' (ID: 168817)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.020533487200737
    2. '_find' → logprob: -4.020533561706543
    3. '-find' → logprob: -6.145533561706543
    4. 'Find' → logprob: -9.145533561706543
    5. 'import' → logprob: -10.270533561706543
    6. '   ' → logprob: -10.645533561706543
    7. '
' → logprob: -10.895533561706543
    8. '```' → logprob: -11.020533561706543
    9. 'from' → logprob: -11.645533561706543
    10. ' find' → logprob: -11.770533561706543

Token 1006: ' structure' (ID: 8866)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.18733040988445282
    2. '
' → logprob: -2.187330484390259
    3. 'import' → logprob: -3.437330484390259
    4. 'from' → logprob: -4.43733024597168
    5. '       ' → logprob: -4.56233024597168
    6. '```' → logprob: -6.56233024597168
    7. ' class' → logprob: -6.93733024597168
    8. '        
' → logprob: -7.56233024597168
    9. '   ' → logprob: -7.93733024597168
    10. '#' → logprob: -7.93733024597168

Token 1007: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9055708050727844
    2. '
' → logprob: -1.2805707454681396
    3. 'import' → logprob: -1.4055707454681396
    4. 'from' → logprob: -3.7805707454681396
    5. ' class' → logprob: -3.9055707454681396
    6. '       ' → logprob: -3.9055707454681396
    7. '```' → logprob: -5.155570983886719
    8. '        
' → logprob: -7.030570983886719
    9. 'union' → logprob: -7.280570983886719
    10. ' from' → logprob: -7.280570983886719

Token 1008: ' equal' (ID: 12629)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.27376851439476013
    2. 'parent' → logprob: -1.8987685441970825
    3. 'parents' → logprob: -2.898768424987793
    4. 'union' → logprob: -4.898768424987793
    5. 'the' → logprob: -5.398768424987793
    6. 'finding' → logprob: -5.898768424987793
    7. 'equal' → logprob: -5.898768424987793
    8. ' parent' → logprob: -6.023768424987793
    9. ' class' → logprob: -6.023768424987793
    10. '```' → logprob: -6.398768424987793

Token 1009: ' strength' (ID: 9386)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.31762632727622986
    2. 'class' → logprob: -1.4426263570785522
    3. 'parents' → logprob: -3.9426262378692627
    4. '_parent' → logprob: -5.192626476287842
    5. 'ion' → logprob: -5.442626476287842
    6. 'union' → logprob: -6.317626476287842
    7. ' parent' → logprob: -6.567626476287842
    8. '```' → logprob: -7.442626476287842
    9. 'import' → logprob: -7.817626476287842
    10. '   ' → logprob: -7.942626476287842

Token 1010: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5927784442901611
    2. 'class' → logprob: -0.9677784442901611
    3. 'import' → logprob: -3.217778444290161
    4. '       ' → logprob: -4.467778205871582
    5. '```' → logprob: -4.967778205871582
    6. ' class' → logprob: -5.217778205871582
    7. 'from' → logprob: -6.342778205871582
    8. '   ' → logprob: -7.467778205871582
    9. '        
' → logprob: -7.967778205871582
    10. 'union' → logprob: -8.467778205871582

Token 1011: '       ' (ID: 309)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5373819470405579
    2. 'import' → logprob: -1.787381887435913
    3. '
' → logprob: -2.162381887435913
    4. '       ' → logprob: -3.162381887435913
    5. 'from' → logprob: -3.162381887435913
    6. '```' → logprob: -3.162381887435913
    7. ' class' → logprob: -5.787382125854492
    8. '``' → logprob: -6.662382125854492
    9. '        
' → logprob: -7.537382125854492
    10. '   ' → logprob: -7.537382125854492

Token 1012: ' parent' (ID: 5980)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03866800293326378
    2. 'import' → logprob: -3.788667917251587
    3. '       ' → logprob: -4.788668155670166
    4. '   ' → logprob: -5.788668155670166
    5. 'parent' (adapté à ' parent') → logprob: -6.288668155670166
    6. 'from' → logprob: -7.038668155670166
    7. '```' → logprob: -7.038668155670166
    8. ' class' → logprob: -8.913667678833008
    9. 'union' → logprob: -8.913667678833008
    10. '
' → logprob: -11.538667678833008

Token 1013: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693503499031067
    2. ' =' → logprob: -2.1269350051879883
    3. '={}' → logprob: -12.501935005187988
    4. '[' → logprob: -14.251935005187988
    5. 's' → logprob: -14.501935005187988
    6. '=[]' → logprob: -14.751935005187988
    7. '=[' → logprob: -15.001935005187988
    8. '_' → logprob: -15.376935005187988
    9. '   ' → logprob: -15.751935005187988
    10. ',' → logprob: -15.876935005187988

Token 1014: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.3542594611644745
    2. '{' → logprob: -1.6042594909667969
    3. '{}' → logprob: -2.354259490966797
    4. ' dict' → logprob: -6.104259490966797
    5. ' {' → logprob: -10.479259490966797
    6. '{}
' → logprob: -10.854259490966797
    7. ' {}' → logprob: -10.854259490966797
    8. '(dict' → logprob: -13.229259490966797
    9. '{}

' → logprob: -14.104259490966797
    10. '{
' → logprob: -14.479259490966797

Token 1015: '()
' (ID: 1234)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9447997808456421
    2. ' =' → logprob: -1.444799780845642
    3. '<|end|>' → logprob: -1.944799780845642
    4. '()' → logprob: -2.3197999000549316
    5. '=' → logprob: -3.0697999000549316
    6. ')' → logprob: -3.5697999000549316
    7. '()
' → logprob: -3.9447999000549316
    8. '   ' → logprob: -4.569799900054932
    9. ',' → logprob: -5.319799900054932
    10. '<|end|>' → logprob: -5.444799900054932

Token 1016: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007008521351963282
    2. '       ' → logprob: -5.0070085525512695
    3. '   ' → logprob: -8.25700855255127
    4. ' def' → logprob: -10.63200855255127
    5. '
' → logprob: -12.13200855255127
    6. '           ' → logprob: -13.13200855255127
    7. '```' → logprob: -13.25700855255127
    8. 'for' → logprob: -15.63200855255127
    9. '	def' → logprob: -15.63200855255127
    10. '        
' → logprob: -17.382007598876953

Token 1017: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0206720617134124e-05
    2. '       ' → logprob: -11.87501049041748
    3. ' def' → logprob: -13.75001049041748
    4. 'for' → logprob: -14.00001049041748
    5. '
' → logprob: -14.50001049041748
    6. 'rank' → logprob: -14.75001049041748
    7. '   ' → logprob: -14.87501049041748
    8. '```' → logprob: -16.250009536743164
    9. '           ' → logprob: -18.250009536743164
    10. '	def' → logprob: -19.500009536743164

Token 1018: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.3132862150669098
    2. ' find' → logprob: -1.3132861852645874
    3. 'parent' → logprob: -11.188285827636719
    4. ' parent' → logprob: -12.688285827636719
    5. '_find' → logprob: -12.938285827636719
    6. '   ' → logprob: -13.313285827636719
    7. 'p' → logprob: -14.438285827636719
    8. 'f' → logprob: -14.813285827636719
    9. '	find' → logprob: -14.938285827636719
    10. '
' → logprob: -15.188285827636719

Token 1019: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0499502457678318
    2. '(u' → logprob: -3.299950361251831
    3. '(s' → logprob: -4.549950122833252
    4. '(' → logprob: -7.424950122833252
    5. '(a' → logprob: -8.54995059967041
    6. '(p' → logprob: -8.67495059967041
    7. '(parent' → logprob: -9.29995059967041
    8. '_parent' → logprob: -9.54995059967041
    9. 'parent' → logprob: -9.92495059967041
    10. '(token' → logprob: -10.67495059967041

Token 1020: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34951409697532654
    2. '):
' → logprob: -1.349514126777649
    3. '(x' → logprob: -3.3495140075683594
    4. ':' → logprob: -8.22451400756836
    5. ')' → logprob: -9.34951400756836
    6. '):
' → logprob: -10.47451400756836
    7. ':
' → logprob: -10.47451400756836
    8. '():' → logprob: -10.59951400756836
    9. '():
' → logprob: -10.72451400756836
    10. '(' → logprob: -11.34951400756836

Token 1021: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32189127802848816
    2. 'parent' → logprob: -2.0718913078308105
    3. ' parent' → logprob: -2.5718913078308105
    4. '       ' → logprob: -3.4468913078308105
    5. ' x' → logprob: -3.9468913078308105
    6. '(parent' → logprob: -5.0718913078308105
    7. ' ' → logprob: -6.0718913078308105
    8. 'x' → logprob: -6.4468913078308105
    9. '(
' → logprob: -6.5718913078308105
    10. '    
' → logprob: -6.8218913078308105

Token 1022: ' while' (ID: 2049)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.08934759348630905
    2. ' parent' → logprob: -2.9643476009368896
    3. 'x' → logprob: -3.8393476009368896
    4. '(' → logprob: -5.5893473625183105
    5. ' x' → logprob: -5.7143473625183105
    6. '(
' → logprob: -5.9643473625183105
    7. '(parent' → logprob: -6.9643473625183105
    8. '   ' → logprob: -7.8393473625183105
    9. 'if' → logprob: -8.339347839355469
    10. ' (' → logprob: -8.714347839355469

Token 1023: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0019388694781810045
    2. ' parent' → logprob: -6.251938819885254
    3. 'x' → logprob: -11.501938819885254
    4. '(parent' → logprob: -17.00193977355957
    5. ' x' → logprob: -17.25193977355957
    6. '	parent' → logprob: -18.87693977355957
    7. '_parent' → logprob: -21.50193977355957
    8. 'Parent' → logprob: -21.62693977355957
    9. '-parent' → logprob: -22.12693977355957
    10. 'paren' → logprob: -22.12693977355957

Token 1024: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0052634067833423615
    2. '.get' → logprob: -5.255263328552246
    3. 'x' → logprob: -11.505263328552246
    4. '.setdefault' → logprob: -11.630263328552246
    5. '[' → logprob: -11.880263328552246
    6. 'get' → logprob: -14.130263328552246
    7. '```' → logprob: -14.380263328552246
    8. '[
' → logprob: -14.505263328552246
    9. '[parent' → logprob: -14.505263328552246
    10. '(x' → logprob: -14.880263328552246

Token 1025: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2640119791030884
    2. ' !=' → logprob: -1.6390119791030884
    3. '[x' → logprob: -3.389011859893799
    4. ']!=' → logprob: -5.889011859893799
    5. ')!=' → logprob: -7.264011859893799
    6. '.setdefault' → logprob: -8.264012336730957
    7. '.get' → logprob: -9.264012336730957
    8. '```' → logprob: -9.514012336730957
    9. '!==' → logprob: -9.764012336730957
    10. '()!=' → logprob: -10.389012336730957

Token 1026: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.02060133032500744
    2. ' !=' → logprob: -3.895601272583008
    3. ']!=' → logprob: -10.895601272583008
    4. '!=(' → logprob: -11.645601272583008
    5. '()!=' → logprob: -12.020601272583008
    6. ')!=' → logprob: -12.145601272583008
    7. '!=-' → logprob: -12.395601272583008
    8. ' is' → logprob: -12.520601272583008
    9. '!='' → logprob: -12.645601272583008
    10. '!==' → logprob: -12.645601272583008

Token 1027: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07890697568655014
    2. 'parent' → logprob: -2.578907012939453
    3. ' x' → logprob: -11.578907012939453
    4. ' parent' → logprob: -11.828907012939453
    5. '   ' → logprob: -15.828907012939453
    6. '(parent' → logprob: -16.203907012939453
    7. '[parent' → logprob: -16.453907012939453
    8. '
' → logprob: -16.703907012939453
    9. '	parent' → logprob: -17.078907012939453
    10. '.parent' → logprob: -17.453907012939453

Token 1028: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07232577353715897
    2. ':' → logprob: -2.6973257064819336
    3. '):
' → logprob: -6.322325706481934
    4. ':return' → logprob: -8.572325706481934
    5. '           ' → logprob: -9.072325706481934
    6. ' and' → logprob: -9.322325706481934
    7. '):' → logprob: -9.697325706481934
    8. '               ' → logprob: -10.197325706481934
    9. '():
' → logprob: -10.947325706481934
    10. '   ' → logprob: -10.947325706481934

Token 1029: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012293596751987934
    2. ':
' → logprob: -5.762293815612793
    3. '           ' → logprob: -5.887293815612793
    4. ' return' → logprob: -6.262293815612793
    5. '):
' → logprob: -7.012293815612793
    6. ':' → logprob: -7.137293815612793
    7. '   ' → logprob: -7.137293815612793
    8. '       ' → logprob: -7.387293815612793
    9. ':return' → logprob: -7.887293815612793
    10. 'return' → logprob: -8.387293815612793

Token 1030: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.38864970207214355
    2. 'x' → logprob: -1.8886497020721436
    3. '               ' → logprob: -2.1386497020721436
    4. ' parent' → logprob: -3.2636497020721436
    5. ' x' → logprob: -4.513649940490723
    6. '           ' → logprob: -5.763649940490723
    7. '   ' → logprob: -8.388649940490723
    8. '                   ' → logprob: -8.638649940490723
    9. '.parent' → logprob: -10.138649940490723
    10. '	parent' → logprob: -10.138649940490723

Token 1031: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.011208505369722843
    2. 'x' → logprob: -4.511208534240723
    3. '=' → logprob: -9.636208534240723
    4. ' =' → logprob: -10.386208534240723
    5. '[' → logprob: -10.636208534240723
    6. '=x' → logprob: -11.636208534240723
    7. '(x' → logprob: -12.136208534240723
    8. ' x' → logprob: -12.136208534240723
    9. '_x' → logprob: -12.261208534240723
    10. '	x' → logprob: -12.261208534240723

Token 1032: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1568298488855362
    2. '=' → logprob: -2.156829833984375
    3. ']=' → logprob: -3.531829833984375
    4. ' =' → logprob: -8.531829833984375
    5. '=
' → logprob: -13.156829833984375
    6. '[x' → logprob: -13.156829833984375
    7. '[' → logprob: -13.281829833984375
    8. ' ]' → logprob: -13.531829833984375
    9. '=x' → logprob: -14.031829833984375
    10. '   ' → logprob: -14.281829833984375

Token 1033: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. '=
' → logprob: -18.648244857788086
    4. ' ' → logprob: -19.023244857788086
    5. '＝' → logprob: -19.898244857788086
    6. '=

' → logprob: -19.898244857788086
    7. '.=' → logprob: -20.023244857788086
    8. ')' → logprob: -20.523244857788086
    9. '=}' → logprob: -21.148244857788086
    10. ')=' → logprob: -21.398244857788086

Token 1034: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.676292231422849e-05
    2. ' parent' → logprob: -11.000017166137695
    3. 'find' → logprob: -18.500017166137695
    4. '           ' → logprob: -19.375017166137695
    5. '   ' → logprob: -19.750017166137695
    6. '	parent' → logprob: -20.625017166137695
    7. '(parent' → logprob: -21.125017166137695
    8. '       ' → logprob: -21.375017166137695
    9. ' ' → logprob: -21.500017166137695
    10. 'paren' → logprob: -22.375017166137695

Token 1035: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -5.240481914370321e-05
    2. 'parent' → logprob: -9.875052452087402
    3. '[' → logprob: -14.750052452087402
    4. '(parent' → logprob: -15.625052452087402
    5. '	parent' → logprob: -16.250051498413086
    6. '[
' → logprob: -17.125051498413086
    7. '.parent' → logprob: -17.250051498413086
    8. ' parent' → logprob: -17.375051498413086
    9. '[player' → logprob: -17.500051498413086
    10. ',parent' → logprob: -17.875051498413086

Token 1036: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.001931970240548253
    2. 'x' → logprob: -6.251932144165039
    3. '{x' → logprob: -13.251932144165039
    4. '[parent' → logprob: -14.376932144165039
    5. '```' → logprob: -14.751932144165039
    6. ']' → logprob: -15.376932144165039
    7. '(x' → logprob: -15.751932144165039
    8. ' x' → logprob: -16.12693214416504
    9. '	x' → logprob: -16.50193214416504
    10. 'parent' → logprob: -16.75193214416504

Token 1037: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08867474645376205
    2. '[x' → logprob: -3.088674783706665
    3. ']]' → logprob: -3.338674783706665
    4. 'x' → logprob: -5.588674545288086
    5. ']
' → logprob: -9.963674545288086
    6. ']]
' → logprob: -11.338674545288086
    7. ' ]' → logprob: -13.213674545288086
    8. '(x' → logprob: -13.213674545288086
    9. '```' → logprob: -13.338674545288086
    10. ']]]' → logprob: -13.463674545288086

Token 1038: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14240369200706482
    2. '           ' → logprob: -2.1424036026000977
    3. ')' → logprob: -5.267403602600098
    4. '       ' → logprob: -5.642403602600098
    5. 'return' → logprob: -6.142403602600098
    6. ')
' → logprob: -7.267403602600098
    7. '
' → logprob: -7.392403602600098
    8. ' return' → logprob: -7.642403602600098
    9. '                   ' → logprob: -7.642403602600098
    10. '   ' → logprob: -8.267403602600098

Token 1039: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.013672458939254284
    2. ' x' → logprob: -4.638672351837158
    3. 'return' → logprob: -5.763672351837158
    4. '               ' → logprob: -8.138672828674316
    5. '           ' → logprob: -8.388672828674316
    6. ' return' → logprob: -8.888672828674316
    7. 'parent' → logprob: -9.513672828674316
    8. '   ' → logprob: -10.888672828674316
    9. '       ' → logprob: -11.763672828674316
    10. '                   ' → logprob: -11.888672828674316

Token 1040: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815345324575901
    2. ' =' → logprob: -4.018153667449951
    3. '=
' → logprob: -12.768153190612793
    4. ' ' → logprob: -14.768153190612793
    5. ' =
' → logprob: -15.143153190612793
    6. '   ' → logprob: -16.39315414428711
    7. ')' → logprob: -17.89315414428711
    8. '```' → logprob: -18.14315414428711
    9. '=

' → logprob: -18.26815414428711
    10. '	' → logprob: -18.39315414428711

Token 1041: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.676292231422849e-05
    2. ' parent' → logprob: -11.000017166137695
    3. '	parent' → logprob: -20.125017166137695
    4. '(parent' → logprob: -21.125017166137695
    5. '[parent' → logprob: -22.000017166137695
    6. '   ' → logprob: -22.250017166137695
    7. '.parent' → logprob: -22.375017166137695
    8. 'paren' → logprob: -22.750017166137695
    9. ' ' → logprob: -23.250017166137695
    10. 'Parent' → logprob: -23.500017166137695

Token 1042: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0028709694743156433
    2. '[parent' → logprob: -6.127871036529541
    3. 'x' → logprob: -7.377871036529541
    4. 'parent' → logprob: -9.877870559692383
    5. '```' → logprob: -12.377870559692383
    6. '[
' → logprob: -13.127870559692383
    7. '{x' → logprob: -13.752870559692383
    8. '[' → logprob: -13.752870559692383
    9. ' x' → logprob: -14.877870559692383
    10. '(x' → logprob: -16.002870559692383

Token 1043: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00036025288864038885
    2. ']
' → logprob: -8.250360488891602
    3. ' ]' → logprob: -10.500360488891602
    4. ')' → logprob: -10.750360488891602
    5. 'parent' → logprob: -11.625360488891602
    6. '<|end|>' → logprob: -11.625360488891602
    7. '       ' → logprob: -11.875360488891602
    8. '           ' → logprob: -12.000360488891602
    9. '[parent' → logprob: -12.500360488891602
    10. '.parent' → logprob: -12.875360488891602

Token 1044: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008882822468876839
    2. '               ' → logprob: -5.008882999420166
    3. '       ' → logprob: -7.008882999420166
    4. 'return' → logprob: -7.758882999420166
    5. '<|end|>' → logprob: -8.508882522583008
    6. ' return' → logprob: -8.633882522583008
    7. '   ' → logprob: -8.758882522583008
    8. '```' → logprob: -9.383882522583008
    9. '
' → logprob: -9.758882522583008
    10. ')' → logprob: -10.258882522583008

Token 1045: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5642029643058777
    2. 'return' (adapté à ' return') → logprob: -1.5642030239105225
    3. '           ' → logprob: -2.0642030239105225
    4. ' return' → logprob: -3.3142030239105225
    5. ')' → logprob: -3.9392030239105225
    6. '   ' → logprob: -4.439202785491943
    7. '```' → logprob: -5.564202785491943
    8. ')
' → logprob: -5.689202785491943
    9. 'def' → logprob: -5.689202785491943
    10. '
' → logprob: -5.939202785491943

Token 1046: ' x' (ID: 1215)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.04650818929076195
    2. 'x' → logprob: -3.2965080738067627
    3. ' parent' → logprob: -4.796508312225342
    4. ' x' → logprob: -8.671507835388184
    5. '(parent' → logprob: -14.546507835388184
    6. '[parent' → logprob: -15.046507835388184
    7. '	parent' → logprob: -16.1715087890625
    8. '.parent' → logprob: -17.4215087890625
    9. ',parent' → logprob: -17.6715087890625
    10. '_parent' → logprob: -17.6715087890625

Token 1047: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1048: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5388991236686707
    2. '<|end|>' → logprob: -2.0388991832733154
    3. '\n' → logprob: -3.0388991832733154
    4. '
' → logprob: -3.2888991832733154
    5. '\' → logprob: -3.4138991832733154
    6. '```' → logprob: -3.6638991832733154
    7. 'def' → logprob: -3.7888991832733154
    8. '   ' → logprob: -3.9138991832733154
    9. '  
' → logprob: -4.288898944854736
    10. '(
' → logprob: -4.288898944854736

Token 1049: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1227598786354065
    2. '
' → logprob: -2.7477598190307617
    3. 'for' → logprob: -3.7477598190307617
    4. '       ' → logprob: -4.747759819030762
    5. ' for' → logprob: -4.872759819030762
    6. '```' → logprob: -4.997759819030762
    7. ' 
' → logprob: -6.122759819030762
    8. '        
' → logprob: -6.997759819030762
    9. ' def' → logprob: -7.747759819030762
    10. '    
' → logprob: -7.997759819030762

Token 1050: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.0007110013975761831
    2. ' union' → logprob: -7.250710964202881
    3. '_union' → logprob: -14.500711441040039
    4. 'un' → logprob: -14.625711441040039
    5. '.union' → logprob: -17.12571144104004
    6. '	union' → logprob: -17.62571144104004
    7. ' unite' → logprob: -18.12571144104004
    8. 'Union' → logprob: -18.25071144104004
    9. ' Union' → logprob: -18.87571144104004
    10. '
' → logprob: -19.00071144104004

Token 1051: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4747270345687866
    2. '(x' → logprob: -0.9747270345687866
    3. '(u' → logprob: -7.474727153778076
    4. '(' → logprob: -9.724726676940918
    5. '(parent' → logprob: -11.474726676940918
    6. ' (' → logprob: -12.099726676940918
    7. '(A' → logprob: -12.224726676940918
    8. '(left' → logprob: -14.349726676940918
    9. '(
' → logprob: -15.349726676940918
    10. '(lhs' → logprob: -15.349726676940918

Token 1052: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3722972869873047
    2. ',b' → logprob: -1.8722972869873047
    3. ',a' → logprob: -2.4972972869873047
    4. '(a' → logprob: -2.6222972869873047
    5. '(b' → logprob: -7.122297286987305
    6. ' ,' → logprob: -7.372297286987305
    7. 'a' → logprob: -8.372297286987305
    8. '(x' → logprob: -8.747297286987305
    9. '   ' → logprob: -9.372297286987305
    10. ',x' → logprob: -10.247297286987305

Token 1053: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.23993493616580963
    2. '):' → logprob: -1.6149349212646484
    3. '(a' → logprob: -4.489934921264648
    4. ')' → logprob: -6.364934921264648
    5. ',' → logprob: -7.739934921264648
    6. '   ' → logprob: -7.864934921264648
    7. '       ' → logprob: -8.614934921264648
    8. 'a' → logprob: -9.114934921264648
    9. '           ' → logprob: -9.239934921264648
    10. '(x' → logprob: -9.989934921264648

Token 1054: '           ' (ID: 352)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.05486118793487549
    2. 'parent' → logprob: -3.429861068725586
    3. '(parent' → logprob: -4.179861068725586
    4. '   ' → logprob: -5.679861068725586
    5. '       ' → logprob: -7.054861068725586
    6. ' (' → logprob: -7.554861068725586
    7. ' a' → logprob: -8.054861068725586
    8. '(
' → logprob: -9.054861068725586
    9. ' 
' → logprob: -9.429861068725586
    10. '(' → logprob: -9.554861068725586

Token 1055: ' a' (ID: 261)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.3342273533344269
    2. ' parent' → logprob: -1.3342273235321045
    3. '   ' → logprob: -4.084227561950684
    4. '           ' → logprob: -6.334227561950684
    5. '       ' → logprob: -6.584227561950684
    6. 'a' (adapté à ' a') → logprob: -8.209227561950684
    7. '	parent' → logprob: -8.959227561950684
    8. '
' → logprob: -9.459227561950684
    9. '[parent' → logprob: -9.834227561950684
    10. '_parent' → logprob: -9.834227561950684

Token 1056: '=find' (ID: 88179)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05949251353740692
    2. ' =' → logprob: -3.059492588043213
    3. '=find' → logprob: -4.809492588043213
    4. '_parent' → logprob: -6.559492588043213
    5. '[parent' → logprob: -7.684492588043213
    6. ')' → logprob: -8.434492111206055
    7. '=
' → logprob: -8.809492111206055
    8. 'parent' → logprob: -9.559492111206055
    9. 'a' → logprob: -9.559492111206055
    10. 'find' → logprob: -9.809492111206055

Token 1057: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5742889642715454
    2. '(b' → logprob: -1.0742889642715454
    3. 'a' → logprob: -2.824288845062256
    4. 'b' → logprob: -3.324288845062256
    5. ')b' → logprob: -12.949289321899414
    6. ')a' → logprob: -13.949289321899414
    7. ' b' → logprob: -14.824289321899414
    8. ')' → logprob: -15.199289321899414
    9. ',b' → logprob: -15.324289321899414
    10. ' a' → logprob: -15.574289321899414

Token 1058: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5780788660049438
    2. ')' → logprob: -0.8280788660049438
    3. ')b' → logprob: -6.203078746795654
    4. ')a' → logprob: -9.703079223632812
    5. '           ' → logprob: -10.953079223632812
    6. ')
' → logprob: -11.453079223632812
    7. ',b' → logprob: -12.203079223632812
    8. 'a' → logprob: -12.453079223632812
    9. ',' → logprob: -12.578079223632812
    10. ');' → logprob: -12.953079223632812

Token 1059: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030434109270572662
    2. 'b' → logprob: -4.1554341316223145
    3. ')
' → logprob: -4.9054341316223145
    4. '
' → logprob: -6.1554341316223145
    5. ' b' → logprob: -6.7804341316223145
    6. '       ' → logprob: -6.7804341316223145
    7. '               ' → logprob: -7.5304341316223145
    8. 'a' → logprob: -7.6554341316223145
    9. '   ' → logprob: -8.030433654785156
    10. ')' → logprob: -8.030433654785156

Token 1060: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -2.7610454708337784e-05
    2. ' b' → logprob: -10.500027656555176
    3. '           ' → logprob: -19.00002670288086
    4. '	b' → logprob: -19.12502670288086
    5. ')b' → logprob: -19.25002670288086
    6. '   ' → logprob: -20.50002670288086
    7. ',b' → logprob: -21.12502670288086
    8. 'parent' → logprob: -21.25002670288086
    9. '    ' → logprob: -22.00002670288086
    10. '       ' → logprob: -22.12502670288086

Token 1061: '=find' (ID: 88179)
  Prédit: '=b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=b' → logprob: -0.9778718948364258
    2. 'b' → logprob: -1.2278718948364258
    3. '=' → logprob: -1.8528718948364258
    4. '(b' → logprob: -2.602871894836426
    5. '[b' → logprob: -3.102871894836426
    6. '=find' → logprob: -3.102871894836426
    7. 'find' → logprob: -5.102871894836426
    8. '(find' → logprob: -7.227871894836426
    9. ' =' → logprob: -7.352871894836426
    10. ')' → logprob: -7.727871894836426

Token 1062: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.006725788116455078
    2. 'b' → logprob: -5.006725788116455
    3. '(a' → logprob: -11.631725311279297
    4. ' b' → logprob: -14.381725311279297
    5. ')b' → logprob: -14.506725311279297
    6. 'a' → logprob: -15.756725311279297
    7. '[b' → logprob: -16.131725311279297
    8. '	b' → logprob: -16.256725311279297
    9. ')' → logprob: -17.631725311279297
    10. '(' → logprob: -18.381725311279297

Token 1063: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038085438311100006
    2. ')
' → logprob: -3.288085460662842
    3. '):
' → logprob: -10.663084983825684
    4. '           ' → logprob: -11.288084983825684
    5. '       ' → logprob: -12.788084983825684
    6. ')a' → logprob: -13.788084983825684
    7. ')b' → logprob: -14.038084983825684
    8. ')
' → logprob: -14.038084983825684
    9. ')return' → logprob: -14.913084983825684
    10. '):' → logprob: -15.163084983825684

Token 1064: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048027608543634415
    2. '(parent' → logprob: -3.923027515411377
    3. '               ' → logprob: -4.798027515411377
    4. '       ' → logprob: -6.048027515411377
    5. ':
' → logprob: -6.548027515411377
    6. '
' → logprob: -6.548027515411377
    7. '(a' → logprob: -6.673027515411377
    8. '(
' → logprob: -6.673027515411377
    9. ')' → logprob: -6.798027515411377
    10. ' parent' → logprob: -7.048027515411377

Token 1065: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7343109250068665
    2. ' if' → logprob: -0.7343109250068665
    3. 'parent' → logprob: -3.9843108654022217
    4. '           ' → logprob: -4.484311103820801
    5. 'a' → logprob: -4.984311103820801
    6. ' parent' → logprob: -6.109311103820801
    7. ' a' → logprob: -7.234311103820801
    8. '   ' → logprob: -8.2343111038208
    9. '
' → logprob: -8.4843111038208
    10. ' 
' → logprob: -9.7343111038208

Token 1066: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018150994554162025
    2. ' a' → logprob: -4.018150806427002
    3. '           ' → logprob: -14.39315128326416
    4. '   ' → logprob: -15.26815128326416
    5. '	a' → logprob: -15.89315128326416
    6. '(a' → logprob: -16.518150329589844
    7. ')a' → logprob: -17.643150329589844
    8. '>a' → logprob: -18.768150329589844
    9. ' ' → logprob: -19.143150329589844
    10. '    ' → logprob: -19.393150329589844

Token 1067: '!=' (ID: 11408)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.38691532611846924
    2. '!=' → logprob: -1.1369153261184692
    3. ')!=' → logprob: -10.88691520690918
    4. '()!=' → logprob: -12.38691520690918
    5. '!==' → logprob: -12.51191520690918
    6. 'a' → logprob: -12.76191520690918
    7. '!=(' → logprob: -12.88691520690918
    8. '==' → logprob: -13.26191520690918
    9. ']!=' → logprob: -13.26191520690918
    10. '!' → logprob: -13.38691520690918

Token 1068: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.13388703338569e-06
    2. ' b' → logprob: -11.625009536743164
    3. 'a' → logprob: -16.000009536743164
    4. '=b' → logprob: -17.125009536743164
    5. '(b' → logprob: -17.375009536743164
    6. '	b' → logprob: -17.875009536743164
    7. '```' → logprob: -18.500009536743164
    8. ')b' → logprob: -18.500009536743164
    9. '   ' → logprob: -18.625009536743164
    10. '>b' → logprob: -18.625009536743164

Token 1069: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4064008891582489
    2. ':' → logprob: -1.2814009189605713
    3. '=' → logprob: -3.0314009189605713
    4. ')' → logprob: -5.781400680541992
    5. '):
' → logprob: -6.531400680541992
    6. '           ' → logprob: -6.531400680541992
    7. '               ' → logprob: -7.156400680541992
    8. ' =' → logprob: -7.781400680541992
    9. '[parent' → logprob: -8.531400680541992
    10. '):' → logprob: -8.656400680541992

Token 1070: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006837322376668453
    2. 'parent' → logprob: -5.756837368011475
    3. ' parent' → logprob: -5.881837368011475
    4. '[parent' → logprob: -7.881837368011475
    5. '(parent' → logprob: -8.506836891174316
    6. ',parent' → logprob: -8.881836891174316
    7. '   ' → logprob: -10.006836891174316
    8. '           ' → logprob: -10.381836891174316
    9. '	parent' → logprob: -10.881836891174316
    10. '
' → logprob: -11.256836891174316

Token 1071: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.20160971581935883
    2. ' parent' → logprob: -1.70160973072052
    3. '               ' → logprob: -8.82660961151123
    4. '[parent' → logprob: -11.20160961151123
    5. '                   ' → logprob: -11.32660961151123
    6. '   ' → logprob: -11.57660961151123
    7. ',parent' → logprob: -11.70160961151123
    8. '(parent' → logprob: -12.95160961151123
    9. '	parent' → logprob: -13.20160961151123
    10. '           ' → logprob: -14.45160961151123

Token 1072: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.06206907704472542
    2. '[a' → logprob: -2.8120691776275635
    3. 'b' → logprob: -9.562068939208984
    4. 'a' → logprob: -10.562068939208984
    5. '[' → logprob: -12.687068939208984
    6. '=b' → logprob: -13.937068939208984
    7. '```' → logprob: -14.812068939208984
    8. '[x' → logprob: -15.062068939208984
    9. '[
' → logprob: -15.812068939208984
    10. '=' → logprob: -16.312068939208984

Token 1073: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.8695473074913025
    2. ']' → logprob: -1.1195473670959473
    3. '=' → logprob: -1.3695473670959473
    4. ' =' → logprob: -9.119546890258789
    5. '=a' → logprob: -9.619546890258789
    6. '[a' → logprob: -11.119546890258789
    7. 'a' → logprob: -11.744546890258789
    8. '=
' → logprob: -12.869546890258789
    9. '   ' → logprob: -13.244546890258789
    10. '[' → logprob: -13.494546890258789

Token 1074: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9361264946837764e-07
    2. ' a' → logprob: -15.875
    3. '   ' → logprob: -21.375
    4. '	a' → logprob: -21.375
    5. '```' → logprob: -21.875
    6. ')a' → logprob: -22.625
    7. ''a' → logprob: -22.875
    8. '[a' → logprob: -23.375
    9. '           ' → logprob: -23.625
    10. '>a' → logprob: -24.125

Token 1075: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1076: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44319239258766174
    2. '       ' → logprob: -1.0681923627853394
    3. ' for' → logprob: -4.318192481994629
    4. '```' → logprob: -7.818192481994629
    5. '   ' → logprob: -8.193192481994629
    6. '
' → logprob: -8.693192481994629
    7. '<|end|>' → logprob: -9.068192481994629
    8. 'def' → logprob: -9.943192481994629
    9. '	for' → logprob: -10.318192481994629
    10. '           ' → logprob: -12.318192481994629

Token 1077: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.080963092041202e-06
    2. '       ' → logprob: -12.750004768371582
    3. ' for' → logprob: -13.625004768371582
    4. '```' → logprob: -13.875004768371582
    5. '
' → logprob: -17.3750057220459
    6. '#' → logprob: -18.3750057220459
    7. '        
' → logprob: -19.7500057220459
    8. '   ' → logprob: -20.0000057220459
    9. '	for' → logprob: -20.6250057220459
    10. '``' → logprob: -21.0000057220459

Token 1078: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.17542830109596252
    2. 's' → logprob: -2.3004283905029297
    3. ' st' → logprob: -2.9254283905029297
    4. ' s' → logprob: -5.17542839050293
    5. 'street' → logprob: -6.92542839050293
    6. ' street' → logprob: -8.05042839050293
    7. 'stre' → logprob: -10.05042839050293
    8. 'ns' → logprob: -10.80042839050293
    9. 'x' → logprob: -11.05042839050293
    10. '   ' → logprob: -12.92542839050293

Token 1079: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009802604094147682
    2. 'in' → logprob: -4.63480281829834
    3. 's' → logprob: -11.00980281829834
    4. 't' → logprob: -11.25980281829834
    5. ' ' → logprob: -12.38480281829834
    6. 'e' → logprob: -12.75980281829834
    7. 'n' → logprob: -13.38480281829834
    8. 'st' → logprob: -13.50980281829834
    9. '   ' → logprob: -13.63480281829834
    10. '       ' → logprob: -13.75980281829834

Token 1080: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.06240478530526161
    2. ' streets' → logprob: -2.8124048709869385
    3. 'ns' → logprob: -7.812404632568359
    4. 'st' → logprob: -11.43740463256836
    5. 'sts' → logprob: -11.43740463256836
    6. ' ns' → logprob: -13.06240463256836
    7. '[' → logprob: -13.18740463256836
    8. '(st' → logprob: -13.81240463256836
    9. 'street' → logprob: -14.06240463256836
    10. 'stairs' → logprob: -14.18740463256836

Token 1081: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01016412116587162
    2. ':' → logprob: -5.010164260864258
    3. '=' → logprob: -6.010164260864258
    4. ' =' → logprob: -7.635164260864258
    5. '           ' → logprob: -8.010164260864258
    6. '   ' → logprob: -9.135164260864258
    7. '=
' → logprob: -10.510164260864258
    8. '):
' → logprob: -11.260164260864258
    9. '       ' → logprob: -12.010164260864258
    10. '():
' → logprob: -12.260164260864258

Token 1082: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.567719578742981
    2. '   ' → logprob: -1.067719578742981
    3. ' parent' → logprob: -3.3177194595336914
    4. '	parent' → logprob: -3.6927194595336914
    5. '(parent' → logprob: -4.567719459533691
    6. '       ' → logprob: -5.192719459533691
    7. '[parent' → logprob: -5.317719459533691
    8. '	       ' → logprob: -5.817719459533691
    9. '	   ' → logprob: -6.567719459533691
    10. 'parent' → logprob: -6.942719459533691

Token 1083: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.4212573170661926
    2. 'parent' (adapté à ' parent') → logprob: -1.1712572574615479
    3. '   ' → logprob: -3.421257257461548
    4. '           ' → logprob: -7.046257495880127
    5. '	parent' → logprob: -9.171257019042969
    6. '       ' → logprob: -9.421257019042969
    7. '[parent' → logprob: -10.921257019042969
    8. '(parent' → logprob: -11.046257019042969
    9. '.parent' → logprob: -11.296257019042969
    10. ',parent' → logprob: -11.546257019042969

Token 1084: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.60414821645827e-06
    2. '=' → logprob: -12.875004768371582
    3. ' [' → logprob: -13.625004768371582
    4. '```' → logprob: -14.250004768371582
    5. '\[' → logprob: -16.875003814697266
    6. '(st' → logprob: -17.750003814697266
    7. ' =' → logprob: -17.750003814697266
    8. '[parent' → logprob: -18.125003814697266
    9. 'st' → logprob: -18.625003814697266
    10. '
' → logprob: -18.875003814697266

Token 1085: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -6.704273118884885e-07
    2. ' st' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.0
    4. '(st' → logprob: -17.125
    5. '[' → logprob: -17.25
    6. '	st' → logprob: -17.5
    7. '{' → logprob: -18.125
    8. '```' → logprob: -18.25
    9. 'stre' → logprob: -18.875
    10. 'str' → logprob: -19.375

Token 1086: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13659153878688812
    2. ']=' → logprob: -2.6365914344787598
    3. '=' → logprob: -2.8865914344787598
    4. ' =' → logprob: -8.136591911315918
    5. ' ]' → logprob: -12.011591911315918
    6. '[' → logprob: -13.886591911315918
    7. '   ' → logprob: -14.511591911315918
    8. '=
' → logprob: -14.636591911315918
    9. '']=' → logprob: -14.636591911315918
    10. ']
' → logprob: -14.761591911315918

Token 1087: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715370807796717
    2. ' =' → logprob: -5.006715297698975
    3. '=
' → logprob: -17.756715774536133
    4. '   ' → logprob: -18.506715774536133
    5. '[' → logprob: -18.881715774536133
    6. ']=' → logprob: -18.881715774536133
    7. ']' → logprob: -18.881715774536133
    8. '.=' → logprob: -19.506715774536133
    9. '＝' → logprob: -19.631715774536133
    10. ')' → logprob: -19.756715774536133

Token 1088: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.9361264946837764e-07
    2. ' st' → logprob: -15.75
    3. '	st' → logprob: -19.625
    4. '   ' → logprob: -21.0
    5. '(st' → logprob: -21.375
    6. 'St' → logprob: -22.375
    7. 's' → logprob: -23.0
    8. 'stre' → logprob: -23.25
    9. 'stid' → logprob: -23.75
    10. '_st' → logprob: -24.5

Token 1089: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5698498487472534
    2. 'for' → logprob: -1.5698498487472534
    3. '
' → logprob: -1.8198498487472534
    4. ' for' → logprob: -2.819849967956543
    5. '<|end|>' → logprob: -6.069849967956543
    6. '        
' → logprob: -6.569849967956543
    7. 'from' → logprob: -7.819849967956543
    8. '   ' → logprob: -8.194849967956543
    9. '    
' → logprob: -9.694849967956543
    10. '```' → logprob: -10.069849967956543

Token 1090: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026387954130768776
    2. '       ' → logprob: -6.377638816833496
    3. ' for' → logprob: -7.627638816833496
    4. 'from' → logprob: -8.377638816833496
    5. '```' → logprob: -8.502638816833496
    6. '
' → logprob: -11.252638816833496
    7. '   ' → logprob: -13.127638816833496
    8. '        
' → logprob: -14.627638816833496
    9. '``' → logprob: -14.877638816833496
    10. 'import' → logprob: -15.002638816833496

Token 1091: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.036686044186353683
    2. 'from' → logprob: -3.4116859436035156
    3. 'ns' → logprob: -6.036685943603516
    4. ' for' → logprob: -8.411685943603516
    5. 'import' → logprob: -8.536685943603516
    6. '       ' → logprob: -8.911685943603516
    7. '```' → logprob: -9.536685943603516
    8. '   ' → logprob: -12.286685943603516
    9. 'dire' → logprob: -12.911685943603516
    10. ' from' → logprob: -13.036685943603516

Token 1092: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -1.4066133499145508
    2. 'dir' → logprob: -1.4066133499145508
    3. ' dir' → logprob: -2.281613349914551
    4. 'group' → logprob: -2.531613349914551
    5. 'i' → logprob: -2.781613349914551
    6. ' i' → logprob: -3.031613349914551
    7. 'st' → logprob: -3.281613349914551
    8. ' st' → logprob: -3.656613349914551
    9. ' s' → logprob: -3.656613349914551
    10. ' orientation' → logprob: -4.156613349914551

Token 1093: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00043805985478684306
    2. 'in' → logprob: -7.750438213348389
    3. ' ' → logprob: -12.75043773651123
    4. 's' → logprob: -13.75043773651123
    5. '   ' → logprob: -14.00043773651123
    6. '_in' → logprob: -14.12543773651123
    7. '_' → logprob: -14.25043773651123
    8. '[' → logprob: -14.87543773651123
    9. '```' → logprob: -15.87543773651123
    10. '[in' → logprob: -16.125438690185547

Token 1094: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.02339700236916542
    2. ' same' → logprob: -3.7733969688415527
    3. 'ns' → logprob: -9.273397445678711
    4. '[s' → logprob: -10.523397445678711
    5. '[' → logprob: -10.648397445678711
    6. ' ns' → logprob: -12.523397445678711
    7. '   ' → logprob: -13.648397445678711
    8. ' [' → logprob: -13.898397445678711
    9. '(ns' → logprob: -14.898397445678711
    10. ' ' → logprob: -15.023397445678711

Token 1095: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.0010185176506638527
    2. '_st' → logprob: -8.251018524169922
    3. '[' → logprob: -8.376018524169922
    4. '_dirs' → logprob: -8.876018524169922
    5. 'dir' → logprob: -9.126018524169922
    6. '_direction' → logprob: -9.376018524169922
    7. '```' → logprob: -10.126018524169922
    8. '   ' → logprob: -10.376018524169922
    9. '[i' → logprob: -10.626018524169922
    10. '       ' → logprob: -11.126018524169922

Token 1096: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6326673030853271
    2. ':
' → logprob: -0.7576673030853271
    3. '[' → logprob: -10.632667541503906
    4. '):
' → logprob: -11.132667541503906
    5. '       ' → logprob: -12.132667541503906
    6. ' in' → logprob: -12.382667541503906
    7. '   ' → logprob: -12.632667541503906
    8. ':
' → logprob: -12.632667541503906
    9. '           ' → logprob: -12.882667541503906
    10. ':

' → logprob: -13.007667541503906

Token 1097: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005439369939267635
    2. '       ' → logprob: -5.505439281463623
    3. ':
' → logprob: -7.755439281463623
    4. ':' → logprob: -7.880439281463623
    5. ' for' → logprob: -8.380439758300781
    6. '   ' → logprob: -8.505439758300781
    7. '               ' → logprob: -10.630439758300781
    8. '    
' → logprob: -10.755439758300781
    9. 'for' → logprob: -10.755439758300781
    10. '[' → logprob: -10.880439758300781

Token 1098: ' group' (ID: 3566)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10075639933347702
    2. ' for' → logprob: -2.4757564067840576
    3. 'n' → logprob: -5.6007561683654785
    4. '               ' → logprob: -5.9757561683654785
    5. '           ' → logprob: -6.2257561683654785
    6. 'l' → logprob: -6.6007561683654785
    7. 'length' → logprob: -7.6007561683654785
    8. 'lst' → logprob: -7.7257561683654785
    9. '   ' → logprob: -8.100756645202637
    10. 'from' → logprob: -8.475756645202637

Token 1099: '_list' (ID: 4162)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.20568741858005524
    2. ' =' → logprob: -2.3306875228881836
    3. '=' → logprob: -3.0806875228881836
    4. '_len' → logprob: -3.5806875228881836
    5. '_length' → logprob: -5.705687522888184
    6. 'len' → logprob: -6.080687522888184
    7. '           ' → logprob: -6.080687522888184
    8. ':' → logprob: -6.080687522888184
    9. '=len' → logprob: -6.705687522888184
    10. '_sorted' → logprob: -6.955687522888184

Token 1100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01841154508292675
    2. '=' → logprob: -4.018411636352539
    3. '=len' → logprob: -8.768411636352539
    4. ' in' → logprob: -9.643411636352539
    5. ')' → logprob: -11.018411636352539
    6. '.sort' → logprob: -11.893411636352539
    7. '=list' → logprob: -12.893411636352539
    8. '(len' → logprob: -13.018411636352539
    9. '_len' → logprob: -13.268411636352539
    10. ',' → logprob: -13.518411636352539

Token 1101: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.007661870680749416
    2. ' list' → logprob: -5.007661819458008
    3. 'sorted' → logprob: -7.007661819458008
    4. 'group' → logprob: -10.757661819458008
    5. '[list' → logprob: -11.257661819458008
    6. ' sorted' → logprob: -12.507661819458008
    7. '[group' → logprob: -13.007661819458008
    8. '[' → logprob: -14.007661819458008
    9. '(list' → logprob: -16.007661819458008
    10. ' group' → logprob: -16.757661819458008

Token 1102: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -4.870950215263292e-05
    2. '[group' → logprob: -10.250048637390137
    3. 'group' → logprob: -11.500048637390137
    4. '(' → logprob: -13.625048637390137
    5. '(sorted' → logprob: -13.875048637390137
    6. '(
' → logprob: -15.000048637390137
    7. '(range' → logprob: -15.125048637390137
    8. '"group' → logprob: -15.750048637390137
    9. '(filter' → logprob: -16.125049591064453
    10. '	group' → logprob: -17.250049591064453

Token 1103: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31446537375450134
    2. ')
' → logprob: -1.6894654035568237
    3. ')' → logprob: -2.564465284347534
    4. '):
' → logprob: -4.939465522766113
    5. ':
' → logprob: -8.189465522766113
    6. '
' → logprob: -8.564465522766113
    7. '       ' → logprob: -9.189465522766113
    8. '```' → logprob: -9.189465522766113
    9. '          ' → logprob: -9.564465522766113
    10. ',' → logprob: -9.564465522766113

Token 1104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013119018403813243
    2. '               ' → logprob: -7.626311779022217
    3. '   ' → logprob: -7.751311779022217
    4. '       ' → logprob: -8.376312255859375
    5. ' for' → logprob: -9.501312255859375
    6. '
' → logprob: -11.001312255859375
    7. '```' → logprob: -11.251312255859375
    8. '<|end|>' → logprob: -11.501312255859375
    9. '	       ' → logprob: -11.876312255859375
    10. '            
' → logprob: -12.001312255859375

Token 1105: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5885383486747742
    2. ' for' → logprob: -0.8385383486747742
    3. '```' → logprob: -4.58853816986084
    4. '   ' → logprob: -6.96353816986084
    5. '           ' → logprob: -6.96353816986084
    6. '       ' → logprob: -7.96353816986084
    7. '``' → logprob: -9.33853816986084
    8. '
' → logprob: -11.83853816986084
    9. '	for' → logprob: -12.33853816986084
    10. '               ' → logprob: -12.71353816986084

Token 1106: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.029753385111689568
    2. 'i' → logprob: -3.5297534465789795
    3. '_i' → logprob: -13.154753684997559
    4. ' ' → logprob: -14.529753684997559
    5. '	i' → logprob: -15.654753684997559
    6. ' j' → logprob: -16.779752731323242
    7. ' range' → logprob: -17.029752731323242
    8. '    ' → logprob: -17.154752731323242
    9. ' ' → logprob: -17.154752731323242
    10. '  ' → logprob: -17.904752731323242

Token 1107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08915103226900101
    2. 'in' → logprob: -2.46415114402771
    3. '	in' → logprob: -9.089151382446289
    4. ' ' → logprob: -9.964151382446289
    5. ',' → logprob: -11.589151382446289
    6. '   ' → logprob: -11.714151382446289
    7. '  ' → logprob: -12.089151382446289
    8. ')' → logprob: -12.339151382446289
    9. '=' → logprob: -12.839151382446289
    10. ' ,' → logprob: -13.214151382446289

Token 1108: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759445428848267
    2. ' range' → logprob: -0.8259445428848267
    3. ' ' → logprob: -12.450944900512695
    4. '  ' → logprob: -14.700944900512695
    5. '	range' → logprob: -15.325944900512695
    6. '(range' → logprob: -15.450944900512695
    7. '   ' → logprob: -15.825944900512695
    8. '0' → logprob: -16.450944900512695
    9. 'i' → logprob: -17.450944900512695
    10. '_range' → logprob: -18.075944900512695

Token 1109: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.14322972297668457
    2. '(i' → logprob: -2.3932297229766846
    3. 'len' → logprob: -3.6432297229766846
    4. ' len' → logprob: -4.8932294845581055
    5. 'i' → logprob: -5.7682294845581055
    6. ' i' → logprob: -6.1432294845581055
    7. '(' → logprob: -6.6432294845581055
    8. ' (' → logprob: -6.8932294845581055
    9. '1' → logprob: -8.518229484558105
    10. '           ' → logprob: -9.143229484558105

Token 1110: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.004356890916824341
    2. 'group' → logprob: -5.504356861114502
    3. '(' → logprob: -8.50435733795166
    4. ' group' → logprob: -10.12935733795166
    5. ' (' → logprob: -10.75435733795166
    6. '[group' → logprob: -12.12935733795166
    7. ')' → logprob: -12.50435733795166
    8. '(
' → logprob: -12.50435733795166
    9. '(i' → logprob: -14.87935733795166
    10. ' ' → logprob: -15.00435733795166

Token 1111: '_list' (ID: 4162)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2622917890548706
    2. '):' → logprob: -2.51229190826416
    3. ')):
' → logprob: -2.76229190826416
    4. ')' → logprob: -3.01229190826416
    5. '_list' → logprob: -4.26229190826416
    6. ')]' → logprob: -4.88729190826416
    7. ')+' → logprob: -5.88729190826416
    8. ')):' → logprob: -6.01229190826416
    9. '(group' → logprob: -6.26229190826416
    10. '))' → logprob: -6.26229190826416

Token 1112: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09775465726852417
    2. '):' → logprob: -2.472754716873169
    3. '-' → logprob: -4.97275447845459
    4. '+' → logprob: -6.72275447845459
    5. ')' → logprob: -8.97275447845459
    6. '   ' → logprob: -9.22275447845459
    7. ' -' → logprob: -9.34775447845459
    8. '):
' → logprob: -9.97275447845459
    9. '()):
' → logprob: -9.97275447845459
    10. '           ' → logprob: -10.09775447845459

Token 1113: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20612800121307373
    2. '           ' → logprob: -2.5811281204223633
    3. '```' → logprob: -3.4561281204223633
    4. '       ' → logprob: -3.7061281204223633
    5. '   ' → logprob: -3.8311281204223633
    6. '<|end|>' → logprob: -4.706128120422363
    7. '	       ' → logprob: -5.081128120422363
    8. ' for' → logprob: -5.206128120422363
    9. '	           ' → logprob: -6.081128120422363
    10. ' ' → logprob: -6.956128120422363

Token 1114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.034337397664785385
    2. 'for' (adapté à ' for') → logprob: -4.159337520599365
    3. '                   ' → logprob: -4.534337520599365
    4. '   ' → logprob: -5.784337520599365
    5. '               ' → logprob: -6.284337520599365
    6. ' j' → logprob: -6.784337520599365
    7. ' ' → logprob: -7.909337520599365
    8. ' ' → logprob: -8.659337043762207
    9. ' i' → logprob: -8.784337043762207
    10. '           ' → logprob: -9.034337043762207

Token 1115: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5759440064430237
    2. ' j' → logprob: -0.8259440064430237
    3. 'i' → logprob: -12.950943946838379
    4. '(j' → logprob: -14.325943946838379
    5. '	j' → logprob: -14.450943946838379
    6. ' range' → logprob: -15.325943946838379
    7. ' i' → logprob: -15.700943946838379
    8. '_j' → logprob: -15.825943946838379
    9. '                   ' → logprob: -15.950943946838379
    10. 'range' → logprob: -16.075944900512695

Token 1116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07582073658704758
    2. ' i' → logprob: -3.4508206844329834
    3. 'in' → logprob: -3.9508206844329834
    4. '(i' → logprob: -4.0758209228515625
    5. '=i' → logprob: -6.9508209228515625
    6. 'i' → logprob: -7.2008209228515625
    7. '[i' → logprob: -7.4508209228515625
    8. ' j' → logprob: -7.5758209228515625
    9. ' ' → logprob: -7.7008209228515625
    10. ' (' → logprob: -8.075820922851562

Token 1117: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.0848402976989746
    2. 'range' → logprob: -1.3348402976989746
    3. 'i' → logprob: -1.5848402976989746
    4. ' i' → logprob: -2.3348402976989746
    5. '(i' → logprob: -2.3348402976989746
    6. '(range' → logprob: -8.709840774536133
    7. ' (' → logprob: -11.334840774536133
    8. '{i' → logprob: -11.459840774536133
    9. '[i' → logprob: -11.584840774536133
    10. ' ' → logprob: -11.834840774536133

Token 1118: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.070975071750581e-05
    2. 'i' → logprob: -11.125030517578125
    3. ' (' → logprob: -11.125030517578125
    4. ' i' → logprob: -14.375030517578125
    5. '(' → logprob: -15.000030517578125
    6. '(j' → logprob: -15.125030517578125
    7. '(
' → logprob: -17.500030517578125
    8. 'range' → logprob: -17.500030517578125
    9. '   ' → logprob: -18.250030517578125
    10. '(len' → logprob: -18.500030517578125

Token 1119: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011737978784367442
    2. ' +' → logprob: -6.751173973083496
    3. '1' → logprob: -13.501173973083496
    4. '+
' → logprob: -13.751173973083496
    5. '+j' → logprob: -14.501173973083496
    6. '+i' → logprob: -15.501173973083496
    7. '()+' → logprob: -15.751173973083496
    8. '＋' → logprob: -16.00117301940918
    9. ' +
' → logprob: -17.62617301940918
    10. '```' → logprob: -18.62617301940918

Token 1120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -20.0
    4. '+' → logprob: -21.0
    5. '   ' → logprob: -21.5
    6. '
' → logprob: -23.5
    7. 'len' → logprob: -24.25
    8. '１' → logprob: -24.5
    9. 'i' → logprob: -24.875
    10. 'j' → logprob: -24.875

Token 1121: ',len' (ID: 73338)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3835597038269043
    2. ',' → logprob: -1.6335597038269043
    3. '1' → logprob: -2.2585597038269043
    4. ',len' → logprob: -4.633559703826904
    5. '(len' → logprob: -5.258559703826904
    6. ' +' → logprob: -5.883559703826904
    7. '):
' → logprob: -8.258560180664062
    8. '(' → logprob: -8.633560180664062
    9. ',j' → logprob: -8.633560180664062
    10. ' ,' → logprob: -8.883560180664062

Token 1122: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.049010731279850006
    2. 'group' → logprob: -3.049010753631592
    3. ' group' → logprob: -7.799010753631592
    4. '[group' → logprob: -11.424010276794434
    5. '"group' → logprob: -13.799010276794434
    6. ')' → logprob: -14.674010276794434
    7. '(
' → logprob: -15.549010276794434
    8. '	group' → logprob: -15.549010276794434
    9. '(' → logprob: -15.799010276794434
    10. ' (' → logprob: -16.17401123046875

Token 1123: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00010103991371579468
    2. '(group' → logprob: -9.750101089477539
    3. 'group' → logprob: -10.750101089477539
    4. '```' → logprob: -11.750101089477539
    5. 'List' → logprob: -12.125101089477539
    6. '[group' → logprob: -13.250101089477539
    7. 'list' → logprob: -13.625101089477539
    8. '_group' → logprob: -14.000101089477539
    9. '_LIST' → logprob: -14.000101089477539
    10. ')' → logprob: -14.375101089477539

Token 1124: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0022919215261936188
    2. '):' → logprob: -6.252292156219482
    3. ')):
' → logprob: -8.127291679382324
    4. '           ' → logprob: -10.752291679382324
    5. '               ' → logprob: -11.502291679382324
    6. '()):
' → logprob: -11.752291679382324
    7. ']):
' → logprob: -11.877291679382324
    8. '():
' → logprob: -12.252291679382324
    9. ')' → logprob: -12.377291679382324
    10. '                   ' → logprob: -13.252291679382324

Token 1125: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004930243361741304
    2. '                       ' → logprob: -5.504930019378662
    3. ' if' → logprob: -8.00493049621582
    4. '                           ' → logprob: -8.37993049621582
    5. '):
' → logprob: -10.00493049621582
    6. '               ' → logprob: -10.12993049621582
    7. '                    
' → logprob: -10.62993049621582
    8. '                               ' → logprob: -10.62993049621582
    9. 'if' → logprob: -10.75493049621582
    10. ',' → logprob: -10.75493049621582

Token 1126: ' A' (ID: 355)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.16922296583652496
    2. ' if' → logprob: -2.4192230701446533
    3. 'if' → logprob: -2.9192230701446533
    4. '                   ' → logprob: -5.044222831726074
    5. '                           ' → logprob: -6.544222831726074
    6. ' st' → logprob: -7.169222831726074
    7. ' group' → logprob: -7.294222831726074
    8. '):
' → logprob: -7.669222831726074
    9. '                     ' → logprob: -8.044222831726074
    10. ':
' → logprob: -8.169222831726074

Token 1127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4894983470439911
    2. '[group' → logprob: -1.4894983768463135
    3. '=' → logprob: -2.8644983768463135
    4. ')' → logprob: -3.3644983768463135
    5. ',' → logprob: -3.7394983768463135
    6. '[' → logprob: -3.9894983768463135
    7. '                   ' → logprob: -4.739498138427734
    8. ']' → logprob: -5.114498138427734
    9. ' ==' → logprob: -6.239498138427734
    10. '<|end|>' → logprob: -6.614498138427734

Token 1128: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.01416398212313652
    2. ' group' → logprob: -4.264163970947266
    3. '"group' → logprob: -15.389163970947266
    4. '[group' → logprob: -15.889163970947266
    5. '(group' → logprob: -16.514163970947266
    6. '	group' → logprob: -18.764163970947266
    7. '.group' → logprob: -18.889163970947266
    8. '                   ' → logprob: -19.014163970947266
    9. '-group' → logprob: -20.889163970947266
    10. '_group' → logprob: -21.014163970947266

Token 1129: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.005664137192070484
    2. '[i' → logprob: -5.880664348602295
    3. '[j' → logprob: -5.880664348602295
    4. 'List' → logprob: -11.005663871765137
    5. '[List' → logprob: -11.380663871765137
    6. '[' → logprob: -11.505663871765137
    7. '[group' → logprob: -11.505663871765137
    8. 'list' → logprob: -12.630663871765137
    9. '```' → logprob: -13.005663871765137
    10. '_LIST' → logprob: -13.380663871765137

Token 1130: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0793817862868309
    2. '[j' → logprob: -2.5793817043304443
    3. '[' → logprob: -7.954381942749023
    4. '                   ' → logprob: -10.079381942749023
    5. '][' → logprob: -10.204381942749023
    6. ']' → logprob: -10.829381942749023
    7. '[A' → logprob: -11.204381942749023
    8. ' [' → logprob: -11.829381942749023
    9. '```' → logprob: -12.204381942749023
    10. '[I' → logprob: -12.329381942749023

Token 1131: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.724026620388031
    2. ')
' → logprob: -1.5990266799926758
    3. ')' → logprob: -2.224026679992676
    4. ']' → logprob: -2.349026679992676
    5. ']
' → logprob: -2.474026679992676
    6. '                       ' → logprob: -5.474026679992676
    7. ',
' → logprob: -5.974026679992676
    8. '])' → logprob: -5.974026679992676
    9. ':
' → logprob: -6.099026679992676
    10. ',' → logprob: -6.224026679992676

Token 1132: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9523451328277588
    2. '                   ' → logprob: -1.3273451328277588
    3. '<|end|>' → logprob: -1.5773451328277588
    4. '```' → logprob: -3.452345132827759
    5. '                        
' → logprob: -3.577345132827759
    6. '                           ' → logprob: -4.07734489440918
    7. ' if' → logprob: -4.70234489440918
    8. '                               ' → logprob: -5.07734489440918
    9. 'if' → logprob: -5.07734489440918
    10. ' ' → logprob: -5.20234489440918

Token 1133: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.03012949414551258
    2. ' B' → logprob: -3.5301294326782227
    3. '                   ' → logprob: -7.905129432678223
    4. '                    ' → logprob: -11.655129432678223
    5. '                       ' → logprob: -14.780129432678223
    6. '                     ' → logprob: -15.280129432678223
    7. '   ' → logprob: -15.780129432678223
    8. ' ' → logprob: -16.15513038635254
    9. '                           ' → logprob: -16.40513038635254
    10. '	B' → logprob: -16.40513038635254

Token 1134: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5137051343917847
    2. '                   ' → logprob: -1.7637051343917847
    3. '```' → logprob: -2.763705253601074
    4. '[' → logprob: -3.013705253601074
    5. '<|end|>' → logprob: -3.513705253601074
    6. ' =' → logprob: -4.138705253601074
    7. '                    ' → logprob: -4.763705253601074
    8. '[j' → logprob: -4.763705253601074
    9. '=' → logprob: -5.138705253601074
    10. '):
' → logprob: -5.263705253601074

Token 1135: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.12693840265274048
    2. 'group' → logprob: -2.1269383430480957
    3. '"group' → logprob: -12.001938819885254
    4. '[group' → logprob: -12.876938819885254
    5. '(group' → logprob: -13.751938819885254
    6. ' ' → logprob: -16.001937866210938
    7. '.group' → logprob: -16.126937866210938
    8. '	group' → logprob: -16.126937866210938
    9. 'Group' → logprob: -16.251937866210938
    10. '`' → logprob: -16.251937866210938

Token 1136: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.438573680294212e-06
    2. 'list' → logprob: -13.000005722045898
    3. 'List' → logprob: -13.125005722045898
    4. '[j' → logprob: -13.875005722045898
    5. '-list' → logprob: -16.6250057220459
    6. 'j' → logprob: -17.3750057220459
    7. '```' → logprob: -17.5000057220459
    8. 'group' → logprob: -18.1250057220459
    9. '_LIST' → logprob: -18.3750057220459
    10. '_j' → logprob: -18.5000057220459

Token 1137: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -13.500004768371582
    3. 'j' → logprob: -13.750004768371582
    4. '```' → logprob: -14.375004768371582
    5. '[
' → logprob: -14.500004768371582
    6. '[i' → logprob: -14.500004768371582
    7. '(j' → logprob: -16.125003814697266
    8. ' j' → logprob: -16.375003814697266
    9. '                   ' → logprob: -16.500003814697266
    10. ' [' → logprob: -16.750003814697266

Token 1138: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012728952802717686
    2. '                   ' → logprob: -5.512729167938232
    3. '):' → logprob: -5.512729167938232
    4. '):
' → logprob: -5.762729167938232
    5. ':' → logprob: -7.387729167938232
    6. '                       ' → logprob: -8.262728691101074
    7. ')
' → logprob: -8.887728691101074
    8. '<|end|>' → logprob: -9.012728691101074
    9. ':
' → logprob: -9.137728691101074
    10. ']' → logprob: -10.012728691101074

Token 1139: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0004011177225038409
    2. '                   ' → logprob: -8.500401496887207
    3. ':
' → logprob: -9.750401496887207
    4. ':' → logprob: -10.125401496887207
    5. '                           ' → logprob: -10.250401496887207
    6. '                               ' → logprob: -10.875401496887207
    7. '                        
' → logprob: -11.375401496887207
    8. '	                   ' → logprob: -12.375401496887207
    9. '<|end|>' → logprob: -12.625401496887207
    10. ' if' → logprob: -12.750401496887207

Token 1140: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43262743949890137
    2. 'if' (adapté à ' if') → logprob: -1.3076274394989014
    3. '                       ' → logprob: -3.0576274394989014
    4. '                   ' → logprob: -3.5576274394989014
    5. ':
' → logprob: -6.0576276779174805
    6. '
' → logprob: -6.9326276779174805
    7. '                           ' → logprob: -7.1826276779174805
    8. '):
' → logprob: -7.9326276779174805
    9. ' 
' → logprob: -8.80762767791748
    10. '                               ' → logprob: -8.93262767791748

Token 1141: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -7.505351095460355e-05
    2. 'check' → logprob: -9.500075340270996
    3. '(check' → logprob: -16.37507438659668
    4. ' ' → logprob: -19.00007438659668
    5. '.check' → logprob: -19.25007438659668
    6. '	check' → logprob: -19.62507438659668
    7. ' ' → logprob: -20.00007438659668
    8. '_check' → logprob: -20.00007438659668
    9. ')' → logprob: -20.75007438659668
    10. ' not' → logprob: -21.75007438659668

Token 1142: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0002715873415581882
    2. '_' → logprob: -8.750271797180176
    3. '(A' → logprob: -9.250271797180176
    4. '_EQUAL' → logprob: -12.750271797180176
    5. 'Equal' → logprob: -12.875271797180176
    6. '(B' → logprob: -13.000271797180176
    7. 'equal' → logprob: -13.250271797180176
    8. '_(' → logprob: -13.250271797180176
    9. '_strength' → logprob: -13.750271797180176
    10. '_equ' → logprob: -14.000271797180176

Token 1143: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -9.996708104154095e-05
    2. '_equal' → logprob: -9.500100135803223
    3. '(
' → logprob: -11.500100135803223
    4. '(' → logprob: -11.625100135803223
    5. 'Equal' → logprob: -13.000100135803223
    6. '(Equal' → logprob: -13.000100135803223
    7. ' (' → logprob: -14.625100135803223
    8. ')' → logprob: -15.375100135803223
    9. '(B' → logprob: -15.375100135803223
    10. '(E' → logprob: -15.625100135803223

Token 1144: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.018221933394670486
    2. ',' → logprob: -4.018221855163574
    3. ',
' → logprob: -10.143221855163574
    4. ' ,' → logprob: -11.018221855163574
    5. ',b' → logprob: -11.518221855163574
    6. ',A' → logprob: -12.518221855163574
    7. '                   ' → logprob: -14.768221855163574
    8. '           ' → logprob: -14.893221855163574
    9. '(B' → logprob: -15.643221855163574
    10. '               ' → logprob: -15.768221855163574

Token 1145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3136712908744812
    2. '):
' → logprob: -1.313671350479126
    3. ')' → logprob: -8.563671112060547
    4. '                       ' → logprob: -8.938671112060547
    5. '                   ' → logprob: -10.438671112060547
    6. ':' → logprob: -10.438671112060547
    7. '):
' → logprob: -11.813671112060547
    8. ':
' → logprob: -11.938671112060547
    9. '():
' → logprob: -12.313671112060547
    10. ')==' → logprob: -12.688671112060547

Token 1146: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00027718624914996326
    2. '                           ' → logprob: -8.750277519226074
    3. '                        
' → logprob: -9.875277519226074
    4. '                               ' → logprob: -10.125277519226074
    5. '                   ' → logprob: -11.500277519226074
    6. '                        ' → logprob: -12.375277519226074
    7. ':
' → logprob: -13.375277519226074
    8. '               ' → logprob: -13.500277519226074
    9. ' union' → logprob: -13.500277519226074
    10. '                      ' → logprob: -13.625277519226074

Token 1147: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.11876395344734192
    2. 'union' (adapté à ' union') → logprob: -2.2437639236450195
    3. '                           ' → logprob: -5.4937639236450195
    4. '                       ' → logprob: -6.4937639236450195
    5. '   ' → logprob: -9.61876392364502
    6. '                               ' → logprob: -10.11876392364502
    7. '.union' → logprob: -10.11876392364502
    8. '           ' → logprob: -10.86876392364502
    9. 'un' → logprob: -10.86876392364502
    10. '
' → logprob: -11.24376392364502

Token 1148: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.125000953674316
    3. '(
' → logprob: -17.75
    4. '(a' → logprob: -18.0
    5. '                   ' → logprob: -18.5
    6. '((' → logprob: -18.75
    7. '                       ' → logprob: -19.625
    8. ' (' → logprob: -19.875
    9. 'A' → logprob: -19.875
    10. '(B' → logprob: -19.875

Token 1149: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2655559778213501
    2. ',B' → logprob: -1.51555597782135
    3. '(B' → logprob: -4.3905558586120605
    4. ' ,' → logprob: -7.5155558586120605
    5. ',b' → logprob: -7.6405558586120605
    6. ',A' → logprob: -10.640556335449219
    7. ',
' → logprob: -11.140556335449219
    8. ')' → logprob: -11.390556335449219
    9. ' (' → logprob: -11.640556335449219
    10. '(' → logprob: -11.640556335449219

Token 1150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.250000953674316
    3. '                       ' → logprob: -15.625000953674316
    4. '<|end|>' → logprob: -16.500001907348633
    5. ' )' → logprob: -16.625001907348633
    6. ')#' → logprob: -17.125001907348633
    7. '))' → logprob: -17.500001907348633
    8. ')}' → logprob: -17.500001907348633
    9. ')return' → logprob: -17.875001907348633
    10. '                   ' → logprob: -18.125001907348633

Token 1151: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1152: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16173124313354492
    2. '       ' → logprob: -1.911731243133545
    3. '
' → logprob: -7.161731243133545
    4. '```' → logprob: -7.411731243133545
    5. ' for' → logprob: -9.536731719970703
    6. '   ' → logprob: -10.036731719970703
    7. '        
' → logprob: -12.286731719970703
    8. '#' (adapté à ' #') → logprob: -13.161731719970703
    9. '           ' → logprob: -13.536731719970703
    10. '``' → logprob: -13.661731719970703

Token 1153: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03854344040155411
    2. '       ' → logprob: -3.288543462753296
    3. 'answers' → logprob: -8.538543701171875
    4. ' for' → logprob: -9.413543701171875
    5. '   ' → logprob: -9.413543701171875
    6. 'results' → logprob: -10.163543701171875
    7. '
' → logprob: -10.663543701171875
    8. 'result' → logprob: -10.913543701171875
    9. '#' → logprob: -10.913543701171875
    10. 'answer' → logprob: -11.413543701171875

Token 1154: ' stronger' (ID: 26929)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5591135025024414
    2. 'answer' → logprob: -1.6841135025024414
    3. 'components' → logprob: -1.8091135025024414
    4. 'component' → logprob: -2.1841135025024414
    5. ' comp' → logprob: -2.9341135025024414
    6. 'comp' → logprob: -3.0591135025024414
    7. 'answers' → logprob: -3.3091135025024414
    8. 'from' → logprob: -3.6841135025024414
    9. 'result' → logprob: -3.8091135025024414
    10. 'ans' → logprob: -4.309113502502441

Token 1155: ' relation' (ID: 18075)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.535370409488678
    2. '_rel' → logprob: -2.285370349884033
    3. '_than' → logprob: -2.410370349884033
    4. '_edges' → logprob: -2.660370349884033
    5. '_map' → logprob: -2.910370349884033
    6. '_sets' → logprob: -3.660370349884033
    7. '_groups' → logprob: -4.035370349884033
    8. '_graph' → logprob: -4.285370349884033
    9. '_relation' → logprob: -4.785370349884033
    10. '=' → logprob: -4.910370349884033

Token 1156: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8448625206947327
    2. 'strong' → logprob: -0.8448625206947327
    3. '
' → logprob: -2.094862461090088
    4. 'edges' → logprob: -5.469862461090088
    5. 'str' → logprob: -5.719862461090088
    6. '#' → logprob: -5.969862461090088
    7. '        
' → logprob: -6.094862461090088
    8. 'strength' → logprob: -6.469862461090088
    9. ' stronger' → logprob: -7.094862461090088
    10. '```' → logprob: -7.594862461090088

Token 1157: ':
' (ID: 734)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.28815025091171265
    2. '       ' → logprob: -1.4131503105163574
    3. '
' → logprob: -5.788150310516357
    4. '```' → logprob: -6.913150310516357
    5. 'str' → logprob: -7.038150310516357
    6. ',strong' → logprob: -7.413150310516357
    7. '        
' → logprob: -7.538150310516357
    8. ' stronger' → logprob: -7.913150310516357
    9. '``' → logprob: -8.5381498336792
    10. 'strength' → logprob: -8.6631498336792

Token 1158: '       ' (ID: 309)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.11764751374721527
    2. ' stronger' → logprob: -3.117647409439087
    3. '       ' → logprob: -3.242647409439087
    4. ' strong' → logprob: -4.117647647857666
    5. 'str' → logprob: -5.367647647857666
    6. 'graph' → logprob: -6.742647647857666
    7. '```' → logprob: -6.867647647857666
    8. 'for' → logprob: -6.992647647857666
    9. ' graph' → logprob: -7.242647647857666
    10. ' for' → logprob: -7.242647647857666

Token 1159: ' #' (ID: 1069)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.04450410604476929
    2. ' stronger' → logprob: -3.544504165649414
    3. ' strong' → logprob: -4.919504165649414
    4. 'graph' → logprob: -6.169504165649414
    5. 'for' → logprob: -6.169504165649414
    6. ' for' → logprob: -7.669504165649414
    7. '       ' → logprob: -7.794504165649414
    8. ' graph' → logprob: -7.919504165649414
    9. 's' → logprob: -8.044504165649414
    10. 'str' → logprob: -8.044504165649414

Token 1160: ' A' (ID: 355)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.009082017466425896
    2. 'str' → logprob: -5.384081840515137
    3. 'for' → logprob: -6.134081840515137
    4. '#' → logprob: -6.259081840515137
    5. 'strength' → logprob: -9.134081840515137
    6. 'edges' → logprob: -9.884081840515137
    7. '   ' → logprob: -10.009081840515137
    8. 'from' → logprob: -10.134081840515137
    9. 'stra' → logprob: -10.759081840515137
    10. 'graph' → logprob: -10.884081840515137

Token 1161: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0529990196228027
    2. '_str' → logprob: -1.5529990196228027
    3. ' stronger' → logprob: -2.1779990196228027
    4. '_edges' → logprob: -2.5529990196228027
    5. '=' → logprob: -2.8029990196228027
    6. 'for' → logprob: -3.4279990196228027
    7. '_to' → logprob: -3.5529990196228027
    8. 'graph' → logprob: -4.427999019622803
    9. 'strong' → logprob: -4.552999019622803
    10. 's' → logprob: -4.677999019622803

Token 1162: ' stronger' (ID: 26929)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.8640202283859253
    2. ' stronger' → logprob: -1.7390202283859253
    3. 'str' → logprob: -2.114020347595215
    4. ' graph' → logprob: -2.614020347595215
    5. 'ns' → logprob: -2.989020347595215
    6. ' a' → logprob: -3.739020347595215
    7. ' str' → logprob: -3.864020347595215
    8. 'graph' → logprob: -4.489020347595215
    9. 'a' → logprob: -4.614020347595215
    10. ' ' → logprob: -4.739020347595215

Token 1163: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -1.139561653137207
    2. '_than' → logprob: -1.264561653137207
    3. '=' → logprob: -1.514561653137207
    4. ' =' → logprob: -2.639561653137207
    5. 'if' → logprob: -3.389561653137207
    6. '[' → logprob: -3.764561653137207
    7. '
' → logprob: -5.139561653137207
    8. '```' → logprob: -5.389561653137207
    9. ' than' → logprob: -5.764561653137207
    10. ' if' → logprob: -5.889561653137207

Token 1164: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5231440663337708
    2. ' B' → logprob: -0.8981440663337708
    3. ' ' → logprob: -11.898143768310547
    4. ' =' → logprob: -12.898143768310547
    5. '>B' → logprob: -13.148143768310547
    6. ' a' → logprob: -13.398143768310547
    7. 'b' → logprob: -13.773143768310547
    8. '   ' → logprob: -13.898143768310547
    9. ' graph' → logprob: -14.148143768310547
    10. '=B' → logprob: -14.523143768310547

Token 1165: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7310589551925659
    2. '       ' → logprob: -1.231058955192566
    3. 'strong' → logprob: -2.9810590744018555
    4. '        
' → logprob: -3.2310590744018555
    5. 'graph' → logprob: -3.2310590744018555
    6. ' =' → logprob: -3.6060590744018555
    7. ' stronger' → logprob: -4.2310590744018555
    8. '#' → logprob: -4.6060590744018555
    9. 'edges' → logprob: -4.9810590744018555
    10. '=' → logprob: -5.1060590744018555

Token 1166: ' there' (ID: 1354)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.7094923257827759
    2. 'A' → logprob: -1.7094923257827759
    3. ' (' → logprob: -1.7094923257827759
    4. '(' → logprob: -3.4594922065734863
    5. '(f' → logprob: -4.334492206573486
    6. ' A' → logprob: -4.584492206573486
    7. ''' → logprob: -4.584492206573486
    8. 'any' → logprob: -4.834492206573486
    9. 'graph' → logprob: -4.959492206573486
    10. '(B' → logprob: -4.959492206573486

Token 1167: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.05475306883454323
    2. ' is' → logprob: -3.054753065109253
    3. ''s' → logprob: -5.304753303527832
    4. 'exists' → logprob: -7.179753303527832
    5. '
' → logprob: -9.054753303527832
    6. ''' → logprob: -9.054753303527832
    7. ' exists' → logprob: -9.429753303527832
    8. '```' → logprob: -10.304753303527832
    9. ''is' → logprob: -11.179753303527832
    10. 's' → logprob: -11.304753303527832

Token 1168: ' sequence' (ID: 16281)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.8295429944992065
    2. ' an' → logprob: -0.8295429944992065
    3. 'a' → logprob: -2.579543113708496
    4. ' a' → logprob: -3.204543113708496
    5. ' input' → logprob: -6.079543113708496
    6. 'input' → logprob: -6.079543113708496
    7. 'c' → logprob: -6.204543113708496
    8. ' c' → logprob: -6.954543113708496
    9. 'def' → logprob: -7.579543113708496
    10. 'A' → logprob: -7.579543113708496

Token 1169: ' A' (ID: 355)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3233815133571625
    2. 'of' → logprob: -2.1983814239501953
    3. 'from' → logprob: -2.5733814239501953
    4. ' from' → logprob: -2.6983814239501953
    5. 's' → logprob: -4.698381423950195
    6. ' s' → logprob: -5.323381423950195
    7. '       ' → logprob: -6.073381423950195
    8. ' =' → logprob: -6.323381423950195
    9. 'A' → logprob: -7.698381423950195
    10. ' that' → logprob: -7.823381423950195

Token 1170: ' =' (ID: 314)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '->' → logprob: -1.1075191497802734
    2. ' ->' → logprob: -1.2325191497802734
    3. '-' → logprob: -2.4825191497802734
    4. ' in' → logprob: -2.8575191497802734
    5. ' that' → logprob: -3.1075191497802734
    6. 'that' → logprob: -3.4825191497802734
    7. '
' → logprob: -3.8575191497802734
    8. ' of' → logprob: -3.8575191497802734
    9. '```' → logprob: -3.8575191497802734
    10. 'in' → logprob: -4.607519149780273

Token 1171: ' A' (ID: 355)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.31468069553375244
    2. 'b' → logprob: -2.564680576324463
    3. 'c' → logprob: -3.689680576324463
    4. '...' → logprob: -3.689680576324463
    5. '[B' → logprob: -3.689680576324463
    6. 'a' → logprob: -3.814680576324463
    7. '[' → logprob: -4.189680576324463
    8. '
' → logprob: -4.439680576324463
    9. 'C' → logprob: -4.564680576324463
    10. 'A' → logprob: -4.564680576324463

Token 1172: '1' (ID: 16)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.49635136127471924
    2. '
' → logprob: -2.4963512420654297
    3. '0' → logprob: -3.1213512420654297
    4. ' ->' → logprob: -3.2463512420654297
    5. '1' → logprob: -3.4963512420654297
    6. '-' → logprob: -3.7463512420654297
    7. '>' → logprob: -3.8713512420654297
    8. '-->' → logprob: -3.8713512420654297
    9. '>B' → logprob: -4.12135124206543
    10. 's' → logprob: -4.37135124206543

Token 1173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9553716778755188
    2. '->' → logprob: -1.330371618270874
    3. ',A' → logprob: -2.330371618270874
    4. '<|end|>' → logprob: -2.830371618270874
    5. ' ->' → logprob: -3.205371618270874
    6. '...' → logprob: -3.705371618270874
    7. '<|end|>' → logprob: -3.955371618270874
    8. 'A' → logprob: -3.955371618270874
    9. ' A' → logprob: -4.205371856689453
    10. '=A' → logprob: -4.455371856689453

Token 1174: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2842838764190674
    2. ' A' → logprob: -1.4092838764190674
    3. '[' → logprob: -6.784283638000488
    4. '[A' → logprob: -7.034283638000488
    5. '`' → logprob: -8.409283638000488
    6. ''A' → logprob: -8.909283638000488
    7. '...' → logprob: -8.909283638000488
    8. ' [' → logprob: -8.909283638000488
    9. '>A' → logprob: -9.409283638000488
    10. '
' → logprob: -9.784283638000488

Token 1175: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5277377367019653
    2. '_next' → logprob: -2.027737617492676
    3. '_i' → logprob: -2.402737617492676
    4. '_' → logprob: -2.777737617492676
    5. 's' → logprob: -2.777737617492676
    6. 'i' → logprob: -3.152737617492676
    7. '   ' → logprob: -3.402737617492676
    8. ',' → logprob: -3.527737617492676
    9. '[' → logprob: -3.527737617492676
    10. '```' → logprob: -3.652737617492676

Token 1176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2790842354297638
    2. '->' → logprob: -2.5290842056274414
    3. '...' → logprob: -2.6540842056274414
    4. ',A' → logprob: -3.2790842056274414
    5. ' ->' → logprob: -4.404084205627441
    6. '
' → logprob: -4.529084205627441
    7. ',...' → logprob: -4.779084205627441
    8. '   ' → logprob: -5.779084205627441
    9. '=A' → logprob: -5.779084205627441
    10. '=' → logprob: -6.029084205627441

Token 1177: ' ...,' (ID: 126708)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.049008797854185104
    2. ' A' → logprob: -3.174008846282959
    3. '...' → logprob: -5.799008846282959
    4. '...,' → logprob: -5.924008846282959
    5. '
' → logprob: -8.7990083694458
    6. ',' → logprob: -10.0490083694458
    7. ' ...,' → logprob: -10.4240083694458
    8. '   ' → logprob: -10.6740083694458
    9. ' ...' → logprob: -11.5490083694458
    10. ',A' → logprob: -12.1740083694458

Token 1178: ' An' (ID: 1689)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.26383161544799805
    2. 'An' → logprob: -1.638831615447998
    3. '...' → logprob: -4.138831615447998
    4. ' A' → logprob: -4.513831615447998
    5. ' An' → logprob: -4.763831615447998
    6. 'AN' → logprob: -7.513831615447998
    7. '       ' → logprob: -8.013832092285156
    8. '=' → logprob: -8.513832092285156
    9. '
' → logprob: -8.638832092285156
    10. '   ' → logprob: -8.763832092285156

Token 1179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6320768594741821
    2. '=' → logprob: -1.2570768594741821
    3. '
' → logprob: -2.2570767402648926
    4. '```' → logprob: -3.8820767402648926
    5. ',' → logprob: -4.132076740264893
    6. '_' → logprob: -4.382076740264893
    7. '[' → logprob: -4.757076740264893
    8. 'that' → logprob: -5.507076740264893
    9. 'with' → logprob: -5.632076740264893
    10. ' that' → logprob: -6.007076740264893

Token 1180: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -6.635164754698053e-05
    2. ' B' → logprob: -9.625066757202148
    3. '   ' → logprob: -16.37506675720215
    4. '...' → logprob: -16.75006675720215
    5. '```' → logprob: -16.75006675720215
    6. '>B' → logprob: -17.12506675720215
    7. ' ' → logprob: -17.37506675720215
    8. '"B' → logprob: -17.62506675720215
    9. '`' → logprob: -17.87506675720215
    10. '
' → logprob: -18.12506675720215

Token 1181: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1033676862716675
    2. ',' → logprob: -1.8533676862716675
    3. ' =' → logprob: -2.103367805480957
    4. ',
' → logprob: -2.728367805480957
    5. '=' → logprob: -2.853367805480957
    6. '\n' → logprob: -3.478367805480957
    7. ':
' → logprob: -3.478367805480957
    8. '   ' → logprob: -3.603367805480957
    9. '[' → logprob: -3.728367805480957
    10. ':' → logprob: -4.103367805480957

Token 1182: ' n' (ID: 297)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5834255218505859
    2. 'A' → logprob: -1.708425521850586
    3. 'edges' → logprob: -2.333425521850586
    4. '
' → logprob: -2.958425521850586
    5. 'for' → logprob: -3.833425521850586
    6. 'all' → logprob: -4.208425521850586
    7. 'each' → logprob: -4.458425521850586
    8. 'cross' → logprob: -4.833425521850586
    9. 'equal' → logprob: -4.833425521850586
    10. ' graph' → logprob: -4.958425521850586

Token 1183: '>=' (ID: 20974)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05793103948235512
    2. ' >' → logprob: -3.0579309463500977
    3. '+' → logprob: -5.682930946350098
    4. '=' → logprob: -6.057930946350098
    5. '>=' → logprob: -6.807930946350098
    6. '
' → logprob: -7.057930946350098
    7. '```' → logprob: -7.432930946350098
    8. '   ' → logprob: -8.932930946350098
    9. ' =' → logprob: -9.182930946350098
    10. '-' → logprob: -9.557930946350098

Token 1184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006018842686899006
    2. '1' → logprob: -7.625601768493652
    3. ' ' → logprob: -9.375601768493652
    4. '   ' → logprob: -11.125601768493652
    5. '```' → logprob: -11.875601768493652
    6. '
' → logprob: -12.250601768493652
    7. '       ' → logprob: -14.250601768493652
    8. '           ' → logprob: -14.500601768493652
    9. '>' → logprob: -14.875601768493652
    10. '3' → logprob: -14.875601768493652

Token 1185: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06989718973636627
    2. '       ' → logprob: -3.819897174835205
    3. 'graph' → logprob: -3.819897174835205
    4. '#' → logprob: -4.694897174835205
    5. '```' → logprob: -5.194897174835205
    6. ' graph' → logprob: -5.819897174835205
    7. ',' → logprob: -6.194897174835205
    8. ' for' → logprob: -7.069897174835205
    9. ',
' → logprob: -7.069897174835205
    10. 'for' → logprob: -7.819897174835205

Token 1186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042694080621004105
    2. '
' → logprob: -5.629269599914551
    3. 'graph' → logprob: -8.25426959991455
    4. 'for' → logprob: -8.62926959991455
    5. '```' → logprob: -9.50426959991455
    6. ' for' → logprob: -9.75426959991455
    7. '#' → logprob: -11.25426959991455
    8. '        
' → logprob: -11.25426959991455
    9. '   ' → logprob: -11.50426959991455
    10. '           ' → logprob: -11.62926959991455

Token 1187: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.597999095916748
    2. 'for' → logprob: -1.222999095916748
    3. '#' (adapté à ' #') → logprob: -2.722999095916748
    4. '
' → logprob: -3.347999095916748
    5. 'strong' → logprob: -3.972999095916748
    6. 'edges' → logprob: -3.972999095916748
    7. 'graph' → logprob: -4.597999095916748
    8. ' for' → logprob: -5.597999095916748
    9. '```' → logprob: -7.472999095916748
    10. 'strength' → logprob: -7.847999095916748

Token 1188: ' and' (ID: 326)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.8643614053726196
    2. '#' → logprob: -1.3643614053726196
    3. 'for' → logprob: -1.4893614053726196
    4. 'edges' → logprob: -3.48936128616333
    5. '       ' → logprob: -3.61436128616333
    6. 'str' → logprob: -4.86436128616333
    7. 'graph' → logprob: -5.23936128616333
    8. 'greater' → logprob: -5.48936128616333
    9. 'out' → logprob: -5.86436128616333
    10. '```' → logprob: -5.98936128616333

Token 1189: ' for' (ID: 395)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.2915102243423462
    2. '(A' → logprob: -1.4165102243423462
    3. 'all' → logprob: -1.5415102243423462
    4. 'A' → logprob: -2.2915101051330566
    5. ' (' → logprob: -3.2915101051330566
    6. 'for' → logprob: -3.4165101051330566
    7. ' any' → logprob: -3.9165101051330566
    8. 'any' → logprob: -4.166510105133057
    9. '(' → logprob: -4.541510105133057
    10. 'graph' → logprob: -4.666510105133057

Token 1190: ' any' (ID: 1062)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.6869245767593384
    2. 'i' → logprob: -2.561924457550049
    3. ' each' → logprob: -2.561924457550049
    4. 'all' → logprob: -2.811924457550049
    5. 'some' → logprob: -2.811924457550049
    6. 'A' → logprob: -3.061924457550049
    7. 'every' → logprob: -3.186924457550049
    8. 'st' → logprob: -3.936924457550049
    9. ' every' → logprob: -3.936924457550049
    10. 'a' → logprob: -4.186924457550049

Token 1191: ' i' (ID: 575)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5462216138839722
    2. ' edge' → logprob: -1.5462216138839722
    3. ' A' → logprob: -2.0462217330932617
    4. ' i' → logprob: -2.2962217330932617
    5. ' line' → logprob: -2.6712217330932617
    6. '
' → logprob: -3.1712217330932617
    7. 'i' → logprob: -3.1712217330932617
    8. ' (' → logprob: -3.2962217330932617
    9. 'edge' → logprob: -3.4212217330932617
    10. '   ' → logprob: -4.046221733093262

Token 1192: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7530933022499084
    2. '+' → logprob: -0.8780933022499084
    3. 'n' → logprob: -2.5030932426452637
    4. '
' → logprob: -4.878093242645264
    5. '   ' → logprob: -4.878093242645264
    6. ' +' → logprob: -5.253093242645264
    7. '[' → logprob: -6.253093242645264
    8. 'in' → logprob: -6.378093242645264
    9. '<n' → logprob: -6.378093242645264
    10. '[n' → logprob: -6.753093242645264

Token 1193: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31335991621017456
    2. ' range' → logprob: -1.3133599758148193
    3. '[' → logprob: -9.688360214233398
    4. '(range' → logprob: -11.188360214233398
    5. '1' → logprob: -11.438360214233398
    6. ' ' → logprob: -12.438360214233398
    7. ' [' → logprob: -12.938360214233398
    8. '   ' → logprob: -13.063360214233398
    9. '	range' → logprob: -13.938360214233398
    10. '```' → logprob: -14.688360214233398

Token 1194: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0032597112003713846
    2. ' range' → logprob: -5.753259658813477
    3. '[' → logprob: -9.878259658813477
    4. '1' → logprob: -10.503259658813477
    5. '(range' → logprob: -14.003259658813477
    6. '```' → logprob: -14.378259658813477
    7. '`' → logprob: -14.503259658813477
    8. '
' → logprob: -14.503259658813477
    9. '	range' → logprob: -15.378259658813477
    10. '0' → logprob: -15.503259658813477

Token 1195: ' ..' (ID: 8548)
  Prédit: '..'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '..' → logprob: -0.3574902415275574
    2. '+' → logprob: -1.8574903011322021
    3. ',' → logprob: -2.482490301132202
    4. ':' → logprob: -4.107490062713623
    5. '<len' → logprob: -4.607490062713623
    6. '...' → logprob: -4.732490062713623
    7. ',len' → logprob: -4.857490062713623
    8. ' +' → logprob: -5.607490062713623
    9. '..<' → logprob: -6.107490062713623
    10. ',...' → logprob: -6.232490062713623

Token 1196: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.035323936492204666
    2. 'len' → logprob: -3.7853238582611084
    3. 'range' → logprob: -4.6603240966796875
    4. '(n' → logprob: -7.0353240966796875
    5. '(len' → logprob: -7.5353240966796875
    6. ' n' → logprob: -7.7853240966796875
    7. ' range' → logprob: -7.9103240966796875
    8. ' len' → logprob: -9.410324096679688
    9. '   ' → logprob: -10.035324096679688
    10. '           ' → logprob: -10.160324096679688

Token 1197: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030132846906781197
    2. '+' → logprob: -3.90513277053833
    3. '```' → logprob: -5.28013277053833
    4. ' -' → logprob: -6.28013277053833
    5. '   ' → logprob: -7.78013277053833
    6. '=' → logprob: -7.78013277053833
    7. '       ' → logprob: -8.405133247375488
    8. '
' → logprob: -8.530133247375488
    9. '-
' → logprob: -8.655133247375488
    10. '``' → logprob: -8.780133247375488

Token 1198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005418142303824425
    2. '-' → logprob: -5.755418300628662
    3. '2' → logprob: -7.130418300628662
    4. 'range' → logprob: -7.255418300628662
    5. '```' → logprob: -7.880418300628662
    6. 'n' → logprob: -9.005417823791504
    7. 'len' → logprob: -9.755417823791504
    8. 'length' → logprob: -10.005417823791504
    9. ')' → logprob: -10.505417823791504
    10. '``' → logprob: -11.255417823791504

Token 1199: ' either' (ID: 4784)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4898543655872345
    2. ':' → logprob: -1.614854335784912
    3. ':
' → logprob: -1.739854335784912
    4. '                   ' → logprob: -5.739854335784912
    5. '   ' → logprob: -6.364854335784912
    6. '                       ' → logprob: -6.614854335784912
    7. ' :' → logprob: -6.864854335784912
    8. '       ' → logprob: -6.864854335784912
    9. '           ' → logprob: -6.989854335784912
    10. ' ,' → logprob: -7.114854335784912

Token 1200: ' Ai' (ID: 58700)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7373939156532288
    2. 'A' → logprob: -2.112393856048584
    3. ' (' → logprob: -2.237393856048584
    4. '(A' → logprob: -2.362393856048584
    5. ' graph' → logprob: -2.362393856048584
    6. '(graph' → logprob: -3.112393856048584
    7. ' A' → logprob: -3.987393856048584
    8. '
' → logprob: -4.112393856048584
    9. '                   ' → logprob: -5.237393856048584
    10. '       ' → logprob: -5.487393856048584

Token 1201: '-A' (ID: 9406)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19898387789726257
    2. ' in' → logprob: -2.698983907699585
    3. '```' → logprob: -4.323983669281006
    4. '   ' → logprob: -4.448983669281006
    5. '-' → logprob: -4.448983669281006
    6. 'A' → logprob: -4.573983669281006
    7. '
' → logprob: -4.698983669281006
    8. ' s' → logprob: -4.948983669281006
    9. ' A' → logprob: -5.323983669281006
    10. '+' → logprob: -5.448983669281006

Token 1202: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.035513442009687424
    2. 'j' → logprob: -4.285513401031494
    3. '_i' → logprob: -5.160513401031494
    4. 'I' → logprob: -5.285513401031494
    5. 'A' → logprob: -5.910513401031494
    6. 'Ai' → logprob: -6.910513401031494
    7. '>' → logprob: -7.035513401031494
    8. '1' → logprob: -7.160513401031494
    9. 'B' → logprob: -7.160513401031494
    10. 'r' → logprob: -7.535513401031494

Token 1203: '+' (ID: 10)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3032478988170624
    2. 'i' → logprob: -1.9282479286193848
    3. '>' → logprob: -2.9282479286193848
    4. '1' → logprob: -4.178247928619385
    5. 'j' → logprob: -4.803247928619385
    6. 'n' → logprob: -5.428247928619385
    7. '
' → logprob: -5.428247928619385
    8. '[i' → logprob: -5.865747928619385
    9. '_i' → logprob: -5.990747928619385
    10. 'a' → logprob: -6.178247928619385

Token 1204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.994086627149954e-05
    2. 'i' → logprob: -10.125080108642578
    3. '+' → logprob: -10.500080108642578
    4. '```' → logprob: -11.750080108642578
    5. '...' → logprob: -13.500080108642578
    6. '`' → logprob: -14.000080108642578
    7. '
' → logprob: -14.562580108642578
    8. '``' → logprob: -15.500080108642578
    9. 'Ai' → logprob: -15.937580108642578
    10. 'A' → logprob: -16.187580108642578

Token 1205: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18349336087703705
    2. 'in' → logprob: -1.8084933757781982
    3. ' not' → logprob: -6.808493137359619
    4. '<|end|>' → logprob: -7.058493137359619
    5. ')' → logprob: -7.558493137359619
    6. ' or' → logprob: -8.558493614196777
    7. '[' → logprob: -8.808493614196777
    8. '           ' → logprob: -9.058493614196777
    9. '       ' → logprob: -9.683493614196777
    10. ' ' → logprob: -9.683493614196777

Token 1206: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11012666672468185
    2. ' in' → logprob: -3.3601267337799072
    3. 'equal' → logprob: -3.9851267337799072
    4. 'an' → logprob: -4.485126495361328
    5. 'a' → logprob: -4.735126495361328
    6. 'input' → logprob: -4.985126495361328
    7. 'A' → logprob: -5.110126495361328
    8. 'not' → logprob: -5.360126495361328
    9. 'direct' → logprob: -5.735126495361328
    10. 'st' → logprob: -6.610126495361328

Token 1207: ' input' (ID: 3422)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6121264696121216
    2. 'equal' → logprob: -1.7371264696121216
    3. ' graph' → logprob: -2.112126350402832
    4. 'cross' → logprob: -2.237126350402832
    5. ' equal' → logprob: -3.987126350402832
    6. 'dir' → logprob: -5.237126350402832
    7. ' crossings' → logprob: -5.737126350402832
    8. 'strong' → logprob: -5.862126350402832
    9. 'ns' → logprob: -5.862126350402832
    10. '
' → logprob: -5.987126350402832

Token 1208: ' crossings' (ID: 199340)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5546713471412659
    2. ' and' → logprob: -1.054671287536621
    3. '           ' → logprob: -3.804671287536621
    4. 'and' → logprob: -3.929671287536621
    5. '       ' → logprob: -4.554671287536621
    6. 'or' → logprob: -5.304671287536621
    7. '<|end|>' → logprob: -5.304671287536621
    8. '
' → logprob: -5.429671287536621
    9. ',' → logprob: -5.929671287536621
    10. ')' → logprob: -5.929671287536621

Token 1209: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4821246564388275
    2. '
' → logprob: -1.10712468624115
    3. '<|end|>' → logprob: -3.8571245670318604
    4. '           ' → logprob: -3.9821245670318604
    5. '        
' → logprob: -6.2321248054504395
    6. ' or' → logprob: -6.3571248054504395
    7. ',' → logprob: -6.4821248054504395
    8. ' and' → logprob: -6.6071248054504395
    9. '                       ' → logprob: -6.9821248054504395
    10. '#' → logprob: -7.6071248054504395

Token 1210: ' Ai' (ID: 58700)
  Prédit: ' Ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ai' → logprob: -0.6094856262207031
    2. 'Ai' → logprob: -0.8594856262207031
    3. '
' → logprob: -4.984485626220703
    4. '\n' → logprob: -5.234485626220703
    5. '(A' → logprob: -5.734485626220703
    6. 'A' → logprob: -6.109485626220703
    7. '#' → logprob: -6.359485626220703
    8. 'graph' → logprob: -6.484485626220703
    9. ' (' → logprob: -6.859485626220703
    10. ' ' → logprob: -6.984485626220703

Token 1211: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10280848294496536
    2. '-A' → logprob: -3.6028084754943848
    3. '-' → logprob: -3.7278084754943848
    4. '
' → logprob: -4.852808475494385
    5. '_A' → logprob: -4.977808475494385
    6. '[i' → logprob: -5.102808475494385
    7. '   ' → logprob: -5.477808475494385
    8. '[' → logprob: -5.977808475494385
    9. '-ai' → logprob: -5.977808475494385
    10. '+A' → logprob: -6.102808475494385

Token 1212: ' Ai' (ID: 58700)
  Prédit: 'Ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ai' → logprob: -0.04309533163905144
    2. ' Ai' → logprob: -3.168095350265503
    3. 'A' → logprob: -9.793095588684082
    4. '
' → logprob: -10.418095588684082
    5. 'AI' → logprob: -12.793095588684082
    6. 'ai' → logprob: -13.168095588684082
    7. '_ai' → logprob: -13.293095588684082
    8. ' ' → logprob: -14.043095588684082
    9. '```' → logprob: -15.043095588684082
    10. '_A' → logprob: -15.418095588684082

Token 1213: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006174852605909109
    2. '-' → logprob: -8.125617027282715
    3. '+A' → logprob: -9.250617027282715
    4. '```' → logprob: -10.000617027282715
    5. '[' → logprob: -10.250617027282715
    6. 'plus' → logprob: -10.625617027282715
    7. '
' → logprob: -10.750617027282715
    8. '+
' → logprob: -10.875617027282715
    9. '+i' → logprob: -11.375617027282715
    10. '   ' → logprob: -11.500617027282715

Token 1214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.596781946020201e-05
    2. '+' → logprob: -11.000045776367188
    3. '...' → logprob: -12.000045776367188
    4. '2' → logprob: -12.312545776367188
    5. '```' → logprob: -12.625045776367188
    6. '
' → logprob: -12.750045776367188
    7. '11' → logprob: -13.312545776367188
    8. '10' → logprob: -14.125045776367188
    9. ' ' → logprob: -14.250045776367188
    10. 'Ai' → logprob: -14.375045776367188

Token 1215: ' have' (ID: 679)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.15648239850997925
    2. 'are' → logprob: -2.156482458114624
    3. '
' → logprob: -4.781482219696045
    4. ' have' → logprob: -5.156482219696045
    5. ' in' → logprob: -5.281482219696045
    6. ' not' → logprob: -5.781482219696045
    7. ' belong' → logprob: -6.406482219696045
    8. 'not' → logprob: -6.781482219696045
    9. 'have' → logprob: -6.781482219696045
    10. 'in' → logprob: -7.656482219696045

Token 1216: ' equal' (ID: 12629)
  Prédit: ' equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equal' → logprob: -0.09785119444131851
    2. ' an' → logprob: -3.222851276397705
    3. 'equal' → logprob: -3.472851276397705
    4. ' a' → logprob: -4.347851276397705
    5. ' the' → logprob: -5.847851276397705
    6. '
' → logprob: -5.972851276397705
    7. ' different' → logprob: -6.972851276397705
    8. ''' → logprob: -7.972851276397705
    9. ' edges' → logprob: -7.972851276397705
    10. 'a' → logprob: -8.347850799560547

Token 1217: ' strength' (ID: 9386)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.039535243064165115
    2. 'strength' → logprob: -3.2895352840423584
    3. ' strength' → logprob: -7.039535045623779
    4. '-strength' → logprob: -8.414535522460938
    5. '_' → logprob: -8.914535522460938
    6. '
' → logprob: -8.914535522460938
    7. '```' → logprob: -10.289535522460938
    8. ' _' → logprob: -11.289535522460938
    9. '-' → logprob: -11.539535522460938
    10. '_relation' → logprob: -12.039535522460938

Token 1218: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2133689671754837
    2. '       ' → logprob: -1.7133690118789673
    3. '        
' → logprob: -5.588368892669678
    4. '#' → logprob: -5.838368892669678
    5. 'strong' → logprob: -6.338368892669678
    6. 'graph' → logprob: -6.838368892669678
    7. 'edges' → logprob: -7.213368892669678
    8. '
' → logprob: -8.088369369506836
    9. '

' → logprob: -8.588369369506836
    10. '```' → logprob: -8.838369369506836

Token 1219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30579137802124023
    2. '
' → logprob: -1.4307913780212402
    3. '#' → logprob: -4.05579137802124
    4. '        
' → logprob: -5.43079137802124
    5. '<|end|>' → logprob: -7.05579137802124
    6. 'edges' → logprob: -7.93079137802124
    7. '   ' → logprob: -8.555791854858398
    8. 'import' → logprob: -9.055791854858398
    9. '```' → logprob: -9.055791854858398
    10. 'graph' → logprob: -9.555791854858398

Token 1220: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6381474733352661
    2. '       ' → logprob: -0.7631474733352661
    3. '#' (adapté à ' #') → logprob: -6.013147354125977
    4. '        
' → logprob: -6.388147354125977
    5. 'strong' → logprob: -7.388147354125977
    6. 'edges' → logprob: -8.513147354125977
    7. '```' → logprob: -8.888147354125977
    8. 'graph' → logprob: -9.263147354125977
    9. '

' → logprob: -9.888147354125977
    10. ' stronger' → logprob: -9.888147354125977

Token 1221: ' define' (ID: 13174)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19158044457435608
    2. '       ' → logprob: -1.8165804147720337
    3. '#' → logprob: -5.566580295562744
    4. 'strong' → logprob: -5.816580295562744
    5. '        
' → logprob: -6.066580295562744
    6. 'graph' → logprob: -7.316580295562744
    7. 'edges' → logprob: -8.066580772399902
    8. '```' → logprob: -8.191580772399902
    9. '
' → logprob: -8.691580772399902
    10. '\n' → logprob: -8.816580772399902

Token 1222: ' a' (ID: 261)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.7231074571609497
    2. 'def' → logprob: -1.0981074571609497
    3. 'from' → logprob: -2.34810733795166
    4. '   ' → logprob: -3.59810733795166
    5. '#' → logprob: -3.84810733795166
    6. 'strength' → logprob: -4.22310733795166
    7. 'adj' → logprob: -4.97310733795166
    8. 'import' → logprob: -5.97310733795166
    9. 'graph' → logprob: -5.97310733795166
    10. 'edges' → logprob: -6.47310733795166

Token 1223: ' graph' (ID: 7465)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6993085145950317
    2. 'dj' → logprob: -1.1993085145950317
    3. 'd' → logprob: -2.699308395385742
    4. 'graph' → logprob: -2.824308395385742
    5. 'from' → logprob: -4.074308395385742
    6. '=' → logprob: -4.824308395385742
    7. 'dict' → logprob: -5.199308395385742
    8. 'strong' → logprob: -5.449308395385742
    9. 'irected' → logprob: -5.449308395385742
    10. '#' → logprob: -5.699308395385742

Token 1224: ' with' (ID: 483)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.23926886916160583
    2. ' =' → logprob: -1.8642688989639282
    3. '_str' → logprob: -4.364268779754639
    4. 'str' → logprob: -4.364268779754639
    5. '=' → logprob: -4.489268779754639
    6. ' stronger' → logprob: -4.864268779754639
    7. '
' → logprob: -5.614268779754639
    8. 'graph' → logprob: -6.239268779754639
    9. '```' → logprob: -6.239268779754639
    10. '=
' → logprob: -6.614268779754639

Token 1225: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.6599902510643005
    2. 'edges' → logprob: -2.2849903106689453
    3. 'direct' → logprob: -2.5349903106689453
    4. 'st' → logprob: -2.6599903106689453
    5. 'stre' → logprob: -2.9099903106689453
    6. 'strong' → logprob: -3.4099903106689453
    7. '{' → logprob: -3.6599903106689453
    8. 'equal' → logprob: -3.7849903106689453
    9. 'default' → logprob: -3.9099903106689453
    10. 'for' → logprob: -4.784990310668945

Token 1226: ' as' (ID: 472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2046714872121811
    2. ' =' → logprob: -1.8296715021133423
    3. ' of' → logprob: -5.329671382904053
    4. ' streets' → logprob: -5.454671382904053
    5. 'stre' → logprob: -5.829671382904053
    6. 'of' → logprob: -6.329671382904053
    7. 's' → logprob: -6.704671382904053
    8. 'st' → logprob: -7.079671382904053
    9. 'strong' → logprob: -7.204671382904053
    10. '```' → logprob: -7.204671382904053

Token 1227: ' street' (ID: 12901)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.06616976857185364
    2. ' streets' → logprob: -2.8161697387695312
    3. 'st' → logprob: -6.816169738769531
    4. '```' → logprob: -7.066169738769531
    5. 'the' → logprob: -7.316169738769531
    6. 'street' → logprob: -7.566169738769531
    7. 'all' → logprob: -8.066169738769531
    8. 'equal' → logprob: -8.691169738769531
    9. 'nodes' → logprob: -8.941169738769531
    10. 'strong' → logprob: -9.316169738769531

Token 1228: ' equival' (ID: 56509)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03894699364900589
    2. '=' → logprob: -4.038947105407715
    3. ' =' → logprob: -4.413947105407715
    4. ' s' → logprob: -5.788947105407715
    5. 'vertices' → logprob: -7.788947105407715
    6. '   ' → logprob: -7.788947105407715
    7. 'es' → logprob: -8.038947105407715
    8. '```' → logprob: -8.038947105407715
    9. '_nodes' → logprob: -8.163947105407715
    10. 'nodes' → logprob: -8.288947105407715

Token 1229: 'ence' (ID: 1082)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.021555326879024506
    2. 'als' → logprob: -4.896555423736572
    3. 'ence' → logprob: -5.271555423736572
    4. 'ences' → logprob: -5.271555423736572
    5. 'nts' → logprob: -6.396555423736572
    6. 'val' → logprob: -6.646555423736572
    7. 'ent' → logprob: -8.146554946899414
    8. 'vals' → logprob: -9.271554946899414
    9. 'al' → logprob: -10.021554946899414
    10. 'encies' → logprob: -10.271554946899414

Token 1230: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.16426728665828705
    2. '_classes' → logprob: -2.1642673015594482
    3. ' classes' → logprob: -3.6642673015594482
    4. 'class' → logprob: -4.539267063140869
    5. '_class' → logprob: -8.414267539978027
    6. 's' → logprob: -9.914267539978027
    7. '
' → logprob: -10.414267539978027
    8. '_sets' → logprob: -11.414267539978027
    9. 'sets' → logprob: -11.789267539978027
    10. ' =' → logprob: -11.914267539978027

Token 1231: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3758973777294159
    2. '       ' → logprob: -1.6258974075317383
    3. 'class' → logprob: -3.1258974075317383
    4. '#' → logprob: -3.7508974075317383
    5. 'classes' → logprob: -3.8758974075317383
    6. 'components' → logprob: -5.250897407531738
    7. '        
' → logprob: -5.500897407531738
    8. 'equ' → logprob: -6.125897407531738
    9. '`
' → logprob: -6.375897407531738
    10. 'rep' → logprob: -6.625897407531738

Token 1232: 'equal' (ID: 63943)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12157879024744034
    2. ')
' → logprob: -3.2465786933898926
    3. '#' → logprob: -3.8715786933898926
    4. '):
' → logprob: -4.371578693389893
    5. 'nodes' → logprob: -4.746578693389893
    6. '=' → logprob: -4.871578693389893
    7. '):' → logprob: -5.871578693389893
    8. 'keys' → logprob: -5.871578693389893
    9. '       ' → logprob: -5.996578693389893
    10. '
' → logprob: -6.246578693389893

Token 1233: ' strength' (ID: 9386)
  Prédit: '_classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_classes' → logprob: -0.0833582952618599
    2. '_' → logprob: -3.2083582878112793
    3. '_class' → logprob: -4.083358287811279
    4. ''_' → logprob: -4.583358287811279
    5. '_strength' → logprob: -4.958358287811279
    6. '
' → logprob: -6.458358287811279
    7. '_sets' → logprob: -7.458358287811279
    8. 's' → logprob: -7.583358287811279
    9. '_set' → logprob: -7.833358287811279
    10. ')_' → logprob: -8.208358764648438

Token 1234: ' classes' (ID: 9778)
  Prédit: '_classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_classes' → logprob: -0.5827754735946655
    2. ')' → logprob: -2.082775592803955
    3. 'classes' → logprob: -2.582775592803955
    4. '
' → logprob: -3.332775592803955
    5. '=' → logprob: -3.582775592803955
    6. '_class' → logprob: -3.832775592803955
    7. '_groups' → logprob: -3.957775592803955
    8. '```' → logprob: -4.082775592803955
    9. 's' → logprob: -4.207775592803955
    10. '_' → logprob: -4.332775592803955

Token 1235: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9008119106292725
    2. '
' → logprob: -1.0258119106292725
    3. ')' → logprob: -2.7758119106292725
    4. ')
' → logprob: -2.7758119106292725
    5. ' =' → logprob: -3.5258119106292725
    6. '=' → logprob: -3.7758119106292725
    7. '):
' → logprob: -4.400812149047852
    8. ',
' → logprob: -4.525812149047852
    9. ',' → logprob: -4.775812149047852
    10. ':
' → logprob: -5.150812149047852

Token 1236: '       ' (ID: 309)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.2783631086349487
    2. '
' → logprob: -1.5283631086349487
    3. '       ' → logprob: -2.0283632278442383
    4. 'rep' → logprob: -2.1533632278442383
    5. 'classes' → logprob: -3.1533632278442383
    6. '#' → logprob: -3.4033632278442383
    7. 'eq' → logprob: -3.5283632278442383
    8. 'comp' → logprob: -3.6533632278442383
    9. 'components' → logprob: -3.6533632278442383
    10. 'repr' → logprob: -3.9033632278442383

Token 1237: ' #' (ID: 1069)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5215412974357605
    2. 'eq' → logprob: -2.2715413570404053
    3. 'comp' → logprob: -2.5215413570404053
    4. 'rep' → logprob: -3.0215413570404053
    5. '#' (adapté à ' #') → logprob: -3.5215413570404053
    6. 'classes' → logprob: -3.6465413570404053
    7. '
' → logprob: -3.8965413570404053
    8. '       ' → logprob: -4.021541118621826
    9. 'strong' → logprob: -4.521541118621826
    10. 'equal' → logprob: -4.521541118621826

Token 1238: ' to' (ID: 316)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8350576162338257
    2. 'comp' → logprob: -1.3350576162338257
    3. 'eq' → logprob: -2.3350577354431152
    4. 'rep' → logprob: -2.7100577354431152
    5. 'components' → logprob: -3.3350577354431152
    6. 'classes' → logprob: -3.3350577354431152
    7. '       ' → logprob: -4.335057735443115
    8. 'component' → logprob: -4.585057735443115
    9. '#' → logprob: -4.710057735443115
    10. '
' → logprob: -5.085057735443115

Token 1239: ' do' (ID: 621)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.557847261428833
    2. 'add' → logprob: -1.932847261428833
    3. 'build' → logprob: -2.057847261428833
    4. 'complete' → logprob: -2.182847261428833
    5. '#' → logprob: -2.307847261428833
    6. 'det' → logprob: -3.057847261428833
    7. 'do' → logprob: -3.432847261428833
    8. 'get' → logprob: -3.807847261428833
    9. 'set' → logprob: -4.057847023010254
    10. '_complete' → logprob: -4.182847023010254

Token 1240: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6451383829116821
    2. '
' → logprob: -1.5201383829116821
    3. '#' → logprob: -1.8951383829116821
    4. '<|end|>' → logprob: -3.2701382637023926
    5. '        
' → logprob: -3.5201382637023926
    6. 'class' → logprob: -4.395138263702393
    7. 'equ' → logprob: -5.895138263702393
    8. ' #' → logprob: -5.895138263702393
    9. 'for' → logprob: -6.145138263702393
    10. ' for' → logprob: -6.270138263702393

Token 1241: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25271666049957275
    2. ':' → logprob: -2.627716541290283
    3. ':
' → logprob: -3.002716541290283
    4. '       ' → logprob: -3.252716541290283
    5. '#' → logprob: -3.252716541290283
    6. 'class' → logprob: -4.877716541290283
    7. 'classes' → logprob: -5.502716541290283
    8. '        
' → logprob: -6.252716541290283
    9. 'equ' → logprob: -6.627716541290283
    10. '):
' → logprob: -6.752716541290283

Token 1242: ' map' (ID: 4014)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9672659635543823
    2. '#' → logprob: -1.2172659635543823
    3. 'rep' → logprob: -1.4672659635543823
    4. 'comp' → logprob: -3.467266082763672
    5. 'repr' → logprob: -3.592266082763672
    6. 'eq' → logprob: -4.342266082763672
    7. 'group' → logprob: -6.092266082763672
    8. 'component' → logprob: -6.092266082763672
    9. 'equal' → logprob: -6.217266082763672
    10. 'from' → logprob: -6.342266082763672

Token 1243: ' each' (ID: 2454)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5988475680351257
    2. 'rep' → logprob: -1.5988476276397705
    3. 'each' → logprob: -2.0988476276397705
    4. 'street' → logprob: -2.9738476276397705
    5. 'classes' → logprob: -4.098847389221191
    6. 'parent' → logprob: -4.723847389221191
    7. 'repr' → logprob: -4.723847389221191
    8. '=' → logprob: -4.848847389221191
    9. '_repr' → logprob: -5.473847389221191
    10. 'eq' → logprob: -5.473847389221191

Token 1244: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.16703663766384125
    2. 'st' → logprob: -1.9170366525650024
    3. 'stre' → logprob: -5.667036533355713
    4. ' street' → logprob: -5.917036533355713
    5. 's' → logprob: -8.417037010192871
    6. 'node' → logprob: -8.667037010192871
    7. 'parent' → logprob: -9.792037010192871
    8. 'edge' → logprob: -10.792037010192871
    9. 'class' → logprob: -10.917037010192871
    10. '```' → logprob: -10.917037010192871

Token 1245: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.11314789950847626
    2. 's' → logprob: -2.9881479740142822
    3. 'st' → logprob: -3.2381479740142822
    4. '_to' → logprob: -5.113147735595703
    5. ' to' → logprob: -5.488147735595703
    6. '_st' → logprob: -5.738147735595703
    7. '[' → logprob: -7.238147735595703
    8. 'class' → logprob: -7.738147735595703
    9. '_repr' → logprob: -7.738147735595703
    10. '[class' → logprob: -7.863147735595703

Token 1246: ' its' (ID: 1617)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.03080134466290474
    2. 'parent' → logprob: -4.030801296234131
    3. ' find' → logprob: -5.030801296234131
    4. ' its' → logprob: -5.655801296234131
    5. 'its' → logprob: -6.155801296234131
    6. ' parent' → logprob: -8.030801773071289
    7. 'the' → logprob: -9.905801773071289
    8. '(find' → logprob: -11.030801773071289
    9. 'union' → logprob: -11.905801773071289
    10. 'their' → logprob: -12.030801773071289

Token 1247: ' parent' (ID: 5980)
  Prédit: 'represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'represent' → logprob: -0.18555447459220886
    2. 'parent' → logprob: -2.6855545043945312
    3. 'find' → logprob: -3.1855545043945312
    4. ' representative' → logprob: -3.5605545043945312
    5. 'root' → logprob: -3.6855545043945312
    6. ' parent' → logprob: -5.810554504394531
    7. 'leader' → logprob: -7.060554504394531
    8. ' root' → logprob: -7.560554504394531
    9. ' find' → logprob: -7.560554504394531
    10. 'rep' → logprob: -7.935554504394531

Token 1248: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2217039316892624
    2. '       ' → logprob: -1.7217038869857788
    3. '        
' → logprob: -4.096704006195068
    4. '```' → logprob: -6.721704006195068
    5. '
' → logprob: -7.471704006195068
    6. ')
' → logprob: -8.47170352935791
    7. ',' → logprob: -8.72170352935791
    8. '    
' → logprob: -8.84670352935791
    9. ')' → logprob: -8.84670352935791
    10. 'parent' → logprob: -9.34670352935791

Token 1249: 'equal' (ID: 63943)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04414476826786995
    2. 'parent' → logprob: -3.294144868850708
    3. ' )' → logprob: -5.919144630432129
    4. ')
' → logprob: -7.044144630432129
    5. ' parent' → logprob: -7.294144630432129
    6. '[parent' → logprob: -8.419144630432129
    7. '(parent' → logprob: -8.669144630432129
    8. '),' → logprob: -8.919144630432129
    9. ')find' → logprob: -9.169144630432129
    10. '{' → logprob: -9.294144630432129

Token 1250: ' strength' (ID: 9386)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.30160024762153625
    2. ')' → logprob: -1.4266002178192139
    3. '_' → logprob: -5.426600456237793
    4. 'strength' → logprob: -5.551600456237793
    5. '_st' → logprob: -5.676600456237793
    6. '[' → logprob: -5.926600456237793
    7. ')_' → logprob: -6.176600456237793
    8. ')
' → logprob: -6.551600456237793
    9. ' strength' → logprob: -7.551600456237793
    10. '   ' → logprob: -7.801600456237793

Token 1251: ' class' (ID: 744)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14089620113372803
    2. ')
' → logprob: -2.1408963203430176
    3. 'class' → logprob: -4.765896320343018
    4. '_class' → logprob: -5.640896320343018
    5. '[class' → logprob: -7.515896320343018
    6. '```' → logprob: -8.51589584350586
    7. '[' → logprob: -8.76589584350586
    8. '):
' → logprob: -8.89089584350586
    9. ' class' → logprob: -9.14089584350586
    10. ')`' → logprob: -9.14089584350586

Token 1252: '),
' (ID: 2313)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21081039309501648
    2. ')' → logprob: -2.585810422897339
    3. '
' → logprob: -3.335810422897339
    4. ')
' → logprob: -3.460810422897339
    5. '_map' → logprob: -4.71081018447876
    6. 'mapping' → logprob: -4.96081018447876
    7. '_mapping' → logprob: -5.21081018447876
    8. ' =' → logprob: -5.46081018447876
    9. ' mapping' → logprob: -5.96081018447876
    10. ',' → logprob: -6.08581018447876

Token 1253: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5257341861724854
    2. '       ' → logprob: -1.1507341861724854
    3. ' and' → logprob: -3.1507341861724854
    4. '#' → logprob: -4.275733947753906
    5. '        
' → logprob: -5.025733947753906
    6. ' for' → logprob: -5.525733947753906
    7. ' then' → logprob: -6.025733947753906
    8. 'and' → logprob: -6.025733947753906
    9. 'for' → logprob: -6.150733947753906
    10. ' parent' → logprob: -6.400733947753906

Token 1254: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15605005621910095
    2. '
' → logprob: -2.406049966812134
    3. '        
' → logprob: -4.281050205230713
    4. ' and' → logprob: -5.156050205230713
    5. 'for' → logprob: -5.156050205230713
    6. ' for' → logprob: -5.281050205230713
    7. ' graph' → logprob: -5.281050205230713
    8. 'graph' → logprob: -5.406050205230713
    9. '#' (adapté à ' #') → logprob: -6.031050205230713
    10. ')' → logprob: -6.406050205230713

Token 1255: ' then' (ID: 1815)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.7966105937957764
    2. '#' → logprob: -1.5466105937957764
    3. 'edges' → logprob: -1.6716105937957764
    4. 'out' → logprob: -3.2966105937957764
    5. 'direct' → logprob: -4.2966108322143555
    6. 'graph' → logprob: -4.2966108322143555
    7. '
' → logprob: -4.4216108322143555
    8. '   ' → logprob: -4.6716108322143555
    9. 'str' → logprob: -4.9216108322143555
    10. '       ' → logprob: -5.2966108322143555

Token 1256: ' add' (ID: 1147)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.3919475078582764
    2. '#' → logprob: -1.6419475078582764
    3. 'strong' → logprob: -1.6419475078582764
    4. 'for' → logprob: -2.2669475078582764
    5. 'direct' → logprob: -2.2669475078582764
    6. '
' → logprob: -3.1419475078582764
    7. 'direction' → logprob: -3.6419475078582764
    8. 'dir' → logprob: -4.3919477462768555
    9. 'graph' → logprob: -4.7669477462768555
    10. ' edges' → logprob: -5.0169477462768555

Token 1257: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.059577763080596924
    2. 'edges' → logprob: -2.934577703475952
    3. '_edges' → logprob: -5.684577941894531
    4. '   ' → logprob: -7.059577941894531
    5. ' an' → logprob: -8.559577941894531
    6. '       ' → logprob: -10.059577941894531
    7. ' edge' → logprob: -10.059577941894531
    8. ' directed' → logprob: -10.309577941894531
    9. 'edge' → logprob: -10.684577941894531
    10. '_edge' → logprob: -10.684577941894531

Token 1258: ' between' (ID: 2870)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.213340163230896
    2. 'for' → logprob: -2.0883402824401855
    3. ' for' → logprob: -3.3383402824401855
    4. ' =' → logprob: -4.3383402824401855
    5. '       ' → logprob: -4.4633402824401855
    6. '=' → logprob: -6.4633402824401855
    7. '=
' → logprob: -6.7133402824401855
    8. '        
' → logprob: -6.9633402824401855
    9. ':
' → logprob: -7.4633402824401855
    10. '.
' → logprob: -7.8383402824401855

Token 1259: ' classes' (ID: 9778)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.049681324511766434
    2. ' parent' → logprob: -3.9246814250946045
    3. 'parents' → logprob: -4.299681186676025
    4. 'equal' → logprob: -5.299681186676025
    5. 'classes' → logprob: -5.674681186676025
    6. 'stre' → logprob: -6.174681186676025
    7. 'the' → logprob: -6.424681186676025
    8. 'class' → logprob: -7.549681186676025
    9. 'them' → logprob: -7.674681186676025
    10. ' parents' → logprob: -7.924681186676025

Token 1260: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.230922132730484
    2. '       ' → logprob: -1.8559221029281616
    3. 'edges' → logprob: -3.980922222137451
    4. 'class' → logprob: -4.480922222137451
    5. '        
' → logprob: -5.105922222137451
    6. '#' → logprob: -5.980922222137451
    7. '```' → logprob: -6.230922222137451
    8. '`
' → logprob: -6.980922222137451
    9. '
' → logprob: -7.105922222137451
    10. 'reverse' → logprob: -7.105922222137451

Token 1261: ' there' (ID: 1354)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.0850086212158203
    2. ' there' → logprob: -1.0850086212158203
    3. 'there' → logprob: -1.8350086212158203
    4. 'any' → logprob: -2.4600086212158203
    5. 'they' → logprob: -3.8350086212158203
    6. ' they' → logprob: -4.33500862121582
    7. ' the' → logprob: -4.46000862121582
    8. 'the' → logprob: -4.71000862121582
    9. 'A' → logprob: -5.46000862121582
    10. ' a' → logprob: -6.08500862121582

Token 1262: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.132319837808609
    2. 'exists' → logprob: -2.257319927215576
    3. ' is' → logprob: -4.257319927215576
    4. ' exists' → logprob: -6.257319927215576
    5. 'are' → logprob: -6.382319927215576
    6. 'exist' → logprob: -7.632319927215576
    7. ''s' → logprob: -7.882319927215576
    8. '```' → logprob: -8.507319450378418
    9. 'was' → logprob: -9.507319450378418
    10. '#' → logprob: -9.632319450378418

Token 1263: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.8701751828193665
    2. 'an' → logprob: -1.2451751232147217
    3. 'a' → logprob: -2.1201751232147217
    4. ' a' → logprob: -2.6201751232147217
    5. 'input' → logprob: -3.3701751232147217
    6. ' input' → logprob: -3.7451751232147217
    7. ' at' → logprob: -4.620175361633301
    8. 'c' → logprob: -4.620175361633301
    9. ' c' → logprob: -4.745175361633301
    10. 'at' → logprob: -5.495175361633301

Token 1264: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5477880239486694
    2. ' input' → logprob: -1.1727880239486694
    3. 'edge' → logprob: -2.672788143157959
    4. ' edge' → logprob: -3.172788143157959
    5. 'original' → logprob: -8.5477876663208
    6. 'intersection' → logprob: -8.9227876663208
    7. 'explicit' → logprob: -9.1727876663208
    8. '   ' → logprob: -9.2977876663208
    9. ' original' → logprob: -9.4227876663208
    10. 'adj' → logprob: -9.4227876663208

Token 1265: ' crossing' (ID: 50946)
  Prédit: ' crossing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crossing' → logprob: -0.9120848178863525
    2. '_cross' → logprob: -1.2870848178863525
    3. 'cross' → logprob: -2.1620848178863525
    4. ' line' → logprob: -3.1620848178863525
    5. ' edge' → logprob: -3.2870848178863525
    6. '_' → logprob: -3.2870848178863525
    7. '_edge' → logprob: -3.9120848178863525
    8. 'edge' → logprob: -4.037084579467773
    9. '_c' → logprob: -4.287084579467773
    10. '_line' → logprob: -4.537084579467773

Token 1266: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13253118097782135
    2. '
' → logprob: -2.13253116607666
    3. '        
' → logprob: -6.13253116607666
    4. 'for' → logprob: -6.63253116607666
    5. 'edges' → logprob: -7.00753116607666
    6. ' for' → logprob: -8.00753116607666
    7. ' edges' → logprob: -8.25753116607666
    8. '#' → logprob: -8.88253116607666
    9. '<|end|>' → logprob: -8.88253116607666
    10. '
' → logprob: -9.38253116607666

Token 1267: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.5257726311683655
    2. ' equal' → logprob: -0.9007726311683655
    3. '
' → logprob: -7.275772571563721
    4. ' an' → logprob: -7.525772571563721
    5. 'union' → logprob: -7.900772571563721
    6. ' union' → logprob: -8.650773048400879
    7. 'parent' → logprob: -8.650773048400879
    8. ' parent' → logprob: -8.650773048400879
    9. 'an' → logprob: -9.400773048400879
    10. '   ' → logprob: -9.400773048400879

Token 1268: ' strength' (ID: 9386)
  Prédit: 'strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strength' → logprob: -0.09050630778074265
    2. '_strength' → logprob: -2.4655063152313232
    3. '_edges' → logprob: -7.590506076812744
    4. ' strength' → logprob: -7.715506076812744
    5. '```' → logprob: -8.965506553649902
    6. '   ' → logprob: -9.090506553649902
    7. '
' → logprob: -9.090506553649902
    8. '_' → logprob: -9.840506553649902
    9. '-strength' → logprob: -9.840506553649902
    10. '_st' → logprob: -10.590506553649902

Token 1269: ' connection' (ID: 6703)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30790582299232483
    2. '       ' → logprob: -2.057905912399292
    3. 'graph' → logprob: -3.682905912399292
    4. 'class' → logprob: -3.932905912399292
    5. '_edges' → logprob: -4.557905673980713
    6. 's' → logprob: -4.682905673980713
    7. '#' → logprob: -4.807905673980713
    8. ' =' → logprob: -4.932905673980713
    9. '=' → logprob: -5.182905673980713
    10. '=
' → logprob: -5.432905673980713

Token 1270: ' between' (ID: 2870)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.767988920211792
    2. 'strong' → logprob: -1.767988920211792
    3. '#' → logprob: -2.142988920211792
    4. 'edges' → logprob: -3.142988920211792
    5. '       ' → logprob: -3.517988920211792
    6. '
' → logprob: -3.517988920211792
    7. 'str' → logprob: -3.767988920211792
    8. 'parent' → logprob: -4.017989158630371
    9. 'mapping' → logprob: -4.517989158630371
    10. 'eq' → logprob: -4.642989158630371

Token 1271: ' their' (ID: 1043)
  Prédit: 'them'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'them' → logprob: -0.43123990297317505
    2. 'parent' → logprob: -1.4312398433685303
    3. 'the' → logprob: -2.6812398433685303
    4. ' them' → logprob: -4.181240081787109
    5. 'their' → logprob: -4.931240081787109
    6. ' parent' → logprob: -5.306240081787109
    7. 'two' → logprob: -5.556240081787109
    8. 'stre' → logprob: -5.681240081787109
    9. 'classes' → logprob: -5.931240081787109
    10. 'parents' → logprob: -7.056240081787109

Token 1272: ' members' (ID: 5000)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.0496554374694824
    2. 'parents' → logprob: -1.2996554374694824
    3. 'represent' → logprob: -1.5496554374694824
    4. 'classes' → logprob: -2.5496554374694824
    5. 'members' → logprob: -3.4246554374694824
    6. 'sets' → logprob: -4.424655437469482
    7. '
' → logprob: -4.674655437469482
    8. 'nodes' → logprob: -4.799655437469482
    9. ' representatives' → logprob: -4.799655437469482
    10. 'class' → logprob: -4.924655437469482

Token 1273: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5374506711959839
    2. 'class' → logprob: -1.6624506711959839
    3. '       ' → logprob: -2.2874507904052734
    4. '#' → logprob: -3.2874507904052734
    5. '        
' → logprob: -3.4124507904052734
    6. 'edges' → logprob: -4.037450790405273
    7. 'strong' → logprob: -4.662450790405273
    8. 'reverse' → logprob: -5.412450790405273
    9. 'classes' → logprob: -5.787450790405273
    10. 'equal' → logprob: -6.537450790405273

Token 1274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15345624089241028
    2. '
' → logprob: -2.528456211090088
    3. 'graph' → logprob: -3.778456211090088
    4. 'edges' → logprob: -4.278456211090088
    5. '        
' → logprob: -4.653456211090088
    6. '#' → logprob: -5.278456211090088
    7. 'for' → logprob: -5.278456211090088
    8. '```' → logprob: -6.778456211090088
    9. ' edges' → logprob: -6.903456211090088
    10. 'class' → logprob: -6.903456211090088

Token 1275: ' #' (ID: 1069)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5343402624130249
    2. '#' (adapté à ' #') → logprob: -1.659340262413025
    3. '       ' → logprob: -2.7843403816223145
    4. 'edges' → logprob: -3.6593403816223145
    5. 'strong' → logprob: -4.0343403816223145
    6. 'dir' → logprob: -4.0343403816223145
    7. 'classes' → logprob: -4.5343403816223145
    8. 'parents' → logprob: -4.5343403816223145
    9. 'parent' → logprob: -4.6593403816223145
    10. 'reverse' → logprob: -4.9093403816223145

Token 1276: ' first' (ID: 1577)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8100799322128296
    2. '#' → logprob: -1.4350799322128296
    3. 'dir' → logprob: -1.8100799322128296
    4. 'equal' → logprob: -3.310080051422119
    5. 'edges' → logprob: -4.185080051422119
    6. 'repr' → logprob: -4.310080051422119
    7. 'rep' → logprob: -4.685080051422119
    8. 'direct' → logprob: -4.685080051422119
    9. 'rev' → logprob: -4.685080051422119
    10. 'strong' → logprob: -4.685080051422119

Token 1277: ' create' (ID: 2501)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17956393957138062
    2. 'parent' → logprob: -2.9295639991760254
    3. 'class' → logprob: -3.0545639991760254
    4. 'dir' → logprob: -4.429563999176025
    5. 'parents' → logprob: -4.554563999176025
    6. 'classes' → logprob: -4.804563999176025
    7. 'build' → logprob: -5.554563999176025
    8. 'edges' → logprob: -5.679563999176025
    9. ',' → logprob: -5.804563999176025
    10. 'map' → logprob: -5.804563999176025

Token 1278: ' classes' (ID: 9778)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01722072809934616
    2. 'equal' → logprob: -5.267220497131348
    3. 'parent' → logprob: -5.642220497131348
    4. 'classes' → logprob: -6.267220497131348
    5. ' class' → logprob: -6.392220497131348
    6. 'group' → logprob: -7.392220497131348
    7. 'edges' → logprob: -7.517220497131348
    8. 'mapping' → logprob: -8.017220497131348
    9. 'eq' → logprob: -8.142220497131348
    10. 'component' → logprob: -8.142220497131348

Token 1279: ' mapping' (ID: 22573)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.21228554844856262
    2. 'class' → logprob: -1.9622855186462402
    3. 'equal' → logprob: -3.2122855186462402
    4. 'from' → logprob: -5.46228551864624
    5. 'eq' → logprob: -5.58728551864624
    6. 'components' → logprob: -7.71228551864624
    7. 'equ' → logprob: -7.96228551864624
    8. 'parent' → logprob: -8.087285995483398
    9. '       ' → logprob: -8.212285995483398
    10. '```' → logprob: -8.337285995483398

Token 1280: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.47562578320503235
    2. 'classes' → logprob: -0.97562575340271
    3. 'eq' → logprob: -7.600625991821289
    4. 'equal' → logprob: -8.225625991821289
    5. 'from' → logprob: -8.975625991821289
    6. 'equ' → logprob: -9.225625991821289
    7. 'groups' → logprob: -9.350625991821289
    8. '```' → logprob: -9.725625991821289
    9. 'classe' → logprob: -9.975625991821289
    10. 'group' → logprob: -9.975625991821289

Token 1281: '       ' (ID: 309)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5637289881706238
    2. 'classes' → logprob: -0.9387289881706238
    3. 'stre' → logprob: -4.6887288093566895
    4. '       ' → logprob: -4.8137288093566895
    5. 'street' → logprob: -5.1887288093566895
    6. '```' → logprob: -6.1887288093566895
    7. ' classes' → logprob: -6.3137288093566895
    8. ' class' → logprob: -6.3137288093566895
    9. 'group' → logprob: -6.4387288093566895
    10. 'equal' → logprob: -6.9387288093566895

Token 1282: ' classes' (ID: 9778)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.22795449197292328
    2. 'classes' (adapté à ' classes') → logprob: -1.6029545068740845
    3. 'equal' → logprob: -6.977954387664795
    4. 'parent' → logprob: -7.477954387664795
    5. 'eq' → logprob: -8.227954864501953
    6. 'street' → logprob: -9.102954864501953
    7. 'equ' → logprob: -9.352954864501953
    8. 'rep' → logprob: -9.477954864501953
    9. 'comp' → logprob: -9.602954864501953
    10. '   ' → logprob: -9.852954864501953

Token 1283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02630889043211937
    2. ' =' → logprob: -3.65130877494812
    3. '={}' → logprob: -13.0263090133667
    4. '=
' → logprob: -13.1513090133667
    5. '```' → logprob: -13.4013090133667
    6. '   ' → logprob: -13.6513090133667
    7. 's' → logprob: -14.9013090133667
    8. '_map' → logprob: -15.4013090133667
    9. '=dict' → logprob: -15.6513090133667
    10. '={}
' → logprob: -15.6513090133667

Token 1284: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.0021029175259172916
    2. 'default' → logprob: -6.252102851867676
    3. '{}' → logprob: -9.502102851867676
    4. '{}
' → logprob: -9.752102851867676
    5. '{' → logprob: -10.627102851867676
    6. ' dict' → logprob: -11.252102851867676
    7. 'set' → logprob: -12.752102851867676
    8. 'collections' → logprob: -14.502102851867676
    9. '   ' → logprob: -15.502102851867676
    10. '=dict' → logprob: -15.627102851867676

Token 1285: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.06000018119812012
    2. '()' → logprob: -3.06000018119812
    3. '       ' → logprob: -4.560000419616699
    4. 'for' → logprob: -8.1850004196167
    5. ' =' → logprob: -8.6850004196167
    6. '()

' → logprob: -9.1850004196167
    7. '=' → logprob: -9.1850004196167
    8. 'from' → logprob: -9.3100004196167
    9. '```' → logprob: -10.5600004196167
    10. 'def' → logprob: -11.1850004196167

Token 1286: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006312566343694925
    2. '       ' → logprob: -5.131312370300293
    3. '```' → logprob: -9.256312370300293
    4. 'from' → logprob: -9.381312370300293
    5. 'class' → logprob: -10.006312370300293
    6. '
' → logprob: -10.006312370300293
    7. 'rev' → logprob: -10.506312370300293
    8. ' for' → logprob: -11.006312370300293
    9. 'counts' → logprob: -11.256312370300293
    10. 'parent' → logprob: -11.256312370300293

Token 1287: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00020938136731274426
    2. 'class' → logprob: -9.00020980834961
    3. 'rev' → logprob: -11.00020980834961
    4. '       ' → logprob: -11.25020980834961
    5. 'from' → logprob: -11.37520980834961
    6. 'idx' → logprob: -11.50020980834961
    7. 'count' → logprob: -11.87520980834961
    8. 'counter' → logprob: -12.00020980834961
    9. 'rep' → logprob: -12.00020980834961
    10. 'comp' → logprob: -12.50020980834961

Token 1288: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.009909546934068203
    2. 's' → logprob: -5.259909629821777
    3. ' st' → logprob: -5.384909629821777
    4. ' s' → logprob: -9.634909629821777
    5. '   ' → logprob: -11.509909629821777
    6. 'stre' → logprob: -14.009909629821777
    7. '	st' → logprob: -14.009909629821777
    8. 'street' → logprob: -14.259909629821777
    9. '```' → logprob: -14.634909629821777
    10. 'c' → logprob: -15.009909629821777

Token 1289: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07074099779129028
    2. 'in' → logprob: -2.6957409381866455
    3. '           ' → logprob: -8.195740699768066
    4. '   ' → logprob: -9.445740699768066
    5. ':
' → logprob: -9.445740699768066
    6. '       ' → logprob: -9.695740699768066
    7. 's' → logprob: -9.695740699768066
    8. 'parent' → logprob: -9.820740699768066
    9. '_parent' → logprob: -10.070740699768066
    10. '):
' → logprob: -10.070740699768066

Token 1290: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.0005175283877179027
    2. ' streets' → logprob: -7.62551736831665
    3. 'parent' → logprob: -10.750517845153809
    4. 'st' → logprob: -12.625517845153809
    5. 'stairs' → logprob: -12.750517845153809
    6. 'street' → logprob: -14.000517845153809
    7. 'parents' → logprob: -15.625517845153809
    8. '[' → logprob: -15.625517845153809
    9. 'sts' → logprob: -15.875517845153809
    10. 'str' → logprob: -15.875517845153809

Token 1291: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6622287034988403
    2. ':
' → logprob: -0.7872287034988403
    3. ':' → logprob: -4.037228584289551
    4. '   ' → logprob: -4.787228584289551
    5. '       ' → logprob: -6.537228584289551
    6. '[parent' → logprob: -7.162228584289551
    7. '):
' → logprob: -8.66222858428955
    8. ' =' → logprob: -8.91222858428955
    9. '[' → logprob: -8.91222858428955
    10. '```' → logprob: -9.03722858428955

Token 1292: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01065643597394228
    2. '       ' → logprob: -4.635656356811523
    3. 'classes' → logprob: -7.760656356811523
    4. ' classes' → logprob: -8.010656356811523
    5. '           ' → logprob: -9.135656356811523
    6. '```' → logprob: -10.885656356811523
    7. '(classes' → logprob: -11.635656356811523
    8. ' parent' → logprob: -13.885656356811523
    9. '_classes' → logprob: -14.010656356811523
    10. 'parent' → logprob: -14.760656356811523

Token 1293: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.9845646023750305
    2. 'classes' → logprob: -0.9845646023750305
    3. '   ' → logprob: -2.8595645427703857
    4. ' p' → logprob: -3.1095645427703857
    5. ' classes' → logprob: -3.2345645427703857
    6. 'cls' → logprob: -3.6095645427703857
    7. 'root' → logprob: -3.8595645427703857
    8. 'r' → logprob: -3.9845645427703857
    9. '           ' → logprob: -4.234564781188965
    10. 'rep' → logprob: -4.609564781188965

Token 1294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35645365715026855
    2. ' =' → logprob: -1.9814536571502686
    3. '[p' → logprob: -2.6064536571502686
    4. '[parent' → logprob: -2.9814536571502686
    5. 'p' → logprob: -4.106453895568848
    6. '[class' → logprob: -4.356453895568848
    7. '[' → logprob: -5.606453895568848
    8. '=p' → logprob: -5.981453895568848
    9. 'ar' → logprob: -7.981453895568848
    10. '=find' → logprob: -8.106453895568848

Token 1295: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0026745840441435575
    2. 'parent' → logprob: -6.502674579620361
    3. ' find' → logprob: -6.752674579620361
    4. ' parent' → logprob: -13.37767505645752
    5. '(find' → logprob: -13.62767505645752
    6. 'p' → logprob: -14.75267505645752
    7. '   ' → logprob: -15.62767505645752
    8. '           ' → logprob: -15.75267505645752
    9. '(parent' → logprob: -16.127674102783203
    10. '[parent' → logprob: -16.252674102783203

Token 1296: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0007119550718925893
    2. 'st' → logprob: -7.250711917877197
    3. '(p' → logprob: -13.250712394714355
    4. 'p' → logprob: -15.625712394714355
    5. '	st' → logprob: -17.12571144104004
    6. '(
' → logprob: -17.87571144104004
    7. ' st' → logprob: -18.00071144104004
    8. '(parent' → logprob: -18.00071144104004
    9. '(' → logprob: -18.62571144104004
    10. ' (' → logprob: -19.75071144104004

Token 1297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3520209491252899
    2. '(st' → logprob: -1.3520209789276123
    3. ')
' → logprob: -3.3520209789276123
    4. '[' → logprob: -5.852020740509033
    5. 'st' → logprob: -9.727021217346191
    6. ']' → logprob: -11.352021217346191
    7. '       ' → logprob: -11.477021217346191
    8. '           ' → logprob: -11.727021217346191
    9. ')
' → logprob: -11.977021217346191
    10. '(s' → logprob: -12.227021217346191

Token 1298: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00919943954795599
    2. '```' → logprob: -5.259199619293213
    3. '       ' → logprob: -6.134199619293213
    4. ' classes' → logprob: -7.009199619293213
    5. '   ' → logprob: -7.884199619293213
    6. 'classes' → logprob: -8.259199142456055
    7. '
' → logprob: -9.884199142456055
    8. '[parent' → logprob: -10.509199142456055
    9. ' parent' → logprob: -10.634199142456055
    10. '(classes' → logprob: -10.759199142456055

Token 1299: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10502921044826508
    2. 'classes' → logprob: -2.3550291061401367
    3. '           ' → logprob: -5.355029106140137
    4. ' if' → logprob: -10.605029106140137
    5. '   ' → logprob: -10.605029106140137
    6. '       ' → logprob: -10.980029106140137
    7. '
' → logprob: -11.730029106140137
    8. '               ' → logprob: -12.855029106140137
    9. ' classes' → logprob: -12.855029106140137
    10. '            
' → logprob: -14.105029106140137

Token 1300: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004079470410943031
    2. ' p' → logprob: -5.504079341888428
    3. '           ' → logprob: -14.254079818725586
    4. '   ' → logprob: -14.879079818725586
    5. ' not' → logprob: -17.754079818725586
    6. 'not' → logprob: -17.754079818725586
    7. ' ' → logprob: -17.879079818725586
    8. '               ' → logprob: -17.879079818725586
    9. '<p' → logprob: -17.879079818725586
    10. '
' → logprob: -18.254079818725586

Token 1301: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5237827897071838
    2. ' not' → logprob: -0.8987827897071838
    3. 'p' → logprob: -8.648782730102539
    4. '==' → logprob: -8.773782730102539
    5. '=' → logprob: -9.398782730102539
    6. '=p' → logprob: -9.523782730102539
    7. ' p' → logprob: -9.648782730102539
    8. '[p' → logprob: -10.773782730102539
    9. ')' → logprob: -11.273782730102539
    10. ':not' → logprob: -11.523782730102539

Token 1302: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.062142904847860336
    2. ' in' → logprob: -2.812142848968506
    3. 'classes' → logprob: -8.812143325805664
    4. '(classes' → logprob: -11.562143325805664
    5. '=' → logprob: -11.812143325805664
    6. '
' → logprob: -12.562143325805664
    7. '_classes' → logprob: -12.687143325805664
    8. '   ' → logprob: -14.437143325805664
    9. '```' → logprob: -14.562143325805664
    10. 'not' → logprob: -14.812143325805664

Token 1303: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.0003365350130479783
    2. ' classes' → logprob: -8.000336647033691
    3. '(classes' → logprob: -14.375336647033691
    4. 'class' → logprob: -15.250336647033691
    5. '
' → logprob: -15.875336647033691
    6. '.classes' → logprob: -17.125335693359375
    7. '   ' → logprob: -18.125335693359375
    8. '_classes' → logprob: -18.125335693359375
    9. '           ' → logprob: -18.500335693359375
    10. '```' → logprob: -19.375335693359375

Token 1304: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02576114609837532
    2. '=' → logprob: -3.900761127471924
    3. ':' → logprob: -5.525761127471924
    4. '           ' → logprob: -7.775761127471924
    5. 'classes' → logprob: -8.400761604309082
    6. '(classes' → logprob: -9.150761604309082
    7. ' =' → logprob: -9.650761604309082
    8. '               ' → logprob: -9.650761604309082
    9. ']:
' → logprob: -9.775761604309082
    10. '():
' → logprob: -9.775761604309082

Token 1305: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023732218891382217
    2. '           ' → logprob: -4.6487321853637695
    3. ' =' → logprob: -5.2737321853637695
    4. '```' → logprob: -5.6487321853637695
    5. '=' → logprob: -6.2737321853637695
    6. '       ' → logprob: -6.6487321853637695
    7. '<|end|>' → logprob: -7.5237321853637695
    8. 'classes' → logprob: -8.14873218536377
    9. '                   ' → logprob: -8.39873218536377
    10. '=[]' → logprob: -8.89873218536377

Token 1306: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' (adapté à ' classes') → logprob: -0.0004456852038856596
    2. ' classes' → logprob: -7.75044584274292
    3. '               ' → logprob: -11.625445365905762
    4. '                   ' → logprob: -12.250445365905762
    5. '
' → logprob: -14.625445365905762
    6. '   ' → logprob: -15.000445365905762
    7. '           ' → logprob: -15.750445365905762
    8. '(classes' → logprob: -15.875445365905762
    9. '```' → logprob: -16.500446319580078
    10. 'class' → logprob: -17.000446319580078

Token 1307: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -7.73183855926618e-05
    2. '=' → logprob: -9.625077247619629
    3. '[' → logprob: -12.250077247619629
    4. 'p' → logprob: -13.250077247619629
    5. '=p' → logprob: -13.250077247619629
    6. '[
' → logprob: -14.250077247619629
    7. ' =' → logprob: -14.750077247619629
    8. '```' → logprob: -14.875077247619629
    9. '
' → logprob: -15.125077247619629
    10. '           ' → logprob: -15.375077247619629

Token 1308: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2824964225292206
    2. ']=' → logprob: -1.657496452331543
    3. '=' → logprob: -2.907496452331543
    4. ' =' → logprob: -7.657496452331543
    5. '=set' → logprob: -8.532496452331543
    6. ']={' → logprob: -8.657496452331543
    7. '=[]' → logprob: -11.782496452331543
    8. 'set' → logprob: -12.032496452331543
    9. '']=' → logprob: -12.907496452331543
    10. '   ' → logprob: -13.282496452331543

Token 1309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00031627772841602564
    2. ' =' → logprob: -8.125316619873047
    3. '=set' → logprob: -11.000316619873047
    4. ']=' → logprob: -13.375316619873047
    5. '=[]' → logprob: -13.500316619873047
    6. '=
' → logprob: -15.625316619873047
    7. 'set' → logprob: -16.375316619873047
    8. ']' → logprob: -16.500316619873047
    9. '=[]
' → logprob: -16.625316619873047
    10. ')=' → logprob: -18.000316619873047

Token 1310: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0007615071372129023
    2. '[]' → logprob: -7.25076150894165
    3. '{' → logprob: -10.500761032104492
    4. '[]
' → logprob: -10.750761032104492
    5. ' set' → logprob: -13.125761032104492
    6. ' []' → logprob: -15.125761032104492
    7. '[' → logprob: -15.625761032104492
    8. '   ' → logprob: -17.875761032104492
    9. '[]

' → logprob: -18.000761032104492
    10. '{
' → logprob: -18.000761032104492

Token 1311: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.004097277764230967
    2. '()' → logprob: -5.5040974617004395
    3. '           ' → logprob: -11.129096984863281
    4. '()
' → logprob: -12.754096984863281
    5. '()

' → logprob: -13.754096984863281
    6. '()\' → logprob: -16.25409698486328
    7. '       ' → logprob: -17.12909698486328
    8. '[]
' → logprob: -17.75409698486328
    9. '())
' → logprob: -18.00409698486328
    10. ' ()
' → logprob: -18.00409698486328

Token 1312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.226628895296017e-06
    2. '```' → logprob: -12.000007629394531
    3. '       ' → logprob: -15.500007629394531
    4. 'classes' → logprob: -15.625007629394531
    5. '
' → logprob: -16.25000762939453
    6. '<|end|>' → logprob: -16.37500762939453
    7. '               ' → logprob: -16.50000762939453
    8. '   ' → logprob: -17.00000762939453
    9. '          ' → logprob: -17.00000762939453
    10. '`' → logprob: -17.25000762939453

Token 1313: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' (adapté à ' classes') → logprob: -0.0008696523727849126
    2. '           ' → logprob: -7.2508697509765625
    3. ' classes' → logprob: -9.250869750976562
    4. '   ' → logprob: -9.750869750976562
    5. '       ' → logprob: -13.000869750976562
    6. '```' → logprob: -13.625869750976562
    7. '(classes' → logprob: -14.125869750976562
    8. '
' → logprob: -14.250869750976562
    9. '``' → logprob: -15.625869750976562
    10. '               ' → logprob: -15.750869750976562

Token 1314: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00017183588352054358
    2. '[' → logprob: -8.750171661376953
    3. 'p' → logprob: -11.750171661376953
    4. '[class' → logprob: -13.250171661376953
    5. '[c' → logprob: -13.375171661376953
    6. '[s' → logprob: -14.625171661376953
    7. '
' → logprob: -15.000171661376953
    8. '```' → logprob: -15.250171661376953
    9. '   ' → logprob: -15.625171661376953
    10. '[parent' → logprob: -15.875171661376953

Token 1315: '].' (ID: 1651)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.000945876759942621
    2. '].' → logprob: -7.375946044921875
    3. '.' → logprob: -8.250946044921875
    4. 'add' → logprob: -10.000946044921875
    5. ').' → logprob: -12.375946044921875
    6. ' .' → logprob: -12.625946044921875
    7. '.append' → logprob: -13.125946044921875
    8. '.Add' → logprob: -14.000946044921875
    9. '_add' → logprob: -14.375946044921875
    10. ')add' → logprob: -14.625946044921875

Token 1316: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. ' add' → logprob: -16.5
    3. '.add' → logprob: -16.875
    4. 'append' → logprob: -17.25
    5. '_add' → logprob: -19.75
    6. 'update' → logprob: -20.375
    7. '
' → logprob: -20.625
    8. '	add' → logprob: -20.75
    9. 'adde' → logprob: -21.5
    10. ')add' → logprob: -21.625

Token 1317: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -1.3425219549390022e-05
    2. 'st' → logprob: -11.25001335144043
    3. '(' → logprob: -14.75001335144043
    4. '	st' → logprob: -20.25001335144043
    5. '(
' → logprob: -21.25001335144043
    6. '/st' → logprob: -21.62501335144043
    7. '(p' → logprob: -21.62501335144043
    8. ' st' → logprob: -21.87501335144043
    9. ' (' → logprob: -22.25001335144043
    10. '(s' → logprob: -22.25001335144043

Token 1318: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01437504030764103
    2. ')
' → logprob: -4.26437520980835
    3. '       ' → logprob: -8.514374732971191
    4. ')

' → logprob: -11.514374732971191
    5. '())' → logprob: -15.264374732971191
    6. '```' → logprob: -15.889374732971191
    7. ')
' → logprob: -16.014375686645508
    8. '")' → logprob: -16.139375686645508
    9. '')' → logprob: -16.389375686645508
    10. '),' → logprob: -16.889375686645508

Token 1319: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48272794485092163
    2. '       ' → logprob: -1.2327280044555664
    3. 'edges' → logprob: -3.4827280044555664
    4. '
' → logprob: -3.6077280044555664
    5. 'graph' → logprob: -4.357728004455566
    6. 'direct' → logprob: -4.982728004455566
    7. '```' → logprob: -5.607728004455566
    8. 'reverse' → logprob: -6.357728004455566
    9. 'all' → logprob: -6.982728004455566
    10. 'dire' → logprob: -7.107728004455566

Token 1320: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.14894425868988037
    2. 'dir' → logprob: -2.77394437789917
    3. 'direct' → logprob: -4.02394437789917
    4. 'class' → logprob: -4.02394437789917
    5. 'edges' → logprob: -4.52394437789917
    6. 'strong' → logprob: -5.14894437789917
    7. 'in' → logprob: -5.52394437789917
    8. '       ' → logprob: -5.89894437789917
    9. 'out' → logprob: -6.39894437789917
    10. '   ' → logprob: -6.64894437789917

Token 1321: ' build' (ID: 3024)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4512512981891632
    2. 'class' → logprob: -2.076251268386841
    3. 'dir' → logprob: -2.576251268386841
    4. 'edges' → logprob: -2.826251268386841
    5. 'strong' → logprob: -3.701251268386841
    6. 'direct' → logprob: -4.70125150680542
    7. 'equal' → logprob: -4.82625150680542
    8. 'in' → logprob: -4.95125150680542
    9. 'parent' → logprob: -5.20125150680542
    10. 'rev' → logprob: -5.32625150680542

Token 1322: ' a' (ID: 261)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.17407920956611633
    2. 'class' → logprob: -2.424079179763794
    3. 'edges' → logprob: -3.174079179763794
    4. 'str' → logprob: -4.174079418182373
    5. '#' → logprob: -5.049079418182373
    6. 'graph' → logprob: -6.424079418182373
    7. 'adj' → logprob: -6.674079418182373
    8. 'eq' → logprob: -6.924079418182373
    9. 'edge' → logprob: -7.424079418182373
    10. 'strength' → logprob: -7.799079418182373

Token 1323: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3530888557434082
    2. '#' → logprob: -2.103088855743408
    3. 'class' → logprob: -2.728088855743408
    4. 'direct' → logprob: -3.478088855743408
    5. 'edges' → logprob: -4.103088855743408
    6. 'irected' → logprob: -4.728088855743408
    7. 'g' → logprob: -4.978088855743408
    8. 'dag' → logprob: -5.103088855743408
    9. 'dir' → logprob: -5.228088855743408
    10. 'reverse' → logprob: -5.728088855743408

Token 1324: ' between' (ID: 2870)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.3083804249763489
    2. 'class' → logprob: -1.558380365371704
    3. 'str' → logprob: -4.308380603790283
    4. '       ' → logprob: -4.433380603790283
    5. ' =' → logprob: -5.183380603790283
    6. ' stronger' → logprob: -5.558380603790283
    7. 'strength' → logprob: -5.683380603790283
    8. 'equal' → logprob: -5.808380603790283
    9. 'for' → logprob: -5.933380603790283
    10. 'graph' → logprob: -6.058380603790283

Token 1325: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.10265110433101654
    2. ' classes' → logprob: -2.9776511192321777
    3. 'parent' → logprob: -3.7276511192321777
    4. 'parents' → logprob: -4.227651119232178
    5. 'class' → logprob: -5.852651119232178
    6. ' parents' → logprob: -6.227651119232178
    7. ' parent' → logprob: -6.852651119232178
    8. 'p' → logprob: -6.852651119232178
    9. 'list' → logprob: -8.22765064239502
    10. '
' → logprob: -9.10265064239502

Token 1326: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.10112883150577545
    2. '
' → logprob: -2.6011288166046143
    3. 'graph' → logprob: -4.476129055023193
    4. ' =' → logprob: -5.601129055023193
    5. 'strong' → logprob: -5.851129055023193
    6. '```' → logprob: -7.226129055023193
    7. '=' → logprob: -7.851129055023193
    8. '

' → logprob: -7.976129055023193
    9. 'edges' → logprob: -7.976129055023193
    10. '       ' → logprob: -8.101128578186035

Token 1327: ' stronger' (ID: 26929)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3641358613967896
    2. 'parent' → logprob: -1.3641358613967896
    3. 'equal' → logprob: -2.2391357421875
    4. 'st' → logprob: -2.6141357421875
    5. 'class' → logprob: -2.7391357421875
    6. 'c' → logprob: -3.2391357421875
    7. 'all' → logprob: -3.6141357421875
    8. 's' → logprob: -4.2391357421875
    9. 'strong' → logprob: -4.2391357421875
    10. 'each' → logprob: -4.3641357421875

Token 1328: ' relation' (ID: 18075)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.2339128702878952
    2. '_rel' → logprob: -2.858912944793701
    3. '_relation' → logprob: -2.983912944793701
    4. 'relation' → logprob: -3.608912944793701
    5. ' edges' → logprob: -3.983912944793701
    6. 'edges' → logprob: -4.108912944793701
    7. '_connections' → logprob: -4.483912944793701
    8. ' relation' → logprob: -4.858912944793701
    9. 'relations' → logprob: -5.358912944793701
    10. 'for' → logprob: -6.108912944793701

Token 1329: ' edges' (ID: 22569)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4769318401813507
    2. 'strong' → logprob: -0.9769318103790283
    3. 'str' → logprob: -6.601932048797607
    4. 'classes' → logprob: -6.976932048797607
    5. 'cls' → logprob: -8.97693157196045
    6. 'graph' → logprob: -9.10193157196045
    7. 'for' → logprob: -10.22693157196045
    8. 'super' → logprob: -10.22693157196045
    9. 'relation' → logprob: -10.22693157196045
    10. 'from' → logprob: -10.47693157196045

Token 1330: '
' (ID: 198)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.19408336281776428
    2. 'class' → logprob: -2.1940834522247314
    3. '
' → logprob: -3.4440834522247314
    4. '       ' → logprob: -3.6940834522247314
    5. 'edges' → logprob: -5.944083213806152
    6. 'str' → logprob: -5.944083213806152
    7. 'relation' → logprob: -7.569083213806152
    8. ' stronger' → logprob: -8.069083213806152
    9. 'graph' → logprob: -8.069083213806152
    10. 'classes' → logprob: -8.569083213806152

Token 1331: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6521509885787964
    2. 'edges' → logprob: -1.9021509885787964
    3. '       ' → logprob: -2.027151107788086
    4. 'graph' → logprob: -2.152151107788086
    5. 'class' → logprob: -3.652151107788086
    6. ' edges' → logprob: -4.152151107788086
    7. 'strong' → logprob: -4.152151107788086
    8. ' graph' → logprob: -4.777151107788086
    9. '```' → logprob: -5.402151107788086
    10. 'for' → logprob: -6.152151107788086

Token 1332: ' class' (ID: 744)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.5010554194450378
    2. 'class' (adapté à ' class') → logprob: -1.1260554790496826
    3. 'edges' → logprob: -3.5010554790496826
    4. ' stronger' → logprob: -4.6260552406311035
    5. 'graph' → logprob: -4.7510552406311035
    6. ' class' → logprob: -5.2510552406311035
    7. ' strong' → logprob: -5.6260552406311035
    8. 'for' → logprob: -6.1260552406311035
    9. ' edges' → logprob: -6.2510552406311035
    10. 'str' → logprob: -6.2510552406311035

Token 1333: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.038161635398864746
    2. 's' → logprob: -4.288161754608154
    3. '_edges' → logprob: -4.538161754608154
    4. 'es' → logprob: -5.288161754608154
    5. 'graph' → logprob: -5.538161754608154
    6. '_' → logprob: -7.038161754608154
    7. '_map' → logprob: -7.163161754608154
    8. '_ids' → logprob: -7.788161754608154
    9. '_nodes' → logprob: -7.788161754608154
    10. '_adj' → logprob: -7.788161754608154

Token 1334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759403705596924
    2. '=' → logprob: -0.8259403705596924
    3. '={}' → logprob: -15.200940132141113
    4. 's' → logprob: -15.575940132141113
    5. ' ' → logprob: -16.57594108581543
    6. '={' → logprob: -16.95094108581543
    7. '[' → logprob: -16.95094108581543
    8. '   ' → logprob: -17.07594108581543
    9. '={}
' → logprob: -17.07594108581543
    10. '＝' → logprob: -17.07594108581543

Token 1335: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.05477146431803703
    2. '{}' → logprob: -3.6797714233398438
    3. ' dict' → logprob: -3.8047714233398438
    4. 'default' → logprob: -5.429771423339844
    5. '{' → logprob: -6.679771423339844
    6. ' defaultdict' → logprob: -9.304771423339844
    7. ' {}' → logprob: -10.679771423339844
    8. '{}
' → logprob: -10.679771423339844
    9. 'collections' → logprob: -10.804771423339844
    10. ' {' → logprob: -12.429771423339844

Token 1336: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6788703799247742
    2. '()
' → logprob: -1.178870439529419
    3. 'for' → logprob: -1.928870439529419
    4. '()' → logprob: -3.928870439529419
    5. ' =' → logprob: -4.67887020111084
    6. '=' → logprob: -4.80387020111084
    7. ' for' → logprob: -7.42887020111084
    8. ')' → logprob: -7.67887020111084
    9. ')
' → logprob: -7.67887020111084
    10. '
' → logprob: -8.55387020111084

Token 1337: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16084425151348114
    2. '       ' → logprob: -1.9108442068099976
    3. ' for' → logprob: -7.410844326019287
    4. '   ' → logprob: -11.160843849182129
    5. '```' → logprob: -14.910843849182129
    6. '	for' → logprob: -15.035843849182129
    7. '           ' → logprob: -15.785843849182129
    8. '
' → logprob: -15.910843849182129
    9. ' ' → logprob: -17.660844802856445
    10. '        
' → logprob: -17.785844802856445

Token 1338: ' class' (ID: 744)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. '       ' → logprob: -14.750000953674316
    3. ' for' → logprob: -16.5
    4. '   ' → logprob: -19.5
    5. '
' → logprob: -19.5
    6. 'parent' → logprob: -20.25
    7. '	for' → logprob: -21.875
    8. '           ' → logprob: -22.0
    9. '```' → logprob: -22.125
    10. 'from' → logprob: -22.25

Token 1339: '_list' (ID: 4162)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.7962024807929993
    2. '_keys' → logprob: -1.6712024211883545
    3. '_p' → logprob: -2.0462024211883545
    4. 's' → logprob: -2.5462024211883545
    5. '_' → logprob: -3.0462024211883545
    6. '_nodes' → logprob: -3.4212024211883545
    7. '_classes' → logprob: -3.6712024211883545
    8. '_par' → logprob: -4.171202659606934
    9. '_parent' → logprob: -4.421202659606934
    10. ' =' → logprob: -5.671202659606934

Token 1340: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004664253443479538
    2. ' =' → logprob: -5.379664421081543
    3. '=list' → logprob: -10.504664421081543
    4. '=[]' → logprob: -12.004664421081543
    5. 'for' → logprob: -13.504664421081543
    6. 's' → logprob: -13.504664421081543
    7. ')' → logprob: -13.754664421081543
    8. '_list' → logprob: -13.754664421081543
    9. '_keys' → logprob: -14.004664421081543
    10. '=
' → logprob: -14.004664421081543

Token 1341: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00023917861108202487
    2. '[list' → logprob: -8.500239372253418
    3. ' list' → logprob: -10.250239372253418
    4. '=list' → logprob: -16.6252384185791
    5. '(list' → logprob: -16.8752384185791
    6. 'sorted' → logprob: -17.0002384185791
    7. '[' → logprob: -17.0002384185791
    8. '[]' → logprob: -17.2502384185791
    9. '[class' → logprob: -17.3752384185791
    10. 'set' → logprob: -17.7502384185791

Token 1342: '(classes' (ID: 119839)
  Prédit: '(classes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(classes' → logprob: -4.3226136767771095e-05
    2. 'classes' → logprob: -10.125042915344238
    3. '(parent' → logprob: -13.375042915344238
    4. '(class' → logprob: -13.500042915344238
    5. '(' → logprob: -16.000043869018555
    6. 'parent' → logprob: -17.875043869018555
    7. '(sorted' → logprob: -18.000043869018555
    8. '(colors' → logprob: -18.250043869018555
    9. '(set' → logprob: -18.375043869018555
    10. '(cls' → logprob: -18.750043869018555

Token 1343: '.keys' (ID: 18392)
  Prédit: '.values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.4033498764038086
    2. '.keys' → logprob: -1.1533498764038086
    3. ')' → logprob: -4.278349876403809
    4. 's' → logprob: -7.528349876403809
    5. 'values' → logprob: -7.903349876403809
    6. '(p' → logprob: -8.028349876403809
    7. 'keys' → logprob: -8.153349876403809
    8. ')
' → logprob: -8.778349876403809
    9. '_keys' → logprob: -8.903349876403809
    10. '(classes' → logprob: -8.903349876403809

Token 1344: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.5224103927612305
    2. ')
' → logprob: -1.0224103927612305
    3. ')' → logprob: -3.5224103927612305
    4. '())' → logprob: -4.5224103927612305
    5. '()' → logprob: -5.1474103927612305
    6. '()
' → logprob: -7.0224103927612305
    7. '       ' → logprob: -9.77241039276123
    8. '   ' → logprob: -12.77241039276123
    9. '[])
' → logprob: -12.77241039276123
    10. ' =' → logprob: -13.14741039276123

Token 1345: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47522416710853577
    2. ' for' → logprob: -0.9752241373062134
    3. '```' → logprob: -7.850224018096924
    4. '       ' → logprob: -8.100224494934082
    5. '
' → logprob: -8.725224494934082
    6. '   ' → logprob: -9.100224494934082
    7. ':
' → logprob: -9.475224494934082
    8. ':' → logprob: -9.850224494934082
    9. '``' → logprob: -10.600224494934082
    10. '	for' → logprob: -11.350224494934082

Token 1346: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.13388703338569e-06
    2. '       ' → logprob: -12.000009536743164
    3. ' for' → logprob: -12.750009536743164
    4. '
' → logprob: -18.125009536743164
    5. '   ' → logprob: -18.500009536743164
    6. '```' → logprob: -19.875009536743164
    7. '	for' → logprob: -21.000009536743164
    8. 'class' → logprob: -21.000009536743164
    9. '        
' → logprob: -21.250009536743164
    10. '           ' → logprob: -21.375009536743164

Token 1347: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8507473468780518
    2. 'p' → logprob: -1.1007473468780518
    3. 'cls' → logprob: -1.6007473468780518
    4. 'cl' → logprob: -3.3507473468780518
    5. 'i' → logprob: -5.975747108459473
    6. 'u' → logprob: -7.850747108459473
    7. ' cls' → logprob: -8.475747108459473
    8. ' c' → logprob: -8.975747108459473
    9. 'cp' → logprob: -10.100747108459473
    10. 'pc' → logprob: -10.475747108459473

Token 1348: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07348987460136414
    2. 'lass' → logprob: -3.1984899044036865
    3. 'l' → logprob: -3.6984899044036865
    4. 'p' → logprob: -6.198489665985107
    5. '1' → logprob: -6.573489665985107
    6. 'c' → logprob: -7.073489665985107
    7. 'in' → logprob: -7.698489665985107
    8. 'ls' → logprob: -8.823490142822266
    9. '_' → logprob: -8.948490142822266
    10. '_l' → logprob: -9.698490142822266

Token 1349: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.008340452797710896
    2. 'classes' → logprob: -4.883340358734131
    3. 'range' → logprob: -7.258340358734131
    4. ' class' → logprob: -11.508340835571289
    5. '[class' → logprob: -11.883340835571289
    6. '   ' → logprob: -12.383340835571289
    7. '
' → logprob: -13.008340835571289
    8. 'c' → logprob: -13.133340835571289
    9. '[' → logprob: -14.008340835571289
    10. '(class' → logprob: -14.258340835571289

Token 1350: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.1468943953514099
    2. 'class' → logprob: -2.3968944549560547
    3. 's' → logprob: -4.021894454956055
    4. '_graph' → logprob: -4.396894454956055
    5. 'graph' → logprob: -5.021894454956055
    6. 'ss' → logprob: -6.396894454956055
    7. 'ass' → logprob: -6.521894454956055
    8. '_class' → logprob: -6.646894454956055
    9. 'list' → logprob: -6.646894454956055
    10. 'lass' → logprob: -7.021894454956055

Token 1351: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16250336170196533
    2. ':' → logprob: -1.9125033617019653
    3. '   ' → logprob: -6.162503242492676
    4. '=' → logprob: -9.912503242492676
    5. '       ' → logprob: -10.037503242492676
    6. '[' → logprob: -10.537503242492676
    7. '):
' → logprob: -11.037503242492676
    8. '           ' → logprob: -11.412503242492676
    9. '[class' → logprob: -12.537503242492676
    10. ':
' → logprob: -12.662503242492676

Token 1352: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002113381866365671
    2. '       ' → logprob: -6.252113342285156
    3. 'class' → logprob: -9.002113342285156
    4. ' class' → logprob: -10.252113342285156
    5. '[class' → logprob: -12.127113342285156
    6. '
' → logprob: -12.252113342285156
    7. '           ' → logprob: -12.377113342285156
    8. ' for' → logprob: -13.252113342285156
    9. '```' → logprob: -13.377113342285156
    10. ':
' → logprob: -13.377113342285156

Token 1353: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' (adapté à ' class') → logprob: -0.021285073831677437
    2. ' class' → logprob: -4.021285057067871
    3. '   ' → logprob: -5.771285057067871
    4. '	class' → logprob: -11.646285057067871
    5. '       ' → logprob: -12.646285057067871
    6. '
' → logprob: -13.771285057067871
    7. ' ' → logprob: -14.896285057067871
    8. '[class' → logprob: -15.146285057067871
    9. ',class' → logprob: -15.521285057067871
    10. 'graph' → logprob: -15.771285057067871

Token 1354: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -4.127333340875339e-06
    2. 'graph' → logprob: -12.625003814697266
    3. 'raph' → logprob: -15.500003814697266
    4. '_GRAPH' → logprob: -16.000003814697266
    5. 'Graph' → logprob: -16.500003814697266
    6. '	graph' → logprob: -16.625003814697266
    7. '
' → logprob: -17.000003814697266
    8. '_' → logprob: -17.000003814697266
    9. '_class' → logprob: -17.750003814697266
    10. '[' → logprob: -17.750003814697266

Token 1355: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0002273774443892762
    2. ' =' → logprob: -9.000226974487305
    3. '=' → logprob: -9.750226974487305
    4. '[' → logprob: -10.250226974487305
    5. 'c' → logprob: -11.750226974487305
    6. '=c' → logprob: -13.625226974487305
    7. '[
' → logprob: -14.875226974487305
    8. ']' → logprob: -15.750226974487305
    9. ' [' → logprob: -15.875226974487305
    10. ' c' → logprob: -16.250226974487305

Token 1356: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22195908427238464
    2. ' =' → logprob: -2.221959114074707
    3. ']' → logprob: -2.471959114074707
    4. ']=' → logprob: -5.096959114074707
    5. '=set' → logprob: -9.096959114074707
    6. 'set' → logprob: -12.471959114074707
    7. '>' → logprob: -14.096959114074707
    8. '   ' → logprob: -14.096959114074707
    9. 's' → logprob: -14.221959114074707
    10. ']={' → logprob: -14.346959114074707

Token 1357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001713590754661709
    2. ' =' → logprob: -9.250171661376953
    3. '=set' → logprob: -9.500171661376953
    4. 'set' → logprob: -14.875171661376953
    5. '(set' → logprob: -20.875171661376953
    6. ']=' → logprob: -21.250171661376953
    7. ' set' → logprob: -21.625171661376953
    8. '   ' → logprob: -21.875171661376953
    9. '=

' → logprob: -22.000171661376953
    10. '.=' → logprob: -22.500171661376953

Token 1358: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.676292231422849e-05
    2. ' set' → logprob: -11.000017166137695
    3. '	set' → logprob: -19.875017166137695
    4. '   ' → logprob: -20.250017166137695
    5. '(set' → logprob: -20.625017166137695
    6. '=set' → logprob: -20.750017166137695
    7. ' ' → logprob: -21.625017166137695
    8. 'se' → logprob: -21.875017166137695
    9. ')set' → logprob: -22.125017166137695
    10. '[]' → logprob: -22.500017166137695

Token 1359: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5088270306587219
    2. '()
' → logprob: -1.2588269710540771
    3. '()' → logprob: -2.258826971054077
    4. 'for' → logprob: -5.133827209472656
    5. '
' → logprob: -6.133827209472656
    6. '#' → logprob: -7.133827209472656
    7. '<|end|>' → logprob: -7.633827209472656
    8. '()

' → logprob: -7.758827209472656
    9. '        
' → logprob: -9.133827209472656
    10. '(
' → logprob: -9.883827209472656

Token 1360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005344442906789482
    2. 'for' → logprob: -7.625534534454346
    3. '
' → logprob: -10.625534057617188
    4. '   ' → logprob: -11.500534057617188
    5. '```' → logprob: -12.125534057617188
    6. ' for' → logprob: -12.750534057617188
    7. '           ' → logprob: -12.875534057617188
    8. '#' → logprob: -14.625534057617188
    9. '        
' → logprob: -14.625534057617188
    10. ')' → logprob: -16.750534057617188

Token 1361: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0034278163220733404
    2. '       ' → logprob: -6.003427982330322
    3. '#' (adapté à ' #') → logprob: -7.003427982330322
    4. ' for' → logprob: -10.878427505493164
    5. 'edges' → logprob: -11.003427505493164
    6. '
' → logprob: -12.753427505493164
    7. '```' → logprob: -13.878427505493164
    8. 'dir' → logprob: -14.253427505493164
    9. 'direction' → logprob: -14.503427505493164
    10. 'dire' → logprob: -14.628427505493164

Token 1362: ' helper' (ID: 25246)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002232213271781802
    2. '#' → logprob: -6.752232074737549
    3. '       ' → logprob: -8.127232551574707
    4. 'edges' → logprob: -8.252232551574707
    5. 'in' → logprob: -9.252232551574707
    6. 'cross' → logprob: -9.502232551574707
    7. 'edge' → logprob: -9.502232551574707
    8. 'incoming' → logprob: -10.127232551574707
    9. 'dir' → logprob: -10.502232551574707
    10. 'from' → logprob: -10.502232551574707

Token 1363: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042188677936792374
    2. '
' → logprob: -3.6671886444091797
    3. 'for' → logprob: -4.41718864440918
    4. ' for' → logprob: -6.41718864440918
    5. 'graph' → logprob: -8.04218864440918
    6. 'function' → logprob: -8.29218864440918
    7. 'edges' → logprob: -8.54218864440918
    8. '       ' → logprob: -8.66718864440918
    9. ' def' → logprob: -8.91718864440918
    10. ' function' → logprob: -9.04218864440918

Token 1364: ' get' (ID: 717)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.47604382038116455
    2. 'for' → logprob: -1.3510438203811646
    3. 'get' → logprob: -3.226043701171875
    4. '#' → logprob: -3.351043701171875
    5. ' add' → logprob: -4.476043701171875
    6. 'find' → logprob: -4.476043701171875
    7. 'def' → logprob: -4.726043701171875
    8. '
' → logprob: -5.601043701171875
    9. '       ' → logprob: -6.476043701171875
    10. 'check' → logprob: -6.601043701171875

Token 1365: ' class' (ID: 744)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.4050188958644867
    2. 'class' → logprob: -2.2800188064575195
    3. 'the' → logprob: -2.5300188064575195
    4. ' parent' → logprob: -3.2800188064575195
    5. 'st' → logprob: -3.9050188064575195
    6. 'street' → logprob: -3.9050188064575195
    7. ' the' → logprob: -4.4050188064575195
    8. 'def' → logprob: -4.7800188064575195
    9. 'parents' → logprob: -4.7800188064575195
    10. 'all' → logprob: -4.9050188064575195

Token 1366: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0931527316570282
    2. '_of' → logprob: -2.8431527614593506
    3. ' =' → logprob: -4.0931525230407715
    4. 'of' → logprob: -5.0931525230407715
    5. '=' → logprob: -6.3431525230407715
    6. '(st' → logprob: -6.9681525230407715
    7. '_key' → logprob: -7.3431525230407715
    8. '       ' → logprob: -7.7181525230407715
    9. 's' → logprob: -7.7181525230407715
    10. '_map' → logprob: -7.8431525230407715

Token 1367: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7975740432739258
    2. 'street' → logprob: -0.9225740432739258
    3. 'st' → logprob: -2.172574043273926
    4. 's' → logprob: -3.547574043273926
    5. ' street' → logprob: -5.297574043273926
    6. ' a' → logprob: -6.047574043273926
    7. 'stre' → logprob: -6.797574043273926
    8. 'x' → logprob: -7.297574043273926
    9. 'node' → logprob: -8.922574043273926
    10. '```' → logprob: -10.172574043273926

Token 1368: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.000998155795969069
    2. 'node' → logprob: -7.125998020172119
    3. ' street' → logprob: -9.500998497009277
    4. 'stre' → logprob: -9.625998497009277
    5. 'st' → logprob: -9.875998497009277
    6. 's' → logprob: -14.875998497009277
    7. '```' → logprob: -15.125998497009277
    8. 'vertex' → logprob: -15.250998497009277
    9. ' node' → logprob: -15.500998497009277
    10. '
' → logprob: -16.12599754333496

Token 1369: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17765715718269348
    2. '       ' → logprob: -2.427657127380371
    3. '
' → logprob: -2.677657127380371
    4. ' def' → logprob: -6.052657127380371
    5. '   ' → logprob: -6.802657127380371
    6. '```' → logprob: -6.927657127380371
    7. '        
' → logprob: -7.677657127380371
    8. '           ' → logprob: -8.927657127380371
    9. 'get' → logprob: -9.677657127380371
    10. ':' → logprob: -9.677657127380371

Token 1370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.534665584564209
    2. 'def' → logprob: -0.909665584564209
    3. '
' → logprob: -5.034665584564209
    4. ' def' → logprob: -6.159665584564209
    5. '```' → logprob: -6.409665584564209
    6. '        
' → logprob: -7.534665584564209
    7. '   ' → logprob: -8.284666061401367
    8. '           ' → logprob: -9.284666061401367
    9. '``' → logprob: -9.784666061401367
    10. '`' → logprob: -10.409666061401367

Token 1371: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000597116129938513
    2. '       ' → logprob: -7.87559700012207
    3. ' def' → logprob: -8.62559700012207
    4. '```' → logprob: -10.50059700012207
    5. '
' → logprob: -11.62559700012207
    6. '   ' → logprob: -14.25059700012207
    7. '``' → logprob: -15.37559700012207
    8. '           ' → logprob: -16.25059700012207
    9. '	def' → logprob: -16.37559700012207
    10. 'get' → logprob: -16.87559700012207

Token 1372: ' c' (ID: 274)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.12115824967622757
    2. 'find' → logprob: -2.7461583614349365
    3. 'cls' → logprob: -3.9961583614349365
    4. 'parent' → logprob: -3.9961583614349365
    5. 'class' → logprob: -4.621158123016357
    6. ' get' → logprob: -7.496158123016357
    7. '_get' → logprob: -7.621158123016357
    8. 'cl' → logprob: -7.621158123016357
    9. '_class' → logprob: -8.121158599853516
    10. 'clas' → logprob: -8.246158599853516

Token 1373: 'class' (ID: 1444)
  Prédit: 'lass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lass' → logprob: -0.014301136136054993
    2. 'lasses' → logprob: -4.889301300048828
    3. 'find' → logprob: -5.639301300048828
    4. 'l' → logprob: -6.889301300048828
    5. '_find' → logprob: -7.764301300048828
    6. 'olor' → logprob: -7.764301300048828
    7. '_map' → logprob: -8.639301300048828
    8. 'las' → logprob: -8.889301300048828
    9. '(find' → logprob: -9.014301300048828
    10. 'map' → logprob: -9.139301300048828

Token 1374: '(s' (ID: 1858)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.4104282855987549
    2. '(' → logprob: -1.7854282855987549
    3. '(s' → logprob: -1.7854282855987549
    4. '(x' → logprob: -7.785428047180176
    5. 's' → logprob: -7.910428047180176
    6. '_' → logprob: -9.785428047180176
    7. '(
' → logprob: -10.160428047180176
    8. ' (' → logprob: -10.160428047180176
    9. '(a' → logprob: -10.285428047180176
    10. '(_' → logprob: -10.535428047180176

Token 1375: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3159371614456177
    2. '):' → logprob: -1.3159371614456177
    3. '(s' → logprob: -6.190937042236328
    4. '_' → logprob: -8.690937042236328
    5. ')' → logprob: -9.065937042236328
    6. 's' → logprob: -9.440937042236328
    7. '   ' → logprob: -9.440937042236328
    8. '(' → logprob: -9.440937042236328
    9. '):

' → logprob: -10.815937042236328
    10. '):
' → logprob: -10.815937042236328

Token 1376: '           ' (ID: 352)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.09349890798330307
    2. '(st' → logprob: -2.593498945236206
    3. '   ' → logprob: -4.968498706817627
    4. '           ' → logprob: -5.843498706817627
    5. '       ' → logprob: -5.843498706817627
    6. ':' → logprob: -8.218499183654785
    7. ':
' → logprob: -8.343499183654785
    8. 'return' → logprob: -8.468499183654785
    9. '[' → logprob: -8.468499183654785
    10. '(' → logprob: -8.718499183654785

Token 1377: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16778482496738434
    2. 'return' (adapté à ' return') → logprob: -1.9177848100662231
    3. '   ' → logprob: -5.042784690856934
    4. ' find' → logprob: -7.167784690856934
    5. 'find' → logprob: -8.542784690856934
    6. '           ' → logprob: -10.167784690856934
    7. '       ' → logprob: -10.542784690856934
    8. '	return' → logprob: -11.042784690856934
    9. '    
' → logprob: -11.917784690856934
    10. ' parent' → logprob: -12.417784690856934

Token 1378: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.3917384147644043
    2. 'parent' → logprob: -1.1417384147644043
    3. ' find' → logprob: -5.641738414764404
    4. ' parent' → logprob: -6.641738414764404
    5. '(find' → logprob: -13.266738891601562
    6. '(parent' → logprob: -13.391738891601562
    7. '   ' → logprob: -14.266738891601562
    8. '[parent' → logprob: -16.016738891601562
    9. '	find' → logprob: -17.016738891601562
    10. 'parents' → logprob: -17.141738891601562

Token 1379: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0014245217898860574
    2. '(' → logprob: -6.626424312591553
    3. 's' → logprob: -9.251424789428711
    4. '(st' → logprob: -13.626424789428711
    5. '(
' → logprob: -13.751424789428711
    6. ')' → logprob: -15.376424789428711
    7. ' (' → logprob: -16.00142478942871
    8. '((' → logprob: -18.25142478942871
    9. '(space' → logprob: -18.75142478942871
    10. '(S' → logprob: -18.87642478942871

Token 1380: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4173629879951477
    2. '(s' → logprob: -1.167362928390503
    3. 's' → logprob: -3.542362928390503
    4. ')(' → logprob: -7.667363166809082
    5. '(' → logprob: -8.042363166809082
    6. ')s' → logprob: -8.292363166809082
    7. ')
' → logprob: -11.417363166809082
    8. ' s' → logprob: -11.792363166809082
    9. ' )' → logprob: -12.167363166809082
    10. ' (' → logprob: -12.417363166809082

Token 1381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013747569173574448
    2. '
' → logprob: -6.8763747215271
    3. 'for' → logprob: -8.376375198364258
    4. '   ' → logprob: -9.876375198364258
    5. ' for' → logprob: -10.376375198364258
    6. '           ' → logprob: -11.001375198364258
    7. '```' → logprob: -12.001375198364258
    8. '        
' → logprob: -13.001375198364258
    9. '<|end|>' → logprob: -13.626375198364258
    10. '#' → logprob: -14.126375198364258

Token 1382: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0055961026810109615
    2. '       ' → logprob: -5.630596160888672
    3. '#' (adapté à ' #') → logprob: -6.255596160888672
    4. 'edges' → logprob: -10.505596160888672
    5. ' for' → logprob: -10.630596160888672
    6. '   ' → logprob: -12.005596160888672
    7. '
' → logprob: -12.005596160888672
    8. 'dir' → logprob: -12.255596160888672
    9. 'from' → logprob: -13.505596160888672
    10. 'edge' → logprob: -13.755596160888672

Token 1383: ' input' (ID: 3422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05619041621685028
    2. '#' → logprob: -2.9311904907226562
    3. 'edges' → logprob: -7.181190490722656
    4. 'dir' → logprob: -8.181190490722656
    5. 'direct' → logprob: -9.556190490722656
    6. '       ' → logprob: -10.056190490722656
    7. 'edge' → logprob: -10.181190490722656
    8. 'in' → logprob: -11.056190490722656
    9. 'incoming' → logprob: -11.181190490722656
    10. ' for' → logprob: -11.556190490722656

Token 1384: ' crossing' (ID: 50946)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.14363448321819305
    2. '_lines' → logprob: -2.393634557723999
    3. '_cross' → logprob: -3.893634557723999
    4. 'for' → logprob: -5.14363431930542
    5. 'edges' → logprob: -5.51863431930542
    6. '_line' → logprob: -5.89363431930542
    7. '_dir' → logprob: -5.89363431930542
    8. '_edge' → logprob: -7.01863431930542
    9. 'cross' → logprob: -7.26863431930542
    10. ' edges' → logprob: -7.64363431930542

Token 1385: ' edges' (ID: 22569)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4086726903915405
    2. 'for' → logprob: -1.7836726903915405
    3. 'edges' → logprob: -2.65867280960083
    4. ' for' → logprob: -3.53367280960083
    5. ' edges' → logprob: -3.53367280960083
    6. ' lines' → logprob: -4.65867280960083
    7. '_edges' → logprob: -5.28367280960083
    8. 'lines' → logprob: -5.40867280960083
    9. ' line' → logprob: -5.53367280960083
    10. 'line' → logprob: -6.03367280960083

Token 1386: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006753855384886265
    2. 'for' → logprob: -5.131753921508789
    3. ' for' → logprob: -7.131753921508789
    4. '
' → logprob: -11.381753921508789
    5. '           ' → logprob: -11.881753921508789
    6. '   ' → logprob: -12.131753921508789
    7. ',' → logprob: -15.006753921508789
    8. ' ' → logprob: -15.131753921508789
    9. '#' → logprob: -15.131753921508789
    10. '      ' → logprob: -16.00675392150879

Token 1387: 'direct' (ID: 37135)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0655033141374588
    2. ' for' → logprob: -3.3155033588409424
    3. ')' → logprob: -4.315503120422363
    4. '#' → logprob: -4.940503120422363
    5. '
' → logprob: -5.815503120422363
    6. '       ' → logprob: -6.940503120422363
    7. ')
' → logprob: -7.565503120422363
    8. '           ' → logprob: -7.690503120422363
    9. '):
' → logprob: -8.190503120422363
    10. 'def' → logprob: -8.315503120422363

Token 1388: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.7525802254676819
    2. 'ion' → logprob: -0.8775802254676819
    3. 'ions' → logprob: -3.127580165863037
    4. 'edges' → logprob: -3.377580165863037
    5. 'ly' → logprob: -3.752580165863037
    6. '_edges' → logprob: -5.002580165863037
    7. '   ' → logprob: -7.377580165863037
    8. '```' → logprob: -7.377580165863037
    9. ' edges' → logprob: -7.752580165863037
    10. '
' → logprob: -7.752580165863037

Token 1389: ' as' (ID: 472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.167365312576294
    2. 'edges' → logprob: -1.292365312576294
    3. ' edges' → logprob: -2.042365312576294
    4. 'for' → logprob: -2.542365312576294
    5. '):
' → logprob: -3.042365312576294
    6. '_edges' → logprob: -3.042365312576294
    7. ' for' → logprob: -3.417365312576294
    8. ')
' → logprob: -3.917365312576294
    9. 'from' → logprob: -4.167365074157715
    10. '):' → logprob: -4.167365074157715

Token 1390: ' per' (ID: 777)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.6561377048492432
    2. 'in' → logprob: -2.156137704849243
    3. 'c' → logprob: -2.281137704849243
    4. 'from' → logprob: -2.906137704849243
    5. 'input' → logprob: -3.156137704849243
    6. ' given' → logprob: -3.531137704849243
    7. 'per' → logprob: -3.781137704849243
    8. 'for' → logprob: -3.906137704849243
    9. 'is' → logprob: -3.906137704849243
    10. 'parsed' → logprob: -4.656137466430664

Token 1391: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14108991622924805
    2. ' input' → logprob: -2.266089916229248
    3. 'the' → logprob: -4.016089916229248
    4. 'c' → logprob: -5.266089916229248
    5. 'cross' → logprob: -6.266089916229248
    6. ' the' → logprob: -6.891089916229248
    7. 'original' → logprob: -7.891089916229248
    8. ' crossings' → logprob: -8.141090393066406
    9. 'inputs' → logprob: -8.516090393066406
    10. ' crossing' → logprob: -8.891090393066406

Token 1392: ')
' (ID: 446)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.554404616355896
    2. 'lines' → logprob: -2.3044047355651855
    3. ')' → logprob: -2.4294047355651855
    4. '):
' → logprob: -3.0544047355651855
    5. ')
' → logprob: -3.1794047355651855
    6. '       ' → logprob: -3.5544047355651855
    7. '_lines' → logprob: -3.5544047355651855
    8. '           ' → logprob: -3.6794047355651855
    9. '):' → logprob: -3.9294047355651855
    10. ' for' → logprob: -4.9294047355651855

Token 1393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011458032764494419
    2. ' for' → logprob: -5.386457920074463
    3. '           ' → logprob: -5.386457920074463
    4. 'for' → logprob: -6.136457920074463
    5. '   ' → logprob: -9.886458396911621
    6. ' ' → logprob: -11.761458396911621
    7. '               ' → logprob: -12.636458396911621
    8. ',' → logprob: -13.261458396911621
    9. '      ' → logprob: -13.886458396911621
    10. ')' → logprob: -14.011458396911621

Token 1394: ' dir' (ID: 5609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32736292481422424
    2. 'dir' (adapté à ' dir') → logprob: -1.3273628950119019
    3. ' for' → logprob: -4.827363014221191
    4. '       ' → logprob: -6.327363014221191
    5. ' dir' → logprob: -6.452363014221191
    6. '           ' → logprob: -6.827363014221191
    7. 'edges' → logprob: -6.952363014221191
    8. '   ' → logprob: -8.952363014221191
    9. 'x' → logprob: -9.452363014221191
    10. 'edge' → logprob: -9.702363014221191

Token 1395: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -2.2200749754119897e-06
    2. '_lines' → logprob: -13.625001907348633
    3. '_' → logprob: -15.000001907348633
    4. '_ed' → logprob: -15.250001907348633
    5. '_inputs' → logprob: -16.500001907348633
    6. '_edge' → logprob: -16.750001907348633
    7. ' _' → logprob: -16.750001907348633
    8. '_e' → logprob: -16.750001907348633
    9. ')_' → logprob: -17.500001907348633
    10. '_faces' → logprob: -18.000001907348633

Token 1396: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688376545906067
    2. ' =' → logprob: -1.1368837356567383
    3. '={}' → logprob: -12.136883735656738
    4. '=dict' → logprob: -12.886883735656738
    5. 's' → logprob: -14.011883735656738
    6. '=
' → logprob: -14.136883735656738
    7. 'for' → logprob: -14.636883735656738
    8. '={' → logprob: -14.761883735656738
    9. '={}
' → logprob: -14.761883735656738
    10. '[' → logprob: -15.011883735656738

Token 1397: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.011077644303441048
    2. '{}' → logprob: -4.511077880859375
    3. ' dict' → logprob: -10.886077880859375
    4. '{' → logprob: -11.761077880859375
    5. '{}
' → logprob: -12.761077880859375
    6. ' {}' → logprob: -16.011077880859375
    7. '{})' → logprob: -16.761077880859375
    8. '{}

' → logprob: -16.886077880859375
    9. '(dict' → logprob: -17.136077880859375
    10. 'default' → logprob: -17.386077880859375

Token 1398: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.7352083921432495
    2. '       ' → logprob: -0.8602083921432495
    3. '()' → logprob: -2.985208511352539
    4. 'for' → logprob: -3.485208511352539
    5. ' =' → logprob: -4.485208511352539
    6. '=' → logprob: -5.485208511352539
    7. '           ' → logprob: -7.985208511352539
    8. '   ' → logprob: -8.735208511352539
    9. ' for' → logprob: -9.360208511352539
    10. 'from' → logprob: -9.735208511352539

Token 1399: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31906139850616455
    2. '       ' → logprob: -1.3190613985061646
    3. '           ' → logprob: -5.694061279296875
    4. ' for' → logprob: -6.319061279296875
    5. '   ' → logprob: -7.444061279296875
    6. ' ' → logprob: -11.569061279296875
    7. '	for' → logprob: -11.569061279296875
    8. '```' → logprob: -12.319061279296875
    9. 'For' → logprob: -13.194061279296875
    10. '               ' → logprob: -13.819061279296875

Token 1400: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005685218493454158
    2. '       ' → logprob: -8.000568389892578
    3. ' for' → logprob: -8.375568389892578
    4. '           ' → logprob: -13.625568389892578
    5. '	for' → logprob: -14.125568389892578
    6. 'For' → logprob: -14.625568389892578
    7. '   ' → logprob: -16.000568389892578
    8. '```' → logprob: -16.500568389892578
    9. '<|end|>' → logprob: -17.375568389892578
    10. '               ' → logprob: -18.500568389892578

Token 1401: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003606363432481885
    2. ' c' → logprob: -5.62860631942749
    3. 's' → logprob: -13.253606796264648
    4. 'x' → logprob: -13.878606796264648
    5. '```' → logprob: -14.378606796264648
    6. 'cross' → logprob: -14.503606796264648
    7. '   ' → logprob: -14.753606796264648
    8. 'line' → logprob: -15.003606796264648
    9. 'i' → logprob: -15.128606796264648
    10. '	c' → logprob: -15.378606796264648

Token 1402: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0792580097913742
    2. 'in' → logprob: -2.5792579650878906
    3. '           ' → logprob: -9.20425796508789
    4. 'c' → logprob: -9.70425796508789
    5. '       ' → logprob: -10.20425796508789
    6. ' =' → logprob: -10.70425796508789
    7. '   ' → logprob: -10.82925796508789
    8. ' c' → logprob: -10.95425796508789
    9. 's' → logprob: -11.07925796508789
    10. '=' → logprob: -11.07925796508789

Token 1403: ' crossings' (ID: 199340)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.015216491185128689
    2. ' crossings' → logprob: -4.26521635055542
    3. 'c' → logprob: -6.89021635055542
    4. ' cross' → logprob: -10.515216827392578
    5. 'cro' → logprob: -13.640216827392578
    6. '_cross' → logprob: -13.640216827392578
    7. ' c' → logprob: -14.015216827392578
    8. 'input' → logprob: -14.265216827392578
    9. '-cross' → logprob: -14.515216827392578
    10. 'Cross' → logprob: -14.515216827392578

Token 1404: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22993303835391998
    2. ':' → logprob: -1.7299330234527588
    3. '           ' → logprob: -3.729933023452759
    4. '       ' → logprob: -6.479933261871338
    5. ' =' → logprob: -6.979933261871338
    6. '=' → logprob: -7.104933261871338
    7. '               ' → logprob: -7.729933261871338
    8. '):
' → logprob: -9.10493278503418
    9. '   ' → logprob: -9.85493278503418
    10. '	       ' → logprob: -9.85493278503418

Token 1405: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27338874340057373
    2. '       ' → logprob: -2.0233888626098633
    3. '   ' → logprob: -2.5233888626098633
    4. 'x' → logprob: -4.648388862609863
    5. ':
' → logprob: -5.148388862609863
    6. '               ' → logprob: -5.398388862609863
    7. ':' → logprob: -5.898388862609863
    8. ' x' → logprob: -6.023388862609863
    9. '```' → logprob: -7.273388862609863
    10. '	       ' → logprob: -8.398388862609863

Token 1406: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.018167153000831604
    2. ' x' → logprob: -4.018167018890381
    3. '           ' → logprob: -11.643167495727539
    4. '   ' → logprob: -12.393167495727539
    5. '       ' → logprob: -12.768167495727539
    6. '	x' → logprob: -14.018167495727539
    7. '               ' → logprob: -14.393167495727539
    8. '(x' → logprob: -18.01816749572754
    9. '_x' → logprob: -18.01816749572754
    10. '    ' → logprob: -18.14316749572754

Token 1407: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.006736572831869125
    2. ',' → logprob: -5.006736755371094
    3. ' ,' → logprob: -11.381736755371094
    4. 'y' → logprob: -12.381736755371094
    5. '_,' → logprob: -13.006736755371094
    6. ',_' → logprob: -13.756736755371094
    7. ',w' → logprob: -14.631736755371094
    8. ',Y' → logprob: -14.881736755371094
    9. ',x' → logprob: -15.381736755371094
    10. ',v' → logprob: -15.506736755371094

Token 1408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519395649433136
    2. ' =' → logprob: -1.5019395351409912
    3. '=c' → logprob: -13.25193977355957
    4. '=input' → logprob: -13.62693977355957
    5. 'split' → logprob: -13.75193977355957
    6. '=line' → logprob: -13.87693977355957
    7. '   ' → logprob: -14.25193977355957
    8. ' in' → logprob: -14.37693977355957
    9. ',' → logprob: -14.37693977355957
    10. '=x' → logprob: -14.50193977355957

Token 1409: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12692853808403015
    2. ' c' → logprob: -2.1269285678863525
    3. 'x' → logprob: -15.376928329467773
    4. '	c' → logprob: -16.376928329467773
    5. '(c' → logprob: -17.376928329467773
    6. ' ' → logprob: -17.501928329467773
    7. ' x' → logprob: -17.626928329467773
    8. '<|end|>' → logprob: -17.876928329467773
    9. ')c' → logprob: -17.876928329467773
    10. 'y' → logprob: -18.501928329467773

Token 1410: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.023318499326705933
    2. 'split' → logprob: -3.7733185291290283
    3. 'plit' → logprob: -9.89831829071045
    4. ' .' → logprob: -11.64831829071045
    5. '.' → logprob: -11.77331829071045
    6. '.strip' → logprob: -13.02331829071045
    7. '_split' → logprob: -14.02331829071045
    8. '   ' → logprob: -14.27331829071045
    9. ' split' → logprob: -14.52331829071045
    10. '```' → logprob: -14.77331829071045

Token 1411: '('-' (ID: 33343)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.002334258984774351
    2. '('-' → logprob: -6.127334117889404
    3. '-' → logprob: -9.252334594726562
    4. '"-' → logprob: -10.002334594726562
    5. ' '-'' → logprob: -12.877334594726562
    6. '[-' → logprob: -13.002334594726562
    7. '('-',' → logprob: -13.752334594726562
    8. '[' → logprob: -14.502334594726562
    9. '['' → logprob: -15.002334594726562
    10. '-'' → logprob: -15.127334594726562

Token 1412: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.27668818831443787
    2. ')
' → logprob: -1.5266882181167603
    3. '')' → logprob: -3.7766880989074707
    4. '1' → logprob: -6.776688098907471
    5. ')' → logprob: -8.776688575744629
    6. '")
' → logprob: -9.151688575744629
    7. ''' → logprob: -10.401688575744629
    8. '           ' → logprob: -10.651688575744629
    9. '```' → logprob: -11.026688575744629
    10. '')
' → logprob: -11.276688575744629

Token 1413: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07171324640512466
    2. '               ' → logprob: -2.6967132091522217
    3. '       ' → logprob: -6.821713447570801
    4. '   ' → logprob: -7.446713447570801
    5. '```' → logprob: -10.0717134475708
    6. '                   ' → logprob: -10.6967134475708
    7. '
' → logprob: -10.8217134475708
    8. 'if' → logprob: -12.6967134475708
    9. ' if' → logprob: -12.8217134475708
    10. '	       ' → logprob: -12.9467134475708

Token 1414: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32603931427001953
    2. '           ' → logprob: -1.4510393142700195
    3. ' if' → logprob: -3.2010393142700195
    4. '   ' → logprob: -6.3260393142700195
    5. '               ' → logprob: -6.8260393142700195
    6. '       ' → logprob: -8.32603931427002
    7. '```' → logprob: -11.07603931427002
    8. '
' → logprob: -11.20103931427002
    9. 'x' → logprob: -11.45103931427002
    10. ' ' → logprob: -11.82603931427002

Token 1415: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.043000224977731705
    2. ' x' → logprob: -3.1680002212524414
    3. 'y' → logprob: -14.793000221252441
    4. ' y' → logprob: -15.668000221252441
    5. '(x' → logprob: -15.668000221252441
    6. '   ' → logprob: -16.293001174926758
    7. 'not' → logprob: -16.793001174926758
    8. ' not' → logprob: -17.168001174926758
    9. '	x' → logprob: -17.293001174926758
    10. ' ' → logprob: -17.543001174926758

Token 1416: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08897054940462112
    2. 'not' → logprob: -2.46397066116333
    3. '```' → logprob: -11.713970184326172
    4. ']' → logprob: -12.088970184326172
    5. ' in' → logprob: -12.213970184326172
    6. 'in' → logprob: -12.463970184326172
    7. '           ' → logprob: -13.213970184326172
    8. '[' → logprob: -13.463970184326172
    9. '	not' → logprob: -13.713970184326172
    10. '
' → logprob: -14.338970184326172

Token 1417: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16037724912166595
    2. 'in' → logprob: -1.9103772640228271
    3. 'not' → logprob: -8.910377502441406
    4. ' not' → logprob: -11.410377502441406
    5. 'dir' → logprob: -12.660377502441406
    6. '           ' → logprob: -12.910377502441406
    7. '```' → logprob: -14.410377502441406
    8. '   ' → logprob: -14.910377502441406
    9. 'def' → logprob: -16.410377502441406
    10. ' ' → logprob: -16.660377502441406

Token 1418: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -6.76628842484206e-05
    2. ' dir' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.000067710876465
    4. '```' → logprob: -15.750067710876465
    5. '           ' → logprob: -16.00006675720215
    6. 'dict' → logprob: -16.50006675720215
    7. ' ' → logprob: -16.62506675720215
    8. '	dir' → logprob: -17.25006675720215
    9. '       ' → logprob: -17.37506675720215
    10. '(dir' → logprob: -17.37506675720215

Token 1419: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0015040287980809808
    2. 'edges' → logprob: -6.501503944396973
    3. 'Edges' → logprob: -13.751503944396973
    4. 'ges' → logprob: -15.876503944396973
    5. ' edges' → logprob: -16.00150489807129
    6. 'dir' → logprob: -16.25150489807129
    7. '```' → logprob: -16.37650489807129
    8. 'ged' → logprob: -16.87650489807129
    9. '_ed' → logprob: -17.00150489807129
    10. '.edges' → logprob: -17.75150489807129

Token 1420: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5359941124916077
    2. ':
' → logprob: -0.9109941124916077
    3. ':' → logprob: -4.410994052886963
    4. '           ' → logprob: -7.785994052886963
    5. '                   ' → logprob: -9.660994529724121
    6. '```' → logprob: -10.410994529724121
    7. ']:
' → logprob: -10.535994529724121
    8. '[' → logprob: -10.535994529724121
    9. '{
' → logprob: -11.035994529724121
    10. '       ' → logprob: -11.410994529724121

Token 1421: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012296605564188212
    2. '```' → logprob: -9.875123023986816
    3. '                   ' → logprob: -10.375123023986816
    4. 'dir' → logprob: -10.625123023986816
    5. '           ' → logprob: -12.125123023986816
    6. '{
' → logprob: -12.750123023986816
    7. '   ' → logprob: -13.500123023986816
    8. '              ' → logprob: -13.500123023986816
    9. ' dir' → logprob: -13.625123023986816
    10. 'dict' → logprob: -14.000123023986816

Token 1422: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' (adapté à ' dir') → logprob: -0.00026217024424113333
    2. ' dir' → logprob: -8.250262260437012
    3. '               ' → logprob: -14.000262260437012
    4. '           ' → logprob: -17.125261306762695
    5. '	dir' → logprob: -18.625261306762695
    6. '                   ' → logprob: -20.000261306762695
    7. '(dir' → logprob: -20.125261306762695
    8. '_dir' → logprob: -20.625261306762695
    9. '   ' → logprob: -20.750261306762695
    10. 'dict' → logprob: -21.625261306762695

Token 1423: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -3.4121114822482923e-06
    2. 'edges' → logprob: -12.875003814697266
    3. '_dir' → logprob: -15.250003814697266
    4. 'dir' → logprob: -15.500003814697266
    5. 'Edges' → logprob: -16.250003814697266
    6. '_dirs' → logprob: -17.125003814697266
    7. '_ed' → logprob: -17.125003814697266
    8. '_entries' → logprob: -17.375003814697266
    9. 'r' → logprob: -17.625003814697266
    10. 'ir' → logprob: -17.750003814697266

Token 1424: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.183501293184236e-05
    2. '=' → logprob: -10.62507152557373
    3. '```' → logprob: -10.87507152557373
    4. ']' → logprob: -12.25007152557373
    5. '[y' → logprob: -12.50007152557373
    6. 'x' → logprob: -12.50007152557373
    7. '           ' → logprob: -13.00007152557373
    8. '                   ' → logprob: -13.37507152557373
    9. '[c' → logprob: -13.37507152557373
    10. '{x' → logprob: -13.50007152557373

Token 1425: ']' (ID: 60)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.024108173325657845
    2. ']' → logprob: -3.7741081714630127
    3. ']={' → logprob: -7.149108409881592
    4. '=' → logprob: -10.399107933044434
    5. '=set' → logprob: -11.024107933044434
    6. '           ' → logprob: -11.399107933044434
    7. '].' → logprob: -12.149107933044434
    8. ']+=' → logprob: -12.399107933044434
    9. 'set' → logprob: -12.899107933044434
    10. '               ' → logprob: -13.024107933044434

Token 1426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02366655133664608
    2. '=set' → logprob: -3.7736666202545166
    3. ' =' → logprob: -8.023666381835938
    4. 'set' → logprob: -9.648666381835938
    5. ']=' → logprob: -10.898666381835938
    6. '                   ' → logprob: -12.523666381835938
    7. '               ' → logprob: -13.148666381835938
    8. '           ' → logprob: -13.148666381835938
    9. '=
' → logprob: -13.898666381835938
    10. ']' → logprob: -14.398666381835938

Token 1427: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.7697225252486533e-06
    2. ' set' → logprob: -12.500003814697266
    3. '	set' → logprob: -20.875003814697266
    4. '=set' → logprob: -23.000003814697266
    5. '   ' → logprob: -23.250003814697266
    6. '{' → logprob: -23.250003814697266
    7. '(set' → logprob: -23.375003814697266
    8. 'sets' → logprob: -24.500003814697266
    9. ')set' → logprob: -25.125003814697266
    10. ' ' → logprob: -25.500003814697266

Token 1428: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27142608165740967
    2. '()
' → logprob: -1.5214260816574097
    3. '           ' → logprob: -4.021426200866699
    4. '       ' → logprob: -7.021426200866699
    5. '               ' → logprob: -7.896426200866699
    6. '()
' → logprob: -10.1464262008667
    7. '()\' → logprob: -11.0214262008667
    8. '()

' → logprob: -11.2714262008667
    9. '   ' → logprob: -11.5214262008667
    10. '())' → logprob: -12.1464262008667

Token 1429: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47426798939704895
    2. '               ' → logprob: -0.9742679595947266
    3. '       ' → logprob: -9.474267959594727
    4. '```' → logprob: -9.599267959594727
    5. '   ' → logprob: -11.724267959594727
    6. ' y' → logprob: -11.724267959594727
    7. '                   ' → logprob: -11.849267959594727
    8. 'x' → logprob: -12.224267959594727
    9. '          ' → logprob: -12.349267959594727
    10. '``' → logprob: -12.724267959594727

Token 1430: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' (adapté à ' dir') → logprob: -0.00011844364780699834
    2. '           ' → logprob: -9.125118255615234
    3. ' dir' → logprob: -11.625118255615234
    4. '	dir' → logprob: -15.125118255615234
    5. '   ' → logprob: -15.750118255615234
    6. '               ' → logprob: -16.250118255615234
    7. 'def' → logprob: -17.625118255615234
    8. '_dir' → logprob: -17.875118255615234
    9. '(dir' → logprob: -18.375118255615234
    10. '       ' → logprob: -19.250118255615234

Token 1431: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -9.088346359931165e-07
    2. 'edges' → logprob: -14.250000953674316
    3. 'Edges' → logprob: -16.375
    4. '_dirs' → logprob: -17.375
    5. '_ed' → logprob: -17.75
    6. ' edges' → logprob: -17.75
    7. '_entries' → logprob: -19.625
    8. '_angles' → logprob: -20.375
    9. '.edges' → logprob: -20.5
    10. '_lines' → logprob: -20.875

Token 1432: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.836499985889532e-05
    2. 'x' → logprob: -9.7500581741333
    3. '```' → logprob: -18.250059127807617
    4. '
' → logprob: -18.375059127807617
    5. '[' → logprob: -18.625059127807617
    6. '.setdefault' → logprob: -19.250059127807617
    7. '{x' → logprob: -19.375059127807617
    8. '	x' → logprob: -19.500059127807617
    9. '[c' → logprob: -20.125059127807617
    10. '   ' → logprob: -20.125059127807617

Token 1433: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.014081232249736786
    2. '.add' → logprob: -4.764081001281738
    3. '.' → logprob: -6.139081001281738
    4. ').' → logprob: -6.514081001281738
    5. '.y' → logprob: -6.889081001281738
    6. '[y' → logprob: -7.639081001281738
    7. '           ' → logprob: -9.389081001281738
    8. '}.' → logprob: -9.639081001281738
    9. ' .' → logprob: -9.889081001281738
    10. 'y' → logprob: -10.264081001281738

Token 1434: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. ' add' → logprob: -15.625
    3. '.add' → logprob: -16.875
    4. 'Add' → logprob: -19.0
    5. '_add' → logprob: -19.5
    6. 'append' → logprob: -20.25
    7. '	add' → logprob: -20.5
    8. 'adde' → logprob: -21.0
    9. '(add' → logprob: -21.125
    10. ' ' → logprob: -21.375

Token 1435: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0036437876988202333
    2. '(y' → logprob: -6.003643989562988
    3. ' y' → logprob: -6.753643989562988
    4. '	y' → logprob: -15.128643989562988
    5. '(' → logprob: -15.503643989562988
    6. ')y' → logprob: -15.753643989562988
    7. ''y' → logprob: -16.503643035888672
    8. ',y' → logprob: -17.753643035888672
    9. '‘y' → logprob: -18.003643035888672
    10. ')' → logprob: -18.503643035888672

Token 1436: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3492843806743622
    2. '#' → logprob: -1.4742844104766846
    3. 'for' → logprob: -2.7242844104766846
    4. '
' → logprob: -9.349284172058105
    5. '```' → logprob: -9.349284172058105
    6. 'edges' → logprob: -10.099284172058105
    7. ' for' → logprob: -11.224284172058105
    8. '   ' → logprob: -11.349284172058105
    9. 'from' → logprob: -11.849284172058105
    10. '``' → logprob: -12.224284172058105

Token 1438: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0860065221786499
    2. '#' (adapté à ' #') → logprob: -2.5860066413879395
    3. '       ' → logprob: -4.9610066413879395
    4. 'visited' → logprob: -10.586006164550781
    5. 'reverse' → logprob: -10.836006164550781
    6. ' for' → logprob: -11.461006164550781
    7. '
' → logprob: -11.711006164550781
    8. '   ' → logprob: -11.961006164550781
    9. '```' → logprob: -12.086006164550781
    10. 'from' → logprob: -12.836006164550781

Token 1439: ' Add' (ID: 4063)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006651374278590083
    2. '#' → logprob: -7.375665187835693
    3. '       ' → logprob: -10.250664710998535
    4. ' for' → logprob: -13.750664710998535
    5. '
' → logprob: -14.125664710998535
    6. 'visited' → logprob: -14.625664710998535
    7. 'edges' → logprob: -15.250664710998535
    8. '           ' → logprob: -15.500664710998535
    9. '   ' → logprob: -15.500664710998535
    10. '        
' → logprob: -16.37566566467285

Token 1440: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5986869931221008
    2. ' edges' → logprob: -1.723686933517456
    3. ' for' → logprob: -1.848686933517456
    4. 'edges' → logprob: -2.223686933517456
    5. '
' → logprob: -6.348687171936035
    6. '_edges' → logprob: -6.348687171936035
    7. '#' → logprob: -6.598687171936035
    8. '   ' → logprob: -8.223687171936035
    9. '       ' → logprob: -8.473687171936035
    10. ' stronger' → logprob: -8.848687171936035

Token 1441: ' between' (ID: 2870)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37397652864456177
    2. '       ' → logprob: -1.248976469039917
    3. 'from' → logprob: -3.998976469039917
    4. ' for' → logprob: -5.123976707458496
    5. 'in' → logprob: -8.373976707458496
    6. 'to' → logprob: -9.248976707458496
    7. '           ' → logprob: -9.373976707458496
    8. '   ' → logprob: -9.498976707458496
    9. 'between' → logprob: -9.498976707458496
    10. '```' → logprob: -9.498976707458496

Token 1442: ' classes' (ID: 9778)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classes' → logprob: -1.0365084409713745
    2. 'c' → logprob: -1.5365084409713745
    3. 'class' → logprob: -2.036508560180664
    4. 'p' → logprob: -2.161508560180664
    5. 'for' → logprob: -2.286508560180664
    6. 'parent' → logprob: -3.536508560180664
    7. 'cls' → logprob: -3.911508560180664
    8. 'parents' → logprob: -4.786508560180664
    9. ' classes' → logprob: -4.911508560180664
    10. 'u' → logprob: -6.036508560180664

Token 1443: ' based' (ID: 4122)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47430604696273804
    2. '       ' → logprob: -0.974306046962738
    3. ' for' → logprob: -8.474306106567383
    4. '
' → logprob: -11.724306106567383
    5. '           ' → logprob: -12.099306106567383
    6. 'from' → logprob: -12.849306106567383
    7. '   ' → logprob: -13.599306106567383
    8. '```' → logprob: -13.724306106567383
    9. '               ' → logprob: -14.849306106567383
    10. '#' → logprob: -15.099306106567383

Token 1444: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0014273790875449777
    2. ' on' → logprob: -6.751427173614502
    3. '       ' → logprob: -8.75142765045166
    4. '```' → logprob: -10.50142765045166
    5. 'for' → logprob: -10.75142765045166
    6. '   ' → logprob: -11.37642765045166
    7. '...' → logprob: -11.50142765045166
    8. '           ' → logprob: -11.75142765045166
    9. '_on' → logprob: -13.12642765045166
    10. '        ' → logprob: -13.12642765045166

Token 1445: ' input' (ID: 3422)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.17472785711288452
    2. 'input' → logprob: -2.0497279167175293
    3. ' crossings' → logprob: -4.174727916717529
    4. ' input' → logprob: -4.674727916717529
    5. 'dir' → logprob: -5.799727916717529
    6. 'c' → logprob: -7.049727916717529
    7. 'for' → logprob: -7.299727916717529
    8. 'class' → logprob: -7.924727916717529
    9. ' cross' → logprob: -8.049727439880371
    10. 'the' → logprob: -8.049727439880371

Token 1446: ' crossing' (ID: 50946)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13379885256290436
    2. '       ' → logprob: -2.383798837661743
    3. ' for' → logprob: -4.133799076080322
    4. '   ' → logprob: -4.633799076080322
    5. 'edges' → logprob: -6.133799076080322
    6. '           ' → logprob: -6.133799076080322
    7. 'cross' → logprob: -6.633799076080322
    8. '```' → logprob: -7.383799076080322
    9. 'stre' → logprob: -8.633798599243164
    10. ' crossings' → logprob: -8.883798599243164

Token 1447: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13704326748847961
    2. '       ' → logprob: -2.1370432376861572
    3. ' for' → logprob: -4.637043476104736
    4. '           ' → logprob: -8.762042999267578
    5. '
' → logprob: -9.137042999267578
    6. '   ' → logprob: -9.262042999267578
    7. '```' → logprob: -11.887042999267578
    8. '               ' → logprob: -12.637042999267578
    9. ',' → logprob: -13.262042999267578
    10. '        
' → logprob: -13.637042999267578

Token 1448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011065390892326832
    2. 'for' → logprob: -4.511065483093262
    3. ' for' → logprob: -11.011065483093262
    4. '           ' → logprob: -14.886065483093262
    5. '   ' → logprob: -15.511065483093262
    6. '
' → logprob: -15.761065483093262
    7. '        
' → logprob: -15.886065483093262
    8. '<|end|>' → logprob: -16.011064529418945
    9. 'from' → logprob: -17.011064529418945
    10. '#' → logprob: -17.261064529418945

Token 1449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027818400412797928
    2. 'for' → logprob: -3.652818441390991
    3. ' for' → logprob: -6.527818202972412
    4. '           ' → logprob: -10.15281867980957
    5. '   ' → logprob: -11.77781867980957
    6. '```' → logprob: -12.77781867980957
    7. '
' → logprob: -13.40281867980957
    8. '               ' → logprob: -13.90281867980957
    9. '<|end|>' → logprob: -14.02781867980957
    10. '                   ' → logprob: -14.40281867980957

Token 1450: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00028290803311392665
    2. '       ' → logprob: -8.250283241271973
    3. ' for' → logprob: -10.750283241271973
    4. '```' → logprob: -16.875282287597656
    5. '
' → logprob: -17.125282287597656
    6. 'For' → logprob: -17.875282287597656
    7. '   ' → logprob: -18.000282287597656
    8. '	for' → logprob: -18.625282287597656
    9. '        
' → logprob: -19.500282287597656
    10. '#' → logprob: -19.625282287597656

Token 1451: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5123469233512878
    2. 'c' → logprob: -1.3873469829559326
    3. 'st' → logprob: -2.2623469829559326
    4. 's' → logprob: -3.6373469829559326
    5. ' x' → logprob: -5.0123467445373535
    6. ' st' → logprob: -5.1373467445373535
    7. ' c' → logprob: -5.3873467445373535
    8. 'a' → logprob: -6.5123467445373535
    9. 'u' → logprob: -7.5123467445373535
    10. ' s' → logprob: -8.012347221374512

Token 1452: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7701684236526489
    2. ' in' → logprob: -0.7701684236526489
    3. ',' → logprob: -3.0201683044433594
    4. ',y' → logprob: -3.8951683044433594
    5. ',in' → logprob: -6.145168304443359
    6. ',x' → logprob: -6.645168304443359
    7. ' ,' → logprob: -8.14516830444336
    8. ',c' → logprob: -8.27016830444336
    9. ',_' → logprob: -8.77016830444336
    10. ',v' → logprob: -8.77016830444336

Token 1453: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0025379674043506384
    2. 'stre' → logprob: -6.502538204193115
    3. ' dir' → logprob: -7.127538204193115
    4. 'graph' → logprob: -9.002537727355957
    5. 'dirs' → logprob: -10.377537727355957
    6. 'cross' → logprob: -10.627537727355957
    7. 'class' → logprob: -11.127537727355957
    8. 'dire' → logprob: -11.627537727355957
    9. 'st' → logprob: -12.127537727355957
    10. ' streets' → logprob: -12.252537727355957

Token 1454: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -4.906711546937004e-05
    2. 'edges' → logprob: -10.375048637390137
    3. 's' → logprob: -12.500048637390137
    4. 'Edges' → logprob: -12.875048637390137
    5. '_st' → logprob: -13.250048637390137
    6. '_ed' → logprob: -14.375048637390137
    7. 'st' → logprob: -14.625048637390137
    8. 'er' → logprob: -14.625048637390137
    9. '_nodes' → logprob: -14.625048637390137
    10. '_vertices' → logprob: -14.625048637390137

Token 1455: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06332028657197952
    2. ',' → logprob: -3.9383203983306885
    3. ':
' → logprob: -4.063320159912109
    4. ':' → logprob: -4.313320159912109
    5. 'in' → logprob: -5.063320159912109
    6. '   ' → logprob: -6.188320159912109
    7. '           ' → logprob: -7.188320159912109
    8. 's' → logprob: -7.438320159912109
    9. '.keys' → logprob: -7.438320159912109
    10. '[x' → logprob: -8.31332015991211

Token 1456: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021081531420350075
    2. ' for' → logprob: -4.021081447601318
    3. '           ' → logprob: -6.521081447601318
    4. 'for' → logprob: -6.771081447601318
    5. '       ' → logprob: -8.146081924438477
    6. ' ' → logprob: -12.021081924438477
    7. '	for' → logprob: -12.521081924438477
    8. '```' → logprob: -12.521081924438477
    9. ':' → logprob: -13.271081924438477
    10. '    ' → logprob: -14.021081924438477

Token 1457: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28994274139404297
    2. 'for' (adapté à ' for') → logprob: -1.539942741394043
    3. '   ' → logprob: -3.289942741394043
    4. ' ' → logprob: -10.164942741394043
    5. '           ' → logprob: -13.164942741394043
    6. '	for' → logprob: -13.414942741394043
    7. '       ' → logprob: -14.164942741394043
    8. '  ' → logprob: -14.914942741394043
    9. ' xs' → logprob: -15.414942741394043
    10. ' u' → logprob: -15.539942741394043

Token 1458: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.7610454708337784e-05
    2. ' y' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.62502670288086
    4. 'neighbor' → logprob: -18.50002670288086
    5. '	y' → logprob: -20.25002670288086
    6. 'v' → logprob: -20.25002670288086
    7. 'w' → logprob: -20.37502670288086
    8. 'y's' → logprob: -20.62502670288086
    9. ' ' → logprob: -20.87502670288086
    10. '  ' → logprob: -21.87502670288086

Token 1459: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002189160557463765
    2. 'in' → logprob: -6.1271891593933105
    3. 's' → logprob: -13.127189636230469
    4. ' ' → logprob: -14.627189636230469
    5. '```' → logprob: -15.377189636230469
    6. 'In' → logprob: -15.502189636230469
    7. '_in' → logprob: -15.627189636230469
    8. '   ' → logprob: -15.752189636230469
    9. '	in' → logprob: -16.00218963623047
    10. '[' → logprob: -16.00218963623047

Token 1460: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0002613358374219388
    2. ' dir' → logprob: -8.250261306762695
    3. '(dir' → logprob: -18.625261306762695
    4. ' ' → logprob: -18.875261306762695
    5. '	dir' → logprob: -20.250261306762695
    6. '   ' → logprob: -20.500261306762695
    7. '[' → logprob: -20.500261306762695
    8. 'dict' → logprob: -21.875261306762695
    9. '```' → logprob: -22.250261306762695
    10. '  ' → logprob: -22.500261306762695

Token 1461: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -5.3120038501219824e-05
    2. 'Edges' → logprob: -10.250053405761719
    3. '_dir' → logprob: -12.250053405761719
    4. '_ed' → logprob: -12.625053405761719
    5. 'edges' → logprob: -12.750053405761719
    6. 'ed' → logprob: -14.000053405761719
    7. 'odes' → logprob: -14.000053405761719
    8. 'x' → logprob: -14.125053405761719
    9. '[x' → logprob: -14.250053405761719
    10. '_dirs' → logprob: -14.500053405761719

Token 1462: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.512236498361744e-07
    2. 'x' → logprob: -14.750000953674316
    3. '[
' → logprob: -18.375
    4. '{x' → logprob: -18.5
    5. '```' → logprob: -18.5
    6. '(x' → logprob: -19.125
    7. '[' → logprob: -19.25
    8. '
' → logprob: -19.375
    9. '[y' → logprob: -20.0
    10. '   ' → logprob: -20.125

Token 1463: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22494836151599884
    2. ']:
' → logprob: -2.5999484062194824
    3. '               ' → logprob: -2.8499484062194824
    4. '):
' → logprob: -3.5999484062194824
    5. ':' → logprob: -3.7249484062194824
    6. '           ' → logprob: -4.474948406219482
    7. ']' → logprob: -6.224948406219482
    8. '.' → logprob: -6.849948406219482
    9. ']:' → logprob: -7.099948406219482
    10. '):' → logprob: -7.599948406219482

Token 1464: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.6696149840718135e-05
    2. '                   ' → logprob: -10.875056266784668
    3. 'class' → logprob: -11.875056266784668
    4. '           ' → logprob: -11.875056266784668
    5. '       ' → logprob: -12.000056266784668
    6. '```' → logprob: -12.000056266784668
    7. '   ' → logprob: -13.000056266784668
    8. ' class' → logprob: -13.125056266784668
    9. ',' → logprob: -13.375056266784668
    10. ':' → logprob: -13.500056266784668

Token 1465: ' cx' (ID: 44448)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5535702705383301
    2. ' class' → logprob: -1.17857027053833
    3. 'cx' (adapté à ' cx') → logprob: -2.67857027053833
    4. ' cx' → logprob: -3.17857027053833
    5. '           ' → logprob: -6.30357027053833
    6. 'c' → logprob: -6.67857027053833
    7. '               ' → logprob: -7.17857027053833
    8. 'if' → logprob: -7.17857027053833
    9. ' c' → logprob: -7.67857027053833
    10. ' if' → logprob: -7.67857027053833

Token 1466: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7761961221694946
    2. '[x' → logprob: -1.7761961221694946
    3. '=' → logprob: -1.9011961221694946
    4. 'class' → logprob: -2.401196002960205
    5. 'lass' → logprob: -2.526196002960205
    6. '[c' → logprob: -3.776196002960205
    7. 'x' → logprob: -4.776196002960205
    8. '[class' → logprob: -4.776196002960205
    9. 'c' → logprob: -5.651196002960205
    10. '=c' → logprob: -6.151196002960205

Token 1467: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006058552302420139
    2. ' c' → logprob: -5.131058692932129
    3. 'find' → logprob: -9.131058692932129
    4. ' find' → logprob: -10.756058692932129
    5. '   ' → logprob: -16.256057739257812
    6. 'class' → logprob: -16.381057739257812
    7. '	c' → logprob: -16.506057739257812
    8. ' ' → logprob: -17.381057739257812
    9. '```' → logprob: -17.506057739257812
    10. '_c' → logprob: -18.256057739257812

Token 1468: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00039504567394033074
    2. 'lass' → logprob: -7.875394821166992
    3. 'c' → logprob: -11.375394821166992
    4. '_class' → logprob: -13.875394821166992
    5. '(x' → logprob: -14.375394821166992
    6. '(class' → logprob: -14.750394821166992
    7. '[class' → logprob: -15.250394821166992
    8. 'x' → logprob: -15.375394821166992
    9. '"class' → logprob: -15.625394821166992
    10. ' class' → logprob: -15.625394821166992

Token 1469: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005234002135694027
    2. 'x' → logprob: -5.2552337646484375
    3. '[x' → logprob: -15.630233764648438
    4. '(' → logprob: -17.130233764648438
    5. '(
' → logprob: -17.255233764648438
    6. ' x' → logprob: -17.630233764648438
    7. ' (' → logprob: -18.630233764648438
    8. '
' → logprob: -19.130233764648438
    9. '{x' → logprob: -19.255233764648438
    10. '```' → logprob: -19.255233764648438

Token 1470: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16085511445999146
    2. ')' → logprob: -1.9108550548553467
    3. '               ' → logprob: -7.410855293273926
    4. ')c' → logprob: -11.285855293273926
    5. ')
' → logprob: -12.285855293273926
    6. '                   ' → logprob: -13.035855293273926
    7. ')

' → logprob: -13.410855293273926
    8. ');' → logprob: -13.535855293273926
    9. ')#' → logprob: -14.285855293273926
    10. '),' → logprob: -14.410855293273926

Token 1471: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012444903142750263
    2. 'class' → logprob: -4.512444972991943
    3. '                   ' → logprob: -7.762444972991943
    4. ' class' → logprob: -8.137444496154785
    5. '[class' → logprob: -8.137444496154785
    6. '           ' → logprob: -8.637444496154785
    7. '```' → logprob: -9.137444496154785
    8. 'if' → logprob: -10.137444496154785
    9. '       ' → logprob: -11.012444496154785
    10. '   ' → logprob: -11.637444496154785

Token 1472: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' (adapté à ' cy') → logprob: -0.0005265804938971996
    2. 'class' → logprob: -7.875526428222656
    3. 'if' → logprob: -9.000526428222656
    4. '   ' → logprob: -11.750526428222656
    5. ' cy' → logprob: -12.250526428222656
    6. '       ' → logprob: -12.625526428222656
    7. 'cyj' → logprob: -13.625526428222656
    8. '    
' → logprob: -14.125526428222656
    9. '
' → logprob: -14.125526428222656
    10. 'cz' → logprob: -14.625526428222656

Token 1473: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1975003182888031
    2. ' =' → logprob: -1.8225003480911255
    3. '=c' → logprob: -4.447500228881836
    4. '=
' → logprob: -5.947500228881836
    5. '[c' → logprob: -7.197500228881836
    6. ')' → logprob: -7.447500228881836
    7. '=y' → logprob: -7.572500228881836
    8. '[x' → logprob: -8.572500228881836
    9. '[class' → logprob: -8.697500228881836
    10. '=x' → logprob: -8.697500228881836

Token 1474: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.2200749754119897e-06
    2. ' c' → logprob: -13.125001907348633
    3. '(c' → logprob: -16.500001907348633
    4. '[c' → logprob: -17.250001907348633
    5. 'y' → logprob: -17.875001907348633
    6. 'class' → logprob: -17.875001907348633
    7. ')c' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.000001907348633
    9. '	c' → logprob: -18.500001907348633
    10. '```' → logprob: -18.875001907348633

Token 1475: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005358975380659103
    2. 'lass' → logprob: -5.755359172821045
    3. 'c' → logprob: -6.130359172821045
    4. 'l' → logprob: -13.380358695983887
    5. '[c' → logprob: -15.005358695983887
    6. '<class' → logprob: -15.755358695983887
    7. '[class' → logprob: -16.130359649658203
    8. '_class' → logprob: -16.380359649658203
    9. ' class' → logprob: -16.380359649658203
    10. 'lasses' → logprob: -16.505359649658203

Token 1476: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0006284446571953595
    2. 'y' → logprob: -7.375628471374512
    3. '[y' → logprob: -13.500628471374512
    4. '(
' → logprob: -16.000627517700195
    5. '(' → logprob: -16.000627517700195
    6. '```' → logprob: -16.875627517700195
    7. '(x' → logprob: -17.125627517700195
    8. 'c' → logprob: -17.375627517700195
    9. ' y' → logprob: -17.500627517700195
    10. 's' → logprob: -17.500627517700195

Token 1477: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5379549264907837
    2. ')' → logprob: -1.7879549264907837
    3. '               ' → logprob: -1.9129549264907837
    4. '                   ' → logprob: -2.662954807281494
    5. ':
' → logprob: -3.912954807281494
    6. '):' → logprob: -5.037954807281494
    7. ')
' → logprob: -6.662954807281494
    8. '                       ' → logprob: -6.787954807281494
    9. ').' → logprob: -7.037954807281494
    10. '           ' → logprob: -7.412954807281494

Token 1478: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22721542418003082
    2. '                   ' → logprob: -1.6022154092788696
    3. ' if' → logprob: -6.97721529006958
    4. 'if' → logprob: -7.97721529006958
    5. '```' → logprob: -8.102215766906738
    6. '                       ' → logprob: -9.477215766906738
    7. '           ' → logprob: -10.102215766906738
    8. ':
' → logprob: -10.852215766906738
    9. ' and' → logprob: -11.227215766906738
    10. '   ' → logprob: -11.352215766906738

Token 1479: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0007152927573770285
    2. '               ' → logprob: -8.000715255737305
    3. ' if' → logprob: -8.000715255737305
    4. '                   ' → logprob: -10.750715255737305
    5. 'class' → logprob: -11.125715255737305
    6. '```' → logprob: -11.750715255737305
    7. '           ' → logprob: -15.125715255737305
    8. '[class' → logprob: -15.750715255737305
    9. '``' → logprob: -17.375715255737305
    10. '   ' → logprob: -17.500715255737305

Token 1480: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.20144812762737274
    2. ' cx' → logprob: -1.7014480829238892
    3. '(cx' → logprob: -10.326448440551758
    4. '.cx' → logprob: -13.201448440551758
    5. 'cy' → logprob: -16.201448440551758
    6. 'x' → logprob: -16.326448440551758
    7. '   ' → logprob: -17.326448440551758
    8. ' cy' → logprob: -17.826448440551758
    9. '```' → logprob: -18.451448440551758
    10. '           ' → logprob: -18.576448440551758

Token 1481: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5760272145271301
    2. ' !=' → logprob: -0.8260272145271301
    3. ')!=' → logprob: -9.951026916503906
    4. '()!=' → logprob: -10.951026916503906
    5. ']!=' → logprob: -11.076026916503906
    6. '!==' → logprob: -13.076026916503906
    7. '!='' → logprob: -13.826026916503906
    8. '!=(' → logprob: -13.951026916503906
    9. '!' → logprob: -14.576026916503906
    10. '!=-' → logprob: -14.701026916503906

Token 1482: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -6.2729995988775045e-06
    2. ' cy' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.5000057220459
    4. '
' → logprob: -18.6250057220459
    5. 'cyj' → logprob: -19.1250057220459
    6. '    
' → logprob: -19.5000057220459
    7. '.cy' → logprob: -19.7500057220459
    8. ' ' → logprob: -21.0000057220459
    9. 'c' → logprob: -21.1250057220459
    10. '	c' → logprob: -21.3750057220459

Token 1483: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4232054352760315
    2. '                   ' → logprob: -1.1732053756713867
    3. ':' → logprob: -4.048205375671387
    4. '                       ' → logprob: -4.298205375671387
    5. ' and' → logprob: -6.048205375671387
    6. '               ' → logprob: -6.548205375671387
    7. '):
' → logprob: -7.923205375671387
    8. '                           ' → logprob: -8.173205375671387
    9. '           ' → logprob: -9.798205375671387
    10. ',' → logprob: -10.923205375671387

Token 1484: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006919435109011829
    2. ' class' → logprob: -8.625692367553711
    3. 'class' → logprob: -8.750692367553711
    4. '               ' → logprob: -8.875692367553711
    5. '                       ' → logprob: -9.000692367553711
    6. '           ' → logprob: -10.125692367553711
    7. ':
' → logprob: -10.875692367553711
    8. ':' → logprob: -11.250692367553711
    9. '                  ' → logprob: -12.750692367553711
    10. '[class' → logprob: -13.000692367553711

Token 1485: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' (adapté à ' class') → logprob: -0.00692920433357358
    2. ' class' → logprob: -5.006929397583008
    3. '                       ' → logprob: -8.506929397583008
    4. '```' → logprob: -12.006929397583008
    5. '                   ' → logprob: -12.506929397583008
    6. '       ' → logprob: -14.006929397583008
    7. '   ' → logprob: -14.756929397583008
    8. '[class' → logprob: -15.381929397583008
    9. '                           ' → logprob: -16.256929397583008
    10. '               ' → logprob: -16.381929397583008

Token 1486: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -2.339278580620885e-06
    2. '[_' → logprob: -13.500001907348633
    3. '_GRAPH' → logprob: -15.125001907348633
    4. 'graph' → logprob: -15.250001907348633
    5. ']_' → logprob: -16.125001907348633
    6. '[' → logprob: -16.750001907348633
    7. '```' → logprob: -17.000001907348633
    8. '_' → logprob: -17.000001907348633
    9. '   ' → logprob: -17.375001907348633
    10. ' _' → logprob: -17.625001907348633

Token 1487: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. '[class' → logprob: -18.375
    4. '(cx' → logprob: -18.375
    5. '```' → logprob: -18.625
    6. '           ' → logprob: -19.125
    7. '       ' → logprob: -19.375
    8. '                   ' → logprob: -19.625
    9. '   ' → logprob: -19.75
    10. 'cx' → logprob: -20.75

Token 1488: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00039504567394033074
    2. '[x' → logprob: -7.875394821166992
    3. '[c' → logprob: -11.625394821166992
    4. '[' → logprob: -13.125394821166992
    5. 'class' → logprob: -13.125394821166992
    6. 'lass' → logprob: -13.625394821166992
    7. '[class' → logprob: -14.375394821166992
    8. 'cx' → logprob: -16.125394821166992
    9. 'c' → logprob: -17.125394821166992
    10. '(cx' → logprob: -17.625394821166992

Token 1489: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.026554793119430542
    2. '.add' → logprob: -3.901554822921753
    3. '.' → logprob: -5.401554584503174
    4. '[c' → logprob: -7.651554584503174
    5. ').' → logprob: -7.901554584503174
    6. '                   ' → logprob: -8.401555061340332
    7. '[' → logprob: -8.401555061340332
    8. '           ' → logprob: -10.026555061340332
    9. '[class' → logprob: -10.526555061340332
    10. '.setdefault' → logprob: -11.026555061340332

Token 1490: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. '.add' → logprob: -16.75
    3. ' add' → logprob: -16.875
    4. '_add' → logprob: -18.625
    5. '```' → logprob: -18.875
    6. '(add' → logprob: -20.5
    7. 'append' → logprob: -20.625
    8. 'set' → logprob: -21.125
    9. 'update' → logprob: -21.25
    10. ')add' → logprob: -21.25

Token 1491: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.9361264946837764e-07
    2. 'cy' → logprob: -16.625
    3. ' (' → logprob: -18.0
    4. '(' → logprob: -18.25
    5. '(cx' → logprob: -19.5
    6. '(
' → logprob: -20.125
    7. '(ci' → logprob: -20.25
    8. '(C' → logprob: -20.625
    9. '	c' → logprob: -20.75
    10. '((' → logprob: -21.375

Token 1492: 'y' (ID: 88)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.011121392250061035
    2. 'y' → logprob: -4.5111212730407715
    3. ' cy' → logprob: -9.76112174987793
    4. '   ' → logprob: -12.13612174987793
    5. '(c' → logprob: -13.13612174987793
    6. 'py' → logprob: -13.13612174987793
    7. 'c' → logprob: -13.38612174987793
    8. 'ey' → logprob: -13.76112174987793
    9. 'yc' → logprob: -14.01112174987793
    10. 'ay' → logprob: -14.26112174987793

Token 1493: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012606535165105015
    2. '<|end|>' → logprob: -9.875125885009766
    3. ')
' → logprob: -10.250125885009766
    4. '                   ' → logprob: -11.000125885009766
    5. '               ' → logprob: -12.250125885009766
    6. '       ' → logprob: -12.625125885009766
    7. '```' → logprob: -12.625125885009766
    8. ' )' → logprob: -12.625125885009766
    9. '           ' → logprob: -13.500125885009766
    10. ')#' → logprob: -13.875125885009766

Token 1494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01123762596398592
    2. '
' → logprob: -4.511237621307373
    3. '```' → logprob: -9.386238098144531
    4. '#' → logprob: -9.761238098144531
    5. 'import' → logprob: -11.136238098144531
    6. '        
' → logprob: -11.511238098144531
    7. '           ' → logprob: -12.011238098144531
    8. '   ' → logprob: -12.511238098144531
    9. 'from' → logprob: -12.761238098144531
    10. '                   ' → logprob: -12.886238098144531

Token 1495: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4801647663116455
    2. '#' (adapté à ' #') → logprob: -0.9801647663116455
    3. 'from' → logprob: -6.230164527893066
    4. 'visited' → logprob: -6.355164527893066
    5. '
' → logprob: -6.980164527893066
    6. 'import' → logprob: -7.105164527893066
    7. '```' → logprob: -8.105164527893066
    8. '   ' → logprob: -8.730164527893066
    9. 'reverse' → logprob: -9.730164527893066
    10. 'for' → logprob: -10.105164527893066

Token 1496: ' Add' (ID: 4063)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.028898131102323532
    2. '       ' → logprob: -4.528898239135742
    3. 'from' → logprob: -4.653898239135742
    4. 'visited' → logprob: -5.403898239135742
    5. 'import' → logprob: -5.653898239135742
    6. '   ' → logprob: -9.653898239135742
    7. 'def' → logprob: -10.028898239135742
    8. 'dist' → logprob: -10.903898239135742
    9. '
' → logprob: -11.528898239135742
    10. 'queue' → logprob: -12.153898239135742

Token 1497: ' equal' (ID: 12629)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1004838943481445
    2. ' for' → logprob: -1.8504838943481445
    3. '
' → logprob: -2.1004838943481445
    4. ' equal' → logprob: -2.2254838943481445
    5. '#' → logprob: -2.7254838943481445
    6. ' edges' → logprob: -2.8504838943481445
    7. 'equal' → logprob: -2.9754838943481445
    8. 'edges' → logprob: -3.6004838943481445
    9. '       ' → logprob: -3.7254838943481445
    10. '_edges' → logprob: -4.1004838943481445

Token 1498: ' strength' (ID: 9386)
  Prédit: '_strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strength' → logprob: -0.013729019090533257
    2. 'strength' → logprob: -4.388729095458984
    3. ' strength' → logprob: -7.138729095458984
    4. '_edges' → logprob: -8.763729095458984
    5. '_class' → logprob: -9.013729095458984
    6. '
' → logprob: -10.763729095458984
    7. '```' → logprob: -10.763729095458984
    8. '_classes' → logprob: -11.138729095458984
    9. '_relation' → logprob: -11.513729095458984
    10. '_rel' → logprob: -11.513729095458984

Token 1499: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.37011396884918213
    2. 'edges' → logprob: -1.4951139688491821
    3. '_edges' → logprob: -2.6201138496398926
    4. 'class' → logprob: -5.870113849639893
    5. 'for' → logprob: -6.120113849639893
    6. 'relations' → logprob: -6.620113849639893
    7. 'connections' → logprob: -6.620113849639893
    8. '
' → logprob: -7.120113849639893
    9. ' relations' → logprob: -7.495113849639893
    10. '   ' → logprob: -7.495113849639893

Token 1500: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025965137407183647
    2. 'for' → logprob: -3.7759652137756348
    3. ' for' → logprob: -6.275965213775635
    4. '
' → logprob: -7.275965213775635
    5. '        
' → logprob: -10.025964736938477
    6. '#' → logprob: -10.275964736938477
    7. '   ' → logprob: -11.400964736938477
    8. '```' → logprob: -11.525964736938477
    9. '<|end|>' → logprob: -11.650964736938477
    10. 'from' → logprob: -11.650964736938477

Token 1501: ' handled' (ID: 29594)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3595781326293945
    2. ' not' → logprob: -1.4845781326293945
    3. ' for' → logprob: -1.7345781326293945
    4. 'not' → logprob: -2.3595781326293945
    5. '#' → logprob: -2.8595781326293945
    6. '
' → logprob: -3.2345781326293945
    7. '...' → logprob: -4.1095781326293945
    8. 'def' → logprob: -4.3595781326293945
    9. ' edges' → logprob: -4.4845781326293945
    10. ' equal' → logprob: -4.7345781326293945

Token 1502: ' by' (ID: 656)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6782076358795166
    2. 'for' → logprob: -1.6782076358795166
    3. ' for' → logprob: -1.9282076358795166
    4. '       ' → logprob: -1.9282076358795166
    5. ' in' → logprob: -6.3032073974609375
    6. '
' → logprob: -6.3032073974609375
    7. ' here' → logprob: -6.5532073974609375
    8. '```' → logprob: -6.8032073974609375
    9. ' by' → logprob: -6.9282073974609375
    10. ' as' → logprob: -7.0532073974609375

Token 1503: ' classes' (ID: 9778)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.14007382094860077
    2. 'the' → logprob: -2.765073776245117
    3. '#' → logprob: -3.765073776245117
    4. 'pass' → logprob: -5.015073776245117
    5. ' union' → logprob: -5.140073776245117
    6. 'class' → logprob: -5.390073776245117
    7. 'continu' → logprob: -5.390073776245117
    8. 'und' → logprob: -5.515073776245117
    9. 'for' → logprob: -5.640073776245117
    10. 'trans' → logprob: -6.015073776245117

Token 1504: ' merging' (ID: 107009)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03693745657801628
    2. '<|end|>' → logprob: -3.6619374752044678
    3. '
' → logprob: -5.661937236785889
    4. '#' → logprob: -5.661937236785889
    5. '        
' → logprob: -6.411937236785889
    6. 'for' → logprob: -6.911937236785889
    7. '<|end|>' → logprob: -8.036937713623047
    8. ' for' → logprob: -8.411937713623047
    9. ' (' → logprob: -9.536937713623047
    10. '```' → logprob: -9.536937713623047

Token 1505: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1506: ' no' (ID: 860)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1507: ' edges' (ID: 22569)
  Prédit: 'additional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'additional' → logprob: -0.40937548875808716
    2. 'need' → logprob: -1.6593754291534424
    3. 'edges' → logprob: -2.6593754291534424
    4. 'extra' → logprob: -3.9093754291534424
    5. ' need' → logprob: -4.0343756675720215
    6. 'action' → logprob: -4.2843756675720215
    7. ' additional' → logprob: -5.0343756675720215
    8. 'f' → logprob: -5.9093756675720215
    9. ' edges' → logprob: -5.9093756675720215
    10. 'more' → logprob: -6.1593756675720215

Token 1508: ' needed' (ID: 6118)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25093674659729004
    2. '       ' → logprob: -1.87593674659729
    3. '<|end|>' → logprob: -2.75093674659729
    4. '

' → logprob: -6.375936508178711
    5. '<|end|>' → logprob: -6.375936508178711
    6. '        
' → logprob: -7.375936508178711
    7. '#' → logprob: -7.625936508178711
    8. '```' → logprob: -9.375936508178711
    9. '
' → logprob: -10.000936508178711
    10. '


' → logprob: -10.875936508178711

Token 1509: ' within' (ID: 3518)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7795354127883911
    2. '       ' → logprob: -1.1545354127883911
    3. '<|end|>' → logprob: -1.5295354127883911
    4. '        
' → logprob: -5.404535293579102
    5. '<|end|>' → logprob: -6.029535293579102
    6. '

' → logprob: -6.779535293579102
    7. '```' → logprob: -7.529535293579102
    8. '#' → logprob: -8.279535293579102
    9. '   ' → logprob: -8.654535293579102
    10. '    
' → logprob: -9.029535293579102

Token 1510: ' same' (ID: 2684)
  Prédit: 'classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'classes' → logprob: -0.07929941266775131
    2. 'class' → logprob: -3.0792994499206543
    3. 'the' → logprob: -4.329299449920654
    4. 'equal' → logprob: -4.579299449920654
    5. 'same' → logprob: -6.204299449920654
    6. '#' → logprob: -6.329299449920654
    7. 'for' → logprob: -7.329299449920654
    8. 'a' → logprob: -7.579299449920654
    9. 'and' → logprob: -8.079298973083496
    10. 'any' → logprob: -8.204298973083496

Token 1511: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -8.625866030342877e-05
    2. 'c' → logprob: -9.625085830688477
    3. 'classes' → logprob: -11.750085830688477
    4. ' class' → logprob: -11.875085830688477
    5. 'component' → logprob: -13.500085830688477
    6. '```' → logprob: -14.125085830688477
    7. 'parent' → logprob: -14.625085830688477
    8. 'group' → logprob: -14.750085830688477
    9. 'line' → logprob: -15.125085830688477
    10. '    
' → logprob: -15.500085830688477

Token 1512: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2083302140235901
    2. '       ' → logprob: -1.7083301544189453
    3. '#' → logprob: -5.583330154418945
    4. '

' → logprob: -6.708330154418945
    5. '        
' → logprob: -6.958330154418945
    6. '<|end|>' → logprob: -7.458330154418945
    7. '```' → logprob: -9.083330154418945
    8. '
' → logprob: -9.208330154418945
    9. 'import' → logprob: -9.833330154418945
    10. '   ' → logprob: -10.583330154418945

Token 1513: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4143407642841339
    2. '       ' → logprob: -1.1643407344818115
    3. '
' → logprob: -3.9143407344818115
    4. '```' → logprob: -5.414340972900391
    5. 'from' → logprob: -6.914340972900391
    6. 'import' → logprob: -7.039340972900391
    7. '        
' → logprob: -8.41434097290039
    8. 'visited' → logprob: -8.53934097290039
    9. '   ' → logprob: -8.91434097290039
    10. 'for' → logprob: -9.16434097290039

Token 1514: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.0855894610285759
    2. '       ' → logprob: -2.5855894088745117
    3. 'import' → logprob: -5.710589408874512
    4. 'from' → logprob: -6.335589408874512
    5. 'visited' → logprob: -6.585589408874512
    6. '
' → logprob: -9.335589408874512
    7. '   ' → logprob: -9.835589408874512
    8. 'dist' → logprob: -10.210589408874512
    9. '```' → logprob: -11.085589408874512
    10. '        
' → logprob: -12.335589408874512

Token 1515: ' Now' (ID: 6549)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13664674758911133
    2. 'visited' → logprob: -2.5116467475891113
    3. 'from' → logprob: -4.011646747589111
    4. '       ' → logprob: -4.261646747589111
    5. 'import' → logprob: -5.011646747589111
    6. 'dist' → logprob: -5.261646747589111
    7. 'def' → logprob: -6.511646747589111
    8. 'for' → logprob: -8.136646270751953
    9. '   ' → logprob: -8.261646270751953
    10. 'reachable' → logprob: -9.511646270751953

Token 1516: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5170462131500244
    2. '#' → logprob: -1.0170462131500244
    3. 'from' → logprob: -3.5170462131500244
    4. 'import' → logprob: -5.392045974731445
    5. 'visited' → logprob: -5.767045974731445
    6. ' #' → logprob: -6.642045974731445
    7. '   ' → logprob: -7.142045974731445
    8. 'dist' → logprob: -7.517045974731445
    9. '
' → logprob: -7.642045974731445
    10. 'def' → logprob: -7.892045974731445

Token 1517: ' to' (ID: 316)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.31464746594429016
    2. 'from' → logprob: -1.6896474361419678
    3. 'import' → logprob: -3.1896474361419678
    4. 'visited' → logprob: -3.9396474361419678
    5. '       ' → logprob: -4.189647674560547
    6. 'def' → logprob: -5.439647674560547
    7. 'dist' → logprob: -5.939647674560547
    8. '   ' → logprob: -6.814647674560547
    9. 'for' → logprob: -7.564647674560547
    10. 'queue' → logprob: -7.939647674560547

Token 1518: ' check' (ID: 2371)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.05022067576646805
    2. 'answer' → logprob: -3.3002207279205322
    3. 'find' → logprob: -5.050220489501953
    4. '#' → logprob: -6.300220489501953
    5. 'check' → logprob: -6.675220489501953
    6. 'prop' → logprob: -7.550220489501953
    7. 'compute' → logprob: -7.800220489501953
    8. 'process' → logprob: -7.925220489501953
    9. 'detect' → logprob: -7.925220489501953
    10. ' answer' → logprob: -8.550220489501953

Token 1519: ' if' (ID: 538)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -1.7399506568908691
    2. 'if' → logprob: -1.8649506568908691
    3. ' reach' → logprob: -2.239950656890869
    4. '#' → logprob: -2.239950656890869
    5. ' if' → logprob: -2.364950656890869
    6. '       ' → logprob: -2.489950656890869
    7. '   ' → logprob: -2.614950656890869
    8. 'for' → logprob: -3.114950656890869
    9. 'whether' → logprob: -3.364950656890869
    10. 'paths' → logprob: -3.739950656890869

Token 1520: ' X' (ID: 2127)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1050246953964233
    2. 'there' → logprob: -1.4800246953964233
    3. ' there' → logprob: -1.7300246953964233
    4. 'class' → logprob: -2.480024814605713
    5. 'two' → logprob: -3.105024814605713
    6. ' a' → logprob: -3.230024814605713
    7. 'one' → logprob: -3.855024814605713
    8. 'strong' → logprob: -4.105024814605713
    9. ' two' → logprob: -4.730024814605713
    10. 'we' → logprob: -4.855024814605713

Token 1521: ' is' (ID: 382)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4225709140300751
    2. ' can' → logprob: -2.1725709438323975
    3. ' is' → logprob: -2.1725709438323975
    4. 'and' → logprob: -3.5475709438323975
    5. 'can' → logprob: -3.9225709438323975
    6. '   ' → logprob: -4.172570705413818
    7. 'is' → logprob: -4.422570705413818
    8. ' ==' → logprob: -4.797570705413818
    9. '
' → logprob: -5.047570705413818
    10. ''s' → logprob: -5.047570705413818

Token 1522: ' stronger' (ID: 26929)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.0024371391627937555
    2. ' stronger' → logprob: -6.127437114715576
    3. '_str' → logprob: -9.752437591552734
    4. 'strict' → logprob: -9.877437591552734
    5. 'str' → logprob: -10.627437591552734
    6. '"' → logprob: -10.752437591552734
    7. ' strong' → logprob: -10.877437591552734
    8. 'reachable' → logprob: -10.877437591552734
    9. '
' → logprob: -11.252437591552734
    10. '   ' → logprob: -11.377437591552734

Token 1523: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.16155822575092316
    2. '_than' → logprob: -2.536558151245117
    3. ' than' → logprob: -2.661558151245117
    4. '   ' → logprob: -9.411558151245117
    5. ':' → logprob: -11.036558151245117
    6. ' ' → logprob: -11.161558151245117
    7. '_' → logprob: -11.286558151245117
    8. ',' → logprob: -11.661558151245117
    9. '```' → logprob: -11.661558151245117
    10. 'Than' → logprob: -11.661558151245117

Token 1524: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -6.587483221665025e-05
    2. 'B' → logprob: -10.250065803527832
    3. ' Y' → logprob: -10.625065803527832
    4. 'X' → logprob: -13.000065803527832
    5. 'y' → logprob: -13.250065803527832
    6. ' ' → logprob: -13.625065803527832
    7. '   ' → logprob: -14.875065803527832
    8. 'A' → logprob: -15.750065803527832
    9. 'class' → logprob: -16.12506675720215
    10. '  ' → logprob: -17.12506675720215

Token 1525: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04585595801472664
    2. ':' → logprob: -3.42085599899292
    3. ',' → logprob: -4.54585599899292
    4. ':
' → logprob: -6.92085599899292
    5. '
' → logprob: -8.545855522155762
    6. '   ' → logprob: -9.545855522155762
    7. '           ' → logprob: -9.920855522155762
    8. '        
' → logprob: -10.295855522155762
    9. ',
' → logprob: -10.670855522155762
    10. ' for' → logprob: -10.670855522155762

Token 1526: ' check' (ID: 2371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15840467810630798
    2. ' continue' → logprob: -3.283404588699341
    3. '#' → logprob: -3.533404588699341
    4. 'def' → logprob: -3.783404588699341
    5. ' we' → logprob: -4.53340482711792
    6. ' for' → logprob: -4.78340482711792
    7. 'continue' → logprob: -5.03340482711792
    8. ' #' → logprob: -5.15840482711792
    9. '   ' → logprob: -5.53340482711792
    10. '           ' → logprob: -5.65840482711792

Token 1527: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15325723588466644
    2. ' if' → logprob: -2.903257131576538
    3. 'whether' → logprob: -3.153257131576538
    4. '   ' → logprob: -4.028257369995117
    5. '```' → logprob: -4.528257369995117
    6. '       ' → logprob: -4.903257369995117
    7. 'for' → logprob: -5.903257369995117
    8. ' whether' → logprob: -6.153257369995117
    9. 'visited' → logprob: -6.903257369995117
    10. 'def' → logprob: -6.903257369995117

Token 1528: ' class' (ID: 744)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.37687426805496216
    2. 'find' → logprob: -2.6268742084503174
    3. 'class' → logprob: -2.7518742084503174
    4. ' c' → logprob: -3.1268742084503174
    5. ' find' → logprob: -3.2518742084503174
    6. ' there' → logprob: -3.6268742084503174
    7. 'there' → logprob: -3.7518742084503174
    8. 'X' → logprob: -4.3768744468688965
    9. ' class' → logprob: -5.0018744468688965
    10. 'cx' → logprob: -5.3768744468688965

Token 1529: ' of' (ID: 328)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.02315114624798298
    2. '_x' → logprob: -4.64815092086792
    3. '_' → logprob: -4.89815092086792
    4. '_of' → logprob: -6.02315092086792
    5. '_y' → logprob: -6.77315092086792
    6. 'X' → logprob: -7.52315092086792
    7. '_classes' → logprob: -8.148151397705078
    8. '_X' → logprob: -8.273151397705078
    9. '_map' → logprob: -8.648151397705078
    10. 'of' → logprob: -9.148151397705078

Token 1530: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0070961154997348785
    2. 'find' → logprob: -5.882096290588379
    3. 'x' → logprob: -6.382096290588379
    4. 'c' → logprob: -6.882096290588379
    5. ' X' → logprob: -7.132096290588379
    6. 'Y' → logprob: -7.382096290588379
    7. ' find' → logprob: -9.382096290588379
    8. '(find' → logprob: -11.132096290588379
    9. '`' → logprob: -11.507096290588379
    10. 'y' → logprob: -12.007096290588379

Token 1531: ' can' (ID: 665)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.4588598310947418
    2. ' is' → logprob: -1.8338598012924194
    3. 'c' → logprob: -2.208859920501709
    4. '[class' → logprob: -3.458859920501709
    5. 'class' → logprob: -4.333859920501709
    6. ' has' → logprob: -4.708859920501709
    7. '_c' → logprob: -4.708859920501709
    8. ' in' → logprob: -4.833859920501709
    9. '```' → logprob: -5.083859920501709
    10. '
' → logprob: -5.333859920501709

Token 1532: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.576070249080658
    2. ' reach' → logprob: -0.826070249080658
    3. 'Reach' → logprob: -10.326069831848145
    4. ' be' → logprob: -10.576069831848145
    5. 'reachable' → logprob: -10.701069831848145
    6. '
' → logprob: -10.951069831848145
    7. 'be' → logprob: -11.201069831848145
    8. '_re' → logprob: -12.076069831848145
    9. ' ' → logprob: -12.326069831848145
    10. '   ' → logprob: -13.326069831848145

Token 1533: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0007223221473395824
    2. ' class' → logprob: -7.250722408294678
    3. 'the' → logprob: -12.00072193145752
    4. 'c' → logprob: -12.12572193145752
    5. '(class' → logprob: -14.12572193145752
    6. '<class' → logprob: -17.125722885131836
    7. '   ' → logprob: -17.750722885131836
    8. ' the' → logprob: -18.125722885131836
    9. '"class' → logprob: -18.375722885131836
    10. '	class' → logprob: -18.375722885131836

Token 1534: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.39065036177635193
    2. '(c' → logprob: -1.1406503915786743
    3. ' of' → logprob: -5.765650272369385
    4. '(find' → logprob: -8.265650749206543
    5. '_of' → logprob: -8.890650749206543
    6. '(of' → logprob: -9.390650749206543
    7. '(class' → logprob: -10.140650749206543
    8. '(y' → logprob: -10.640650749206543
    9. ' (' → logprob: -10.640650749206543
    10. '(Y' → logprob: -11.390650749206543

Token 1535: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0007537625497207046
    2. ' Y' → logprob: -7.500753879547119
    3. 'y' → logprob: -8.625753402709961
    4. 'find' → logprob: -11.375753402709961
    5. ' y' → logprob: -12.125753402709961
    6. 'class' → logprob: -13.125753402709961
    7. ' find' → logprob: -13.250753402709961
    8. '(find' → logprob: -15.375753402709961
    9. '```' → logprob: -15.625753402709961
    10. '
' → logprob: -16.25075340270996

Token 1536: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003494707867503166
    2. '
' → logprob: -6.003494739532471
    3. '        
' → logprob: -7.378494739532471
    4. '<|end|>' → logprob: -9.503494262695312
    5. ',' → logprob: -9.753494262695312
    6. '    
' → logprob: -10.003494262695312
    7. '           ' → logprob: -10.253494262695312
    8. '<|end|>' → logprob: -10.378494262695312
    9. '   ' → logprob: -10.628494262695312
    10. 'def' → logprob: -10.628494262695312

Token 1537: ' walking' (ID: 15015)
  Prédit: ' BFS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' BFS' → logprob: -0.5394761562347412
    2. ' DFS' → logprob: -1.4144761562347412
    3. ' bfs' → logprob: -2.289476156234741
    4. ' a' → logprob: -3.664476156234741
    5. 'DFS' → logprob: -4.28947639465332
    6. 'dfs' → logprob: -4.28947639465332
    7. ' dfs' → logprob: -5.28947639465332
    8. 'b' → logprob: -5.41447639465332
    9. 'a' → logprob: -5.78947639465332
    10. ' traversal' → logprob: -6.66447639465332

Token 1538: ' edges' (ID: 22569)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.10248521715402603
    2. 'in' → logprob: -3.102485179901123
    3. 'the' → logprob: -3.977485179901123
    4. ' through' → logprob: -4.352485179901123
    5. 'from' → logprob: -4.977485179901123
    6. 'along' → logprob: -5.352485179901123
    7. 'over' → logprob: -5.477485179901123
    8. 'class' → logprob: -6.602485179901123
    9. ' in' → logprob: -7.602485179901123
    10. 'on' → logprob: -7.602485179901123

Token 1539: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05110446736216545
    2. '
' → logprob: -3.0511045455932617
    3. '        
' → logprob: -6.301104545593262
    4. 'def' → logprob: -8.051104545593262
    5. ' in' → logprob: -9.676104545593262
    6. '<|end|>' → logprob: -9.676104545593262
    7. '           ' → logprob: -10.301104545593262
    8. ',' → logprob: -10.301104545593262
    9. '   ' → logprob: -10.426104545593262
    10. 'from' → logprob: -10.926104545593262

Token 1540: ' inside' (ID: 6772)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.6767666339874268
    2. '
' → logprob: -2.3017666339874268
    3. 'dfs' → logprob: -2.4267666339874268
    4. 'union' → logprob: -2.4267666339874268
    5. ' equal' → logprob: -2.5517666339874268
    6. 'parent' → logprob: -2.6767666339874268
    7. 'using' → logprob: -4.926766395568848
    8. ' parent' → logprob: -5.051766395568848
    9. 'multiple' → logprob: -5.426766395568848
    10. 'b' → logprob: -5.551766395568848

Token 1541: ' equal' (ID: 12629)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9499461054801941
    2. 'the' → logprob: -1.1999461650848389
    3. 'equal' → logprob: -1.5749461650848389
    4. 'same' → logprob: -2.699946165084839
    5. 'classes' → logprob: -4.07494592666626
    6. 'parent' → logprob: -5.19994592666626
    7. 'a' → logprob: -5.19994592666626
    8. '```' → logprob: -6.19994592666626
    9. '   ' → logprob: -6.44994592666626
    10. 'union' → logprob: -6.44994592666626

Token 1542: ' strength' (ID: 9386)
  Prédit: 'strength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strength' → logprob: -0.11814513057470322
    2. '_strength' → logprob: -2.243145227432251
    3. ' strength' → logprob: -5.493144989013672
    4. 'class' → logprob: -7.243144989013672
    5. '```' → logprob: -8.993144989013672
    6. '
' → logprob: -9.118144989013672
    7. ')' → logprob: -9.618144989013672
    8. '_class' → logprob: -9.743144989013672
    9. '   ' → logprob: -9.868144989013672
    10. '_' → logprob: -11.243144989013672

Token 1543: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6589664816856384
    2. 'classes' → logprob: -0.9089664816856384
    3. '
' → logprob: -3.283966541290283
    4. '   ' → logprob: -4.033966541290283
    5. ' classes' → logprob: -4.908966541290283
    6. '       ' → logprob: -5.408966541290283
    7. ' class' → logprob: -6.033966541290283
    8. 'sets' → logprob: -6.158966541290283
    9. '_class' → logprob: -6.408966541290283
    10. '           ' → logprob: -6.783966541290283

Token 1544: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4827363193035126
    2. '
' → logprob: -0.982736349105835
    3. '<|end|>' → logprob: -5.232736110687256
    4. '        
' → logprob: -6.232736110687256
    5. '<|end|>' → logprob: -7.357736110687256
    6. 'def' → logprob: -7.982736110687256
    7. '

' → logprob: -8.982736587524414
    8. 'import' → logprob: -9.732736587524414
    9. '           ' → logprob: -10.482736587524414
    10. '```' → logprob: -10.732736587524414

Token 1545: 'already' (ID: 89136)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025897301733493805
    2. ').' → logprob: -4.27589750289917
    3. ')
' → logprob: -5.27589750289917
    4. '.' → logprob: -6.90089750289917
    5. '```' → logprob: -6.90089750289917
    6. ' in' → logprob: -7.27589750289917
    7. 's' → logprob: -7.65089750289917
    8. '):
' → logprob: -7.65089750289917
    9. 'in' → logprob: -7.90089750289917
    10. '       ' → logprob: -8.025897026062012

Token 1546: ' united' (ID: 41799)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.9389556646347046
    2. 'handled' → logprob: -1.4389556646347046
    3. 'built' → logprob: -2.063955783843994
    4. 'consider' → logprob: -2.563955783843994
    5. 'represented' → logprob: -2.938955783843994
    6. 'included' → logprob: -3.438955783843994
    7. 'implemented' → logprob: -3.813955783843994
    8. 'connected' → logprob: -4.063955783843994
    9. 'covered' → logprob: -4.688955783843994
    10. 'in' → logprob: -4.938955783843994

Token 1547: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06657672673463821
    2. '       ' → logprob: -3.8165767192840576
    3. ').' → logprob: -3.8165767192840576
    4. 'in' → logprob: -5.191576957702637
    5. '.' → logprob: -5.566576957702637
    6. ' in' → logprob: -6.066576957702637
    7. ' through' → logprob: -6.066576957702637
    8. 'through' → logprob: -6.191576957702637
    9. ',' → logprob: -6.941576957702637
    10. '):
' → logprob: -7.316576957702637

Token 1548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31529882550239563
    2. '
' → logprob: -1.3152987957000732
    3. '        
' → logprob: -6.690299034118652
    4. '<|end|>' → logprob: -7.565299034118652
    5. '<|end|>' → logprob: -9.065299034118652
    6. '    
' → logprob: -9.815299034118652
    7. '   ' → logprob: -10.690299034118652
    8. '```' → logprob: -10.815299034118652
    9. '           ' → logprob: -11.190299034118652
    10. '#' → logprob: -11.690299034118652

Token 1549: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031992164440453053
    2. '
' → logprob: -5.878199100494385
    3. '   ' → logprob: -8.628199577331543
    4. '        
' → logprob: -8.753199577331543
    5. '```' → logprob: -11.253199577331543
    6. '           ' → logprob: -11.253199577331543
    7. 'import' → logprob: -11.628199577331543
    8. '    
' → logprob: -11.878199577331543
    9. 'def' → logprob: -12.003199577331543
    10. 'for' → logprob: -12.378199577331543

Token 1550: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15295375883579254
    2. 'for' → logprob: -2.277953863143921
    3. 'import' → logprob: -4.027953624725342
    4. 'from' → logprob: -4.902953624725342
    5. 'def' → logprob: -5.152953624725342
    6. '   ' → logprob: -5.652953624725342
    7. '#' → logprob: -6.777953624725342
    8. 'visited' → logprob: -6.777953624725342
    9. '```' → logprob: -7.527953624725342
    10. 'query' → logprob: -7.652953624725342

Token 1551: ' each' (ID: 2454)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.7854677438735962
    2. 'q' → logprob: -0.9104677438735962
    3. 'st' → logprob: -2.7854676246643066
    4. ' st' → logprob: -4.160467624664307
    5. 'question' → logprob: -4.285467624664307
    6. ' question' → logprob: -4.660467624664307
    7. ' _' → logprob: -5.035467624664307
    8. '_' → logprob: -5.410467624664307
    9. ' line' → logprob: -5.785467624664307
    10. '_q' → logprob: -5.910467624664307

Token 1552: ' question' (ID: 4928)
  Prédit: 'question'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'question' → logprob: -0.9041990041732788
    2. ' question' → logprob: -1.0291990041732788
    3. ' q' → logprob: -2.0291991233825684
    4. 'q' → logprob: -2.6541991233825684
    5. ' query' → logprob: -4.154199123382568
    6. 'query' → logprob: -4.404199123382568
    7. ' line' → logprob: -6.779199123382568
    8. ' X' → logprob: -6.904199123382568
    9. ' x' → logprob: -7.029199123382568
    10. 'st' → logprob: -7.029199123382568

Token 1553: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012162409722805023
    2. 'for' → logprob: -4.762162208557129
    3. ' for' → logprob: -5.762162208557129
    4. '           ' → logprob: -8.137162208557129
    5. ':' → logprob: -10.262162208557129
    6. '   ' → logprob: -10.262162208557129
    7. ',' → logprob: -11.262162208557129
    8. '
' → logprob: -12.137162208557129
    9. '```' → logprob: -12.137162208557129
    10. '        
' → logprob: -12.762162208557129

Token 1554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.7994282795116305e-05
    2. ' for' → logprob: -10.62504768371582
    3. 'for' → logprob: -11.25004768371582
    4. '   ' → logprob: -12.37504768371582
    5. '           ' → logprob: -12.37504768371582
    6. '```' → logprob: -14.12504768371582
    7. '<|end|>' → logprob: -14.87504768371582
    8. '	   ' → logprob: -15.37504768371582
    9. ',' → logprob: -15.87504768371582
    10. '<|end|>' → logprob: -15.87504768371582

Token 1555: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00331590767018497
    2. 'for' → logprob: -5.8783159255981445
    3. ' for' → logprob: -8.003315925598145
    4. '   ' → logprob: -9.003315925598145
    5. '           ' → logprob: -10.003315925598145
    6. '```' → logprob: -12.253315925598145
    7. '
' → logprob: -13.253315925598145
    8. '        
' → logprob: -14.628315925598145
    9. ' ' → logprob: -15.128315925598145
    10. '      ' → logprob: -15.253315925598145

Token 1556: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016063343733549118
    2. ' for' → logprob: -4.516063213348389
    3. 'for' → logprob: -5.391063213348389
    4. '   ' → logprob: -8.016063690185547
    5. '           ' → logprob: -9.266063690185547
    6. '        
' → logprob: -12.641063690185547
    7. '```' → logprob: -12.641063690185547
    8. '    ' → logprob: -12.891063690185547
    9. '        ' → logprob: -13.016063690185547
    10. ' ' → logprob: -13.016063690185547

Token 1557: ' YES' (ID: 32968)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -1.3343983888626099
    2. '       ' → logprob: -1.5843983888626099
    3. '("' → logprob: -1.7093983888626099
    4. '()' → logprob: -2.0843982696533203
    5. '(' → logprob: -2.3343982696533203
    6. ''' → logprob: -3.7093982696533203
    7. 'for' → logprob: -3.7093982696533203
    8. '   ' → logprob: -4.33439826965332
    9. '"' → logprob: -4.33439826965332
    10. 'answers' → logprob: -4.45939826965332

Token 1558: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9331601858139038
    2. '()' → logprob: -1.8081601858139038
    3. ' if' → logprob: -2.1831603050231934
    4. 'if' → logprob: -2.8081603050231934
    5. 'elif' → logprob: -3.0581603050231934
    6. ',' → logprob: -3.1831603050231934
    7. '
' → logprob: -3.6831603050231934
    8. ' or' → logprob: -3.8081603050231934
    9. ' elif' → logprob: -3.8081603050231934
    10. '   ' → logprob: -4.058160305023193

Token 1559: ' X' (ID: 2127)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7149680852890015
    2. ' color' → logprob: -0.8399680852890015
    3. 'color' → logprob: -3.464968204498291
    4. 'c' → logprob: -3.464968204498291
    5. ' class' → logprob: -5.089968204498291
    6. ' equal' → logprob: -5.589968204498291
    7. 'class' → logprob: -6.214968204498291
    8. 'equal' → logprob: -6.339968204498291
    9. ' X' → logprob: -7.714968204498291
    10. '   ' → logprob: -7.839968204498291

Token 1560: ' and' (ID: 326)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0055088382214307785
    2. ' ==' → logprob: -5.880508899688721
    3. ' and' → logprob: -7.130508899688721
    4. ' in' → logprob: -7.630508899688721
    5. ' ' → logprob: -8.005508422851562
    6. 'is' → logprob: -8.505508422851562
    7. '==' → logprob: -8.505508422851562
    8. '   ' → logprob: -8.880508422851562
    9. ' can' → logprob: -9.505508422851562
    10. '_is' → logprob: -9.505508422851562

Token 1561: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.43340158462524414
    2. ' Y' → logprob: -1.0584015846252441
    3. ''' → logprob: -5.433401584625244
    4. ' ' → logprob: -8.808401107788086
    5. '"' → logprob: -9.558401107788086
    6. ' '' → logprob: -10.683401107788086
    7. '
' → logprob: -10.808401107788086
    8. '   ' → logprob: -11.058401107788086
    9. ' ' → logprob: -12.058401107788086
    10. 'y' → logprob: -12.058401107788086

Token 1562: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.0259055495262146
    2. ' in' → logprob: -3.9009056091308594
    3. ' belong' → logprob: -5.900905609130859
    4. 'are' → logprob: -6.400905609130859
    5. ' have' → logprob: -7.650905609130859
    6. ' can' → logprob: -8.40090560913086
    7. 'in' → logprob: -10.02590560913086
    8. '   ' → logprob: -10.52590560913086
    9. ' same' → logprob: -11.15090560913086
    10. ' is' → logprob: -11.15090560913086

Token 1563: ' orth' (ID: 35656)
  Prédit: ' equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' equal' → logprob: -0.479848176240921
    2. ' in' → logprob: -1.8548481464385986
    3. 'equal' → logprob: -1.9798481464385986
    4. 'in' → logprob: -3.1048481464385986
    5. ' the' → logprob: -3.9798481464385986
    6. ' connected' → logprob: -5.104848384857178
    7. 'the' → logprob: -5.604848384857178
    8. 'same' → logprob: -6.229848384857178
    9. 'connected' → logprob: -6.354848384857178
    10. ' same' → logprob: -6.604848384857178

Token 1564: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.003595910035073757
    2. '```' → logprob: -6.00359582901001
    3. '``' → logprob: -7.87859582901001
    4. '       ' → logprob: -8.003596305847168
    5. 'ogon' → logprob: -9.253596305847168
    6. '   ' → logprob: -9.503596305847168
    7. 'og' → logprob: -9.878596305847168
    8. '
' → logprob: -9.878596305847168
    9. '#' → logprob: -10.628596305847168
    10. '           ' → logprob: -10.628596305847168

Token 1565: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.614205002784729
    2. '
' → logprob: -1.239205002784729
    3. '           ' → logprob: -1.989205002784729
    4. ':
' → logprob: -5.4892048835754395
    5. ' and' → logprob: -5.9892048835754395
    6. ' or' → logprob: -6.1142048835754395
    7. '()
' → logprob: -6.2392048835754395
    8. ',' → logprob: -6.2392048835754395
    9. '   ' → logprob: -6.3642048835754395
    10. '        
' → logprob: -6.3642048835754395

Token 1566: 'one' (ID: 690)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.916472315788269
    2. ')' → logprob: -1.416472315788269
    3. ' streets' → logprob: -1.791472315788269
    4. ' directions' → logprob: -2.4164724349975586
    5. ' not' → logprob: -3.5414724349975586
    6. ' (' → logprob: -4.041472434997559
    7. ' in' → logprob: -4.416472434997559
    8. 'and' → logprob: -4.791472434997559
    9. '           ' → logprob: -5.541472434997559
    10. ' or' → logprob: -5.791472434997559

Token 1567: ' NS' (ID: 6950)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8700756430625916
    2. '==' → logprob: -1.4950757026672363
    3. ' in' → logprob: -1.8700757026672363
    4. ' !=' → logprob: -2.1200757026672363
    5. ' and' → logprob: -3.6200757026672363
    6. ' is' → logprob: -3.8700757026672363
    7. '!=' → logprob: -5.120075702667236
    8. ' not' → logprob: -5.370075702667236
    9. '=='' → logprob: -5.745075702667236
    10. '-direction' → logprob: -6.245075702667236

Token 1568: ',' (ID: 11)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.18442688882350922
    2. '_' → logprob: -2.059426784515381
    3. ' and' → logprob: -3.934426784515381
    4. 'and' → logprob: -4.559426784515381
    5. '           ' → logprob: -5.809426784515381
    6. '       ' → logprob: -5.809426784515381
    7. '```' → logprob: -6.309426784515381
    8. ',' → logprob: -6.809426784515381
    9. '               ' → logprob: -7.059426784515381
    10. ' _' → logprob: -8.684427261352539

Token 1569: ' one' (ID: 1001)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.6136074662208557
    2. ' other' → logprob: -1.113607406616211
    3. ' one' → logprob: -2.238607406616211
    4. ' another' → logprob: -4.738607406616211
    5. 'one' → logprob: -4.738607406616211
    6. 'another' → logprob: -5.988607406616211
    7. ' ' → logprob: -6.988607406616211
    8. ')' → logprob: -6.988607406616211
    9. ' the' → logprob: -7.488607406616211
    10. 'the' → logprob: -7.988607406616211

Token 1570: ' EW' (ID: 143307)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7311428189277649
    2. ' in' → logprob: -1.1061427593231201
    3. ' _' → logprob: -2.48114275932312
    4. ')' → logprob: -2.98114275932312
    5. ' ==' → logprob: -4.856142997741699
    6. '==' → logprob: -5.231142997741699
    7. ' of' → logprob: -5.481142997741699
    8. '```' → logprob: -5.856142997741699
    9. 'EW' → logprob: -5.856142997741699
    10. '
' → logprob: -5.981142997741699

Token 1571: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.211047649383545
    2. ')' → logprob: -1.336047649383545
    3. ' and' → logprob: -1.586047649383545
    4. '           ' → logprob: -2.461047649383545
    5. '_st' → logprob: -3.586047649383545
    6. '```' → logprob: -3.711047649383545
    7. '_' → logprob: -3.836047649383545
    8. ',' → logprob: -3.961047649383545
    9. 'and' → logprob: -4.336047649383545
    10. '):
' → logprob: -4.586047649383545

Token 1572: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1785963922739029
    2. '
' → logprob: -1.9285963773727417
    3. '           ' → logprob: -4.053596496582031
    4. '        
' → logprob: -8.053596496582031
    5. '<|end|>' → logprob: -9.053596496582031
    6. '```' → logprob: -9.553596496582031
    7. ',' → logprob: -9.678596496582031
    8. '               ' → logprob: -10.053596496582031
    9. ',
' → logprob: -10.178596496582031
    10. '            
' → logprob: -10.303596496582031

Token 1573: ' X' (ID: 2127)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.766304612159729
    2. 'X' → logprob: -1.141304612159729
    3. ' color' → logprob: -2.2663044929504395
    4. ' (' → logprob: -3.8913044929504395
    5. ' X' → logprob: -4.0163044929504395
    6. 'Y' → logprob: -4.2663044929504395
    7. 'graph' → logprob: -4.2663044929504395
    8. 'x' → logprob: -5.2663044929504395
    9. '(' → logprob: -5.2663044929504395
    10. '(color' → logprob: -5.3913044929504395

Token 1574: ' class' (ID: 744)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.49768537282943726
    2. ' in' → logprob: -1.497685432434082
    3. ' ==' → logprob: -1.997685432434082
    4. '==' → logprob: -4.247685432434082
    5. '!=' → logprob: -4.622685432434082
    6. ' not' → logprob: -5.747685432434082
    7. ' <' → logprob: -6.372685432434082
    8. 'in' → logprob: -6.372685432434082
    9. ' and' → logprob: -7.622685432434082
    10. '```' → logprob: -7.997685432434082

Token 1575: ' can' (ID: 665)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6164091229438782
    2. '!=' → logprob: -2.1164090633392334
    3. '[class' → logprob: -2.2414090633392334
    4. '==' → logprob: -2.7414090633392334
    5. ' in' → logprob: -3.1164090633392334
    6. '[c' → logprob: -3.2414090633392334
    7. 'in' → logprob: -3.6164090633392334
    8. ' ==' → logprob: -3.7414090633392334
    9. '[' → logprob: -4.4914093017578125
    10. ' is' → logprob: -4.8664093017578125

Token 1576: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.07891391962766647
    2. ' reach' → logprob: -2.578913927078247
    3. '   ' → logprob: -11.703913688659668
    4. 'reachable' → logprob: -11.953913688659668
    5. ' ' → logprob: -12.328913688659668
    6. 'Reach' → logprob: -13.203913688659668
    7. '
' → logprob: -14.578913688659668
    8. '_re' → logprob: -14.578913688659668
    9. 'be' → logprob: -14.703913688659668
    10. '  ' → logprob: -14.953913688659668

Token 1577: ' Y' (ID: 865)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7875276803970337
    2. 'Y' → logprob: -0.9125276803970337
    3. 'y' → logprob: -2.787527561187744
    4. ' Y' → logprob: -2.912527561187744
    5. ' y' → logprob: -4.412527561187744
    6. ' class' → logprob: -4.662527561187744
    7. '(y' → logprob: -5.662527561187744
    8. ')' → logprob: -7.412527561187744
    9. 'the' → logprob: -7.787527561187744
    10. '(Y' → logprob: -7.912527561187744

Token 1578: ' class' (ID: 744)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11092323064804077
    2. 'for' → logprob: -3.1109232902526855
    3. ' for' → logprob: -4.4859232902526855
    4. '        
' → logprob: -4.7359232902526855
    5. '
' → logprob: -5.1109232902526855
    6. ':
' → logprob: -5.3609232902526855
    7. '           ' → logprob: -5.3609232902526855
    8. '()
' → logprob: -5.4859232902526855
    9. '```' → logprob: -5.6109232902526855
    10. 'def' → logprob: -5.8609232902526855

Token 1579: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012566609075292945
    2. '
' → logprob: -7.001256465911865
    3. 'for' → logprob: -9.126256942749023
    4. '<|end|>' → logprob: -9.501256942749023
    5. '        
' → logprob: -10.501256942749023
    6. '<|end|>' → logprob: -10.626256942749023
    7. 'import' → logprob: -10.751256942749023
    8. 'def' → logprob: -10.751256942749023
    9. ' for' → logprob: -10.876256942749023
    10. '   ' → logprob: -11.126256942749023

Token 1580: ' path' (ID: 3104)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.8195667862892151
    2. ' BFS' → logprob: -1.5695667266845703
    3. ' traversal' → logprob: -2.4445667266845703
    4. '
' → logprob: -2.9445667266845703
    5. ' DFS' → logprob: -3.0695667266845703
    6. ' dfs' → logprob: -3.1945667266845703
    7. 'dfs' → logprob: -3.3195667266845703
    8. ' graph' → logprob: -3.9445667266845703
    9. '"' → logprob: -4.06956672668457
    10. 'DFS' → logprob: -4.94456672668457

Token 1581: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06685139238834381
    2. '
' → logprob: -3.8168513774871826
    3. '           ' → logprob: -3.9418513774871826
    4. 'for' → logprob: -5.191851615905762
    5. ' for' → logprob: -5.941851615905762
    6. 'from' → logprob: -5.941851615905762
    7. '```' → logprob: -6.316851615905762
    8. '   ' → logprob: -6.316851615905762
    9. 'import' → logprob: -6.691851615905762
    10. '               ' → logprob: -6.816851615905762

Token 1582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023214029148221016
    2. '
' → logprob: -4.023213863372803
    3. '        
' → logprob: -5.523213863372803
    4. ' for' → logprob: -8.273214340209961
    5. 'for' → logprob: -8.898214340209961
    6. '           ' → logprob: -8.898214340209961
    7. '    
' → logprob: -9.273214340209961
    8. '   ' → logprob: -9.648214340209961
    9. '\n' → logprob: -9.898214340209961
    10. '<|end|>' → logprob: -9.898214340209961

Token 1583: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012566609075292945
    2. '           ' → logprob: -7.251256465911865
    3. '
' → logprob: -8.626256942749023
    4. ' for' → logprob: -8.751256942749023
    5. '   ' → logprob: -9.626256942749023
    6. 'for' → logprob: -9.876256942749023
    7. ',' → logprob: -10.626256942749023
    8. '        
' → logprob: -10.876256942749023
    9. '```' → logprob: -11.251256942749023
    10. '(' → logprob: -12.376256942749023

Token 1584: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025242918636649847
    2. ' for' → logprob: -7.127524375915527
    3. 'for' → logprob: -7.377524375915527
    4. '   ' → logprob: -7.627524375915527
    5. '
' → logprob: -7.752524375915527
    6. '           ' → logprob: -9.377524375915527
    7. 'import' → logprob: -10.627524375915527
    8. ' ' → logprob: -11.002524375915527
    9. '        
' → logprob: -11.002524375915527
    10. '```' → logprob: -11.877524375915527

Token 1585: ' NO' (ID: 9319)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3945595622062683
    2. 'print' → logprob: -1.519559621810913
    3. '       ' → logprob: -2.769559621810913
    4. '           ' → logprob: -3.394559621810913
    5. ':
' → logprob: -5.269559383392334
    6. '```' → logprob: -5.519559383392334
    7. ':' → logprob: -6.894559383392334
    8. '   ' → logprob: -8.644559860229492
    9. ' continue' → logprob: -8.644559860229492
    10. '        ' → logprob: -9.394559860229492

Token 1586: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10475733131170273
    2. '
' → logprob: -2.354757308959961
    3. '        
' → logprob: -5.604757308959961
    4. '   ' → logprob: -8.729757308959961
    5. '    
' → logprob: -8.854757308959961
    6. '           ' → logprob: -8.854757308959961
    7. '  
' → logprob: -9.604757308959961
    8. '<|end|>' → logprob: -9.604757308959961
    9. '```' → logprob: -10.479757308959961
    10. ' for' → logprob: -10.604757308959961

Token 1587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010566194541752338
    2. 'for' → logprob: -5.260566234588623
    3. '   ' → logprob: -5.510566234588623
    4. ' for' → logprob: -7.135566234588623
    5. '
' → logprob: -8.385565757751465
    6. '```' → logprob: -8.510565757751465
    7. '        
' → logprob: -11.260565757751465
    8. 'import' → logprob: -11.385565757751465
    9. 'def' → logprob: -11.885565757751465
    10. '           ' → logprob: -12.135565757751465

Token 1588: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019223196431994438
    2. '   ' → logprob: -4.019223213195801
    3. 'for' → logprob: -7.019223213195801
    4. '
' → logprob: -9.0192232131958
    5. ' for' → logprob: -10.0192232131958
    6. '        
' → logprob: -12.0192232131958
    7. '    
' → logprob: -12.7692232131958
    8. '           ' → logprob: -13.6442232131958
    9. 'import' → logprob: -14.0192232131958
    10. '```' → logprob: -14.5192232131958

Token 1589: '(len' (ID: 14990)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005146111827343702
    2. '('' → logprob: -5.630146026611328
    3. '(' → logprob: -6.755146026611328
    4. '("")' → logprob: -8.255146026611328
    5. '("' → logprob: -9.505146026611328
    6. '("("' → logprob: -10.505146026611328
    7. ' ()' → logprob: -11.880146026611328
    8. '()
' → logprob: -12.630146026611328
    9. '(""' → logprob: -13.130146026611328
    10. '("""' → logprob: -13.630146026611328

Token 1590: '(st' (ID: 4065)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.1435004323720932
    2. '(st' → logprob: -2.643500328063965
    3. '(' → logprob: -3.518500328063965
    4. '(classes' → logprob: -4.768500328063965
    5. '('' → logprob: -5.143500328063965
    6. '(class' → logprob: -5.393500328063965
    7. '(question' → logprob: -5.518500328063965
    8. '(s' → logprob: -5.893500328063965
    9. 'cross' → logprob: -6.018500328063965
    10. ')' → logprob: -6.518500328063965

Token 1591: 're' (ID: 264)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.7143697738647461
    2. 'reet' → logprob: -1.214369773864746
    3. 're' → logprob: -2.214369773864746
    4. 'cross' → logprob: -3.339369773864746
    5. 'r' → logprob: -3.464369773864746
    6. 'ret' → logprob: -5.089369773864746
    7. ')' → logprob: -5.214369773864746
    8. 'rets' → logprob: -5.464369773864746
    9. '       ' → logprob: -5.839369773864746
    10. 'e' → logprob: -5.839369773864746

Token 1592: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.002501698210835457
    2. 'et' → logprob: -6.127501487731934
    3. 'ts' → logprob: -8.502501487731934
    4. 't' → logprob: -9.627501487731934
    5. 'ss' → logprob: -11.002501487731934
    6. 'eps' → logprob: -11.252501487731934
    7. '       ' → logprob: -12.627501487731934
    8. 'e' → logprob: -12.752501487731934
    9. '```' → logprob: -13.252501487731934
    10. '   ' → logprob: -13.252501487731934

Token 1593: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016574477776885033
    2. '))' → logprob: -6.501657485961914
    3. ' )' → logprob: -9.751657485961914
    4. ')
' → logprob: -10.251657485961914
    5. '())' → logprob: -10.626657485961914
    6. '   ' → logprob: -11.501657485961914
    7. '[' → logprob: -12.001657485961914
    8. '       ' → logprob: -12.126657485961914
    9. ')))' → logprob: -12.626657485961914
    10. ')}' → logprob: -13.126657485961914

Token 1594: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8313923478126526
    2. '<|end|>' → logprob: -0.9563923478126526
    3. '()' → logprob: -2.331392288208008
    4. '       ' → logprob: -3.206392288208008
    5. '   ' → logprob: -4.706392288208008
    6. '\' → logprob: -5.331392288208008
    7. '<|end|>' → logprob: -5.581392288208008
    8. '[]' → logprob: -5.581392288208008
    9. '
' → logprob: -5.706392288208008
    10. '#' → logprob: -6.081392288208008

Token 1595: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3701154589653015
    2. 'for' (adapté à ' for') → logprob: -1.2451155185699463
    3. ' for' → logprob: -3.8701155185699463
    4. '   ' → logprob: -8.120115280151367
    5. '
' → logprob: -8.995115280151367
    6. '<|end|>' → logprob: -9.495115280151367
    7. '	for' → logprob: -10.245115280151367
    8. '        
' → logprob: -10.870115280151367
    9. '```' → logprob: -11.870115280151367
    10. '           ' → logprob: -11.995115280151367

Token 1596: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5760840177536011
    2. ' q' → logprob: -0.8260840177536011
    3. '   ' → logprob: -9.07608413696289
    4. '       ' → logprob: -11.95108413696289
    5. '	q' → logprob: -12.45108413696289
    6. ' ' → logprob: -12.95108413696289
    7. 'question' → logprob: -12.95108413696289
    8. '    ' → logprob: -13.20108413696289
    9. 'X' → logprob: -13.32608413696289
    10. 'Q' → logprob: -13.45108413696289

Token 1597: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43100589513778687
    2. 'in' → logprob: -1.4310059547424316
    3. '_' → logprob: -3.6810059547424316
    4. ' =' → logprob: -3.6810059547424316
    5. '_tokens' → logprob: -4.306005954742432
    6. '_token' → logprob: -4.931005954742432
    7. ' ' → logprob: -5.056005954742432
    8. '[' → logprob: -5.556005954742432
    9. '_idx' → logprob: -5.681005954742432
    10. ',' → logprob: -6.056005954742432

Token 1598: ' questions' (ID: 5359)
  Prédit: 'questions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'questions' → logprob: -0.012604541145265102
    2. ' questions' → logprob: -4.387604713439941
    3. 'range' → logprob: -9.387604713439941
    4. ' range' → logprob: -12.012604713439941
    5. '(' → logprob: -13.387604713439941
    6. 'q' → logprob: -13.637604713439941
    7. '[' → logprob: -14.387604713439941
    8. '   ' → logprob: -15.012604713439941
    9. 'queries' → logprob: -15.012604713439941
    10. ' ' → logprob: -15.512604713439941

Token 1599: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6387349367141724
    2. '           ' → logprob: -1.0137349367141724
    3. ':
' → logprob: -2.763734817504883
    4. ',' → logprob: -4.013734817504883
    5. '       ' → logprob: -4.013734817504883
    6. '```' → logprob: -6.013734817504883
    7. '():
' → logprob: -6.263734817504883
    8. '<|end|>' → logprob: -7.138734817504883
    9. '):
' → logprob: -7.763734817504883
    10. '[' → logprob: -7.763734817504883

Token 1600: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4931083619594574
    2. '           ' → logprob: -0.9931083917617798
    3. '   ' → logprob: -4.24310827255249
    4. '```' → logprob: -5.49310827255249
    5. '`' → logprob: -8.993108749389648
    6. '        
' → logprob: -10.368108749389648
    7. '	       ' → logprob: -10.493108749389648
    8. '        ' → logprob: -10.618108749389648
    9. '``' → logprob: -10.743108749389648
    10. '         ' → logprob: -10.743108749389648

Token 1601: ' X' (ID: 2127)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7052889466285706
    2. '           ' → logprob: -0.9552889466285706
    3. 'x' → logprob: -2.455288887023926
    4. '   ' → logprob: -4.205288887023926
    5. '       ' → logprob: -4.705288887023926
    6. ' a' → logprob: -5.330288887023926
    7. 'X' (adapté à ' X') → logprob: -6.080288887023926
    8. 'A' → logprob: -6.580288887023926
    9. ' x' → logprob: -6.580288887023926
    10. '```' → logprob: -6.580288887023926

Token 1602: ',Y' (ID: 71464)
  Prédit: ',Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Y' → logprob: -0.1657872498035431
    2. ',' → logprob: -1.9157872200012207
    3. ',A' → logprob: -6.415787220001221
    4. 'Y' → logprob: -6.665787220001221
    5. '_,' → logprob: -6.915787220001221
    6. 'a' → logprob: -7.790787220001221
    7. ',a' → logprob: -8.165787696838379
    8. 'A' → logprob: -8.290787696838379
    9. ',X' → logprob: -8.415787696838379
    10. ' ,' → logprob: -8.915787696838379

Token 1603: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761023759841919
    2. ' =' → logprob: -0.8261023759841919
    3. '           ' → logprob: -9.451102256774902
    4. 'x' → logprob: -9.576102256774902
    5. '            ' → logprob: -12.951102256774902
    6. 'X' → logprob: -13.076102256774902
    7. 'a' → logprob: -13.076102256774902
    8. '   ' → logprob: -13.826102256774902
    9. ',' → logprob: -14.201102256774902
    10. '        ' → logprob: -14.326102256774902

Token 1604: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0009118211455643177
    2. ' q' → logprob: -7.000911712646484
    3. '           ' → logprob: -15.125911712646484
    4. '[q' → logprob: -16.500911712646484
    5. 'map' → logprob: -18.250911712646484
    6. '   ' → logprob: -19.250911712646484
    7. '	q' → logprob: -19.250911712646484
    8. 'tuple' → logprob: -19.375911712646484
    9. '(q' → logprob: -19.750911712646484
    10. '$q' → logprob: -19.750911712646484

Token 1605: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.053503841161727905
    2. ' =' → logprob: -3.9285037517547607
    3. '=' → logprob: -4.05350399017334
    4. '.' → logprob: -4.30350399017334
    5. ' .' → logprob: -6.80350399017334
    6. 'split' → logprob: -8.55350399017334
    7. '_split' → logprob: -10.17850399017334
    8. '=.' → logprob: -10.17850399017334
    9. '.strip' → logprob: -10.55350399017334
    10. '.=' → logprob: -10.55350399017334

Token 1606: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.0012734467163681984
    2. ''-' → logprob: -6.8762736320495605
    3. '('' → logprob: -9.001273155212402
    4. '('-',' → logprob: -9.751273155212402
    5. '("-' → logprob: -10.626273155212402
    6. '-' → logprob: -10.751273155212402
    7. '(' → logprob: -11.501273155212402
    8. '('.')' → logprob: -14.001273155212402
    9. '"-' → logprob: -14.251273155212402
    10. '('='' → logprob: -14.876273155212402

Token 1607: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023133665323257446
    2. '')
' → logprob: -4.148133754730225
    3. ')' → logprob: -5.273133754730225
    4. '           ' → logprob: -6.773133754730225
    5. '')' → logprob: -7.523133754730225
    6. '       ' → logprob: -8.648133277893066
    7. '")
' → logprob: -10.273133277893066
    8. ')
' → logprob: -11.523133277893066
    9. '()
' → logprob: -11.898133277893066
    10. ' )
' → logprob: -12.148133277893066

Token 1608: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031891580671072006
    2. '       ' → logprob: -3.5318915843963623
    3. '   ' → logprob: -6.406891345977783
    4. '
' → logprob: -9.281891822814941
    5. ' if' → logprob: -9.531891822814941
    6. 'if' → logprob: -9.656891822814941
    7. '```' → logprob: -9.906891822814941
    8. 'x' → logprob: -10.031891822814941
    9. '            
' → logprob: -10.781891822814941
    10. '`' → logprob: -11.031891822814941

Token 1609: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0283628702163696
    2. 'cx' → logprob: -1.1533628702163696
    3. 'x' → logprob: -2.15336275100708
    4. '           ' → logprob: -2.40336275100708
    5. 'X' → logprob: -2.65336275100708
    6. '       ' → logprob: -4.15336275100708
    7. 'from' → logprob: -4.52836275100708
    8. '   ' → logprob: -5.27836275100708
    9. 'def' → logprob: -5.40336275100708
    10. 'c' → logprob: -5.65336275100708

Token 1610: ' X' (ID: 2127)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.08939731121063232
    2. ' color' → logprob: -2.589397430419922
    3. 'X' → logprob: -5.839397430419922
    4. '(color' → logprob: -5.964397430419922
    5. ' (' → logprob: -6.089397430419922
    6. '(' → logprob: -6.839397430419922
    7. ' X' → logprob: -7.089397430419922
    8. '(X' → logprob: -7.339397430419922
    9. '   ' → logprob: -10.464397430419922
    10. '(ns' → logprob: -10.589397430419922

Token 1611: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5007432103157043
    2. ' ==' → logprob: -1.3757431507110596
    3. ' in' → logprob: -2.1257431507110596
    4. ' !=' → logprob: -4.750743389129639
    5. '==' → logprob: -5.000743389129639
    6. 'not' → logprob: -5.375743389129639
    7. 'in' → logprob: -6.750743389129639
    8. '!=' → logprob: -8.25074291229248
    9. '[' → logprob: -8.75074291229248
    10. ' ' → logprob: -9.25074291229248

Token 1612: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22545211017131805
    2. 'in' → logprob: -1.6004520654678345
    3. ' or' → logprob: -11.475452423095703
    4. ' ' → logprob: -12.350452423095703
    5. 'or' → logprob: -12.725452423095703
    6. ')' → logprob: -12.725452423095703
    7. ' graph' → logprob: -13.225452423095703
    8. '            ' → logprob: -13.225452423095703
    9. ' streets' → logprob: -13.225452423095703
    10. 'graph' → logprob: -13.350452423095703

Token 1613: ' color' (ID: 3089)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.0940333679318428
    2. 'color' → logprob: -2.7190334796905518
    3. 'graph' → logprob: -4.219033241271973
    4. 'ns' → logprob: -4.969033241271973
    5. 'street' → logprob: -7.094033241271973
    6. 'class' → logprob: -7.469033241271973
    7. 'parent' → logprob: -8.469033241271973
    8. ' streets' → logprob: -8.844033241271973
    9. 'sts' → logprob: -9.469033241271973
    10. 'colors' → logprob: -9.844033241271973

Token 1614: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018621021881699562
    2. '               ' → logprob: -4.64362096786499
    3. 'or' → logprob: -5.14362096786499
    4. ':
' → logprob: -6.51862096786499
    5. '           ' → logprob: -6.64362096786499
    6. ':' → logprob: -8.643621444702148
    7. '                   ' → logprob: -11.643621444702148
    8. '              ' → logprob: -11.893621444702148
    9. '```' → logprob: -12.643621444702148
    10. '            ' → logprob: -12.768621444702148

Token 1615: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.38690656423568726
    2. ' Y' → logprob: -1.136906623840332
    3. ' color' → logprob: -10.761906623840332
    4. 'color' → logprob: -11.511906623840332
    5. '   ' → logprob: -13.886906623840332
    6. '    ' → logprob: -14.136906623840332
    7. '            ' → logprob: -14.261906623840332
    8. '           ' → logprob: -14.386906623840332
    9. ' ' → logprob: -14.511906623840332
    10. 'y' → logprob: -15.136906623840332

Token 1616: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0019589634612202644
    2. 'not' → logprob: -6.251958847045898
    3. ' ==' → logprob: -11.376958847045898
    4. '==' → logprob: -11.876958847045898
    5. '[' → logprob: -12.251958847045898
    6. ')' → logprob: -12.751958847045898
    7. ' in' → logprob: -13.626958847045898
    8. '	not' → logprob: -14.001958847045898
    9. '<|end|>' → logprob: -14.001958847045898
    10. ' ' → logprob: -15.001958847045898

Token 1617: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10021842271089554
    2. ' in' → logprob: -2.3502185344696045
    3. ' ' → logprob: -12.850218772888184
    4. 'not' → logprob: -12.850218772888184
    5. '
' → logprob: -13.350218772888184
    6. '   ' → logprob: -14.225218772888184
    7. '```' → logprob: -14.225218772888184
    8. 'import' → logprob: -14.600218772888184
    9. 'color' → logprob: -14.850218772888184
    10. '[' → logprob: -14.975218772888184

Token 1618: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.12692947685718536
    2. ' color' → logprob: -2.126929521560669
    3. '	color' → logprob: -14.87692928314209
    4. '[color' → logprob: -15.37692928314209
    5. '```' → logprob: -15.50192928314209
    6. ' ' → logprob: -15.87692928314209
    7. 'Color' → logprob: -15.87692928314209
    8. '.color' → logprob: -16.626930236816406
    9. '   ' → logprob: -17.001930236816406
    10. '(color' → logprob: -17.001930236816406

Token 1619: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.029673194512724876
    2. '               ' → logprob: -4.279673099517822
    3. ':
' → logprob: -4.904673099517822
    4. ':' → logprob: -5.904673099517822
    5. 'or' → logprob: -5.904673099517822
    6. '           ' → logprob: -6.029673099517822
    7. '	or' → logprob: -10.27967357635498
    8. '                       ' → logprob: -10.40467357635498
    9. '                   ' → logprob: -11.15467357635498
    10. '       ' → logprob: -11.90467357635498

Token 1620: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08389754593372345
    2. ' or' → logprob: -2.958897590637207
    3. '           ' → logprob: -3.583897590637207
    4. '       ' → logprob: -8.583897590637207
    5. ':
' → logprob: -8.583897590637207
    6. ':' → logprob: -8.958897590637207
    7. '                       ' → logprob: -9.458897590637207
    8. '                   ' → logprob: -9.958897590637207
    9. '   ' → logprob: -10.208897590637207
    10. '```' → logprob: -10.208897590637207

Token 1621: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03864976391196251
    2. ' continue' → logprob: -3.538649797439575
    3. '                   ' → logprob: -5.038649559020996
    4. '           ' → logprob: -6.788649559020996
    5. 'continue' → logprob: -6.913649559020996
    6. '   ' → logprob: -10.038649559020996
    7. '                       ' → logprob: -10.038649559020996
    8. '```' → logprob: -10.413649559020996
    9. '
' → logprob: -10.538649559020996
    10. ' print' → logprob: -10.663649559020996

Token 1622: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3236308991909027
    2. '("' → logprob: -1.573630928993225
    3. '(' → logprob: -2.6986308097839355
    4. '()' → logprob: -6.3236308097839355
    5. '(NO' → logprob: -10.448631286621094
    6. '(False' → logprob: -10.948631286621094
    7. '(None' → logprob: -11.073631286621094
    8. '("")' → logprob: -11.823631286621094
    9. '(No' → logprob: -11.823631286621094
    10. '("("' → logprob: -12.073631286621094

Token 1623: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.0009710140293464065
    2. 'No' → logprob: -8.125970840454102
    3. ' NO' → logprob: -8.125970840454102
    4. '"' → logprob: -8.625970840454102
    5. 'UNKNOWN' → logprob: -9.125970840454102
    6. '"No' → logprob: -9.750970840454102
    7. 'Unknown' → logprob: -11.750970840454102
    8. 'INVALID' → logprob: -12.125970840454102
    9. 'NONE' → logprob: -13.125970840454102
    10. 'NA' → logprob: -13.250970840454102

Token 1624: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.16317880153656006
    2. '")' → logprob: -2.1631789207458496
    3. ')")
' → logprob: -3.4131789207458496
    4. ')
' → logprob: -6.66317892074585
    5. ')' → logprob: -7.53817892074585
    6. '")
' → logprob: -8.163178443908691
    7. ')")' → logprob: -8.163178443908691
    8. '           ' → logprob: -8.413178443908691
    9. '               ' → logprob: -10.288178443908691
    10. '       ' → logprob: -11.163178443908691

Token 1625: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12706628441810608
    2. '           ' → logprob: -2.1270663738250732
    3. '       ' → logprob: -9.002066612243652
    4. '                   ' → logprob: -11.752066612243652
    5. '```' → logprob: -12.752066612243652
    6. '   ' → logprob: -13.127066612243652
    7. 'else' → logprob: -14.127066612243652
    8. 'continue' → logprob: -15.252066612243652
    9. ' else' → logprob: -15.377066612243652
    10. '                       ' → logprob: -15.502066612243652

Token 1626: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.055258434265851974
    2. '           ' → logprob: -2.9302585124969482
    3. 'continue' (adapté à ' continue') → logprob: -8.805258750915527
    4. 'else' → logprob: -9.555258750915527
    5. 'elif' → logprob: -9.680258750915527
    6. '       ' → logprob: -9.805258750915527
    7. '   ' → logprob: -11.055258750915527
    8. ' continue' → logprob: -11.430258750915527
    9. '                   ' → logprob: -12.930258750915527
    10. ' elif' → logprob: -13.055258750915527

Token 1627: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001600347168277949
    2. '
' → logprob: -9.000160217285156
    3. '       ' → logprob: -11.000160217285156
    4. '```' → logprob: -11.000160217285156
    5. '            
' → logprob: -13.500160217285156
    6. '          ' → logprob: -14.375160217285156
    7. '   ' → logprob: -14.750160217285156
    8. '               ' → logprob: -15.500160217285156
    9. '		' → logprob: -15.750160217285156
    10. '<|end|>' → logprob: -16.250160217285156

Token 1628: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009960653260350227
    2. '
' → logprob: -4.634960651397705
    3. '            
' → logprob: -8.884961128234863
    4. '       ' → logprob: -10.509961128234863
    5. '```' → logprob: -10.759961128234863
    6. '        
' → logprob: -11.759961128234863
    7. '    
' → logprob: -12.509961128234863
    8. ' 
' → logprob: -13.259961128234863
    9. '  
' → logprob: -14.009961128234863
    10. '               ' → logprob: -14.259961128234863

Token 1629: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0431896448135376
    2. '       ' → logprob: -3.543189525604248
    3. 'if' → logprob: -5.168189525604248
    4. ' if' → logprob: -5.543189525604248
    5. '   ' → logprob: -5.668189525604248
    6. '
' → logprob: -8.418190002441406
    7. '               ' → logprob: -11.293190002441406
    8. '```' → logprob: -11.543190002441406
    9. ' ' → logprob: -11.793190002441406
    10. '    ' → logprob: -11.918190002441406

Token 1630: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04314339905977249
    2. '           ' → logprob: -3.7931435108184814
    3. ' if' → logprob: -4.793143272399902
    4. '       ' → logprob: -4.918143272399902
    5. '   ' → logprob: -6.043143272399902
    6. 'x' → logprob: -7.168143272399902
    7. 'X' → logprob: -7.543143272399902
    8. '#' → logprob: -8.918143272399902
    9. 'dx' → logprob: -10.168143272399902
    10. 'orient' → logprob: -10.543143272399902

Token 1631: ' be' (ID: 413)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.125801682472229
    2. 'be' → logprob: -1.500801682472229
    3. ' be' → logprob: -1.625801682472229
    4. 'if' → logprob: -1.875801682472229
    5. 'color' → logprob: -3.2508015632629395
    6. '       ' → logprob: -3.7508015632629395
    7. '   ' → logprob: -4.7508015632629395
    8. 'have' → logprob: -4.7508015632629395
    9. 'print' → logprob: -5.1258015632629395
    10. '_color' → logprob: -5.6258015632629395

Token 1632: ' orth' (ID: 35656)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.38007745146751404
    2. 'ns' → logprob: -2.130077362060547
    3. ' color' → logprob: -2.505077362060547
    4. 'X' → logprob: -3.130077362060547
    5. '(ns' → logprob: -3.880077362060547
    6. '(color' → logprob: -4.255077362060547
    7. '(' → logprob: -4.380077362060547
    8. ' ns' → logprob: -4.755077362060547
    9. 'different' → logprob: -5.380077362060547
    10. ' X' → logprob: -6.005077362060547

Token 1633: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -2.2603901015827432e-05
    2. 'ogon' → logprob: -11.000022888183594
    3. '           ' → logprob: -13.125022888183594
    4. '```' → logprob: -13.750022888183594
    5. 'og' → logprob: -14.125022888183594
    6. '               ' → logprob: -14.250022888183594
    7. 'ogona' → logprob: -14.750022888183594
    8. '``' → logprob: -15.500022888183594
    9. '       ' → logprob: -15.625022888183594
    10. '   ' → logprob: -15.750022888183594

Token 1634: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006252297898754478
    2. '
' → logprob: -7.625625133514404
    3. ' if' → logprob: -9.750625610351562
    4. '       ' → logprob: -10.000625610351562
    5. 'if' → logprob: -11.375625610351562
    6. '               ' → logprob: -12.000625610351562
    7. '   ' → logprob: -12.125625610351562
    8. '            
' → logprob: -12.375625610351562
    9. '```' → logprob: -13.750625610351562
    10. '          ' → logprob: -13.875625610351562

Token 1635: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013534164056181908
    2. ' and' → logprob: -4.638534069061279
    3. 'and' → logprob: -6.638534069061279
    4. '               ' → logprob: -7.013534069061279
    5. '```' → logprob: -7.138534069061279
    6. '
' → logprob: -9.138534545898438
    7. '          ' → logprob: -9.263534545898438
    8. '       ' → logprob: -9.263534545898438
    9. ' or' → logprob: -9.388534545898438
    10. '``' → logprob: -9.513534545898438

Token 1636: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07372310012578964
    2. ' if' → logprob: -3.073723077774048
    3. 'if' (adapté à ' if') → logprob: -3.698723077774048
    4. '   ' → logprob: -10.448722839355469
    5. '       ' → logprob: -10.448722839355469
    6. '               ' → logprob: -13.073722839355469
    7. ' ' → logprob: -13.198722839355469
    8. '```' → logprob: -13.573722839355469
    9. '
' → logprob: -13.698722839355469
    10. '          ' → logprob: -14.073722839355469

Token 1637: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.023246407508850098
    2. 'color' → logprob: -3.7732462882995605
    3. ' not' → logprob: -14.773246765136719
    4. '(color' → logprob: -15.648246765136719
    5. ' abs' → logprob: -16.27324676513672
    6. 'abs' → logprob: -16.27324676513672
    7. ' space' → logprob: -17.27324676513672
    8. '    ' → logprob: -17.77324676513672
    9. 'not' → logprob: -17.89824676513672
    10. '   ' → logprob: -18.02324676513672

Token 1638: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.00030507624614983797
    2. '[' → logprob: -8.12530517578125
    3. '[Y' → logprob: -13.12530517578125
    4. '           ' → logprob: -13.37530517578125
    5. 'X' → logprob: -13.50030517578125
    6. '(X' → logprob: -13.50030517578125
    7. ' [' → logprob: -13.87530517578125
    8. '   ' → logprob: -14.37530517578125
    9. '```' → logprob: -14.87530517578125
    10. '       ' → logprob: -15.50030517578125

Token 1639: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004294453654438257
    2. ']==' → logprob: -6.504294395446777
    3. ']!=' → logprob: -7.004294395446777
    4. '[' → logprob: -7.754294395446777
    5. ' !=' → logprob: -7.754294395446777
    6. '!=' → logprob: -8.004294395446777
    7. '==' → logprob: -8.004294395446777
    8. ' ]' → logprob: -8.629294395446777
    9. '[X' → logprob: -9.629294395446777
    10. '```' → logprob: -10.129294395446777

Token 1640: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4107951521873474
    2. '==' → logprob: -1.6607952117919922
    3. ' !=' → logprob: -2.035795211791992
    4. ' ==' → logprob: -4.160795211791992
    5. '[' → logprob: -7.660795211791992
    6. '```' → logprob: -9.035795211791992
    7. '   ' → logprob: -10.410795211791992
    8. '0' → logprob: -10.785795211791992
    9. '==
' → logprob: -11.160795211791992
    10. '[]' → logprob: -11.285795211791992

Token 1641: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0007408959208987653
    2. ' color' → logprob: -7.250741004943848
    3. '   ' → logprob: -11.250741004943848
    4. '0' → logprob: -11.500741004943848
    5. '1' → logprob: -12.000741004943848
    6. ' ' → logprob: -14.375741004943848
    7. '    ' → logprob: -15.250741004943848
    8. '	color' → logprob: -15.625741004943848
    9. '=color' → logprob: -15.625741004943848
    10. '  ' → logprob: -16.00074005126953

Token 1642: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.0037025699857622385
    2. '[' → logprob: -5.628702640533447
    3. 'Y' → logprob: -9.753702163696289
    4. '[X' → logprob: -10.753702163696289
    5. '   ' → logprob: -11.628702163696289
    6. '```' → logprob: -12.628702163696289
    7. '[
' → logprob: -13.003702163696289
    8. '           ' → logprob: -13.253702163696289
    9. ' Y' → logprob: -13.628702163696289
    10. '(Y' → logprob: -14.003702163696289

Token 1643: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08789258450269699
    2. ':' → logprob: -2.837892532348633
    3. ' or' → logprob: -4.212892532348633
    4. '               ' → logprob: -5.337892532348633
    5. '):
' → logprob: -6.212892532348633
    6. '           ' → logprob: -6.212892532348633
    7. '       ' → logprob: -7.587892532348633
    8. '   ' → logprob: -8.087892532348633
    9. 'or' → logprob: -8.337892532348633
    10. '):' → logprob: -8.712892532348633

Token 1644: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000877039332408458
    2. ':
' → logprob: -7.3758769035339355
    3. ':' → logprob: -8.500877380371094
    4. '           ' → logprob: -11.125877380371094
    5. '                   ' → logprob: -11.625877380371094
    6. ' or' → logprob: -11.750877380371094
    7. '                       ' → logprob: -12.750877380371094
    8. '):
' → logprob: -12.875877380371094
    9. '       ' → logprob: -13.625877380371094
    10. '==' → logprob: -13.625877380371094

Token 1645: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02056150883436203
    2. ' print' → logprob: -4.145561695098877
    3. 'print' (adapté à ' print') → logprob: -5.770561695098877
    4. '                   ' → logprob: -7.020561695098877
    5. '   ' → logprob: -8.395561218261719
    6. '           ' → logprob: -8.395561218261719
    7. ' continue' → logprob: -10.645561218261719
    8. '                ' → logprob: -12.020561218261719
    9. '                       ' → logprob: -12.270561218261719
    10. '       ' → logprob: -12.645561218261719

Token 1646: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00036787090357393026
    2. '(' → logprob: -8.000368118286133
    3. '('' → logprob: -10.500368118286133
    4. '("("' → logprob: -12.750368118286133
    5. '(
' → logprob: -14.500368118286133
    6. '()' → logprob: -14.750368118286133
    7. ' ("' → logprob: -15.500368118286133
    8. '("")' → logprob: -15.625368118286133
    9. '"' → logprob: -15.625368118286133
    10. '("(' → logprob: -15.750368118286133

Token 1647: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -1.7432603272027336e-06
    2. '"' → logprob: -13.500001907348633
    3. ' NO' → logprob: -15.750001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '"No' → logprob: -17.250001907348633
    6. '(NO' → logprob: -19.500001907348633
    7. '       ' → logprob: -19.625001907348633
    8. '
' → logprob: -19.750001907348633
    9. 'YES' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.375001907348633

Token 1648: '")
' (ID: 1896)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46278321743011475
    2. '")
' → logprob: -1.2127832174301147
    3. '")' → logprob: -2.8377833366394043
    4. '           ' → logprob: -4.587783336639404
    5. '                   ' → logprob: -6.337783336639404
    6. ')")
' → logprob: -6.837783336639404
    7. ')
' → logprob: -7.337783336639404
    8. ')' → logprob: -7.337783336639404
    9. '       ' → logprob: -8.837782859802246
    10. '")
' → logprob: -10.587782859802246

Token 1649: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005255218595266342
    2. '           ' → logprob: -5.255255222320557
    3. '                   ' → logprob: -11.130254745483398
    4. '       ' → logprob: -13.130254745483398
    5. '```' → logprob: -13.380254745483398
    6. 'else' → logprob: -13.630254745483398
    7. 'continue' → logprob: -14.005254745483398
    8. '   ' → logprob: -14.880254745483398
    9. '                       ' → logprob: -15.005254745483398
    10. ' else' → logprob: -15.880254745483398

Token 1650: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014284566044807434
    2. '           ' → logprob: -4.264284610748291
    3. 'else' → logprob: -9.764284133911133
    4. 'continue' (adapté à ' continue') → logprob: -10.514284133911133
    5. '                   ' → logprob: -11.014284133911133
    6. '       ' → logprob: -11.764284133911133
    7. '
' → logprob: -12.514284133911133
    8. '   ' → logprob: -12.764284133911133
    9. ' continue' → logprob: -13.014284133911133
    10. ' else' → logprob: -13.264284133911133

Token 1651: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006729974993504584
    2. '
' → logprob: -7.375672817230225
    3. '            
' → logprob: -10.250673294067383
    4. '       ' → logprob: -12.375673294067383
    5. '        
' → logprob: -13.000673294067383
    6. '    
' → logprob: -13.125673294067383
    7. '  
' → logprob: -14.625673294067383
    8. '		' → logprob: -15.000673294067383
    9. '               ' → logprob: -15.125673294067383
    10. '          ' → logprob: -15.125673294067383

Token 1652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006791036110371351
    2. '
' → logprob: -5.006791114807129
    3. '            
' → logprob: -10.256791114807129
    4. '       ' → logprob: -11.006791114807129
    5. '```' → logprob: -11.381791114807129
    6. '        
' → logprob: -12.506791114807129
    7. '               ' → logprob: -12.881791114807129
    8. '    
' → logprob: -12.881791114807129
    9. '  
' → logprob: -13.756791114807129
    10. '		' → logprob: -14.381791114807129

Token 1653: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0472295805811882
    2. '
' → logprob: -3.297229528427124
    3. '       ' → logprob: -4.797229766845703
    4. '            
' → logprob: -7.547229766845703
    5. '   ' → logprob: -8.422229766845703
    6. '        
' → logprob: -9.672229766845703
    7. '    
' → logprob: -10.172229766845703
    8. 'if' → logprob: -10.922229766845703
    9. 'from' → logprob: -12.672229766845703
    10. '               ' → logprob: -12.922229766845703

Token 1654: ' check' (ID: 2371)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.028115859255194664
    2. 'visited' → logprob: -4.028115749359131
    3. '#' → logprob: -5.403115749359131
    4. '           ' → logprob: -6.403115749359131
    5. 'import' → logprob: -6.403115749359131
    6. 'start' → logprob: -6.778115749359131
    7. 'def' → logprob: -7.153115749359131
    8. '            
' → logprob: -10.278116226196289
    9. '       ' → logprob: -10.403116226196289
    10. '   ' → logprob: -10.528116226196289

Token 1655: ' reach' (ID: 7627)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12346236407756805
    2. 'if' → logprob: -2.748462438583374
    3. ' if' → logprob: -4.123462200164795
    4. 'visited' → logprob: -4.248462200164795
    5. '               ' → logprob: -5.373462200164795
    6. 'class' → logprob: -5.373462200164795
    7. '       ' → logprob: -5.373462200164795
    8. '   ' → logprob: -5.748462200164795
    9. '                   ' → logprob: -7.123462200164795
    10. '
' → logprob: -7.623462200164795

Token 1656: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.06934568285942078
    2. 'able' → logprob: -2.944345712661743
    3. '           ' → logprob: -4.319345474243164
    4. '               ' → logprob: -7.319345474243164
    5. 'class' → logprob: -8.944345474243164
    6. '       ' → logprob: -9.569345474243164
    7. 'abil' → logprob: -9.569345474243164
    8. '                   ' → logprob: -9.944345474243164
    9. '   ' → logprob: -10.194345474243164
    10. 'X' → logprob: -11.819345474243164

Token 1657: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021452659275382757
    2. '
' → logprob: -6.627145290374756
    3. 'from' → logprob: -7.627145290374756
    4. '       ' → logprob: -8.377144813537598
    5. '   ' → logprob: -9.502144813537598
    6. ' from' → logprob: -11.377144813537598
    7. 'visited' → logprob: -12.002144813537598
    8. 'import' → logprob: -12.627144813537598
    9. '```' → logprob: -13.252144813537598
    10. '            
' → logprob: -13.377144813537598

Token 1658: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00894710049033165
    2. 'class' → logprob: -5.133946895599365
    3. ' c' → logprob: -6.008946895599365
    4. 'find' → logprob: -8.258947372436523
    5. '   ' → logprob: -9.383947372436523
    6. 'classes' → logprob: -9.383947372436523
    7. 'X' → logprob: -10.133947372436523
    8. '
' → logprob: -10.508947372436523
    9. ' class' → logprob: -11.633947372436523
    10. ' ' → logprob: -11.758947372436523

Token 1659: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005371191073209047
    2. 'lass' → logprob: -5.25537109375
    3. 'c' → logprob: -9.13037109375
    4. 'X' → logprob: -10.88037109375
    5. '   ' → logprob: -13.13037109375
    6. '_class' → logprob: -13.38037109375
    7. 'x' → logprob: -13.63037109375
    8. 'l' → logprob: -13.88037109375
    9. 'lasses' → logprob: -14.25537109375
    10. '
' → logprob: -14.75537109375

Token 1660: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.03547409921884537
    2. 'X' → logprob: -4.4104743003845215
    3. '           ' → logprob: -4.4104743003845215
    4. '[X' → logprob: -5.0354743003845215
    5. ' (' → logprob: -6.6604743003845215
    6. '(c' → logprob: -7.7854743003845215
    7. '(x' → logprob: -7.9104743003845215
    8. '               ' → logprob: -7.9104743003845215
    9. '       ' → logprob: -8.160473823547363
    10. '(Y' → logprob: -8.785473823547363

Token 1661: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002031538402661681
    2. ')
' → logprob: -6.752031326293945
    3. '           ' → logprob: -8.502031326293945
    4. ',' → logprob: -8.627031326293945
    5. 'to' → logprob: -9.252031326293945
    6. '):
' → logprob: -9.252031326293945
    7. ')c' → logprob: -10.002031326293945
    8. ' to' → logprob: -10.127031326293945
    9. ')[' → logprob: -10.127031326293945
    10. '),' → logprob: -10.752031326293945

Token 1662: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12860478460788727
    2. '       ' → logprob: -2.3786048889160156
    3. ' to' → logprob: -4.503604888916016
    4. 'to' → logprob: -5.003604888916016
    5. ' =' → logprob: -5.128604888916016
    6. '   ' → logprob: -6.503604888916016
    7. ',' → logprob: -7.378604888916016
    8. ':' → logprob: -7.878604888916016
    9. '_to' → logprob: -8.003604888916016
    10. '```' → logprob: -8.253604888916016

Token 1663: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.3226136767771095e-05
    2. 'class' → logprob: -10.250042915344238
    3. ' c' → logprob: -12.125042915344238
    4. '
' → logprob: -13.125042915344238
    5. 'cc' → logprob: -16.000043869018555
    6. '   ' → logprob: -16.000043869018555
    7. ')c' → logprob: -16.625043869018555
    8. '`' → logprob: -19.000043869018555
    9. '```' → logprob: -19.000043869018555
    10. '	c' → logprob: -19.125043869018555

Token 1664: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0006320207612589002
    2. 'lass' → logprob: -7.375631809234619
    3. 'c' → logprob: -12.250632286071777
    4. '
' → logprob: -15.250632286071777
    5. 'ass' → logprob: -16.50063133239746
    6. ' class' → logprob: -16.75063133239746
    7. 'lasses' → logprob: -16.75063133239746
    8. '_class' → logprob: -17.62563133239746
    9. 'l' → logprob: -17.75063133239746
    10. 'cass' → logprob: -17.75063133239746

Token 1665: '(Y' (ID: 44341)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -5.204720582696609e-05
    2. 'X' → logprob: -10.250052452087402
    3. '(Y' → logprob: -11.750052452087402
    4. '(c' → logprob: -12.750052452087402
    5. '(
' → logprob: -13.000052452087402
    6. '(x' → logprob: -13.625052452087402
    7. '(' → logprob: -13.625052452087402
    8. ' (' → logprob: -14.750052452087402
    9. '[X' → logprob: -15.250052452087402
    10. '((' → logprob: -15.500052452087402

Token 1666: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.45396503806114197
    2. '           ' → logprob: -1.2039650678634644
    3. ')' → logprob: -3.203964948654175
    4. '):' → logprob: -4.203965187072754
    5. '               ' → logprob: -5.328965187072754
    6. ')
' → logprob: -5.828965187072754
    7. ':
' → logprob: -7.578965187072754
    8. '       ' → logprob: -8.328965187072754
    9. '):

' → logprob: -8.453965187072754
    10. '                   ' → logprob: -9.203965187072754

Token 1667: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043591417488642037
    2. '       ' → logprob: -8.875435829162598
    3. '```' → logprob: -8.875435829162598
    4. '
' → logprob: -9.250435829162598
    5. '               ' → logprob: -10.625435829162598
    6. '            
' → logprob: -10.875435829162598
    7. '   ' → logprob: -12.375435829162598
    8. '                   ' → logprob: -13.125435829162598
    9. ',' → logprob: -13.250435829162598
    10. '`' → logprob: -13.500435829162598

Token 1668: ' start' (ID: 1604)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.620407223701477
    2. '           ' → logprob: -0.870407223701477
    3. ' visited' → logprob: -3.6204071044921875
    4. '
' → logprob: -4.8704071044921875
    5. '```' → logprob: -5.1204071044921875
    6. 'from' → logprob: -7.2454071044921875
    7. '       ' → logprob: -7.7454071044921875
    8. '   ' → logprob: -7.7454071044921875
    9. '``' → logprob: -7.9954071044921875
    10. 'reachable' → logprob: -8.995407104492188

Token 1669: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35493990778923035
    2. '=' → logprob: -1.2299399375915527
    3. '_tokens' → logprob: -6.229939937591553
    4. '_class' → logprob: -7.104939937591553
    5. ',' → logprob: -7.479939937591553
    6. ')' → logprob: -7.479939937591553
    7. '_' → logprob: -7.479939937591553
    8. '_set' → logprob: -7.604939937591553
    9. '=set' → logprob: -8.354939460754395
    10. 's' → logprob: -8.354939460754395

Token 1670: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001351783750578761
    2. ' c' → logprob: -7.001351833343506
    3. 'find' → logprob: -7.751351833343506
    4. ' find' → logprob: -11.751351356506348
    5. 'class' → logprob: -13.876351356506348
    6. '   ' → logprob: -13.876351356506348
    7. 'parent' → logprob: -15.751351356506348
    8. '           ' → logprob: -16.751352310180664
    9. 'color' → logprob: -17.751352310180664
    10. '(find' → logprob: -17.876352310180664

Token 1671: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0010448360117152333
    2. 'lass' → logprob: -6.876044750213623
    3. 'c' → logprob: -11.876045227050781
    4. 'clas' → logprob: -14.001045227050781
    5. '_class' → logprob: -14.126045227050781
    6. 'find' → logprob: -14.126045227050781
    7. 'classes' → logprob: -14.376045227050781
    8. 'l' → logprob: -14.751045227050781
    9. 'lasses' → logprob: -14.876045227050781
    10. 'ass' → logprob: -15.126045227050781

Token 1672: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.011051470413804054
    2. 'X' → logprob: -4.511051654815674
    3. '[X' → logprob: -12.636051177978516
    4. '(x' → logprob: -15.761051177978516
    5. '(' → logprob: -16.261051177978516
    6. 's' → logprob: -17.136051177978516
    7. '(
' → logprob: -17.386051177978516
    8. '```' → logprob: -17.511051177978516
    9. '
' → logprob: -17.636051177978516
    10. '(Y' → logprob: -18.011051177978516

Token 1673: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.002477796748280525
    2. ')' → logprob: -6.002477645874023
    3. ')
' → logprob: -13.877477645874023
    4. '       ' → logprob: -15.127477645874023
    5. ' )
' → logprob: -15.127477645874023
    6. '   ' → logprob: -15.377477645874023
    7. ')

' → logprob: -15.627477645874023
    8. '           ' → logprob: -16.127477645874023
    9. '())
' → logprob: -16.252477645874023
    10. 'def' → logprob: -17.877477645874023

Token 1674: '           ' (ID: 352)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8623773455619812
    2. '           ' → logprob: -0.9873773455619812
    3. '   ' → logprob: -1.862377405166626
    4. '       ' → logprob: -3.987377405166626
    5. 'end' → logprob: -4.112377166748047
    6. 'queue' → logprob: -4.862377166748047
    7. 'from' → logprob: -5.362377166748047
    8. 'import' → logprob: -7.112377166748047
    9. 'target' → logprob: -7.612377166748047
    10. ' visited' → logprob: -7.987377166748047

Token 1675: ' goal' (ID: 8583)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5276730060577393
    2. 'from' → logprob: -1.2776730060577393
    3. '           ' → logprob: -3.0276730060577393
    4. 'end' → logprob: -3.2776730060577393
    5. 'queue' → logprob: -3.9026730060577393
    6. 'target' → logprob: -4.27767276763916
    7. '   ' → logprob: -5.40267276763916
    8. 'goal' (adapté à ' goal') → logprob: -6.02767276763916
    9. 'import' → logprob: -6.27767276763916
    10. '       ' → logprob: -6.65267276763916

Token 1676: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021260380744934
    2. ' =' → logprob: -2.350212574005127
    3. '=
' → logprob: -12.725213050842285
    4. ')' → logprob: -14.600213050842285
    5. '=start' → logprob: -14.600213050842285
    6. '=None' → logprob: -15.225213050842285
    7. '   ' → logprob: -15.225213050842285
    8. '           ' → logprob: -15.350213050842285
    9. '==' → logprob: -15.475213050842285
    10. '=end' → logprob: -15.600213050842285

Token 1677: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.676292231422849e-05
    2. ' c' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.000017166137695
    4. '(c' → logprob: -20.000017166137695
    5. ')c' → logprob: -20.250017166137695
    6. '	c' → logprob: -20.625017166137695
    7. 'class' → logprob: -20.750017166137695
    8. '
' → logprob: -20.875017166137695
    9. 'cc' → logprob: -22.000017166137695
    10. '           ' → logprob: -22.000017166137695

Token 1678: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.014165041036903858
    2. 'lass' → logprob: -4.264164924621582
    3. 'ass' → logprob: -14.764164924621582
    4. 'c' → logprob: -14.764164924621582
    5. 'l' → logprob: -14.889164924621582
    6. 'clas' → logprob: -16.2641658782959
    7. 'list' → logprob: -16.7641658782959
    8. ' lass' → logprob: -17.0141658782959
    9. 'cl' → logprob: -17.1391658782959
    10. 'lasses' → logprob: -17.6391658782959

Token 1679: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.00014060820103622973
    2. 'Y' → logprob: -8.875140190124512
    3. '(y' → logprob: -14.625140190124512
    4. '[Y' → logprob: -15.625140190124512
    5. '(
' → logprob: -17.375141143798828
    6. '(' → logprob: -17.875141143798828
    7. '(goal' → logprob: -18.000141143798828
    8. 'class' → logprob: -18.500141143798828
    9. '(Q' → logprob: -19.125141143798828
    10. '   ' → logprob: -19.750141143798828

Token 1680: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07974937558174133
    2. ')' → logprob: -2.579749345779419
    3. '           ' → logprob: -7.079749584197998
    4. '):
' → logprob: -11.82974910736084
    5. '       ' → logprob: -12.82974910736084
    6. '               ' → logprob: -12.95474910736084
    7. ')

' → logprob: -13.20474910736084
    8. '   ' → logprob: -13.57974910736084
    9. '                   ' → logprob: -14.57974910736084
    10. ')
' → logprob: -14.95474910736084

Token 1681: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003401213325560093
    2. '   ' → logprob: -5.878401279449463
    3. '
' → logprob: -8.003400802612305
    4. '       ' → logprob: -8.628400802612305
    5. 'visited' → logprob: -9.753400802612305
    6. 'queue' → logprob: -11.128400802612305
    7. '```' → logprob: -12.878400802612305
    8. ' queue' → logprob: -13.503400802612305
    9. '            
' → logprob: -13.503400802612305
    10. 'from' → logprob: -14.003400802612305

Token 1682: ' visited' (ID: 18416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21591806411743164
    2. 'visited' (adapté à ' visited') → logprob: -1.9659180641174316
    3. '
' → logprob: -3.8409180641174316
    4. '   ' → logprob: -4.090918064117432
    5. 'from' → logprob: -4.465918064117432
    6. 'queue' → logprob: -6.465918064117432
    7. ' visited' → logprob: -7.340918064117432
    8. '       ' → logprob: -7.590918064117432
    9. 'import' → logprob: -7.965918064117432
    10. '```' → logprob: -8.090917587280273

Token 1683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00408647395670414
    2. ' =' → logprob: -5.629086494445801
    3. '=set' → logprob: -7.629086494445801
    4. 'set' → logprob: -16.004085540771484
    5. '```' → logprob: -17.629085540771484
    6. ')' → logprob: -17.754085540771484
    7. '.add' → logprob: -18.504085540771484
    8. '＝' → logprob: -19.254085540771484
    9. '	' → logprob: -19.254085540771484
    10. ' ' → logprob: -19.379085540771484

Token 1684: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.011075885966420174
    2. '{' → logprob: -4.511075973510742
    3. ' set' → logprob: -10.511075973510742
    4. '   ' → logprob: -14.761075973510742
    5. ' {' → logprob: -15.261075973510742
    6. '=set' → logprob: -16.136075973510742
    7. '           ' → logprob: -16.761075973510742
    8. '	set' → logprob: -17.136075973510742
    9. '       ' → logprob: -18.011075973510742
    10. '(set' → logprob: -18.261075973510742

Token 1685: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.05665032938122749
    2. '           ' → logprob: -3.181650400161743
    3. '()' → logprob: -4.556650161743164
    4. 'visited' → logprob: -6.806650161743164
    5. ' =' → logprob: -7.556650161743164
    6. '=' → logprob: -8.181650161743164
    7. '       ' → logprob: -8.306650161743164
    8. '(queue' → logprob: -8.556650161743164
    9. '{' → logprob: -8.931650161743164
    10. '   ' → logprob: -9.181650161743164

Token 1686: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10245013982057571
    2. '
' → logprob: -2.602450132369995
    3. '   ' → logprob: -4.852450370788574
    4. ' queue' → logprob: -5.227450370788574
    5. 'queue' → logprob: -5.727450370788574
    6. 'stack' → logprob: -6.477450370788574
    7. ' for' → logprob: -6.727450370788574
    8. '       ' → logprob: -6.727450370788574
    9. ' stack' → logprob: -7.227450370788574
    10. '```' → logprob: -7.352450370788574

Token 1687: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.01628209836781025
    2. 'queue' → logprob: -4.516282081604004
    3. 'from' → logprob: -5.516282081604004
    4. '           ' → logprob: -7.266282081604004
    5. 'def' → logprob: -8.266282081604004
    6. '   ' → logprob: -9.266282081604004
    7. 'import' → logprob: -9.891282081604004
    8. ' stack' → logprob: -10.266282081604004
    9. 'to' → logprob: -10.641282081604004
    10. '
' → logprob: -10.641282081604004

Token 1688: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027506588026881218
    2. ' =' → logprob: -3.9025065898895264
    3. '.append' → logprob: -5.027506351470947
    4. '=[]' → logprob: -8.152506828308105
    5. '=[]
' → logprob: -10.027506828308105
    6. '           ' → logprob: -11.152506828308105
    7. '=[' → logprob: -11.402506828308105
    8. '.pop' → logprob: -11.652506828308105
    9. '=
' → logprob: -12.652506828308105
    10. '(stack' → logprob: -13.027506828308105

Token 1689: ' [' (ID: 723)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.17550592124462128
    2. '[c' → logprob: -1.9255058765411377
    3. '[' → logprob: -4.675506114959717
    4. '[class' → logprob: -5.175506114959717
    5. '[top' → logprob: -9.925505638122559
    6. ' [' → logprob: -10.050505638122559
    7. '[color' → logprob: -10.800505638122559
    8. '[list' → logprob: -11.050505638122559
    9. '[end' → logprob: -11.800505638122559
    10. '[s' → logprob: -12.050505638122559

Token 1690: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.9361264946837764e-07
    2. ' start' → logprob: -16.75
    3. '           ' → logprob: -18.25
    4. '(start' → logprob: -18.875
    5. '[start' → logprob: -19.0
    6. '   ' → logprob: -19.5
    7. '               ' → logprob: -21.125
    8. '       ' → logprob: -21.25
    9. '         ' → logprob: -22.5
    10. 'c' → logprob: -23.375

Token 1691: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8675732612609863
    2. ']
' → logprob: -0.8675732612609863
    3. ']' → logprob: -1.9925732612609863
    4. '.pop' → logprob: -3.9925732612609863
    5. '       ' → logprob: -6.742573261260986
    6. '
' → logprob: -6.742573261260986
    7. '   ' → logprob: -7.242573261260986
    8. ')
' → logprob: -7.492573261260986
    9. '               ' → logprob: -7.742573261260986
    10. ')' → logprob: -8.242572784423828

Token 1692: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019017716869711876
    2. 'while' → logprob: -4.269017696380615
    3. '```' → logprob: -6.394017696380615
    4. '   ' → logprob: -6.769017696380615
    5. ' while' → logprob: -6.894017696380615
    6. '       ' → logprob: -7.394017696380615
    7. '
' → logprob: -8.394018173217773
    8. '	while' → logprob: -9.519018173217773
    9. '               ' → logprob: -10.144018173217773
    10. '	       ' → logprob: -10.644018173217773

Token 1693: ' found' (ID: 2491)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00797224510461092
    2. ' while' → logprob: -5.007972240447998
    3. '           ' → logprob: -6.757972240447998
    4. '   ' → logprob: -9.882972717285156
    5. '```' → logprob: -10.882972717285156
    6. '               ' → logprob: -11.757972717285156
    7. '	while' → logprob: -11.757972717285156
    8. '
' → logprob: -12.257972717285156
    9. '       ' → logprob: -13.257972717285156
    10. 'While' → logprob: -13.257972717285156

Token 1694: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08144855499267578
    2. ' =' → logprob: -2.581448554992676
    3. '=True' → logprob: -6.206448554992676
    4. '=False' → logprob: -7.706448554992676
    5. '           ' → logprob: -9.956448554992676
    6. '   ' → logprob: -11.581448554992676
    7. '       ' → logprob: -11.706448554992676
    8. '               ' → logprob: -11.831448554992676
    9. '                   ' → logprob: -12.581448554992676
    10. '          ' → logprob: -13.206448554992676

Token 1695: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00015860427811276168
    2. ' False' → logprob: -8.750158309936523
    3. 'True' → logprob: -16.250158309936523
    4. '   ' → logprob: -19.500158309936523
    5. '(False' → logprob: -20.125158309936523
    6. '=False' → logprob: -22.000158309936523
    7. 'false' → logprob: -23.125158309936523
    8. '0' → logprob: -24.125158309936523
    9. '```' → logprob: -25.125158309936523
    10. ' True' → logprob: -25.375158309936523

Token 1696: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005197705700993538
    2. 'while' → logprob: -5.630197525024414
    3. '
' → logprob: -6.880197525024414
    4. ' while' → logprob: -7.880197525024414
    5. '```' → logprob: -9.255197525024414
    6. '		' → logprob: -10.130197525024414
    7. '   ' → logprob: -10.630197525024414
    8. '       ' → logprob: -11.505197525024414
    9. '               ' → logprob: -12.130197525024414
    10. '	       ' → logprob: -12.255197525024414

Token 1697: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035274302354082465
    2. '       ' → logprob: -9.12535285949707
    3. 'while' → logprob: -9.62535285949707
    4. '
' → logprob: -9.87535285949707
    5. '   ' → logprob: -10.00035285949707
    6. ' while' → logprob: -10.12535285949707
    7. '		' → logprob: -10.87535285949707
    8. '               ' → logprob: -11.62535285949707
    9. '```' → logprob: -12.12535285949707
    10. '	       ' → logprob: -12.62535285949707

Token 1698: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.15696099400520325
    2. '           ' → logprob: -2.406960964202881
    3. ' while' → logprob: -2.906960964202881
    4. '   ' → logprob: -7.906960964202881
    5. '       ' → logprob: -9.156961441040039
    6. '	while' → logprob: -10.031961441040039
    7. '		' → logprob: -12.531961441040039
    8. '
' → logprob: -12.531961441040039
    9. '               ' → logprob: -12.656961441040039
    10. 'for' → logprob: -13.281961441040039

Token 1699: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0040801819413900375
    2. ' stack' → logprob: -5.504080295562744
    3. '(stack' → logprob: -13.754079818725586
    4. 'len' → logprob: -14.504079818725586
    5. '	stack' → logprob: -16.129079818725586
    6. '   ' → logprob: -16.629079818725586
    7. '
' → logprob: -18.629079818725586
    8. ' len' → logprob: -19.629079818725586
    9. '           ' → logprob: -19.629079818725586
    10. ' ' → logprob: -20.004079818725586

Token 1700: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12986959517002106
    2. ':' → logprob: -2.1298696994781494
    3. '.pop' → logprob: -6.25486946105957
    4. '               ' → logprob: -7.12986946105957
    5. '           ' → logprob: -9.87986946105957
    6. '):
' → logprob: -10.00486946105957
    7. 'pop' → logprob: -10.25486946105957
    8. ' and' → logprob: -10.75486946105957
    9. '```' → logprob: -11.00486946105957
    10. '=' → logprob: -11.25486946105957

Token 1701: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.033002324402332306
    2. ' current' → logprob: -4.6580023765563965
    3. ' pop' → logprob: -4.7830023765563965
    4. ' node' → logprob: -4.9080023765563965
    5. 'pop' → logprob: -6.1580023765563965
    6. '   ' → logprob: -7.2830023765563965
    7. '           ' → logprob: -7.4080023765563965
    8. ' popped' → logprob: -7.5330023765563965
    9. ' v' → logprob: -7.6580023765563965
    10. ' s' → logprob: -7.7830023765563965

Token 1702: ' curr' (ID: 10495)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.0535080432891846
    2. 'curr' (adapté à ' curr') → logprob: -1.8035080432891846
    3. ' u' → logprob: -2.0535080432891846
    4. 'u' → logprob: -2.1785080432891846
    5. ' node' → logprob: -2.3035080432891846
    6. ' curr' → logprob: -2.5535080432891846
    7. 'cur' → logprob: -3.4285080432891846
    8. 'current' → logprob: -3.8035080432891846
    9. ' current' → logprob: -4.8035078048706055
    10. 'v' → logprob: -6.0535078048706055

Token 1703: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740789234638214
    2. '=' → logprob: -0.974078893661499
    3. '.pop' → logprob: -14.474079132080078
    4. '                   ' → logprob: -15.224079132080078
    5. '=
' → logprob: -15.849079132080078
    6. 'stack' → logprob: -15.849079132080078
    7. '(stack' → logprob: -15.974079132080078
    8. '=current' → logprob: -16.099079132080078
    9. '   ' → logprob: -16.349079132080078
    10. ')' → logprob: -16.349079132080078

Token 1704: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0007099286303855479
    2. ' stack' → logprob: -7.2507100105285645
    3. '	stack' → logprob: -20.000709533691406
    4. '(stack' → logprob: -20.375709533691406
    5. 'pop' → logprob: -22.125709533691406
    6. '   ' → logprob: -22.375709533691406
    7. '.stack' → logprob: -23.875709533691406
    8. 'stock' → logprob: -24.000709533691406
    9. '_stack' → logprob: -24.250709533691406
    10. ' ' → logprob: -24.750709533691406

Token 1705: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0005626845522783697
    2. 'pop' → logprob: -7.50056266784668
    3. '[-' → logprob: -12.37556266784668
    4. '                   ' → logprob: -12.50056266784668
    5. 'Pop' → logprob: -14.62556266784668
    6. '               ' → logprob: -14.62556266784668
    7. '_pop' → logprob: -14.87556266784668
    8. '=' → logprob: -15.87556266784668
    9. ' pop' → logprob: -16.00056266784668
    10. '.' → logprob: -16.12556266784668

Token 1706: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008620720356702805
    2. '()
' → logprob: -4.758620738983154
    3. '())' → logprob: -13.383620262145996
    4. '()\' → logprob: -13.758620262145996
    5. '()]' → logprob: -14.258620262145996
    6. '():
' → logprob: -14.633620262145996
    7. '()

' → logprob: -14.758620262145996
    8. '(),' → logprob: -15.008620262145996
    9. ' ()' → logprob: -15.133620262145996
    10. '()
' → logprob: -15.508620262145996

Token 1707: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003930192324332893
    2. '           ' → logprob: -8.12539291381836
    3. '       ' → logprob: -10.50039291381836
    4. '                   ' → logprob: -10.75039291381836
    5. 'if' → logprob: -10.87539291381836
    6. ' if' → logprob: -11.00039291381836
    7. '```' → logprob: -12.12539291381836
    8. '   ' → logprob: -12.37539291381836
    9. '              ' → logprob: -14.25039291381836
    10. '	           ' → logprob: -14.75039291381836

Token 1708: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.031369078904390335
    2. ' if' → logprob: -3.5313689708709717
    3. '               ' → logprob: -6.781369209289551
    4. '                   ' → logprob: -7.656369209289551
    5. '           ' → logprob: -12.65636920928955
    6. '                ' → logprob: -12.78136920928955
    7. 'for' → logprob: -13.28136920928955
    8. 'If' → logprob: -14.90636920928955
    9. '                       ' → logprob: -15.40636920928955
    10. 'visited' → logprob: -15.40636920928955

Token 1709: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -7.493430894101039e-05
    2. ' curr' → logprob: -9.500075340270996
    3. '(curr' → logprob: -18.75007438659668
    4. '	curr' → logprob: -19.62507438659668
    5. '[curr' → logprob: -20.12507438659668
    6. 'cur' → logprob: -21.12507438659668
    7. '.curr' → logprob: -21.37507438659668
    8. '_curr' → logprob: -21.75007438659668
    9. '                   ' → logprob: -22.00007438659668
    10. '               ' → logprob: -22.62507438659668

Token 1710: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38687947392463684
    2. '==' → logprob: -1.1368794441223145
    3. '==
' → logprob: -12.136879920959473
    4. ')==' → logprob: -13.636879920959473
    5. ']==' → logprob: -13.886879920959473
    6. '()==' → logprob: -15.136879920959473
    7. '==(' → logprob: -15.511879920959473
    8. ' ==
' → logprob: -15.636879920959473
    9. '===' → logprob: -16.386878967285156
    10. '```' → logprob: -16.511878967285156

Token 1711: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -1.676292231422849e-05
    2. ' goal' → logprob: -11.000017166137695
    3. '(goal' → logprob: -19.375017166137695
    4. '
' → logprob: -21.875017166137695
    5. '.goal' → logprob: -22.000017166137695
    6. 'Goal' → logprob: -23.125017166137695
    7. '_goal' → logprob: -23.500017166137695
    8. '           ' → logprob: -23.750017166137695
    9. '   ' → logprob: -23.875017166137695
    10. 'go' → logprob: -23.875017166137695

Token 1712: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5316932201385498
    2. '                   ' → logprob: -0.9066932201385498
    3. ':' → logprob: -4.906693458557129
    4. '                       ' → logprob: -7.281693458557129
    5. '               ' → logprob: -8.031693458557129
    6. ':return' → logprob: -10.031693458557129
    7. '                  ' → logprob: -10.781693458557129
    8. '):
' → logprob: -11.281693458557129
    9. '                           ' → logprob: -11.406693458557129
    10. '           ' → logprob: -11.531693458557129

Token 1713: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004394748248159885
    2. ':
' → logprob: -5.50439453125
    3. '                       ' → logprob: -8.25439453125
    4. ':' → logprob: -10.37939453125
    5. '               ' → logprob: -11.25439453125
    6. '           ' → logprob: -12.50439453125
    7. '                  ' → logprob: -12.75439453125
    8. '       ' → logprob: -13.25439453125
    9. '   ' → logprob: -14.37939453125
    10. '                           ' → logprob: -15.00439453125

Token 1714: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.002396463416516781
    2. ' found' → logprob: -6.502396583557129
    3. '                   ' → logprob: -8.002396583557129
    4. 'break' → logprob: -8.252396583557129
    5. '                       ' → logprob: -8.252396583557129
    6. 'print' → logprob: -10.877396583557129
    7. '               ' → logprob: -12.252396583557129
    8. '       ' → logprob: -12.752396583557129
    9. '(found' → logprob: -12.752396583557129
    10. 'Found' → logprob: -12.877396583557129

Token 1715: ' =' (ID: 314)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.4904235601425171
    2. '=' → logprob: -1.240423560142517
    3. ' =' → logprob: -3.4904236793518066
    4. '                   ' → logprob: -3.7404236793518066
    5. ':
' → logprob: -4.240423679351807
    6. '
' → logprob: -4.615423679351807
    7. 'True' → logprob: -4.740423679351807
    8. '                       ' → logprob: -5.240423679351807
    9. ':' → logprob: -6.115423679351807
    10. '=
' → logprob: -6.490423679351807

Token 1716: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -8.895480277715251e-06
    2. ' True' → logprob: -11.750008583068848
    3. '                   ' → logprob: -14.000008583068848
    4. '               ' → logprob: -17.000009536743164
    5. '                       ' → logprob: -17.750009536743164
    6. 'true' → logprob: -18.500009536743164
    7. '(True' → logprob: -18.750009536743164
    8. '=True' → logprob: -19.250009536743164
    9. '           ' → logprob: -19.250009536743164
    10. '                           ' → logprob: -20.000009536743164

Token 1717: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006748647429049015
    2. '                       ' → logprob: -5.006748676300049
    3. '				' → logprob: -11.50674819946289
    4. '       ' → logprob: -12.00674819946289
    5. '               ' → logprob: -12.00674819946289
    6. '           ' → logprob: -12.75674819946289
    7. 'break' → logprob: -12.88174819946289
    8. '                    ' → logprob: -13.88174819946289
    9. '					' → logprob: -14.00674819946289
    10. ':
' → logprob: -14.38174819946289

Token 1718: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012639251071959734
    2. '                       ' → logprob: -6.7512640953063965
    3. '       ' → logprob: -9.501263618469238
    4. '               ' → logprob: -11.876263618469238
    5. '           ' → logprob: -12.001263618469238
    6. '				' → logprob: -12.376263618469238
    7. '
' → logprob: -14.876263618469238
    8. '                    ' → logprob: -15.251263618469238
    9. '   ' → logprob: -15.501263618469238
    10. '                           ' → logprob: -15.876263618469238

Token 1719: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011759803630411625
    2. 'break' (adapté à ' break') → logprob: -4.5117597579956055
    3. '                       ' → logprob: -7.3867597579956055
    4. '				' → logprob: -10.136759757995605
    5. '               ' → logprob: -10.261759757995605
    6. ' break' → logprob: -12.011759757995605
    7. '           ' → logprob: -12.886759757995605
    8. '	break' → logprob: -13.011759757995605
    9. '	               ' → logprob: -13.511759757995605
    10. '
' → logprob: -13.761759757995605

Token 1720: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021045419271104038
    2. '           ' → logprob: -8.875210762023926
    3. '                   ' → logprob: -10.250210762023926
    4. '       ' → logprob: -11.125210762023926
    5. '
' → logprob: -11.625210762023926
    6. '   ' → logprob: -11.875210762023926
    7. 'for' → logprob: -13.375210762023926
    8. '                
' → logprob: -13.750210762023926
    9. '```' → logprob: -13.875210762023926
    10. ' for' → logprob: -15.125210762023926

Token 1721: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003821716527454555
    2. '           ' → logprob: -8.250382423400879
    3. '       ' → logprob: -9.750382423400879
    4. '   ' → logprob: -10.250382423400879
    5. '```' → logprob: -11.500382423400879
    6. '                   ' → logprob: -11.625382423400879
    7. '
' → logprob: -12.500382423400879
    8. '                
' → logprob: -13.375382423400879
    9. 'for' → logprob: -13.875382423400879
    10. ' for' → logprob: -14.375382423400879

Token 1722: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.583173394203186
    2. '               ' → logprob: -0.833173394203186
    3. '           ' → logprob: -5.5831732749938965
    4. ' for' → logprob: -5.8331732749938965
    5. 'if' (adapté à ' if') → logprob: -8.333173751831055
    6. '   ' → logprob: -9.208173751831055
    7. '                   ' → logprob: -9.458173751831055
    8. '       ' → logprob: -9.833173751831055
    9. '```' → logprob: -10.708173751831055
    10. '
' → logprob: -11.458173751831055

Token 1723: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.00016074994346126914
    2. ' curr' → logprob: -8.750161170959473
    3. '(curr' → logprob: -13.375161170959473
    4. '	curr' → logprob: -15.500161170959473
    5. 'not' → logprob: -16.000160217285156
    6. '   ' → logprob: -16.000160217285156
    7. '[curr' → logprob: -16.500160217285156
    8. ' ' → logprob: -16.625160217285156
    9. '
' → logprob: -16.875160217285156
    10. '.curr' → logprob: -17.875160217285156

Token 1724: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004644553642719984
    2. 'not' → logprob: -5.629644393920898
    3. ' in' → logprob: -6.879644393920898
    4. 'in' → logprob: -11.629644393920898
    5. ' !=' → logprob: -12.754644393920898
    6. '_not' → logprob: -13.254644393920898
    7. '	not' → logprob: -14.504644393920898
    8. ')' → logprob: -15.004644393920898
    9. '               ' → logprob: -15.129644393920898
    10. '!=' → logprob: -15.379644393920898

Token 1725: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -7.553032628493384e-05
    2. 'class' → logprob: -9.500075340270996
    3. ' visited' → logprob: -14.500075340270996
    4. 'seen' → logprob: -17.250076293945312
    5. 'graph' → logprob: -18.500076293945312
    6. 'stack' → logprob: -18.750076293945312
    7. 'Visited' → logprob: -20.500076293945312
    8. ' class' → logprob: -20.875076293945312
    9. '   ' → logprob: -21.375076293945312
    10. 'vis' → logprob: -21.500076293945312

Token 1726: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20712393522262573
    2. '                   ' → logprob: -2.0821239948272705
    3. ':' → logprob: -2.8321239948272705
    4. '               ' → logprob: -6.457123756408691
    5. '                       ' → logprob: -7.082123756408691
    6. 'continue' → logprob: -7.832123756408691
    7. '           ' → logprob: -7.957123756408691
    8. '   ' → logprob: -8.957123756408691
    9. '       ' → logprob: -9.832123756408691
    10. ' or' → logprob: -9.957123756408691

Token 1727: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009313485352322459
    2. 'continue' → logprob: -7.125931262969971
    3. '   ' → logprob: -9.875931739807129
    4. ' continue' → logprob: -10.750931739807129
    5. '               ' → logprob: -10.750931739807129
    6. '           ' → logprob: -11.750931739807129
    7. '
' → logprob: -11.750931739807129
    8. ':
' → logprob: -11.875931739807129
    9. '                       ' → logprob: -12.375931739807129
    10. ':' → logprob: -13.625931739807129

Token 1728: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.08408880978822708
    2. '                   ' → logprob: -2.8340888023376465
    3. '   ' → logprob: -4.0840888023376465
    4. '           ' → logprob: -5.8340888023376465
    5. '       ' → logprob: -6.8340888023376465
    6. '                       ' → logprob: -7.4590888023376465
    7. '               ' → logprob: -7.8340888023376465
    8. ' continue' → logprob: -10.084089279174805
    9. '                           ' → logprob: -11.584089279174805
    10. '	continue' → logprob: -12.459089279174805

Token 1729: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003967071825172752
    2. '           ' → logprob: -8.000396728515625
    3. '                   ' → logprob: -10.625396728515625
    4. '
' → logprob: -10.750396728515625
    5. '```' → logprob: -11.625396728515625
    6. 'continue' → logprob: -12.750396728515625
    7. '   ' → logprob: -13.500396728515625
    8. '       ' → logprob: -13.875396728515625
    9. '                
' → logprob: -14.750396728515625
    10. ' continue' → logprob: -15.000396728515625

Token 1730: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003781224077101797
    2. '```' → logprob: -8.750377655029297
    3. '           ' → logprob: -9.125377655029297
    4. '
' → logprob: -9.750377655029297
    5. '                   ' → logprob: -10.750377655029297
    6. 'continue' → logprob: -11.125377655029297
    7. '       ' → logprob: -11.750377655029297
    8. '   ' → logprob: -12.125377655029297
    9. '                
' → logprob: -14.375377655029297
    10. ' continue' → logprob: -14.750377655029297

Token 1731: ' visited' (ID: 18416)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4140731990337372
    2. 'visited' (adapté à ' visited') → logprob: -1.1640732288360596
    3. '           ' → logprob: -3.6640732288360596
    4. '   ' → logprob: -7.2890729904174805
    5. '                   ' → logprob: -8.03907299041748
    6. '```' → logprob: -9.41407299041748
    7. '       ' → logprob: -9.78907299041748
    8. ' visited' → logprob: -9.78907299041748
    9. '
' → logprob: -13.16407299041748
    10. ' ' → logprob: -13.28907299041748

Token 1732: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0013601169921457767
    2. '.' → logprob: -6.626359939575195
    3. '.update' → logprob: -10.876359939575195
    4. 'add' → logprob: -11.626359939575195
    5. '           ' → logprob: -13.251359939575195
    6. ' .' → logprob: -13.751359939575195
    7. '|' → logprob: -13.751359939575195
    8. '   ' → logprob: -14.126359939575195
    9. '       ' → logprob: -15.126359939575195
    10. '                   ' → logprob: -15.376359939575195

Token 1733: '(curr' (ID: 49739)
  Prédit: '(curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(curr' → logprob: -0.20171114802360535
    2. 'curr' → logprob: -1.7017111778259277
    3. '(
' → logprob: -9.32671070098877
    4. '(stack' → logprob: -10.07671070098877
    5. 'graph' → logprob: -10.07671070098877
    6. ' curr' → logprob: -10.32671070098877
    7. '(graph' → logprob: -10.32671070098877
    8. '[curr' → logprob: -10.95171070098877
    9. 'stack' → logprob: -11.07671070098877
    10. '
' → logprob: -12.20171070098877

Token 1734: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003166353271808475
    2. '
' → logprob: -9.000316619873047
    3. ')
' → logprob: -9.125316619873047
    4. 'for' → logprob: -10.250316619873047
    5. ')' → logprob: -11.000316619873047
    6. '                   ' → logprob: -11.250316619873047
    7. '           ' → logprob: -12.125316619873047
    8. ',' → logprob: -12.375316619873047
    9. '                
' → logprob: -12.750316619873047
    10. ' for' → logprob: -13.250316619873047

Token 1735: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21243755519390106
    2. '           ' → logprob: -1.9624375104904175
    3. '                   ' → logprob: -3.337437629699707
    4. '   ' → logprob: -4.962437629699707
    5. 'stack' → logprob: -5.712437629699707
    6. 'for' → logprob: -5.962437629699707
    7. '       ' → logprob: -6.337437629699707
    8. '```' → logprob: -7.587437629699707
    9. ' for' → logprob: -9.337437629699707
    10. '                       ' → logprob: -10.837437629699707

Token 1736: ' for' (ID: 395)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07889342308044434
    2. 'for' (adapté à ' for') → logprob: -2.5788934230804443
    3. ' stack' → logprob: -13.203893661499023
    4. '               ' → logprob: -14.203893661499023
    5. 'class' → logprob: -14.953893661499023
    6. '           ' → logprob: -14.953893661499023
    7. '   ' → logprob: -16.078893661499023
    8. 'Stack' → logprob: -16.203893661499023
    9. ' for' → logprob: -16.328893661499023
    10. '                   ' → logprob: -16.328893661499023

Token 1737: ' nex' (ID: 92763)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -1.2567484378814697
    2. 'nbr' → logprob: -1.2567484378814697
    3. 'n' → logprob: -1.5067484378814697
    4. 'nei' → logprob: -1.7567484378814697
    5. 'ne' → logprob: -3.5067484378814697
    6. 'nx' → logprob: -5.256748199462891
    7. ' neigh' → logprob: -7.506748199462891
    8. 'next' → logprob: -8.25674819946289
    9. ' nxt' → logprob: -8.50674819946289
    10. 'nb' → logprob: -8.75674819946289

Token 1738: ' in' (ID: 306)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.7697225252486533e-06
    2. 'h' → logprob: -13.000003814697266
    3. 'xt' → logprob: -14.250003814697266
    4. 'th' → logprob: -14.500003814697266
    5. 'x' → logprob: -16.875003814697266
    6. 'ts' → logprob: -17.125003814697266
    7. 'n' → logprob: -17.125003814697266
    8. 'e' → logprob: -17.125003814697266
    9. ' in' → logprob: -17.625003814697266
    10. 'т' → logprob: -17.625003814697266

Token 1739: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -9.996708104154095e-05
    2. ' class' → logprob: -9.250100135803223
    3. '[class' → logprob: -12.750100135803223
    4. 'graph' → logprob: -14.125100135803223
    5. '(class' → logprob: -16.250099182128906
    6. '<class' → logprob: -18.000099182128906
    7. 'curr' → logprob: -19.500099182128906
    8. '   ' → logprob: -19.750099182128906
    9. '[' → logprob: -20.875099182128906
    10. 'range' → logprob: -21.125099182128906

Token 1740: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -3.452426608419046e-05
    2. 'raph' → logprob: -11.00003433227539
    3. '[n' → logprob: -12.25003433227539
    4. 'n' → logprob: -12.50003433227539
    5. 'graph' → logprob: -12.50003433227539
    6. '_GRAPH' → logprob: -13.37503433227539
    7. 't' → logprob: -13.87503433227539
    8. 'Graph' → logprob: -13.87503433227539
    9. '[' → logprob: -14.50003433227539
    10. 's' → logprob: -15.12503433227539

Token 1741: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -5.796184723294573e-06
    2. 'curr' → logprob: -12.125005722045898
    3. '[c' → logprob: -16.6250057220459
    4. '[cur' → logprob: -16.6250057220459
    5. '(curr' → logprob: -17.0000057220459
    6. '.get' → logprob: -17.2500057220459
    7. '[n' → logprob: -17.8750057220459
    8. '	curr' → logprob: -18.5000057220459
    9. '[' → logprob: -18.7500057220459
    10. '   ' → logprob: -18.8750057220459

Token 1742: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17436833679676056
    2. ']:
' → logprob: -2.049368381500244
    3. ':' → logprob: -3.799368381500244
    4. '):
' → logprob: -5.299368381500244
    5. ']:' → logprob: -6.049368381500244
    6. '           ' → logprob: -7.424368381500244
    7. ']' → logprob: -8.174367904663086
    8. '                   ' → logprob: -8.799367904663086
    9. '       ' → logprob: -9.174367904663086
    10. '               ' → logprob: -9.424367904663086

Token 1743: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019793107639998198
    2. ' stack' → logprob: -6.626979351043701
    3. 'stack' → logprob: -7.376979351043701
    4. '                       ' → logprob: -11.001978874206543
    5. '(stack' → logprob: -12.001978874206543
    6. '   ' → logprob: -13.626978874206543
    7. '               ' → logprob: -14.126978874206543
    8. '```' → logprob: -14.376978874206543
    9. '	stack' → logprob: -14.501978874206543
    10. '                           ' → logprob: -15.001978874206543

Token 1744: ' if' (ID: 538)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0071765948086977005
    2. ' stack' → logprob: -5.007176399230957
    3. '                   ' → logprob: -7.757176399230957
    4. '   ' → logprob: -10.757176399230957
    5. 'if' (adapté à ' if') → logprob: -12.007176399230957
    6. '	stack' → logprob: -13.007176399230957
    7. '               ' → logprob: -13.382176399230957
    8. '                       ' → logprob: -13.757176399230957
    9. ' if' → logprob: -14.382176399230957
    10. '       ' → logprob: -15.132176399230957

Token 1745: ' nex' (ID: 92763)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000553151941858232
    2. ' nex' → logprob: -7.500553131103516
    3. '(n' → logprob: -17.625553131103516
    4. 'not' → logprob: -17.875553131103516
    5. '   ' → logprob: -18.125553131103516
    6. 'n't' → logprob: -18.375553131103516
    7. '	n' → logprob: -18.375553131103516
    8. ' n' → logprob: -18.875553131103516
    9. '[n' → logprob: -18.875553131103516
    10. ' not' → logprob: -19.000553131103516

Token 1746: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.126930832862854
    2. 'not' → logprob: -2.1269307136535645
    3. '                   ' → logprob: -13.251931190490723
    4. '	not' → logprob: -14.001931190490723
    5. '               ' → logprob: -16.126930236816406
    6. '                       ' → logprob: -17.126930236816406
    7. ':not' → logprob: -17.626930236816406
    8. '
' → logprob: -17.626930236816406
    9. '                    ' → logprob: -18.626930236816406
    10. '           ' → logprob: -18.626930236816406

Token 1747: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10022219270467758
    2. ' in' → logprob: -2.350222110748291
    3. '                   ' → logprob: -11.47522258758545
    4. 'visited' → logprob: -13.22522258758545
    5. 'not' → logprob: -14.10022258758545
    6. '[in' → logprob: -14.22522258758545
    7. '	in' → logprob: -14.85022258758545
    8. '               ' → logprob: -15.10022258758545
    9. '[' → logprob: -15.35022258758545
    10. '                  ' → logprob: -15.85022258758545

Token 1748: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.306760805164231e-05
    2. ' visited' → logprob: -11.25001335144043
    3. 'seen' → logprob: -20.25001335144043
    4. '
' → logprob: -20.62501335144043
    5. 'stack' → logprob: -20.75001335144043
    6. '   ' → logprob: -21.75001335144043
    7. 'Visited' → logprob: -21.75001335144043
    8. '```' → logprob: -22.37501335144043
    9. 'visible' → logprob: -23.12501335144043
    10. ' ' → logprob: -23.50001335144043

Token 1749: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10767166316509247
    2. ':
' → logprob: -2.3576717376708984
    3. '                   ' → logprob: -5.107671737670898
    4. ':' → logprob: -7.357671737670898
    5. '                           ' → logprob: -7.857671737670898
    6. '):
' → logprob: -8.732671737670898
    7. ' and' → logprob: -9.857671737670898
    8. '               ' → logprob: -10.232671737670898
    9. '                      ' → logprob: -10.857671737670898
    10. '(stack' → logprob: -11.232671737670898

Token 1750: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -5.538490950129926e-05
    2. 'stack' → logprob: -10.500055313110352
    3. '                   ' → logprob: -11.250055313110352
    4. ' stack' → logprob: -11.500055313110352
    5. '                           ' → logprob: -12.875055313110352
    6. '                      ' → logprob: -14.250055313110352
    7. '                     ' → logprob: -15.250055313110352
    8. '```' → logprob: -15.375055313110352
    9. '(stack' → logprob: -15.625055313110352
    10. '                    ' → logprob: -15.750055313110352

Token 1751: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.001984663773328066
    2. ' stack' → logprob: -6.251984596252441
    3. '                           ' → logprob: -10.001984596252441
    4. '                       ' → logprob: -11.501984596252441
    5. '                               ' → logprob: -14.626984596252441
    6. '                   ' → logprob: -16.376985549926758
    7. '	stack' → logprob: -16.376985549926758
    8. '(stack' → logprob: -17.126985549926758
    9. '_stack' → logprob: -17.876985549926758
    10. '   ' → logprob: -18.001985549926758

Token 1752: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.65101717156358e-05
    2. '.' → logprob: -9.375096321105957
    3. '.extend' → logprob: -12.500096321105957
    4. 'append' → logprob: -12.875096321105957
    5. '                           ' → logprob: -12.875096321105957
    6. '                       ' → logprob: -13.500096321105957
    7. ' .' → logprob: -14.125096321105957
    8. '.push' → logprob: -14.875096321105957
    9. '                   ' → logprob: -17.000097274780273
    10. '                               ' → logprob: -17.250097274780273

Token 1753: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023083435371518135
    2. '(' → logprob: -8.37523078918457
    3. '((' → logprob: -16.75023078918457
    4. 'n' → logprob: -17.00023078918457
    5. '(
' → logprob: -17.25023078918457
    6. '(ne' → logprob: -17.25023078918457
    7. '('' → logprob: -17.37523078918457
    8. '(nx' → logprob: -18.37523078918457
    9. ' (' → logprob: -19.25023078918457
    10. '(noun' → logprob: -19.87523078918457

Token 1754: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00010032468708232045
    2. 'n' → logprob: -9.250100135803223
    3. '(ex' → logprob: -13.000100135803223
    4. 'e' → logprob: -14.000100135803223
    5. '(n' → logprob: -14.000100135803223
    6. 'x' → logprob: -15.625100135803223
    7. ' nex' → logprob: -16.75010108947754
    8. '[' → logprob: -18.37510108947754
    9. '```' → logprob: -18.75010108947754
    10. '[n' → logprob: -19.25010108947754

Token 1755: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.843177233240567e-05
    2. ')
' → logprob: -11.750018119812012
    3. ' )' → logprob: -12.000018119812012
    4. ')n' → logprob: -13.750018119812012
    5. '                       ' → logprob: -14.000018119812012
    6. '<|end|>' → logprob: -14.625018119812012
    7. '                   ' → logprob: -15.125018119812012
    8. ']' → logprob: -15.375018119812012
    9. '       ' → logprob: -15.750018119812012
    10. 'n' → logprob: -16.000019073486328

Token 1756: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002210596576333046
    2. '       ' → logprob: -9.625221252441406
    3. '                       ' → logprob: -9.875221252441406
    4. '               ' → logprob: -10.750221252441406
    5. '```' → logprob: -11.000221252441406
    6. '   ' → logprob: -11.125221252441406
    7. '		' → logprob: -11.375221252441406
    8. '                   ' → logprob: -11.625221252441406
    9. '
' → logprob: -11.750221252441406
    10. 'print' → logprob: -12.125221252441406

Token 1757: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10822705924510956
    2. 'if' → logprob: -2.483227014541626
    3. '```' → logprob: -4.608227252960205
    4. 'print' (adapté à ' print') → logprob: -5.733227252960205
    5. '
' → logprob: -6.108227252960205
    6. '       ' → logprob: -6.483227252960205
    7. ' if' → logprob: -6.733227252960205
    8. '               ' → logprob: -7.858227252960205
    9. '   ' → logprob: -8.233226776123047
    10. '                   ' → logprob: -9.858226776123047

Token 1758: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005430232849903405
    2. '('' → logprob: -8.000542640686035
    3. '(' → logprob: -8.500542640686035
    4. '("("' → logprob: -13.250542640686035
    5. '(("' → logprob: -13.875542640686035
    6. '"' → logprob: -14.250542640686035
    7. '(""' → logprob: -14.625542640686035
    8. '(
' → logprob: -15.250542640686035
    9. '(True' → logprob: -16.87554359436035
    10. '(found' → logprob: -17.00054359436035

Token 1759: 'YES' (ID: 31958)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0004176833899691701
    2. ''' → logprob: -7.875417709350586
    3. 'YES' → logprob: -10.375417709350586
    4. ' "' → logprob: -12.750417709350586
    5. '("' → logprob: -13.125417709350586
    6. '   ' → logprob: -14.125417709350586
    7. ''"' → logprob: -15.625417709350586
    8. '"O' → logprob: -16.375417709350586
    9. '"No' → logprob: -17.000417709350586
    10. 'Yes' → logprob: -17.000417709350586

Token 1760: '"' (ID: 1)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6941176056861877
    2. ' if' → logprob: -0.6941176056861877
    3. 'else' → logprob: -7.819117546081543
    4. ')' → logprob: -8.194117546081543
    5. '           ' → logprob: -8.694117546081543
    6. '       ' → logprob: -9.569117546081543
    7. 'elif' → logprob: -10.319117546081543
    8. '   ' → logprob: -11.569117546081543
    9. '	if' → logprob: -12.819117546081543
    10. '```' → logprob: -12.944117546081543

Token 1761: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3891008794307709
    2. 'if' → logprob: -1.1391009092330933
    3. ')' → logprob: -6.264101028442383
    4. '           ' → logprob: -8.264101028442383
    5. '       ' → logprob: -10.139101028442383
    6. 'else' → logprob: -11.639101028442383
    7. '	if' → logprob: -12.264101028442383
    8. '   ' → logprob: -12.389101028442383
    9. 'elif' → logprob: -12.389101028442383
    10. '```' → logprob: -13.764101028442383

Token 1762: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.00861468818038702
    2. ' found' → logprob: -4.758614540100098
    3. '(found' → logprob: -15.758614540100098
    4. '	found' → logprob: -17.758615493774414
    5. 'find' → logprob: -19.008615493774414
    6. '   ' → logprob: -19.883615493774414
    7. 'Found' → logprob: -20.008615493774414
    8. '_found' → logprob: -20.758615493774414
    9. 'FOUND' → logprob: -21.133615493774414
    10. '"' → logprob: -21.133615493774414

Token 1763: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5770940780639648
    2. ' else' → logprob: -0.8270940780639648
    3. ')' → logprob: -7.327094078063965
    4. '           ' → logprob: -7.952094078063965
    5. '               ' → logprob: -9.077094078063965
    6. '                   ' → logprob: -12.077094078063965
    7. '<|end|>' → logprob: -12.452094078063965
    8. '==' → logprob: -12.702094078063965
    9. '	else' → logprob: -12.827094078063965
    10. '                               ' → logprob: -13.327094078063965

Token 1764: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0009289718000218272
    2. ' "' → logprob: -7.00092887878418
    3. '"No' → logprob: -11.00092887878418
    4. '("' → logprob: -14.75092887878418
    5. '   ' → logprob: -15.00092887878418
    6. ''' → logprob: -15.87592887878418
    7. '
' → logprob: -16.87592887878418
    8. 'NO' → logprob: -17.50092887878418
    9. ' ' → logprob: -17.62592887878418
    10. '	' → logprob: -17.62592887878418

Token 1765: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.3869119882583618
    2. '"' → logprob: -1.1369119882583618
    3. '"No' → logprob: -10.13691234588623
    4. ''' → logprob: -13.88691234588623
    5. 'No' → logprob: -15.63691234588623
    6. ' NO' → logprob: -16.636911392211914
    7. '(NO' → logprob: -16.761911392211914
    8. '.NO' → logprob: -17.136911392211914
    9. '   ' → logprob: -17.386911392211914
    10. ' ' → logprob: -17.636911392211914

Token 1766: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020461321400944144
    2. '")' → logprob: -8.875205039978027
    3. '())' → logprob: -10.500205039978027
    4. '<|end|>' → logprob: -11.500205039978027
    5. '')' → logprob: -11.625205039978027
    6. ')
' → logprob: -11.750205039978027
    7. '           ' → logprob: -13.125205039978027
    8. '`)' → logprob: -13.250205039978027
    9. '```' → logprob: -13.500205039978027
    10. '       ' → logprob: -13.500205039978027

Token 1767: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1768: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03810964897274971
    2. '__' → logprob: -3.288109540939331
    3. '_' → logprob: -10.66310977935791
    4. ' ' → logprob: -11.28810977935791
    5. ' main' → logprob: -11.53810977935791
    6. ' _' → logprob: -11.66310977935791
    7. 'main' → logprob: -12.28810977935791
    8. ' ' → logprob: -13.16310977935791
    9. '_name' → logprob: -13.53810977935791
    10. '___' → logprob: -13.78810977935791

Token 1769: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005703854374587536
    2. '==' → logprob: -5.880703926086426
    3. ' ==' → logprob: -6.255703926086426
    4. 'name' → logprob: -7.130703926086426
    5. 'if' → logprob: -9.505703926086426
    6. '=="' → logprob: -10.005703926086426
    7. '```' → logprob: -11.380703926086426
    8. ' __' → logprob: -11.630703926086426
    9. '=='' → logprob: -11.880703926086426
    10. '__.__' → logprob: -12.130703926086426

Token 1770: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.3676733690081164e-05
    2. '__.__' → logprob: -11.37502384185791
    3. '==' → logprob: -11.62502384185791
    4. '____' → logprob: -14.12502384185791
    5. '=="' → logprob: -14.75002384185791
    6. '__('' → logprob: -14.75002384185791
    7. '___' → logprob: -14.75002384185791
    8. '__.' → logprob: -15.37502384185791
    9. ' ==' → logprob: -15.75002384185791
    10. '__["' → logprob: -15.87502384185791

Token 1771: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.031278617680072784
    2. '==' → logprob: -3.656278610229492
    3. '=='' → logprob: -6.031278610229492
    4. ' ==' → logprob: -6.281278610229492
    5. '=="' → logprob: -7.656278610229492
    6. '__.__' → logprob: -9.781278610229492
    7. '__('' → logprob: -10.031278610229492
    8. ''' → logprob: -10.656278610229492
    9. '('__' → logprob: -11.406278610229492
    10. '__':
' → logprob: -11.406278610229492

Token 1772: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03805388882756233
    2. ''' → logprob: -3.2880539894104004
    3. '__' → logprob: -11.413053512573242
    4. ''"' → logprob: -14.538053512573242
    5. ' "__' → logprob: -14.663053512573242
    6. '"name' → logprob: -16.038053512573242
    7. '"'' → logprob: -16.663053512573242
    8. ' '__' → logprob: -16.788053512573242
    9. '   ' → logprob: -16.788053512573242
    10. '"class' → logprob: -17.288053512573242

Token 1773: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011430688202381134
    2. '__' → logprob: -4.511430740356445
    3. 'name' → logprob: -8.511430740356445
    4. '__":
' → logprob: -9.136430740356445
    5. '"' → logprob: -9.761430740356445
    6. ''' → logprob: -12.136430740356445
    7. '__':
' → logprob: -12.511430740356445
    8. 'built' → logprob: -13.761430740356445
    9. ' main' → logprob: -14.136430740356445
    10. 'python' → logprob: -14.261430740356445

Token 1774: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.049723416566848755
    2. '__' → logprob: -3.0497233867645264
    3. '__':
' → logprob: -6.7997236251831055
    4. '():
' → logprob: -12.174723625183105
    5. '__["' → logprob: -12.174723625183105
    6. '__.__' → logprob: -12.424723625183105
    7. '__.' → logprob: -13.424723625183105
    8. '__
' → logprob: -13.674723625183105
    9. '__:' → logprob: -13.924723625183105
    10. '__()
' → logprob: -14.049723625183105

Token 1775: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1097276583313942
    2. '   ' → logprob: -2.484727621078491
    3. '	main' → logprob: -4.35972785949707
    4. ' main' → logprob: -4.85972785949707
    5. '_main' → logprob: -10.98472785949707
    6. ' ' → logprob: -11.48472785949707
    7. '  ' → logprob: -12.73472785949707
    8. '(main' → logprob: -13.23472785949707
    9. 'import' → logprob: -13.48472785949707
    10. '    
' → logprob: -14.35972785949707

Token 1776: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -17.0
    4. '_main' → logprob: -18.875
    5. '(main' → logprob: -20.125
    6. '   ' → logprob: -20.5
    7. '.main' → logprob: -21.375
    8. 'mainwindow' → logprob: -22.5
    9. 'import' → logprob: -22.875
    10. 'Main' → logprob: -23.125

Token 1777: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1775
Tokens correctement prédits (1ère position, stricte): 563
Tokens correctement prédits (1ère position, avec adaptation): 623
Tokens correctement prédits (top 10): 1303
Précision stricte (1ère position): 31.72%
Précision adaptée (1ère position): 35.10%
Précision (top 10): 73.41%
================================================================================
